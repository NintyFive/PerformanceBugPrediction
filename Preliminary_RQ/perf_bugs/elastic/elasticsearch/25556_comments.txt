[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/313137864","html_url":"https://github.com/elastic/elasticsearch/issues/25556#issuecomment-313137864","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25556","id":313137864,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMzEzNzg2NA==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2017-07-05T15:27:52Z","updated_at":"2017-07-05T15:27:52Z","author_association":"MEMBER","body":"Relates to https://github.com/elastic/kibana/issues/12097, Kibana needs to change to using `*:*` for a query rather than just `*` to mitigate this.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/313143096","html_url":"https://github.com/elastic/elasticsearch/issues/25556#issuecomment-313143096","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25556","id":313143096,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMzE0MzA5Ng==","user":{"login":"jorgelbg","id":1291846,"node_id":"MDQ6VXNlcjEyOTE4NDY=","avatar_url":"https://avatars2.githubusercontent.com/u/1291846?v=4","gravatar_id":"","url":"https://api.github.com/users/jorgelbg","html_url":"https://github.com/jorgelbg","followers_url":"https://api.github.com/users/jorgelbg/followers","following_url":"https://api.github.com/users/jorgelbg/following{/other_user}","gists_url":"https://api.github.com/users/jorgelbg/gists{/gist_id}","starred_url":"https://api.github.com/users/jorgelbg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jorgelbg/subscriptions","organizations_url":"https://api.github.com/users/jorgelbg/orgs","repos_url":"https://api.github.com/users/jorgelbg/repos","events_url":"https://api.github.com/users/jorgelbg/events{/privacy}","received_events_url":"https://api.github.com/users/jorgelbg/received_events","type":"User","site_admin":false},"created_at":"2017-07-05T15:45:22Z","updated_at":"2017-07-05T16:06:47Z","author_association":"NONE","body":"It's true that kibana should default to the match_all query on discovery only limited by the time range, but on the other hand, in this case, a '*' query is not going to mean a `match_all` query anymore but rather \"everything with some value in some field\" which is definitively slow on any big setup, beyond the Kibana issue is something that could cause problems for anyone upgrading, in this case happens that is used by default on kibana.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/313144781","html_url":"https://github.com/elastic/elasticsearch/issues/25556#issuecomment-313144781","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25556","id":313144781,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMzE0NDc4MQ==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2017-07-05T15:50:59Z","updated_at":"2017-07-05T15:50:59Z","author_association":"MEMBER","body":"> a '*' query is not going to mean a match_all query anymore but rather \"everything with some value in some field\" which is definitively slow on any big setup, beyond the Kibana issue is something that could cause issues for anyone upgrading\r\n\r\nI agree, I believe that we should special case `*` to be a match all query. The issue with expanding to field names was introduced in https://github.com/elastic/elasticsearch/pull/23433, so @jimczi: how would you feel about special-casing `*` to be a `MatchAllDocsQuery` internally? I think the `foo:*` case is still important, so it would apply *only* to \r\n\r\n```json\r\n{\r\n  \"query\": {\r\n    \"query_string\": {\r\n      \"query\": \"*\"\r\n    }\r\n  }\r\n}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/313649810","html_url":"https://github.com/elastic/elasticsearch/issues/25556#issuecomment-313649810","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25556","id":313649810,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMzY0OTgxMA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-07-07T10:47:53Z","updated_at":"2017-07-07T10:47:53Z","author_association":"MEMBER","body":"> how would you feel about special-casing * to be a MatchAllDocsQuery internally\r\n\r\nI think we should do https://github.com/elastic/elasticsearch/issues/25551 first and then we can have a special case for:\r\n\r\n````\r\n{\r\n  \"query\": {\r\n    \"query_string\": {\r\n      \"query\": \"*\",\r\n      \"fields\": \"*\"\r\n    }\r\n  }\r\n}\r\n````\r\n\r\n... which seems more natural since it will rewrite this query as a real `*:*`.\r\nThen if `_all` is deactivated and the default search field is not specified, any `query_string` query would default to `fields:*` and the optim could be applied in this context seamlessly.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/314021087","html_url":"https://github.com/elastic/elasticsearch/issues/25556#issuecomment-314021087","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25556","id":314021087,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNDAyMTA4Nw==","user":{"login":"akotlar","id":5543229,"node_id":"MDQ6VXNlcjU1NDMyMjk=","avatar_url":"https://avatars1.githubusercontent.com/u/5543229?v=4","gravatar_id":"","url":"https://api.github.com/users/akotlar","html_url":"https://github.com/akotlar","followers_url":"https://api.github.com/users/akotlar/followers","following_url":"https://api.github.com/users/akotlar/following{/other_user}","gists_url":"https://api.github.com/users/akotlar/gists{/gist_id}","starred_url":"https://api.github.com/users/akotlar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akotlar/subscriptions","organizations_url":"https://api.github.com/users/akotlar/orgs","repos_url":"https://api.github.com/users/akotlar/repos","events_url":"https://api.github.com/users/akotlar/events{/privacy}","received_events_url":"https://api.github.com/users/akotlar/received_events","type":"User","site_admin":false},"created_at":"2017-07-10T06:55:07Z","updated_at":"2017-07-10T06:55:07Z","author_association":"NONE","body":"+1. A interface-layer version of this saves me 20s on 89 million records. Thanks for bringing up the issue, I wasn't sure if the performance regression I was seeing was limited to '*' ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/315318924","html_url":"https://github.com/elastic/elasticsearch/issues/25556#issuecomment-315318924","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25556","id":315318924,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNTMxODkyNA==","user":{"login":"jorgelbg","id":1291846,"node_id":"MDQ6VXNlcjEyOTE4NDY=","avatar_url":"https://avatars2.githubusercontent.com/u/1291846?v=4","gravatar_id":"","url":"https://api.github.com/users/jorgelbg","html_url":"https://github.com/jorgelbg","followers_url":"https://api.github.com/users/jorgelbg/followers","following_url":"https://api.github.com/users/jorgelbg/following{/other_user}","gists_url":"https://api.github.com/users/jorgelbg/gists{/gist_id}","starred_url":"https://api.github.com/users/jorgelbg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jorgelbg/subscriptions","organizations_url":"https://api.github.com/users/jorgelbg/orgs","repos_url":"https://api.github.com/users/jorgelbg/repos","events_url":"https://api.github.com/users/jorgelbg/events{/privacy}","received_events_url":"https://api.github.com/users/jorgelbg/received_events","type":"User","site_admin":false},"created_at":"2017-07-14T09:46:40Z","updated_at":"2017-07-14T09:46:40Z","author_association":"NONE","body":"👍  This also has one additional side effect on Kibana/Grafana if you have a lot of visualizations/dashboards already created they have been stored in ES with the \r\n\r\n```\"query\":{\"query_string\":{\"query\":\"*\",\"analyze_wildcard\":true}}``` \r\n\r\nwhich will cause all your visualizations/dashboards to become slower. ","performed_via_github_app":null}]