[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/416205058","html_url":"https://github.com/elastic/elasticsearch/issues/33159#issuecomment-416205058","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33159","id":416205058,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNjIwNTA1OA==","user":{"login":"albertzaharovits","id":4568420,"node_id":"MDQ6VXNlcjQ1Njg0MjA=","avatar_url":"https://avatars2.githubusercontent.com/u/4568420?v=4","gravatar_id":"","url":"https://api.github.com/users/albertzaharovits","html_url":"https://github.com/albertzaharovits","followers_url":"https://api.github.com/users/albertzaharovits/followers","following_url":"https://api.github.com/users/albertzaharovits/following{/other_user}","gists_url":"https://api.github.com/users/albertzaharovits/gists{/gist_id}","starred_url":"https://api.github.com/users/albertzaharovits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertzaharovits/subscriptions","organizations_url":"https://api.github.com/users/albertzaharovits/orgs","repos_url":"https://api.github.com/users/albertzaharovits/repos","events_url":"https://api.github.com/users/albertzaharovits/events{/privacy}","received_events_url":"https://api.github.com/users/albertzaharovits/received_events","type":"User","site_admin":false},"created_at":"2018-08-27T12:05:59Z","updated_at":"2018-08-27T12:05:59Z","author_association":"CONTRIBUTOR","body":"@luyuncheng You seem to be in the know of Lucene datastructures and you are suggesting a concurrency improvement. Although I cannot help with an answer, I will label this issue in the hope it will garner more qualified attention.\r\n\r\nIn the mean time, may you please elaborate your question a bit:\r\n>  I wonder why not use SearcherManager and Concurrent Collector?\r\n\r\nWhere use it? In place of what? Does this improvement sits in the Elasticsearch or the Lucene land?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/416205200","html_url":"https://github.com/elastic/elasticsearch/issues/33159#issuecomment-416205200","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33159","id":416205200,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNjIwNTIwMA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-08-27T12:06:44Z","updated_at":"2018-08-27T12:06:44Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/416218014","html_url":"https://github.com/elastic/elasticsearch/issues/33159#issuecomment-416218014","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33159","id":416218014,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNjIxODAxNA==","user":{"login":"luyuncheng","id":12760367,"node_id":"MDQ6VXNlcjEyNzYwMzY3","avatar_url":"https://avatars1.githubusercontent.com/u/12760367?v=4","gravatar_id":"","url":"https://api.github.com/users/luyuncheng","html_url":"https://github.com/luyuncheng","followers_url":"https://api.github.com/users/luyuncheng/followers","following_url":"https://api.github.com/users/luyuncheng/following{/other_user}","gists_url":"https://api.github.com/users/luyuncheng/gists{/gist_id}","starred_url":"https://api.github.com/users/luyuncheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luyuncheng/subscriptions","organizations_url":"https://api.github.com/users/luyuncheng/orgs","repos_url":"https://api.github.com/users/luyuncheng/repos","events_url":"https://api.github.com/users/luyuncheng/events{/privacy}","received_events_url":"https://api.github.com/users/luyuncheng/received_events","type":"User","site_admin":false},"created_at":"2018-08-27T12:59:11Z","updated_at":"2018-08-27T12:59:11Z","author_association":"NONE","body":"@albertzaharovits As a example in es6.3.2, and lucene7.3.1, when QueryPhase do the searcher.search(query, queryCollector) job, it jump to Lucene IndexSearcher's search function. this function is lower-level search API.  All the search operation only in one thread like Read Segment, Collect field etc. However, another search API with collectorManager it can slice LeafReader which is multi thread. is it  more efficient for search job? \r\nI think this improvement sits in the ES land.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/426247496","html_url":"https://github.com/elastic/elasticsearch/issues/33159#issuecomment-426247496","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33159","id":426247496,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNjI0NzQ5Ng==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2018-10-02T12:02:12Z","updated_at":"2018-10-02T12:02:12Z","author_association":"MEMBER","body":"hi @luyuncheng sorry it has taken a while to get back to you. If I understand correctly, you are referring to the fact that each segment is a searchable inverted index, yet Elasticsearch searches through each segments belonging to an index in a sequential manner. We will discuss your suggestion with the team and see whether this part can be improved.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/426287583","html_url":"https://github.com/elastic/elasticsearch/issues/33159#issuecomment-426287583","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33159","id":426287583,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNjI4NzU4Mw==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2018-10-02T14:08:21Z","updated_at":"2018-10-02T14:08:21Z","author_association":"MEMBER","body":"@luyuncheng Elasticsearch provides parallelisation of reads on the request level. It is expected that a shard will be serving multiple requests concurrently and therefore the parallelisation can be achieved in processing multiple requests concurrently rather than trying to concentrate on parallelising an individual request. We have found that combining concurrent requests with parallel segment readers does not offer any performance benefits and actually can hurt performance because of the cost of context switching so to keep the model simple we prefer to concentrate on keeping each search request processed on a single thread but support processing multiple search requests concurrently. I hope this answers you question.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/437365725","html_url":"https://github.com/elastic/elasticsearch/issues/33159#issuecomment-437365725","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33159","id":437365725,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNzM2NTcyNQ==","user":{"login":"luyuncheng","id":12760367,"node_id":"MDQ6VXNlcjEyNzYwMzY3","avatar_url":"https://avatars1.githubusercontent.com/u/12760367?v=4","gravatar_id":"","url":"https://api.github.com/users/luyuncheng","html_url":"https://github.com/luyuncheng","followers_url":"https://api.github.com/users/luyuncheng/followers","following_url":"https://api.github.com/users/luyuncheng/following{/other_user}","gists_url":"https://api.github.com/users/luyuncheng/gists{/gist_id}","starred_url":"https://api.github.com/users/luyuncheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luyuncheng/subscriptions","organizations_url":"https://api.github.com/users/luyuncheng/orgs","repos_url":"https://api.github.com/users/luyuncheng/repos","events_url":"https://api.github.com/users/luyuncheng/events{/privacy}","received_events_url":"https://api.github.com/users/luyuncheng/received_events","type":"User","site_admin":false},"created_at":"2018-11-09T13:53:10Z","updated_at":"2018-11-09T13:53:10Z","author_association":"NONE","body":"@colings86   Thanks for answer it","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/595160533","html_url":"https://github.com/elastic/elasticsearch/issues/33159#issuecomment-595160533","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33159","id":595160533,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTE2MDUzMw==","user":{"login":"nitin2goyal","id":4218157,"node_id":"MDQ6VXNlcjQyMTgxNTc=","avatar_url":"https://avatars1.githubusercontent.com/u/4218157?v=4","gravatar_id":"","url":"https://api.github.com/users/nitin2goyal","html_url":"https://github.com/nitin2goyal","followers_url":"https://api.github.com/users/nitin2goyal/followers","following_url":"https://api.github.com/users/nitin2goyal/following{/other_user}","gists_url":"https://api.github.com/users/nitin2goyal/gists{/gist_id}","starred_url":"https://api.github.com/users/nitin2goyal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nitin2goyal/subscriptions","organizations_url":"https://api.github.com/users/nitin2goyal/orgs","repos_url":"https://api.github.com/users/nitin2goyal/repos","events_url":"https://api.github.com/users/nitin2goyal/events{/privacy}","received_events_url":"https://api.github.com/users/nitin2goyal/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T10:42:54Z","updated_at":"2020-03-05T10:43:23Z","author_association":"CONTRIBUTOR","body":"@colings86 @jpountz Sorry for commenting on an old/closed thread. We have use case where we don't have many concurrent queries at any given time but we suffer from latencies due to sequential segment search (though we have enough compute to spare). So we end up having higher latencies and under utilised compute. So, I was thinking to make use of Lucene's concurrent searcher and wanted to understand what could be other caveats.\r\n\r\nFrom what I understand, there would be 2 things that we would need to do -\r\n\r\n1. Create a new search context per segment having it's own bigArrays object. This might result in more memory/GC ?\r\n\r\n2. Reduce the segments results in collector manager reduce like Elasticsearch does in SearhPhaseController.\r\n\r\nEven though I understand ES team doesn't want to move in that direction, I just wanted to check if I can live with a patch at my end without making it complex and I am not missing anything. \r\n\r\nIt would help me a lot if you could review the above approach and may have been discussed internally earlier with some different/same approach?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/595169687","html_url":"https://github.com/elastic/elasticsearch/issues/33159#issuecomment-595169687","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33159","id":595169687,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTE2OTY4Nw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T11:02:50Z","updated_at":"2020-03-05T11:02:50Z","author_association":"CONTRIBUTOR","body":"@nitin2goyal We might move in this direction one day, though it's right it's not a priority. I'm afraid it's more complex than what you suggested. I don't have all the details but I remember that @s1monw looked into what it would take to start searching shards concurrently and this raised a number of interesting problems.","performed_via_github_app":null}]