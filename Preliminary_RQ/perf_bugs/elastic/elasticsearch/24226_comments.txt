[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/295934973","html_url":"https://github.com/elastic/elasticsearch/issues/24226#issuecomment-295934973","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24226","id":295934973,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTkzNDk3Mw==","user":{"login":"jprante","id":635745,"node_id":"MDQ6VXNlcjYzNTc0NQ==","avatar_url":"https://avatars1.githubusercontent.com/u/635745?v=4","gravatar_id":"","url":"https://api.github.com/users/jprante","html_url":"https://github.com/jprante","followers_url":"https://api.github.com/users/jprante/followers","following_url":"https://api.github.com/users/jprante/following{/other_user}","gists_url":"https://api.github.com/users/jprante/gists{/gist_id}","starred_url":"https://api.github.com/users/jprante/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jprante/subscriptions","organizations_url":"https://api.github.com/users/jprante/orgs","repos_url":"https://api.github.com/users/jprante/repos","events_url":"https://api.github.com/users/jprante/events{/privacy}","received_events_url":"https://api.github.com/users/jprante/received_events","type":"User","site_admin":false},"created_at":"2017-04-20T22:02:19Z","updated_at":"2017-04-20T22:02:19Z","author_association":"CONTRIBUTOR","body":"A first step could be to share your findings, by posting it somewhere. \r\n\r\nBecause I'm also interested in any hints from \"code quality measures\", I could also try to run Sonarqube / Findbugs over the code base.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/295978339","html_url":"https://github.com/elastic/elasticsearch/issues/24226#issuecomment-295978339","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24226","id":295978339,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTk3ODMzOQ==","user":{"login":"KoenDG","id":1440619,"node_id":"MDQ6VXNlcjE0NDA2MTk=","avatar_url":"https://avatars3.githubusercontent.com/u/1440619?v=4","gravatar_id":"","url":"https://api.github.com/users/KoenDG","html_url":"https://github.com/KoenDG","followers_url":"https://api.github.com/users/KoenDG/followers","following_url":"https://api.github.com/users/KoenDG/following{/other_user}","gists_url":"https://api.github.com/users/KoenDG/gists{/gist_id}","starred_url":"https://api.github.com/users/KoenDG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KoenDG/subscriptions","organizations_url":"https://api.github.com/users/KoenDG/orgs","repos_url":"https://api.github.com/users/KoenDG/repos","events_url":"https://api.github.com/users/KoenDG/events{/privacy}","received_events_url":"https://api.github.com/users/KoenDG/received_events","type":"User","site_admin":false},"created_at":"2017-04-21T00:05:00Z","updated_at":"2017-04-21T00:27:04Z","author_association":"CONTRIBUTOR","body":"I'll have the test suite run again overnight and then post it again after I get back from work. I'm from Belgium so I'm in a GMT+1 timezone.\r\n\r\nI don't have a personal blog, never felt the need. Also, posting it here first felt like the right way of going about it.\r\n\r\nNow, we're talking thousands of notifications and it is advised to look at them individually because the analyzer looks for general patterns that are considered bad **most of the time**.\r\n\r\nFor instance, have a look at this: [https://github.com/elastic/elasticsearch/blob/master/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequest.java#L113](https://github.com/elastic/elasticsearch/blob/master/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequest.java#L113)\r\n\r\nIntellij reports this as using `==` to compare 2 arrays, instead of `Arrays.equals()`. Sounds like a good thing to point out, right?\r\n\r\nBut if you look at the code around this point, you'll find that it was set up like this on purpose. As long as nobody pushes a new array of Feature enums to this point in the code, the if statement will always be true. Since the object was set to be the same on lines 99 and 100, `==` is guaranteed to return `true`. Sure, you could do `Arrays.equals`, but that would be slower. Even when the array is no longer the same, `Arrays.equals` is not needed to prove this, simply assessing that the array isn't the same as the static one defined at class level is enough. Even in the case where someone manages to push an array with the exact same content, as the original, having `==` compare it would probably still be faster than `Arrays.equals`.\r\n\r\nHow much faster? Nanoseconds? Either way, no need to go and make it slower by adding the \"correct\" way, at this point.\r\n\r\nSuggestions by static analysis tools should not be blindly accepted.\r\n\r\nLike this: [https://github.com/elastic/elasticsearch/blob/master/core/src/main/java/org/elasticsearch/common/lucene/index/ElasticsearchLeafReader.java#L70](https://github.com/elastic/elasticsearch/blob/master/core/src/main/java/org/elasticsearch/common/lucene/index/ElasticsearchLeafReader.java#L70)\r\n\r\nThis could be replaced by:\r\n```\r\nwhile (true) {\r\n    if (reader instanceof FilterLeafReader) {\r\n        if (reader instanceof ElasticsearchLeafReader) {\r\n            return (ElasticsearchLeafReader) reader;\r\n        } else {\r\n            // We need to use FilterLeafReader#getDelegate and not FilterLeafReader#unwrap, because\r\n            // If there are multiple levels of filtered leaf readers then with the unwrap() method it immediately\r\n            // returns the most inner leaf reader and thus skipping of over any other filtered leaf reader that\r\n            // may be instance of ElasticsearchLeafReader. This can cause us to miss the shardId.\r\n            reader = ((FilterLeafReader) reader).getDelegate();\r\n            continue;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n```\r\nUpdating the `reader` variable and then continuing. The effect is the exact same as letting it unconditionally perform recursion on itself, except in this case, it just updates a variable instead of doing a method call and going 1 level deeper for the `return` every time.\r\n\r\nBut in this specific case, it might only be 1 step deep. So is it justified? Intellij states the change is **considerably** faster on JVMs that don't perform this optimization by themselves. Because some JVMs actually do this for you.\r\n\r\nThere are another 18 warnings for tail recursion being used somewhere in the `core` folder: http://i.imgur.com/B33DLBI.png\r\n\r\nI've already pushed a small piece of what was found: [https://github.com/elastic/elasticsearch/compare/master...KoenDG:staticanalysis](https://github.com/elastic/elasticsearch/compare/master...KoenDG:staticanalysis)\r\n\r\nBut any PR I push on this subject will be smaller and focussed on 1 or 2 categories. Has to stay simple to review. Better lots of small PRs than 1 big that nobody can read.\r\n\r\n\r\nLast point: I'd also like to point out Google's \"Error Prone\" compiler: [https://github.com/google/error-prone](https://github.com/google/error-prone)\r\n\r\nThe installation page shows there is a gradle plugin: [http://errorprone.info/docs/installation](http://errorprone.info/docs/installation)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/296118761","html_url":"https://github.com/elastic/elasticsearch/issues/24226#issuecomment-296118761","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24226","id":296118761,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NjExODc2MQ==","user":{"login":"KoenDG","id":1440619,"node_id":"MDQ6VXNlcjE0NDA2MTk=","avatar_url":"https://avatars3.githubusercontent.com/u/1440619?v=4","gravatar_id":"","url":"https://api.github.com/users/KoenDG","html_url":"https://github.com/KoenDG","followers_url":"https://api.github.com/users/KoenDG/followers","following_url":"https://api.github.com/users/KoenDG/following{/other_user}","gists_url":"https://api.github.com/users/KoenDG/gists{/gist_id}","starred_url":"https://api.github.com/users/KoenDG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KoenDG/subscriptions","organizations_url":"https://api.github.com/users/KoenDG/orgs","repos_url":"https://api.github.com/users/KoenDG/repos","events_url":"https://api.github.com/users/KoenDG/events{/privacy}","received_events_url":"https://api.github.com/users/KoenDG/received_events","type":"User","site_admin":false},"created_at":"2017-04-21T08:06:41Z","updated_at":"2017-04-21T08:06:41Z","author_association":"CONTRIBUTOR","body":"This is the result for the `core` folder: http://i.imgur.com/GvDaLQa.png","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/297106195","html_url":"https://github.com/elastic/elasticsearch/issues/24226#issuecomment-297106195","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24226","id":297106195,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NzEwNjE5NQ==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2017-04-25T17:31:37Z","updated_at":"2017-04-25T17:31:37Z","author_association":"MEMBER","body":"My recommendation would be to target the top N most impactful changes (I don't know what N is), rather than submitting micro-optimizations that might not matter, might harm readability, and take time to process.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/297122254","html_url":"https://github.com/elastic/elasticsearch/issues/24226#issuecomment-297122254","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24226","id":297122254,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NzEyMjI1NA==","user":{"login":"KoenDG","id":1440619,"node_id":"MDQ6VXNlcjE0NDA2MTk=","avatar_url":"https://avatars3.githubusercontent.com/u/1440619?v=4","gravatar_id":"","url":"https://api.github.com/users/KoenDG","html_url":"https://github.com/KoenDG","followers_url":"https://api.github.com/users/KoenDG/followers","following_url":"https://api.github.com/users/KoenDG/following{/other_user}","gists_url":"https://api.github.com/users/KoenDG/gists{/gist_id}","starred_url":"https://api.github.com/users/KoenDG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KoenDG/subscriptions","organizations_url":"https://api.github.com/users/KoenDG/orgs","repos_url":"https://api.github.com/users/KoenDG/repos","events_url":"https://api.github.com/users/KoenDG/events{/privacy}","received_events_url":"https://api.github.com/users/KoenDG/received_events","type":"User","site_admin":false},"created_at":"2017-04-25T18:26:20Z","updated_at":"2017-04-25T18:26:20Z","author_association":"CONTRIBUTOR","body":"@jasontedor I have struggled with this in the past and most of the time found that going for \"top-X most important\" can create a lot of unpleasant discussion as to what is actually most important. As such, I avoid it entirely. If something is an optimization that has no possible negative side effects, I will present it. I can make the PR's somewhat bigger, say 3-4 subjects per PR. And if a maintainer would like something looked at before anything else, I'd certainly be up for that.\r\n\r\nReadability is, of course, paramount. I experience this myself in my own work. If a person has limited time to work on something, all the time spent reading and trying to understand is time taken away from writing. All cases where readability is impaired should be fixed/not merged. It is, for me, the most important aspect of coding.\r\n\r\nAs such, I feel that what we intend the code to do, should be readable in the code, rather than assuming the compiler will optimize our constructs for us.\r\n\r\nIn my personal projects, I make very liberal use of the `final` keyword. This is not, as is the trend to accuse, for performance reasons. The compiler is perfectly capable of detecting that a variable will receive no further assignment in the code. No, this is to make it clear when I come back half a year later that a variable will not be assigned to again after it was declared. Or that a class cannot be subclassed.\r\n\r\nAs for micro-optimizations: many small make one great. It's true that the PRs I made so far are tiny, but this is on purpose. Readability is key, as I already stated. By making it so small, the point is immediately obvious(that's the intention anyway) and the code very readable. One could then say \"Only this? It's so little and so minute in effect, will it actually matter\"? And they'd be right if I were to stop there. But I'm not planning to.\r\n\r\nIf I'm going to go over the analyses that Intellij, findbugs and google's error-prone have to offer, I might as well go over them all.\r\n\r\nThat being said, if anyone actually has a list of things they want to be looked at first in terms of memory/performance optimizations, I'm all ears.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/297195503","html_url":"https://github.com/elastic/elasticsearch/issues/24226#issuecomment-297195503","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24226","id":297195503,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NzE5NTUwMw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2017-04-25T23:36:40Z","updated_at":"2017-04-25T23:36:40Z","author_association":"MEMBER","body":"> I have struggled with this in the past and most of the time found that going for \"top-X most important\" can create a lot of unpleasant discussion as to what is actually most important.\r\n\r\nI think it's fine, just use your best judgment. We can error correct if needed.\r\n\r\n> I can make the PR's somewhat bigger, say 3-4 subjects per PR.\r\n\r\nI would prefer that we not do this, I think there were three different changes in #24321 and it would be best to limit it to one.\r\n\r\nI think we are on the same page regarding readability.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/298271300","html_url":"https://github.com/elastic/elasticsearch/issues/24226#issuecomment-298271300","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24226","id":298271300,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODI3MTMwMA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2017-05-01T01:29:03Z","updated_at":"2017-05-01T01:29:03Z","author_association":"MEMBER","body":"I'm going to close this issue as there's no-defined end goal for a clean up like this so there's nothing to track per se (although it's good to keep linking PRs here).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/302561588","html_url":"https://github.com/elastic/elasticsearch/issues/24226#issuecomment-302561588","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24226","id":302561588,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjU2MTU4OA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2017-05-18T22:43:40Z","updated_at":"2017-05-18T23:31:52Z","author_association":"MEMBER","body":"> micro-optimizations that might not matter, might harm readability, and take time to process\r\n\r\nHaving seen several of these now I think that there are better ways to be spending our review/testing time than on these PRs, I do not think these are worth the cost.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/302625897","html_url":"https://github.com/elastic/elasticsearch/issues/24226#issuecomment-302625897","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24226","id":302625897,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjYyNTg5Nw==","user":{"login":"KoenDG","id":1440619,"node_id":"MDQ6VXNlcjE0NDA2MTk=","avatar_url":"https://avatars3.githubusercontent.com/u/1440619?v=4","gravatar_id":"","url":"https://api.github.com/users/KoenDG","html_url":"https://github.com/KoenDG","followers_url":"https://api.github.com/users/KoenDG/followers","following_url":"https://api.github.com/users/KoenDG/following{/other_user}","gists_url":"https://api.github.com/users/KoenDG/gists{/gist_id}","starred_url":"https://api.github.com/users/KoenDG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KoenDG/subscriptions","organizations_url":"https://api.github.com/users/KoenDG/orgs","repos_url":"https://api.github.com/users/KoenDG/repos","events_url":"https://api.github.com/users/KoenDG/events{/privacy}","received_events_url":"https://api.github.com/users/KoenDG/received_events","type":"User","site_admin":false},"created_at":"2017-05-19T07:03:27Z","updated_at":"2017-05-19T07:03:27Z","author_association":"CONTRIBUTOR","body":"The project has more to do than this, perfectly understandable.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/302626406","html_url":"https://github.com/elastic/elasticsearch/issues/24226#issuecomment-302626406","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24226","id":302626406,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjYyNjQwNg==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2017-05-19T07:06:30Z","updated_at":"2017-05-19T07:06:30Z","author_association":"CONTRIBUTOR","body":"@KoenDG thanks for the empathy!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/302632383","html_url":"https://github.com/elastic/elasticsearch/issues/24226#issuecomment-302632383","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24226","id":302632383,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjYzMjM4Mw==","user":{"login":"KoenDG","id":1440619,"node_id":"MDQ6VXNlcjE0NDA2MTk=","avatar_url":"https://avatars3.githubusercontent.com/u/1440619?v=4","gravatar_id":"","url":"https://api.github.com/users/KoenDG","html_url":"https://github.com/KoenDG","followers_url":"https://api.github.com/users/KoenDG/followers","following_url":"https://api.github.com/users/KoenDG/following{/other_user}","gists_url":"https://api.github.com/users/KoenDG/gists{/gist_id}","starred_url":"https://api.github.com/users/KoenDG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KoenDG/subscriptions","organizations_url":"https://api.github.com/users/KoenDG/orgs","repos_url":"https://api.github.com/users/KoenDG/repos","events_url":"https://api.github.com/users/KoenDG/events{/privacy}","received_events_url":"https://api.github.com/users/KoenDG/received_events","type":"User","site_admin":false},"created_at":"2017-05-19T07:39:37Z","updated_at":"2017-05-19T07:41:27Z","author_association":"CONTRIBUTOR","body":"@s1monw No worries, this has always been a \"I have time to spare, lets run a code analysis\" thing for me. I was happy when I got the EnumMap/EnumSet thing merged in.\r\n\r\nLike it was spare time for me, I never intended to take the actual working time from the developers. There shouldn't ever be a point where I'm actually taking time away from the developers from working on new features and such. It was always intended to be \"If you have some spare time, feel free to take a look\".","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/302761270","html_url":"https://github.com/elastic/elasticsearch/issues/24226#issuecomment-302761270","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24226","id":302761270,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjc2MTI3MA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2017-05-19T17:19:04Z","updated_at":"2017-05-19T17:19:04Z","author_association":"MEMBER","body":"Thank you for understanding @KoenDG.","performed_via_github_app":null}]