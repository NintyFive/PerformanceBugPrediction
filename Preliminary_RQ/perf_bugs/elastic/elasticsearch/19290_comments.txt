[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/231070181","html_url":"https://github.com/elastic/elasticsearch/issues/19290#issuecomment-231070181","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19290","id":231070181,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMTA3MDE4MQ==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2016-07-07T13:00:02Z","updated_at":"2016-07-07T13:00:02Z","author_association":"MEMBER","body":"Yes, using source filtering adds an extra overhead compares with no filtering at all. As you said, in order to correctly filters the fields the source of every search hit must be loaded, parsed and then filtered. On 1000 hits that represent a fair amount of work. My own experiment shows that most of the time is spent at loading and parsing time, not at filtering time. But if you have any idea of improvement I'd be glad to discuss and help here.\n\n> In contrast, when you set _source: true so that it returns all fields of the source, the request takes 100ms (but the transfer takes longer if each whole document is big)\n\nRight, when there's no source filtering, the source of every search hit is loaded and passed \"as it is\" to the coordinating node.\n\nOut of curiosity, did you try to use the [Response Filtering](https://www.elastic.co/guide/en/elasticsearch/reference/current/common-options.html#_response_filtering) feature? I think it can filters search hits source now. It should be more efficient in your case because it only filters the \"output\", resulting in less data to transfert over the network.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/231770406","html_url":"https://github.com/elastic/elasticsearch/issues/19290#issuecomment-231770406","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19290","id":231770406,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMTc3MDQwNg==","user":{"login":"luisobo","id":825073,"node_id":"MDQ6VXNlcjgyNTA3Mw==","avatar_url":"https://avatars1.githubusercontent.com/u/825073?v=4","gravatar_id":"","url":"https://api.github.com/users/luisobo","html_url":"https://github.com/luisobo","followers_url":"https://api.github.com/users/luisobo/followers","following_url":"https://api.github.com/users/luisobo/following{/other_user}","gists_url":"https://api.github.com/users/luisobo/gists{/gist_id}","starred_url":"https://api.github.com/users/luisobo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luisobo/subscriptions","organizations_url":"https://api.github.com/users/luisobo/orgs","repos_url":"https://api.github.com/users/luisobo/repos","events_url":"https://api.github.com/users/luisobo/events{/privacy}","received_events_url":"https://api.github.com/users/luisobo/received_events","type":"User","site_admin":false},"created_at":"2016-07-11T15:30:20Z","updated_at":"2016-07-11T15:30:20Z","author_association":"NONE","body":"@tlrx if I understand correctly, loading and parsing time goes to both filtered and non-filtered requests, is this correct? If that is the case, I don't understand why it would only affect source-filtered requests.\n\nIn either case, I'm surprised that filtering 1000 documents takes several seconds. I get that these are nested documents and that there is wildcards involved, still, seconds seems too much, just at an intuition level.\n\nI did use response filtering and it didn't make a difference in my testing.\n\nWhat I had in mind is start by profiling the code and get a better understanding. I wanted to see if anyone had any thoughts or pointers (and comply with the contributing guidelines by opening a ticket first ðŸ˜œ )\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/231771407","html_url":"https://github.com/elastic/elasticsearch/issues/19290#issuecomment-231771407","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19290","id":231771407,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMTc3MTQwNw==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-07-11T15:33:27Z","updated_at":"2016-07-11T15:33:27Z","author_association":"CONTRIBUTOR","body":"> In either case, I'm surprised that filtering 1000 documents takes several seconds.\n\nYeah, it is. It'd be a great thing to profile. We expect not filtering to be much more efficient but I didn't expect it to be _that_ much more efficient.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/231776412","html_url":"https://github.com/elastic/elasticsearch/issues/19290#issuecomment-231776412","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19290","id":231776412,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMTc3NjQxMg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-07-11T15:49:22Z","updated_at":"2016-07-11T15:49:22Z","author_association":"CONTRIBUTOR","body":">  if I understand correctly, loading and parsing time goes to both filtered and non-filtered requests\n\nLoading yes, parsing no.  Non-filtered requests just pass back the binary blob in the JSON, there's no parsing.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/234984824","html_url":"https://github.com/elastic/elasticsearch/issues/19290#issuecomment-234984824","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19290","id":234984824,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNDk4NDgyNA==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2016-07-25T15:18:26Z","updated_at":"2016-07-25T15:18:26Z","author_association":"MEMBER","body":"@luisobo There's certainly a room for improvement, that would be great if you can profile the code. Out of curiosity, how many shards are involved in your bench?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/290715070","html_url":"https://github.com/elastic/elasticsearch/issues/19290#issuecomment-290715070","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19290","id":290715070,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MDcxNTA3MA==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2017-03-31T13:41:42Z","updated_at":"2017-03-31T13:41:42Z","author_association":"MEMBER","body":"No further feedback","performed_via_github_app":null}]