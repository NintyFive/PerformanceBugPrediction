{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/28920","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28920/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28920/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28920/events","html_url":"https://github.com/elastic/elasticsearch/issues/28920","id":302953084,"node_id":"MDU6SXNzdWUzMDI5NTMwODQ=","number":28920,"title":"Slow recovery of write availability after partition of a large cluster","user":{"login":"djjsindy","id":4013873,"node_id":"MDQ6VXNlcjQwMTM4NzM=","avatar_url":"https://avatars2.githubusercontent.com/u/4013873?v=4","gravatar_id":"","url":"https://api.github.com/users/djjsindy","html_url":"https://github.com/djjsindy","followers_url":"https://api.github.com/users/djjsindy/followers","following_url":"https://api.github.com/users/djjsindy/following{/other_user}","gists_url":"https://api.github.com/users/djjsindy/gists{/gist_id}","starred_url":"https://api.github.com/users/djjsindy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/djjsindy/subscriptions","organizations_url":"https://api.github.com/users/djjsindy/orgs","repos_url":"https://api.github.com/users/djjsindy/repos","events_url":"https://api.github.com/users/djjsindy/events{/privacy}","received_events_url":"https://api.github.com/users/djjsindy/received_events","type":"User","site_admin":false},"labels":[{"id":152510590,"node_id":"MDU6TGFiZWwxNTI1MTA1OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Recovery","name":":Distributed/Recovery","color":"0e8a16","default":false,"description":"Anything around constructing a new shard, either from a local or a remote source."},{"id":537848274,"node_id":"MDU6TGFiZWw1Mzc4NDgyNzQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v5.3.1","name":"v5.3.1","color":"DDDDDD","default":false,"description":null},{"id":838238967,"node_id":"MDU6TGFiZWw4MzgyMzg5Njc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v5.6.9","name":"v5.6.9","color":"dddddd","default":false,"description":null},{"id":753477051,"node_id":"MDU6TGFiZWw3NTM0NzcwNTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v6.3.0","name":"v6.3.0","color":"DDDDDD","default":false,"description":null},{"id":1223177445,"node_id":"MDU6TGFiZWwxMjIzMTc3NDQ1","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v7.0.0-beta1","name":"v7.0.0-beta1","color":"dddddd","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2018-03-07T03:35:46Z","updated_at":"2019-02-07T08:36:35Z","closed_at":"2018-03-20T09:40:05Z","author_association":"NONE","active_lock_reason":null,"body":"\r\n<!-- Feature request -->\r\n\r\nWe have a very large cluster which have 128 nodes. This cluster have a lot of index. There are about 20,000 shards, 10000 shards is primary,the other is replica. Primary and replica locate in different racks.  Write operation will always exist. In the network partition scenario the write operation will be blocked because it has to wait for replica shard failed cluster state commit. Write operation recovery time will be longer than about 10 minutes. \r\n\r\nMy opinion: Write slow recovery affected by the following three factors:\r\n\r\n1.  Each node disconnect detection is independent.  In the network partition scenario, 64 nodes disconnect. Because cluster state batch processing mechanism led to the first cluster state only the first node disconnect. This cluster state's prepare and commit must be time-out,Because this cluster state sent the node contains the remaining 63 nodes. \r\n2.  Too many shard failed lead to task summary toString time is very long,20000 shard failed Calculating the task summary takes about 15 seconds.\r\n3.  Same shard, the same primary term, the same allocationId shard failed request processing did not remove the duplicate request , ShardEntry does not override equals and hashCode methods. \r\n\r\nIn my scenario, I tried to do optimization based on the above mentioned. Write recovery time reduced from 10 minutes to less than 1 minute, It seems to be working. \r\n\r\nPlease take a look at these three factors can be improved ？\r\n\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): \r\n      5.3.1\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`):\r\n      1.8.0_112\r\n**OS version** (`uname -a` if on a Unix-like system):\r\n      2.6.32-220.23.2.xxxxx.el6.x86_64\r\n**Description of the problem including expected versus actual behavior**:\r\n    Write operation will always exist. In the network partition scenario the write operation will be blocked because it has to wait for shard failed cluster state commit. Write operation recovery time will be longer than about 10 minutes. \r\n    Expected behavior: Recovery write time is shorter\r\n**Steps to reproduce**:\r\n\r\n    my config：\r\n    cluster.routing.allocation.awareness.attributes: rack_id\r\n    node.attr.rack_id: xxxxx\r\n    discovery.zen.minimum_master_nodes: 2\r\n    discovery.zen.ping.unicast.hosts:\r\n         - xxxxx:9300\r\n         - xxxxx:9300\r\n         - xxxxx:9300\r\n    cluster.routing.allocation.awareness.force.rack_id: xxxx\r\n    \r\n    network partition opertion: \r\n    sudo iptables -D INPUT 1 ;sudo iptables -D OUTPUT 1 ;sudo iptables -L -n\r\n\r\n**Provide logs (if relevant)**:\r\n\r\n","closed_by":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"performed_via_github_app":null}