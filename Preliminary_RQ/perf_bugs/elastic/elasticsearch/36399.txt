{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/36399","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36399/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36399/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36399/events","html_url":"https://github.com/elastic/elasticsearch/issues/36399","id":388946377,"node_id":"MDU6SXNzdWUzODg5NDYzNzc=","number":36399,"title":"Rally PMC performance regression due to compression","user":{"login":"tbrooks8","id":862472,"node_id":"MDQ6VXNlcjg2MjQ3Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/862472?v=4","gravatar_id":"","url":"https://api.github.com/users/tbrooks8","html_url":"https://github.com/tbrooks8","followers_url":"https://api.github.com/users/tbrooks8/followers","following_url":"https://api.github.com/users/tbrooks8/following{/other_user}","gists_url":"https://api.github.com/users/tbrooks8/gists{/gist_id}","starred_url":"https://api.github.com/users/tbrooks8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbrooks8/subscriptions","organizations_url":"https://api.github.com/users/tbrooks8/orgs","repos_url":"https://api.github.com/users/tbrooks8/repos","events_url":"https://api.github.com/users/tbrooks8/events{/privacy}","received_events_url":"https://api.github.com/users/tbrooks8/received_events","type":"User","site_admin":false},"labels":[{"id":146854632,"node_id":"MDU6TGFiZWwxNDY4NTQ2MzI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Network","name":":Distributed/Network","color":"0e8a16","default":false,"description":"Http and internode communication implementations"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-12-08T18:24:10Z","updated_at":"2018-12-13T16:27:37Z","closed_at":"2018-12-12T16:39:16Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Around early November we experienced a noticeable performance regression on the PMC track in our nightly benchmarks. This only applied to multi-node (network) workloads and was apparent on both the netty and nio runs. \r\n\r\nThis is very visible on the [90-day graph](https://elasticsearch-benchmarks.elastic.co/index.html#tracks/pmc/nightly/90d).\r\n\r\n@dliappis identified that it was due to #35357. I investigated this and identified what the root cause is.\r\n\r\nIndividual actions in Elasticsearch can set compression to `true` in `TransportRequestOptions`. \r\n\r\n```java\r\nTransportRequestOptions.Builder builder = TransportRequestOptions.*builder*();\r\nbuilder.withCompress(true);\r\nTransportRequestOptions options = builder.build();\r\n```\r\n\r\nA number of actions set this option manually:\r\n\r\n* `TransportGetTaskAction` - `false`\r\n* `BulkAction` - `true`\r\n* `TransportNodesAction.AsyncAction` - depends\r\n* `TransportTasksAction` - depends\r\n* `PublishClusterStateAction` - `false`\r\n* `RemoteRecoveryTargetHandler` - depends\r\n\r\nPrior to #35357 this option had no effect. If it was set to `false`, `TcpTransport` would overwrite it if `transport.tcp.compress` was set to `true`.\r\n\r\n```java\r\nif (compress) {\r\n    options = TransportRequestOptions.builder(options).withCompress(true).build();\r\n}\r\n```\r\n\r\nIf it was set to `true`, `TcpTransport` would only respect it if `transport.tcp.compress` was also set to true.\r\n\r\n```java\r\nprivate boolean canCompress(TransportRequest request) {\r\n    return this.compress && (!(request instanceof BytesTransportRequest));\r\n}\r\n\r\n```\r\n\r\nAfter #35357, we still overwrite `false` if compression is enabled based on settings. However, we incidentally started to respect `true`. So if compression was not enabled we would still compress if it was requested by the `TransportRequestOptions`. \r\n\r\n```java\r\nprivate boolean canCompress(TransportRequest request) {\r\n    return request instanceof BytesTransportRequest == false;\r\n}\r\n```\r\n\r\nThis one change led to the performance regression because the PMC benchmark probably uses messages that ask for compression. Our benchmarks set the compression setting to false. So these messages were not compressed before the change and are compressed after the change. Since the benchmarks (I think) have fast network connections, this compression likely increases CPU usage and the bandwidth savings are probably irrelevant. \r\n\r\nThis raises the question of what we want the behavior to be. The behavior prior to #35357 makes no sense as there was no point in the compression being set in the `TransportRequestOptions`. \r\n\r\nDo we want:\r\n\r\n1. Compression is only used if both request and setting say `true`?\r\n2. Compression is used if either request or setting is `true`? This would overwrite false. This is equivalent to post-#35357 behavior.\r\n3. `TransportRequestOptions` be the primary choice and the setting be the fallback choice? This is tricky right now because `TransportRequestOptions` uses a `boolean` for the compression indicator. So we do not know if `false` was set or if it was not set.\r\n4. Remove compress from `TransportRequestOptions` and always compress based on the setting. This is equivalent to pre-#35357 behavior.\r\n\r\n@jasontedor @s1monw ","closed_by":{"login":"tbrooks8","id":862472,"node_id":"MDQ6VXNlcjg2MjQ3Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/862472?v=4","gravatar_id":"","url":"https://api.github.com/users/tbrooks8","html_url":"https://github.com/tbrooks8","followers_url":"https://api.github.com/users/tbrooks8/followers","following_url":"https://api.github.com/users/tbrooks8/following{/other_user}","gists_url":"https://api.github.com/users/tbrooks8/gists{/gist_id}","starred_url":"https://api.github.com/users/tbrooks8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbrooks8/subscriptions","organizations_url":"https://api.github.com/users/tbrooks8/orgs","repos_url":"https://api.github.com/users/tbrooks8/repos","events_url":"https://api.github.com/users/tbrooks8/events{/privacy}","received_events_url":"https://api.github.com/users/tbrooks8/received_events","type":"User","site_admin":false},"performed_via_github_app":null}