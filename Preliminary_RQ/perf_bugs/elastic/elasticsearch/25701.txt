{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/25701","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25701/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25701/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25701/events","html_url":"https://github.com/elastic/elasticsearch/issues/25701","id":242607331,"node_id":"MDU6SXNzdWUyNDI2MDczMzE=","number":25701,"title":"Java minimal rest client hangs with default SniffOnFailure listener enabled","user":{"login":"ssesha","id":1124600,"node_id":"MDQ6VXNlcjExMjQ2MDA=","avatar_url":"https://avatars3.githubusercontent.com/u/1124600?v=4","gravatar_id":"","url":"https://api.github.com/users/ssesha","html_url":"https://github.com/ssesha","followers_url":"https://api.github.com/users/ssesha/followers","following_url":"https://api.github.com/users/ssesha/following{/other_user}","gists_url":"https://api.github.com/users/ssesha/gists{/gist_id}","starred_url":"https://api.github.com/users/ssesha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ssesha/subscriptions","organizations_url":"https://api.github.com/users/ssesha/orgs","repos_url":"https://api.github.com/users/ssesha/repos","events_url":"https://api.github.com/users/ssesha/events{/privacy}","received_events_url":"https://api.github.com/users/ssesha/received_events","type":"User","site_admin":false},"labels":[{"id":407508641,"node_id":"MDU6TGFiZWw0MDc1MDg2NDE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Java%20Low%20Level%20REST%20Client","name":":Core/Features/Java Low Level REST Client","color":"0e8a16","default":false,"description":"Minimal dependencies Java Client for Elasticsearch"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"assignees":[{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2017-07-13T07:17:36Z","updated_at":"2018-05-31T14:05:10Z","closed_at":"2018-05-31T14:05:10Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version**: 2.4.0\r\n\r\n**Elasticsearch java rest client version**: 5.2.2\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`):  1.8.0_131\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): Ubuntu 16.04\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nDefault SniffonfailureListener on rest client blocks the HTTPAsyncClient reactor thread when request encounters a `java.net.ConnectException`\r\n**Steps to reproduce**:\r\n 1. Have two es nodes and let sniffer pick them up\r\n 2. Shut down one node\r\n 3. Client tries to connect to that node --> fails --> tries to sniff and hangs till maxRetryTimeoutMillis\r\n\r\nThe failed callback triggers the sniffer  https://github.com/elastic/elasticsearch/blob/master/client/rest/src/main/java/org/elasticsearch/client/RestClient.java#L374\r\n\r\nHowever, the failed callback is being handled by the reactor thread of the underlying HttpAsyncClient. Since, the sniffer does a blocking `performRequest` using the same client instance and the HttpClient can't handle the request because the reactor thread is blocked, its effectively a deadlock till the SyncResponselistener timeout of `maxRetryTimeoutMillis` and no requests can be served at all during this time period. :cold_sweat:\r\n\r\nI found a similar issue https://issues.apache.org/jira/browse/HTTPCLIENT-1805 where the suggestion is to avoid potentially blocking or long running operations in the callbacks and more so in the failed callback since it could block the reactor thread. \r\n\r\nI guess the solution would be to trigger the retries as well as sniffer on a separate threadpool internal to the RestClient so that the HttpClient's dispatcher and reactor threads are freed up asap.","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}