{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/41231","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41231/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41231/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41231/events","html_url":"https://github.com/elastic/elasticsearch/issues/41231","id":433523197,"node_id":"MDU6SXNzdWU0MzM1MjMxOTc=","number":41231,"title":"Elastcsearch 7 randomly slow search","user":{"login":"nenad007","id":1338965,"node_id":"MDQ6VXNlcjEzMzg5NjU=","avatar_url":"https://avatars2.githubusercontent.com/u/1338965?v=4","gravatar_id":"","url":"https://api.github.com/users/nenad007","html_url":"https://github.com/nenad007","followers_url":"https://api.github.com/users/nenad007/followers","following_url":"https://api.github.com/users/nenad007/following{/other_user}","gists_url":"https://api.github.com/users/nenad007/gists{/gist_id}","starred_url":"https://api.github.com/users/nenad007/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nenad007/subscriptions","organizations_url":"https://api.github.com/users/nenad007/orgs","repos_url":"https://api.github.com/users/nenad007/repos","events_url":"https://api.github.com/users/nenad007/events{/privacy}","received_events_url":"https://api.github.com/users/nenad007/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-04-15T23:44:19Z","updated_at":"2019-04-16T07:12:57Z","closed_at":"2019-04-16T07:12:57Z","author_association":"NONE","active_lock_reason":null,"body":"\r\nElasticsearch Version: 7.0.0\r\nOpenJDK Runtime Environment (build 1.8.0_201-b09)\r\nCentos 7 Linux  3.10.0-957.5.1.el7.x86_64\r\n\r\nAfter upgrade from Elasticsearch 6.7 to 7.0 it randmly took 500 - 1000 ms to deliver the result instead 9 - 12 ms. This happen mostly during 5 seconds and repeat it around 3 times per minute. \r\nIt's a very small dataset of 40K records, that fit completely into the memory.\r\n\r\n\r\n**Steps to reproduce**:\r\n\r\n```\r\nPUT dating\r\n{\r\n    \"mappings\": {\r\n      \"profile\": {\r\n        \"properties\": {\r\n          \"appid\": {\r\n            \"type\": \"text\"\r\n          },\r\n        \"first_name\": {\r\n            \"type\": \"text\"\r\n          },\r\n         \"country\": {\r\n            \"type\": \"text\"\r\n          },\r\n           \"geo_pt\": {\r\n            \"type\": \"geo_point\"\r\n          },\r\n          \"last_update_dt\": {\r\n            \"type\": \"date\"\r\n          },\r\n         \"member_id\": {\r\n            \"type\": \"integer\"\r\n          },\r\n           \"mstatus\": {\r\n            \"type\": \"byte\"\r\n          },\r\n          \"is_hidden\": {\r\n            \"type\": \"byte\"\r\n          },\r\n           ...\r\n```\r\n\r\n\r\n```\r\n{\r\n                  \"size\": 100,\r\n                  \"from\": 0,\r\n                  \"script_fields\": {\r\n                    \"geo_distance\": {\r\n                        \"script\": {\r\n                            \"params\": {\r\n                                \"lat\": xxx,\r\n                                \"lon\": xxx\r\n                            },\r\n                            \"source\": \"doc[\\'geo_pt\\'].arcDistance(params.lat, params.lon)\"\r\n                        }\r\n                    }\r\n                  },\r\n                  \"_source\": [\r\n                    \"first_name\",\r\n                    \"last_request_dt\",\r\n                    \"geo_distance\"\r\n                  ],\r\n                  \"sort\": [\r\n                    { \"member_id\" : {\"order\" : \"desc\"} }\r\n                  ],\r\n                  \"query\": {\r\n                    \"bool\": {\r\n                      \"filter\": [\r\n                        {\r\n                            \"term\": {\r\n                              \"mstatus\": 1\r\n                            }\r\n                        },\r\n                        {\r\n                            \"terms\": {\r\n                              \"appid\": [ xxx, xxx]\r\n                            }\r\n                        },\r\n                        \"term\": {\r\n                          \"country\": \"xxx\"\r\n                        }\r\n                      ]\r\n                      , \"must_not\": [\r\n                                {\r\n                                  \"term\": {\r\n                                    \"is_hidden\": 1\r\n                                  }\r\n                                }, \r\n                                {\r\n                                  \"term\": {\r\n                                    \"member_id\": xxx\r\n                                  }\r\n                                }\r\n                                ]\r\n                    }                    \r\n                  }\r\n                }\r\n```","closed_by":{"login":"matriv","id":5058131,"node_id":"MDQ6VXNlcjUwNTgxMzE=","avatar_url":"https://avatars1.githubusercontent.com/u/5058131?v=4","gravatar_id":"","url":"https://api.github.com/users/matriv","html_url":"https://github.com/matriv","followers_url":"https://api.github.com/users/matriv/followers","following_url":"https://api.github.com/users/matriv/following{/other_user}","gists_url":"https://api.github.com/users/matriv/gists{/gist_id}","starred_url":"https://api.github.com/users/matriv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matriv/subscriptions","organizations_url":"https://api.github.com/users/matriv/orgs","repos_url":"https://api.github.com/users/matriv/repos","events_url":"https://api.github.com/users/matriv/events{/privacy}","received_events_url":"https://api.github.com/users/matriv/received_events","type":"User","site_admin":false},"performed_via_github_app":null}