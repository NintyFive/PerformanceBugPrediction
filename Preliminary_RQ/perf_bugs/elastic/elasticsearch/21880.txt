{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/21880","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21880/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21880/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21880/events","html_url":"https://github.com/elastic/elasticsearch/issues/21880","id":192510996,"node_id":"MDU6SXNzdWUxOTI1MTA5OTY=","number":21880,"title":"Different performance in SATA and SSD with simple client and default config","user":{"login":"wu-sheng","id":5441976,"node_id":"MDQ6VXNlcjU0NDE5NzY=","avatar_url":"https://avatars2.githubusercontent.com/u/5441976?v=4","gravatar_id":"","url":"https://api.github.com/users/wu-sheng","html_url":"https://github.com/wu-sheng","followers_url":"https://api.github.com/users/wu-sheng/followers","following_url":"https://api.github.com/users/wu-sheng/following{/other_user}","gists_url":"https://api.github.com/users/wu-sheng/gists{/gist_id}","starred_url":"https://api.github.com/users/wu-sheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wu-sheng/subscriptions","organizations_url":"https://api.github.com/users/wu-sheng/orgs","repos_url":"https://api.github.com/users/wu-sheng/repos","events_url":"https://api.github.com/users/wu-sheng/events{/privacy}","received_events_url":"https://api.github.com/users/wu-sheng/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-11-30T09:06:38Z","updated_at":"2016-11-30T11:08:08Z","closed_at":"2016-11-30T10:33:37Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\nGitHub is reserved for bug reports and feature requests. The best place\r\nto ask a general question is at the Elastic Discourse forums at\r\nhttps://discuss.elastic.co. If you are in fact posting a bug report or\r\na feature request, please include one and only one of the below blocks\r\nin your new issue. Note that whether you're filing a bug report or a\r\nfeature request, ensure that your submission is for an\r\n[OS that we support](https://www.elastic.co/support/matrix#show_os).\r\nBug reports on an OS that we do not support or feature requests\r\nspecific to an OS that we do not support will be closed.\r\n-->\r\n\r\n<!--\r\nIf you are filing a bug report, please remove the below feature\r\nrequest block and provide responses for all of the below items.\r\n-->\r\n\r\n**Elasticsearch version**: 5.0.2\r\n\r\n**Plugins installed**: [\r\n[2016-11-30T15:42:29,353][INFO ][o.e.p.PluginsService     ] [wOXQQyL] loaded module [aggs-matrix-stats]\r\n[2016-11-30T15:42:29,353][INFO ][o.e.p.PluginsService     ] [wOXQQyL] loaded module [ingest-common]\r\n[2016-11-30T15:42:29,354][INFO ][o.e.p.PluginsService     ] [wOXQQyL] loaded module [lang-expression]\r\n[2016-11-30T15:42:29,354][INFO ][o.e.p.PluginsService     ] [wOXQQyL] loaded module [lang-groovy]\r\n[2016-11-30T15:42:29,354][INFO ][o.e.p.PluginsService     ] [wOXQQyL] loaded module [lang-mustache]\r\n[2016-11-30T15:42:29,354][INFO ][o.e.p.PluginsService     ] [wOXQQyL] loaded module [lang-painless]\r\n[2016-11-30T15:42:29,354][INFO ][o.e.p.PluginsService     ] [wOXQQyL] loaded module [percolator]\r\n[2016-11-30T15:42:29,354][INFO ][o.e.p.PluginsService     ] [wOXQQyL] loaded module [reindex]\r\n[2016-11-30T15:42:29,354][INFO ][o.e.p.PluginsService     ] [wOXQQyL] loaded module [transport-netty3]\r\n[2016-11-30T15:42:29,354][INFO ][o.e.p.PluginsService     ] [wOXQQyL] loaded module [transport-netty4]\r\n]\r\n\r\n**JVM version**:\r\nJava(TM) SE Runtime Environment (build 1.8.0_65-b17)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.65-b01, mixed mode)\r\n\r\n**OS version**:\r\nCentOS and MacOS\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nI use a very simple code to batch insert index.\r\n```java\r\npublic static void main(String[] args) {\r\n        try {\r\n            TransportClient client = new PreBuiltTransportClient(Settings.EMPTY).addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(\"test_es\"), 9300));\r\n            IndexOperator operator = new IndexOperator(client);\r\n\r\n            for (int i = 0; i < 1_000_000_000; i++) {\r\n                IndexMetaCollection collection = new IndexMetaCollection();\r\n                for (int j = 0; j < 100; j++) {\r\n                    RequestSpan requestSpan =\r\n                            RequestSpan.newBuilder().setSpanType(1).setAddress(NetUtils.getLocalAddress().toString()).setApplicationId(\"1\").setCallType(\"1\").setLevelId(0)\r\n                                    .setProcessNo(19287).setStartDate(System.currentTimeMillis()).setTraceId(\r\n                                    TraceId.newBuilder().addSegments(201611).addSegments(j).addSegments(8504828).addSegments(2277).addSegments(53).addSegments(3).build())\r\n                                    .setUserId(\"1\").setViewPointId(\"http://localhost:8080/wwww/test/helloWorld\").setRouteKey(i).build();\r\n                    IndexMetaInfo info = new IndexMetaInfo(new RequestSpanData(requestSpan), new DataFileNameDesc(), i, j);\r\n                    collection.add(info);\r\n                }\r\n\r\n                operator.batchUpdate(collection);\r\n\r\n                if (i % 100 == 0) {\r\n                    System.out.println(\" num=\" + i + \" \");\r\n                }\r\n            }\r\n        } catch (UnknownHostException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public int batchUpdate(IndexMetaCollection metaInfos) {\r\n        BulkRequestBuilder requestBuilder = client.prepareBulk();\r\n        for (IndexMetaInfo indexMetaInfo : metaInfos) {\r\n            try {\r\n                requestBuilder.add(client.prepareIndex(INDEX_NAME, INDEX_TYPE).setSource(buildSource(indexMetaInfo)));\r\n            } catch (Exception e) {\r\n                logger.error(\"Failed to update index.\", e);\r\n                HealthCollector.getCurrentHeathReading(\"IndexOperator\").updateData(HeathReading.ERROR, \"Failed to \" + \"update index.\");\r\n            }\r\n        }\r\n\r\n        BulkResponse bulkRequest = requestBuilder.get();\r\n        if (bulkRequest.hasFailures()) {\r\n            HealthCollector.getCurrentHeathReading(\"IndexOperator\")\r\n                    .updateData(HeathReading.ERROR, \"Failed to \" + \"update index. Error message : \" + bulkRequest.buildFailureMessage());\r\n        }\r\n\r\n        return metaInfos.size();\r\n    }\r\n```\r\n\r\nIn Mac, SSD, it has high performance.\r\nIn a test PC(CentOS, SATA), it has much lower performance.  Only have 1/100 performance. It's strange.\r\n\r\n**Steps to reproduce**:\r\n 1. run the code just enough.\r\n\r\n**Provide logs (if relevant)**:\r\n\r\n<!--\r\nIf you are filing a feature request, please remove the above bug\r\nreport block and provide responses for all of the below items.\r\n-->\r\n\r\n**Describe the feature**:\r\n","closed_by":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"performed_via_github_app":null}