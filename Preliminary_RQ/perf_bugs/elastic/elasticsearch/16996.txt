{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/16996","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16996/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16996/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16996/events","html_url":"https://github.com/elastic/elasticsearch/issues/16996","id":139169376,"node_id":"MDU6SXNzdWUxMzkxNjkzNzY=","number":16996,"title":"Improve performance when retrieving only IDs","user":{"login":"gjcampbell","id":533893,"node_id":"MDQ6VXNlcjUzMzg5Mw==","avatar_url":"https://avatars2.githubusercontent.com/u/533893?v=4","gravatar_id":"","url":"https://api.github.com/users/gjcampbell","html_url":"https://github.com/gjcampbell","followers_url":"https://api.github.com/users/gjcampbell/followers","following_url":"https://api.github.com/users/gjcampbell/following{/other_user}","gists_url":"https://api.github.com/users/gjcampbell/gists{/gist_id}","starred_url":"https://api.github.com/users/gjcampbell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gjcampbell/subscriptions","organizations_url":"https://api.github.com/users/gjcampbell/orgs","repos_url":"https://api.github.com/users/gjcampbell/repos","events_url":"https://api.github.com/users/gjcampbell/events{/privacy}","received_events_url":"https://api.github.com/users/gjcampbell/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-03-08T03:33:16Z","updated_at":"2016-03-08T13:05:41Z","closed_at":"2016-03-08T09:05:53Z","author_association":"NONE","active_lock_reason":null,"body":"It would be nice if there were an API that would optimize for retrieving all IDs(only) of search results. It may be nice for a lot of reasons, but here's a good example. It would allow users to scroll to the bottom of a huge list (assuming the IDs have been cached after the original call) like in this example.\nhttp://demos.telerik.com/kendo-ui/grid/virtualization-remote-data\n\nAlso, it would hopefully not go through the scroll API and could be just one constant download streamed to the requester. \n\nAnother thing, can there be support for a non-json response type, something that can deserialize as fast as a DB reader? \n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}