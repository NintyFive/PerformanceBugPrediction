{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/25556","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25556/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25556/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25556/events","html_url":"https://github.com/elastic/elasticsearch/issues/25556","id":240686651,"node_id":"MDU6SXNzdWUyNDA2ODY2NTE=","number":25556,"title":"Performance degradation for '*' query with '_all' field disabled","user":{"login":"jorgelbg","id":1291846,"node_id":"MDQ6VXNlcjEyOTE4NDY=","avatar_url":"https://avatars2.githubusercontent.com/u/1291846?v=4","gravatar_id":"","url":"https://api.github.com/users/jorgelbg","html_url":"https://github.com/jorgelbg","followers_url":"https://api.github.com/users/jorgelbg/followers","following_url":"https://api.github.com/users/jorgelbg/following{/other_user}","gists_url":"https://api.github.com/users/jorgelbg/gists{/gist_id}","starred_url":"https://api.github.com/users/jorgelbg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jorgelbg/subscriptions","organizations_url":"https://api.github.com/users/jorgelbg/orgs","repos_url":"https://api.github.com/users/jorgelbg/repos","events_url":"https://api.github.com/users/jorgelbg/events{/privacy}","received_events_url":"https://api.github.com/users/jorgelbg/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-07-05T15:20:30Z","updated_at":"2018-02-14T13:28:54Z","closed_at":"2017-07-21T14:52:58Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version**: 5.4.0 - 5.4.3\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version**: \r\n\r\njava version \"1.8.0_60\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_60-b27)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)\r\n\r\n**OS version**: \r\n\r\nLinux debian-elasticseearch-client-test 3.16.0-4-amd64 #1 SMP Debian 3.16.39-1 (2016-12-30) x86_64 GNU/Linux\r\n\r\nAfter upgrading to ES 5.4.3 the following query:\r\n\r\n```\r\n{\r\n   \"query\":{\r\n      \"bool\":{\r\n         \"must\":[\r\n            {\r\n               \"query_string\":{\r\n                  \"analyze_wildcard\":true,\r\n                  \"query\":\"*\"\r\n               }\r\n            },\r\n            {\r\n               \"range\":{\r\n                  \"@timestamp\":{\r\n                     \"gte\":1499227272692,\r\n                     \"lte\":1499241672693,\r\n                     \"format\":\"epoch_millis\"\r\n                  }\r\n               }\r\n            }\r\n         ],\r\n         \"must_not\":[\r\n\r\n         ]\r\n      }\r\n   }\r\n}\r\n```\r\n\r\nbecomes really slow, after a little of investigation sending this query into to the validate API:\r\n\r\n```\r\n$ curl -XGET http://10.1.12.84:9200/logs/_validate/query?rewrite=true\\&pretty\\=true -d '{\r\n   \"query\":{\r\n      \"bool\":{\r\n         \"must\":[\r\n            {\r\n               \"query_string\":{\r\n                  \"analyze_wildcard\":true,\r\n                  \"query\":\"*\"\r\n               }\r\n            },\r\n            {\r\n               \"range\":{\r\n                  \"@timestamp\":{\r\n                     \"gte\":1499227272692,\r\n                     \"lte\":1499241672693,\r\n                     \"format\":\"epoch_millis\"\r\n                  }\r\n               }\r\n            }\r\n         ],\r\n         \"must_not\":[\r\n\r\n         ]\r\n      }\r\n   }\r\n}'\r\n```\r\n\r\nreturns the following explanation: \r\n\r\n```\r\n\"explanation\": \"(ConstantScore(_field_names:auth) | ConstantScore(_field_names:type) | ConstantScore(_field_names:redis) | ConstantScore(_field_names:header.senderId.keyword) | ConstantScore(_field_names:jsperf_content) | ConstantScore(_field_names:path) | ConstantScore(_field_names:protocol) | ConstantScore(_field_names:hostname) | ConstantScore(_field_names:java) | ConstantScore(_field_names:unique_id.keyword) | ConstantScore(_field_names:fw_proto.keyword) | ConstantScore(_field_names:unique_ident) | ConstantScore(_field_names:ua_device) | ConstantScore(_field_names:datacenter.keyword) | ConstantScore(_field_names:memcache) | ConstantScore(_field_names:jsperf_cache) | ConstantScore(_field_names:jsperf_dom_complete) | ConstantScore(_field_names:jsperf_first_paint) | ConstantScore(_field_names:unique_id) | ConstantScore(_field_names:method) | ConstantScore(_field_names:ua_build) | ConstantScore(_field_names:query) | ConstantScore(_field_names:http_version) | ConstantScore(_field_names:jsperf_load) | ConstantScore(_field_names:geoip.isp.keyword) | ConstantScore(_field_names:forwarded) | ConstantScore(_field_names:x_forwarded_for) | ConstantScore(_field_names:tags) | ConstantScore(_field_names:local_ip) | ConstantScore(_field_names:ua_minor) | ConstantScore(_field_names:size) | ConstantScore(_field_names:ua_major) | ConstantScore(_field_names:user_agent.analyzed) | ConstantScore(_field_names:protocol.keyword) | ConstantScore(_field_names:tracking_ident) | ConstantScore(_field_names:header.senderId) | ConstantScore(_field_names:jsperf_connect) | ConstantScore(_field_names:server_name) | ConstantScore(_field_names:referer_complete) | ConstantScore(_field_names:fw_proto) | ConstantScore(_field_names:code) | ConstantScore(_field_names:target_url) | ConstantScore(_field_names:tags.keyword) | ConstantScore(_field_names:ms_ident) | ConstantScore(_field_names:jsperf_dns) | ConstantScore(_field_names:tracking_ident.keyword) | ConstantScore(_field_names:private_ip) | ConstantScore(_field_names:forwarded_for) | ConstantScore(_field_names:ua_patch) | ConstantScore(_field_names:page_id) | ConstantScore(_field_names:auth_name) | ConstantScore(_field_names:referer_host) | ConstantScore(_field_names:jsperf_dom_loaded) | ConstantScore(_field_names:geoip.country_code3) | ConstantScore(_field_names:geoip.country_code2) | ConstantScore(_field_names:solr) | ConstantScore(_field_names:jsperf_first_byte) | ConstantScore(_field_names:user_agent) | ConstantScore(_field_names:ua_os_name) | ConstantScore(_field_names:customdate) | ConstantScore(_field_names:proxy_list) | ConstantScore(_field_names:url_path) | ConstantScore(_field_names:ftp) | ConstantScore(_field_names:auth_name.keyword) | ConstantScore(_field_names:proxy_list.keyword) | ConstantScore(_field_names:forwarded_for.keyword) | ConstantScore(_field_names:geoip.asn) | ConstantScore(_field_names:ua_os_major) | ConstantScore(_field_names:geoip.number) | ConstantScore(_field_names:jsperf_redirect) | ConstantScore(_field_names:ua_os) | ConstantScore(_field_names:geoip.city_name) | ConstantScore(_field_names:datacenter) | ConstantScore(_field_names:xcache) | ConstantScore(_field_names:geoip.isp) | ConstantScore(_field_names:geoip.postal_code) | ConstantScore(_field_names:@timestamp) | ConstantScore(_field_names:ua_name) | ConstantScore(_field_names:ua_os_minor) | ConstantScore(_field_names:response_time) | ConstantScore(_field_names:jsperf_dom_inter) | ConstantScore(_field_names:db))\"\r\n```\r\n\r\nWhich means that is using the `_field_names` field causing the query to be extremely slow. By comparison the same query with the same index/mapping on ES 5.2.2-5.3.3 would output the following explanation: \r\n\r\n```\r\n\"explanation\": \"+*:* +MatchNoDocsQuery[\"User requested \"match_none\" query.\"]\"\r\n```\r\n\r\nWe've disabled the `_all` field. Disabling the `_field_names` field doesn't help either, and we get this output on the validate API:\r\n\r\n```\r\n\"explanation\": \"+(auth:* | type:* | redis:* | header.senderId.keyword:* | jsperf_content:* | path:* | protocol:* | hostname:* | java:* | unique_id.keyword:* | fw_proto.keyword:* | unique_ident:* | ua_device:* | datacenter.keyword:* | memcache:* | jsperf_cache:* | jsperf_dom_complete:* | jsperf_first_paint:* | unique_id:* | method:* | ua_build:* | query:* | http_version:* | jsperf_load:* | geoip.isp.keyword:* | forwarded:* | x_forwarded_for:* | tags:* | local_ip:* | ua_minor:* | size:* | ua_major:* | user_agent.analyzed:* | protocol.keyword:* | tracking_ident:* | header.senderId:* | jsperf_connect:* | server_name:* | referer_complete:* | fw_proto:* | code:* | target_url:* | tags.keyword:* | ms_ident:* | jsperf_dns:* | tracking_ident.keyword:* | private_ip:* | forwarded_for:* | ua_patch:* | page_id:* | auth_name:* | referer_host:* | jsperf_dom_loaded:* | geoip.country_code3:* | geoip.country_code2:* | solr:* | jsperf_first_byte:* | user_agent:* | ua_os_name:* | customdate:* | proxy_list:* | url_path:* | ftp:* | auth_name.keyword:* | proxy_list.keyword:* | forwarded_for.keyword:* | geoip.asn:* | ua_os_major:* | geoip.number:* | jsperf_redirect:* | ua_os:* | geoip.city_name:* | datacenter:* | xcache:* | geoip.isp:* | geoip.postal_code:* | @timestamp:* | ua_name:* | ua_os_minor:* | response_time:* | jsperf_dom_inter:* | db:*) +MatchNoDocsQuery[\"User requested \"match_none\" query.\"]\"\r\n```\r\n\r\nThis is especially problematic because the default query for discovery on Kibana is `*`, which is causing really slow response times in our setup. Looks like in previous versions, this query would've been rewritten to a MatchAllDocsQuery.","closed_by":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}