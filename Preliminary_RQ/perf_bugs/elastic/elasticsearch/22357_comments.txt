[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/269507044","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-269507044","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":269507044,"node_id":"MDEyOklzc3VlQ29tbWVudDI2OTUwNzA0NA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-12-28T17:06:31Z","updated_at":"2016-12-28T17:06:31Z","author_association":"MEMBER","body":"> Currently index has about 1.6 mln docs, each document has ~100 fields with various content.\r\nField \"suggest_title\" is mapped as:\r\n\r\nHow big is one document ? Considering that you use `_source_include` I suspect that your _source can be big ? One of the difference with 2.1 is that the completion suggester now returns the source of the suggested document.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/269516339","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-269516339","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":269516339,"node_id":"MDEyOklzc3VlQ29tbWVudDI2OTUxNjMzOQ==","user":{"login":"sicarrots","id":1238020,"node_id":"MDQ6VXNlcjEyMzgwMjA=","avatar_url":"https://avatars1.githubusercontent.com/u/1238020?v=4","gravatar_id":"","url":"https://api.github.com/users/sicarrots","html_url":"https://github.com/sicarrots","followers_url":"https://api.github.com/users/sicarrots/followers","following_url":"https://api.github.com/users/sicarrots/following{/other_user}","gists_url":"https://api.github.com/users/sicarrots/gists{/gist_id}","starred_url":"https://api.github.com/users/sicarrots/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sicarrots/subscriptions","organizations_url":"https://api.github.com/users/sicarrots/orgs","repos_url":"https://api.github.com/users/sicarrots/repos","events_url":"https://api.github.com/users/sicarrots/events{/privacy}","received_events_url":"https://api.github.com/users/sicarrots/received_events","type":"User","site_admin":false},"created_at":"2016-12-28T18:11:50Z","updated_at":"2016-12-28T18:13:07Z","author_association":"NONE","body":"Current index with 1.6mln docs is using 16GB disk space. One document can have from 50 up to 500 fields. Currently fields have only short values, but eventually lot of fields can store text content of scanned pages of books. In previous version of elasticsearch all objects was indexed full text fields. I was trying to use _source_include, but with no results.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/269517870","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-269517870","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":269517870,"node_id":"MDEyOklzc3VlQ29tbWVudDI2OTUxNzg3MA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-12-28T18:22:33Z","updated_at":"2016-12-28T18:22:33Z","author_association":"MEMBER","body":"You can try to disable the stored fields completely: \r\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-stored-fields.html#_disable_stored_fields_entirely\r\n ... or you can have a separate index for the suggestions. \r\nI'll close the issue but feel free to reopen if disabling the stored fields doesn t help","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/269520139","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-269520139","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":269520139,"node_id":"MDEyOklzc3VlQ29tbWVudDI2OTUyMDEzOQ==","user":{"login":"sicarrots","id":1238020,"node_id":"MDQ6VXNlcjEyMzgwMjA=","avatar_url":"https://avatars1.githubusercontent.com/u/1238020?v=4","gravatar_id":"","url":"https://api.github.com/users/sicarrots","html_url":"https://github.com/sicarrots","followers_url":"https://api.github.com/users/sicarrots/followers","following_url":"https://api.github.com/users/sicarrots/following{/other_user}","gists_url":"https://api.github.com/users/sicarrots/gists{/gist_id}","starred_url":"https://api.github.com/users/sicarrots/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sicarrots/subscriptions","organizations_url":"https://api.github.com/users/sicarrots/orgs","repos_url":"https://api.github.com/users/sicarrots/repos","events_url":"https://api.github.com/users/sicarrots/events{/privacy}","received_events_url":"https://api.github.com/users/sicarrots/received_events","type":"User","site_admin":false},"created_at":"2016-12-28T18:37:51Z","updated_at":"2016-12-28T18:37:51Z","author_association":"NONE","body":"Disabling stored fields didn't help. Anyway, it's not possible to disable stored_fileds, because it blocks using _source_include, so I wont get any metadata about document (stored previous in payload).\r\n```\r\n{\r\n\t\"stored_fields\": \"_none_\",\r\n\t\"suggest\": {\r\n\t\t\"suggest-title\" : {\r\n\t        \"prefix\" : \"war\",\r\n\t        \"completion\" : {\r\n\t            \"field\" : \"suggest_title\"\r\n\t        }\r\n\t    }\t\r\n\t}\r\n}\r\n```\r\n`\"took\": 62791`\r\n\r\nUsing another index may be a solution, but it didn't change that here we have very big regression comparing to 2.x.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/269520405","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-269520405","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":269520405,"node_id":"MDEyOklzc3VlQ29tbWVudDI2OTUyMDQwNQ==","user":{"login":"sicarrots","id":1238020,"node_id":"MDQ6VXNlcjEyMzgwMjA=","avatar_url":"https://avatars1.githubusercontent.com/u/1238020?v=4","gravatar_id":"","url":"https://api.github.com/users/sicarrots","html_url":"https://github.com/sicarrots","followers_url":"https://api.github.com/users/sicarrots/followers","following_url":"https://api.github.com/users/sicarrots/following{/other_user}","gists_url":"https://api.github.com/users/sicarrots/gists{/gist_id}","starred_url":"https://api.github.com/users/sicarrots/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sicarrots/subscriptions","organizations_url":"https://api.github.com/users/sicarrots/orgs","repos_url":"https://api.github.com/users/sicarrots/repos","events_url":"https://api.github.com/users/sicarrots/events{/privacy}","received_events_url":"https://api.github.com/users/sicarrots/received_events","type":"User","site_admin":false},"created_at":"2016-12-28T18:39:26Z","updated_at":"2016-12-28T18:39:26Z","author_association":"NONE","body":"I cannot reopen this issue @jimczi ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/269521501","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-269521501","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":269521501,"node_id":"MDEyOklzc3VlQ29tbWVudDI2OTUyMTUwMQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-12-28T18:47:17Z","updated_at":"2016-12-28T18:47:17Z","author_association":"MEMBER","body":"Ok so it's something else. Can you share your mapping and some example input for the completion field?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/269537767","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-269537767","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":269537767,"node_id":"MDEyOklzc3VlQ29tbWVudDI2OTUzNzc2Nw==","user":{"login":"sicarrots","id":1238020,"node_id":"MDQ6VXNlcjEyMzgwMjA=","avatar_url":"https://avatars1.githubusercontent.com/u/1238020?v=4","gravatar_id":"","url":"https://api.github.com/users/sicarrots","html_url":"https://github.com/sicarrots","followers_url":"https://api.github.com/users/sicarrots/followers","following_url":"https://api.github.com/users/sicarrots/following{/other_user}","gists_url":"https://api.github.com/users/sicarrots/gists{/gist_id}","starred_url":"https://api.github.com/users/sicarrots/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sicarrots/subscriptions","organizations_url":"https://api.github.com/users/sicarrots/orgs","repos_url":"https://api.github.com/users/sicarrots/repos","events_url":"https://api.github.com/users/sicarrots/events{/privacy}","received_events_url":"https://api.github.com/users/sicarrots/received_events","type":"User","site_admin":false},"created_at":"2016-12-28T20:41:56Z","updated_at":"2016-12-28T20:41:56Z","author_association":"NONE","body":"Example mapping is here: https://gist.github.com/sicarrots/e28eac006a2d37b05c462a4c75a271d9\r\nExample inputs for suggest_title is ['Plan Warszawy', 'Warszawa w słowach i obrazach', 'Wojna i pokój', 'Wars i Sawa']'","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/269603767","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-269603767","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":269603767,"node_id":"MDEyOklzc3VlQ29tbWVudDI2OTYwMzc2Nw==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-12-29T09:31:41Z","updated_at":"2016-12-29T09:31:41Z","author_association":"MEMBER","body":"Thanks @sicarrots \r\nFrom what you provided it is hard to tell what's wrong. I though it was the stored fields but it seems not. Can you capture the output of the `hot_threads` during the suggest query:\r\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-nodes-hot-threads.html\r\nIs there any difference in you deployment for 5.1 vs 2.1 ? Number of nodes, ram, data ? Can you also compare the size of your indices in 5.1 and 2.1 ? ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/269605553","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-269605553","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":269605553,"node_id":"MDEyOklzc3VlQ29tbWVudDI2OTYwNTU1Mw==","user":{"login":"sicarrots","id":1238020,"node_id":"MDQ6VXNlcjEyMzgwMjA=","avatar_url":"https://avatars1.githubusercontent.com/u/1238020?v=4","gravatar_id":"","url":"https://api.github.com/users/sicarrots","html_url":"https://github.com/sicarrots","followers_url":"https://api.github.com/users/sicarrots/followers","following_url":"https://api.github.com/users/sicarrots/following{/other_user}","gists_url":"https://api.github.com/users/sicarrots/gists{/gist_id}","starred_url":"https://api.github.com/users/sicarrots/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sicarrots/subscriptions","organizations_url":"https://api.github.com/users/sicarrots/orgs","repos_url":"https://api.github.com/users/sicarrots/repos","events_url":"https://api.github.com/users/sicarrots/events{/privacy}","received_events_url":"https://api.github.com/users/sicarrots/received_events","type":"User","site_admin":false},"created_at":"2016-12-29T09:45:12Z","updated_at":"2016-12-29T09:45:12Z","author_association":"NONE","body":"With 2.1 there was 4 shards, currently 3. Number of nodes and hardware is the same. \r\nCurrently objects are indexed wihout text fields, so physical size on disc is lower (on 2.1 cluster with test fields it was ~1TB on each node, currently its ~20GB). Number of objects is the same.\r\nHere is output of hot threads: https://gist.github.com/sicarrots/4c1b70fa52c2fbcc289e58a1ba8edd83","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/269614443","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-269614443","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":269614443,"node_id":"MDEyOklzc3VlQ29tbWVudDI2OTYxNDQ0Mw==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-12-29T11:02:36Z","updated_at":"2016-12-29T11:02:36Z","author_association":"MEMBER","body":"Interesting, the query spent most of the time trying to find all the path that starts with \"war\". This is only the first step of the suggestion query and it should be much faster. What sort of contexts do you have in your suggestions ? Can you provide the exact input for the suggestion field that you send to elasticsearch ?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274097662","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-274097662","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":274097662,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDA5NzY2Mg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-01-20T15:21:37Z","updated_at":"2017-01-20T15:21:37Z","author_association":"CONTRIBUTOR","body":"@sicarrots you're using a category context but then querying the completion suggester without specifying a context.  I've seen this cause very slow suggestions.  I think, in this case, that the suggester has to be run once for every context value (and I'm guessing you have a lot of them), which is causing this slow performance.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274097709","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-274097709","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":274097709,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDA5NzcwOQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-01-20T15:21:50Z","updated_at":"2017-01-20T15:21:50Z","author_association":"CONTRIBUTOR","body":"/cc @mikemccand @areek ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274532129","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-274532129","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":274532129,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDUzMjEyOQ==","user":{"login":"areek","id":753679,"node_id":"MDQ6VXNlcjc1MzY3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/753679?v=4","gravatar_id":"","url":"https://api.github.com/users/areek","html_url":"https://github.com/areek","followers_url":"https://api.github.com/users/areek/followers","following_url":"https://api.github.com/users/areek/following{/other_user}","gists_url":"https://api.github.com/users/areek/gists{/gist_id}","starred_url":"https://api.github.com/users/areek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areek/subscriptions","organizations_url":"https://api.github.com/users/areek/orgs","repos_url":"https://api.github.com/users/areek/repos","events_url":"https://api.github.com/users/areek/events{/privacy}","received_events_url":"https://api.github.com/users/areek/received_events","type":"User","site_admin":false},"created_at":"2017-01-23T16:12:47Z","updated_at":"2017-01-23T16:12:47Z","author_association":"CONTRIBUTOR","body":"@sicarrots As @clintongormley pointed out, slow performance in completion is due to enabling contexts in your completion mappings. When you don't specify a context with completion query, the query gets resolved to matching all contexts for the query prefix, which can slow down the completion query if you have high cardinality context values.\r\n\r\nYou should use context enabled completion mappings only when you intend to query completions with contexts. The match-all context behaviour when no context is specified in the completion query is for convenience and should not be used when performant suggestions are desired. If you do not intend on filtering suggestions with contexts, do not enable contexts in the completion field mapping.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281104696","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-281104696","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":281104696,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTEwNDY5Ng==","user":{"login":"nilabhsagar","id":20436609,"node_id":"MDQ6VXNlcjIwNDM2NjA5","avatar_url":"https://avatars0.githubusercontent.com/u/20436609?v=4","gravatar_id":"","url":"https://api.github.com/users/nilabhsagar","html_url":"https://github.com/nilabhsagar","followers_url":"https://api.github.com/users/nilabhsagar/followers","following_url":"https://api.github.com/users/nilabhsagar/following{/other_user}","gists_url":"https://api.github.com/users/nilabhsagar/gists{/gist_id}","starred_url":"https://api.github.com/users/nilabhsagar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nilabhsagar/subscriptions","organizations_url":"https://api.github.com/users/nilabhsagar/orgs","repos_url":"https://api.github.com/users/nilabhsagar/repos","events_url":"https://api.github.com/users/nilabhsagar/events{/privacy}","received_events_url":"https://api.github.com/users/nilabhsagar/received_events","type":"User","site_admin":false},"created_at":"2017-02-20T15:15:10Z","updated_at":"2017-02-20T15:15:10Z","author_association":"CONTRIBUTOR","body":"@clintongormley, @areek - The problem can be improved by using a non-printing character at index time for each of the suggestion input and using the same non-printing character at query time when no context is provided. This will increase a bit of index time and memory utilization. I checked it with indexing ~20 K documents and the memory utilization was as follows:\r\n**Captured completion size**\r\n- Without non-printing: 110596 bytes\r\n- With non-printing: 110654 bytes\r\n\r\nThis reduces the iteration under FSTUtil.intersectPrefixPaths by ~50%, which leads to improved consistent query performance. \r\n\r\nThe code changes is required as below\r\n**ContextMappings.java**\r\n```\r\n      protected Iterable<CharSequence> contexts() {\r\n            Set<CharSequence> typedContexts = new HashSet<>();\r\n            final CharsRefBuilder scratch = new CharsRefBuilder();\r\n            scratch.grow(1);\r\n            for (int typeId = 0; typeId < contextMappings.size(); typeId++) {\r\n                scratch.setCharAt(0, (char) typeId);\r\n                scratch.setLength(1);\r\n                ContextMapping mapping = contextMappings.get(typeId);\r\n                Set<CharSequence> contexts = new HashSet<>(mapping.parseContext(document));\r\n                if (this.contexts.get(mapping.name()) != null) {\r\n                    contexts.addAll(this.contexts.get(mapping.name()));\r\n                }\r\n                for (CharSequence context : contexts) {\r\n                    scratch.append(context);\r\n                    typedContexts.add(scratch.toCharsRef());\r\n                    scratch.setLength(1);\r\n                }\r\n            }\r\n            \r\n            /*Add non-printing character for empty context query*/\r\n            typedContexts.add(new String(new char['\\u001B']));\r\n            \r\n            return typedContexts;\r\n        }\r\n\r\n      public ContextQuery toContextQuery(CompletionQuery query, Map<String, List<ContextMapping.InternalQueryContext>> queryContexts) {\r\n        ContextQuery typedContextQuery = new ContextQuery(query);\r\n        if (queryContexts.isEmpty() == false) {\r\n            CharsRefBuilder scratch = new CharsRefBuilder();\r\n            scratch.grow(1);\r\n            for (int typeId = 0; typeId < contextMappings.size(); typeId++) {\r\n                scratch.setCharAt(0, (char) typeId);\r\n                scratch.setLength(1);\r\n                ContextMapping mapping = contextMappings.get(typeId);\r\n                List<ContextMapping.InternalQueryContext> internalQueryContext = queryContexts.get(mapping.name());\r\n                if (internalQueryContext != null) {\r\n                    for (ContextMapping.InternalQueryContext context : internalQueryContext) {\r\n                        scratch.append(context.context);\r\n                        typedContextQuery.addContext(scratch.toCharsRef(), context.boost, !context.isPrefix);\r\n                        scratch.setLength(1);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            /* Add non-printing character query for empty context query */\r\n            CharsRefBuilder scratch = new CharsRefBuilder();\r\n            scratch.grow(1);\r\n\r\n            scratch.append(new String(new char['\\u001B']));\r\n            typedContextQuery.addContext(scratch.toCharsRef(), 1, false);\r\n        }\r\n    \r\n        return typedContextQuery;\r\n    }\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/293572015","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-293572015","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":293572015,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzU3MjAxNQ==","user":{"login":"nilabhsagar","id":20436609,"node_id":"MDQ6VXNlcjIwNDM2NjA5","avatar_url":"https://avatars0.githubusercontent.com/u/20436609?v=4","gravatar_id":"","url":"https://api.github.com/users/nilabhsagar","html_url":"https://github.com/nilabhsagar","followers_url":"https://api.github.com/users/nilabhsagar/followers","following_url":"https://api.github.com/users/nilabhsagar/following{/other_user}","gists_url":"https://api.github.com/users/nilabhsagar/gists{/gist_id}","starred_url":"https://api.github.com/users/nilabhsagar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nilabhsagar/subscriptions","organizations_url":"https://api.github.com/users/nilabhsagar/orgs","repos_url":"https://api.github.com/users/nilabhsagar/repos","events_url":"https://api.github.com/users/nilabhsagar/events{/privacy}","received_events_url":"https://api.github.com/users/nilabhsagar/received_events","type":"User","site_admin":false},"created_at":"2017-04-12T13:16:44Z","updated_at":"2017-04-12T13:16:44Z","author_association":"CONTRIBUTOR","body":"Any opinion on the above suggestion?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/374311199","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-374311199","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":374311199,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NDMxMTE5OQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2018-03-19T18:08:53Z","updated_at":"2018-03-19T18:08:53Z","author_association":"MEMBER","body":"cc @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/375686108","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-375686108","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":375686108,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NTY4NjEwOA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2018-03-23T14:38:57Z","updated_at":"2018-03-23T14:38:57Z","author_association":"MEMBER","body":"I think we should simplify the experience with contexts aware suggestions by refusing queries without contexts. It's easy to build two suggesters, one with a context and the other one without if the usage requires to query without contexts. I opened https://github.com/elastic/elasticsearch/issues/29222 to discuss this so I hope you don't mind if I close this issue. We can continue the discussion on the new issue to see what the best options are. I am also not very happy with the current solution since it makes the user believe that they can perform boolean operations on the contexts (which we can't) but that's another issue.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/459418214","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-459418214","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":459418214,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1OTQxODIxNA==","user":{"login":"evgenyfadeev","id":102018,"node_id":"MDQ6VXNlcjEwMjAxOA==","avatar_url":"https://avatars0.githubusercontent.com/u/102018?v=4","gravatar_id":"","url":"https://api.github.com/users/evgenyfadeev","html_url":"https://github.com/evgenyfadeev","followers_url":"https://api.github.com/users/evgenyfadeev/followers","following_url":"https://api.github.com/users/evgenyfadeev/following{/other_user}","gists_url":"https://api.github.com/users/evgenyfadeev/gists{/gist_id}","starred_url":"https://api.github.com/users/evgenyfadeev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evgenyfadeev/subscriptions","organizations_url":"https://api.github.com/users/evgenyfadeev/orgs","repos_url":"https://api.github.com/users/evgenyfadeev/repos","events_url":"https://api.github.com/users/evgenyfadeev/events{/privacy}","received_events_url":"https://api.github.com/users/evgenyfadeev/received_events","type":"User","site_admin":false},"created_at":"2019-01-31T16:50:38Z","updated_at":"2019-01-31T16:50:38Z","author_association":"NONE","body":"@jimczi it would be indeed helpful to refuse queries with missing contexts when they are enabled","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/461618848","html_url":"https://github.com/elastic/elasticsearch/issues/22357#issuecomment-461618848","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22357","id":461618848,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTYxODg0OA==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2019-02-07T22:26:42Z","updated_at":"2019-02-07T22:26:42Z","author_association":"CONTRIBUTOR","body":"@evgenyfadeev This has already been implemented: deprecation starting with v 6.4, and removing the ability to index or query context suggestions without context from v 7.0","performed_via_github_app":null}]