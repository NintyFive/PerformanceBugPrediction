{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/18398","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18398/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18398/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18398/events","html_url":"https://github.com/elastic/elasticsearch/issues/18398","id":155235775,"node_id":"MDU6SXNzdWUxNTUyMzU3NzU=","number":18398,"title":"Compilation horrible slow on some huge statements","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"labels":[{"id":146834791,"node_id":"MDU6TGFiZWwxNDY4MzQ3OTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Scripting","name":":Core/Infra/Scripting","color":"0e8a16","default":false,"description":"Scripting abstractions, Painless, and Mustache"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2016-05-17T11:21:20Z","updated_at":"2018-02-14T13:21:52Z","closed_at":"2016-05-17T16:18:20Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"While working on indify string concats for painless, I noticed that some statements take veeery long to compile. Some background:\n\nIndy string concats only allow a maximum of 200 parts per invokedynamic. To test the code to allow more (using intermediate results), I added a simple statement with 211 items and let painless parse it:\n\n```\nString s = \"cat\"; return s + \"000\".toString() + \"001\".toString() + ... + \"209\".toString();\n```\n\nThis takes on painless on my computer up to 300 seconds. If I remove the `.toString()` calls, it gets a bit faster, but the result is that strings are already merged while compiling (so the `.toString()` is just a workaround to prevent concats on compilation: I did not find a test for that, its cool that painless does this!). It gets even slower if you instead cast every single string to `(def)`, its still works and works and works since 1000s.\n\nLooks like there is some exponential runtime problem.\n\nThis is my test code:\n\n``` java\n    public void testAppendMany() {\n        StringBuilder script = new StringBuilder(\"String s = \\\"cat\\\"; return s\");\n        StringBuilder result = new StringBuilder(\"cat\");\n        for (int i = 0; i < WriterConstants.MAX_INDY_STRING_CONCAT_ARGS + 10; i++) {\n            final String s = String.format(Locale.ROOT,  \"%03d\", i);\n            script.append(\" + '\").append(s).append(\"'.toString()\");\n            result.append(s);\n        }\n        System.out.println(Debugger.toString(script.toString()));\n        //assertEquals(result.toString(), exec(script.toString()));\n    }\n```\n","closed_by":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"performed_via_github_app":null}