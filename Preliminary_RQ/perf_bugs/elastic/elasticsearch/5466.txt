{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/5466","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5466/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5466/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5466/events","html_url":"https://github.com/elastic/elasticsearch/issues/5466","id":29764930,"node_id":"MDU6SXNzdWUyOTc2NDkzMA==","number":5466,"title":"Search API: Expontial performance degradation and increase std. deviation when specifying \"size\" param greater than 999999","user":{"login":"bobbyhubbard","id":5067336,"node_id":"MDQ6VXNlcjUwNjczMzY=","avatar_url":"https://avatars1.githubusercontent.com/u/5067336?v=4","gravatar_id":"","url":"https://api.github.com/users/bobbyhubbard","html_url":"https://github.com/bobbyhubbard","followers_url":"https://api.github.com/users/bobbyhubbard/followers","following_url":"https://api.github.com/users/bobbyhubbard/following{/other_user}","gists_url":"https://api.github.com/users/bobbyhubbard/gists{/gist_id}","starred_url":"https://api.github.com/users/bobbyhubbard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bobbyhubbard/subscriptions","organizations_url":"https://api.github.com/users/bobbyhubbard/orgs","repos_url":"https://api.github.com/users/bobbyhubbard/repos","events_url":"https://api.github.com/users/bobbyhubbard/events{/privacy}","received_events_url":"https://api.github.com/users/bobbyhubbard/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-03-19T19:31:33Z","updated_at":"2014-09-23T18:13:41Z","closed_at":"2014-09-23T17:02:21Z","author_association":"NONE","active_lock_reason":null,"body":"(Now first of all, this scenario is ridiculous and quite unscientific in its method. Furthermore, this is not blocking us in any way shape or form but we found it interesting so I thought I would report it anyway.)\n\nOne of our clients has a use case where they want all search hits to be returned without pagination. Typically, in this case, results sets max out at around 300 documents. Since they want all results, and there is no ALL option for size, the developer choose to use 999999999 (9 9's) as the size. While silly, this is still well within the limits of an Integer in Java and was just meant to signify something like MAX_INT. \n\nThe result was a query that took on average between 2000 and 5000ms for 229 total hits. They reported this issue to us and we investigated. Now the interesting part - reducing the size parameter by a factor of 10 (remove one 9) showed a similar factor of 10 reduction in performance time. So 99999999 (8 9's) loads on average in 200 to 500ms. Reduce by another factor of 10 (7 9's) and it drops almost another factor of 10. At 7 9's loads times are between 40 and 150ms. This is still a much higher std deviation than typical for repeat search's for the exact same search...likely cached.\n\nAt 6 9's, the results are more in line with expectations and have a much smaller std deviation at 20-30ms on avg. \n\nThis test was done on an isolated 2 node cluster with no other activity on the system. The same query was executed for all tests with the only difference being the size param. \n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}