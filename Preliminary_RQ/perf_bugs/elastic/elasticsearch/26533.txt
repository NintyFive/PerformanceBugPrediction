{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/26533","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26533/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26533/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26533/events","html_url":"https://github.com/elastic/elasticsearch/issues/26533","id":255924176,"node_id":"MDU6SXNzdWUyNTU5MjQxNzY=","number":26533,"title":"[ Request Reopen ] Java application using BulkProcessing hangs if elasticsearch hangs","user":{"login":"jkdihenkar","id":5088946,"node_id":"MDQ6VXNlcjUwODg5NDY=","avatar_url":"https://avatars1.githubusercontent.com/u/5088946?v=4","gravatar_id":"","url":"https://api.github.com/users/jkdihenkar","html_url":"https://github.com/jkdihenkar","followers_url":"https://api.github.com/users/jkdihenkar/followers","following_url":"https://api.github.com/users/jkdihenkar/following{/other_user}","gists_url":"https://api.github.com/users/jkdihenkar/gists{/gist_id}","starred_url":"https://api.github.com/users/jkdihenkar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkdihenkar/subscriptions","organizations_url":"https://api.github.com/users/jkdihenkar/orgs","repos_url":"https://api.github.com/users/jkdihenkar/repos","events_url":"https://api.github.com/users/jkdihenkar/events{/privacy}","received_events_url":"https://api.github.com/users/jkdihenkar/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-09-07T12:44:25Z","updated_at":"2019-05-24T15:31:53Z","closed_at":"2017-09-15T13:48:02Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version** (`bin/elasticsearch --version`):\r\nTested over all major 5.x versions [ 5.1.2 5.2.x 5.3.x  ... ]\r\n\r\n*Plugins installed**: [ defaults ]\r\n\r\n**JVM version** (`java -version`):\r\nJava(TM) SE Runtime Environment (build 1.8.0_144-b01)\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): CentOS 6\r\n\r\n**Description of the problem including expected versus actual behavior**: The issue faced is when using the Java API Transport client in client side applications. If ES Hangs or goes down, all bulk processor threads gets deadlocked. \r\n\r\nThis issue was already discussed here: https://discuss.elastic.co/t/java-application-using-bulkprocessing-hangs-if-elasticsearch-hangs/36960/8\r\n\r\nWe are facing this issue as a result of ES going down due to https://github.com/elastic/elasticsearch/issues/24359.\r\n\r\nCan we as a feature implement a timed waiting semaphore as described here: https://discuss.elastic.co/t/java-application-using-bulkprocessing-hangs-if-elasticsearch-hangs/36960/2 and expose it as a param the value for semaphore release. ( Or ofcourse a better way of correcting this ). \r\n\r\nIs there any workaround for this possible from the code outside of driver as a quick fix in case it can't be handled at driver level?\r\n\r\n**Steps to reproduce**:\r\n\r\n1. ES is running and bulk insertion from application in progress.\r\n2. ES nodes restart\r\n3. Deadlock at application side.\r\n\r\n**Thread dump**: \r\n\r\nLooks like as follows: \r\n```\r\n\"HistoryCachedExecutor-125\" #429 daemon prio=5 os_prio=0 tid=0x00007fd268dea000 nid=0x8fe1 waiting on condition [0x00007fd0de2e3000]\r\n   java.lang.Thread.State: WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x0000000744a1ca98> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)\r\n        at java.util.concurrent.LinkedBlockingDeque.takeFirst(LinkedBlockingDeque.java:492)\r\n        at java.util.concurrent.LinkedBlockingDeque.take(LinkedBlockingDeque.java:680)\r\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n   Locked ownable synchronizers:\r\n        - None\r\n```\r\n\r\nAny help in fix or a workaround for this will be really appreciated. Glad to provide any further info needed on this.\r\n","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}