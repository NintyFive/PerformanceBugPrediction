{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/47602","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47602/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47602/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47602/events","html_url":"https://github.com/elastic/elasticsearch/issues/47602","id":502798916,"node_id":"MDU6SXNzdWU1MDI3OTg5MTY=","number":47602,"title":"Percolator search is way too slow","user":{"login":"Larrik","id":1168007,"node_id":"MDQ6VXNlcjExNjgwMDc=","avatar_url":"https://avatars2.githubusercontent.com/u/1168007?v=4","gravatar_id":"","url":"https://api.github.com/users/Larrik","html_url":"https://github.com/Larrik","followers_url":"https://api.github.com/users/Larrik/followers","following_url":"https://api.github.com/users/Larrik/following{/other_user}","gists_url":"https://api.github.com/users/Larrik/gists{/gist_id}","starred_url":"https://api.github.com/users/Larrik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Larrik/subscriptions","organizations_url":"https://api.github.com/users/Larrik/orgs","repos_url":"https://api.github.com/users/Larrik/repos","events_url":"https://api.github.com/users/Larrik/events{/privacy}","received_events_url":"https://api.github.com/users/Larrik/received_events","type":"User","site_admin":false},"labels":[{"id":156502592,"node_id":"MDU6TGFiZWwxNTY1MDI1OTI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Percolator","name":":Search/Percolator","color":"0e8a16","default":false,"description":"Reverse search: find queries that match a document"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2019-10-04T19:09:57Z","updated_at":"2020-06-22T16:58:26Z","closed_at":"2019-10-07T08:34:47Z","author_association":"NONE","active_lock_reason":null,"body":"Our company has a large number of users, and we use percolators for \"saved searches\" to compare new \"gigs\" against.\r\n\r\nSo upon the addition of a new gig, in order to get all of the ids of the matching searches, we have this elasticsearch-dsl-py code currently:\r\n```\r\nsearch = indexes.percolator.search.query('percolate', field='query', document=doc)\r\nagg = A('terms', field='_id', size=100000)\r\nsearch.aggs.bucket('es_ids', agg)\r\nresp = search[0:0].execute()\r\nreturn [item['key'] for item in resp.aggregations.es_ids.buckets]\r\n```\r\n\r\nThis feels like a brittle abuse of a feature, but it runs in 15 seconds. Conversely, the apparent \"right\" way to do this:\r\n```\r\nsearch = indexes.percolator.search.query('constant_score', filter=Q('percolate', field='query', document=doc))\r\nresp = search.scan()\r\nresults = [item.meta.id for item in resp]\r\n```\r\ntakes _almost 2 minutes!_\r\n\r\nIt's possible I'm just not doing this right, but \"get all the ids of matching searches\" has precious little documentation for such an obvious feature.","closed_by":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"performed_via_github_app":null}