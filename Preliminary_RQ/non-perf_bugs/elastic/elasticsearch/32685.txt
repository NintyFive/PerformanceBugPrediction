{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/32685","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32685/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32685/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32685/events","html_url":"https://github.com/elastic/elasticsearch/issues/32685","id":348414703,"node_id":"MDU6SXNzdWUzNDg0MTQ3MDM=","number":32685,"title":"[CI] RemoteIndexAuditTrailStartingTests failed authn [test_user] [cluster:monitor/health]","user":{"login":"albertzaharovits","id":4568420,"node_id":"MDQ6VXNlcjQ1Njg0MjA=","avatar_url":"https://avatars2.githubusercontent.com/u/4568420?v=4","gravatar_id":"","url":"https://api.github.com/users/albertzaharovits","html_url":"https://github.com/albertzaharovits","followers_url":"https://api.github.com/users/albertzaharovits/followers","following_url":"https://api.github.com/users/albertzaharovits/following{/other_user}","gists_url":"https://api.github.com/users/albertzaharovits/gists{/gist_id}","starred_url":"https://api.github.com/users/albertzaharovits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertzaharovits/subscriptions","organizations_url":"https://api.github.com/users/albertzaharovits/orgs","repos_url":"https://api.github.com/users/albertzaharovits/repos","events_url":"https://api.github.com/users/albertzaharovits/events{/privacy}","received_events_url":"https://api.github.com/users/albertzaharovits/received_events","type":"User","site_admin":false},"labels":[{"id":912837734,"node_id":"MDU6TGFiZWw5MTI4Mzc3MzQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Security/Audit","name":":Security/Audit","color":"0e8a16","default":false,"description":"X-Pack Audit logging"},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"},{"id":1009148120,"node_id":"MDU6TGFiZWwxMDA5MTQ4MTIw","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v6.4.1","name":"v6.4.1","color":"DDDDDD","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"albertzaharovits","id":4568420,"node_id":"MDQ6VXNlcjQ1Njg0MjA=","avatar_url":"https://avatars2.githubusercontent.com/u/4568420?v=4","gravatar_id":"","url":"https://api.github.com/users/albertzaharovits","html_url":"https://github.com/albertzaharovits","followers_url":"https://api.github.com/users/albertzaharovits/followers","following_url":"https://api.github.com/users/albertzaharovits/following{/other_user}","gists_url":"https://api.github.com/users/albertzaharovits/gists{/gist_id}","starred_url":"https://api.github.com/users/albertzaharovits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertzaharovits/subscriptions","organizations_url":"https://api.github.com/users/albertzaharovits/orgs","repos_url":"https://api.github.com/users/albertzaharovits/repos","events_url":"https://api.github.com/users/albertzaharovits/events{/privacy}","received_events_url":"https://api.github.com/users/albertzaharovits/received_events","type":"User","site_admin":false},"assignees":[{"login":"albertzaharovits","id":4568420,"node_id":"MDQ6VXNlcjQ1Njg0MjA=","avatar_url":"https://avatars2.githubusercontent.com/u/4568420?v=4","gravatar_id":"","url":"https://api.github.com/users/albertzaharovits","html_url":"https://github.com/albertzaharovits","followers_url":"https://api.github.com/users/albertzaharovits/followers","following_url":"https://api.github.com/users/albertzaharovits/following{/other_user}","gists_url":"https://api.github.com/users/albertzaharovits/gists{/gist_id}","starred_url":"https://api.github.com/users/albertzaharovits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertzaharovits/subscriptions","organizations_url":"https://api.github.com/users/albertzaharovits/orgs","repos_url":"https://api.github.com/users/albertzaharovits/repos","events_url":"https://api.github.com/users/albertzaharovits/events{/privacy}","received_events_url":"https://api.github.com/users/albertzaharovits/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2018-08-07T17:22:54Z","updated_at":"2019-02-14T13:17:54Z","closed_at":"2019-02-14T13:17:53Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Build failure: https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+6.4+matrix-java-periodic/ES_BUILD_JAVA=java10,ES_RUNTIME_JAVA=java8,nodes=virtual&&linux/21/console\r\n\r\nDoes not reproduce:\r\n```\r\nREPRODUCE WITH: ./gradlew :x-pack:plugin:security:test \\\r\n  -Dtests.seed=4B1F8200799F1127 \\\r\n  -Dtests.class=org.elasticsearch.xpack.security.audit.index.RemoteIndexAuditTrailStartingTests \\\r\n  -Dtests.method=\"testThatRemoteAuditInstancesAreStarted\" \\\r\n  -Dtests.security.manager=true \\\r\n  -Dtests.locale=hu-HU \\\r\n  -Dtests.timezone=Africa/Khartoum\r\n```\r\n\r\nStacktrace for the root failure:\r\n```\r\nElasticsearchSecurityException[unable to authenticate user [test_user] for action [cluster:monitor/health]]\r\n\tat __randomizedtesting.SeedInfo.seed([4B1F8200799F1127:64B1E0821634A508]:0)\r\n\tat org.elasticsearch.xpack.core.security.support.Exceptions.authenticationError(Exceptions.java:18)\r\n\tat org.elasticsearch.xpack.core.security.authc.DefaultAuthenticationFailureHandler.createAuthenticationError(DefaultAuthenticationFailureHandler.java:129)\r\n\tat org.elasticsearch.xpack.core.security.authc.DefaultAuthenticationFailureHandler.failedAuthentication(DefaultAuthenticationFailureHandler.java:63)\r\n\tat org.elasticsearch.xpack.security.authc.AuthenticationService$AuditableTransportRequest.authenticationFailed(AuthenticationService.java:520)\r\n\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.consumeUser(AuthenticationService.java:358)\r\n\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.lambda$consumeToken$14(AuthenticationService.java:296)\r\n\tat org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:60)\r\n\tat org.elasticsearch.xpack.core.common.IteratingActionListener.onResponse(IteratingActionListener.java:96)\r\n\tat org.elasticsearch.xpack.core.common.IteratingActionListener.run(IteratingActionListener.java:76)\r\n\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.consumeToken(AuthenticationService.java:300)\r\n\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.lambda$extractToken$9(AuthenticationService.java:234)\r\n\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.extractToken(AuthenticationService.java:244)\r\n\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.lambda$authenticateAsync$0(AuthenticationService.java:178)\r\n\tat org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:60)\r\n\tat org.elasticsearch.xpack.security.authc.TokenService.getAndValidateToken(TokenService.java:284)\r\n\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.lambda$authenticateAsync$2(AuthenticationService.java:174)\r\n\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.lambda$lookForExistingAuthentication$4(AuthenticationService.java:205)\r\n\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.lookForExistingAuthentication(AuthenticationService.java:216)\r\n\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.authenticateAsync(AuthenticationService.java:170)\r\n\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.access$000(AuthenticationService.java:131)\r\n\tat org.elasticsearch.xpack.security.authc.AuthenticationService.authenticate(AuthenticationService.java:101)\r\n\tat org.elasticsearch.xpack.security.action.filter.SecurityActionFilter.applyInternal(SecurityActionFilter.java:160)\r\n\tat org.elasticsearch.xpack.security.action.filter.SecurityActionFilter.apply(SecurityActionFilter.java:113)\r\n\tat org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:165)\r\n\tat org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:139)\r\n\tat org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:81)\r\n\tat org.elasticsearch.client.node.NodeClient.executeLocally(NodeClient.java:87)\r\n\tat org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:76)\r\n\tat org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:407)\r\n\tat org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:67)\r\n\tat org.elasticsearch.client.support.AbstractClient$1.doExecute(AbstractClient.java:1788)\r\n\tat org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:407)\r\n\tat org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:396)\r\n\tat org.elasticsearch.client.support.AbstractClient$ClusterAdmin.execute(AbstractClient.java:708)\r\n\tat org.elasticsearch.action.ActionRequestBuilder.execute(ActionRequestBuilder.java:46)\r\n\tat org.elasticsearch.action.ActionRequestBuilder.get(ActionRequestBuilder.java:53)\r\n\tat org.elasticsearch.xpack.security.audit.index.RemoteIndexAuditTrailStartingTests.startRemoteCluster(RemoteIndexAuditTrailStartingTests.java:122)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1713)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:941)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:957)\r\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:817)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:468)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:916)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:802)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:852)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:863)\r\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\nI reckon there is a race when starting the second cluster, and the user the client is using is not available somehow.\r\n\r\n```\r\n    @Before\r\n    public void startRemoteCluster() throws IOException, InterruptedException {\r\n        final List<String> addresses = new ArrayList<>();\r\n        // get addresses for current cluster\r\n        final NodesInfoResponse response = client().admin().cluster().prepareNodesInfo().execute().actionGet();\r\n        final String clusterName = response.getClusterName().value();\r\n        for (final NodeInfo nodeInfo : response.getNodes()) {\r\n            final TransportAddress address = nodeInfo.getTransport().address().publishAddress();\r\n            addresses.add(address.address().getHostString() + \":\" + address.address().getPort());\r\n        }\r\n\r\n        // create another cluster\r\n        final String cluster2Name = clusterName(Scope.TEST.name(), randomLong());\r\n\r\n        // Setup a second test cluster with a single node, security enabled, and SSL\r\n        final int numNodes = 1;\r\n        final SecuritySettingsSource cluster2SettingsSource =\r\n                new SecuritySettingsSource(numNodes, sslEnabled, createTempDir(), Scope.TEST) {\r\n            @Override\r\n            public Settings nodeSettings(int nodeOrdinal) {\r\n                final Settings.Builder builder = Settings.builder()\r\n                        .put(super.nodeSettings(nodeOrdinal))\r\n                        // Disable native ML autodetect_process as the c++ controller won't be available\r\n//                        .put(MachineLearningField.AUTODETECT_PROCESS.getKey(), false)\r\n                        .put(\"xpack.security.audit.enabled\", true)\r\n                        .put(\"xpack.security.audit.outputs\", randomFrom(\"index\", \"index,logfile\"))\r\n                        .putList(\"xpack.security.audit.index.client.hosts\", addresses.toArray(new String[addresses.size()]))\r\n                        .put(\"xpack.security.audit.index.client.cluster.name\", clusterName)\r\n                        .put(\"xpack.security.audit.index.client.xpack.security.user\",\r\n                             TEST_USER_NAME + \":\" + SecuritySettingsSourceField.TEST_PASSWORD)\r\n                        .put(\"xpack.security.audit.index.settings.index.number_of_shards\", 1)\r\n                        .put(\"xpack.security.audit.index.settings.index.number_of_replicas\", 0);\r\n\r\n                addClientSSLSettings(builder, \"xpack.security.audit.index.client.\");\r\n                builder.put(\"xpack.security.audit.index.client.xpack.security.transport.ssl.enabled\", sslEnabled);\r\n                return builder.build();\r\n            }\r\n        };\r\n        remoteCluster = new InternalTestCluster(randomLong(), createTempDir(), false, true, numNodes, numNodes,\r\n                cluster2Name, cluster2SettingsSource, 0, SECOND_CLUSTER_NODE_PREFIX, getMockPlugins(), getClientWrapper());\r\n        remoteCluster.beforeTest(random(), 0.0);\r\n>>>>>>  assertNoTimeout(remoteCluster.client().admin().cluster().prepareHealth().setWaitForGreenStatus().get());\r\n    }\r\n````","closed_by":{"login":"albertzaharovits","id":4568420,"node_id":"MDQ6VXNlcjQ1Njg0MjA=","avatar_url":"https://avatars2.githubusercontent.com/u/4568420?v=4","gravatar_id":"","url":"https://api.github.com/users/albertzaharovits","html_url":"https://github.com/albertzaharovits","followers_url":"https://api.github.com/users/albertzaharovits/followers","following_url":"https://api.github.com/users/albertzaharovits/following{/other_user}","gists_url":"https://api.github.com/users/albertzaharovits/gists{/gist_id}","starred_url":"https://api.github.com/users/albertzaharovits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertzaharovits/subscriptions","organizations_url":"https://api.github.com/users/albertzaharovits/orgs","repos_url":"https://api.github.com/users/albertzaharovits/repos","events_url":"https://api.github.com/users/albertzaharovits/events{/privacy}","received_events_url":"https://api.github.com/users/albertzaharovits/received_events","type":"User","site_admin":false},"performed_via_github_app":null}