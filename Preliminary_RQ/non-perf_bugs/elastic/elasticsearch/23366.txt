{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/23366","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23366/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23366/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23366/events","html_url":"https://github.com/elastic/elasticsearch/issues/23366","id":210208351,"node_id":"MDU6SXNzdWUyMTAyMDgzNTE=","number":23366,"title":"simple query string query does not support AUTO fuzziness","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"assignees":[{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false}],"milestone":null,"comments":9,"created_at":"2017-02-25T03:57:40Z","updated_at":"2018-05-05T09:55:04Z","closed_at":"2018-05-05T09:55:04Z","author_association":"MEMBER","active_lock_reason":null,"body":"**Elasticsearch version**: 5.2.1\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nLucene Query parser [supports the following ways](https://lucene.apache.org/core/6_4_1/queryparser/org/apache/lucene/queryparser/classic/package-summary.html#Fuzzy_Searches) to express fuzzy queries:\r\n\r\n```\r\nfield:content~1\r\nfield:content~\r\n```\r\n\r\nThe later means automatic fuzziness factor.\r\n\r\nThe QueryString query works with this parameter very well. The SimpleQueryString query does not.\r\n\r\nReported at: https://discuss.elastic.co/t/fuzzy-syntaxe-tilde/76374\r\n\r\n# Steps to reproduce\r\n \r\n```\r\nDELETE fuzzyindex\r\nPUT fuzzyindex/fuzzytype/1?refresh\r\n{\r\n  \"name\": \"disneyland\"\r\n}\r\n```\r\n\r\n## QueryString\r\n\r\n```\r\nGET fuzzyindex/fuzzytype/_search\r\n{\r\n  \"query\": {\r\n    \"query_string\": {\r\n      \"query\": \"disneylan~\",\r\n      \"fields\": [\r\n        \"name\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\ngives:\r\n\r\n```json\r\n{\r\n  \"took\" : 11,\r\n  \"timed_out\" : false,\r\n  \"_shards\" : {\r\n    \"total\" : 5,\r\n    \"successful\" : 5,\r\n    \"failed\" : 0\r\n  },\r\n  \"hits\" : {\r\n    \"total\" : 1,\r\n    \"max_score\" : 0.25571743,\r\n    \"hits\" : [\r\n      {\r\n        \"_index\" : \"fuzzyindex\",\r\n        \"_type\" : \"fuzzytype\",\r\n        \"_id\" : \"1\",\r\n        \"_score\" : 0.25571743,\r\n        \"_source\" : {\r\n          \"name\" : \"disneyland\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n## SimpleQueryString\r\n\r\n```\r\nGET fuzzyindex/fuzzytype/_search\r\n{\r\n  \"query\": {\r\n    \"simple_query_string\": {\r\n      \"query\": \"disneylan~\",\r\n      \"fields\": [\r\n        \"name\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\ngives:\r\n\r\n```json\r\n{\r\n  \"took\" : 2,\r\n  \"timed_out\" : false,\r\n  \"_shards\" : {\r\n    \"total\" : 5,\r\n    \"successful\" : 5,\r\n    \"failed\" : 0\r\n  },\r\n  \"hits\" : {\r\n    \"total\" : 0,\r\n    \"max_score\" : null,\r\n    \"hits\" : [ ]\r\n  }\r\n}\r\n```\r\n\r\n## Explain API\r\n\r\n### QueryString\r\n\r\n```\r\nPOST fuzzyindex/fuzzytype/1/_explain\r\n{\r\n  \"query\": {\r\n    \"query_string\": {\r\n      \"query\": \"disneylan~\",\r\n      \"fields\": [\r\n        \"name\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\ngives\r\n\r\n```json\r\n{\r\n  \"_index\" : \"fuzzyindex\",\r\n  \"_type\" : \"fuzzytype\",\r\n  \"_id\" : \"1\",\r\n  \"matched\" : true,\r\n  \"explanation\" : {\r\n    \"value\" : 0.25571743,\r\n    \"description\" : \"sum of:\",\r\n    \"details\" : [\r\n      {\r\n        \"value\" : 0.25571743,\r\n        \"description\" : \"weight(name:disneyland in 0) [PerFieldSimilarity], result of:\",\r\n        \"details\" : [\r\n          {\r\n            \"value\" : 0.25571743,\r\n            \"description\" : \"score(doc=0,freq=1.0 = termFreq=1.0\\n), product of:\",\r\n            \"details\" : [\r\n              {\r\n                \"value\" : 0.8888889,\r\n                \"description\" : \"boost\",\r\n                \"details\" : [ ]\r\n              },\r\n              {\r\n                \"value\" : 0.2876821,\r\n                \"description\" : \"idf, computed as log(1 + (docCount - docFreq + 0.5) / (docFreq + 0.5)) from:\",\r\n                \"details\" : [\r\n                  {\r\n                    \"value\" : 1.0,\r\n                    \"description\" : \"docFreq\",\r\n                    \"details\" : [ ]\r\n                  },\r\n                  {\r\n                    \"value\" : 1.0,\r\n                    \"description\" : \"docCount\",\r\n                    \"details\" : [ ]\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"value\" : 1.0,\r\n                \"description\" : \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1 * (1 - b + b * fieldLength / avgFieldLength)) from:\",\r\n                \"details\" : [\r\n                  {\r\n                    \"value\" : 1.0,\r\n                    \"description\" : \"termFreq=1.0\",\r\n                    \"details\" : [ ]\r\n                  },\r\n                  {\r\n                    \"value\" : 1.2,\r\n                    \"description\" : \"parameter k1\",\r\n                    \"details\" : [ ]\r\n                  },\r\n                  {\r\n                    \"value\" : 0.75,\r\n                    \"description\" : \"parameter b\",\r\n                    \"details\" : [ ]\r\n                  },\r\n                  {\r\n                    \"value\" : 1.0,\r\n                    \"description\" : \"avgFieldLength\",\r\n                    \"details\" : [ ]\r\n                  },\r\n                  {\r\n                    \"value\" : 1.0,\r\n                    \"description\" : \"fieldLength\",\r\n                    \"details\" : [ ]\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"value\" : 0.0,\r\n        \"description\" : \"match on required clause, product of:\",\r\n        \"details\" : [\r\n          {\r\n            \"value\" : 0.0,\r\n            \"description\" : \"# clause\",\r\n            \"details\" : [ ]\r\n          },\r\n          {\r\n            \"value\" : 1.0,\r\n            \"description\" : \"*:*, product of:\",\r\n            \"details\" : [\r\n              {\r\n                \"value\" : 1.0,\r\n                \"description\" : \"boost\",\r\n                \"details\" : [ ]\r\n              },\r\n              {\r\n                \"value\" : 1.0,\r\n                \"description\" : \"queryNorm\",\r\n                \"details\" : [ ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n### SimpleQueryString\r\n\r\n```\r\nPOST fuzzyindex/fuzzytype/1/_explain\r\n{\r\n  \"query\": {\r\n    \"simple_query_string\": {\r\n      \"query\": \"disneylan~\",\r\n      \"fields\": [\r\n        \"name\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\ngives:\r\n\r\n```json\r\n{\r\n  \"_index\" : \"fuzzyindex\",\r\n  \"_type\" : \"fuzzytype\",\r\n  \"_id\" : \"1\",\r\n  \"matched\" : false,\r\n  \"explanation\" : {\r\n    \"value\" : 0.0,\r\n    \"description\" : \"Failure to meet condition(s) of required/prohibited clause(s)\",\r\n    \"details\" : [\r\n      {\r\n        \"value\" : 0.0,\r\n        \"description\" : \"no match on required clause (name:disneylan)\",\r\n        \"details\" : [\r\n          {\r\n            \"value\" : 0.0,\r\n            \"description\" : \"no matching term\",\r\n            \"details\" : [ ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"value\" : 0.0,\r\n        \"description\" : \"match on required clause, product of:\",\r\n        \"details\" : [\r\n          {\r\n            \"value\" : 0.0,\r\n            \"description\" : \"# clause\",\r\n            \"details\" : [ ]\r\n          },\r\n          {\r\n            \"value\" : 1.0,\r\n            \"description\" : \"*:*, product of:\",\r\n            \"details\" : [\r\n              {\r\n                \"value\" : 1.0,\r\n                \"description\" : \"boost\",\r\n                \"details\" : [ ]\r\n              },\r\n              {\r\n                \"value\" : 1.0,\r\n                \"description\" : \"queryNorm\",\r\n                \"details\" : [ ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n","closed_by":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"performed_via_github_app":null}