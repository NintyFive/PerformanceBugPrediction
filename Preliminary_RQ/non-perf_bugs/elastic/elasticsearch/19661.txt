{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/19661","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19661/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19661/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19661/events","html_url":"https://github.com/elastic/elasticsearch/issues/19661","id":168120590,"node_id":"MDU6SXNzdWUxNjgxMjA1OTA=","number":19661,"title":"add alternative to replaceAll that allows action when does not match","user":{"login":"djschny","id":129643,"node_id":"MDQ6VXNlcjEyOTY0Mw==","avatar_url":"https://avatars0.githubusercontent.com/u/129643?v=4","gravatar_id":"","url":"https://api.github.com/users/djschny","html_url":"https://github.com/djschny","followers_url":"https://api.github.com/users/djschny/followers","following_url":"https://api.github.com/users/djschny/following{/other_user}","gists_url":"https://api.github.com/users/djschny/gists{/gist_id}","starred_url":"https://api.github.com/users/djschny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/djschny/subscriptions","organizations_url":"https://api.github.com/users/djschny/orgs","repos_url":"https://api.github.com/users/djschny/repos","events_url":"https://api.github.com/users/djschny/events{/privacy}","received_events_url":"https://api.github.com/users/djschny/received_events","type":"User","site_admin":false},"labels":[{"id":146834791,"node_id":"MDU6TGFiZWwxNDY4MzQ3OTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Scripting","name":":Core/Infra/Scripting","color":"0e8a16","default":false,"description":"Scripting abstractions, Painless, and Mustache"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-07-28T15:11:05Z","updated_at":"2018-02-14T13:23:17Z","closed_at":"2017-11-29T16:01:04Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Currently `replaceAll` returns the original string if the pattern supplied does not match. This may not be ideal for all situations. Consider the following example where if a string does not match we might want to put them all into a single bucket (ie. return a default value).\n\ncc @nik9000 \n\n```\nDELETE test\nPUT /test\n{\n  \"mappings\": {\n    \"doc\": {\n      \"properties\": {\n        \"foo\": {\n          \"type\": \"text\",\n          \"fielddata\": true\n        }\n      }\n    }\n  }\n}\nPUT test/doc/1\n{\n  \"foo\": \"1.0\"\n}\nPUT test/doc/2\n{\n  \"foo\": \"2.0\"\n}\nPUT test/doc/3\n{\n  \"foo\": \"2.1\"\n}\nPUT test/doc/4\n{\n  \"foo\": \"v5.0\"\n}\nGET /test/_search\n{\n  \"size\": 0, \n  \"aggs\": {\n    \"breakdownByMajorVersion\": {\n      \"terms\": {\n        \"script\": {\n          \"lang\": \"painless\",\n          \"inline\": \"/(^[1-9]+[0-9]?)\\\\..*/.matcher(doc['foo'].value).replaceAll('$1')\"\n        }\n      }\n    }\n  }\n}\n```\n\nThe above works great when docs match the pattern, but if they don't we get something like the following:\n\n```\n  \"aggregations\": {\n    \"breakdownByMajorVersion\": {\n      \"doc_count_error_upper_bound\": 0,\n      \"sum_other_doc_count\": 0,\n      \"buckets\": [\n        {\n          \"key\": \"2\",\n          \"doc_count\": 2\n        },\n        {\n          \"key\": \"1\",\n          \"doc_count\": 1\n        },\n        {\n          \"key\": \"v5.0\",\n          \"doc_count\": 1\n        }\n      ]\n    }\n  }\n```\n","closed_by":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"performed_via_github_app":null}