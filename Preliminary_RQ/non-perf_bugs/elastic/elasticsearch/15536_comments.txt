[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/165726581","html_url":"https://github.com/elastic/elasticsearch/issues/15536#issuecomment-165726581","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15536","id":165726581,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NTcyNjU4MQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2015-12-18T09:35:05Z","updated_at":"2015-12-18T09:35:16Z","author_association":"CONTRIBUTOR","body":"When I look at this API I wonder why we can't just pass in an Iterator to the bulk processor that the bulk processor can pull from. It seems to me that this would be much simpler that a callback based API and we can hide the logic in a single place? But I might miss something?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/165733366","html_url":"https://github.com/elastic/elasticsearch/issues/15536#issuecomment-165733366","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15536","id":165733366,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NTczMzM2Ng==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2015-12-18T09:51:49Z","updated_at":"2015-12-18T09:57:26Z","author_association":"MEMBER","body":"You're right. These are related concepts. The reactive streams API just offers more flexibility (but admittedly at the cost of more complexity). One thing that we need to consider is whether the bulk processor is \"reused\", e.g. consider this API:\n\n``` java\nclass AsyncBulkProcessor {\n  void sendItems(Iterator<ActionRequest> items) (\n    // ...\n  }\n}\n```\n\nAs we perform this operation asynchronously, I think the client needs some kind of handle to this operation (similar to a Future) in order to e.g. cancel it and also to have some kind of \"context\" if it calls `#sendItems()` multiple times. This is - to some extent - the role of `Subscription` in the API sketch above (`Subscription` really has two roles, providing the items and also being a handle for the subscriber).\n\nSo I sense we might end up with a similar API anyway, that's why I have chosen the reactive streams API as an example for the sketch. But nothing is stopping us from starting small...\n\nBtw, one benefit of the callback-based subscription model is that also the provider can be asynchronous (which can obviously not work with an iterator).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/167516560","html_url":"https://github.com/elastic/elasticsearch/issues/15536#issuecomment-167516560","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15536","id":167516560,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NzUxNjU2MA==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2015-12-28T08:51:25Z","updated_at":"2015-12-28T08:51:25Z","author_association":"MEMBER","body":"To get a better idea for a suitable API sketch, I'll first review #15125 (reindex API) which could benefit from it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251634117","html_url":"https://github.com/elastic/elasticsearch/issues/15536#issuecomment-251634117","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15536","id":251634117,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTYzNDExNw==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2016-10-05T10:04:56Z","updated_at":"2016-10-05T10:04:56Z","author_association":"MEMBER","body":"No time to work on this for the foreseeable future and interest seems also limited. Therefore I close it for the time being. Feel free to reopen if necessary.\n","performed_via_github_app":null}]