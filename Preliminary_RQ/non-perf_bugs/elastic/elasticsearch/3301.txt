{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3301","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3301/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3301/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3301/events","html_url":"https://github.com/elastic/elasticsearch/issues/3301","id":16513458,"node_id":"MDU6SXNzdWUxNjUxMzQ1OA==","number":3301,"title":"Add finer control over `_source` retrieval, in `get`, `mget`, `get_source`, `explain` & `search` API","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"labels":[{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":37906111,"node_id":"MDU6TGFiZWwzNzkwNjExMQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.0.0.Beta1","name":"v1.0.0.Beta1","color":"DDDDDD","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"assignees":[{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2013-07-09T08:35:18Z","updated_at":"2014-07-08T12:30:56Z","closed_at":"2013-07-30T11:22:40Z","author_association":"MEMBER","active_lock_reason":null,"body":"At the moment all of the above API offer the `field` parameter to retrieve part of the stored documents. However, the `fields` option was built to expose Lucene's stored fields and thus has some limitations when use to extract data from `_source`. The most important one is potentially flatting the document structure. \n\nThis feature adds a new parameter that allows directly retrieving parts of the `_source`, without conforming to the store fields structure.\n\nTo maintain backward compatibility, you can still retrieve the `_source` by specifying `fields=[\"_source\"]` but this special treatment will be removed in the future. \n## Get API\n\nThe Get api parameters are supplied via the query string. New `_source`,`_source_include` & `_source_exclude` parameters are added, according to the following:\n\n**A flag to control _source retrieval**\n\n```\ncurl -XGET 'http://localhost:9200/index/type/1?_source=false'\n```\n\nor (default)\n\n```\ncurl -XGET 'http://localhost:9200/index/type/1?_source=true'\n```\n\n**Only retrieve part of the source**\n\n```\ncurl -XGET 'http://localhost:9200/index/type/1?_source=title,author'\n```\n\nor \n\n```\ncurl -XGET 'http://localhost:9200/index/type/1?_source_include=title,content&_source_exclude=content.full_text'\n```\n## Multi Get API\n\nThe Multi Get API allows you to control `_source` both on the query string (same syntax as the `get` API) or on a per document basis.\n\n**Query String defaults**\n\n```\ncurl -XGET 'http://localhost:9200/index/type/_mget?_source=false' -d'{\n  ids: [1, 2, 3]\n}'\n```\n\nor\n\n```\ncurl -XGET 'http://localhost:9200/index/type/_mget?_source_include=title,content&_source_exclude=content.full_text' -d'{\n  ids: [1, 2, 3]\n}'\n```\n\netc.\n\n**Per document settings**\n\n```\ncurl -XGET 'http://localhost:9200/_mget' -d '{\n    docs: [\n        { \"_index\": \"test\" , _type: \"type1\", \"_id\": \"1\", \"_source\": false },\n        { \"_index\": \"test\" , _type: \"type1\", \"_id\": \"2\", \"_source\": \"title\" },\n        { \"_index\": \"test\" , _type: \"type1\", \"_id\": \"3\", \"_source\": [ \"title\", \"author\" ] },\n        { \"_index\": \"test\" , _type: \"type1\", \"_id\": \"4\", \n          \"_source\": { \"include\": \"content\" , \"exclude\" : \"content.full_text\" }  \n        },\n        { \"_index\": \"test\" , _type: \"type1\", \"_id\": \"5\", \n          \"_source\": { \"include\": [ \"title\", \"content\" ] , \"exclude\" : [ \"content.full_text\" ]}  \n        }\n    ]\n}'\n```\n## Get_source API\n\nThe `get/_source` API is an API that is already dedicated for `_source` retrieval. As such, it has a slightly different parameter naming:\n\n```\ncurl -XGET 'http://localhost:9200/index/type/1/_source?include=title,content&exclude=content.full_text'\n```\n## Explain API\n\nThe `explain` API also offers the `fields` parameter. It is now extend with query string parameters, just like the `get` API:\n\n```\ncurl -XPOST 'http://localhost:9200/index/type/1/_explain?_source=false' -d'{\n    \"query\" : { \"term\" : { \"message\" : \"search\" } }\n}'\n```\n\nor\n\n```\ncurl -XPOST 'http://localhost:9200/index/type/1/_explain?_source=title,author' -d'{\n    \"query\" : { \"term\" : { \"message\" : \"search\" } }\n}'\n```\n\nand\n\n```\ncurl -XPOST 'http://localhost:9200/index/type/1/_explain?_source_include=title,content&_source_exclude=content.full_text' -d'{\n    \"query\" : { \"term\" : { \"message\" : \"search\" } }\n}'\n```\n# Search API\n\nThe `search` API was added an extra `_source` key in the body, with the same options as all the above:\n\n```\ncurl -XPOST 'http://localhost:9200/_search' -d'{\n    \"query\" : { \"term\" : { \"message\" : \"search\" } },\n    \"_source\" : false\n}'\n```\n\nand\n\n```\ncurl -XPOST 'http://localhost:9200/_search' -d'{\n    \"query\" : { \"term\" : { \"message\" : \"search\" } },\n    \"_source\" : \"title\"\n}'\n```\n\n```\ncurl -XPOST 'http://localhost:9200/_search' -d'{\n    \"query\" : { \"term\" : { \"message\" : \"search\" } },\n    \"_source\" : [ \"title\" , \"author\" ]\n}'\n```\n\n```\ncurl -XPOST 'http://localhost:9200/_search' -d'{\n    \"query\" : { \"term\" : { \"message\" : \"search\" } },\n    \"_source\": { \"include\": [ \"title\", \"content\" ] , \"exclude\" : [ \"content.full_text\" ]} \n}'\n```\n\nAlso the `search` API supports accepting `_source` retrieval settings as query string parameters. The format is identical to the `get` API: `_source`, `_source_include` & `_source_exclude`. In the case where the parameters are supplied both in the request body and the query string, the query string parameter override the body.\n","closed_by":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"performed_via_github_app":null}