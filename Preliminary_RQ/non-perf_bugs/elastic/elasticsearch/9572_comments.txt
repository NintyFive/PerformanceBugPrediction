[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73031186","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-73031186","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":73031186,"node_id":"MDEyOklzc3VlQ29tbWVudDczMDMxMTg2","user":{"login":"alexksikes","id":43475,"node_id":"MDQ6VXNlcjQzNDc1","avatar_url":"https://avatars2.githubusercontent.com/u/43475?v=4","gravatar_id":"","url":"https://api.github.com/users/alexksikes","html_url":"https://github.com/alexksikes","followers_url":"https://api.github.com/users/alexksikes/followers","following_url":"https://api.github.com/users/alexksikes/following{/other_user}","gists_url":"https://api.github.com/users/alexksikes/gists{/gist_id}","starred_url":"https://api.github.com/users/alexksikes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexksikes/subscriptions","organizations_url":"https://api.github.com/users/alexksikes/orgs","repos_url":"https://api.github.com/users/alexksikes/repos","events_url":"https://api.github.com/users/alexksikes/events{/privacy}","received_events_url":"https://api.github.com/users/alexksikes/received_events","type":"User","site_admin":false},"created_at":"2015-02-05T11:21:02Z","updated_at":"2015-02-05T11:21:02Z","author_association":"CONTRIBUTOR","body":"It would indeed be a neat feature to dynamically guess the ranges. However, it seems difficult to do in a single request in a distributed environment, as we don't know the data on other shards. So for now as a workaround I would do two requests of the same query. The first one to get the ranges and the second one to perform the aggregation on those ranges.\n\nFor more discussion on a similar feature request see: https://github.com/elasticsearch/elasticsearch/issues/9531\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73145735","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-73145735","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":73145735,"node_id":"MDEyOklzc3VlQ29tbWVudDczMTQ1NzM1","user":{"login":"rayward","id":1217111,"node_id":"MDQ6VXNlcjEyMTcxMTE=","avatar_url":"https://avatars1.githubusercontent.com/u/1217111?v=4","gravatar_id":"","url":"https://api.github.com/users/rayward","html_url":"https://github.com/rayward","followers_url":"https://api.github.com/users/rayward/followers","following_url":"https://api.github.com/users/rayward/following{/other_user}","gists_url":"https://api.github.com/users/rayward/gists{/gist_id}","starred_url":"https://api.github.com/users/rayward/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rayward/subscriptions","organizations_url":"https://api.github.com/users/rayward/orgs","repos_url":"https://api.github.com/users/rayward/repos","events_url":"https://api.github.com/users/rayward/events{/privacy}","received_events_url":"https://api.github.com/users/rayward/received_events","type":"User","site_admin":false},"created_at":"2015-02-05T22:41:10Z","updated_at":"2015-02-05T22:41:10Z","author_association":"NONE","body":"Yeh I was really hoping to avoid separate queries as performance is fairly critical for us.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73211202","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-73211202","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":73211202,"node_id":"MDEyOklzc3VlQ29tbWVudDczMjExMjAy","user":{"login":"alexksikes","id":43475,"node_id":"MDQ6VXNlcjQzNDc1","avatar_url":"https://avatars2.githubusercontent.com/u/43475?v=4","gravatar_id":"","url":"https://api.github.com/users/alexksikes","html_url":"https://github.com/alexksikes","followers_url":"https://api.github.com/users/alexksikes/followers","following_url":"https://api.github.com/users/alexksikes/following{/other_user}","gists_url":"https://api.github.com/users/alexksikes/gists{/gist_id}","starred_url":"https://api.github.com/users/alexksikes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexksikes/subscriptions","organizations_url":"https://api.github.com/users/alexksikes/orgs","repos_url":"https://api.github.com/users/alexksikes/repos","events_url":"https://api.github.com/users/alexksikes/events{/privacy}","received_events_url":"https://api.github.com/users/alexksikes/received_events","type":"User","site_admin":false},"created_at":"2015-02-06T09:41:17Z","updated_at":"2015-02-06T09:41:17Z","author_association":"CONTRIBUTOR","body":"Yes but the second query should execute much faster thanks to the file system cache, not counting also any filter in the query that may also be cached.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73683133","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-73683133","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":73683133,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjgzMTMz","user":{"login":"imanhodjaev","id":354868,"node_id":"MDQ6VXNlcjM1NDg2OA==","avatar_url":"https://avatars2.githubusercontent.com/u/354868?v=4","gravatar_id":"","url":"https://api.github.com/users/imanhodjaev","html_url":"https://github.com/imanhodjaev","followers_url":"https://api.github.com/users/imanhodjaev/followers","following_url":"https://api.github.com/users/imanhodjaev/following{/other_user}","gists_url":"https://api.github.com/users/imanhodjaev/gists{/gist_id}","starred_url":"https://api.github.com/users/imanhodjaev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imanhodjaev/subscriptions","organizations_url":"https://api.github.com/users/imanhodjaev/orgs","repos_url":"https://api.github.com/users/imanhodjaev/repos","events_url":"https://api.github.com/users/imanhodjaev/events{/privacy}","received_events_url":"https://api.github.com/users/imanhodjaev/received_events","type":"User","site_admin":false},"created_at":"2015-02-10T11:14:42Z","updated_at":"2015-02-10T11:20:51Z","author_association":"NONE","body":"Hi,\nI am relatively new to Elasticsearch but I found interesting thing about **date_histogram**. We have aggregation query with **interval=week**.\n\n``` json\n{\n  \"aggs\": {\n    \"scores_by_date\": {\n      \"date_histogram\": {\n        \"field\": \"date\",\n        \"format\": \"MM-dd-yyyy\",\n        \"interval\": \"week\"\n      }\n    }\n  }\n}\n```\n\nIf we use **filter** with date ranges as following starting from the **Jan 1 YEAR**\n\n``` json\n{\n  \"range\": {\n    \"document.date\":  {\n      \"from\": \"2015-01-01\",\n      \"to\": \"2015-02-10\"\n     }\n  }\n}\n```\n\nIn the result buckets we get extra week from past year's last month **Dec NDAY YEAR**\n\n``` json\n{\n  \"aggregations\": {\n    \"scores_by_date\": {\n      \"buckets\": [\n        {\n  HERE => \"key_as_string\": \"12-29-2014\",\n          \"key\": 1419811200000,\n          \"doc_count\": 29\n        },\n        {\n          \"key_as_string\": \"01-05-2015\",\n          \"key\": 1420416000000,\n          \"doc_count\": 39\n        },\n        {\n          \"key_as_string\": \"01-12-2015\",\n          \"key\": 1421020800000,\n          \"doc_count\": 45\n        },\n        {\n          \"key_as_string\": \"01-19-2015\",\n          \"key\": 1421625600000,\n          \"doc_count\": 55\n        },\n        {\n          \"key_as_string\": \"01-26-2015\",\n          \"key\": 1422230400000,\n          \"doc_count\": 29\n        }\n      ]\n    }\n  }\n}\n```\n\nIs this a standard behaviour of Elasticsearch date histogram aggregations or is this issue the part of current discussion?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73768278","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-73768278","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":73768278,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzY4Mjc4","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2015-02-10T19:39:06Z","updated_at":"2015-02-10T19:39:06Z","author_association":"MEMBER","body":"@imanhodjaev I believe that is because it the date math code includes the entire week, instead of a partial week.  It does not truncate the edges of the range.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/95749831","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-95749831","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":95749831,"node_id":"MDEyOklzc3VlQ29tbWVudDk1NzQ5ODMx","user":{"login":"OPtoss","id":5397869,"node_id":"MDQ6VXNlcjUzOTc4Njk=","avatar_url":"https://avatars3.githubusercontent.com/u/5397869?v=4","gravatar_id":"","url":"https://api.github.com/users/OPtoss","html_url":"https://github.com/OPtoss","followers_url":"https://api.github.com/users/OPtoss/followers","following_url":"https://api.github.com/users/OPtoss/following{/other_user}","gists_url":"https://api.github.com/users/OPtoss/gists{/gist_id}","starred_url":"https://api.github.com/users/OPtoss/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OPtoss/subscriptions","organizations_url":"https://api.github.com/users/OPtoss/orgs","repos_url":"https://api.github.com/users/OPtoss/repos","events_url":"https://api.github.com/users/OPtoss/events{/privacy}","received_events_url":"https://api.github.com/users/OPtoss/received_events","type":"User","site_admin":false},"created_at":"2015-04-23T23:42:36Z","updated_at":"2015-04-23T23:42:36Z","author_association":"NONE","body":"I'd love to vote for this issue. It's severely prohibiting me from attaining my use case of date_histograms. I'm doing date_histogram as a sub-aggregation to a terms aggregation, so I'm getting one histogram per term bucket. If I can't define the interval dynamically per-bucket, then I have to do hundreds of queries instead of just 1. \n\nAt the moment, I don't care much about cost to server-side computations. The client can't be expected to perform hundreds of separate queries in my real-time interactive application. So having this feature is critical. \n\nI've attempted to work around it using groovy scripts to calculate the interval, which works, but once again I'm blocked, as I can't refer to the result of my script inside the \"interval\" argument of the date_histogram. \n\nIs there another workaround that doesn't multiply queries? Or can this feature be reconsidered? Thanks!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115108824","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-115108824","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":115108824,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTEwODgyNA==","user":{"login":"ppf2","id":7216393,"node_id":"MDQ6VXNlcjcyMTYzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/7216393?v=4","gravatar_id":"","url":"https://api.github.com/users/ppf2","html_url":"https://github.com/ppf2","followers_url":"https://api.github.com/users/ppf2/followers","following_url":"https://api.github.com/users/ppf2/following{/other_user}","gists_url":"https://api.github.com/users/ppf2/gists{/gist_id}","starred_url":"https://api.github.com/users/ppf2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppf2/subscriptions","organizations_url":"https://api.github.com/users/ppf2/orgs","repos_url":"https://api.github.com/users/ppf2/repos","events_url":"https://api.github.com/users/ppf2/events{/privacy}","received_events_url":"https://api.github.com/users/ppf2/received_events","type":"User","site_admin":false},"created_at":"2015-06-25T05:24:55Z","updated_at":"2015-06-25T05:24:55Z","author_association":"MEMBER","body":"+1 on the original use case of dynamic range histogram buckets for numeric (non-datetime fields).  This is a pretty common use case for commerce applications.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/126628320","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-126628320","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":126628320,"node_id":"MDEyOklzc3VlQ29tbWVudDEyNjYyODMyMA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-07-31T09:46:12Z","updated_at":"2015-07-31T09:46:12Z","author_association":"CONTRIBUTOR","body":"Stalled by #12316. It is still possible to implement this feature by doing two requests as described above.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/242493315","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-242493315","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":242493315,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MjQ5MzMxNQ==","user":{"login":"gmoskovicz","id":1675411,"node_id":"MDQ6VXNlcjE2NzU0MTE=","avatar_url":"https://avatars3.githubusercontent.com/u/1675411?v=4","gravatar_id":"","url":"https://api.github.com/users/gmoskovicz","html_url":"https://github.com/gmoskovicz","followers_url":"https://api.github.com/users/gmoskovicz/followers","following_url":"https://api.github.com/users/gmoskovicz/following{/other_user}","gists_url":"https://api.github.com/users/gmoskovicz/gists{/gist_id}","starred_url":"https://api.github.com/users/gmoskovicz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gmoskovicz/subscriptions","organizations_url":"https://api.github.com/users/gmoskovicz/orgs","repos_url":"https://api.github.com/users/gmoskovicz/repos","events_url":"https://api.github.com/users/gmoskovicz/events{/privacy}","received_events_url":"https://api.github.com/users/gmoskovicz/received_events","type":"User","site_admin":false},"created_at":"2016-08-25T18:31:34Z","updated_at":"2016-08-25T18:31:34Z","author_association":"CONTRIBUTOR","body":"+1 for a workaround without using a 2 step request to elasticsearch. Auto-Calculating the ranges looks like a great idea, although i can see that implementing this can be tricky given the number of things that we should consider. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/248630104","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-248630104","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":248630104,"node_id":"MDEyOklzc3VlQ29tbWVudDI0ODYzMDEwNA==","user":{"login":"Bargs","id":6239176,"node_id":"MDQ6VXNlcjYyMzkxNzY=","avatar_url":"https://avatars3.githubusercontent.com/u/6239176?v=4","gravatar_id":"","url":"https://api.github.com/users/Bargs","html_url":"https://github.com/Bargs","followers_url":"https://api.github.com/users/Bargs/followers","following_url":"https://api.github.com/users/Bargs/following{/other_user}","gists_url":"https://api.github.com/users/Bargs/gists{/gist_id}","starred_url":"https://api.github.com/users/Bargs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bargs/subscriptions","organizations_url":"https://api.github.com/users/Bargs/orgs","repos_url":"https://api.github.com/users/Bargs/repos","events_url":"https://api.github.com/users/Bargs/events{/privacy}","received_events_url":"https://api.github.com/users/Bargs/received_events","type":"User","site_admin":false},"created_at":"2016-09-21T14:30:54Z","updated_at":"2016-09-21T14:30:54Z","author_association":"NONE","body":"Copying my comments from a duplicate issue:\n\nThis would be a boon for Kibana because it would allow us to easily [auto scale the histogram visualization](https://github.com/elastic/kibana/pull/8139) and protect users from [accidentally creating too many buckets](https://github.com/elastic/kibana/issues/2908), crashing their browser in the process.\n\nWe could accomplish this by issuing two requests from the client, the first grabbing the min/max values for the given field. But since the aggregation may have a search query and/or filters associated with it we don't know how performant this would be. I imagine it would be more efficient to implement this option inside elasticsearch so the calculations can be done in a single request.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/269842708","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-269842708","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":269842708,"node_id":"MDEyOklzc3VlQ29tbWVudDI2OTg0MjcwOA==","user":{"login":"bompus","id":253635,"node_id":"MDQ6VXNlcjI1MzYzNQ==","avatar_url":"https://avatars2.githubusercontent.com/u/253635?v=4","gravatar_id":"","url":"https://api.github.com/users/bompus","html_url":"https://github.com/bompus","followers_url":"https://api.github.com/users/bompus/followers","following_url":"https://api.github.com/users/bompus/following{/other_user}","gists_url":"https://api.github.com/users/bompus/gists{/gist_id}","starred_url":"https://api.github.com/users/bompus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bompus/subscriptions","organizations_url":"https://api.github.com/users/bompus/orgs","repos_url":"https://api.github.com/users/bompus/repos","events_url":"https://api.github.com/users/bompus/events{/privacy}","received_events_url":"https://api.github.com/users/bompus/received_events","type":"User","site_admin":false},"created_at":"2016-12-31T01:45:09Z","updated_at":"2016-12-31T01:45:09Z","author_association":"NONE","body":"This would be similar to MongoDB $bucketAuto aggregation. I would love to see something similar in ES.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/282813311","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-282813311","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":282813311,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MjgxMzMxMQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-02-27T18:52:33Z","updated_at":"2017-02-27T18:52:33Z","author_association":"CONTRIBUTOR","body":"This issue was discussed today, here is a brief summary: one way to implement it would be to request the min/max values first like @Bargs mentioned. Doing it in Elasticsearch would have little benefit compared to doing it on the client-side. Another way to implement it would be for each shard to adapt the interval on the fly and then at reducing time we would pick the larger interval. However the latter would require us  to add ways to reuse buckets, which we do not have today, but may be required by other aggs such as clustering (including percentiles). The recommended way to work around the lack of support for dynamic intervals for now is to issue two requests to Elasticsearch: one to figure out the min/max values of the field, and another one with the histogram aggregation.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/350103512","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-350103512","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":350103512,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDEwMzUxMg==","user":{"login":"vaibhavtripathi","id":4174135,"node_id":"MDQ6VXNlcjQxNzQxMzU=","avatar_url":"https://avatars2.githubusercontent.com/u/4174135?v=4","gravatar_id":"","url":"https://api.github.com/users/vaibhavtripathi","html_url":"https://github.com/vaibhavtripathi","followers_url":"https://api.github.com/users/vaibhavtripathi/followers","following_url":"https://api.github.com/users/vaibhavtripathi/following{/other_user}","gists_url":"https://api.github.com/users/vaibhavtripathi/gists{/gist_id}","starred_url":"https://api.github.com/users/vaibhavtripathi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vaibhavtripathi/subscriptions","organizations_url":"https://api.github.com/users/vaibhavtripathi/orgs","repos_url":"https://api.github.com/users/vaibhavtripathi/repos","events_url":"https://api.github.com/users/vaibhavtripathi/events{/privacy}","received_events_url":"https://api.github.com/users/vaibhavtripathi/received_events","type":"User","site_admin":false},"created_at":"2017-12-07T21:43:59Z","updated_at":"2017-12-07T21:43:59Z","author_association":"NONE","body":"@alexksikes Can you point me to an example of the two-query approach you are suggesting?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/405406742","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-405406742","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":405406742,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTQwNjc0Mg==","user":{"login":"melissachang","id":10929390,"node_id":"MDQ6VXNlcjEwOTI5Mzkw","avatar_url":"https://avatars1.githubusercontent.com/u/10929390?v=4","gravatar_id":"","url":"https://api.github.com/users/melissachang","html_url":"https://github.com/melissachang","followers_url":"https://api.github.com/users/melissachang/followers","following_url":"https://api.github.com/users/melissachang/following{/other_user}","gists_url":"https://api.github.com/users/melissachang/gists{/gist_id}","starred_url":"https://api.github.com/users/melissachang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/melissachang/subscriptions","organizations_url":"https://api.github.com/users/melissachang/orgs","repos_url":"https://api.github.com/users/melissachang/repos","events_url":"https://api.github.com/users/melissachang/events{/privacy}","received_events_url":"https://api.github.com/users/melissachang/received_events","type":"User","site_admin":false},"created_at":"2018-07-16T22:59:18Z","updated_at":"2018-07-16T22:59:18Z","author_association":"NONE","body":"I believe this issue should still be open. #28993 only supports [date histograms](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-datehistogram-aggregation.html). There needs to be a similar PR for [non-date, regular histograms](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-histogram-aggregation.html).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/405421179","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-405421179","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":405421179,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTQyMTE3OQ==","user":{"login":"pcsanwald","id":163306,"node_id":"MDQ6VXNlcjE2MzMwNg==","avatar_url":"https://avatars1.githubusercontent.com/u/163306?v=4","gravatar_id":"","url":"https://api.github.com/users/pcsanwald","html_url":"https://github.com/pcsanwald","followers_url":"https://api.github.com/users/pcsanwald/followers","following_url":"https://api.github.com/users/pcsanwald/following{/other_user}","gists_url":"https://api.github.com/users/pcsanwald/gists{/gist_id}","starred_url":"https://api.github.com/users/pcsanwald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pcsanwald/subscriptions","organizations_url":"https://api.github.com/users/pcsanwald/orgs","repos_url":"https://api.github.com/users/pcsanwald/repos","events_url":"https://api.github.com/users/pcsanwald/events{/privacy}","received_events_url":"https://api.github.com/users/pcsanwald/received_events","type":"User","site_admin":false},"created_at":"2018-07-17T00:27:00Z","updated_at":"2018-07-17T00:27:00Z","author_association":"CONTRIBUTOR","body":"@melissachang you are absolutely right that we need to support numeric histograms, but I've created a separate issue for that, #31828. We can track that work using this new issue. Thank you!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/421345950","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-421345950","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":421345950,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMTM0NTk1MA==","user":{"login":"monfera","id":1548516,"node_id":"MDQ6VXNlcjE1NDg1MTY=","avatar_url":"https://avatars0.githubusercontent.com/u/1548516?v=4","gravatar_id":"","url":"https://api.github.com/users/monfera","html_url":"https://github.com/monfera","followers_url":"https://api.github.com/users/monfera/followers","following_url":"https://api.github.com/users/monfera/following{/other_user}","gists_url":"https://api.github.com/users/monfera/gists{/gist_id}","starred_url":"https://api.github.com/users/monfera/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/monfera/subscriptions","organizations_url":"https://api.github.com/users/monfera/orgs","repos_url":"https://api.github.com/users/monfera/repos","events_url":"https://api.github.com/users/monfera/events{/privacy}","received_events_url":"https://api.github.com/users/monfera/received_events","type":"User","site_admin":false},"created_at":"2018-09-14T12:39:57Z","updated_at":"2018-09-14T12:40:18Z","author_association":"MEMBER","body":"Just for sake of completeness here's a link for [Sturges' Rule](https://en.wikipedia.org/wiki/Histogram#Sturges'_formula), which is a sound approach to determining bin counts merely based on sample count, assuming a distribution reasonably close to normal distribution. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/486984041","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-486984041","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":486984041,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Njk4NDA0MQ==","user":{"login":"Rapster","id":7521311,"node_id":"MDQ6VXNlcjc1MjEzMTE=","avatar_url":"https://avatars0.githubusercontent.com/u/7521311?v=4","gravatar_id":"","url":"https://api.github.com/users/Rapster","html_url":"https://github.com/Rapster","followers_url":"https://api.github.com/users/Rapster/followers","following_url":"https://api.github.com/users/Rapster/following{/other_user}","gists_url":"https://api.github.com/users/Rapster/gists{/gist_id}","starred_url":"https://api.github.com/users/Rapster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Rapster/subscriptions","organizations_url":"https://api.github.com/users/Rapster/orgs","repos_url":"https://api.github.com/users/Rapster/repos","events_url":"https://api.github.com/users/Rapster/events{/privacy}","received_events_url":"https://api.github.com/users/Rapster/received_events","type":"User","site_admin":false},"created_at":"2019-04-26T09:02:07Z","updated_at":"2019-04-26T09:02:07Z","author_association":"NONE","body":"@monfera did you figure out a way to use Sturges' rule to determine the number of buckets? Someone else ask this question few years ago also https://discuss.elastic.co/t/histogram-and-sturges-formula/14133","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/696356683","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-696356683","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":696356683,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NjM1NjY4Mw==","user":{"login":"findinpath","id":57260417,"node_id":"MDQ6VXNlcjU3MjYwNDE3","avatar_url":"https://avatars2.githubusercontent.com/u/57260417?v=4","gravatar_id":"","url":"https://api.github.com/users/findinpath","html_url":"https://github.com/findinpath","followers_url":"https://api.github.com/users/findinpath/followers","following_url":"https://api.github.com/users/findinpath/following{/other_user}","gists_url":"https://api.github.com/users/findinpath/gists{/gist_id}","starred_url":"https://api.github.com/users/findinpath/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/findinpath/subscriptions","organizations_url":"https://api.github.com/users/findinpath/orgs","repos_url":"https://api.github.com/users/findinpath/repos","events_url":"https://api.github.com/users/findinpath/events{/privacy}","received_events_url":"https://api.github.com/users/findinpath/received_events","type":"User","site_admin":false},"created_at":"2020-09-21T20:30:06Z","updated_at":"2020-09-21T20:30:06Z","author_association":"NONE","body":"> @alexksikes Can you point me to an example of the two-query approach you are suggesting?\r\n\r\nI am not sure if I got it right, but here https://github.com/findinpath/elastic-price-range-aggregation/blob/master/src/test/kotlin/com/findinpath/PriceRangeAggregationTest.kt#L119 you can find an implementation of the two-query approach suggested.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/705405805","html_url":"https://github.com/elastic/elasticsearch/issues/9572#issuecomment-705405805","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9572","id":705405805,"node_id":"MDEyOklzc3VlQ29tbWVudDcwNTQwNTgwNQ==","user":{"login":"mjose007","id":59745498,"node_id":"MDQ6VXNlcjU5NzQ1NDk4","avatar_url":"https://avatars2.githubusercontent.com/u/59745498?v=4","gravatar_id":"","url":"https://api.github.com/users/mjose007","html_url":"https://github.com/mjose007","followers_url":"https://api.github.com/users/mjose007/followers","following_url":"https://api.github.com/users/mjose007/following{/other_user}","gists_url":"https://api.github.com/users/mjose007/gists{/gist_id}","starred_url":"https://api.github.com/users/mjose007/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mjose007/subscriptions","organizations_url":"https://api.github.com/users/mjose007/orgs","repos_url":"https://api.github.com/users/mjose007/repos","events_url":"https://api.github.com/users/mjose007/events{/privacy}","received_events_url":"https://api.github.com/users/mjose007/received_events","type":"User","site_admin":false},"created_at":"2020-10-08T08:08:53Z","updated_at":"2020-10-08T08:08:53Z","author_association":"NONE","body":"+1 for the Support dynamic interval and fixed buckets for histogram aggregation","performed_via_github_app":null}]