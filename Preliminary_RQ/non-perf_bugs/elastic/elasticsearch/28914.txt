{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/28914","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28914/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28914/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28914/events","html_url":"https://github.com/elastic/elasticsearch/issues/28914","id":302841858,"node_id":"MDU6SXNzdWUzMDI4NDE4NTg=","number":28914,"title":"\"failed to add query\" when restarting elasticsearch, when Percolator query contains a term filter defined in another document","user":{"login":"davidscottcohen","id":15352169,"node_id":"MDQ6VXNlcjE1MzUyMTY5","avatar_url":"https://avatars0.githubusercontent.com/u/15352169?v=4","gravatar_id":"","url":"https://api.github.com/users/davidscottcohen","html_url":"https://github.com/davidscottcohen","followers_url":"https://api.github.com/users/davidscottcohen/followers","following_url":"https://api.github.com/users/davidscottcohen/following{/other_user}","gists_url":"https://api.github.com/users/davidscottcohen/gists{/gist_id}","starred_url":"https://api.github.com/users/davidscottcohen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidscottcohen/subscriptions","organizations_url":"https://api.github.com/users/davidscottcohen/orgs","repos_url":"https://api.github.com/users/davidscottcohen/repos","events_url":"https://api.github.com/users/davidscottcohen/events{/privacy}","received_events_url":"https://api.github.com/users/davidscottcohen/received_events","type":"User","site_admin":false},"labels":[{"id":156502592,"node_id":"MDU6TGFiZWwxNTY1MDI1OTI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Percolator","name":":Search/Percolator","color":"0e8a16","default":false,"description":"Reverse search: find queries that match a document"},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-03-06T19:52:31Z","updated_at":"2018-03-09T06:32:16Z","closed_at":"2018-03-09T06:32:15Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):\r\n\r\nVersion: 2.4.4, Build: fcbb46d/2017-01-03T11:33:16Z, JVM: 1.8.0_121\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`):\r\n\r\njava version \"1.8.0_121\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_121-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode\r\n\r\n**OS version** (`uname -a` if on a Unix-like system):\r\n\r\nLinux 2.6.32-696.20.1.el6.x86_64 #1 SMP Fri Jan 26 17:51:45 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nWhen using Percolator, where the query has a term filter where the terms are in another document, Elasticsearch will not be able to reload the query on restart.\r\n\r\nBelow I show the simplest and most guaranteed reproduction, which is a cluster with 1 shard and 0 replicas.  We've seen this same behavior (but less consistently) on larger clusters.\r\n\r\n\r\n**Steps to reproduce**:\r\n\r\nI will define some json files above, and refer to them in the steps:\r\n\r\n**index.json**:\r\n```\r\n{\r\n    \"settings\" : {\r\n\t\"number_of_shards\" : 1,\r\n\t\"number_of_replicas\": 0\r\n    },\r\n    \"mappings\" : {\r\n      \".percolator\" : {\r\n        \"properties\" : {\r\n\t  \"query\" : {\r\n            \"type\" : \"object\",\r\n\t    \"enabled\" : false\r\n\t  }\r\n\t}\r\n      },\r\n      \"filter\" : {\r\n\t\"properties\" : {\r\n          \"value\" : {\r\n            \"type\" : \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"doc\" : {\r\n        \"properties\" : {\r\n          \"message\" : {\r\n            \"type\" : \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n}\r\n```\r\n\r\n**filter.json**\r\n```\r\n{\r\n    \"value\" : [ \"foo\", \"bar\", \"baz\" ]\r\n}\r\n```\r\n\r\n**percolator.json**\r\n```\r\n{\r\n  \"query\" : {\r\n      \"terms\" : {\r\n\t\"message\" : {\r\n          \"index\" : \"my-index\",\r\n          \"type\" : \"filter\",\r\n          \"id\" : 1,\r\n          \"path\" : \"value\"\r\n\t}\r\n      }\r\n    }\r\n}\r\n```\r\n\r\n**doc.json**\r\n```\r\n{\r\n  \"message\": \"foo\"\r\n}\r\n```\r\n\r\n 1. `curl -XPUT localhost:9200/my-index -d @index.json`\r\n 2. `curl -XPUT localhost:9200/my-index/filter/1 -d @filter.json`\r\n 3. `curl -XPUT localhost:9200/my-index/doc/1 -d @doc.json`\r\n 4. `curl -XPUT localhost:9200/my-index/.percolator/1 -d @percolator.json`\r\n 5. `curl -XGET localhost:9200/my-index/doc/1/_percolate`\r\n 6. Observe that percolate matched query with ID 1\r\n 7. Restart elasticsearch\r\n 8. Note the errors that print out (copied below)\r\n 9. Repeat Step 5, note that we no longer match query with ID 1.\r\n\r\nExpected: Restarting Elasticsearch should not break Percolator\r\nActual: Percolator query does not work after restart.\r\n\r\n\r\n**Provide logs (if relevant)**:\r\n\r\n```\r\n[2018-03-06 11:35:19,406][WARN ][bootstrap                ] unable to install syscall filter: seccomp unavailable: CONFIG_SECCOMP not compiled into kernel, CONFIG_SECCOMP and CONFIG_SECCOMP_FILTER are needed\r\n[2018-03-06 11:35:19,583][INFO ][node                     ] [Vakume] version[2.4.4], pid[10912], build[fcbb46d/2017-01-03T11:33:16Z]\r\n[2018-03-06 11:35:19,583][INFO ][node                     ] [Vakume] initializing ...\r\n[2018-03-06 11:35:20,078][INFO ][plugins                  ] [Vakume] modules [reindex, lang-expression, lang-groovy], plugins [], sites []\r\n[2018-03-06 11:35:20,095][INFO ][env                      ] [Vakume] using [1] data paths, mounts [[/ (rootfs)]], net usable_space [42.2gb], net total_space [46.5gb], spins? [unknown], types [rootfs]\r\n[2018-03-06 11:35:20,095][INFO ][env                      ] [Vakume] heap size [990.7mb], compressed ordinary object pointers [true]\r\n[2018-03-06 11:35:21,727][INFO ][node                     ] [Vakume] initialized\r\n[2018-03-06 11:35:21,727][INFO ][node                     ] [Vakume] starting ...\r\n[2018-03-06 11:35:21,799][INFO ][transport                ] [Vakume] publish_address {127.0.0.1:9300}, bound_addresses {[::1]:9300}, {127.0.0.1:9300}\r\n[2018-03-06 11:35:21,810][INFO ][discovery                ] [Vakume] elasticsearch/TO-R_JE0TLy9czpjguj38A\r\n[2018-03-06 11:35:24,864][INFO ][cluster.service          ] [Vakume] new_master {Vakume}{TO-R_JE0TLy9czpjguj38A}{127.0.0.1}{127.0.0.1:9300}, reason: zen-disco-join(elected_as_master, [0] joins received)\r\n[2018-03-06 11:35:24,891][INFO ][http                     ] [Vakume] publish_address {127.0.0.1:9200}, bound_addresses {[::1]:9200}, {127.0.0.1:9200}\r\n[2018-03-06 11:35:24,891][INFO ][node                     ] [Vakume] started\r\n[2018-03-06 11:35:24,925][INFO ][gateway                  ] [Vakume] recovered [1] indices into cluster_state\r\n[2018-03-06 11:35:25,341][WARN ][index.percolator         ] [Vakume] [my-index][0] failed to add query [1]\r\n[my-index] PercolatorException[failed to parse query [null]]; nested: NoShardAvailableActionException[No shard available for [get [my-index][filter][1]: routing [null]]]; nested: RemoteTransportException[[Vakume][127.0.0.1:9300][indices:data/read/get[s]]]; nested: IllegalIndexShardStateException[CurrentState[RECOVER\\\r\nING] operations only allowed when shard state is one of [POST_RECOVERY, STARTED, RELOCATED]];\r\n        at org.elasticsearch.index.percolator.PercolatorQueriesRegistry.parsePercolatorDocument(PercolatorQueriesRegistry.java:182)\r\n        at org.elasticsearch.index.percolator.QueriesLoaderCollector.collect(QueriesLoaderCollector.java:80)\r\n        at org.apache.lucene.search.Weight$DefaultBulkScorer.scoreAll(Weight.java:221)\r\n        at org.apache.lucene.search.Weight$DefaultBulkScorer.score(Weight.java:172)\r\n        at org.apache.lucene.search.BulkScorer.score(BulkScorer.java:39)\r\n        at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:821)\r\n        at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:535)\r\n        at org.elasticsearch.index.percolator.PercolatorQueriesRegistry$ShardLifecycleListener.loadQueries(PercolatorQueriesRegistry.java:264)\r\n        at org.elasticsearch.index.percolator.PercolatorQueriesRegistry$ShardLifecycleListener.beforeIndexShardPostRecovery(PercolatorQueriesRegistry.java:245)\r\n        at org.elasticsearch.indices.InternalIndicesLifecycle.beforeIndexShardPostRecovery(InternalIndicesLifecycle.java:126)\r\n        at org.elasticsearch.index.shard.IndexShard.postRecovery(IndexShard.java:883)\r\n        at org.elasticsearch.index.shard.StoreRecoveryService.recoverFromStore(StoreRecoveryService.java:248)\r\n        at org.elasticsearch.index.shard.StoreRecoveryService.access$100(StoreRecoveryService.java:56)\r\n        at org.elasticsearch.index.shard.StoreRecoveryService$1.run(StoreRecoveryService.java:129)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:745)\r\nCaused by: NoShardAvailableActionException[No shard available for [get [my-index][filter][1]: routing [null]]]; nested: RemoteTransportException[[Vakume][127.0.0.1:9300][indices:data/read/get[s]]]; nested: IllegalIndexShardStateException[CurrentState[RECOVERING] operations only allowed when shard state is one of [PO\\\r\nST_RECOVERY, STARTED, RELOCATED]];\r\n        at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction.perform(TransportSingleShardAction.java:199)\r\n        at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction.onFailure(TransportSingleShardAction.java:186)\r\n        at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction.access$1300(TransportSingleShardAction.java:115)\r\n        at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction$2.handleException(TransportSingleShardAction.java:240)\r\n        at org.elasticsearch.transport.TransportService$DirectResponseChannel.processException(TransportService.java:874)\r\n        at org.elasticsearch.transport.TransportService$DirectResponseChannel.sendResponse(TransportService.java:852)\r\n        at org.elasticsearch.transport.TransportService$4.onFailure(TransportService.java:389)\r\n        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:39)\r\n        ... 3 more\r\nCaused by: RemoteTransportException[[Vakume][127.0.0.1:9300][indices:data/read/get[s]]]; nested: IllegalIndexShardStateException[CurrentState[RECOVERING] operations only allowed when shard state is one of [POST_RECOVERY, STARTED, RELOCATED]];\r\nCaused by: [my-index][[my-index][0]] IllegalIndexShardStateException[CurrentState[RECOVERING] operations only allowed when shard state is one of [POST_RECOVERY, STARTED, RELOCATED]]\r\n        at org.elasticsearch.index.shard.IndexShard.readAllowed(IndexShard.java:1038)\r\n        at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:655)\r\n        at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:173)\r\n        at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:86)\r\n        at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)\r\n        at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)\r\n        at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:282)\r\n        at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:275)\r\n        at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)\r\n        at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:77)\r\n        at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:378)\r\n        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n[2018-03-06 11:35:25,351][INFO ][cluster.routing.allocation] [Vakume] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[my-index][0]] ...]).\r\n```\r\n","closed_by":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"performed_via_github_app":null}