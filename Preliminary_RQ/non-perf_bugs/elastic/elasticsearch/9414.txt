{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/9414","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9414/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9414/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9414/events","html_url":"https://github.com/elastic/elasticsearch/issues/9414","id":55481486,"node_id":"MDU6SXNzdWU1NTQ4MTQ4Ng==","number":9414,"title":"Incorrect query string AND OR parsing","user":{"login":"zarucki","id":1859063,"node_id":"MDQ6VXNlcjE4NTkwNjM=","avatar_url":"https://avatars2.githubusercontent.com/u/1859063?v=4","gravatar_id":"","url":"https://api.github.com/users/zarucki","html_url":"https://github.com/zarucki","followers_url":"https://api.github.com/users/zarucki/followers","following_url":"https://api.github.com/users/zarucki/following{/other_user}","gists_url":"https://api.github.com/users/zarucki/gists{/gist_id}","starred_url":"https://api.github.com/users/zarucki/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zarucki/subscriptions","organizations_url":"https://api.github.com/users/zarucki/orgs","repos_url":"https://api.github.com/users/zarucki/repos","events_url":"https://api.github.com/users/zarucki/events{/privacy}","received_events_url":"https://api.github.com/users/zarucki/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-01-26T13:22:28Z","updated_at":"2015-01-26T20:16:06Z","closed_at":"2015-01-26T20:16:06Z","author_association":"NONE","active_lock_reason":null,"body":"First setup, because it seems that validation API requires index. I created index according to http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-create-index.html#mappings\n\n```\ncurl -XPOST localhost:9200/test -d '{\n  \"settings\" : {\n    \"number_of_shards\" : 1\n  },\n  \"mappings\" : {\n    \"type1\" : {\n      \"_source\" : { \"enabled\" : false },\n      \"properties\" : {\n        \"field1\" : { \"type\" : \"string\", \"index\" : \"not_analyzed\" }\n      }\n    }\n  }\n}'\n```\n\nNow the problem. Executing this:\n\n```\ncurl -XGET -o - 'http://localhost:9200/test/_validate/query?explain&pretty' -d'\n{\n    \"query\": {\n    \"bool\": {\n        \"must\": [ {\n            \"query_string\": {\n                \"default_field\": \"_all\",\n                \"query\": \"_all:(a AND b OR c AND d)\"\n            }\n        } ]\n    }\n  }\n}\n'\n```\n\nreturns:\n\n```\n{\n  \"valid\" : true,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"failed\" : 0\n  },\n  \"explanations\" : [ {\n    \"index\" : \"test\",\n    \"valid\" : true,\n    \"explanation\" : \"+(+_all:a +_all:b +_all:c +_all:d)\"\n  } ]\n}\n```\n\nAs we can see OR condition was completely removed. The result is identical to the one we would get if we executed this with query string equal to \"_all:(a AND b AND c AND d)\".\n\nTaking into account priorities I would expect it should return similar to following:\n\n```\ncurl -XGET -o - 'http://localhost:9200/test/_validate/query?explain&pretty' -d'\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [ {\n        \"query_string\": {\n          \"default_field\": \"_all\",\n          \"query\": \"_all:((a AND b) OR (c AND d))\"\n        }\n      } ]\n    }\n  }\n}\n'\n```\n\nwhich returns:\n\n```\n{\n  \"valid\" : true,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"failed\" : 0\n  },\n  \"explanations\" : [ {\n    \"index\" : \"test\",\n    \"valid\" : true,\n    \"explanation\" : \"+((+_all:a +_all:b) (+_all:c +_all:d))\"\n  } ]\n}\n```\n\nSomehow in the first example OR condition is lost. It's not only the validate or explain API. It seems that this also reflects how query strings are interpreted and executed.\n\n\"_all:(a OR b AND c)\" case also returns strange results:\n\n```\n{\n  \"valid\" : true,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"failed\" : 0\n  },\n  \"explanations\" : [ {\n    \"index\" : \"test\",\n    \"valid\" : true,\n    \"explanation\" : \"+(_all:a +_all:b +_all:c)\"\n  } ]\n}\n```\n\na condition is optional but nothing else is.\n\nTested this on just built master.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}