[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/439536882","html_url":"https://github.com/elastic/elasticsearch/issues/35665#issuecomment-439536882","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35665","id":439536882,"node_id":"MDEyOklzc3VlQ29tbWVudDQzOTUzNjg4Mg==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2018-11-16T21:37:31Z","updated_at":"2018-11-16T21:37:31Z","author_association":"CONTRIBUTOR","body":"I am new to localization strategies, but it may make sense to bubble up within a general API interaction with ES. The Deprecation API probably won't be the last API to be localized by Kibana. May make sense to explore more general rendering strategies on the ES side, like creating a common `locale` flag that will add additional locale-specific metadata into the responses","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/439546109","html_url":"https://github.com/elastic/elasticsearch/issues/35665#issuecomment-439546109","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35665","id":439546109,"node_id":"MDEyOklzc3VlQ29tbWVudDQzOTU0NjEwOQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-11-16T22:16:57Z","updated_at":"2018-11-16T22:16:57Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/439935675","html_url":"https://github.com/elastic/elasticsearch/issues/35665#issuecomment-439935675","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35665","id":439935675,"node_id":"MDEyOklzc3VlQ29tbWVudDQzOTkzNTY3NQ==","user":{"login":"sebelga","id":2854616,"node_id":"MDQ6VXNlcjI4NTQ2MTY=","avatar_url":"https://avatars0.githubusercontent.com/u/2854616?v=4","gravatar_id":"","url":"https://api.github.com/users/sebelga","html_url":"https://github.com/sebelga","followers_url":"https://api.github.com/users/sebelga/followers","following_url":"https://api.github.com/users/sebelga/following{/other_user}","gists_url":"https://api.github.com/users/sebelga/gists{/gist_id}","starred_url":"https://api.github.com/users/sebelga/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebelga/subscriptions","organizations_url":"https://api.github.com/users/sebelga/orgs","repos_url":"https://api.github.com/users/sebelga/repos","events_url":"https://api.github.com/users/sebelga/events{/privacy}","received_events_url":"https://api.github.com/users/sebelga/received_events","type":"User","site_admin":false},"created_at":"2018-11-19T15:38:28Z","updated_at":"2018-11-19T15:38:57Z","author_association":"CONTRIBUTOR","body":"@joshdover Yes, this is something that would greatly help us in the UI. I already mentioned having **error codes** coming back in the errors returned by ES as they would not only help guiding the user to the proper action/screen to fix the error, but it would also help us for the translations of the error messages.\r\n\r\n`messageId` could work for the same purpose. We would not be able to use this messageId as translation key for the translation engine to pick it up, right? Meaning: the translation engine need the key to be in plain string in the ui code, is that correct?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/439992303","html_url":"https://github.com/elastic/elasticsearch/issues/35665#issuecomment-439992303","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35665","id":439992303,"node_id":"MDEyOklzc3VlQ29tbWVudDQzOTk5MjMwMw==","user":{"login":"joshdover","id":1813008,"node_id":"MDQ6VXNlcjE4MTMwMDg=","avatar_url":"https://avatars2.githubusercontent.com/u/1813008?v=4","gravatar_id":"","url":"https://api.github.com/users/joshdover","html_url":"https://github.com/joshdover","followers_url":"https://api.github.com/users/joshdover/followers","following_url":"https://api.github.com/users/joshdover/following{/other_user}","gists_url":"https://api.github.com/users/joshdover/gists{/gist_id}","starred_url":"https://api.github.com/users/joshdover/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshdover/subscriptions","organizations_url":"https://api.github.com/users/joshdover/orgs","repos_url":"https://api.github.com/users/joshdover/repos","events_url":"https://api.github.com/users/joshdover/events{/privacy}","received_events_url":"https://api.github.com/users/joshdover/received_events","type":"User","site_admin":false},"created_at":"2018-11-19T18:21:52Z","updated_at":"2018-11-19T18:21:52Z","author_association":"MEMBER","body":"@talevy I like the idea of having a common URL param that ES would use to tell whether or ES should return translation string information to the client.\r\n\r\n@sebelga If I understand you correctly, yes the UI uses these static translation identifiers to lookup the localized string in the user's preferred language. Here's an example: \r\n\r\nhttps://github.com/elastic/kibana/blob/cc07aa29d5c59efd116cd523c8ea5999dabe4258/src/core_plugins/table_vis/public/table_vis.js#L55-L57\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/440186515","html_url":"https://github.com/elastic/elasticsearch/issues/35665#issuecomment-440186515","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35665","id":440186515,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MDE4NjUxNQ==","user":{"login":"sebelga","id":2854616,"node_id":"MDQ6VXNlcjI4NTQ2MTY=","avatar_url":"https://avatars0.githubusercontent.com/u/2854616?v=4","gravatar_id":"","url":"https://api.github.com/users/sebelga","html_url":"https://github.com/sebelga","followers_url":"https://api.github.com/users/sebelga/followers","following_url":"https://api.github.com/users/sebelga/following{/other_user}","gists_url":"https://api.github.com/users/sebelga/gists{/gist_id}","starred_url":"https://api.github.com/users/sebelga/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebelga/subscriptions","organizations_url":"https://api.github.com/users/sebelga/orgs","repos_url":"https://api.github.com/users/sebelga/repos","events_url":"https://api.github.com/users/sebelga/events{/privacy}","received_events_url":"https://api.github.com/users/sebelga/received_events","type":"User","site_admin":false},"created_at":"2018-11-20T08:31:19Z","updated_at":"2018-11-20T08:31:19Z","author_association":"CONTRIBUTOR","body":"@joshdover I was referring that we would not be able to do this:\r\n\r\n```\r\nconst elasticSearchResponse = await someApi();\r\nreturn i18n.translate(elasticSearchResponse.messageId, {\r\n      defaultMessage: elasticSearchResponse.message,\r\n}),\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/441604687","html_url":"https://github.com/elastic/elasticsearch/issues/35665#issuecomment-441604687","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35665","id":441604687,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MTYwNDY4Nw==","user":{"login":"azasypkin","id":1713708,"node_id":"MDQ6VXNlcjE3MTM3MDg=","avatar_url":"https://avatars1.githubusercontent.com/u/1713708?v=4","gravatar_id":"","url":"https://api.github.com/users/azasypkin","html_url":"https://github.com/azasypkin","followers_url":"https://api.github.com/users/azasypkin/followers","following_url":"https://api.github.com/users/azasypkin/following{/other_user}","gists_url":"https://api.github.com/users/azasypkin/gists{/gist_id}","starred_url":"https://api.github.com/users/azasypkin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azasypkin/subscriptions","organizations_url":"https://api.github.com/users/azasypkin/orgs","repos_url":"https://api.github.com/users/azasypkin/repos","events_url":"https://api.github.com/users/azasypkin/events{/privacy}","received_events_url":"https://api.github.com/users/azasypkin/received_events","type":"User","site_admin":false},"created_at":"2018-11-26T11:17:45Z","updated_at":"2018-11-26T11:17:45Z","author_association":"MEMBER","body":"> @joshdover I was referring that we would not be able to do this:\r\n> \r\n> ```\r\n> const elasticSearchResponse = await someApi();\r\n> return i18n.translate(elasticSearchResponse.messageId, {\r\n>       defaultMessage: elasticSearchResponse.message,\r\n> }),\r\n> ```\r\n\r\nYeah, this won't work. If we want ES messages to be included into Kibana i18n workflow we need to do something like this (to be able to extract `message-id <---> message` pairs during static analysis):\r\n```ts\r\nconst ES_MESSAGES = new Map([\r\n  ['xpack.migration.deprecations.coercionBooleanFields.message', \r\n     i18n.translate('xpack.migration.deprecations.coercionBooleanFields.message', {\r\n      defaultMessage: 'Coercion of boolean fields',\r\n    })\r\n  ]\r\n]);\r\n...............\r\nconst elasticSearchResponse = await someApi();\r\nreturn ES_MESSAGES.get(elasticSearchResponse.messageId) || elasticSearchResponse.message;\r\n```\r\n\r\n> May make sense to explore more general rendering strategies on the ES side, like creating a common locale flag that will add additional locale-specific metadata into the responses\r\n\r\nIf I understand your idea correctly, then it would make Kibana life easier since we'll be just passing locale within request and displaying what ES returns, but this will require ES to implement their own i18n workflow: extract all labels that needs to be translated, share them with translation vendors and incorporate translations back to ES code/distribution. We're going to use this approach with 3rd party services Kibana interacts with (e.g. map and tile services) though.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/441656335","html_url":"https://github.com/elastic/elasticsearch/issues/35665#issuecomment-441656335","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35665","id":441656335,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MTY1NjMzNQ==","user":{"login":"cjcenizal","id":1238659,"node_id":"MDQ6VXNlcjEyMzg2NTk=","avatar_url":"https://avatars2.githubusercontent.com/u/1238659?v=4","gravatar_id":"","url":"https://api.github.com/users/cjcenizal","html_url":"https://github.com/cjcenizal","followers_url":"https://api.github.com/users/cjcenizal/followers","following_url":"https://api.github.com/users/cjcenizal/following{/other_user}","gists_url":"https://api.github.com/users/cjcenizal/gists{/gist_id}","starred_url":"https://api.github.com/users/cjcenizal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cjcenizal/subscriptions","organizations_url":"https://api.github.com/users/cjcenizal/orgs","repos_url":"https://api.github.com/users/cjcenizal/repos","events_url":"https://api.github.com/users/cjcenizal/events{/privacy}","received_events_url":"https://api.github.com/users/cjcenizal/received_events","type":"User","site_admin":false},"created_at":"2018-11-26T14:26:12Z","updated_at":"2018-11-30T23:14:30Z","author_association":"CONTRIBUTOR","body":"The workflow @azasypkin describes is what I had in mind, too. Just having a consistent identifier for error messages would be tremendously helpful. I don't think we need ES to handle the localization aspect, though I don't think that option is precluded if we want to consider adding that at a later stage.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/442728943","html_url":"https://github.com/elastic/elasticsearch/issues/35665#issuecomment-442728943","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35665","id":442728943,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MjcyODk0Mw==","user":{"login":"sebelga","id":2854616,"node_id":"MDQ6VXNlcjI4NTQ2MTY=","avatar_url":"https://avatars0.githubusercontent.com/u/2854616?v=4","gravatar_id":"","url":"https://api.github.com/users/sebelga","html_url":"https://github.com/sebelga","followers_url":"https://api.github.com/users/sebelga/followers","following_url":"https://api.github.com/users/sebelga/following{/other_user}","gists_url":"https://api.github.com/users/sebelga/gists{/gist_id}","starred_url":"https://api.github.com/users/sebelga/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebelga/subscriptions","organizations_url":"https://api.github.com/users/sebelga/orgs","repos_url":"https://api.github.com/users/sebelga/repos","events_url":"https://api.github.com/users/sebelga/events{/privacy}","received_events_url":"https://api.github.com/users/sebelga/received_events","type":"User","site_admin":false},"created_at":"2018-11-29T07:08:20Z","updated_at":"2018-11-29T07:08:20Z","author_association":"CONTRIBUTOR","body":"@azasypkin Yes that's what I thought, it'd be nice to not have to duplicate the translation key and have the i18n extractor take into account this use case. Parsing something like this\r\n\r\n```js\r\nconst ES_MESSAGES = new Map([\r\n  [\r\n     'xpack.migration.deprecations.coercionBooleanFields.message', // key\r\n     'Coercion of {someValue} fields' // default message\r\n  ]\r\n]);\r\n\r\n```\r\nAnd then be able to use it i in `i18n.translate()` passing the `messageId` or `errorCode` from ES","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/443360885","html_url":"https://github.com/elastic/elasticsearch/issues/35665#issuecomment-443360885","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35665","id":443360885,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MzM2MDg4NQ==","user":{"login":"azasypkin","id":1713708,"node_id":"MDQ6VXNlcjE3MTM3MDg=","avatar_url":"https://avatars1.githubusercontent.com/u/1713708?v=4","gravatar_id":"","url":"https://api.github.com/users/azasypkin","html_url":"https://github.com/azasypkin","followers_url":"https://api.github.com/users/azasypkin/followers","following_url":"https://api.github.com/users/azasypkin/following{/other_user}","gists_url":"https://api.github.com/users/azasypkin/gists{/gist_id}","starred_url":"https://api.github.com/users/azasypkin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azasypkin/subscriptions","organizations_url":"https://api.github.com/users/azasypkin/orgs","repos_url":"https://api.github.com/users/azasypkin/repos","events_url":"https://api.github.com/users/azasypkin/events{/privacy}","received_events_url":"https://api.github.com/users/azasypkin/received_events","type":"User","site_admin":false},"created_at":"2018-11-30T22:37:35Z","updated_at":"2018-11-30T22:37:35Z","author_association":"MEMBER","body":"> Parsing something like this\r\n\r\nWell, I'm concerned about several things here:\r\n\r\n* It's pretty hard to differentiate this map from generic `Map<string, string>`, so our label extraction tools may flag too many false positives\r\n* While it's trivial to parse code like this  `i18n.translate(response.messageId, { defaultMessage: ES_MESSAGES.get(response.messageId) })` it may be a way to complex to properly interpret this and make sure that `i18n.translate` is called with something that makes sense and not random variables during **static analysis** (e.g. typos or just wrong usage)\r\n* It's not clear how to define optional `description` (aka additional context that is provided to translators together with the label itself) with such approach\r\n\r\n> it'd be nice to not have to duplicate the translation key\r\n\r\nI'd like to get more context on what user-facing messages we intend to receive from ES side first, but I have a feeling that message IDs returned from ES (if any) may not map 1:1 to label IDs we use in Kibana. Label IDs are supposed to be used by translators to get additional context about the part of the app or flow where the label is used and how to find it in the app itself. I can potentially imagine the case when the same ES API is used in two different contexts in Kibana and hence messages may require different IDs, be a part of other label/text etc... Very-very synthetic example:\r\n```js\r\nconst ES_MESSAGES = new Map([\r\n  ['es.api.search.notFound', \r\n    i18n.translate('xpack.security.userSearch.userNotFound', {\r\n      defaultMessage: 'User not found',\r\n    })\r\n  ]\r\n]);\r\n.....\r\nconst ES_MESSAGES = new Map([\r\n  ['es.api.search.notFound', \r\n     i18n.translate('kbn.discovery.search.noResultsFound', {\r\n      defaultMessage: 'Your search - {userQuery} - did not match any documents. ',\r\n      values: { userQuery }\r\n    })\r\n  ]\r\n]);\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/443495910","html_url":"https://github.com/elastic/elasticsearch/issues/35665#issuecomment-443495910","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35665","id":443495910,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MzQ5NTkxMA==","user":{"login":"sebelga","id":2854616,"node_id":"MDQ6VXNlcjI4NTQ2MTY=","avatar_url":"https://avatars0.githubusercontent.com/u/2854616?v=4","gravatar_id":"","url":"https://api.github.com/users/sebelga","html_url":"https://github.com/sebelga","followers_url":"https://api.github.com/users/sebelga/followers","following_url":"https://api.github.com/users/sebelga/following{/other_user}","gists_url":"https://api.github.com/users/sebelga/gists{/gist_id}","starred_url":"https://api.github.com/users/sebelga/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebelga/subscriptions","organizations_url":"https://api.github.com/users/sebelga/orgs","repos_url":"https://api.github.com/users/sebelga/repos","events_url":"https://api.github.com/users/sebelga/events{/privacy}","received_events_url":"https://api.github.com/users/sebelga/received_events","type":"User","site_admin":false},"created_at":"2018-12-02T10:08:57Z","updated_at":"2018-12-02T10:10:19Z","author_association":"CONTRIBUTOR","body":"@azasypkin I totally agree. I was a bit distracted by the fact that in our discussion the error codes coming from ES where so similar to a i18n translation key.\r\nMaybe we'd prefer another format, like the ones introduced in Node.js? https://nodejs.org/api/errors.html#errors_node_js_error_codes","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/443765896","html_url":"https://github.com/elastic/elasticsearch/issues/35665#issuecomment-443765896","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35665","id":443765896,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0Mzc2NTg5Ng==","user":{"login":"joshdover","id":1813008,"node_id":"MDQ6VXNlcjE4MTMwMDg=","avatar_url":"https://avatars2.githubusercontent.com/u/1813008?v=4","gravatar_id":"","url":"https://api.github.com/users/joshdover","html_url":"https://github.com/joshdover","followers_url":"https://api.github.com/users/joshdover/followers","following_url":"https://api.github.com/users/joshdover/following{/other_user}","gists_url":"https://api.github.com/users/joshdover/gists{/gist_id}","starred_url":"https://api.github.com/users/joshdover/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshdover/subscriptions","organizations_url":"https://api.github.com/users/joshdover/orgs","repos_url":"https://api.github.com/users/joshdover/repos","events_url":"https://api.github.com/users/joshdover/events{/privacy}","received_events_url":"https://api.github.com/users/joshdover/received_events","type":"User","site_admin":false},"created_at":"2018-12-03T16:10:20Z","updated_at":"2018-12-03T16:10:20Z","author_association":"MEMBER","body":"I see the problems then, I did not realize the static analysis requirement of the localization keys, but that makes sense now.\r\n\r\nWith the context above, it seems that generic ES error codes may be best. This could allow us to map a generic error code to an application/context-specific translation and give us a lot more flexibility to change these without relying on ES changes. I would expect that error codes may also help us guide the user in what needs to be fixed to continue in many of our features.\r\n\r\nI think the deprecations API need for this is a bit different in that it is very specific, and I think using that as a starting place for how to do this for all of ES generally was a mistake on my part. For the time being, we've decided not to translate these deprecation messages and only translate the UI strings for the upgrade assistant.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/567561797","html_url":"https://github.com/elastic/elasticsearch/issues/35665#issuecomment-567561797","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35665","id":567561797,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NzU2MTc5Nw==","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"created_at":"2019-12-19T16:28:28Z","updated_at":"2019-12-19T16:28:28Z","author_association":"MEMBER","body":"The Core/Infra team discussed this and @jasontedor told us about a discussion that took place some time ago where this would primarily be focused on the messages that the user receives from the UI instead of exceptions returned from Elasticsearch. Additionally, we believe that keeping messages as is help users since they can search for others who had the same issue and see possible solutions. Given that, we do not intend to take action so I am going to close this issue.","performed_via_github_app":null}]