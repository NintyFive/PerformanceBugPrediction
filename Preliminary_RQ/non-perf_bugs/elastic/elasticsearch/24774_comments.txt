[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/305171538","html_url":"https://github.com/elastic/elasticsearch/issues/24774#issuecomment-305171538","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24774","id":305171538,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNTE3MTUzOA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-05-31T12:11:38Z","updated_at":"2017-05-31T12:11:38Z","author_association":"MEMBER","body":"We use `Infinity` (or `-Infinity`)  for `float` and `double` where the value is missing in the document. `Infinity` is the biggest possible value so we use it to sort the document without value for the field last. You can change this behavior using the `missing` attribute in the sort definition:\r\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-sort.html#_missing_values\r\nIt works as expected with `search_after` as shown in the following recreation (tested with 5.x):\r\n\r\n````\r\nPUT t\r\n{\r\n\t\"mappings\": {\r\n\t\t\"t\": {\r\n\t\t\t\"properties\": {\r\n\t\t\t\t\"number\": {\r\n\t\t\t\t\t\"type\": \"double\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Add two documents with no value for the field\r\nPUT t/t/1\r\n{\r\n}\r\n\r\nPUT t/t/2\r\n{\r\n}\r\n\r\nGET t/t/_search\r\n{\r\n\t\"sort\": [\r\n\t\t\"number\",\r\n\t\t\"_uid\"\r\n\t],\r\n\t\"search_after\": [\"Infinity\", \"t#1\"]\r\n}\r\n\r\n// the query returns the document with id 2\r\nresponse:\r\n{\r\n  \"took\": 2,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 5,\r\n    \"successful\": 5,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": 2,\r\n    \"max_score\": null,\r\n    \"hits\": [\r\n      {\r\n        \"_index\": \"t\",\r\n        \"_type\": \"t\",\r\n        \"_id\": \"2\",\r\n        \"_score\": null,\r\n        \"_source\": {},\r\n        \"sort\": [\r\n          \"Infinity\",\r\n          \"t#2\"\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n````\r\n\r\nIn the example you've linked you're asking for `50` results but the query has only `33` hits (total) so the first page contains all the documents that match the query. \r\n","performed_via_github_app":null}]