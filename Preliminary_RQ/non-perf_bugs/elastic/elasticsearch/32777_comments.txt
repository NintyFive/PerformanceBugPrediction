[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/412065042","html_url":"https://github.com/elastic/elasticsearch/issues/32777#issuecomment-412065042","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32777","id":412065042,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMjA2NTA0Mg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-08-10T12:16:45Z","updated_at":"2018-08-10T12:16:45Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-security","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/416116402","html_url":"https://github.com/elastic/elasticsearch/issues/32777#issuecomment-416116402","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32777","id":416116402,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNjExNjQwMg==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2018-08-27T05:14:00Z","updated_at":"2018-08-27T05:14:00Z","author_association":"CONTRIBUTOR","body":"I have a prototype of how this could work within `_has_privileges` here: https://github.com/tvernum/elasticsearch/tree/app-priv/any-resource\r\n\r\nIf the `resources` array is `null`, it will be implied to be the set of resources that have been granted to the user.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/416480325","html_url":"https://github.com/elastic/elasticsearch/issues/32777#issuecomment-416480325","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32777","id":416480325,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNjQ4MDMyNQ==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2018-08-28T07:30:06Z","updated_at":"2018-08-28T07:31:02Z","author_association":"CONTRIBUTOR","body":"I now also have a prototype of a brand new API `GET /_xpack/security/user/_privileges`\r\nhttps://github.com/tvernum/elasticsearch/tree/list-privileges\r\n\r\nThis returns a user's full set of privileges with 2 caveats:\r\n1. It doesn't attempt to represent the conditions on `\"global\"` privileges. e.g. It will claim that the `kibana` user has the `cluster:admin/xpack/security/privilege/*` cluster privilege, even though it actually only has that for some applications.\r\n2. It intentionally doesn't (and can't/won't) expand out the privileges, so if you have `\"all\"` then it returns `\"all\"` and doesn't list `\"read\", \"write\", \"delete\", \"update\"` etc.\r\n\r\nPer my commit message, this API should only be used for 2 broad purposes:\r\n1. general debugging. It will come in handy operationally, to be able to ask \"what privileges does this user have?\" when trying to resolve operational issues. The `_authenticate` API lists role names, but this goes a step further\r\n2. determining resources for application privileges and/or index privileges. You'd never want to use this (on its own) to try and work out whether a user has \"index\" access to \"metrics-2018-08-30\", it would require the client to interpret all the privilege names and their implications, and also expand the wildcards. But it does allow you to do exactly what is being asked for in this issue - find out what resources should be fed into `_has_privileges` in order to determine if the user has _any_ write access, etc.\r\n  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/416487898","html_url":"https://github.com/elastic/elasticsearch/issues/32777#issuecomment-416487898","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32777","id":416487898,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNjQ4Nzg5OA==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2018-08-28T07:57:43Z","updated_at":"2018-08-28T07:58:03Z","author_association":"CONTRIBUTOR","body":"@elastic/es-security - your input is appreciated here.\r\n \r\n**TL;DR** : \r\n- [Option 1](https://github.com/tvernum/elasticsearch/tree/app-priv/any-resource) : Extend `_has_privileges` \r\n- [Option 2](https://github.com/tvernum/elasticsearch/tree/list-privileges) : Add a new API\r\n\r\n---\r\n\r\nFirst a bit of background. @kobelb spoke to me about this a few weeks ago, and we agreed that since ES is now in the business of acting as a security oracle for other stack apps, we need to offer the sorts of APIs that are necessary to do that well. And one of those is a way to find out something along the lines of _\"Does this user have `write` access to something in my application?\"_\r\n\r\n`_has_privileges` can't do that right now, because it always considers wildcards to be _exhaustive_. That is \r\n```\r\nhas \"kibana\":\"write\" on \"*\" ?\r\n```\r\nis interpreted as \"can the user write to _everything_\"?  \r\nThere is no way to get that \"*\" to mean _something_.\r\n\r\nThere were 2 broad options for that:\r\n1. change `_has_privileges` to support some sort of _something_ / _anything_ query\r\n2. create a new API to list the resources that a user did have access to.\r\n\r\nI have prototypes the 2 options above (both are \"working\" prototypes, but neither of them has tests), I prefer the second option, but would like to open it up for discussion.\r\n\r\n---\r\n\r\nIn writing this, I realise that _neither_ option provides a solution a question like _\"Which spaces can a user `write` to?\"_, if \"write\" is a generic privilege that applies to all sorts of entities.\r\nYou can ask _\"Which of _these_ spaces can the user write to?\"_ and _\"What things can the user write to?\"_ but you can't restrict those _things_ to a subset of resources.\r\nMore concretely, there is no API like this:\r\n```\r\nGET /_xpack/security/user/_privileges\r\n{\r\n   \"applications\": [\r\n     { \r\n        \"application\": \"kibana\",\r\n        \"privileges\": [ \"write\" ],\r\n        \"resources\": [ \"spaces/*\" ]\r\n     }\r\n  ]\r\n}\r\n``` \r\n \r\nThe solution (which is an approach I've already recommened to @kobelb, and IIRC matches their plan) is to not have such generic privilege names. If your privilege is actually `\"write_space\"` (or more likely something like `spaces:write`) then you get some way there because you can then ask \"What resources to the user have access to\", and then \"Does the user have `write_space` on any of _those_ resources\" ?  \r\nWhat you can never get under any API proposal (because it's an impossibility) is a list of all space ids (resources) that the user has access to.\r\n`superuser` has access to `*` privileges for `*` resources on `*` applications. If you ask which spaces `elastic` can view, then it's _all_ of them, but how do we represent that? Technically we can perform the Automaton intersection, but returning that result back in an API is impractical and would require that the client interpret some sort of wildcard. And if we're making the client interpret wildcards, then we may as well just let them interpret the API as proposed. \r\n\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/417304667","html_url":"https://github.com/elastic/elasticsearch/issues/32777#issuecomment-417304667","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32777","id":417304667,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNzMwNDY2Nw==","user":{"login":"albertzaharovits","id":4568420,"node_id":"MDQ6VXNlcjQ1Njg0MjA=","avatar_url":"https://avatars2.githubusercontent.com/u/4568420?v=4","gravatar_id":"","url":"https://api.github.com/users/albertzaharovits","html_url":"https://github.com/albertzaharovits","followers_url":"https://api.github.com/users/albertzaharovits/followers","following_url":"https://api.github.com/users/albertzaharovits/following{/other_user}","gists_url":"https://api.github.com/users/albertzaharovits/gists{/gist_id}","starred_url":"https://api.github.com/users/albertzaharovits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertzaharovits/subscriptions","organizations_url":"https://api.github.com/users/albertzaharovits/orgs","repos_url":"https://api.github.com/users/albertzaharovits/repos","events_url":"https://api.github.com/users/albertzaharovits/events{/privacy}","received_events_url":"https://api.github.com/users/albertzaharovits/received_events","type":"User","site_admin":false},"created_at":"2018-08-30T12:39:58Z","updated_at":"2018-08-30T12:40:30Z","author_association":"CONTRIBUTOR","body":"Here is what I reckon:\r\nThe existing `_has_privileges` **works** with resource patterns, but the response contains the resource pattern from the request, instead of the actual resources under that pattern that have been checked. (I have not tested because I am hitting some problems with the put privilege call that gets routed to the index call handler). If this is the case, I think we should keep it like this. Even though the response is not very useful, the response \"code\": granted/denied, is presumably the important part, and it is truthful.\r\n\r\nIndeed the requirement to list the resources under an application (under a specified privilege) or the privileges of a set of resources is necessary. Otherwise, who knows what `_has_privileges` is doing behind ? Testing some unknown stale resources/privileges.\r\n\r\nTherefore I think **Option2** is desirable. The issue is tied to `has privilege` but independent enough to warrant a different API call. I do hope clients will not use the new API to duplicate the `has privilege` logic on the client side 😐 \r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/417372618","html_url":"https://github.com/elastic/elasticsearch/issues/32777#issuecomment-417372618","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32777","id":417372618,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNzM3MjYxOA==","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"created_at":"2018-08-30T16:00:54Z","updated_at":"2018-08-30T16:00:54Z","author_association":"MEMBER","body":"+1 to option 2 with one request.\r\n\r\n> It doesn't attempt to represent the conditions on \"global\" privileges. e.g. It will claim that the kibana user has the cluster:admin/xpack/security/privilege/* cluster privilege, even though it actually only has that for some applications.\r\n\r\nI think this should be addressed. We have a way that we represent conditional privileges in a role and I think the output of any API should also indicate that there is a condition on said privilege.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/418608885","html_url":"https://github.com/elastic/elasticsearch/issues/32777#issuecomment-418608885","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32777","id":418608885,"node_id":"MDEyOklzc3VlQ29tbWVudDQxODYwODg4NQ==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2018-09-05T05:59:56Z","updated_at":"2018-09-05T06:39:23Z","author_association":"CONTRIBUTOR","body":"Based on the feedback above, I have pushed a new version of the `list-privileges` branch.\r\n\r\nThe output is now modelled on the Get Role API, but a few fields have become arrays to reflect the way privileges from different roles are merged together at runtime.\r\n\r\n@kobelb I trust the output below is more than sufficient for your needs:\r\n\r\n```\r\n{\r\n  \"cluster\" : [ \"monitor\", \"manage_ml\" ],\r\n  \"global\" : [\r\n    {\r\n      \"application\" : {\r\n        \"manage\" : { \"applications\" : [ \"my-app-*\", \"your-app\" ] }\r\n      }\r\n    }\r\n  ],\r\n  \"indices\" : [\r\n    {\r\n      \"names\" : [ \"abc*\" ],\r\n      \"privileges\" : [ \"read\" ],\r\n      \"field_security\" : [\r\n        {\r\n          \"grant\" : [ \"*\" ],\r\n          \"except\" : [ \"secret.*\" ]\r\n        },\r\n        {\r\n          \"grant\" : [ \"secret.*\" ],\r\n          \"except\" : [ \"secret.top\" ]\r\n        }\r\n      ],\r\n      \"query\" : [\r\n        \"{ \\\"match\\\" : { \\\"mode\\\": \\\"public\\\" } }\",\r\n        \"{ \\\"match\\\" : { \\\"mode\\\": \\\"shared\\\" } }\"\r\n      ]\r\n    }\r\n  ],\r\n  \"applications\" : [\r\n    {\r\n      \"application\" : \"kibana\",\r\n      \"privileges\" : [ \"read\" ],\r\n      \"resources\" : [ \"data/foo/*\",  \"*\" ]\r\n    },\r\n    {\r\n      \"application\" : \"kibana\",\r\n      \"privileges\" : [ \"*\" ],\r\n      \"resources\" : [ \"data/foo/*\" ]\r\n    },\r\n    {\r\n      \"application\" : \"kibana\",\r\n      \"privileges\" : [ \"write\" ],\r\n      \"resources\" : [ \"data/foo/*\", \"user/_self\" ]\r\n    }\r\n  ],\r\n  \"run_as\" : [ \"user1\", \"user-*\" ]\r\n}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/418634174","html_url":"https://github.com/elastic/elasticsearch/issues/32777#issuecomment-418634174","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32777","id":418634174,"node_id":"MDEyOklzc3VlQ29tbWVudDQxODYzNDE3NA==","user":{"login":"kobelb","id":627123,"node_id":"MDQ6VXNlcjYyNzEyMw==","avatar_url":"https://avatars0.githubusercontent.com/u/627123?v=4","gravatar_id":"","url":"https://api.github.com/users/kobelb","html_url":"https://github.com/kobelb","followers_url":"https://api.github.com/users/kobelb/followers","following_url":"https://api.github.com/users/kobelb/following{/other_user}","gists_url":"https://api.github.com/users/kobelb/gists{/gist_id}","starred_url":"https://api.github.com/users/kobelb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kobelb/subscriptions","organizations_url":"https://api.github.com/users/kobelb/orgs","repos_url":"https://api.github.com/users/kobelb/repos","events_url":"https://api.github.com/users/kobelb/events{/privacy}","received_events_url":"https://api.github.com/users/kobelb/received_events","type":"User","site_admin":false},"created_at":"2018-09-05T07:51:18Z","updated_at":"2018-09-05T07:51:18Z","author_association":"CONTRIBUTOR","body":"This works for us, thanks @tvernum ","performed_via_github_app":null}]