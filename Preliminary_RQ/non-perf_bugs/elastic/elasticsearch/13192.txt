{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/13192","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13192/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13192/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13192/events","html_url":"https://github.com/elastic/elasticsearch/issues/13192","id":103794551,"node_id":"MDU6SXNzdWUxMDM3OTQ1NTE=","number":13192,"title":"Inner Hits returning all records, size option not working as expected","user":{"login":"tegansnyder","id":1200195,"node_id":"MDQ6VXNlcjEyMDAxOTU=","avatar_url":"https://avatars2.githubusercontent.com/u/1200195?v=4","gravatar_id":"","url":"https://api.github.com/users/tegansnyder","html_url":"https://github.com/tegansnyder","followers_url":"https://api.github.com/users/tegansnyder/followers","following_url":"https://api.github.com/users/tegansnyder/following{/other_user}","gists_url":"https://api.github.com/users/tegansnyder/gists{/gist_id}","starred_url":"https://api.github.com/users/tegansnyder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tegansnyder/subscriptions","organizations_url":"https://api.github.com/users/tegansnyder/orgs","repos_url":"https://api.github.com/users/tegansnyder/repos","events_url":"https://api.github.com/users/tegansnyder/events{/privacy}","received_events_url":"https://api.github.com/users/tegansnyder/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-08-28T20:57:59Z","updated_at":"2017-04-24T10:39:20Z","closed_at":"2015-08-29T11:57:50Z","author_association":"NONE","active_lock_reason":null,"body":"I'm relatively new to Elastic Search, but finding it extremely pleasant to work with so far. I have ran into a particular interesting problem detailed below.\n##### Mapping\n\nBelow is my mapping. I'm using a few nested fields. My data is product data that rolls up to a product code. Many variations of product names can have the same product code. For this reason I used a nested type when mapping.\n\n``` json\n{\n    \"index\": \"products_en\",\n    \"body\": {\n        \"settings\": {\n            \"refresh_interval\": \"-1\"\n        },\n        \"mappings\": {\n            \"products\": {\n                \"_source\": {\n                    \"enabled\": true\n                },\n                \"properties\": {\n                    \"PRODUCT_CODE\": {\n                        \"type\": \"string\",\n                        \"index\": \"not_analyzed\"\n                    },\n                    \"PRODUCT_NAMES\": {\n                        \"type\": \"nested\",\n                        \"include_in_parent\": true,\n                        \"properties\": {\n                            \"NAME\": {\n                                \"type\": \"string\",\n                                \"index\": \"analyzed\",\n                                \"null_value\": \"NULL\",\n                                \"fields\": {\n                                    \"lang_analyzed\": {\n                                        \"type\": \"string\",\n                                        \"analyzer\": \"english\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"PART_NUMBERS\": {\n                        \"type\": \"nested\",\n                        \"properties\": {\n                            \"NUMBER\": {\n                                \"type\": \"string\",\n                                \"index\": \"not_analyzed\",\n                                \"null_value\": \"NULL\"\n                            }\n                        }\n                    },\n                    \"LOCALE_CODES\": {\n                        \"type\": \"nested\",\n                        \"properties\": {\n                            \"CODE\": {\n                                \"type\": \"string\",\n                                \"index\": \"not_analyzed\",\n                                \"null_value\": \"NULL\"\n                            }\n                        }\n                    },\n                    \"RECOMMENDED\": {\n                        \"type\": \"boolean\"\n                    }\n                }\n            }\n        }\n    }\n}\n```\n##### Populating the Index\n\nWhen populating my index each document will look similar to the example below:\n\n``` json\n{\n    \"body\": [\n        {\n            \"index\": {\n                \"_index\": \"products_en\",\n                \"_type\": \"products\"\n            }\n        },\n        {\n            \"PRODUCT_CODE\": \"A00023ABCDEF\",\n            \"PRODUCT_NAMES\": {\n                \"NAME\": [\n                    \"TEST PRODUCT NAME VERSION ABCDEFGH TYPE 1VB\",\n                    \"OLD PRODUCT NAME QZZZ\",\n                    \"NEW PRODUCT NAME AB55\",\n                    \"PHASEOUT PPP 034343 NAME\"\n                ]\n            },\n            \"PART_NUMBERS\": {\n                \"NUMBER\": [\n                    \"000AZZZ\",\n                    \"QZZZ\",\n                    \"MM5000\"\n                ]\n            },\n            \"LOCALE_CODES\": {\n                \"CODE\": [\n                    \"EN\",\n                    \"EN_US\",\n                    \"EN_IE\",\n                    \"EN_SG\"\n                ]\n            },\n            \"RECOMMENDED\": true\n        }\n    ]\n}\n```\n##### Querying\n\nThen when forming my query my goal is search wrap the nested items in a `dis_max` and determine the best possible matches from inside the nested types utilizing a common query.  Below is an example query is to find a product name / part number combination for multiple nested fields:\n\n``` json\n{\n  \"from\": 0,\n  \"size\": 10,\n  \"query\": {\n    \"filtered\": {\n      \"query\": {\n        \"dis_max\": {\n          \"tie_breaker\": 0.4,\n          \"queries\": [\n            {\n              \"nested\": {\n                \"path\": \"products.PRODUCT_NAMES\",\n                \"score_mode\": \"max\",\n                \"query\": {\n                  \"common\": {\n                    \"PRODUCT_NAMES.NAME\": {\n                      \"query\": \"PRODUCT NAME QZZZ\",\n                      \"boost\": 10,\n                      \"cutoff_frequency\": 0.0007,\n                      \"minimum_should_match\": 2\n                    }\n                  }\n                },\n                \"inner_hits\": {\n                  \"size\": 2\n                }\n              }\n            },\n            {\n              \"nested\": {\n                \"path\": \"products.PART_NUMBERS\",\n                \"score_mode\": \"max\",\n                \"query\": {\n                  \"common\": {\n                    \"PART_NUMBERS.NUMBER\": {\n                      \"query\": \"QZZZ\",\n                      \"boost\": 30,\n                      \"cutoff_frequency\": 0.0007\n                    }\n                  }\n                },\n                \"inner_hits\": {\n                  \"size\": 1\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"filter\": {\n        \"nested\": {\n          \"path\": \"products.LOCALE_CODES\",\n          \"filter\": {\n            \"bool\": {\n              \"must\": [\n                {\n                  \"term\": {\n                    \"LOCALE_CODES.CODE\": \"EN_US\"\n                  }\n                }\n              ]\n            }\n          },\n          \"_cache\": false\n        }\n      }\n    }\n  },\n  \"track_scores\": true\n}\n```\n##### Results\n\nThe query above executes, it finds matches, but the `inner_hits` section of each field is returning all the nested values. Shouldn't it just return the nested values that matched?\n\nHere is the `inner_hits` section of the response for the PRODUCT_NAMES.NAME nested field.\n\n``` json\n\"inner_hits\": {\n    \"products.PRODUCT_NAMES\": {\n        \"hits\": {\n            \"total\": 1,\n            \"max_score\": 4.4727473,\n            \"hits\": [\n                {\n                    \"_index\": \"products_en\",\n                    \"_type\": \"products\",\n                    \"_id\": \"AU91ue6l7hxDSEsV00W-\",\n                    \"_nested\": {\n                        \"field\": \"PRODUCT_NAMES\",\n                        \"offset\": 0\n                    },\n                    \"_score\": 4.4727473,\n                    \"_source\": {\n                        \"NAME\": [\n                            \"TEST PRODUCT NAME VERSION ABCDEFGH TYPE 1VB\",\n                            \"OLD PRODUCT NAME QZZZ\",\n                            \"NEW PRODUCT NAME AB55\"\n                        ]\n                    }\n                }\n            ]\n        }\n    }\n}\n```\n\nNotice I had `inner_hits` size set to 2 and the above is returning 3 values:\n\n``` json\n\"inner_hits\": {\n  \"size\": 2\n}\n```\n\n---\n### My problems:\n- inner_hits is returning all values of nested field.\n- inner_hits size option doesn't seem to work\n\nAny help or pointers are appreciated. Thanks!\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}