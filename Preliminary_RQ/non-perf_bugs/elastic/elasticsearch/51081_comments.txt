[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/574969819","html_url":"https://github.com/elastic/elasticsearch/issues/51081#issuecomment-574969819","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51081","id":574969819,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDk2OTgxOQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-01-16T03:51:47Z","updated_at":"2020-01-16T03:51:47Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-security (:Security/License)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/574971479","html_url":"https://github.com/elastic/elasticsearch/issues/51081#issuecomment-574971479","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51081","id":574971479,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDk3MTQ3OQ==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2020-01-16T04:01:02Z","updated_at":"2020-01-16T04:01:02Z","author_association":"CONTRIBUTOR","body":"I think it might be time to do a refactor of `XPackLicenseState` when we do this. There are a lot of methods there, many of which are tied to explicit modes.\r\n\r\nIt might be better to replace the body of each of those `isXyzAllowed()` methods with a call to something common e.g.\r\n\r\n```\r\n    public boolean isSqlAllowed() {\r\n        return checkMinimumLicense(OperationMode.BASIC);\r\n    }\r\n\r\n    public boolean isJdbcAllowed() {\r\n        return checkMinimumLicense(OperationMode.PLATINUM);\r\n    }\r\n\r\n    private boolean checkMinimumLicense(OperationMode mode) {\r\n        return checkMinimumLicense(mode, true);\r\n    }\r\n  \r\n    private synchronized boolean checkMinimumLicense(OperationMode minimumMode, boolean allowTrial) {\r\n        Status localStatus = status;\r\n        if (localStatus.active == false ) {\r\n            return false;\r\n        }\r\n        if (allowTrial && localStatus.mode == OperationMode.TRIAL) {\r\n            return true;\r\n        }\r\n        return localStatus.mode >= minimumMode;\r\n    }\r\n```\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/581756153","html_url":"https://github.com/elastic/elasticsearch/issues/51081#issuecomment-581756153","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51081","id":581756153,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MTc1NjE1Mw==","user":{"login":"ywangd","id":2344308,"node_id":"MDQ6VXNlcjIzNDQzMDg=","avatar_url":"https://avatars3.githubusercontent.com/u/2344308?v=4","gravatar_id":"","url":"https://api.github.com/users/ywangd","html_url":"https://github.com/ywangd","followers_url":"https://api.github.com/users/ywangd/followers","following_url":"https://api.github.com/users/ywangd/following{/other_user}","gists_url":"https://api.github.com/users/ywangd/gists{/gist_id}","starred_url":"https://api.github.com/users/ywangd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywangd/subscriptions","organizations_url":"https://api.github.com/users/ywangd/orgs","repos_url":"https://api.github.com/users/ywangd/repos","events_url":"https://api.github.com/users/ywangd/events{/privacy}","received_events_url":"https://api.github.com/users/ywangd/received_events","type":"User","site_admin":false},"created_at":"2020-02-04T06:00:30Z","updated_at":"2020-02-04T06:00:30Z","author_association":"MEMBER","body":"Should every one of these methods check `status.active == true`? Some of them don't, e.g. `isApiKeyServiceAllowed`? If refactored, the `active` check will be applied. Or should we make exception for them?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/581764221","html_url":"https://github.com/elastic/elasticsearch/issues/51081#issuecomment-581764221","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51081","id":581764221,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MTc2NDIyMQ==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2020-02-04T06:35:06Z","updated_at":"2020-02-04T06:35:06Z","author_association":"CONTRIBUTOR","body":"Good point.\r\nA few features, like security (and therefore API Keys) are intended to be permitted even if the license expires (`active == false`). We don't want to turn off security when a license expires, and if security is on, then you need to be able to authenticate (via any authentication method).\r\n\r\nSo, we need an exception.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/581775327","html_url":"https://github.com/elastic/elasticsearch/issues/51081#issuecomment-581775327","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51081","id":581775327,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MTc3NTMyNw==","user":{"login":"ywangd","id":2344308,"node_id":"MDQ6VXNlcjIzNDQzMDg=","avatar_url":"https://avatars3.githubusercontent.com/u/2344308?v=4","gravatar_id":"","url":"https://api.github.com/users/ywangd","html_url":"https://github.com/ywangd","followers_url":"https://api.github.com/users/ywangd/followers","following_url":"https://api.github.com/users/ywangd/following{/other_user}","gists_url":"https://api.github.com/users/ywangd/gists{/gist_id}","starred_url":"https://api.github.com/users/ywangd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywangd/subscriptions","organizations_url":"https://api.github.com/users/ywangd/orgs","repos_url":"https://api.github.com/users/ywangd/repos","events_url":"https://api.github.com/users/ywangd/events{/privacy}","received_events_url":"https://api.github.com/users/ywangd/received_events","type":"User","site_admin":false},"created_at":"2020-02-04T07:19:25Z","updated_at":"2020-02-04T07:19:41Z","author_association":"MEMBER","body":"There is also a `MISSING` operation mode which is not handled in every case. For an example, the [XPackLicenseState#isSecurityEnabled](https://github.com/elastic/elasticsearch/blob/7.6/x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java#L840) handles it as default, i.e. same as gold or platinum. Is this an issue?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/582156028","html_url":"https://github.com/elastic/elasticsearch/issues/51081#issuecomment-582156028","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51081","id":582156028,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjE1NjAyOA==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2020-02-04T22:55:26Z","updated_at":"2020-02-04T22:55:26Z","author_association":"CONTRIBUTOR","body":"MISSING will mostly (fully?) go away with #45022\r\nIf it stays, I think we may need to look at it on a case-by-case basis but for non-security we could treat it like BASIC\r\nFor security we probably want to continue to treat it like PLATINUM so that a license problem doesn't break security.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/582179547","html_url":"https://github.com/elastic/elasticsearch/issues/51081#issuecomment-582179547","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51081","id":582179547,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjE3OTU0Nw==","user":{"login":"ywangd","id":2344308,"node_id":"MDQ6VXNlcjIzNDQzMDg=","avatar_url":"https://avatars3.githubusercontent.com/u/2344308?v=4","gravatar_id":"","url":"https://api.github.com/users/ywangd","html_url":"https://github.com/ywangd","followers_url":"https://api.github.com/users/ywangd/followers","following_url":"https://api.github.com/users/ywangd/following{/other_user}","gists_url":"https://api.github.com/users/ywangd/gists{/gist_id}","starred_url":"https://api.github.com/users/ywangd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywangd/subscriptions","organizations_url":"https://api.github.com/users/ywangd/orgs","repos_url":"https://api.github.com/users/ywangd/repos","events_url":"https://api.github.com/users/ywangd/events{/privacy}","received_events_url":"https://api.github.com/users/ywangd/received_events","type":"User","site_admin":false},"created_at":"2020-02-05T00:14:39Z","updated_at":"2020-02-05T00:14:39Z","author_association":"MEMBER","body":"Cool makes sense. Currently there is a bit inconsistency between code and javadocs. For an example, [isEnrichAllowed](https://github.com/elastic/elasticsearch/blob/7.6/x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java#L702) only check whether a license is active. But its javadocs says `all license types except MISSING`. I lean towards removing the line in javadocs. Sounds reasonable to you?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/582226130","html_url":"https://github.com/elastic/elasticsearch/issues/51081#issuecomment-582226130","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51081","id":582226130,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjIyNjEzMA==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2020-02-05T03:38:59Z","updated_at":"2020-02-05T03:38:59Z","author_association":"CONTRIBUTOR","body":"> Sounds reasonable to you?\r\n\r\nYes. If the implementation of `isEnrichAllowed` is clean (e.g. `checkMinimumLicense(OperationMode.BASIC);`) then I don't think it really needs Javadoc.\r\n\r\nThe purpose of the method is clear from the name. The behaviour is clear from the implementation. What more does the Javadoc add?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/582232021","html_url":"https://github.com/elastic/elasticsearch/issues/51081#issuecomment-582232021","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51081","id":582232021,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjIzMjAyMQ==","user":{"login":"ywangd","id":2344308,"node_id":"MDQ6VXNlcjIzNDQzMDg=","avatar_url":"https://avatars3.githubusercontent.com/u/2344308?v=4","gravatar_id":"","url":"https://api.github.com/users/ywangd","html_url":"https://github.com/ywangd","followers_url":"https://api.github.com/users/ywangd/followers","following_url":"https://api.github.com/users/ywangd/following{/other_user}","gists_url":"https://api.github.com/users/ywangd/gists{/gist_id}","starred_url":"https://api.github.com/users/ywangd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywangd/subscriptions","organizations_url":"https://api.github.com/users/ywangd/orgs","repos_url":"https://api.github.com/users/ywangd/repos","events_url":"https://api.github.com/users/ywangd/events{/privacy}","received_events_url":"https://api.github.com/users/ywangd/received_events","type":"User","site_admin":false},"created_at":"2020-02-05T04:12:00Z","updated_at":"2020-02-05T04:12:00Z","author_association":"MEMBER","body":"> What more does the Javadoc add?\r\n>\r\nNothing. Code should be treated as the ultimate reference. So I'll delete the doc line as it adds nothings but confusion. Thanks.","performed_via_github_app":null}]