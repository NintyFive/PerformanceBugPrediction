[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/249523819","html_url":"https://github.com/elastic/elasticsearch/issues/20650#issuecomment-249523819","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20650","id":249523819,"node_id":"MDEyOklzc3VlQ29tbWVudDI0OTUyMzgxOQ==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2016-09-26T09:36:22Z","updated_at":"2016-09-26T09:36:22Z","author_association":"MEMBER","body":"> We should decide whether we want to align this with how normal shard work (reuse of allocation ids)\n\nShould we re-use the allocation id since we only have a single copy of the data, so any copies of the data are up-to-date?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/249773328","html_url":"https://github.com/elastic/elasticsearch/issues/20650#issuecomment-249773328","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20650","id":249773328,"node_id":"MDEyOklzc3VlQ29tbWVudDI0OTc3MzMyOA==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-09-27T05:57:02Z","updated_at":"2016-09-27T06:00:27Z","author_association":"MEMBER","body":"> Should we re-use the allocation id since we only have a single copy of the data, so any copies of the data are up-to-date?\n\nIt is a bit further off than how we do things now but  that is indeed another valid option, conceptually. Recently the exact semantics of aID was raised for discussion:\n\n1) Are they associated with the life cycle of a shard assignment to a node - i.e., if the master assigns a shard to a node, then fails it due to a disconnect and the re-assigns it there the new allocation should have a new ID.\n2) Are they associated with the storage on a node? in which case, it should stay the same every time we reuse a storage as is. Note that currently a replica recovery destroys the storage folder and rebuilds it, which is why we have to assign a new id. This will change with seq# based recovery.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/249998519","html_url":"https://github.com/elastic/elasticsearch/issues/20650#issuecomment-249998519","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20650","id":249998519,"node_id":"MDEyOklzc3VlQ29tbWVudDI0OTk5ODUxOQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-09-27T21:05:35Z","updated_at":"2016-09-27T21:05:35Z","author_association":"MEMBER","body":"Another things that play here is that currently the promotion of a replica to primary also removes the old aid from the in-sync replicas list, causing it to only contain other replicas. If those replicas fail during the initialization of the newly promoted replica, we trigger the assertion we have [here](https://github.com/elastic/elasticsearch/blob/1e6a882ab9174e6c00954264f859086a16d1f8b3/core/src/main/java/org/elasticsearch/cluster/routing/allocation/IndexMetaDataUpdater.java#L199) , causing the follwing failure:\n\n```\n  > Throwable #1: java.lang.AssertionError: in-sync set became empty but active primary wasn't failed: [WU7AocjrSB-sG0IOflGj8w]\n   >    at __randomizedtesting.SeedInfo.seed([B37B65076A2E7CB1:CBFC6CD43515AAF8]:0)\n   >    at org.elasticsearch.cluster.routing.allocation.IndexMetaDataUpdater.updateInSyncAllocations(IndexMetaDataUpdater.java:199)\n   >    at org.elasticsearch.cluster.routing.allocation.IndexMetaDataUpdater.applyChanges(IndexMetaDataUpdater.java:122)\n```\n\nSee https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+5.x+dockeralpine-periodic/58\n","performed_via_github_app":null}]