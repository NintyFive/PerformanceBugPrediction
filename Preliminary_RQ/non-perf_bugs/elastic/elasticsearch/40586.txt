{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/40586","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40586/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40586/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40586/events","html_url":"https://github.com/elastic/elasticsearch/issues/40586","id":426473264,"node_id":"MDU6SXNzdWU0MjY0NzMyNjQ=","number":40586,"title":"[TEST]Â testTracerLog failing","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"labels":[{"id":146854632,"node_id":"MDU6TGFiZWwxNDY4NTQ2MzI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Network","name":":Distributed/Network","color":"0e8a16","default":false,"description":"Http and internode communication implementations"},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":{"login":"andrershov","id":600624,"node_id":"MDQ6VXNlcjYwMDYyNA==","avatar_url":"https://avatars1.githubusercontent.com/u/600624?v=4","gravatar_id":"","url":"https://api.github.com/users/andrershov","html_url":"https://github.com/andrershov","followers_url":"https://api.github.com/users/andrershov/followers","following_url":"https://api.github.com/users/andrershov/following{/other_user}","gists_url":"https://api.github.com/users/andrershov/gists{/gist_id}","starred_url":"https://api.github.com/users/andrershov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrershov/subscriptions","organizations_url":"https://api.github.com/users/andrershov/orgs","repos_url":"https://api.github.com/users/andrershov/repos","events_url":"https://api.github.com/users/andrershov/events{/privacy}","received_events_url":"https://api.github.com/users/andrershov/received_events","type":"User","site_admin":false},"assignees":[{"login":"andrershov","id":600624,"node_id":"MDQ6VXNlcjYwMDYyNA==","avatar_url":"https://avatars1.githubusercontent.com/u/600624?v=4","gravatar_id":"","url":"https://api.github.com/users/andrershov","html_url":"https://github.com/andrershov","followers_url":"https://api.github.com/users/andrershov/followers","following_url":"https://api.github.com/users/andrershov/following{/other_user}","gists_url":"https://api.github.com/users/andrershov/gists{/gist_id}","starred_url":"https://api.github.com/users/andrershov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrershov/subscriptions","organizations_url":"https://api.github.com/users/andrershov/orgs","repos_url":"https://api.github.com/users/andrershov/repos","events_url":"https://api.github.com/users/andrershov/events{/privacy}","received_events_url":"https://api.github.com/users/andrershov/received_events","type":"User","site_admin":false},{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false}],"milestone":null,"comments":8,"created_at":"2019-03-28T12:47:36Z","updated_at":"2019-05-07T12:44:38Z","closed_at":"2019-05-07T12:44:38Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I've seen failures for both `org.elasticsearch.xpack.security.transport.nio.SimpleSecurityNioTransportTests` and `org.elasticsearch.transport.nio.SimpleMockNioTransportTests`, see e.g.\r\nhttps://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+master+artifactory/63/console\r\nand \r\nhttps://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+master+intake/2750/console\r\n\r\nOutput:\r\n\r\n```\r\n\r\n1> [2019-03-27T06:17:03,889][TRACE][o.e.t.T.tracer           ] [TS_A] [4][internal:testError] sent to [{TS_B}{OA0DAXBZRXWAablhhFBeqA}{5obbkIyrSaCge6HKcNOD8g}{127.0.0.1}{127.0.0.1:36985}] (timeout: [null])\r\n  1> 2019-03-27 06:17:03,890 elasticsearch[TS_B][transport_worker][T#5] ERROR An exception occurred processing Appender mock java.util.ConcurrentModificationException\r\n  1> \tat java.util.ArrayList$Itr.checkForComodification(ArrayList.java:909)\r\n  1> \tat java.util.ArrayList$Itr.next(ArrayList.java:859)\r\n  1> \tat org.elasticsearch.test.MockLogAppender.append(MockLogAppender.java:54)\r\n  1> \tat org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:156)\r\n  1> \tat org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:129)\r\n  1> \tat org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:120)\r\n  1> \tat org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)\r\n  1> \tat org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:464)\r\n  1> \tat org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:448)\r\n  1> \tat org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:431)\r\n  1> \tat org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:406)\r\n  1> \tat org.apache.logging.log4j.core.config.DefaultReliabilityStrategy.log(DefaultReliabilityStrategy.java:49)\r\n  1> \tat org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)\r\n  1> \tat org.apache.logging.log4j.spi.AbstractLogger.tryLogMessage(AbstractLogger.java:2170)\r\n  1> \tat org.apache.logging.log4j.spi.AbstractLogger.logMessageTrackRecursion(AbstractLogger.java:2125)\r\n  1> \tat org.apache.logging.log4j.spi.AbstractLogger.logMessageSafely(AbstractLogger.java:2108)\r\n  1> \tat org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:2025)\r\n  1> \tat org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1898)\r\n  1> \tat org.apache.logging.log4j.spi.AbstractLogger.trace(AbstractLogger.java:2432)\r\n  1> \tat org.elasticsearch.transport.TransportService.onResponseSent(TransportService.java:908)\r\n  1> \tat org.elasticsearch.transport.OutboundHandler.lambda$sendResponse$2(OutboundHandler.java:106)\r\n  1> \tat org.elasticsearch.action.ActionListener.lambda$wrap$0(ActionListener.java:84)\r\n  1> \tat org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:62)\r\n  1> \tat org.elasticsearch.transport.OutboundHandler$SendContext.lambda$innerOnResponse$0(OutboundHandler.java:216)\r\n  1> \tat org.elasticsearch.core.internal.io.IOUtils.close(IOUtils.java:103)\r\n  1> \tat org.elasticsearch.core.internal.io.IOUtils.close(IOUtils.java:85)\r\n  1> \tat org.elasticsearch.common.lease.Releasables.close(Releasables.java:36)\r\n  1> \tat org.elasticsearch.common.lease.Releasables.close(Releasables.java:46)\r\n  1> \tat org.elasticsearch.common.lease.Releasables.close(Releasables.java:51)\r\n  1> \tat org.elasticsearch.transport.OutboundHandler$SendContext.closeAndCallback(OutboundHandler.java:230)\r\n  1> \tat org.elasticsearch.transport.OutboundHandler$SendContext.innerOnResponse(OutboundHandler.java:216)\r\n  1> \tat org.elasticsearch.transport.OutboundHandler$SendContext.innerOnResponse(OutboundHandler.java:178)\r\n  1> \tat org.elasticsearch.action.NotifyOnceListener.onResponse(NotifyOnceListener.java:40)\r\n  1> \tat org.elasticsearch.action.ActionListener.lambda$toBiConsumer$3(ActionListener.java:112)\r\n  1> \tat org.elasticsearch.nio.NioSelector.lambda$executeListener$1(NioSelector.java:360)\r\n  1> \tat org.elasticsearch.nio.EventHandler.handleTask(EventHandler.java:158)\r\n  1> \tat org.elasticsearch.nio.NioSelector.handleTask(NioSelector.java:274)\r\n  1> \tat org.elasticsearch.nio.NioSelector.executeListener(NioSelector.java:360)\r\n  1> \tat org.elasticsearch.nio.SocketChannelContext.currentFlushOperationComplete(SocketChannelContext.java:162)\r\n  1> \tat org.elasticsearch.xpack.security.transport.nio.SSLChannelContext.flushChannel(SSLChannelContext.java:91)\r\n  1> \tat org.elasticsearch.nio.EventHandler.handleWrite(EventHandler.java:139)\r\n  1> \tat org.elasticsearch.nio.NioSelector.handleWrite(NioSelector.java:389)\r\n  1> \tat org.elasticsearch.nio.NioSelector.writeToChannel(NioSelector.java:345)\r\n  1> \tat org.elasticsearch.nio.SocketChannelContext.sendMessage(SocketChannelContext.java:143)\r\n  1> \tat org.elasticsearch.transport.nio.NioTcpChannel.sendMessage(NioTcpChannel.java:42)\r\n  1> \tat org.elasticsearch.transport.OutboundHandler.internalSend(OutboundHandler.java:134)\r\n  1> \tat org.elasticsearch.transport.OutboundHandler.sendMessage(OutboundHandler.java:127)\r\n  1> \tat org.elasticsearch.transport.OutboundHandler.sendResponse(OutboundHandler.java:107)\r\n  1> \tat org.elasticsearch.transport.TcpTransportChannel.sendResponse(TcpTransportChannel.java:64)\r\n  1> \tat org.elasticsearch.transport.TaskTransportChannel.sendResponse(TaskTransportChannel.java:54)\r\n  1> \tat org.elasticsearch.transport.AbstractSimpleTransportTestCase.lambda$testTracerLog$15(AbstractSimpleTransportTestCase.java:997)\r\n  1> \tat org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:63)\r\n  1> \tat org.elasticsearch.transport.InboundHandler$RequestHandler.doRun(InboundHandler.java:267)\r\n  1> \tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n  1> \tat org.elasticsearch.common.util.concurrent.EsExecutors$DirectExecutorService.execute(EsExecutors.java:192)\r\n  1> \tat org.elasticsearch.transport.InboundHandler.handleRequest(InboundHandler.java:188)\r\n  1> \tat org.elasticsearch.transport.InboundHandler.messageReceived(InboundHandler.java:121)\r\n  1> \tat org.elasticsearch.transport.InboundHandler.inboundMessage(InboundHandler.java:105)\r\n  1> \tat org.elasticsearch.transport.TcpTransport.inboundMessage(TcpTransport.java:644)\r\n  1> \tat org.elasticsearch.transport.TcpTransport.consumeNetworkReads(TcpTransport.java:668)\r\n  1> \tat org.elasticsearch.transport.nio.TcpReadWriteHandler.consumeReads(TcpReadWriteHandler.java:42)\r\n  1> \tat org.elasticsearch.nio.SocketChannelContext.handleReadBytes(SocketChannelContext.java:213)\r\n  1> \tat org.elasticsearch.xpack.security.transport.nio.SSLChannelContext.read(SSLChannelContext.java:145)\r\n  1> \tat org.elasticsearch.nio.EventHandler.handleRead(EventHandler.java:119)\r\n  1> \tat org.elasticsearch.nio.NioSelector.handleRead(NioSelector.java:397)\r\n  1> \tat org.elasticsearch.nio.NioSelector.processKey(NioSelector.java:246)\r\n  1> \tat org.elasticsearch.nio.NioSelector.singleLoop(NioSelector.java:172)\r\n  1> \tat org.elasticsearch.nio.NioSelector.runLoop(NioSelector.java:129)\r\n  1> \tat java.lang.Thread.run(Thread.java:748)\r\n  1> [2019-03-27T06:17:03,888][TRACE][o.e.t.T.tracer           ] [TS_B] [3][internal:test] sent response\r\n  1> [2019-03-27T06:17:03,895][TRACE][o.e.t.T.tracer           ] [TS_B] [4][internal:testError] received request\r\n  1> [2019-03-27T06:17:03,896][TRACE][o.e.t.T.tracer           ] [TS_A] [4][internal:testError] received response from [{TS_B}{OA0DAXBZRXWAablhhFBeqA}{5obbkIyrSaCge6HKcNOD8g}{127.0.0.1}{127.0.0.1:36985}]\r\n  1> [2019-03-27T06:17:03,897][TRACE][o.e.t.T.tracer           ] [TS_B] [4][internal:testError] sent error response\r\n  1> java.lang.RuntimeException: \r\n  1> \tat org.elasticsearch.transport.AbstractSimpleTransportTestCase.lambda$testTracerLog$16(AbstractSimpleTransportTestCase.java:1002) ~[framework-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n  1> \tat org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:63) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n  1> \tat org.elasticsearch.transport.InboundHandler$RequestHandler.doRun(InboundHandler.java:267) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n  1> \tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n  1> \tat org.elasticsearch.common.util.concurrent.EsExecutors$DirectExecutorService.execute(EsExecutors.java:192) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n  1> \tat org.elasticsearch.transport.InboundHandler.handleRequest(InboundHandler.java:188) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n  1> \tat org.elasticsearch.transport.InboundHandler.messageReceived(InboundHandler.java:121) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n  1> \tat org.elasticsearch.transport.InboundHandler.inboundMessage(InboundHandler.java:105) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n  1> \tat org.elasticsearch.transport.TcpTransport.inboundMessage(TcpTransport.java:644) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n  1> \tat org.elasticsearch.transport.TcpTransport.consumeNetworkReads(TcpTransport.java:668) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n  1> \tat org.elasticsearch.transport.nio.TcpReadWriteHandler.consumeReads(TcpReadWriteHandler.java:42) ~[transport-nio-client-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n  1> \tat org.elasticsearch.nio.SocketChannelContext.handleReadBytes(SocketChannelContext.java:213) ~[elasticsearch-nio-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n  1> \tat org.elasticsearch.xpack.security.transport.nio.SSLChannelContext.read(SSLChannelContext.java:145) ~[main/:?]\r\n  1> \tat org.elasticsearch.nio.EventHandler.handleRead(EventHandler.java:119) ~[elasticsearch-nio-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n  1> \tat org.elasticsearch.nio.NioSelector.handleRead(NioSelector.java:397) ~[elasticsearch-nio-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n  1> \tat org.elasticsearch.nio.NioSelector.processKey(NioSelector.java:246) ~[elasticsearch-nio-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n  1> \tat org.elasticsearch.nio.NioSelector.singleLoop(NioSelector.java:172) ~[elasticsearch-nio-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n  1> \tat org.elasticsearch.nio.NioSelector.runLoop(NioSelector.java:129) ~[elasticsearch-nio-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n  1> \tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]\r\n\r\njava.lang.AssertionError: \r\nExpected: an empty collection\r\n     but: <[An exception occurred processing Appender mock]>\r\n\tat __randomizedtesting.SeedInfo.seed([E1E5A1FAE4A24475:E2665C44E5AAEAA0]:0)\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\r\n\tat org.junit.Assert.assertThat(Assert.java:956)\r\n\tat org.junit.Assert.assertThat(Assert.java:923)\r\n\tat org.elasticsearch.test.ESTestCase.checkStaticState(ESTestCase.java:484)\r\n\tat org.elasticsearch.test.ESTestCase.after(ESTestCase.java:360)\r\n\tat sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1750)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:996)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:817)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:468)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:947)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:832)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:883)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:894)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n``` ","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}