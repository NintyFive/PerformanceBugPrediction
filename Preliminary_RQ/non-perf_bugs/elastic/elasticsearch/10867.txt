{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/10867","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10867/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10867/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10867/events","html_url":"https://github.com/elastic/elasticsearch/issues/10867","id":71767418,"node_id":"MDU6SXNzdWU3MTc2NzQxOA==","number":10867,"title":"Eliminating results with hate words","user":{"login":"lazywizar","id":493730,"node_id":"MDQ6VXNlcjQ5MzczMA==","avatar_url":"https://avatars1.githubusercontent.com/u/493730?v=4","gravatar_id":"","url":"https://api.github.com/users/lazywizar","html_url":"https://github.com/lazywizar","followers_url":"https://api.github.com/users/lazywizar/followers","following_url":"https://api.github.com/users/lazywizar/following{/other_user}","gists_url":"https://api.github.com/users/lazywizar/gists{/gist_id}","starred_url":"https://api.github.com/users/lazywizar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lazywizar/subscriptions","organizations_url":"https://api.github.com/users/lazywizar/orgs","repos_url":"https://api.github.com/users/lazywizar/repos","events_url":"https://api.github.com/users/lazywizar/events{/privacy}","received_events_url":"https://api.github.com/users/lazywizar/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-04-29T03:25:24Z","updated_at":"2015-04-29T11:35:58Z","closed_at":"2015-04-29T11:35:57Z","author_association":"NONE","active_lock_reason":null,"body":"It would be great to have feature to efficiently filter out docs with hate words in my elasticsearch result. Currently we are having bool filter in every search query for the list of all words.\n\nPreprocessing and NOT indexing the docs with bad words in one solution and another is using a percolator before every query. Both the solutions can not enforce the rule if the index is made by some client out of our control.\n\nIt would be great to have a ES level solution for the same.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}