[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/596759741","html_url":"https://github.com/elastic/elasticsearch/issues/53308#issuecomment-596759741","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53308","id":596759741,"node_id":"MDEyOklzc3VlQ29tbWVudDU5Njc1OTc0MQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-03-09T20:21:24Z","updated_at":"2020-03-09T20:21:24Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-features (:Core/Features/Monitoring)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/597213823","html_url":"https://github.com/elastic/elasticsearch/issues/53308#issuecomment-597213823","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53308","id":597213823,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NzIxMzgyMw==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2020-03-10T17:28:44Z","updated_at":"2020-03-10T17:28:44Z","author_association":"CONTRIBUTOR","body":"@chrisronline \r\n\r\nWe discussed this in person today.  We currently have `GET _nodes/stats?level=shards` however, it has a lot more information then you are requesting and am unsure of the cost of repeated calls for monitoring or if the format is amendable to what you need. \r\n\r\nThere was also a question raised if metricbeat could do the combining of data from two different sources. e.g. could the beat call 2 end points and combine them as needed before sending up for indexing ?\r\n\r\n> This change will alleviate some issues on the Stack Monitoring UI in Kibana with the queries we need to execute to show the shard data alongside the node or index data.\r\n\r\nCan you expand on the motivations here abit ?  \r\n\r\ncc: @ycombinator \r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/597224379","html_url":"https://github.com/elastic/elasticsearch/issues/53308#issuecomment-597224379","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53308","id":597224379,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NzIyNDM3OQ==","user":{"login":"chrisronline","id":56682,"node_id":"MDQ6VXNlcjU2Njgy","avatar_url":"https://avatars1.githubusercontent.com/u/56682?v=4","gravatar_id":"","url":"https://api.github.com/users/chrisronline","html_url":"https://github.com/chrisronline","followers_url":"https://api.github.com/users/chrisronline/followers","following_url":"https://api.github.com/users/chrisronline/following{/other_user}","gists_url":"https://api.github.com/users/chrisronline/gists{/gist_id}","starred_url":"https://api.github.com/users/chrisronline/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chrisronline/subscriptions","organizations_url":"https://api.github.com/users/chrisronline/orgs","repos_url":"https://api.github.com/users/chrisronline/repos","events_url":"https://api.github.com/users/chrisronline/events{/privacy}","received_events_url":"https://api.github.com/users/chrisronline/received_events","type":"User","site_admin":false},"created_at":"2020-03-10T17:49:06Z","updated_at":"2020-03-10T17:49:06Z","author_association":"CONTRIBUTOR","body":"@jakelandis I wasn't aware of that api, but yes that will work for the `_nodes/*` endpoints, but what about for the `_stats` endpoint?\r\n\r\nTo better explain the end goal here, we want to change the data inside of `.monitoring-es-*` monitoring indices. We want to deprecate `type: \"shards\"` from this index, and put that same data into `type: 'node_stats'` and `type: 'index_stats`. \r\n\r\nWe currently have two GA collection paths for monitoring data, internal and Metricbeat. We are deprecating internal, but it's likely we still support it throughout 8.x so we need to think of the changes above working for both collection paths.\r\n\r\nI don't know the specifics of how ES does this work for internal collection, but Metricbeat calls two different api endpoints to collect ES monitoring data: `_nodes/_local/stats` and `_stats` (for node and index data respectively). If we want to achieve the above goal, we'd need to go down one of two paths:\r\n\r\n1. Ensure the ES apis return all necessary shard data\r\n2. Make multiple calls from Metricbeat to collect for node/index data and shard data.\r\n\r\nThe issue with the latter is that the two calls would be done at slightly different times, and the resulting data may potentially be out of sync. The other issue is the code that does the merge needs to be identical between ES and Metricbeat which leads to potential issues down the road if one changes and not the other.\r\n\r\nI'm not against either approach, but the first one seems like the better long-term solution.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/597403398","html_url":"https://github.com/elastic/elasticsearch/issues/53308#issuecomment-597403398","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53308","id":597403398,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NzQwMzM5OA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2020-03-11T01:52:39Z","updated_at":"2020-03-11T01:52:39Z","author_association":"MEMBER","body":">To better explain the end goal here, we want to change the data inside of `.monitoring-es-*` monitoring indices. We want to deprecate `type: \"shards\"` from this index, and put that same data into `type: 'node_stats'` and `type: 'index_stats`. \r\n\r\nFor me, this is where the disconnect is. Shards are...shards. Nodes are...nodes. They are distinct first-class citizens in the system, whose characteristics we want to monitor. They deserve a separate representation in monitoring.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/597724885","html_url":"https://github.com/elastic/elasticsearch/issues/53308#issuecomment-597724885","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53308","id":597724885,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NzcyNDg4NQ==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2020-03-11T16:12:04Z","updated_at":"2020-03-11T16:12:04Z","author_association":"CONTRIBUTOR","body":"I believe the motivation for the which data is persisted via monitoring is almost solely driven by the requirements of the Kibana UI monitoring application. i.e. Our data persistence requirements are that which best serve the Kibana monitoring app. In that context, I am not sure if I agree that shards deserve separate representation in monitoring, rather they deserve representation that best suites the Kibana app's requirements.\r\n\r\nWith respect to the node stats api, we currently expose  `attributes, indices, os, process, jvm, thread_pool, fs, transport, http, breakers, script, discovery, ingest, adaptive_selection` as top level stats, and additional indices stats (including shards) with additional parameters. Arguably not all of these concepts are node specific, and also arguably which shards are on a node is indeed a node stat. \r\n\r\nI believe that there are 3 places where you can source the shard information \r\n\r\na) _cat/shards - Not an option since we want don't API's calling _cat APIs since they are intended for human consumption\r\nb) cluster state - How it is currently read -  Reading cluster state directly from a beat seems pretty low level, and not sure we have the x-content serialization guarantees there as we do with the stats apis (also requires a separate call) \r\nc) `_nodes/stats?level=shard` and `_stats?level=shards`  - How it could be read, but provide alot of information per index per shard and unsure how expensive to call this every 10s.\r\n\r\nI would like to suggest for us (me) to review how expensive `?level=shards` (+ filter_path) is to call from monitoring, and if need be introduce something like `?level=shards_basic` that only provides the information needed for monitoring. \r\n\r\nthoughts ?\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/597810665","html_url":"https://github.com/elastic/elasticsearch/issues/53308#issuecomment-597810665","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53308","id":597810665,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NzgxMDY2NQ==","user":{"login":"chrisronline","id":56682,"node_id":"MDQ6VXNlcjU2Njgy","avatar_url":"https://avatars1.githubusercontent.com/u/56682?v=4","gravatar_id":"","url":"https://api.github.com/users/chrisronline","html_url":"https://github.com/chrisronline","followers_url":"https://api.github.com/users/chrisronline/followers","following_url":"https://api.github.com/users/chrisronline/following{/other_user}","gists_url":"https://api.github.com/users/chrisronline/gists{/gist_id}","starred_url":"https://api.github.com/users/chrisronline/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chrisronline/subscriptions","organizations_url":"https://api.github.com/users/chrisronline/orgs","repos_url":"https://api.github.com/users/chrisronline/repos","events_url":"https://api.github.com/users/chrisronline/events{/privacy}","received_events_url":"https://api.github.com/users/chrisronline/received_events","type":"User","site_admin":false},"created_at":"2020-03-11T18:58:14Z","updated_at":"2020-03-13T20:12:41Z","author_association":"CONTRIBUTOR","body":"> They deserve a separate representation in monitoring.\r\n\r\nI don't disagree with you, but that's not how it is currently setup. Nodes and indices are first-class citizens in the UI, but shards are just accompanying data points. We don't have any sort of \"shards\" only page in the UI (currently at least).\r\n\r\n> _nodes/stats?level=shard and _stats?level=shards - How it could be read, but provide alot of information per index per shard and unsure how expensive to call this every 10s.\r\n\r\nI think this will work fine. It's probably okay if Metricbeat needs to do a little manipulation of the data before indexing it into `.monitoring-es-*` documents. The downside is ES will need to this same manipulation internally as well.\r\n\r\n> I would like to suggest for us (me) to review how expensive ?level=shards (+ filter_path) is to call from monitoring, and if need be introduce something like ?level=shards_basic that only provides the information needed for monitoring.\r\n\r\nThat sounds fine. Ensuring these two endpoints contain this shard data will allow us to remove the `type: 'shards'` monitoring documents, which will benefits the monitoring UI.\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/603368619","html_url":"https://github.com/elastic/elasticsearch/issues/53308#issuecomment-603368619","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53308","id":603368619,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMzM2ODYxOQ==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2020-03-24T16:57:54Z","updated_at":"2020-03-24T16:57:54Z","author_association":"CONTRIBUTOR","body":"related: #53311 \r\nI will still take the todo to examine how expensive these level parameters are to call from monitoring (by default every 10s). However, I think this also warrants a further discussion about APIs that better match what you are looking for and/or dedicated monitoring APIs. I will start another conversation thread on that subject.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/610486399","html_url":"https://github.com/elastic/elasticsearch/issues/53308#issuecomment-610486399","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53308","id":610486399,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDQ4NjM5OQ==","user":{"login":"chrisronline","id":56682,"node_id":"MDQ6VXNlcjU2Njgy","avatar_url":"https://avatars1.githubusercontent.com/u/56682?v=4","gravatar_id":"","url":"https://api.github.com/users/chrisronline","html_url":"https://github.com/chrisronline","followers_url":"https://api.github.com/users/chrisronline/followers","following_url":"https://api.github.com/users/chrisronline/following{/other_user}","gists_url":"https://api.github.com/users/chrisronline/gists{/gist_id}","starred_url":"https://api.github.com/users/chrisronline/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chrisronline/subscriptions","organizations_url":"https://api.github.com/users/chrisronline/orgs","repos_url":"https://api.github.com/users/chrisronline/repos","events_url":"https://api.github.com/users/chrisronline/events{/privacy}","received_events_url":"https://api.github.com/users/chrisronline/received_events","type":"User","site_admin":false},"created_at":"2020-04-07T16:24:19Z","updated_at":"2020-04-07T16:24:19Z","author_association":"CONTRIBUTOR","body":"Per an offline chat with @jakelandis, we are going to go in a different direction and will not need this work.","performed_via_github_app":null}]