[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/283856883","html_url":"https://github.com/elastic/elasticsearch/issues/23473#issuecomment-283856883","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23473","id":283856883,"node_id":"MDEyOklzc3VlQ29tbWVudDI4Mzg1Njg4Mw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2017-03-03T03:39:50Z","updated_at":"2017-03-03T03:39:50Z","author_association":"MEMBER","body":"I pushed commits to mute these tests on JDK 9:\r\n\r\nmaster: 8e09eca9a60b425418bff62ea99eb2659c00d1bf\r\n5.x: f437391e72bc35c15352265d86f3aa8c32bc1333\r\n5.3: ec9c7985c4974e7d69d359a0537fa6cc9343910f","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/283857570","html_url":"https://github.com/elastic/elasticsearch/issues/23473#issuecomment-283857570","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23473","id":283857570,"node_id":"MDEyOklzc3VlQ29tbWVudDI4Mzg1NzU3MA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2017-03-03T03:45:23Z","updated_at":"2017-03-03T03:45:23Z","author_association":"MEMBER","body":"JDK 9 will [enter rampdown phase 2 on 2017-03-16](http://mail.openjdk.java.net/pipermail/jdk9-dev/2016-October/005092.html) (March 16, 2017); after that point, only show-stopping bugs will be fixed so we should try to understand the situation here as soon as possible in case there's an issue within JDK 9.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/283922581","html_url":"https://github.com/elastic/elasticsearch/issues/23473#issuecomment-283922581","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23473","id":283922581,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MzkyMjU4MQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2017-03-03T10:41:51Z","updated_at":"2017-03-03T10:41:51Z","author_association":"MEMBER","body":"We understand what is going on: java made lambda factory less lenient (http://hg.openjdk.java.net/jdk9/jdk9/jdk/rev/4be3ef759ead). @jdconrad is working on a fix to add additional bridge methods to compensate when necessary.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/285788013","html_url":"https://github.com/elastic/elasticsearch/issues/23473#issuecomment-285788013","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23473","id":285788013,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTc4ODAxMw==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2017-03-10T21:21:59Z","updated_at":"2017-03-10T21:21:59Z","author_association":"CONTRIBUTOR","body":"Hi, I have to try out, but the problematic part seems to be here: https://github.com/elastic/elasticsearch/blob/master/modules/lang-painless/src/main/java/org/elasticsearch/painless/FunctionRef.java#L194-L196\r\n\r\nThis only \"fixes\" the issue for the return type, but not the parameter types. So it looks like we need to wrap/box also the parameter types. Also we have to take care of the void type!\r\n\r\nThere are two problems in the changes in Java 9 that may lead to this problem:\r\n\r\n- The boxing does no longer work if it is `Object.class`, so the same trick as applied to return type should be applied also to parameters\r\n- There is a special check for `void.class` in the new Java 9 code. I think if we have a return type of void we must manually adapt it to fix the issue.\r\n\r\nI just have to get Gradle working with build 159...","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/285817678","html_url":"https://github.com/elastic/elasticsearch/issues/23473#issuecomment-285817678","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23473","id":285817678,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTgxNzY3OA==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2017-03-10T23:57:42Z","updated_at":"2017-03-11T00:17:32Z","author_association":"CONTRIBUTOR","body":"@uschindler So, I may be on a different page here, but I believe when I tried the solution you're suggesting here it would no longer allow primitives to be widened, though the LambdaMetaFactory says this:\r\n\r\n```\r\nReference ->\tPrimitive\t\r\nfor parameter types: Q is a primitive wrapper and Primitive(Q) can be widened to S \r\nfor return types: If Q is a primitive wrapper, check that Primitive(Q) can be widened to S\r\n```\r\n\r\nI think there is a bug here on there end for that.  Maybe you could confirm this?\r\n\r\nI also think we may need Object to be convertible to primitive in the same way it was prior to the changes, though.\r\n\r\nFor example, consider this:\r\n```\r\n        assertEquals(2, exec(\"List l = new ArrayList(); l.add((short)1); l.add(1); \"\r\n                           + \"return l.stream().mapToLong(long x -> x).sum();\"));\r\n```\r\nif we convert the Object -> Long via the LambdaMetaFactory, I think that breaks the def type for the List values since they can't be cast from Short -> Long and Integer -> Long.  I *think* what we want is for LambdaMetaFactory to use asType for conversions exactly as MethodHandles do.  That would also prevent illegal narrowing.\r\n\r\nAlso, thank you for taking a look!  It's much appreciated.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/285870537","html_url":"https://github.com/elastic/elasticsearch/issues/23473#issuecomment-285870537","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23473","id":285870537,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTg3MDUzNw==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2017-03-11T14:38:14Z","updated_at":"2017-03-11T14:38:14Z","author_association":"CONTRIBUTOR","body":"Hi,\r\nin my testings with b159 yesterday, I can confirm, its not working as documented. So we should really open a bug! It would be horrible if this stays like this, as the whole Painless Lambdas stop working, unless we reimplement the whole stuff.\r\n\r\n> I think there is a bug here on there end for that. Maybe you could confirm this?\r\n\r\nI think so. It also refuses to work to box/unbox under certain conditions. It was lkate yesterday, but we should write a bug report and add a test similar to the tests in the OpenJDK commit.\r\n\r\nI am a bit afraid: The issue about this is \"private\", so I have the feeling there was a security issue reported to Oracle. If this is the case, we may expect that they backport it to Java 8 (we should try the preview release!!!). And then we have a desaster!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/285870843","html_url":"https://github.com/elastic/elasticsearch/issues/23473#issuecomment-285870843","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23473","id":285870843,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTg3MDg0Mw==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2017-03-11T14:43:04Z","updated_at":"2017-03-11T14:45:59Z","author_association":"CONTRIBUTOR","body":"In addition the Oracle patch is buggy, see: http://hg.openjdk.java.net/jdk9/jdk9/jdk/rev/4be3ef759ead#l1.54\r\n\r\nThis line also prevents boxing/unboxing, and that is what I also discovered with my patch. It fails because int.class is not assignable to Integer.class and vice versa. So we have no chance to fix the whole thing at all. I discovered that in my tests yesterday.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/285871405","html_url":"https://github.com/elastic/elasticsearch/issues/23473#issuecomment-285871405","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23473","id":285871405,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTg3MTQwNQ==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2017-03-11T14:52:58Z","updated_at":"2017-03-11T14:52:58Z","author_association":"CONTRIBUTOR","body":"At least I can confirm: The preview build of Java 8 update 152 is not affected by this. But it is already one month old, so maybe it does not yet contain it!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/285889204","html_url":"https://github.com/elastic/elasticsearch/issues/23473#issuecomment-285889204","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23473","id":285889204,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTg4OTIwNA==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2017-03-11T18:16:01Z","updated_at":"2017-03-11T18:16:46Z","author_association":"CONTRIBUTOR","body":"> I think what we want is for LambdaMetaFactory to use asType for conversions exactly as MethodHandles do. That would also prevent illegal narrowing.\r\n\r\nHow about if we let LambdaMetaFactory check and do whatever it wants! Let's just adapt the stuff using asType() on our own. So maybe we just pass the exact signature to the metafactory so it does not need to adapt at all. We know to which we want it to adapt (your proposal) and we just do it on our own? For the dynamic case that's easy (DefBootstrap), for the static call to the MetaFactory we have to adapt types in our generated bytecode.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/285894654","html_url":"https://github.com/elastic/elasticsearch/issues/23473#issuecomment-285894654","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23473","id":285894654,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTg5NDY1NA==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2017-03-11T19:40:14Z","updated_at":"2017-03-11T19:47:54Z","author_association":"CONTRIBUTOR","body":"@uschindler I would be very happy with your proposed solution here because it seems like we avoid future problems in LambdaMetaFactory if we do the adaptation on our own.\r\n\r\nThe back porting issue is definitely scary!  Hopefully that doesn't happen.\r\n\r\nThanks for pointing out that issue in the patch, that's what I was going to look at next.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/298075121","html_url":"https://github.com/elastic/elasticsearch/issues/23473#issuecomment-298075121","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23473","id":298075121,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODA3NTEyMQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2017-04-28T18:38:33Z","updated_at":"2017-04-28T18:38:33Z","author_association":"CONTRIBUTOR","body":"I believe this is fixed.","performed_via_github_app":null}]