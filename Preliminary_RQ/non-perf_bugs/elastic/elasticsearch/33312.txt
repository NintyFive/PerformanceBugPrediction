{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/33312","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33312/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33312/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33312/events","html_url":"https://github.com/elastic/elasticsearch/issues/33312","id":355984968,"node_id":"MDU6SXNzdWUzNTU5ODQ5Njg=","number":33312,"title":"SQL: SYS TABLES adjustments for ODBC: enumeration of catalogs and table types","user":{"login":"bpintea","id":1562801,"node_id":"MDQ6VXNlcjE1NjI4MDE=","avatar_url":"https://avatars3.githubusercontent.com/u/1562801?v=4","gravatar_id":"","url":"https://api.github.com/users/bpintea","html_url":"https://github.com/bpintea","followers_url":"https://api.github.com/users/bpintea/followers","following_url":"https://api.github.com/users/bpintea/following{/other_user}","gists_url":"https://api.github.com/users/bpintea/gists{/gist_id}","starred_url":"https://api.github.com/users/bpintea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bpintea/subscriptions","organizations_url":"https://api.github.com/users/bpintea/orgs","repos_url":"https://api.github.com/users/bpintea/repos","events_url":"https://api.github.com/users/bpintea/events{/privacy}","received_events_url":"https://api.github.com/users/bpintea/received_events","type":"User","site_admin":false},"labels":[{"id":912794284,"node_id":"MDU6TGFiZWw5MTI3OTQyODQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Query%20Languages/SQL","name":":Query Languages/SQL","color":"0e8a16","default":false,"description":"SQL querying"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":962378555,"node_id":"MDU6TGFiZWw5NjIzNzg1NTU=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v6.5.0","name":"v6.5.0","color":"Dddddd","default":false,"description":""},{"id":1223177445,"node_id":"MDU6TGFiZWwxMjIzMTc3NDQ1","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v7.0.0-beta1","name":"v7.0.0-beta1","color":"dddddd","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false},"assignees":[{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2018-08-31T13:39:57Z","updated_at":"2019-02-07T08:22:08Z","closed_at":"2018-09-05T07:44:19Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Elasticsearch version**: master @ 014b277\r\n\r\nODBC's API allows enumerating a data source's available catalogs, schemas, and table types. This is done through [SQLTables](https://docs.microsoft.com/en-us/sql/odbc/reference/syntax/sqltables-function) function. The function is invoked with different arguments configuration in order to get back the desired set: catalogs only, schemas only or table types only.[*] The ODBC driver translates these parameters into a `SYS TABLES` query and provides the result back to the calling application as is.\r\n\r\nIn this driver working configuration, in order to comply with ODBC's requirements, the result to `SYS TABLES` would need to be altered as follows:\r\n\r\n* catalogs enumeration: `SYS TABLES CATALOG LIKE '%'` would need to return _a list of valid catalogs for the data source. (All columns except the TABLE_CAT column contain NULLs.)_\r\nCurrently, this query is treated like a normal query: all ”tables” in all \"catalogs\" (=1 currently) are returned, with each column being populated with respective data:\r\n```\r\nsql> SYS TABLES CATALOG LIKE '%';\r\n   TABLE_CAT    |  TABLE_SCHEM  |     TABLE_NAME     |  TABLE_TYPE   |    REMARKS    |   TYPE_CAT    |  TYPE_SCHEM   |   TYPE_NAME   |SELF_REFERENCING_COL_NAME|REF_GENERATION\r\n----------------+---------------+--------------------+---------------+---------------+---------------+---------------+---------------+-------------------------+---------------\r\ndistribution_run|               |test_alias          |ALIAS          |               |null           |null           |null           |null                     |null\r\ndistribution_run|               |test_alias_emp      |ALIAS          |               |null           |null           |null           |null                     |null\r\ndistribution_run|               |test_emp            |BASE TABLE     |               |null           |null           |null           |null                     |null\r\ndistribution_run|               |test_emp_copy       |BASE TABLE     |               |null           |null           |null           |null                     |null\r\n```\r\nExpected (one row per existing catalog):\r\n```\r\nsql> SYS TABLES CATALOG LIKE '%';\r\n   TABLE_CAT    |  TABLE_SCHEM  |     TABLE_NAME     |  TABLE_TYPE   |    REMARKS    |   TYPE_CAT    |  TYPE_SCHEM   |   TYPE_NAME   |SELF_REFERENCING_COL_NAME|REF_GENERATION\r\n----------------+---------------+--------------------+---------------+---------------+---------------+---------------+---------------+-------------------------+---------------\r\ndistribution_run|null           |null                |null           |null           |null           |null           |null           |null                     |null\r\n```\r\n\r\n\r\n* table types enumeration: `SYS TABLES TYPE '%'` would need to return _a list of valid table types for the data source. (All columns except the TABLE_TYPE column contain NULLs.)_. Note that this would require a list of all table types **supported**, not just only of those present.\r\nCurrent: same as above.\r\nExpected (one row for each supported table **type**):\r\n```\r\nsql> SYS TABLES TYPE '%';\r\n   TABLE_CAT    |  TABLE_SCHEM  |     TABLE_NAME     |  TABLE_TYPE   |    REMARKS    |   TYPE_CAT    |  TYPE_SCHEM   |   TYPE_NAME   |SELF_REFERENCING_COL_NAME|REF_GENERATION\r\n----------------+---------------+--------------------+---------------+---------------+---------------+---------------+---------------+-------------------------+---------------\r\nnull            |null           |null                |ALIAS          |null           |null           |null           |null           |null                     |null\r\nnull            |null           |null                |BASE TABLE     |null           |null           |null           |null           |null                     |null\r\n```\r\n\r\n* ~schema enumeration~: no support for schema exists currently, but it would require a similar semantic: schema param would be `%`, the others would not be present.\r\n\r\nIn other respects the current implementation is in line with the standard (i.e. the filtering of rows by given columns as with any table/index).\r\n\r\n[*] The exact requirement is in [Comments](https://docs.microsoft.com/en-us/sql/odbc/reference/syntax/sqltables-function?view=sql-server-2017#comments), paragraph starting with `To support enumeration of catalogs, schemas, and table types,`.","closed_by":{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false},"performed_via_github_app":null}