{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/29818","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29818/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29818/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29818/events","html_url":"https://github.com/elastic/elasticsearch/issues/29818","id":317448233,"node_id":"MDU6SXNzdWUzMTc0NDgyMzM=","number":29818,"title":"Upgrading to 5.6 Review","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"labels":[{"id":144797810,"node_id":"MDU6TGFiZWwxNDQ3OTc4MTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Core","name":":Core/Infra/Core","color":"0e8a16","default":false,"description":"Core issues without another label"},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null},{"id":838238967,"node_id":"MDU6TGFiZWw4MzgyMzg5Njc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v5.6.9","name":"v5.6.9","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"assignees":[{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false}],"milestone":null,"comments":14,"created_at":"2017-10-17T06:44:51Z","updated_at":"2018-08-02T20:24:27Z","closed_at":"2018-08-02T20:24:23Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"*Original comment by @bleskes:*\n\nSince the feature has been originally implemented (LINK REDACTED , LINK REDACTED), things have changed slightly. I have recently spoken to @jaymode , @pickypg  and @spinscale  to document how things currently work. Here's a summary which we can use for future reference, plus some follow ups at the end of each section. \r\n\r\n@jaymode, @pickypg and @spinscale - please read carefully and correct if needed.\r\n\r\n\r\n### Security \r\n\r\n#### Native Realm (`.security` index)\r\n\r\n- ES 5.6 has introduced a new field, which prevents writing until the field has been added (see below when). Until this is done the native realm is read-only (on new nodes) as dynamic fields are disabled. \r\n- Once the cluster master moves to version 5.6, `xpack.security.support.NativeRealmMigrator` does the following: \r\n\t- the security code issues a PUT template to update the `.security` index template. It also updates the mapping of the existing index if exists.\r\n\t- some internal users are updated depending on ES version.\r\n- MetaDataUpgrader is used to upgrade the index template as well.\r\n- Users need to manually call the `_xpack/migration/upgrade` API to reindex and remove types\r\n\r\n\r\n#### .audit-* indices\r\n- The mapping never changed and thus there is no need to upgrade the template\r\n- We rely on non-6.x compatible indices to fall out of the retention policy and thus have no upgrade scheme for these.\r\n\r\n#### TODOs\r\n\r\n - [ ] Document that the native realm is read only until the master has been upgraded.\r\n - [ ] We need to choose who updates the `.security` index template. It should only be done in one place.\r\n - [ ] We need better testing to make sure that `.security` keeps on working after users have manually used the `_xpack/migration/upgrade` API. Those don't exist now.\r\n\t- [ ] Also take into account the upgrade of an index that was created on ES < 5.6, and upgraded to 5.6 first.\r\n - [ ] Test that a mixed cluster `.security` works in read-only mode\r\n - [ ] Test that we can write new user credentials after the cluster has been upgraded\r\n\r\n\r\n### Watcher\r\n\r\n#### Watch CRUD & Execution\r\n\r\n- Adding a watch tries to use the new `doc` type. If this fails, it tries again using the pre-5.6 types. This seems to result in ugly log messages - see todo.\r\n- Watch execution runs on the master only and thus has a clean transition between old and new.\r\n- The `.watch` and `.triggered-watches*` indices are manually upgraded via the `_xpack/migration/upgrade` API.\r\n\r\n\r\n#### Watch history\r\n\r\n- Template is automatically updated by the `TemplateUpgradeService` service.\r\n- Since the watch execution is on the master, we only use the new template once the master moves to a new version.\r\n\r\n#### TODOs\r\n\r\n - [ ] We currently have the follow logs being logged until the user manually upgrades the `.watch` index. We should find a way to avoid it:\r\n\r\n```\r\n[2017-10-06T06:42:14,598][DEBUG][o.e.a.b.TransportShardBulkAction] [.watches][0] failed to execute bulk item (index) BulkShardRequest [[.watches][0]] containing [index {[.watches][doc][wAuN5cXhTiyjyCm58tH6ag_xpack_license_expiration], source[n/a, actual length: [4.5kb], max length: 2kb]}] and a refresh\r\norg.elasticsearch.indices.TypeMissingException: type[doc] missing\r\n        at org.elasticsearch.index.mapper.MapperService.documentMapperWithAu\r\n```\r\n\r\n - [X] Delay watch execution on the master until the required template version is visible in the cluster state. (LINK REDACTED)\r\n\r\n\r\n### Monitoring\r\n\r\n#### Exporting\r\n\r\nLocal exporter:\r\n- The monitoring indices template is upgraded by the monitoring service, when the master moves to 5.6.\r\n- The exporter waits until it sees the new template in place (i.e., until the master is on 5.6)\r\n\r\nHttp Exporter:\r\n- Always tries to update the remote template when it sets up.\r\n\r\n\r\n#### Monitoring indices\r\n\r\n- ES 5.6 uses a new index name schemes - i.e., new indices will be created next to the old indices as soon as the first data is shipped.\r\n- Old indices are not upgraded, we let them age and fall out of the retention policy.\r\n\r\n\r\n#### TODOs\r\n\r\n - [x] ~Move template upgrades to the centralized `TemplateUpgradeService`.~ Beats will takeover this responsibility for Monitoring.\r\n - [x] Research the following log messages that repeated appear in the logs until the upgrade is complete\r\n\r\n```\r\n13:32:43 [2017-10-04T15:32:20,567][ERROR][o.e.x.m.c.c.ClusterStatsCollector] [node-0] collector [cluster_stats] failed to collect data\r\n13:32:43 java.lang.IllegalStateException: Security index is not on the current version - the native realm will not be operational until the upgrade API is run on the security index\r\n````\r\n\r\nand \r\n\r\n```\r\n[2017-10-06T06:42:14,621][ERROR][o.e.x.m.e.l.LocalExporter] failed to set monitoring watch [wAuN5cXhTiyjyCm58tH6ag_elasticsearch_version_mismatch]\r\norg.elasticsearch.indices.TypeMissingException: type[doc] missing\r\n        at org.elasticsearch.index.mapper.MapperService.documentMapperWithAutoCreate(MapperService.java:765) ~[elasticsearch-6.1.0-SNAPSHOT.jar:6.1.0-SNAPSHOT]\r\n        at org.elasticsearch.index.shard.IndexShard.docMapper(IndexShard.java:2147) ~[elasticsearch-6.1.0-SNAPSHOT.jar:6.1.0-SNAPSHOT]\r\n        at org.elasticsearch.index.shard.IndexShard.applyIndexOperation(IndexShard.java:677) ~[elasticsearch-6.1.0-SNAPSHOT.jar:6.1.0-SNAPSHOT]\r\n```\r\n\r\n\r\n### `TemplateUpgradeService`\r\n\r\nThe service is in charge of checking index template versions and upgrading them if needed. It currently tries to do so when the first 5.6 node joins the cluster. This fails because the `_system` user only has permissions to do so once the master has moved to 5.6 node (see LINK REDACTED). This results in repeated ugly messages about the `_system` not having the right permissions. Given the review of the different features above, we're safe to move to a simpler model where the templates are updated only on the current master (i.e., when the master is on the 5.6 version).\r\n\r\n - [x] Change the `TemplateUpgradeService` to only run its upgrades once the local node is master ( https://github.com/elastic/elasticsearch/pull/27294 )\r\n","closed_by":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"performed_via_github_app":null}