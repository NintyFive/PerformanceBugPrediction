[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/287519366","html_url":"https://github.com/elastic/elasticsearch/issues/23613#issuecomment-287519366","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23613","id":287519366,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NzUxOTM2Ng==","user":{"login":"qwerty4030","id":874677,"node_id":"MDQ6VXNlcjg3NDY3Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/874677?v=4","gravatar_id":"","url":"https://api.github.com/users/qwerty4030","html_url":"https://github.com/qwerty4030","followers_url":"https://api.github.com/users/qwerty4030/followers","following_url":"https://api.github.com/users/qwerty4030/following{/other_user}","gists_url":"https://api.github.com/users/qwerty4030/gists{/gist_id}","starred_url":"https://api.github.com/users/qwerty4030/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qwerty4030/subscriptions","organizations_url":"https://api.github.com/users/qwerty4030/orgs","repos_url":"https://api.github.com/users/qwerty4030/repos","events_url":"https://api.github.com/users/qwerty4030/events{/privacy}","received_events_url":"https://api.github.com/users/qwerty4030/received_events","type":"User","site_admin":false},"created_at":"2017-03-18T06:01:41Z","updated_at":"2017-03-18T06:01:41Z","author_association":"CONTRIBUTOR","body":"If you are using the `TermsAggregationBuilder#order(Terms.Order)` method in your Java code to add just that single aggregation order then it would explain this behavior. The curl REST request parser uses the `TermsAggregationBuilder#order(java.util.List<Terms.Order>)` method instead which calls `order(Terms.Order.compound(orders));` internally (even if there is only one order). The `CompoundOrder` constructor checks if the last order is a tie-breaker, i.e. `_term`, **and if not adds term order ascending as a tie-breaker**. As you mentioned the `_score` is the same for some or all of the hits so without a tie-breaker the final order is undefined.\r\n\r\nIMO this is a bug or at the very least unexpected/surprising behavior, especially given that we get different results for `SearchRequestBuilder#execute().actionGet()` vs using `SearchRequestBuilder#toString()` in the REST API.\r\n\r\n@colings86 thoughts on this? Possible solution is to use a `CompoundOrder` if the single order is not a tie-breaker. Perhaps something I can do in #22343 ?\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/287730176","html_url":"https://github.com/elastic/elasticsearch/issues/23613#issuecomment-287730176","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23613","id":287730176,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NzczMDE3Ng==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2017-03-20T11:07:02Z","updated_at":"2017-03-20T11:07:02Z","author_association":"MEMBER","body":"@qwerty4030 I think we should just have `TermsAggregationBuilder#order(Terms.Order)` call `TermsAggregationBuilder#order(java.util.List<Terms.Order>)` with `Collections.SingletonList(Terms.Order)` and then the behaviour will be guaranteed to be the same for both cases?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/287807439","html_url":"https://github.com/elastic/elasticsearch/issues/23613#issuecomment-287807439","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23613","id":287807439,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NzgwNzQzOQ==","user":{"login":"qwerty4030","id":874677,"node_id":"MDQ6VXNlcjg3NDY3Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/874677?v=4","gravatar_id":"","url":"https://api.github.com/users/qwerty4030","html_url":"https://github.com/qwerty4030","followers_url":"https://api.github.com/users/qwerty4030/followers","following_url":"https://api.github.com/users/qwerty4030/following{/other_user}","gists_url":"https://api.github.com/users/qwerty4030/gists{/gist_id}","starred_url":"https://api.github.com/users/qwerty4030/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qwerty4030/subscriptions","organizations_url":"https://api.github.com/users/qwerty4030/orgs","repos_url":"https://api.github.com/users/qwerty4030/repos","events_url":"https://api.github.com/users/qwerty4030/events{/privacy}","received_events_url":"https://api.github.com/users/qwerty4030/received_events","type":"User","site_admin":false},"created_at":"2017-03-20T16:04:22Z","updated_at":"2017-03-20T16:04:22Z","author_association":"CONTRIBUTOR","body":"@colings86 Yeah thats the idea. Might need to refactor a bit because `TermsAggregationBuilder#order(java.util.List<Terms.Order>)` calls `TermsAggregationBuilder#order(Terms.Order)` internally so that would cause a stack overflow ðŸ˜µ \r\nIf its alright with you I'll make that change in #22343 so a `CompoundOrder` will be used if the individual order is not a tie breaker. Definitely going to be a merge conflict otherwise.\r\n\r\n@Tobsucht **Workaround** is to call `TermsAggregationBuilder#order(java.util.List<Terms.Order>)` with `Collections.SingletonList(yourOrder)` or call `TermsAggregationBuilder#order(Terms.Order)` with `Terms.Order.compoud(yourOrder)`.\r\nFYI this API will change in #22343. Nothing major, just renaming/moving some classes and methods. Functionality will be identical (and this issue will be fixed). Thanks","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/288397237","html_url":"https://github.com/elastic/elasticsearch/issues/23613#issuecomment-288397237","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23613","id":288397237,"node_id":"MDEyOklzc3VlQ29tbWVudDI4ODM5NzIzNw==","user":{"login":"Tobsucht","id":11056604,"node_id":"MDQ6VXNlcjExMDU2NjA0","avatar_url":"https://avatars1.githubusercontent.com/u/11056604?v=4","gravatar_id":"","url":"https://api.github.com/users/Tobsucht","html_url":"https://github.com/Tobsucht","followers_url":"https://api.github.com/users/Tobsucht/followers","following_url":"https://api.github.com/users/Tobsucht/following{/other_user}","gists_url":"https://api.github.com/users/Tobsucht/gists{/gist_id}","starred_url":"https://api.github.com/users/Tobsucht/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tobsucht/subscriptions","organizations_url":"https://api.github.com/users/Tobsucht/orgs","repos_url":"https://api.github.com/users/Tobsucht/repos","events_url":"https://api.github.com/users/Tobsucht/events{/privacy}","received_events_url":"https://api.github.com/users/Tobsucht/received_events","type":"User","site_admin":false},"created_at":"2017-03-22T13:26:44Z","updated_at":"2017-03-22T13:26:44Z","author_association":"NONE","body":"Thanks for the fast resolution!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/300975956","html_url":"https://github.com/elastic/elasticsearch/issues/23613#issuecomment-300975956","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23613","id":300975956,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMDk3NTk1Ng==","user":{"login":"qwerty4030","id":874677,"node_id":"MDQ6VXNlcjg3NDY3Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/874677?v=4","gravatar_id":"","url":"https://api.github.com/users/qwerty4030","html_url":"https://github.com/qwerty4030","followers_url":"https://api.github.com/users/qwerty4030/followers","following_url":"https://api.github.com/users/qwerty4030/following{/other_user}","gists_url":"https://api.github.com/users/qwerty4030/gists{/gist_id}","starred_url":"https://api.github.com/users/qwerty4030/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qwerty4030/subscriptions","organizations_url":"https://api.github.com/users/qwerty4030/orgs","repos_url":"https://api.github.com/users/qwerty4030/repos","events_url":"https://api.github.com/users/qwerty4030/events{/privacy}","received_events_url":"https://api.github.com/users/qwerty4030/received_events","type":"User","site_admin":false},"created_at":"2017-05-12T03:40:45Z","updated_at":"2017-05-12T03:40:45Z","author_association":"CONTRIBUTOR","body":"@colings86 Is it worth the effort to port the fix for this to the 5.x brach? Should be a small change to this method: https://github.com/elastic/elasticsearch/pull/22343/files#diff-56aadcd205034c94cb0e60801704afd9R194","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/301031427","html_url":"https://github.com/elastic/elasticsearch/issues/23613#issuecomment-301031427","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23613","id":301031427,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTAzMTQyNw==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2017-05-12T09:36:38Z","updated_at":"2017-05-12T09:36:38Z","author_association":"MEMBER","body":"@qwerty4030 I think it would be good to backport just think fix to 5.x, since it shouldn't change the API at all and it is a bug fix. Would you like to raise a PR for this against the 5.x branch?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/301285719","html_url":"https://github.com/elastic/elasticsearch/issues/23613#issuecomment-301285719","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23613","id":301285719,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTI4NTcxOQ==","user":{"login":"qwerty4030","id":874677,"node_id":"MDQ6VXNlcjg3NDY3Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/874677?v=4","gravatar_id":"","url":"https://api.github.com/users/qwerty4030","html_url":"https://github.com/qwerty4030","followers_url":"https://api.github.com/users/qwerty4030/followers","following_url":"https://api.github.com/users/qwerty4030/following{/other_user}","gists_url":"https://api.github.com/users/qwerty4030/gists{/gist_id}","starred_url":"https://api.github.com/users/qwerty4030/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qwerty4030/subscriptions","organizations_url":"https://api.github.com/users/qwerty4030/orgs","repos_url":"https://api.github.com/users/qwerty4030/repos","events_url":"https://api.github.com/users/qwerty4030/events{/privacy}","received_events_url":"https://api.github.com/users/qwerty4030/received_events","type":"User","site_admin":false},"created_at":"2017-05-14T01:56:51Z","updated_at":"2017-05-14T01:56:51Z","author_association":"CONTRIBUTOR","body":"@colings86 created #24658 ","performed_via_github_app":null}]