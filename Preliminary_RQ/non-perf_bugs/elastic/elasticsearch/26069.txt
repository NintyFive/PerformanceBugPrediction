{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/26069","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26069/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26069/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26069/events","html_url":"https://github.com/elastic/elasticsearch/issues/26069","id":248174273,"node_id":"MDU6SXNzdWUyNDgxNzQyNzM=","number":26069,"title":"excessive use of notifyAll","user":{"login":"jgq2008303393","id":657140,"node_id":"MDQ6VXNlcjY1NzE0MA==","avatar_url":"https://avatars0.githubusercontent.com/u/657140?v=4","gravatar_id":"","url":"https://api.github.com/users/jgq2008303393","html_url":"https://github.com/jgq2008303393","followers_url":"https://api.github.com/users/jgq2008303393/followers","following_url":"https://api.github.com/users/jgq2008303393/following{/other_user}","gists_url":"https://api.github.com/users/jgq2008303393/gists{/gist_id}","starred_url":"https://api.github.com/users/jgq2008303393/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgq2008303393/subscriptions","organizations_url":"https://api.github.com/users/jgq2008303393/orgs","repos_url":"https://api.github.com/users/jgq2008303393/repos","events_url":"https://api.github.com/users/jgq2008303393/events{/privacy}","received_events_url":"https://api.github.com/users/jgq2008303393/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-08-05T09:15:50Z","updated_at":"2017-08-08T06:44:37Z","closed_at":"2017-08-07T11:56:40Z","author_association":"NONE","active_lock_reason":null,"body":"I have a write heavy scene. When tuning with jstack, I found a significant proportion of thread stacks similar to the  followings:\r\n```\r\n\"elasticsearch[test][bulk][T#23]\" #126 daemon prio=5 os_prio=0 tid=0x00007f68f8040000 nid=0x6b1 runnable [0x00007f6918ce9000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.lang.Object.notifyAll(Native Method)\r\n        at org.apache.lucene.index.DocumentsWriterPerThreadPool.release(DocumentsWriterPerThreadPool.java:213)\r\n        - locked <0x00000000ea02b6d0> (a org.apache.lucene.index.DocumentsWriterPerThreadPool)\r\n        at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:496)\r\n        at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1571)\r\n        at org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1316)\r\n        at org.elasticsearch.index.engine.InternalEngine.index(InternalEngine.java:663)\r\n        at org.elasticsearch.index.engine.InternalEngine.indexIntoLucene(InternalEngine.java:607)\r\n        at org.elasticsearch.index.engine.InternalEngine.index(InternalEngine.java:505)\r\n        at org.elasticsearch.index.shard.IndexShard.index(IndexShard.java:556)\r\n        at org.elasticsearch.index.shard.IndexShard.index(IndexShard.java:545)\r\n        at org.elasticsearch.action.bulk.TransportShardBulkAction.executeIndexRequestOnPrimary(TransportShardBulkAction.java:484)\r\n        at org.elasticsearch.action.bulk.TransportShardBulkAction.executeBulkItemRequest(TransportShardBulkAction.java:143)\r\n        at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:113)\r\n        at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:69)\r\n        at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryShardReference.perform(TransportReplicationAction.java:939)\r\n        at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryShardReference.perform(TransportReplicationAction.java:908)\r\n        at org.elasticsearch.action.support.replication.ReplicationOperation.execute(ReplicationOperation.java:113)\r\n        at org.elasticsearch.action.support.replication.TransportReplicationAction$AsyncPrimaryAction.onResponse(TransportReplicationAction.java:322)\r\n        at org.elasticsearch.action.support.replication.TransportReplicationAction$AsyncPrimaryAction.onResponse(TransportReplicationAction.java:264)\r\n        at org.elasticsearch.action.support.replication.TransportReplicationAction$1.onResponse(TransportReplicationAction.java:888)\r\n        at org.elasticsearch.action.support.replication.TransportReplicationAction$1.onResponse(TransportReplicationAction.java:885)\r\n        at org.elasticsearch.index.shard.IndexShardOperationsLock.acquire(IndexShardOperationsLock.java:147)\r\n        at org.elasticsearch.index.shard.IndexShard.acquirePrimaryOperationLock(IndexShard.java:1657)\r\n        at org.elasticsearch.action.support.replication.TransportReplicationAction.acquirePrimaryShardReference(TransportReplicationAction.java:897)\r\n        at org.elasticsearch.action.support.replication.TransportReplicationAction.access$400(TransportReplicationAction.java:93)\r\n        at org.elasticsearch.action.support.replication.TransportReplicationAction$AsyncPrimaryAction.doRun(TransportReplicationAction.java:281)\r\n        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n        at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:260)\r\n        at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:252)\r\n        at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69)\r\n        at org.elasticsearch.transport.TransportService$7.doRun(TransportService.java:644)\r\n        at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:638)\r\n        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n```\r\nAfter reading the code related with DocumentsWriterPerThreadPool, I think the notifyAll is useless. This is a relatively expensive operation, and should be avoided if possible.","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}