[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/167363910","html_url":"https://github.com/elastic/elasticsearch/issues/15644#issuecomment-167363910","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15644","id":167363910,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NzM2MzkxMA==","user":{"login":"Ghost93","id":4268710,"node_id":"MDQ6VXNlcjQyNjg3MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/4268710?v=4","gravatar_id":"","url":"https://api.github.com/users/Ghost93","html_url":"https://github.com/Ghost93","followers_url":"https://api.github.com/users/Ghost93/followers","following_url":"https://api.github.com/users/Ghost93/following{/other_user}","gists_url":"https://api.github.com/users/Ghost93/gists{/gist_id}","starred_url":"https://api.github.com/users/Ghost93/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Ghost93/subscriptions","organizations_url":"https://api.github.com/users/Ghost93/orgs","repos_url":"https://api.github.com/users/Ghost93/repos","events_url":"https://api.github.com/users/Ghost93/events{/privacy}","received_events_url":"https://api.github.com/users/Ghost93/received_events","type":"User","site_admin":false},"created_at":"2015-12-26T21:17:39Z","updated_at":"2015-12-26T21:18:08Z","author_association":"NONE","body":"+1\n\nwe use it to calculate delay in production - we have a field called `arriveTime` and use aggregation on `arriveTime - _timestamp`\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/169579348","html_url":"https://github.com/elastic/elasticsearch/issues/15644#issuecomment-169579348","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15644","id":169579348,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTU3OTM0OA==","user":{"login":"israel","id":239588,"node_id":"MDQ6VXNlcjIzOTU4OA==","avatar_url":"https://avatars3.githubusercontent.com/u/239588?v=4","gravatar_id":"","url":"https://api.github.com/users/israel","html_url":"https://github.com/israel","followers_url":"https://api.github.com/users/israel/followers","following_url":"https://api.github.com/users/israel/following{/other_user}","gists_url":"https://api.github.com/users/israel/gists{/gist_id}","starred_url":"https://api.github.com/users/israel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/israel/subscriptions","organizations_url":"https://api.github.com/users/israel/orgs","repos_url":"https://api.github.com/users/israel/repos","events_url":"https://api.github.com/users/israel/events{/privacy}","received_events_url":"https://api.github.com/users/israel/received_events","type":"User","site_admin":false},"created_at":"2016-01-07T07:15:12Z","updated_at":"2016-01-07T07:15:12Z","author_association":"NONE","body":"+1\n\nIf there is no _timestamp system meta field, a retry scenario becomes less elegant and less efficient since the client will have to modify the index request source with a new \"timestamp\" value for its user defined \"timestamp\" field.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/184747943","html_url":"https://github.com/elastic/elasticsearch/issues/15644#issuecomment-184747943","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15644","id":184747943,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NDc0Nzk0Mw==","user":{"login":"l15k4","id":518855,"node_id":"MDQ6VXNlcjUxODg1NQ==","avatar_url":"https://avatars1.githubusercontent.com/u/518855?v=4","gravatar_id":"","url":"https://api.github.com/users/l15k4","html_url":"https://github.com/l15k4","followers_url":"https://api.github.com/users/l15k4/followers","following_url":"https://api.github.com/users/l15k4/following{/other_user}","gists_url":"https://api.github.com/users/l15k4/gists{/gist_id}","starred_url":"https://api.github.com/users/l15k4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/l15k4/subscriptions","organizations_url":"https://api.github.com/users/l15k4/orgs","repos_url":"https://api.github.com/users/l15k4/repos","events_url":"https://api.github.com/users/l15k4/events{/privacy}","received_events_url":"https://api.github.com/users/l15k4/received_events","type":"User","site_admin":false},"created_at":"2016-02-16T16:08:20Z","updated_at":"2016-02-16T16:08:20Z","author_association":"NONE","body":"I'm dealing with the same thing, also I'm not sure whether I have to re-index all my data because of the deprecated `_timestamp` field :  https://discuss.elastic.co/t/upgrade-from-1-7-x-to-2-2-0--timestamp-mapping-issue/41894\n\nDocumentation says it should be compatible, but it somehow is not...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/190376116","html_url":"https://github.com/elastic/elasticsearch/issues/15644#issuecomment-190376116","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15644","id":190376116,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MDM3NjExNg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-02-29T20:36:03Z","updated_at":"2016-02-29T20:36:03Z","author_association":"CONTRIBUTOR","body":"In master this can be done using ingest pipelines. Closing in favour of #14049\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/196371125","html_url":"https://github.com/elastic/elasticsearch/issues/15644#issuecomment-196371125","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15644","id":196371125,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NjM3MTEyNQ==","user":{"login":"djschny","id":129643,"node_id":"MDQ6VXNlcjEyOTY0Mw==","avatar_url":"https://avatars0.githubusercontent.com/u/129643?v=4","gravatar_id":"","url":"https://api.github.com/users/djschny","html_url":"https://github.com/djschny","followers_url":"https://api.github.com/users/djschny/followers","following_url":"https://api.github.com/users/djschny/following{/other_user}","gists_url":"https://api.github.com/users/djschny/gists{/gist_id}","starred_url":"https://api.github.com/users/djschny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/djschny/subscriptions","organizations_url":"https://api.github.com/users/djschny/orgs","repos_url":"https://api.github.com/users/djschny/repos","events_url":"https://api.github.com/users/djschny/events{/privacy}","received_events_url":"https://api.github.com/users/djschny/received_events","type":"User","site_admin":false},"created_at":"2016-03-14T15:35:55Z","updated_at":"2016-03-14T15:35:55Z","author_association":"CONTRIBUTOR","body":"Unfortunately ingest pipelines will not give what is desired though correct? Since it will not account for time an index request spends sitting in a threadpool queue prior to being worked on since the timestamp was added by an ingest node prior to getting to a data node.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/196374675","html_url":"https://github.com/elastic/elasticsearch/issues/15644#issuecomment-196374675","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15644","id":196374675,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NjM3NDY3NQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-03-14T15:43:18Z","updated_at":"2016-03-14T15:43:18Z","author_association":"CONTRIBUTOR","body":"> Unfortunately ingest pipelines will not give what is desired though correct? Since it will not account for time an index request spends sitting in a threadpool queue prior to being worked on since the timestamp was added by an ingest node prior to getting to a data node.\n\nthere is always a delta between the assignment of a timestamp and the moment when it's actually indexed. The timestamp doesn't guarantee lineralizability in any way, that's a sequence ID. This feature can only be as good as some client app setting the timestamp no matter where you put it. It should not be more neither less.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/196416327","html_url":"https://github.com/elastic/elasticsearch/issues/15644#issuecomment-196416327","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15644","id":196416327,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NjQxNjMyNw==","user":{"login":"lam-juice","id":11839168,"node_id":"MDQ6VXNlcjExODM5MTY4","avatar_url":"https://avatars1.githubusercontent.com/u/11839168?v=4","gravatar_id":"","url":"https://api.github.com/users/lam-juice","html_url":"https://github.com/lam-juice","followers_url":"https://api.github.com/users/lam-juice/followers","following_url":"https://api.github.com/users/lam-juice/following{/other_user}","gists_url":"https://api.github.com/users/lam-juice/gists{/gist_id}","starred_url":"https://api.github.com/users/lam-juice/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lam-juice/subscriptions","organizations_url":"https://api.github.com/users/lam-juice/orgs","repos_url":"https://api.github.com/users/lam-juice/repos","events_url":"https://api.github.com/users/lam-juice/events{/privacy}","received_events_url":"https://api.github.com/users/lam-juice/received_events","type":"User","site_admin":false},"created_at":"2016-03-14T17:11:20Z","updated_at":"2016-03-14T17:18:13Z","author_association":"NONE","body":"However, what is doable then - is to make a guarantee that the ingest pipeline would perform the field insertion at a stage _no earlier than_ where _timestamp insertions are currently performed, correct?\n\nIf the guarantee can be made, please ignore everything below.\n\nEven if there is always a delta, it is an issue involving its magnitude - i.e. not a binary issue - I believe in this case an effort should be made to minimize this delta - \"delta always exists\" - yes it's very well understood - however, it should not be used as a reason to arbitrarily alter this delta, while not providing a mean to accomplish what the small delta used to.\n\ni.e. a small delta is better than a large delta - a timestamp inserted closer to actual indexing is better than a timestamp inserted by the client app.  To say that it \"can only as good as some client app setting the timestamp\" totally ignores the meaning of the magnitude of the delta.\n\nDo you agree that using _timestamp is a good way to measure pipeline delays?  If not, is an alternative offered that works **at least as well as** _timestamp?  Or, should we ignore Logstash delays altogether?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/196482419","html_url":"https://github.com/elastic/elasticsearch/issues/15644#issuecomment-196482419","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15644","id":196482419,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NjQ4MjQxOQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-03-14T19:16:03Z","updated_at":"2016-03-14T19:16:03Z","author_association":"CONTRIBUTOR","body":"IMO the timestamp should be assigned as soon as the document enters the system. that is what ingest will do. I think that is a clear property of the timestamp. I don't understand what folks are concerned about here, how much time do you think it takes from sending the doc until it's really indexed? I don't understand your usecase either, do you rely on the actual time the doc is indexed? what does it buy you? \n\nplease be reasonable we can't give you any total ordering guarantees based on timestamps.\n\nif you are concerned about the corner case of the document being stuck in the thread-pool queue? I think  you can just ignore that, unless you totally overload your sever it should be like a second at most or something?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/196498558","html_url":"https://github.com/elastic/elasticsearch/issues/15644#issuecomment-196498558","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15644","id":196498558,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NjQ5ODU1OA==","user":{"login":"lam-juice","id":11839168,"node_id":"MDQ6VXNlcjExODM5MTY4","avatar_url":"https://avatars1.githubusercontent.com/u/11839168?v=4","gravatar_id":"","url":"https://api.github.com/users/lam-juice","html_url":"https://github.com/lam-juice","followers_url":"https://api.github.com/users/lam-juice/followers","following_url":"https://api.github.com/users/lam-juice/following{/other_user}","gists_url":"https://api.github.com/users/lam-juice/gists{/gist_id}","starred_url":"https://api.github.com/users/lam-juice/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lam-juice/subscriptions","organizations_url":"https://api.github.com/users/lam-juice/orgs","repos_url":"https://api.github.com/users/lam-juice/repos","events_url":"https://api.github.com/users/lam-juice/events{/privacy}","received_events_url":"https://api.github.com/users/lam-juice/received_events","type":"User","site_admin":false},"created_at":"2016-03-14T20:02:38Z","updated_at":"2016-03-14T20:07:40Z","author_association":"NONE","body":"You can probably find the answer if you ask yourselves, \"Why was _timestamp created in the first place\"?\n\nWhat I'm concerned is having a knowledge - the best that a system can muster - the time elapsed between the moment an event is generated and the moment the same event is available for searches.\n\nWhat does it buy us?  ElasticSearch is only one component in the entire analytics pipeline.  Let's say for example, perioidically, a process queries ElasticSearch and aggregates some results.  When an event is delayed for a long enough time, it may miss such aggregation.  A _timestamp provides a good approximation of the delay of an event, and provides a mean to rerun such aggregations on events that were missed.  It's just one example.\n\nAnother example is that it can allow us to profile time spent in Logstash, so its configuration can be optimised - or if not possible - having Logstash replaced with something more efficient.\n\nJudging from the replies I'm not the only person with such concern, so without the tool for measurement, nobody can say it's a \"corner case\", or \"like a second at most or something\", we're talking about.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/196507547","html_url":"https://github.com/elastic/elasticsearch/issues/15644#issuecomment-196507547","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15644","id":196507547,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NjUwNzU0Nw==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-03-14T20:25:44Z","updated_at":"2016-03-14T20:25:44Z","author_association":"CONTRIBUTOR","body":"sorry I am not sure `_timestamp` had the properties you are asking for. It was added at some point inside elasticsearch and if you hammering the index you can easily got stuck in a lock on the indexing etc. there is no guarantee of any sort neither in the new way nor in the old way. There can be hours between the doc was indexed and it being visible in search. If you are relying on exact numbers here your system has a huge flaw, IMO. \n\n@lam-juice @djschny the new way is as good as the old way, it is assigned at a slightly earlier stage but for all usecases of `_timestamp` the neither place should matter. If it does, `_timestamp` is not what you are looking for.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/196894650","html_url":"https://github.com/elastic/elasticsearch/issues/15644#issuecomment-196894650","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15644","id":196894650,"node_id":"MDEyOklzc3VlQ29tbWVudDE5Njg5NDY1MA==","user":{"login":"lam-juice","id":11839168,"node_id":"MDQ6VXNlcjExODM5MTY4","avatar_url":"https://avatars1.githubusercontent.com/u/11839168?v=4","gravatar_id":"","url":"https://api.github.com/users/lam-juice","html_url":"https://github.com/lam-juice","followers_url":"https://api.github.com/users/lam-juice/followers","following_url":"https://api.github.com/users/lam-juice/following{/other_user}","gists_url":"https://api.github.com/users/lam-juice/gists{/gist_id}","starred_url":"https://api.github.com/users/lam-juice/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lam-juice/subscriptions","organizations_url":"https://api.github.com/users/lam-juice/orgs","repos_url":"https://api.github.com/users/lam-juice/repos","events_url":"https://api.github.com/users/lam-juice/events{/privacy}","received_events_url":"https://api.github.com/users/lam-juice/received_events","type":"User","site_admin":false},"created_at":"2016-03-15T15:57:27Z","updated_at":"2016-03-15T16:01:23Z","author_association":"NONE","body":"It depends on the guarantee we want - to us, ElasticSearch and what's feeding ElasticSearch its events are 2 separate entities, thus a facility is better than none in order to optimise and/or evaluate what's between ES and the event source (e.g. Logstash).\n\nDoes it provide 100% guarantee?  No - and it's not what I need anyway.  Has _timestamp statistically been providing what I need, which is 99% of the time a good approximation (even if it can have a long tail)?  Definitely.\n\nSo you can see I'm not relying on exact numbers @s1monw - if it is assigned at a slightly earlier stage, so be it - deduplications provide the robustness I need anyway if I decide to observe the difference in the fatness of the tail, and reindex more conservatively - I think our fundamental disagreement is over the notion that _\"an ES-assigned timestamp does not accomplish more than a client-assigned timestamp\"_ - because I believe a client-assigned timestamp does not allow even a rough estimate of time spent before an event crosses the boundary into ES.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/197280186","html_url":"https://github.com/elastic/elasticsearch/issues/15644#issuecomment-197280186","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15644","id":197280186,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NzI4MDE4Ng==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-03-16T11:48:16Z","updated_at":"2016-03-16T11:48:16Z","author_association":"CONTRIBUTOR","body":"> Does it provide 100% guarantee? No - and it's not what I need anyway. Has _timestamp statistically been providing what I need, which is 99% of the time a good approximation? Definitely.\n\nthat has not changed if you use ingest\n\n> \"an ES-assigned timestamp does not accomplish more than a client-assigned timestamp\" \n\nthat is what it basically was all the time no other guarantees given.\n","performed_via_github_app":null}]