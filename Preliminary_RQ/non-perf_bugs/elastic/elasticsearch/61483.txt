{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/61483","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61483/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61483/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61483/events","html_url":"https://github.com/elastic/elasticsearch/issues/61483","id":684738683,"node_id":"MDU6SXNzdWU2ODQ3Mzg2ODM=","number":61483,"title":"Reproducible Failure in org.elasticsearch.client.enrich.PutPolicyRequestTests.testFromXContent","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"labels":[{"id":144797810,"node_id":"MDU6TGFiZWwxNDQ3OTc4MTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Core","name":":Core/Infra/Core","color":"0e8a16","default":false,"description":"Core issues without another label"},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"},{"id":1967495446,"node_id":"MDU6TGFiZWwxOTY3NDk1NDQ2","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Core/Infra","name":"Team:Core/Infra","color":"fef2c0","default":false,"description":"Meta label for core/infra team"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-08-24T14:56:08Z","updated_at":"2020-08-24T16:09:56Z","closed_at":"2020-08-24T16:09:56Z","author_association":"MEMBER","active_lock_reason":null,"body":"This failure was caused by #61447 but it's not a bug, rather it reveals a real bug in our x content parsing.\r\n\r\n```\r\n ./gradlew ':client:rest-high-level:test' --tests \"org.elasticsearch.client.enrich.PutPolicyRequestTests.testFromXContent\" -Dtests.seed=CF0B5544B644B99E -Dtests.security.manager=true -Dtests.locale=de-DE\r\n```\r\n\r\ncurrently fails with \r\n\r\n```\r\n\r\nSuite: Test class org.elasticsearch.client.enrich.PutPolicyRequestTests\r\n  1> [2020-08-24T11:54:22,561][INFO ][o.e.c.e.PutPolicyRequestTests] [testFromXContent] before test\r\n  1> [2020-08-24T11:54:22,719][INFO ][o.e.c.e.PutPolicyRequestTests] [testFromXContent] after test\r\n  2> REPRODUCE WITH: ./gradlew ':client:rest-high-level:test' --tests \"org.elasticsearch.client.enrich.PutPolicyRequestTests.testFromXContent\" -Dtests.seed=CF0B5544B644B99E -Dtests.security.manager=true -Dtests.locale=de-DE -Dtests.timezone=America/Thule -Druntime.java=14\r\n  2> org.elasticsearch.ElasticsearchParseException: Failed to parse content to map\r\n        at __randomizedtesting.SeedInfo.seed([CF0B5544B644B99E:EE63605C3FE35944]:0)\r\n        at org.elasticsearch.common.xcontent.XContentHelper.convertToMap(XContentHelper.java:176)\r\n        at org.elasticsearch.common.xcontent.XContentHelper.convertToMap(XContentHelper.java:122)\r\n        at org.elasticsearch.client.enrich.PutPolicyRequest.asMap(PutPolicyRequest.java:146)\r\n        at org.elasticsearch.client.enrich.PutPolicyRequest.toXContent(PutPolicyRequest.java:109)\r\n        at org.elasticsearch.common.xcontent.XContentHelper.toXContent(XContentHelper.java:407)\r\n        at org.elasticsearch.test.ESTestCase.toShuffledXContent(ESTestCase.java:1103)\r\n        at org.elasticsearch.client.AbstractRequestTestCase.testFromXContent(AbstractRequestTestCase.java:48)\r\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.base/java.lang.reflect.Method.invoke(Method.java:564)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1758)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:946)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:982)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:996)\r\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n        at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n        at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n        at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n        at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n        at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:375)\r\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:824)\r\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:475)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:955)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:840)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:891)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:902)\r\n        at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n        at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n        at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n        at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n        at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n        at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n        at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n        at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:375)\r\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl.lambda$forkTimeoutingTask$0(ThreadLeakControl.java:831)\r\n        at java.base/java.lang.Thread.run(Thread.java:832)\r\n\r\n        Caused by:\r\n        com.fasterxml.jackson.core.JsonParseException: Input does not start with Smile format header (first byte = 0x7b) -- rather, it starts with '{' (plain JSON input?) -- can not parse\r\n         at [Source: (byte[])\"{\"match_all\":{\"boost\":1.0}}\"; line: -1, column: 0]\r\n            at com.fasterxml.jackson.dataformat.smile.SmileParserBootstrapper.constructParser(SmileParserBootstrapper.java:133)\r\n            at com.fasterxml.jackson.dataformat.smile.SmileFactory._createParser(SmileFactory.java:460)\r\n            at com.fasterxml.jackson.dataformat.smile.SmileFactory.createParser(SmileFactory.java:366)\r\n            at org.elasticsearch.common.xcontent.smile.SmileXContent.createParser(SmileXContent.java:103)\r\n            at org.elasticsearch.common.xcontent.XContentHelper.convertToMap(XContentHelper.java:172)\r\n            ... 43 more\r\n  2> NOTE: leaving temporary files on disk at: /home/brownbear/src/elasticsearch/client/rest-high-level/build/testrun/test/temp/org.elasticsearch.client.enrich.PutPolicyRequestTests_CF0B5544B644B99E-003\r\n  2> NOTE: test params are: codec=Asserting(Lucene86): {}, docValues:{}, maxPointsInLeafNode=1406, maxMBSortInHeap=6.991612212464442, sim=Asserting(RandomSimilarity(queryNorm=true): {}), locale=de-DE, timezone=America/Thule\r\n  2> NOTE: Linux 5.4.0-42-generic amd64/AdoptOpenJDK 14.0.1 (64-bit)/cpus=16,threads=1,free=520886424,total=536870912\r\n  2> NOTE: All tests run in this JVM: [PutPolicyRequestTests]\r\n\r\nTests with failures:\r\n - org.elasticsearch.client.enrich.PutPolicyRequestTests.testFromXContent\r\n\r\n1 test completed, 1 failed\r\n\r\n```\r\n\r\n-> I'm looking into a fix. The deeper reason for this is that when we parse xcontent from a stream while assuming the wrong content type, we simply parse out an empty map (this seems very broken). The linked change optimized some streaming reads to byte array reads which resulted in those broken parsers throwing instead.","closed_by":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"performed_via_github_app":null}