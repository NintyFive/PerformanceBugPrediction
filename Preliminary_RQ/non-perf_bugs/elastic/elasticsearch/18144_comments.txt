[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/216982652","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-216982652","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":216982652,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNjk4MjY1Mg==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-05-04T19:54:45Z","updated_at":"2016-05-04T19:54:45Z","author_association":"CONTRIBUTOR","body":"\"fun\"\n\n> data for [<http_request>] would be larger than limit of [726571417/692.9mb]\n\n@danielmitterdorfer this might be you though it is hard to tell.\n\n@tylersmalley is there any chance you can take a thread dump when this happens? Maybe just the hot_threads API (though it might not work because of the breaker)?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/216984318","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-216984318","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":216984318,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNjk4NDMxOA==","user":{"login":"tylersmalley","id":40265,"node_id":"MDQ6VXNlcjQwMjY1","avatar_url":"https://avatars2.githubusercontent.com/u/40265?v=4","gravatar_id":"","url":"https://api.github.com/users/tylersmalley","html_url":"https://github.com/tylersmalley","followers_url":"https://api.github.com/users/tylersmalley/followers","following_url":"https://api.github.com/users/tylersmalley/following{/other_user}","gists_url":"https://api.github.com/users/tylersmalley/gists{/gist_id}","starred_url":"https://api.github.com/users/tylersmalley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tylersmalley/subscriptions","organizations_url":"https://api.github.com/users/tylersmalley/orgs","repos_url":"https://api.github.com/users/tylersmalley/repos","events_url":"https://api.github.com/users/tylersmalley/events{/privacy}","received_events_url":"https://api.github.com/users/tylersmalley/received_events","type":"User","site_admin":false},"created_at":"2016-05-04T20:00:59Z","updated_at":"2016-05-04T20:00:59Z","author_association":"MEMBER","body":"@nik9000, I will get that once it returns to a failed state again.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/216984893","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-216984893","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":216984893,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNjk4NDg5Mw==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-05-04T20:03:16Z","updated_at":"2016-05-04T20:03:16Z","author_association":"CONTRIBUTOR","body":"> @nik9000, I will get that once it returns to a failed state again.\n\nThanks!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217000187","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-217000187","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":217000187,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzAwMDE4Nw==","user":{"login":"tylersmalley","id":40265,"node_id":"MDQ6VXNlcjQwMjY1","avatar_url":"https://avatars2.githubusercontent.com/u/40265?v=4","gravatar_id":"","url":"https://api.github.com/users/tylersmalley","html_url":"https://github.com/tylersmalley","followers_url":"https://api.github.com/users/tylersmalley/followers","following_url":"https://api.github.com/users/tylersmalley/following{/other_user}","gists_url":"https://api.github.com/users/tylersmalley/gists{/gist_id}","starred_url":"https://api.github.com/users/tylersmalley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tylersmalley/subscriptions","organizations_url":"https://api.github.com/users/tylersmalley/orgs","repos_url":"https://api.github.com/users/tylersmalley/repos","events_url":"https://api.github.com/users/tylersmalley/events{/privacy}","received_events_url":"https://api.github.com/users/tylersmalley/received_events","type":"User","site_admin":false},"created_at":"2016-05-04T20:56:15Z","updated_at":"2016-05-04T20:56:15Z","author_association":"MEMBER","body":"The _msearch requests will begin failing before the entire ES cluster. Nothing ever appeared in `/_nodes/hot_threads` and eventually it would fail with the same exception:\n\n``` json\n{\n  \"error\" : {\n    \"root_cause\" : [ {\n      \"type\" : \"circuit_breaking_exception\",\n      \"reason\" : \"[parent] Data too large, data for [<http_request>] would be larger than limit of [726571417/692.9mb]\",\n      \"bytes_wanted\" : 726582240,\n      \"bytes_limit\" : 726571417\n    } ],\n    \"type\" : \"circuit_breaking_exception\",\n    \"reason\" : \"[parent] Data too large, data for [<http_request>] would be larger than limit of [726571417/692.9mb]\",\n    \"bytes_wanted\" : 726582240,\n    \"bytes_limit\" : 726571417\n  },\n  \"status\" : 503\n}\n```\n\nHere is the thread dump: https://gist.githubusercontent.com/tylersmalley/00105a27a0dd7b86016d78dc65e1bfb1/raw/jstack_7647_2.log\n\nI will keep the cluster in a failed state should you need any additional information from it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217006049","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-217006049","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":217006049,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzAwNjA0OQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-05-04T21:19:20Z","updated_at":"2016-05-04T21:19:20Z","author_association":"CONTRIBUTOR","body":"> Here is the thread dump\n\nIt says \"I'm not doing anything\". Any chance you can get a [task list](https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html)? `curl localhost:9200/_tasks` should do it. That is another (new and shiny!) way for me to figure out what is going on.\n\nThe breaker you are hitting is trying to prevent requests from overwhelming memory. If you had in flight requests I should have seen them doing something in the thread dump. Lots of stuff in Elasticsearch is async so I wouldn't see everything but I expected something. The task list goes the other way - it registers something whenever a request starts and removes it when it stops. If we see something in the task list, especially if it is a lot of somethings, then we have our smoking gun. If we see nothing, well, we go look other places.\n\nThe next place might be getting a heap dump. But I'm not going to put you through that. I should be able to reproduce this on my side.\n\nI believe @danielmitterdorfer, who I pinged, will not be around tomorrow so I might just keep this issue.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217010041","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-217010041","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":217010041,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzAxMDA0MQ==","user":{"login":"tylersmalley","id":40265,"node_id":"MDQ6VXNlcjQwMjY1","avatar_url":"https://avatars2.githubusercontent.com/u/40265?v=4","gravatar_id":"","url":"https://api.github.com/users/tylersmalley","html_url":"https://github.com/tylersmalley","followers_url":"https://api.github.com/users/tylersmalley/followers","following_url":"https://api.github.com/users/tylersmalley/following{/other_user}","gists_url":"https://api.github.com/users/tylersmalley/gists{/gist_id}","starred_url":"https://api.github.com/users/tylersmalley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tylersmalley/subscriptions","organizations_url":"https://api.github.com/users/tylersmalley/orgs","repos_url":"https://api.github.com/users/tylersmalley/repos","events_url":"https://api.github.com/users/tylersmalley/events{/privacy}","received_events_url":"https://api.github.com/users/tylersmalley/received_events","type":"User","site_admin":false},"created_at":"2016-05-04T21:31:53Z","updated_at":"2016-05-04T21:31:53Z","author_association":"MEMBER","body":">  Any chance you can get a task list?\n\n``` bash\ncurl 'http://localhost:9200/_tasks?pretty=true'\n{\n  \"error\" : {\n    \"root_cause\" : [ {\n      \"type\" : \"circuit_breaking_exception\",\n      \"reason\" : \"[parent] Data too large, data for [<http_request>] would be larger than limit of [726571417/692.9mb]\",\n      \"bytes_wanted\" : 726582240,\n      \"bytes_limit\" : 726571417\n    } ],\n    \"type\" : \"circuit_breaking_exception\",\n    \"reason\" : \"[parent] Data too large, data for [<http_request>] would be larger than limit of [726571417/692.9mb]\",\n    \"bytes_wanted\" : 726582240,\n    \"bytes_limit\" : 726571417\n  },\n  \"status\" : 503\n}\n```\n\nI will restart the cluster and monitor the `_tasks` endpoint until it begins throwing exceptions and report back.\n\nHere is a heap dump in its current failed state: https://gist.github.com/tylersmalley/00105a27a0dd7b86016d78dc65e1bfb1/raw/jmap_7647.bin\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217137647","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-217137647","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":217137647,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzEzNzY0Nw==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2016-05-05T12:09:59Z","updated_at":"2016-05-05T12:17:36Z","author_association":"MEMBER","body":"@nik9000 I tried to reproduce the scenario locally by running topbeat and running the query above periodically but so far the circuit breaker did not trip. I am not surprised that the thread dump does not reveal much because the circuit breaker essentially prevents further work from coming into the system. Based on an analysis of the heap dump I guess that the system is not really busy but the bytes are not freed properly and add up over time. I had a closer look at how the bytes are freed in `HttpServer.ResourceHandlingHttpChannel`:\n\n``` java\ninFlightRequestsBreaker(circuitBreakerService).addWithoutBreaking(-request().content().length());\n```\n\nConsidering that the content is represented by a `ChannelBufferBytesReference` which returns the readable bytes in the channel buffer we could end up in a situation where we reserve more bytes than we free (as the readable bytes could change over time). But this is only a theory and I was not able to observe this behavior. If this were the case, the fix is to simply provide the number of reserved bytes to `HttpServer.ResourceHandlingHttpChannel` but I am somewhat reluctant to do a fix without being able to reproduce it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217154669","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-217154669","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":217154669,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzE1NDY2OQ==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2016-05-05T13:29:15Z","updated_at":"2016-05-05T13:31:14Z","author_association":"MEMBER","body":"I have also installed Kibana 5.0.0-alpha2, imported the dashboard from topbeat, opened it and set it to auto-refresh every 5 seconds. I could just see that the request breaker (which is used by `BigArrays`) is slowly increasing (a few MB after a few minutes). The inflight requests breaker always resets to zero. I think it just happens to be the victim as it's trying very early during request processing to reserve an amount of bytes (we can also see from the stack trace that actually the parent circuit breaker is tripping, not the inflight requests breaker).\n\nSo I followed the respective `close()` calls that are supposed to free the reserved bytes but there are a lot of places to follow. @dakrone: Is it intended that the number of reserved bytes in the request circuit breaker grow over time as `BigArrays` seems to be intended as some kind of pool or should the reserved number of bytes in `BigArrays` be zero after a request has been processed?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217169018","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-217169018","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":217169018,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzE2OTAxOA==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2016-05-05T14:28:30Z","updated_at":"2016-05-05T14:28:30Z","author_association":"MEMBER","body":"@danielmitterdorfer in my testing the request circuit breaker (backing BigArrays) has always reset to 0 if there are no requests\n\nYou should be able to turn on TRACE logging for the `org.elasticsearch.indices.breaker` package and see _all_ increments and decrements to the breakers (note this is very verbose)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217171552","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-217171552","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":217171552,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzE3MTU1Mg==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2016-05-05T14:38:44Z","updated_at":"2016-05-05T14:38:44Z","author_association":"MEMBER","body":"@dakrone Thanks for the hint. I'll check that.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217196915","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-217196915","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":217196915,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzE5NjkxNQ==","user":{"login":"tylersmalley","id":40265,"node_id":"MDQ6VXNlcjQwMjY1","avatar_url":"https://avatars2.githubusercontent.com/u/40265?v=4","gravatar_id":"","url":"https://api.github.com/users/tylersmalley","html_url":"https://github.com/tylersmalley","followers_url":"https://api.github.com/users/tylersmalley/followers","following_url":"https://api.github.com/users/tylersmalley/following{/other_user}","gists_url":"https://api.github.com/users/tylersmalley/gists{/gist_id}","starred_url":"https://api.github.com/users/tylersmalley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tylersmalley/subscriptions","organizations_url":"https://api.github.com/users/tylersmalley/orgs","repos_url":"https://api.github.com/users/tylersmalley/repos","events_url":"https://api.github.com/users/tylersmalley/events{/privacy}","received_events_url":"https://api.github.com/users/tylersmalley/received_events","type":"User","site_admin":false},"created_at":"2016-05-05T16:08:42Z","updated_at":"2016-05-05T16:08:42Z","author_association":"MEMBER","body":"@danielmitterdorfer I believe to have found what was causing this on my end, but unsure if it should have triggered the the CircuitBreaker. While doing other testing I still had a script running which hit the `cluster/_health` endpoint, paused for 100ms, then repeated. I am fairly certain this was not an issue in 2.3, but I can double check.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217197961","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-217197961","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":217197961,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzE5Nzk2MQ==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2016-05-05T16:12:27Z","updated_at":"2016-05-05T16:12:27Z","author_association":"MEMBER","body":"@tylersmalley Even that should not trip any circuit breaker so we definitely need to investigate. If you can shed more light on how we can reproduce it, that's great.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217227100","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-217227100","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":217227100,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzIyNzEwMA==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2016-05-05T17:59:42Z","updated_at":"2016-05-05T17:59:42Z","author_association":"MEMBER","body":"I was able to reproduce this also on 5.0.0-alpha2 with x-pack installed and kibana hitting the node. Just like @danielmitterdorfer said, the request breaker is increasing very slowly, it looks like there is a leak.\n\nI also tried setting `network.breaker.inflight_requests.overhead: 0.0` and it looks like it is not being taken into account in at least one place (still having bytes added over time instead of all in_flight_request additions being 0)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217271924","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-217271924","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":217271924,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzI3MTkyNA==","user":{"login":"tylersmalley","id":40265,"node_id":"MDQ6VXNlcjQwMjY1","avatar_url":"https://avatars2.githubusercontent.com/u/40265?v=4","gravatar_id":"","url":"https://api.github.com/users/tylersmalley","html_url":"https://github.com/tylersmalley","followers_url":"https://api.github.com/users/tylersmalley/followers","following_url":"https://api.github.com/users/tylersmalley/following{/other_user}","gists_url":"https://api.github.com/users/tylersmalley/gists{/gist_id}","starred_url":"https://api.github.com/users/tylersmalley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tylersmalley/subscriptions","organizations_url":"https://api.github.com/users/tylersmalley/orgs","repos_url":"https://api.github.com/users/tylersmalley/repos","events_url":"https://api.github.com/users/tylersmalley/events{/privacy}","received_events_url":"https://api.github.com/users/tylersmalley/received_events","type":"User","site_admin":false},"created_at":"2016-05-05T20:40:41Z","updated_at":"2016-05-05T20:40:41Z","author_association":"MEMBER","body":"@danielmitterdorfer here is the node script I have to preform the health requests on ES. In it I added a second check to run in parallel for speed up the fault.\n\nhttps://gist.githubusercontent.com/tylersmalley/00105a27a0dd7b86016d78dc65e1bfb1/raw/test.js\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217277457","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-217277457","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":217277457,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzI3NzQ1Nw==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2016-05-05T20:55:56Z","updated_at":"2016-05-05T20:55:56Z","author_association":"MEMBER","body":"This reproduces pretty easily now, building from master (or 5.0.0-alpha2), simple turn on logging and then run Kibana, the periodic health check that kibana does causing it to increase over time.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217775744","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-217775744","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":217775744,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzc3NTc0NA==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2016-05-09T04:54:03Z","updated_at":"2016-05-09T04:54:03Z","author_association":"MEMBER","body":"@dakrone I can reproduce the increase now too but the problem is _not_ the `in_flights_request` breaker but the `request` breaker that keeps increasing. Nevertheless, I'll investigate what's going on.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217804629","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-217804629","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":217804629,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzgwNDYyOQ==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2016-05-09T08:24:55Z","updated_at":"2016-05-09T08:25:25Z","author_association":"MEMBER","body":"I have investigated and now have a minimal reproduction scenario: `curl -XHEAD http://localhost:9200/`\n\nThe problem is that a `XContentBuilder` is created which is backed by a `BigArrays` instance but then we use a constructor of `BytesRestResponse` without a builder. After that we lose track of the `BigArrays` instance and don't free it. This affects at least `RestMainAction` and probably other actions too. I am now working on a fix.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217817676","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-217817676","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":217817676,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzgxNzY3Ng==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2016-05-09T09:28:29Z","updated_at":"2016-05-09T09:28:29Z","author_association":"MEMBER","body":"I have also checked 2.x. It is not affected as the code is structured differently there.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217860373","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-217860373","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":217860373,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzg2MDM3Mw==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2016-05-09T13:13:37Z","updated_at":"2016-05-09T13:13:37Z","author_association":"MEMBER","body":"@tylersmalley The problem is fixed now and the fix will be included in the next release of the 5.0 series. Thanks for reporting and helping on the reproduction. Much appreciated!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217940999","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-217940999","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":217940999,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzk0MDk5OQ==","user":{"login":"tylersmalley","id":40265,"node_id":"MDQ6VXNlcjQwMjY1","avatar_url":"https://avatars2.githubusercontent.com/u/40265?v=4","gravatar_id":"","url":"https://api.github.com/users/tylersmalley","html_url":"https://github.com/tylersmalley","followers_url":"https://api.github.com/users/tylersmalley/followers","following_url":"https://api.github.com/users/tylersmalley/following{/other_user}","gists_url":"https://api.github.com/users/tylersmalley/gists{/gist_id}","starred_url":"https://api.github.com/users/tylersmalley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tylersmalley/subscriptions","organizations_url":"https://api.github.com/users/tylersmalley/orgs","repos_url":"https://api.github.com/users/tylersmalley/repos","events_url":"https://api.github.com/users/tylersmalley/events{/privacy}","received_events_url":"https://api.github.com/users/tylersmalley/received_events","type":"User","site_admin":false},"created_at":"2016-05-09T18:03:13Z","updated_at":"2016-05-09T18:03:13Z","author_association":"MEMBER","body":"Great, thanks @danielmitterdorfer! \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/218142016","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-218142016","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":218142016,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODE0MjAxNg==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2016-05-10T12:26:23Z","updated_at":"2016-05-10T12:26:23Z","author_association":"MEMBER","body":"@dakrone I also checked why this happens:\n\n> I also tried setting network.breaker.inflight_requests.overhead: 0.0 and it looks like it is not being taken into account in at least one place (still having bytes added over time instead of all in_flight_request additions being 0)\n\nIt's caused by the implementation of [`ChildMemoryCircuitBreaker#limit()](https://github.com/elastic/elasticsearch/blob/master/core/src/main/java/org/elasticsearch/common/breaker/ChildMemoryCircuitBreaker.java#L149-L176). As far as I can see the overhead is only taken into account for logging statements but never for actual limiting. To me this does not sound that it's intended that way.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/218191297","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-218191297","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":218191297,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODE5MTI5Nw==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2016-05-10T15:19:34Z","updated_at":"2016-05-10T15:20:34Z","author_association":"MEMBER","body":"@danielmitterdorfer the overhead is taken into account also when comparing against the limit:\n\n``` java\nif (memoryBytesLimit > 0 && newUsedWithOverhead > memoryBytesLimit) {\n    ....\n}\n```\n\nI remember it correctly now (I was misinterpreting what a feature I added did, doh!), the overhead is only for tweaking the estimation of an addition, not to factor into the total at all. This is because the fielddata circuit breaker estimates the amount of memory used but ultimately adjusts with the exact value used, so it should not add the overhead-modified usage, but the actual usage. Only the overhead is used for the _per-addition_ check.\n\nHopefully that clarifies, I was slightly confusing myself there too assuming it was taken into account with the added total amount for the breaker, but the current behavior is correct.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/218381274","html_url":"https://github.com/elastic/elasticsearch/issues/18144#issuecomment-218381274","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18144","id":218381274,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODM4MTI3NA==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2016-05-11T07:19:13Z","updated_at":"2016-05-11T07:19:13Z","author_association":"MEMBER","body":"@dakrone Ah, right. I missed this line... . Thanks for the explanation. Maybe we should add a comment in the code so the next time it comes up we don't have to dig to find this in the ticket again. :) With that explanation I am not sure whether any circuit breaker except the field data circuit breaker should have a user-defined overhead at all. Wdyt?\n","performed_via_github_app":null}]