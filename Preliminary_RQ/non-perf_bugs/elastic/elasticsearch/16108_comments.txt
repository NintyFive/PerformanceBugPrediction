[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/173151476","html_url":"https://github.com/elastic/elasticsearch/issues/16108#issuecomment-173151476","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16108","id":173151476,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzE1MTQ3Ng==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-01-20T10:00:49Z","updated_at":"2016-01-20T10:00:49Z","author_association":"MEMBER","body":"> As I can see in Filter Auto Caching section, the control has been taken away from users for disabling caching in known cases.\n\nThat's partly true, in a boolean query the `filter` clauses are cacheable whereas `must` and `should`clauses are not. \nThat's also partly true ( ;) ) because the should and must clauses are cacheable if they appear in a context where the score is not needed. \nI agree that the fine grain tuning of the cache is not easy in 2.x and that we'll need to add some documentations about it. @jpountz I also agree that it could be useful to add (re-add ?)  a clear statement \"not to cache\" for each query that could be eligible to the cache. It is sometimes difficult to control it especially because some rewrite of the queries are not controllable by the user (constant score query are sometimes added under the hood).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/173163666","html_url":"https://github.com/elastic/elasticsearch/issues/16108#issuecomment-173163666","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16108","id":173163666,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzE2MzY2Ng==","user":{"login":"santanusinha","id":1593063,"node_id":"MDQ6VXNlcjE1OTMwNjM=","avatar_url":"https://avatars2.githubusercontent.com/u/1593063?v=4","gravatar_id":"","url":"https://api.github.com/users/santanusinha","html_url":"https://github.com/santanusinha","followers_url":"https://api.github.com/users/santanusinha/followers","following_url":"https://api.github.com/users/santanusinha/following{/other_user}","gists_url":"https://api.github.com/users/santanusinha/gists{/gist_id}","starred_url":"https://api.github.com/users/santanusinha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/santanusinha/subscriptions","organizations_url":"https://api.github.com/users/santanusinha/orgs","repos_url":"https://api.github.com/users/santanusinha/repos","events_url":"https://api.github.com/users/santanusinha/events{/privacy}","received_events_url":"https://api.github.com/users/santanusinha/received_events","type":"User","site_admin":false},"created_at":"2016-01-20T10:27:03Z","updated_at":"2016-01-20T10:27:03Z","author_association":"NONE","body":"@jimferenczi hmm .. yes, query rewrites might cause an issue here, but if the intent of the user is to _not_ do caching for a particular query, maybe cache=false should be set in the rewritten queries also .. right?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/173168539","html_url":"https://github.com/elastic/elasticsearch/issues/16108#issuecomment-173168539","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16108","id":173168539,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzE2ODUzOQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-01-20T10:44:50Z","updated_at":"2016-01-20T10:44:50Z","author_association":"MEMBER","body":"@santanusinha yes this is my point. If the user knows that the query should not be cached (even if the score is not needed) then we should have something in the query that state clearly that we don't want this part of the query to enter the filter cache.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/173171419","html_url":"https://github.com/elastic/elasticsearch/issues/16108#issuecomment-173171419","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16108","id":173171419,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzE3MTQxOQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-01-20T11:00:00Z","updated_at":"2016-01-20T11:00:00Z","author_association":"CONTRIBUTOR","body":"> Typically analysts might run some one-off queries over older time ranges causing the filter cache to blow up without any reason\n\nThis should not longer happen as filters will only be cached after repeated use - this is one of the reasons for the rewrite, to stop overcaching filters by default.  Really, this is something that the user should't have to think about; Elasticsearch should be smart enough to figure it out for itself.  Of course, these algorithms need iteration to improve.\n\nAnother feature which is already there, but needs improvement, is [shard request caching](https://www.elastic.co/guide/en/elasticsearch/reference/2.1/shard-request-cache.html)... to explain: a typical use case is showing page views per hour for the last month.  Using the index-per-day model, only the data for today's index is changing.  The request cache (you need to turn on caching) will cache the aggregation results for all of the other indices, and only recalculate the results for today's index - huge improvement.\n\nBut there are a couple of issues that we are working on fixing. The first is that the JSON request must be exactly the same in order to retrieve the cached version.  This can be tricky because the order of keys in JSON can vary.  The search refactoring happening in https://github.com/elastic/elasticsearch/issues/10217 will fix this because we'll use the parsed representation of the query for caching instead of the JSON.\n\nThe second is that these queries usually use a time range.  If you use `now`, that time will change on every request and so won't use the cache.  If you use `now/h` (now rounded to the nearest hour) then it can use the cached entry for the whole hour.\n\nOnce the search refactoring is done, we can improve this situation by checking whether the min and max values in range query are lower/higher respectively than the min/max values for a particular shard and, if so, rewrite the range query as a match_all. This would mean that, even though `now` is used with millisecond resolution, the request cache would still work.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/173173123","html_url":"https://github.com/elastic/elasticsearch/issues/16108#issuecomment-173173123","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16108","id":173173123,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzE3MzEyMw==","user":{"login":"santanusinha","id":1593063,"node_id":"MDQ6VXNlcjE1OTMwNjM=","avatar_url":"https://avatars2.githubusercontent.com/u/1593063?v=4","gravatar_id":"","url":"https://api.github.com/users/santanusinha","html_url":"https://github.com/santanusinha","followers_url":"https://api.github.com/users/santanusinha/followers","following_url":"https://api.github.com/users/santanusinha/following{/other_user}","gists_url":"https://api.github.com/users/santanusinha/gists{/gist_id}","starred_url":"https://api.github.com/users/santanusinha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/santanusinha/subscriptions","organizations_url":"https://api.github.com/users/santanusinha/orgs","repos_url":"https://api.github.com/users/santanusinha/repos","events_url":"https://api.github.com/users/santanusinha/events{/privacy}","received_events_url":"https://api.github.com/users/santanusinha/received_events","type":"User","site_admin":false},"created_at":"2016-01-20T11:06:15Z","updated_at":"2016-01-20T11:06:15Z","author_association":"NONE","body":"Thanks for the explanation. Will keep my eyes out for issues and report back if we see anything.\n","performed_via_github_app":null}]