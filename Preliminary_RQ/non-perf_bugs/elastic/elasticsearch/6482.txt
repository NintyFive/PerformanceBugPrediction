{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/6482","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6482/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6482/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6482/events","html_url":"https://github.com/elastic/elasticsearch/issues/6482","id":35577898,"node_id":"MDU6SXNzdWUzNTU3Nzg5OA==","number":6482,"title":"write consistency levels -- quorum of two is two","user":{"login":"shikhar","id":74267,"node_id":"MDQ6VXNlcjc0MjY3","avatar_url":"https://avatars1.githubusercontent.com/u/74267?v=4","gravatar_id":"","url":"https://api.github.com/users/shikhar","html_url":"https://github.com/shikhar","followers_url":"https://api.github.com/users/shikhar/followers","following_url":"https://api.github.com/users/shikhar/following{/other_user}","gists_url":"https://api.github.com/users/shikhar/gists{/gist_id}","starred_url":"https://api.github.com/users/shikhar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shikhar/subscriptions","organizations_url":"https://api.github.com/users/shikhar/orgs","repos_url":"https://api.github.com/users/shikhar/repos","events_url":"https://api.github.com/users/shikhar/events{/privacy}","received_events_url":"https://api.github.com/users/shikhar/received_events","type":"User","site_admin":false},"labels":[{"id":145572580,"node_id":"MDU6TGFiZWwxNDU1NzI1ODA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/CRUD","name":":Distributed/CRUD","color":"0e8a16","default":false,"description":"A catch all label for issues around indexing, updating and getting a doc by id. Not search."},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null},{"id":111053151,"node_id":"MDU6TGFiZWwxMTEwNTMxNTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/resiliency","name":"resiliency","color":"009800","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2014-06-12T12:08:20Z","updated_at":"2016-09-27T13:03:42Z","closed_at":"2016-09-27T12:46:39Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In `TransportShardReplicationOperationAction`'s verification of the write consistency level where it checks before executing the write if sufficient shards are available,\n\n``` java\n                    int requiredNumber = 1;\n                    if (consistencyLevel == WriteConsistencyLevel.QUORUM && shardIt.size() > 2) {\n                        // only for more than 2 in the number of shardIt it makes sense, otherwise its 1 shard with 1 replica, quorum is 1 (which is what it is initialized to)\n                        requiredNumber = (shardIt.size() / 2) + 1;\n                    } else if (consistencyLevel == WriteConsistencyLevel.ALL) {\n                        requiredNumber = shardIt.size();\n                    }\n```\n\nthe `(n / 2) + 1)` should apply even with just 2 shards, giving a `requiredNumber = 2`. This is the commonly accepted definition.\n","closed_by":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"performed_via_github_app":null}