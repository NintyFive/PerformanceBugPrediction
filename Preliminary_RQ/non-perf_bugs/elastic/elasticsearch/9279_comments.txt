[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/69802853","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-69802853","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":69802853,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODAyODUz","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","site_admin":false},"created_at":"2015-01-13T19:24:02Z","updated_at":"2015-01-13T19:24:02Z","author_association":"CONTRIBUTOR","body":"+1, I think it's dangerous to allow per-document analyzers.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/70140270","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-70140270","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":70140270,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMTQwMjcw","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-01-15T18:56:52Z","updated_at":"2015-01-15T18:56:52Z","author_association":"CONTRIBUTOR","body":"+1\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/70251726","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-70251726","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":70251726,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjUxNzI2","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-01-16T13:15:41Z","updated_at":"2015-01-16T13:15:41Z","author_association":"CONTRIBUTOR","body":"+1 - the `_analyzer` field is trappy and produces poor results\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/70251922","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-70251922","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":70251922,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjUxOTIy","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2015-01-16T13:17:12Z","updated_at":"2015-01-16T13:17:12Z","author_association":"MEMBER","body":"+1, there are sufficient workarounds and `_analyzer` is not a good way to handle things\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/70262908","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-70262908","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":70262908,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjYyOTA4","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2015-01-16T14:45:29Z","updated_at":"2015-01-16T14:45:29Z","author_association":"MEMBER","body":"IMHO it's tricky to just remove (as opposed to adding) a feature that enables people to do advanced things (albeit complex and trappy). I agree we should remove this long term (it is trappy and confuses people) but I think we need to do this gradually and allow people to object and educate us if they are using them.\n\nMy suggestion here would be - instead of removing the code, deprecate it and make throw an exception when it's being used and allow people to set a settings to re-enable it again. The exception should clearly communicate that we're going to remove this feature and point people to a place to comment (here?). After a period (6m?) we can evaluate what we heard and remove the code (or be surprised and do something else). \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/70264422","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-70264422","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":70264422,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjY0NDIy","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-01-16T14:55:49Z","updated_at":"2015-01-16T14:55:49Z","author_association":"CONTRIBUTOR","body":"On the contrary I think we should take advantage of this major release to remove it.\n\nMappings today are very complex, in particular because of corner-cases that we support (per-doc analyzers, optional document type in paths, custom index names, per-type mappings, ...). If we do not take advantage of this major release to clean things up, we will never be able to.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/70265859","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-70265859","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":70265859,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjY1ODU5","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-01-16T15:05:35Z","updated_at":"2015-01-16T15:05:35Z","author_association":"CONTRIBUTOR","body":"@jpountz that's not completely true.  We should try to provide a deprecation period where possible, so that upgrading is not a huge obstacle.  If we deprecate now, we can remove in the next major version.  It's not like we'll never have the chance again.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/70282537","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-70282537","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":70282537,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjgyNTM3","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-01-16T16:46:21Z","updated_at":"2015-01-16T16:46:21Z","author_association":"CONTRIBUTOR","body":"I dont see it: if we don't make cleanups necessary to improve things, then why should they upgrade? And in order for them to fix it, they need to rethink how they are indexing their content anyway.\n\nSo I don't think its useful to let backwards compatibility drive things for this reason. Because it prevents actual improvements from happening, and while allowing those users to upgrade to the next release without changing things, they don't get any improvements either, so there is little point.\n\nIts just encourages stagnation, prevents change of any significance from ever happening (or delays it so long, that people give up).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/70282850","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-70282850","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":70282850,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjgyODUw","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-01-16T16:48:11Z","updated_at":"2015-01-16T16:48:11Z","author_association":"CONTRIBUTOR","body":"By the way, if the whole point is just to give the user advance warning, then deprecate this crap in 1.5. Problem solved.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/70285721","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-70285721","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":70285721,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjg1NzIx","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","site_admin":false},"created_at":"2015-01-16T17:05:10Z","updated_at":"2015-01-16T17:05:10Z","author_association":"CONTRIBUTOR","body":"+1 to deprecate in 1.5 and remove in 2.0.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/70291747","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-70291747","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":70291747,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjkxNzQ3","user":{"login":"uboness","id":211019,"node_id":"MDQ6VXNlcjIxMTAxOQ==","avatar_url":"https://avatars3.githubusercontent.com/u/211019?v=4","gravatar_id":"","url":"https://api.github.com/users/uboness","html_url":"https://github.com/uboness","followers_url":"https://api.github.com/users/uboness/followers","following_url":"https://api.github.com/users/uboness/following{/other_user}","gists_url":"https://api.github.com/users/uboness/gists{/gist_id}","starred_url":"https://api.github.com/users/uboness/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uboness/subscriptions","organizations_url":"https://api.github.com/users/uboness/orgs","repos_url":"https://api.github.com/users/uboness/repos","events_url":"https://api.github.com/users/uboness/events{/privacy}","received_events_url":"https://api.github.com/users/uboness/received_events","type":"User","site_admin":false},"created_at":"2015-01-16T17:44:41Z","updated_at":"2015-01-16T17:44:41Z","author_association":"CONTRIBUTOR","body":"+1 on deprecation in 1.5 and remove in 2.0\n\n## \n\nUri Boness | Founder | Elasticsearch | www.elas (file:///Applications/Sparrow.app/Contents/Resources/www.elasticsearch.com)ticsearch.com (file:///Applications/Sparrow.app/Contents/Resources/www.elasticsearch.com) | +31 20 794 7300\n\nOn Friday 16 January 2015 at 18:05, Michael McCandless wrote:\n\n> +1 to deprecate in 1.5 and remove in 2.0.\n> \n> —\n> Reply to this email directly or view it on GitHub (https://github.com/elasticsearch/elasticsearch/issues/9279#issuecomment-70285721).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/71263830","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-71263830","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":71263830,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMjYzODMw","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2015-01-23T20:53:12Z","updated_at":"2015-01-23T20:53:12Z","author_association":"MEMBER","body":"While I agree that the `_analyzer` feature in mapping is dangerous and we might be better off without it, I feel kind of iffy about totally removing an ability to specify an alternative analyzer during search time. In other words something like \n\n```\n{\n    \"match\" : {\n        \"message\" : {\n            \"query\" : \"this is a test\",\n            \"analyzer\" : \"my_analyzer\"\n        }\n    }\n}\n```\n\nis not going to be possible. Isn't it kind of drastic?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/71265289","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-71265289","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":71265289,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMjY1Mjg5","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2015-01-23T21:02:18Z","updated_at":"2015-01-23T21:02:18Z","author_association":"MEMBER","body":"I am worried about scenario when users want to search the same field with and without synonyms for example and then score exact match higher. Maybe we can separate this PR into _analyzer mapper part and query part since we seem to agree on the first?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/71265401","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-71265401","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":71265401,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMjY1NDAx","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2015-01-23T21:03:12Z","updated_at":"2015-01-23T21:03:12Z","author_association":"MEMBER","body":"Yes, I misread this and thought this was only to remove `_analyzer`, I think we should split up the issues into one for removing `_analyzer` and the query part.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/71270261","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-71270261","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":71270261,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMjcwMjYx","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2015-01-23T21:37:23Z","updated_at":"2015-01-23T21:38:06Z","author_association":"MEMBER","body":"Ok, I will remove that part from the PR.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/82325656","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-82325656","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":82325656,"node_id":"MDEyOklzc3VlQ29tbWVudDgyMzI1NjU2","user":{"login":"synhershko","id":212252,"node_id":"MDQ6VXNlcjIxMjI1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/212252?v=4","gravatar_id":"","url":"https://api.github.com/users/synhershko","html_url":"https://github.com/synhershko","followers_url":"https://api.github.com/users/synhershko/followers","following_url":"https://api.github.com/users/synhershko/following{/other_user}","gists_url":"https://api.github.com/users/synhershko/gists{/gist_id}","starred_url":"https://api.github.com/users/synhershko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/synhershko/subscriptions","organizations_url":"https://api.github.com/users/synhershko/orgs","repos_url":"https://api.github.com/users/synhershko/repos","events_url":"https://api.github.com/users/synhershko/events{/privacy}","received_events_url":"https://api.github.com/users/synhershko/received_events","type":"User","site_admin":false},"created_at":"2015-03-17T12:46:37Z","updated_at":"2015-03-17T12:46:37Z","author_association":"CONTRIBUTOR","body":"Huge -1, unfortunately I'm only seeing this now\n\nUsing `_analyzer` has made my life a lot easier when dealing with multi-lingual content. I've explained an example of possible usage and why field per language may not be sufficient in length here: https://skillsmatter.com/skillscasts/4968-approaches-to-multi-lingual-text-search-with-elasticsearch-and-lucene\n\nTo me, for full-text search, this is one key differentiator from Solr. The ability to set an analyzer per-document is so helpful deprecating this will break many existing usages I know of.\n\nMost of the comments against `_analyzer` are of the \"don't shoot yourself in the foot\" type. Sure it can be misused to influence scoring the wrong way etc, but as long as you know what you are doing, this feature is so precious.\n\nFWIW, ngrams are NOT an alternative for _analyzer under almost no circumstance. Please see the linked talk above for concrete examples.\n\nI'd vote to marking this an \"expert API\" and discourage usage instead of complete deprecation, to allow advanced users make the most out of it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/86907163","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-86907163","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":86907163,"node_id":"MDEyOklzc3VlQ29tbWVudDg2OTA3MTYz","user":{"login":"cyclomarc","id":5204113,"node_id":"MDQ6VXNlcjUyMDQxMTM=","avatar_url":"https://avatars3.githubusercontent.com/u/5204113?v=4","gravatar_id":"","url":"https://api.github.com/users/cyclomarc","html_url":"https://github.com/cyclomarc","followers_url":"https://api.github.com/users/cyclomarc/followers","following_url":"https://api.github.com/users/cyclomarc/following{/other_user}","gists_url":"https://api.github.com/users/cyclomarc/gists{/gist_id}","starred_url":"https://api.github.com/users/cyclomarc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cyclomarc/subscriptions","organizations_url":"https://api.github.com/users/cyclomarc/orgs","repos_url":"https://api.github.com/users/cyclomarc/repos","events_url":"https://api.github.com/users/cyclomarc/events{/privacy}","received_events_url":"https://api.github.com/users/cyclomarc/received_events","type":"User","site_admin":false},"created_at":"2015-03-27T11:33:54Z","updated_at":"2015-03-27T11:33:54Z","author_association":"NONE","body":"-1.  We will no longer be able to process multi-lingual content and that was just the reason to use Elastic Search!\n\nLet me give an example:\n\nWe have a multi-tenant content management system mainly used in Europe.  The content entered in this system is thus always a combination of french, dutch, english, german, etc. - total of 15 languages.  \n\nWhen a user enters content, we determine the language of that content and when storing the content in ES, we use _analyzer pointing to a property specifying the analyzer to be used. So dutch content is indexed in dutch, french in french, etc.\n\nAt query time, we apply a similar scenario.  We determine the language in which the user is performing the query and then search and specify the analyzer to be used.  This works very well, even for german language.  This is also the method used by Wordpress blogs.\n\nRemoving _analyzer would mean that we need to create for each content property (we have in total some 20 document types) 15 duplicates (e.g. comment_english, comment_french, comment_german, etc.).  This would result in content being spread in a lot of fields and at query time we will then have to modify all our queries to search in each of these 15 fields.  You might argue that you only need to search in one field, but that is not correct.  If I search for a product name for example, then this name is potentially included in the body text in various language versions and we thus need to search each of these.  Scoring will fail as this is no longer based on one field, etc.\n\nThis is a serious regression and I have the feeling that this decision is taken without considering typical multi-lingual scenarios that apply to Europe.  I agree that for certain content it is better to store in 2 fields and not mix languages, but for content of which you do not know in advance what language it is, one field is the only answer.  \n\nLooking forward to suggestions on how to work with multi-lingual content as of version 2.0 - I thought multi-langual content was one of the strong points of Elastic search.\n\nThe use of _analyzer is described as best practice in most of the official Elastic Search books.  I personally find that this is not a feature that should be removed ....  \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/86937108","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-86937108","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":86937108,"node_id":"MDEyOklzc3VlQ29tbWVudDg2OTM3MTA4","user":{"login":"suprememoocow","id":594566,"node_id":"MDQ6VXNlcjU5NDU2Ng==","avatar_url":"https://avatars0.githubusercontent.com/u/594566?v=4","gravatar_id":"","url":"https://api.github.com/users/suprememoocow","html_url":"https://github.com/suprememoocow","followers_url":"https://api.github.com/users/suprememoocow/followers","following_url":"https://api.github.com/users/suprememoocow/following{/other_user}","gists_url":"https://api.github.com/users/suprememoocow/gists{/gist_id}","starred_url":"https://api.github.com/users/suprememoocow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/suprememoocow/subscriptions","organizations_url":"https://api.github.com/users/suprememoocow/orgs","repos_url":"https://api.github.com/users/suprememoocow/repos","events_url":"https://api.github.com/users/suprememoocow/events{/privacy}","received_events_url":"https://api.github.com/users/suprememoocow/received_events","type":"User","site_admin":false},"created_at":"2015-03-27T13:17:17Z","updated_at":"2015-03-27T13:17:17Z","author_association":"NONE","body":"-1, for all the reasons put forward by @cyclomarc and @synhershko above.\n\nWe're using a similar model to the one @cyclomarc described above, additionally supporting Asian and Middle-Eastern languages: we determine the language using [cld2](https://code.google.com/p/cld2/) at document insertion time and again at query time and apply the correct analyser. Granted, it was fairly tricky to setup, but it works very well for us.\n\nWith many languages and multiple fields for analysis, the field-per-language solution would quickly become difficult to manage and query, especially since we would need to query across all languages fields as some terms such as inline code snippets could match multiple languages.\n\nHope that this decision is reconsidered, and thanks for an incredible product. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/86937579","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-86937579","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":86937579,"node_id":"MDEyOklzc3VlQ29tbWVudDg2OTM3NTc5","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-03-27T13:18:54Z","updated_at":"2015-03-27T13:18:54Z","author_association":"CONTRIBUTOR","body":"I don't think mixing analyzers in the same field is a good approach here. Instead, if you need some generic field to handle issues like product names where you are unsure about the language, consider adding a generic 'comment' field indexed in a very simple way, like with standardanalyzer.\n\nUsing this approach is easy and flexible, users can search 'comment' across all languages with a simple approach that doesn't use any stemming or other language-specific features, or they can search 'comment_de' to just search german content with german-specific analysis.\n\nBut don't mix the output of german analyzer and french analyzer in the same field and think that this is \"good\". This is an antipattern that will result in conflation of many unrelated terms, more than just what occurs in the language naturally, because operations like stemming will just make it much worse.\n\nFurthermore, discarding the language by shoving it all in one field can _really_ hurt search results. One of the worst things you can do is to return a document in a language the user does not understand. This is never a relevant search result.\n\nI don't honestly know why people want to do this. Maybe its a fear that having a field for each language is somehow more expensive than cramming it all in one field. But for an inverted index, that is just not true. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/86939278","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-86939278","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":86939278,"node_id":"MDEyOklzc3VlQ29tbWVudDg2OTM5Mjc4","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2015-03-27T13:26:46Z","updated_at":"2015-03-27T13:26:46Z","author_association":"MEMBER","body":"I agree, as the one who added this feature (it was recommended in Lucene in Action, which is where people asked for this feature in the early days of ES to begin with), we learned through the years that it leads to bad user experience, and the state of lucene has progressed tremendously as well (standard analyzer for example became significantly better). The way to solve it, as @rmuir and @rjernst suggested, is slightly more work, but results in exponentially better user experience.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/86942769","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-86942769","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":86942769,"node_id":"MDEyOklzc3VlQ29tbWVudDg2OTQyNzY5","user":{"login":"synhershko","id":212252,"node_id":"MDQ6VXNlcjIxMjI1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/212252?v=4","gravatar_id":"","url":"https://api.github.com/users/synhershko","html_url":"https://github.com/synhershko","followers_url":"https://api.github.com/users/synhershko/followers","following_url":"https://api.github.com/users/synhershko/following{/other_user}","gists_url":"https://api.github.com/users/synhershko/gists{/gist_id}","starred_url":"https://api.github.com/users/synhershko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/synhershko/subscriptions","organizations_url":"https://api.github.com/users/synhershko/orgs","repos_url":"https://api.github.com/users/synhershko/repos","events_url":"https://api.github.com/users/synhershko/events{/privacy}","received_events_url":"https://api.github.com/users/synhershko/received_events","type":"User","site_admin":false},"created_at":"2015-03-27T13:39:41Z","updated_at":"2015-03-27T13:39:41Z","author_association":"CONTRIBUTOR","body":"May I recommend an inner implementation that is based on @rmuir and @rjernst 's approach but is still supported by ES's API? e.g. _analyzer will be used for a rule to which field to index based on the field mapping, for instance, as opposed to which analyzer to use for one field\n\nMy main concern here is with ES's API and ease of use. The _analyzer field is a clear winner in many installations I've worked with, and I can see a way it can still be around but with different implementation under the hood.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/86943669","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-86943669","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":86943669,"node_id":"MDEyOklzc3VlQ29tbWVudDg2OTQzNjY5","user":{"login":"cyclomarc","id":5204113,"node_id":"MDQ6VXNlcjUyMDQxMTM=","avatar_url":"https://avatars3.githubusercontent.com/u/5204113?v=4","gravatar_id":"","url":"https://api.github.com/users/cyclomarc","html_url":"https://github.com/cyclomarc","followers_url":"https://api.github.com/users/cyclomarc/followers","following_url":"https://api.github.com/users/cyclomarc/following{/other_user}","gists_url":"https://api.github.com/users/cyclomarc/gists{/gist_id}","starred_url":"https://api.github.com/users/cyclomarc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cyclomarc/subscriptions","organizations_url":"https://api.github.com/users/cyclomarc/orgs","repos_url":"https://api.github.com/users/cyclomarc/repos","events_url":"https://api.github.com/users/cyclomarc/events{/privacy}","received_events_url":"https://api.github.com/users/cyclomarc/received_events","type":"User","site_admin":false},"created_at":"2015-03-27T13:43:19Z","updated_at":"2015-03-27T13:43:19Z","author_association":"NONE","body":"@kimchy At first site this might indeed just look like \"add an extra property for each language\" and when you search, simply \"search in each field\".  But in reality if you have 20 document types with multilingual content and 15 languages, the extension of the queries is exponential.  And thus also the risk on errors and maintenance.  Consider also the day that you need to add language variant 16.  All indexes and documents have to be rebuild.  The same when you want to migrate from 1.4 to 2.0; all data to be reindexed, etc.  This is not \"slightly\" more work ... this is a project on its own requiring a lot of analysis, testing and migration work. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/86946180","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-86946180","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":86946180,"node_id":"MDEyOklzc3VlQ29tbWVudDg2OTQ2MTgw","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2015-03-27T13:55:11Z","updated_at":"2015-03-27T13:55:11Z","author_association":"MEMBER","body":"@cyclomarc here is how I think you can use it relatively simply, you can create an index template where fields matching *_de for example use a specific analyzer, and *_jp the same, and *_std where standard is used. Then, you only defined it in one place, you control the analysis chain for each language (as sometimes you want stemming, and sometimes you don't).\n\nThen, when you query, you can decide how to query, you can do `content_*`, `*_de`, `*_std, *_de`, to search across multiple fields if you want.\n\nA new language introduced just means updating the index template, and then starting to index the data with the new language, and so on.\n\n@synhershko the suggestion above I think is not too complicated. Doing things internally is hard, like what qualifies as the best language analyzer chain, what happens with languages you don't know, ... . The above is a one time setup of an index template, and updating the client code to put the data in the relevant fields, instead of settings the _analyzer field.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/87039770","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-87039770","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":87039770,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDM5Nzcw","user":{"login":"gibrown","id":820871,"node_id":"MDQ6VXNlcjgyMDg3MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/820871?v=4","gravatar_id":"","url":"https://api.github.com/users/gibrown","html_url":"https://github.com/gibrown","followers_url":"https://api.github.com/users/gibrown/followers","following_url":"https://api.github.com/users/gibrown/following{/other_user}","gists_url":"https://api.github.com/users/gibrown/gists{/gist_id}","starred_url":"https://api.github.com/users/gibrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gibrown/subscriptions","organizations_url":"https://api.github.com/users/gibrown/orgs","repos_url":"https://api.github.com/users/gibrown/repos","events_url":"https://api.github.com/users/gibrown/events{/privacy}","received_events_url":"https://api.github.com/users/gibrown/received_events","type":"User","site_admin":false},"created_at":"2015-03-27T18:18:34Z","updated_at":"2015-03-27T18:18:34Z","author_association":"CONTRIBUTOR","body":"@kimchy just starting to wrap my head around this, but it seems like the proposed solution requires knowing every language your content is in. Feels like there are some real difficulties in how you manage indices when there are hundreds of languages and tens of analyzed fields. The search quality questions are certainly valid, but in practice we haven't seen problems with them.\n\nWe also do a lot of language detection of our content, and I am not sure how failures to correctly detect the language would interact with content being in different fields. So all our queries will probably need to query every field even if we are fairly certain the query is in one language because we may have detected the language wrong for one of the documents we are trying to search. Missing documents completely are much worse than suboptimal ranking. For really great search you need meta data beyond just the text anyways.\n\nAre there examples of real mappings, indexing, and querying that work on tens or a hundred languages? Any performance tests of what happens when your query has to run through 400 analyzers for each separate field rather than just a single analyzer that gets applied to 4 fields?\n\nI agree that the current API is confusing, but not sure just removing features is enough to make things less confusing when it comes to multi-lingual.\n\nI need to go off and try building a different mapping and querying to understand the implications. (probably won't happen very soon)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/87528495","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-87528495","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":87528495,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NTI4NDk1","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-03-30T03:20:10Z","updated_at":"2015-03-30T03:20:10Z","author_association":"CONTRIBUTOR","body":"As far as tons of languages, there have been some studies on the different approaches you can take (e.g. http://ceur-ws.org/Vol-1171/CLEF2005wn-WebCLEF-MacdonaldEt2005.pdf). Note that there, the best overall approach is to basically do nothing fancy at all, like what StandardAnalyzer is doing :) \n\nI think this is a valid approach for a lot of use cases where many languages are involved. Its one thing that motivated me to work on the icu analysis in lucene: use everything you know from unicode to do the best you can in a consistent way. And since lucene 3.1 StandardAnalyzer has a lot of the smarts that ICU has anyway[1], so I argue the \"naive default\" in many cases is a good consistent approach. I know for example, hathitrust.org uses this approach with over 200 languages and they have blogs about it you can find.\n\nI am just mentioning this again, before considering super-complicated stuff to handle tons of fields \\* tons of languages, think about the result quality, sometimes keeping it simple is best.\n\n[1]. Yes, icu still has more choices, like normalization and folding and word segmentation options for asian languages and lots of corner cases like greek/german casing, but in general Standard is pretty good. You can always use the icu plugin if you want those extras.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/95082318","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-95082318","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":95082318,"node_id":"MDEyOklzc3VlQ29tbWVudDk1MDgyMzE4","user":{"login":"lvernaillen","id":4180374,"node_id":"MDQ6VXNlcjQxODAzNzQ=","avatar_url":"https://avatars2.githubusercontent.com/u/4180374?v=4","gravatar_id":"","url":"https://api.github.com/users/lvernaillen","html_url":"https://github.com/lvernaillen","followers_url":"https://api.github.com/users/lvernaillen/followers","following_url":"https://api.github.com/users/lvernaillen/following{/other_user}","gists_url":"https://api.github.com/users/lvernaillen/gists{/gist_id}","starred_url":"https://api.github.com/users/lvernaillen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lvernaillen/subscriptions","organizations_url":"https://api.github.com/users/lvernaillen/orgs","repos_url":"https://api.github.com/users/lvernaillen/repos","events_url":"https://api.github.com/users/lvernaillen/events{/privacy}","received_events_url":"https://api.github.com/users/lvernaillen/received_events","type":"User","site_admin":false},"created_at":"2015-04-22T08:58:23Z","updated_at":"2015-04-24T08:43:43Z","author_association":"NONE","body":"@kimchy I am trying the alternative you proposed using an index template with separate fields for each language instead of the deprecated _analyzer. You mentioned _index template_, but do you actually mean using _dynamic templates_ instead of index templates? Can you confirm this?\n\nIf you mean _dynamic templates_, then the elasticsearch guide contains an example of just that: http://www.elastic.co/guide/en/elasticsearch/guide/current/custom-dynamic-mapping.html#dynamic-templates\nIn that example field names ending in `_es` will use the spanish analyzer. All other supported languages can be added in the same way. That dynamic template can be added to the `_default_` mapping so you don't have to repeat it for all types.\n\nYou mentioned \"A new language introduced just means updating the index template\". But since an index template is only applied when an index is created, changing the template after that will not affect already created indexes. You would also need to update the already created indexes.\nUsing dynamic mapping that is possible since they are named to allow for simple merge behavior. A new mapping, just with a new template can be \"put\" and that template will be added, or if it has the same name, the template will be replaced.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/95242160","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-95242160","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":95242160,"node_id":"MDEyOklzc3VlQ29tbWVudDk1MjQyMTYw","user":{"login":"lvernaillen","id":4180374,"node_id":"MDQ6VXNlcjQxODAzNzQ=","avatar_url":"https://avatars2.githubusercontent.com/u/4180374?v=4","gravatar_id":"","url":"https://api.github.com/users/lvernaillen","html_url":"https://github.com/lvernaillen","followers_url":"https://api.github.com/users/lvernaillen/followers","following_url":"https://api.github.com/users/lvernaillen/following{/other_user}","gists_url":"https://api.github.com/users/lvernaillen/gists{/gist_id}","starred_url":"https://api.github.com/users/lvernaillen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lvernaillen/subscriptions","organizations_url":"https://api.github.com/users/lvernaillen/orgs","repos_url":"https://api.github.com/users/lvernaillen/repos","events_url":"https://api.github.com/users/lvernaillen/events{/privacy}","received_events_url":"https://api.github.com/users/lvernaillen/received_events","type":"User","site_admin":false},"created_at":"2015-04-22T15:44:25Z","updated_at":"2015-04-22T16:27:22Z","author_association":"NONE","body":"@kimchy Some other issues come up while trying the alternative you proposed. Using wildcards in fieldnames is not always supported...\n- a simple `match` query or a `more_like_this` query don't seem to support wildcards for fieldnames (although it does work in `multi_match`), so a search for `content_*` (all languages, as shown below) doesn't return any results while `content_en` does return a result. This would mean we need to specify the content field for each language which needs updating when a language is added.\n\n```\n\"query\":{\n  \"more_like_this\": {\n    \"like_text\": \"foo\",\n    \"fields\": [\n      \"content_*\"\n    ],\n    \"min_term_freq\" : 1,\n    \"min_doc_freq\": 1\n  }\n}\n```\n- using wildcards in the `fields` section, specifying which fields to return, is also not posssible. So when searching in all languages you cannot simply ask to return all languages as shown below, you need to specify the content field for each language which needs updating when a language is added.\n\n```\n\"fields\":[\n  \"id\",\n  \"content_*\"\n]\n```\n\nI am aware that you can prevent using `content.*` to search in all languages by additionally having a content field that uses a simple non-language-specific analyzer (content.std for example). However when querying that field you lose the power stemming and stop-word filters.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/188190478","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-188190478","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":188190478,"node_id":"MDEyOklzc3VlQ29tbWVudDE4ODE5MDQ3OA==","user":{"login":"malaki12003","id":4834695,"node_id":"MDQ6VXNlcjQ4MzQ2OTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4834695?v=4","gravatar_id":"","url":"https://api.github.com/users/malaki12003","html_url":"https://github.com/malaki12003","followers_url":"https://api.github.com/users/malaki12003/followers","following_url":"https://api.github.com/users/malaki12003/following{/other_user}","gists_url":"https://api.github.com/users/malaki12003/gists{/gist_id}","starred_url":"https://api.github.com/users/malaki12003/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/malaki12003/subscriptions","organizations_url":"https://api.github.com/users/malaki12003/orgs","repos_url":"https://api.github.com/users/malaki12003/repos","events_url":"https://api.github.com/users/malaki12003/events{/privacy}","received_events_url":"https://api.github.com/users/malaki12003/received_events","type":"User","site_admin":false},"created_at":"2016-02-24T10:53:25Z","updated_at":"2016-02-24T10:53:25Z","author_association":"NONE","body":"-1. We will no longer be able to process multi-lingual content. if I try to replace with  having one field per language. This requires slight modifications to client code for indexing (copy data into the field for the appropriate language, instead of specifying the language in a field) and querying (query the appropriate language field, instead of selecting an analyzer for that language. In addition, another cost is that I need to develop a custom serialize/deserialize to  have proper java object in my code. Please go back and let to have this feature again.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/311670202","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-311670202","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":311670202,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMTY3MDIwMg==","user":{"login":"SimonSteinberger","id":1267443,"node_id":"MDQ6VXNlcjEyNjc0NDM=","avatar_url":"https://avatars0.githubusercontent.com/u/1267443?v=4","gravatar_id":"","url":"https://api.github.com/users/SimonSteinberger","html_url":"https://github.com/SimonSteinberger","followers_url":"https://api.github.com/users/SimonSteinberger/followers","following_url":"https://api.github.com/users/SimonSteinberger/following{/other_user}","gists_url":"https://api.github.com/users/SimonSteinberger/gists{/gist_id}","starred_url":"https://api.github.com/users/SimonSteinberger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SimonSteinberger/subscriptions","organizations_url":"https://api.github.com/users/SimonSteinberger/orgs","repos_url":"https://api.github.com/users/SimonSteinberger/repos","events_url":"https://api.github.com/users/SimonSteinberger/events{/privacy}","received_events_url":"https://api.github.com/users/SimonSteinberger/received_events","type":"User","site_admin":false},"created_at":"2017-06-28T14:06:09Z","updated_at":"2017-06-28T14:06:59Z","author_association":"NONE","body":"-1 Sorry, removal of the _analyzer option was, IMHO, a very poor decision by the Elastic team. The main reasons basically was \"because people sometimes didn't use it right\" or \"too confusing\". Well, how about removing about 90% of all other options well, because many of them can be wrongly used, which causes unexpected search results. Really, this was a severe step backwards.\r\n\r\nWhen we introduce a new language to any of our system, we now need to create a new mapping and re-index the whole thing. That is bad.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/311882267","html_url":"https://github.com/elastic/elasticsearch/issues/9279#issuecomment-311882267","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9279","id":311882267,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMTg4MjI2Nw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-06-29T07:11:59Z","updated_at":"2017-06-29T07:11:59Z","author_association":"CONTRIBUTOR","body":"Why do you need to reindex? You could have one index or one field per language?","performed_via_github_app":null}]