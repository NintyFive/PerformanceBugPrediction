{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/21820","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21820/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21820/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21820/events","html_url":"https://github.com/elastic/elasticsearch/issues/21820","id":191969876,"node_id":"MDU6SXNzdWUxOTE5Njk4NzY=","number":21820,"title":"Parent/child grouping without a physical parent document.","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-11-28T10:30:57Z","updated_at":"2018-02-14T13:28:25Z","closed_at":"2016-11-29T10:18:24Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Sometimes \"child\" docs have a common parent ID but are missing a physical parent doc - @paullovessearch would like to see these \"orphans\" grouped in search results to achieve pagination of top-ranking groups.\r\n\r\n### Background\r\nNumber-one-voted issue https://github.com/elastic/elasticsearch/issues/4915 contained several requests for **paging** in aggregations. Several different use cases were tied up on that issue so it was closed and this issue has been opened to focus on the use case of _paginating top-ranked groups_. However, my assumption here is that pagination of ranked groups should be achieved by search and not the aggregations framework.\r\n\r\n### Pagination = search API\r\nWhat we established in https://github.com/elastic/elasticsearch/issues/21785 is that efficient search (and especially efficient _paginated_ search) depends on heavy down-selection of results at the local level. \"Local\" can mean same document, same segment (nested docs) or same shard (parent/child). We can rank and page related items only if they are grouped locally (i.e. we do not attempt inefficient pagination on related content that is spread across multiple shards). \r\n\r\nThe existing parent/Child construct is our means of:\r\n1) Routing related items to the same shard at index-time\r\n2) Ensuring a child has exactly one parent and therefore shard\r\n3) Producing paginated search results for the grouped items\r\n\r\nThis is why I think Parent/Child might be the answer to tackling the \"top group pagination\" requirement.\r\n\r\n### Support for \"Orphans\"\r\n@paullovessearch suggested that in some systems the parent ID for child docs may serve only as a grouping key and there is no physical parent document to group child docs around at query-time. Some suggested using `terms` aggs and `top_hits` but this does not provide the pagination support that is required (or the required indexing discipline which means we can rely on the fact related items are held on the same shard).\r\n\r\n### Next steps.\r\nI think we have two possible solutions:\r\n1) Parent/Child queries are adapted to work with missing physical parent docs\r\n2) Users wanting pagination should provide physical parent docs\r\n\r\nAs with most things this is a cost/benefit analysis:\r\n\r\nRe costs: @martijnvg - we spoke briefly. How insanely complex is 1) to implement?\r\n\r\nRe benefits: @paullovessearch - I'd assume parent IDs nearly always have an authoritative data source simply to generate the unique numbers (order numbers, transaction IDs..) and are likely to hold other useful \"who/when?\" type info e.g. inception dates and instigators. Can you list the use cases where a solution is unlikely to incorporate a data source for parent info?\r\n\r\n\r\n","closed_by":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"performed_via_github_app":null}