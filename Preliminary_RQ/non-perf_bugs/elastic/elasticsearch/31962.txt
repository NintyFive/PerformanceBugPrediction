{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/31962","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31962/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31962/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31962/events","html_url":"https://github.com/elastic/elasticsearch/issues/31962","id":340215385,"node_id":"MDU6SXNzdWUzNDAyMTUzODU=","number":31962,"title":"Timing Race Condition in High Level Rest Client","user":{"login":"kamuffe","id":5285367,"node_id":"MDQ6VXNlcjUyODUzNjc=","avatar_url":"https://avatars0.githubusercontent.com/u/5285367?v=4","gravatar_id":"","url":"https://api.github.com/users/kamuffe","html_url":"https://github.com/kamuffe","followers_url":"https://api.github.com/users/kamuffe/followers","following_url":"https://api.github.com/users/kamuffe/following{/other_user}","gists_url":"https://api.github.com/users/kamuffe/gists{/gist_id}","starred_url":"https://api.github.com/users/kamuffe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kamuffe/subscriptions","organizations_url":"https://api.github.com/users/kamuffe/orgs","repos_url":"https://api.github.com/users/kamuffe/repos","events_url":"https://api.github.com/users/kamuffe/events{/privacy}","received_events_url":"https://api.github.com/users/kamuffe/received_events","type":"User","site_admin":false},"labels":[{"id":493198109,"node_id":"MDU6TGFiZWw0OTMxOTgxMDk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Java%20High%20Level%20REST%20Client","name":":Core/Features/Java High Level REST Client","color":"0e8a16","default":false,"description":"Expressive Java Client for Elasticsearch"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-07-11T12:13:15Z","updated_at":"2018-07-13T04:57:49Z","closed_at":"2018-07-13T04:57:06Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version:** 6.3.1\r\nInitial bug was found in:\r\nclient:\r\n'org.elasticsearch.client:elasticsearch-rest-high-level-client:6.3.0'\r\n'org.elasticsearch.client:elasticsearch-rest-client:6.3.0'\r\nOS version: MacOS 10.13.5\r\n**JVM version (java -version):** \r\njava version \"1.8.0_162\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_162-b12)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.162-b12, mixed mode)\r\n\r\nI have also verified that the bug still exists in:\r\nclient:\r\n'org.elasticsearch.client:elasticsearch-rest-high-level-client:6.3.1'\r\n'org.elasticsearch.client:elasticsearch-rest-client:6.3.1'\r\nwith server at 6.3.1\r\n\r\n**Description of the problem including expected versus actual behavior:**\r\nThere is some race condition in High Level rest client search API. I do the following search:\r\n```\r\npublic void search( String term ) \r\n{\r\n\tSystem.out.println( \"Searching for term: \" + term );\r\n\tSearchRequest searchRequest = new SearchRequest( );\r\n\r\n\tSearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder();\r\n\tsearchSourceBuilder.query( QueryBuilders.wildcardQuery( \"firstName\", \"*\" + term + \"*\" ) );\r\n\tsearchRequest.source( searchSourceBuilder );\r\n\t\t\r\n\tSearchResponse searchResponse;\r\n\ttry ( RestHighLevelClient client = createHighLevelRestClient() )\r\n\t{\r\n\t\t/*\r\n\t\t * FIXME when debugging it's working => timing race condition\r\n\t\t */\r\n\t\tsearchResponse = client.search( searchRequest );\r\n\t\tif ( RestStatus.OK != searchResponse.status() )\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tSearchHits searchHits = searchResponse.getHits() ;\r\n\t\tSystem.out.println( \"Status: \" + searchResponse.status().getStatus() );\r\n\t\tSystem.out.println( \"Search Result: \" + searchHits.getTotalHits() );\r\n\t\tfor ( SearchHit hit : searchHits.getHits() )\r\n\t\t{\r\n\t\t\thit.getSourceAsMap().get( \"firstName\" );\r\n\t\t\tSystem.out.println( \"Found: \" +hit.getSourceAsMap().get( \"firstName\" ) );\r\n\t\t}\r\n\t}\r\n\tcatch ( IOException e )\r\n\t{\r\n\t\t// TODO Auto-generated catch block\r\n\t\te.printStackTrace();\r\n\t}\r\n}\r\n\r\nprivate RestHighLevelClient createHighLevelRestClient()\r\n{\r\n\tRestHighLevelClient client = new RestHighLevelClient(\r\n\t\tRestClient.builder(\r\n\t\t\tnew HttpHost( \"localhost\", 9200, \"http\" ) ).setMaxRetryTimeoutMillis( 50000 ) );\r\n\treturn client;\r\n}\r\n```\r\n\r\nI use this method in JUnit5 test. If I run this test out of Eclispe the first run returns 5 search hits. All subsequent calls return emty search result.\r\nWhen I run the Test in Debug Mode (without any code change) and add a Breakpoint to org.elasticsearch.client.RestHighLevelClient.performRequest(Req, CheckedFunction<Req, Request, IOException>, CheckedFunction<Response, Resp, IOException>, Set<Integer>, Header...)\r\nthen the search request returns results again. \r\n\r\nThere seems to be some timing race condition in async request handling.\r\n","closed_by":{"login":"kamuffe","id":5285367,"node_id":"MDQ6VXNlcjUyODUzNjc=","avatar_url":"https://avatars0.githubusercontent.com/u/5285367?v=4","gravatar_id":"","url":"https://api.github.com/users/kamuffe","html_url":"https://github.com/kamuffe","followers_url":"https://api.github.com/users/kamuffe/followers","following_url":"https://api.github.com/users/kamuffe/following{/other_user}","gists_url":"https://api.github.com/users/kamuffe/gists{/gist_id}","starred_url":"https://api.github.com/users/kamuffe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kamuffe/subscriptions","organizations_url":"https://api.github.com/users/kamuffe/orgs","repos_url":"https://api.github.com/users/kamuffe/repos","events_url":"https://api.github.com/users/kamuffe/events{/privacy}","received_events_url":"https://api.github.com/users/kamuffe/received_events","type":"User","site_admin":false},"performed_via_github_app":null}