{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/30904","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30904/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30904/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30904/events","html_url":"https://github.com/elastic/elasticsearch/issues/30904","id":327007329,"node_id":"MDU6SXNzdWUzMjcwMDczMjk=","number":30904,"title":"Provide a better way to declare nodes/clusters/cluster formation during the build","user":{"login":"alpar-t","id":2565652,"node_id":"MDQ6VXNlcjI1NjU2NTI=","avatar_url":"https://avatars1.githubusercontent.com/u/2565652?v=4","gravatar_id":"","url":"https://api.github.com/users/alpar-t","html_url":"https://github.com/alpar-t","followers_url":"https://api.github.com/users/alpar-t/followers","following_url":"https://api.github.com/users/alpar-t/following{/other_user}","gists_url":"https://api.github.com/users/alpar-t/gists{/gist_id}","starred_url":"https://api.github.com/users/alpar-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpar-t/subscriptions","organizations_url":"https://api.github.com/users/alpar-t/orgs","repos_url":"https://api.github.com/users/alpar-t/repos","events_url":"https://api.github.com/users/alpar-t/events{/privacy}","received_events_url":"https://api.github.com/users/alpar-t/received_events","type":"User","site_admin":false},"labels":[{"id":106454670,"node_id":"MDU6TGFiZWwxMDY0NTQ2NzA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Delivery/Build","name":":Delivery/Build","color":"0e8a16","default":false,"description":"Build or test infrastructure"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":2495976472,"node_id":"MDU6TGFiZWwyNDk1OTc2NDcy","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Delivery","name":"Team:Delivery","color":"fef2c0","default":false,"description":"Meta label for Delivery team"}],"state":"closed","locked":false,"assignee":{"login":"alpar-t","id":2565652,"node_id":"MDQ6VXNlcjI1NjU2NTI=","avatar_url":"https://avatars1.githubusercontent.com/u/2565652?v=4","gravatar_id":"","url":"https://api.github.com/users/alpar-t","html_url":"https://github.com/alpar-t","followers_url":"https://api.github.com/users/alpar-t/followers","following_url":"https://api.github.com/users/alpar-t/following{/other_user}","gists_url":"https://api.github.com/users/alpar-t/gists{/gist_id}","starred_url":"https://api.github.com/users/alpar-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpar-t/subscriptions","organizations_url":"https://api.github.com/users/alpar-t/orgs","repos_url":"https://api.github.com/users/alpar-t/repos","events_url":"https://api.github.com/users/alpar-t/events{/privacy}","received_events_url":"https://api.github.com/users/alpar-t/received_events","type":"User","site_admin":false},"assignees":[{"login":"alpar-t","id":2565652,"node_id":"MDQ6VXNlcjI1NjU2NTI=","avatar_url":"https://avatars1.githubusercontent.com/u/2565652?v=4","gravatar_id":"","url":"https://api.github.com/users/alpar-t","html_url":"https://github.com/alpar-t","followers_url":"https://api.github.com/users/alpar-t/followers","following_url":"https://api.github.com/users/alpar-t/following{/other_user}","gists_url":"https://api.github.com/users/alpar-t/gists{/gist_id}","starred_url":"https://api.github.com/users/alpar-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpar-t/subscriptions","organizations_url":"https://api.github.com/users/alpar-t/orgs","repos_url":"https://api.github.com/users/alpar-t/repos","events_url":"https://api.github.com/users/alpar-t/events{/privacy}","received_events_url":"https://api.github.com/users/alpar-t/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2018-05-28T12:18:41Z","updated_at":"2020-11-11T21:41:21Z","closed_at":"2019-08-07T13:52:28Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Todo:\r\n--------\r\n  - [x] implement Version in java so we can use it in cluster-formation\r\n  - [ ] rename to `testClusters` and `TestClustersPlugin` ditching `ClusterFormation`\r\n  - [ ] proof of concept plugin to check the integration points with Gradle and write integration test \r\n  - [ ] implement support for setting up a single node cluster and actually starting and using it \r\n  - [ ] restrict the type of tasks that can use the plugin by default  ( ony configure task extensions on specific tasks )\r\n  - [ ] start using the new cluster-formation for rest integration tests ( modules, plugins ) \r\n  - [ ] start using the new cluster-formation for rest integration tests on x-pack \r\n \r\nDSL Glimpse\r\n-----------------\r\n\r\n```\r\nplugins {\r\n    id 'elasticsearch.clusterformation'\r\n}\r\n\r\ntestClusters {\r\n    myTestCluster {\r\n        distribution = 'ZIP'\r\n        version = '6.3.0'\r\n    }\r\n}\r\n\r\ntask user1 {\r\n    useCluster testClusters.myTestCluster\r\n    doLast {\r\n        println \"Cluster running @ ${elasticsearchNodes.myTestCluster.httpSocketURI}\"\r\n    }\r\n}\r\n\r\ntask user2 {\r\n    useCluster testClusters.myTestCluster\r\n    doLast {\r\n        println \"Cluster running @ ${elasticsearchNodes.myTestCluster.httpSocketURI}\"\r\n    }\r\n}\r\n```\r\nProduces this output:\r\n```\r\n> Task :syncClusterFormationArtifacts UP-TO-DATE\r\n\r\n> Task :user1\r\nStarting `myTestCluster`\r\nCluster running @ [::1]:37347\r\nNot stopping `myTestCluster`, since node still has 1 claim(s)\r\n\r\n> Task :user2\r\nCluster running @ [::1]:37347\r\nStopping `myTestCluster`, number of claims is 0\r\n\r\nBUILD SUCCESSFUL in 10s\r\n3 actionable tasks: 2 executed, 1 up-to-date\r\n```\r\n\r\nInitial Description\r\n------------------------\r\n\r\nThe current cluster formation has the following limitations:\r\n - no straight forward way to create additional clusters, define relationships between them \r\n - does not currently work with `--parallel`, and as such has support for no parallelism ( note that `test.jvm` doesn't help here, these tests always run in sequence)\r\n- complex  tests like rolling upgrade are not readable at all as they make use of relations between Gradle tasks that are really hard to follow.  \r\n\r\nThe main reason `--parallel` does not work is that Gradle's `finalizedBy` does not offer any guarantees about when the task will be run. We sue this for stopping clusters, but when running with parallel Gradle puts that off so that one can end up running with 40+ es nodes ( 512mb * 40 ~ 20GB ) before running out of memory and build starting to fail because of this. There is no easy fix for this, other than  setting up a bunch of `mustRunAfter` rules fro the different tasks. Some test run across clusters, upgrade and restart nodes, etc we can't make any assumptions about when the stop tasks is safe to run, so we can't  really enforce a \"stop after test runner for this cluster completed\" rule as the test runners  of other clusters might still need this cluster. \r\n\r\nEven after doing some [hacks](atorok:build/parallel) to bring down the nodes sooner and not run out of  memory, `--parallel` uncovered some missing ordering relations between tasks that were causing failures.\r\n\r\nFrom some limited testing, I estimate build time could be reduced by at least 30% by being able to run integ tests in parallel (based on running `:qa:check` on my 6 physical core CPU with  32GB ram).\r\n\r\nFrom what I can see, this is the only thing preventing us from simply running  builds with `clean check --parallel` without having to pick and choose what works in parallel and what doesn't. \r\n\r\nI think we should create a cluster formation DSL that does not rely on Gradle tasks to perform it's operations. We would still use gradle to fetch and set up distributions, but everything else would be externalized. The DSL would provide configuration for the cluster and   expose methods to alter it's state (start/stop the cluster or individual nodes, change configuration etc ). \r\nThere would be methods for high level operations like starting and stopping the cluster, and running tests as well as lower level operations that can manipulate at the node level. \r\n\r\nNo operation would be carried out by default, a task would have to be set up that calls these operation  from the task action (or as `doLast`). We can provide a task as well with the option to control if it's created to cover the common setup of setting up cluster, running tests and terminating. \r\nOf course we would need to have a way to run tests outside of Gradle, but since we don't use it's infrastructure to do it anyway, it shouldn't be that hard. \r\nThe custom DSL can  make use of Gradles `NamedDomainObjectCollection` so plugins can change defaults for different sections of the builds when a new cluster is defined. \r\n\r\n\r\nRelated: #30874,  #30903","closed_by":{"login":"alpar-t","id":2565652,"node_id":"MDQ6VXNlcjI1NjU2NTI=","avatar_url":"https://avatars1.githubusercontent.com/u/2565652?v=4","gravatar_id":"","url":"https://api.github.com/users/alpar-t","html_url":"https://github.com/alpar-t","followers_url":"https://api.github.com/users/alpar-t/followers","following_url":"https://api.github.com/users/alpar-t/following{/other_user}","gists_url":"https://api.github.com/users/alpar-t/gists{/gist_id}","starred_url":"https://api.github.com/users/alpar-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpar-t/subscriptions","organizations_url":"https://api.github.com/users/alpar-t/orgs","repos_url":"https://api.github.com/users/alpar-t/repos","events_url":"https://api.github.com/users/alpar-t/events{/privacy}","received_events_url":"https://api.github.com/users/alpar-t/received_events","type":"User","site_admin":false},"performed_via_github_app":null}