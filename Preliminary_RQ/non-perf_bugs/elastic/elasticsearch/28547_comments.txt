[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363898236","html_url":"https://github.com/elastic/elasticsearch/issues/28547#issuecomment-363898236","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28547","id":363898236,"node_id":"MDEyOklzc3VlQ29tbWVudDM2Mzg5ODIzNg==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-02-07T20:22:50Z","updated_at":"2018-02-07T20:22:50Z","author_association":"MEMBER","body":"I think this is a reporting problem only. The issue here is that we increment the size of the queued items, and then check if the capacity of the queue is exceeded. If the capacity of the queue is exceeded, we decrement the size, do not queue the item, and return to the caller that their offer to the queue was rejected. For the search thread pool, this leads to the thread pool task being rejected.\r\n\r\nIf you call `/_cat/thread_pool` between the increment of the size and the subsequent decrement of the size on an overstuffed queue, you could see the size of the queue being larger than its capacity. However, the task will be rejected. If you are concurrently submitting many search requests, I think it would be possible to see the size greatly exceed the capacity of the queue (as a single search request can lead to many search thread pool tasks).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363898527","html_url":"https://github.com/elastic/elasticsearch/issues/28547#issuecomment-363898527","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28547","id":363898527,"node_id":"MDEyOklzc3VlQ29tbWVudDM2Mzg5ODUyNw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-02-07T20:23:48Z","updated_at":"2018-02-07T20:23:48Z","author_association":"MEMBER","body":"I submitted prematurely.\r\n\r\nIn short, I do not think there is a bug here. I think these tasks are correctly being rejected. Do you have evidence to the contrary?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363912911","html_url":"https://github.com/elastic/elasticsearch/issues/28547#issuecomment-363912911","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28547","id":363912911,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MzkxMjkxMQ==","user":{"login":"pznamensky","id":14976219,"node_id":"MDQ6VXNlcjE0OTc2MjE5","avatar_url":"https://avatars0.githubusercontent.com/u/14976219?v=4","gravatar_id":"","url":"https://api.github.com/users/pznamensky","html_url":"https://github.com/pznamensky","followers_url":"https://api.github.com/users/pznamensky/followers","following_url":"https://api.github.com/users/pznamensky/following{/other_user}","gists_url":"https://api.github.com/users/pznamensky/gists{/gist_id}","starred_url":"https://api.github.com/users/pznamensky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pznamensky/subscriptions","organizations_url":"https://api.github.com/users/pznamensky/orgs","repos_url":"https://api.github.com/users/pznamensky/repos","events_url":"https://api.github.com/users/pznamensky/events{/privacy}","received_events_url":"https://api.github.com/users/pznamensky/received_events","type":"User","site_admin":false},"created_at":"2018-02-07T21:14:58Z","updated_at":"2018-02-07T21:14:58Z","author_association":"NONE","body":"We've got some graphs that corresponds to this issue for simular cluster.\r\nAs you can see, we've run out all search threads and requests are accumulating in queue.\r\nAnd at the same time thread pool rejection rate remains about 1 per second.\r\nWhich is strange.\r\nAlso, what HTTP code is using in case when task is be rejected?\r\nAs I remember there were no 429 codes, only ones of 50x.\r\n![es_queue](https://user-images.githubusercontent.com/14976219/35941856-ca224dc0-0c64-11e8-8e46-aff2f5d46f30.png)\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363936108","html_url":"https://github.com/elastic/elasticsearch/issues/28547#issuecomment-363936108","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28547","id":363936108,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MzkzNjEwOA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-02-07T22:41:20Z","updated_at":"2018-02-07T22:41:20Z","author_association":"MEMBER","body":"Here is a failing test case that supports my theory:\r\n\r\n```java\r\npublic void testQueueSize() throws InterruptedException {\r\n        final String threadPoolName = randomThreadPool(ThreadPool.ThreadPoolType.FIXED);\r\n        final int size = 8;\r\n        final int queueSize = 1;\r\n        final long rejections = 256;\r\n\r\n        ThreadPool threadPool = null;\r\n        final Settings nodeSettings =\r\n                Settings.builder()\r\n                        .put(\"node.name\", \"testRejectedExecutionCounter\")\r\n                        .put(\"thread_pool.\" + threadPoolName + \".size\", size)\r\n                        .put(\"thread_pool.\" + threadPoolName + \".queue_size\", queueSize)\r\n                        .build();\r\n        try {\r\n            threadPool = new ThreadPool(nodeSettings);\r\n\r\n            // these tasks will consume the thread pool causing further\r\n            // submissions to queue\r\n            final CountDownLatch latch = new CountDownLatch(size);\r\n            final CountDownLatch block = new CountDownLatch(1);\r\n            for (int i = 0; i < size; i++) {\r\n                threadPool.executor(threadPoolName).execute(() -> {\r\n                    try {\r\n                        latch.countDown();\r\n                        block.await();\r\n                    } catch (InterruptedException e) {\r\n                        fail(e.toString());\r\n                    }\r\n                });\r\n            }\r\n\r\n            // wait for the submitted tasks to be consumed by the thread\r\n            // pool\r\n            latch.await();\r\n\r\n            // these tasks will fill the thread pool queue\r\n            for (int i = 0; i < queueSize; i++) {\r\n                threadPool.executor(threadPoolName).execute(() -> {});\r\n            }\r\n\r\n            // these tasks will be rejected\r\n            AtomicLong counter = new AtomicLong();\r\n            final ThreadPool capturedThreadPool = threadPool;\r\n            final CountDownLatch rejectionLatch = new CountDownLatch(1);\r\n            final List<Thread> threads = new ArrayList<>();\r\n            for (int i = 0; i < size * rejections; i++) {\r\n                final Thread thread = new Thread(() -> {\r\n                    try {\r\n                        rejectionLatch.await();\r\n                    } catch (InterruptedException e) {\r\n                        fail(e.toString());\r\n                    }\r\n                    try {\r\n                        capturedThreadPool.executor(threadPoolName).execute(() -> { });\r\n                    } catch (EsRejectedExecutionException e) {\r\n                        counter.incrementAndGet();\r\n                    }\r\n\r\n                });\r\n                threads.add(thread);\r\n                thread.start();\r\n            }\r\n\r\n            final AtomicLong maxQueueSize = new AtomicLong();\r\n            final AtomicBoolean spin = new AtomicBoolean(true);\r\n            final Thread queueSizeThread = new Thread(() -> {\r\n                try {\r\n                    rejectionLatch.await();\r\n                } catch (InterruptedException e) {\r\n                    fail(e.toString());\r\n                }\r\n                while (spin.get()) {\r\n                    maxQueueSize.set(Math.max(maxQueueSize.get(), (long) stats(capturedThreadPool, threadPoolName).getQueue()));\r\n                }\r\n            });\r\n            queueSizeThread.start();\r\n\r\n            rejectionLatch.countDown();\r\n            for (final Thread thread : threads) {\r\n                thread.join();\r\n            }\r\n            spin.set(false);\r\n            queueSizeThread.join();\r\n            block.countDown();\r\n\r\n            assertThat(counter.get(), equalTo(size * rejections));\r\n            assertThat(stats(threadPool, threadPoolName).getRejected(), equalTo(size * rejections));\r\n\r\n            assertThat(\"queue capacity exceeded\", maxQueueSize.get(), lessThanOrEqualTo((long) queueSize));\r\n        } finally {\r\n            terminateThreadPoolIfNeeded(threadPool);\r\n        }\r\n    }\r\n```\r\n\r\nThis test works by occupying the threads with tasks that I do not let complete. Then, I stuff the queue with tasks. After that, all additional tasks should be rejected. While I am submitting tasks that will be rejected, I busy poll the number of queued tasks.\r\n\r\nIf my explanation is correct, I expect this test to fail because of the final assertion, the assertion that the queue size was always below the configured size of the queue. However, the number of rejections is correct as established by the preceding assertions showing that even though the queue size was exceeded, the tasks were burned off and rejected rather than actually being queued and executed.\r\n\r\nHere is the failing output:\r\n\r\n```\r\njava.lang.AssertionError: queue capacity exceeded\r\nExpected: a value less than or equal to <1L>\r\n     but: <3L> was greater than <1L>\r\n```\r\n\r\nThis establishes the size exceeding the capacity is merely a reporting artifact.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363936144","html_url":"https://github.com/elastic/elasticsearch/issues/28547#issuecomment-363936144","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28547","id":363936144,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MzkzNjE0NA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-02-07T22:41:30Z","updated_at":"2018-02-07T22:41:30Z","author_association":"MEMBER","body":"> Also, what HTTP code is using in case when task is be rejected?\r\n\r\n429.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363963386","html_url":"https://github.com/elastic/elasticsearch/issues/28547#issuecomment-363963386","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28547","id":363963386,"node_id":"MDEyOklzc3VlQ29tbWVudDM2Mzk2MzM4Ng==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-02-08T00:43:45Z","updated_at":"2018-02-08T00:43:45Z","author_association":"MEMBER","body":"Another important note here is that some search phases can *not* be rejected. For example, the can match search phase can [never be rejected so we force put into the queue these phases](https://github.com/elastic/elasticsearch/blame/v5.6.5/core/src/main/java/org/elasticsearch/action/search/InitialSearchPhase.java#L187-L191). This can also lead to the size exceeding the capacity. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363971714","html_url":"https://github.com/elastic/elasticsearch/issues/28547#issuecomment-363971714","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28547","id":363971714,"node_id":"MDEyOklzc3VlQ29tbWVudDM2Mzk3MTcxNA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-02-08T01:27:44Z","updated_at":"2018-02-08T01:27:44Z","author_association":"MEMBER","body":"Looking at your graph (thank you!) I think that the queue is behaving correctly here. I opened #28557 to address the reporting problem that I spotted. Otherwise, I think that there is not an issue here so I am going to close this one out. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/364017817","html_url":"https://github.com/elastic/elasticsearch/issues/28547#issuecomment-364017817","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28547","id":364017817,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NDAxNzgxNw==","user":{"login":"pznamensky","id":14976219,"node_id":"MDQ6VXNlcjE0OTc2MjE5","avatar_url":"https://avatars0.githubusercontent.com/u/14976219?v=4","gravatar_id":"","url":"https://api.github.com/users/pznamensky","html_url":"https://github.com/pznamensky","followers_url":"https://api.github.com/users/pznamensky/followers","following_url":"https://api.github.com/users/pznamensky/following{/other_user}","gists_url":"https://api.github.com/users/pznamensky/gists{/gist_id}","starred_url":"https://api.github.com/users/pznamensky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pznamensky/subscriptions","organizations_url":"https://api.github.com/users/pznamensky/orgs","repos_url":"https://api.github.com/users/pznamensky/repos","events_url":"https://api.github.com/users/pznamensky/events{/privacy}","received_events_url":"https://api.github.com/users/pznamensky/received_events","type":"User","site_admin":false},"created_at":"2018-02-08T06:44:10Z","updated_at":"2018-02-08T06:49:21Z","author_association":"NONE","body":"@jasontedor, thanks for the explanation and fixing the metric.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/364450012","html_url":"https://github.com/elastic/elasticsearch/issues/28547#issuecomment-364450012","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28547","id":364450012,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NDQ1MDAxMg==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-02-09T14:34:02Z","updated_at":"2018-02-09T14:34:02Z","author_association":"MEMBER","body":"Thanks for the report @pznamensky.","performed_via_github_app":null}]