{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/27210","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27210/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27210/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27210/events","html_url":"https://github.com/elastic/elasticsearch/issues/27210","id":270350501,"node_id":"MDU6SXNzdWUyNzAzNTA1MDE=","number":27210,"title":"PainlessScript$Script has illegal signature \"(Ljava/lang/Object;V)V crashes elasticsearch","user":{"login":"jpcarey","id":5118470,"node_id":"MDQ6VXNlcjUxMTg0NzA=","avatar_url":"https://avatars2.githubusercontent.com/u/5118470?v=4","gravatar_id":"","url":"https://api.github.com/users/jpcarey","html_url":"https://github.com/jpcarey","followers_url":"https://api.github.com/users/jpcarey/followers","following_url":"https://api.github.com/users/jpcarey/following{/other_user}","gists_url":"https://api.github.com/users/jpcarey/gists{/gist_id}","starred_url":"https://api.github.com/users/jpcarey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpcarey/subscriptions","organizations_url":"https://api.github.com/users/jpcarey/orgs","repos_url":"https://api.github.com/users/jpcarey/repos","events_url":"https://api.github.com/users/jpcarey/events{/privacy}","received_events_url":"https://api.github.com/users/jpcarey/received_events","type":"User","site_admin":false},"labels":[{"id":146834791,"node_id":"MDU6TGFiZWwxNDY4MzQ3OTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Scripting","name":":Core/Infra/Scripting","color":"0e8a16","default":false,"description":"Scripting abstractions, Painless, and Mustache"},{"id":699136972,"node_id":"MDU6TGFiZWw2OTkxMzY5NzI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v5.6.3","name":"v5.6.3","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"assignees":[{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2017-11-01T15:38:58Z","updated_at":"2018-02-14T13:20:50Z","closed_at":"2017-11-28T22:59:03Z","author_association":"MEMBER","active_lock_reason":null,"body":"<!-- Bug report -->\r\n\r\n**Elasticsearch version**: elasticsearch-5.6.3\r\n**Plugins installed**: x-pack\r\n**JVM version**:\r\n```\r\njava version \"1.8.0_65\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_65-b17)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.65-b01, mixed mode)\r\n```\r\n\r\n**OS version**:\r\n`Darwin Kernel Version 16.7.0; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64`\r\n\r\n**behavior**: Crash / exit elasticsearch:\r\n\r\n```\r\n[2017-11-01T09:26:30,732][ERROR][o.e.b.ElasticsearchUncaughtExceptionHandler] [] fatal error in thread [elasticsearch[1g9MtQh][management][T#2]], exiting\r\njava.lang.ClassFormatError: Method \"start\" in class org/elasticsearch/painless/PainlessScript$Script has illegal signature \"(Ljava/lang/Object;V)V\"\r\n\tat java.lang.ClassLoader.defineClass1(Native Method) ~[?:1.8.0_65]\r\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:760) ~[?:1.8.0_65]\r\n\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142) ~[?:1.8.0_65]\r\n\tat org.elasticsearch.painless.Compiler$Loader.defineScript(Compiler.java:86) ~[?:?]\r\n\tat org.elasticsearch.painless.Compiler.compile(Compiler.java:134) ~[?:?]\r\n\tat org.elasticsearch.painless.PainlessScriptEngineService$2.run(PainlessScriptEngineService.java:176) ~[?:?]\r\n\tat java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_65]\r\n\tat org.elasticsearch.painless.PainlessScriptEngineService.compile(PainlessScriptEngineService.java:172) ~[?:?]\r\n\tat org.elasticsearch.painless.PainlessScriptEngineService.compile(PainlessScriptEngineService.java:112) ~[?:?]\r\n\tat org.elasticsearch.script.ScriptService.compile(ScriptService.java:307) ~[elasticsearch-5.6.3.jar:5.6.3]\r\n\tat org.elasticsearch.xpack.watcher.condition.ScriptCondition.<init>(ScriptCondition.java:59) ~[?:?]\r\n\tat org.elasticsearch.xpack.watcher.condition.ScriptCondition.parse(ScriptCondition.java:75) ~[?:?]\r\n\tat org.elasticsearch.xpack.watcher.Watcher.lambda$createComponents$4(Watcher.java:229) ~[?:?]\r\n\tat org.elasticsearch.xpack.watcher.condition.ConditionRegistry.parseExecutable(ConditionRegistry.java:74) ~[?:?]\r\n\tat org.elasticsearch.xpack.watcher.watch.Watch$Parser.parse(Watch.java:316) ~[?:?]\r\n\tat org.elasticsearch.xpack.watcher.watch.Watch$Parser.parse(Watch.java:282) ~[?:?]\r\n\tat org.elasticsearch.xpack.watcher.watch.Watch$Parser.parse(Watch.java:241) ~[?:?]\r\n\tat org.elasticsearch.xpack.watcher.transport.actions.execute.TransportExecuteWatchAction.masterOperation(TransportExecuteWatchAction.java:118) ~[?:?]\r\n\tat org.elasticsearch.xpack.watcher.transport.actions.execute.TransportExecuteWatchAction.masterOperation(TransportExecuteWatchAction.java:65) ~[?:?]\r\n\tat org.elasticsearch.action.support.master.TransportMasterNodeAction.masterOperation(TransportMasterNodeAction.java:87) ~[elasticsearch-5.6.3.jar:5.6.3]\r\n\tat org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction$2.doRun(TransportMasterNodeAction.java:166) ~[elasticsearch-5.6.3.jar:5.6.3]\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:638) ~[elasticsearch-5.6.3.jar:5.6.3]\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) ~[elasticsearch-5.6.3.jar:5.6.3]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[?:1.8.0_65]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[?:1.8.0_65]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_65]\r\n```\r\n**Steps to reproduce**:\r\n\r\n``` json\r\nPOST crash-test/doc/_bulk\r\n{\"index\": {}}\r\n{ \"@timestamp\" : \"2017-10-20T18:26:41.431Z\", \"type\": \"nginx\" }\r\n{\"index\": {}}\r\n{ \"@timestamp\" : \"2017-10-20T17:55:29.190Z\", \"type\": \"nginx\" }\r\n```\r\n\r\n```\r\nPOST _xpack/watcher/watch/_execute\r\n{\r\n  \"watch\": {\r\n    \"metadata\": {\r\n      \"indexing_threshold\": 20\r\n    },\r\n    \"trigger\": {\r\n      \"schedule\": { \"daily\": { \"at\": \"2:00\" }}\r\n    },\r\n    \"input\": {\r\n      \"search\": {\r\n        \"request\": {\r\n          \"indices\": [ \"crash-test\" ],\r\n          \"body\": {\r\n            \"size\": 0,\r\n            \"aggs\": {\r\n              \"TYPE\": {\r\n                \"terms\": {\r\n                  \"field\": \"type.keyword\",\r\n                  \"size\": 10\r\n                },\r\n                \"aggs\": {\r\n                  \"MAX\": {\r\n                    \"max\": {\r\n                      \"field\": \"@timestamp\"\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"condition\": {\r\n      \"script\": {\r\n        \"source\": \"\"\"\r\nctx.vars.bad = ctx.payload.aggregations.TYPE.buckets.stream()\r\n  .map( it -> {\r\n    Calendar calendar = Calendar.getInstance();\r\n    calendar.setTimeInMillis((long) it.MAX.value);\r\n    it.start = calendar.add(Calendar.MINUTE, 5);\r\n    return it\r\n  })\r\n  .collect(Collectors.toList());\r\n\r\nreturn true;\r\n\"\"\"\r\n      }\r\n    },\r\n    \"actions\": {\r\n      \"test_output\": {\r\n        \"logging\": {\r\n          \"text\": \"{{ ctx.vars.bad }}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```","closed_by":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"performed_via_github_app":null}