{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/28848","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28848/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28848/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28848/events","html_url":"https://github.com/elastic/elasticsearch/issues/28848","id":300984601,"node_id":"MDU6SXNzdWUzMDA5ODQ2MDE=","number":28848,"title":"Refine plugin-descriptor.properties searching logic in PluginService.java","user":{"login":"dingminyi","id":4366866,"node_id":"MDQ6VXNlcjQzNjY4NjY=","avatar_url":"https://avatars1.githubusercontent.com/u/4366866?v=4","gravatar_id":"","url":"https://api.github.com/users/dingminyi","html_url":"https://github.com/dingminyi","followers_url":"https://api.github.com/users/dingminyi/followers","following_url":"https://api.github.com/users/dingminyi/following{/other_user}","gists_url":"https://api.github.com/users/dingminyi/gists{/gist_id}","starred_url":"https://api.github.com/users/dingminyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dingminyi/subscriptions","organizations_url":"https://api.github.com/users/dingminyi/orgs","repos_url":"https://api.github.com/users/dingminyi/repos","events_url":"https://api.github.com/users/dingminyi/events{/privacy}","received_events_url":"https://api.github.com/users/dingminyi/received_events","type":"User","site_admin":false},"labels":[{"id":146832994,"node_id":"MDU6TGFiZWwxNDY4MzI5OTQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Plugins","name":":Core/Infra/Plugins","color":"0e8a16","default":false,"description":"Plugin API and infrastructure"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-02-28T11:14:03Z","updated_at":"2018-02-28T16:01:52Z","closed_at":"2018-02-28T16:01:45Z","author_association":"NONE","active_lock_reason":null,"body":"Hi Team,\r\nWe are uploading our Elasticsearch clusters from old Elasticsearch versions, but we found such error while deploying the new version ES with puppet module:\r\n```\r\n[2018-02-28T00:03:32,066][WARN ][o.e.b.ElasticsearchUncaughtExceptionHandler] [pronto-pre-g2-hm8h-phx02-1516805102-3-2055140-pronto] uncaught exception in thread [main]\r\norg.elasticsearch.bootstrap.StartupException: org.elasticsearch.bootstrap.BootstrapException: java.nio.file.FileSystemException: /usr/share/elasticsearch/plugins/x-pack/.name/plugin-descriptor.properties: Not a directory\r\n    at org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:125) ~[elasticsearch-6.2.2.jar:6.2.2]\r\n    at org.elasticsearch.bootstrap.Elasticsearch.execute(Elasticsearch.java:112) ~[elasticsearch-6.2.2.jar:6.2.2]\r\n    at org.elasticsearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:86) ~[elasticsearch-6.2.2.jar:6.2.2]\r\n    at org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:124) ~[elasticsearch-cli-6.2.2.jar:6.2.2]\r\n    at org.elasticsearch.cli.Command.main(Command.java:90) ~[elasticsearch-cli-6.2.2.jar:6.2.2]\r\n    at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:92) ~[elasticsearch-6.2.2.jar:6.2.2]\r\n    at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:85) ~[elasticsearch-6.2.2.jar:6.2.2]\r\nCaused by: java.nio.file.FileSystemException: /usr/share/elasticsearch/plugins/x-pack/.name/plugin-descriptor.properties: Not a directory\r\n    at sun.nio.fs.UnixException.translateToIOException(UnixException.java:91) ~[?:1.8.0_151]\r\n    at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102) ~[?:1.8.0_151]\r\n    at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107) ~[?:1.8.0_151]\r\n    at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214) ~[?:1.8.0_151]\r\n    at java.nio.file.Files.newByteChannel(Files.java:361) ~[?:1.8.0_151]\r\n    at java.nio.file.Files.newByteChannel(Files.java:407) ~[?:1.8.0_151]\r\n    at java.nio.file.spi.FileSystemProvider.newInputStream(FileSystemProvider.java:384) ~[?:1.8.0_151]\r\n    at java.nio.file.Files.newInputStream(Files.java:152) ~[?:1.8.0_151]\r\n    at org.elasticsearch.plugins.PluginInfo.readFromProperties(PluginInfo.java:202) ~[elasticsearch-6.2.2.jar:6.2.2]\r\n    at org.elasticsearch.plugins.PluginInfo.readFromProperties(PluginInfo.java:184) ~[elasticsearch-6.2.2.jar:6.2.2]\r\n    at org.elasticsearch.bootstrap.Spawner.spawnNativePluginControllers(Spawner.java:75) ~[elasticsearch-6.2.2.jar:6.2.2]\r\n    at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:167) ~[elasticsearch-6.2.2.jar:6.2.2]\r\n    at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:323) ~[elasticsearch-6.2.2.jar:6.2.2]\r\n    at org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:121) ~[elasticsearch-6.2.2.jar:6.2.2]\r\n    ... 6 more\r\n```\r\nAfter investigate the code, we found that now Elasticsearch will take every file and folder under the meta plugin folder as folders. \r\nhttps://github.com/elastic/elasticsearch/blob/master/server/src/main/java/org/elasticsearch/plugins/PluginsService.java#L355\r\n```\r\n    private static Tuple<List<Path>, Map<String, List<Path>>> findGroupedPluginDirs(final Path rootPath) throws IOException {\r\n        final List<Path> plugins = new ArrayList<>();\r\n        final Map<String, List<Path>> metaPlugins = new LinkedHashMap<>();\r\n        final Set<String> seen = new HashSet<>();\r\n        if (Files.exists(rootPath)) {\r\n            try (DirectoryStream<Path> stream = Files.newDirectoryStream(rootPath)) {\r\n                for (Path plugin : stream) {\r\n                    if (FileSystemUtils.isDesktopServicesStore(plugin) ||\r\n                            plugin.getFileName().toString().startsWith(\".removing-\")) {\r\n                        continue;\r\n                    }\r\n                    if (seen.add(plugin.getFileName().toString()) == false) {\r\n                        throw new IllegalStateException(\"duplicate plugin: \" + plugin);\r\n                    }\r\n                    if (MetaPluginInfo.isMetaPlugin(plugin)) {\r\n                        final String name = plugin.getFileName().toString();\r\n                        try (DirectoryStream<Path> subStream = Files.newDirectoryStream(plugin)) {\r\n                            for (Path subPlugin : subStream) {\r\n                                if (MetaPluginInfo.isPropertiesFile(subPlugin) ||\r\n                                        FileSystemUtils.isDesktopServicesStore(subPlugin)) {\r\n                                    continue;\r\n                                }\r\n                                if (seen.add(subPlugin.getFileName().toString()) == false) {\r\n                                    throw new IllegalStateException(\"duplicate plugin: \" + subPlugin);\r\n                                }\r\n                                metaPlugins.computeIfAbsent(name, n -> new ArrayList<>()).add(subPlugin);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        plugins.add(plugin);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return Tuple.tuple(plugins, metaPlugins);\r\n    }\r\n```\r\nI guess a directory filter for the Files.newDirectoryStream will make the logic more compatible to different cloud orchestration solutions and it will not break the origin purpose of code, what do you think? \r\n\r\nPS. We know that the plugin provider in puppet module has just updated its logic 15 days ago, but rollout puppet module will impact hundreds of nodes, dozens of clusters in our production environment. That will take huge human efforts to rollout and monitoring. ","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}