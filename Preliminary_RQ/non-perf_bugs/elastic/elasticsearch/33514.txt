{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/33514","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33514/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33514/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33514/events","html_url":"https://github.com/elastic/elasticsearch/issues/33514","id":358131645,"node_id":"MDU6SXNzdWUzNTgxMzE2NDU=","number":33514,"title":"Aggregations: toXContent response contains duplicate fields","user":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-09-07T16:22:30Z","updated_at":"2018-09-26T14:09:32Z","closed_at":"2018-09-26T14:09:32Z","author_association":"MEMBER","active_lock_reason":null,"body":"While debugging a watcher issue I encountered a problem that serializing a search response returned an exception saying that there were duplicate fields. Checking the JSON resulted in duplicate fields. I do not however understand why this is not an issue when writing out a search response, maybe the `XContentHelper.convertToMap` implementation is the culprit.\r\n\r\nThis happened on 6.3.2, but I also reproduced this up to master.\r\n\r\nThis is the test I was able to reproduce the issue with\r\n\r\n```java\r\n    public void testFieldGetsWrittenOutTwice() throws Exception {\r\n        // you need to add an additional index in order to trigger this (or potentially a shard)\r\n        createIndex(\"foo_1\");\r\n\r\n        XContentBuilder builder = jsonBuilder().startObject().startObject(\"properties\")\r\n            .startObject(\"@timestamp\").field(\"type\", \"date\").endObject()\r\n            .startObject(\"license\").startObject(\"properties\")\r\n            .startObject(\"count\").field(\"type\", \"long\").endObject()\r\n            .startObject(\"partnumber\").field(\"type\", \"text\").startObject(\"fields\").startObject(\"keyword\")\r\n            .field(\"type\", \"keyword\").field(\"ignore_above\", 256)\r\n            .endObject().endObject().endObject()\r\n            .endObject().endObject().endObject().endObject();\r\n        assertAcked(client().admin().indices().prepareCreate(\"foo_2\")\r\n            .addMapping(\"doc\", builder).get());\r\n\r\n        XContentBuilder docBuilder = jsonBuilder().startObject()\r\n            .startObject(\"license\").field(\"partnumber\", \"foobar\").field(\"count\", 2).endObject()\r\n            .field(\"@timestamp\", \"2018-07-08T08:07:00.599Z\")\r\n            .endObject();\r\n\r\n        client().prepareIndex(\"foo_2\", \"doc\").setSource(docBuilder).setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).get();\r\n\r\n        client().admin().indices().prepareRefresh();\r\n\r\n        TermsAggregationBuilder groupByLicenseAgg = AggregationBuilders.terms(\"group_by_license_partnumber\").field(\"license.partnumber.keyword\");\r\n        MaxBucketPipelineAggregationBuilder peakPipelineAggBuilder =\r\n            PipelineAggregatorBuilders.maxBucket(\"peak\", \"licenses_per_day>total_licenses\");\r\n        SumAggregationBuilder sumAggBuilder = AggregationBuilders.sum(\"total_licenses\").field(\"license.count\");\r\n        DateHistogramAggregationBuilder licensePerDayBuilder =\r\n            AggregationBuilders.dateHistogram(\"licenses_per_day\").field(\"@timestamp\").dateHistogramInterval(DateHistogramInterval.DAY);\r\n        licensePerDayBuilder.subAggregation(sumAggBuilder);\r\n        groupByLicenseAgg.subAggregation(licensePerDayBuilder);\r\n        groupByLicenseAgg.subAggregation(peakPipelineAggBuilder);\r\n\r\n        SearchResponse response = client().prepareSearch(\"foo_*\").setSize(0).addAggregation(groupByLicenseAgg).get();\r\n        // you can see in the logging output that there are actually two peak fields\r\n        // I do not yet understand why this is not a problem in our rest layer but only in this case\r\n        logger.info(Strings.toString(response));\r\n        // conversion to a map fails because there are two `peak` fields\r\n        BytesReference bytes = XContentHelper.toXContent(response, XContentType.JSON, false);\r\n        XContentHelper.convertToMap(bytes, false, XContentType.JSON);\r\n    }\r\n```","closed_by":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"performed_via_github_app":null}