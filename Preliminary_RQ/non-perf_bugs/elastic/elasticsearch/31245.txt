{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/31245","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31245/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31245/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31245/events","html_url":"https://github.com/elastic/elasticsearch/issues/31245","id":331198473,"node_id":"MDU6SXNzdWUzMzExOTg0NzM=","number":31245,"title":"java.lang.RuntimeException: java.lang.ClassNotFoundException: com.unboundid.util.Debug","user":{"login":"sanyam1212","id":15365045,"node_id":"MDQ6VXNlcjE1MzY1MDQ1","avatar_url":"https://avatars2.githubusercontent.com/u/15365045?v=4","gravatar_id":"","url":"https://api.github.com/users/sanyam1212","html_url":"https://github.com/sanyam1212","followers_url":"https://api.github.com/users/sanyam1212/followers","following_url":"https://api.github.com/users/sanyam1212/following{/other_user}","gists_url":"https://api.github.com/users/sanyam1212/gists{/gist_id}","starred_url":"https://api.github.com/users/sanyam1212/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sanyam1212/subscriptions","organizations_url":"https://api.github.com/users/sanyam1212/orgs","repos_url":"https://api.github.com/users/sanyam1212/repos","events_url":"https://api.github.com/users/sanyam1212/events{/privacy}","received_events_url":"https://api.github.com/users/sanyam1212/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-06-11T13:52:21Z","updated_at":"2018-06-11T14:05:55Z","closed_at":"2018-06-11T14:05:55Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** : 5.3.3\r\n\r\n**Plugins installed**: [x-pack]\r\n\r\n**JVM version**: java version \"1.8.0_171\"\r\n\r\n\r\n**OS version** : Ubuntu 14.04\r\n\r\n**Description of the problem including expected versus actual behaviour**:\r\nI'm trying to implement a simple watch service using elastic-search watcher but am facing following errors/exceptions.....although syntactically the code seems ok...but I think there's an issue with the dependencies. I have followed the official documentation :\r\nhttps://www.elastic.co/guide/en/x-pack/5.3/xpack-introduction.html\r\n\r\nA similar issue was raised here on stackoverflow:\r\nhttps://stackoverflow.com/questions/50797498/unable-to-create-prebuiltxpacktransportclient-x-pack-elastic-search\r\nbut hasn't been answered!\r\n \r\n**Code**:\r\npackage watcher;\r\n\r\nimport java.net.InetAddress;\r\nimport java.net.UnknownHostException;\r\nimport java.util.List;\r\n\r\nimport org.elasticsearch.action.search.SearchRequest;\r\nimport org.elasticsearch.action.search.SearchType;\r\nimport org.elasticsearch.client.Requests;\r\nimport org.elasticsearch.client.transport.TransportClient;\r\nimport org.elasticsearch.cluster.metadata.IndexMetaData;\r\nimport org.elasticsearch.common.bytes.BytesArray;\r\nimport org.elasticsearch.common.collect.ImmutableOpenMap;\r\nimport org.elasticsearch.common.settings.Settings;\r\nimport org.elasticsearch.common.transport.InetSocketTransportAddress;\r\nimport org.elasticsearch.index.query.BoolQueryBuilder;\r\nimport org.elasticsearch.index.query.QueryBuilders;\r\nimport org.elasticsearch.script.Script;\r\nimport org.elasticsearch.search.builder.SearchSourceBuilder;\r\nimport org.elasticsearch.transport.client.PreBuiltTransportClient;\r\nimport org.elasticsearch.xpack.XPackClient;\r\nimport org.elasticsearch.xpack.client.PreBuiltXPackTransportClient;\r\n//import org.elasticsearch.xpack.client.PreBuiltXPackTransportClient;\r\nimport org.elasticsearch.xpack.notification.email.EmailTemplate;\r\nimport org.elasticsearch.xpack.watcher.actions.email.EmailAction;\r\nimport org.elasticsearch.xpack.watcher.client.WatchSourceBuilder;\r\nimport org.elasticsearch.xpack.watcher.client.WatchSourceBuilders;\r\nimport org.elasticsearch.xpack.watcher.client.WatcherClient;\r\nimport org.elasticsearch.xpack.watcher.condition.ScriptCondition;\r\nimport org.elasticsearch.xpack.watcher.input.search.SearchInput;\r\nimport org.elasticsearch.xpack.watcher.support.search.WatcherSearchTemplateRequest;\r\nimport org.elasticsearch.xpack.watcher.transport.actions.put.PutWatchResponse;\r\nimport org.elasticsearch.xpack.watcher.trigger.TriggerBuilders;\r\nimport org.elasticsearch.xpack.watcher.trigger.schedule.Schedules;\r\nimport com.carrotsearch.hppc.cursors.ObjectObjectCursor;\r\n\r\npublic class Watch {\r\n\r\n\t@SuppressWarnings(\"unchecked\")\r\n\tpublic static void main(String[] args) throws UnknownHostException {\r\n\r\n\t\t@SuppressWarnings(\"resource\")\r\n\t\tTransportClient client = new PreBuiltXPackTransportClient(\r\n\t\t\t\tSettings.builder().put(\"cluster.name\", \"elasticsearch\").build())\r\n\t\t\t\t\t\t.addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(\"localhost\"), 9300));\r\n\r\n\t\tImmutableOpenMap<String, IndexMetaData> indices = client.admin().cluster()\r\n\t\t\t    .prepareState().get().getState()\r\n\t\t\t    .getMetaData().getIndices();\r\n\t\t\r\n\t\tfor (ObjectObjectCursor<String, IndexMetaData> objectObjectCursor : indices) {\r\n\t\t\tSystem.out.println(objectObjectCursor.key);\r\n\t\t}\r\n\t\t\r\n\t\tXPackClient xpackClient = new XPackClient(client);\r\n\t\tWatcherClient watcherClient = xpackClient.watcher();\r\n\r\n\t\tWatchSourceBuilder watchSourceBuilder = WatchSourceBuilders.watchBuilder();\r\n\r\n\t\t// Set the trigger\r\n\t\twatchSourceBuilder.trigger(TriggerBuilders.schedule(Schedules.cron(\"0 0/1 * * * ?\")));\r\n\r\n\t\tBoolQueryBuilder query_er = QueryBuilders.boolQuery().filter(QueryBuilders.termQuery(\"message\", \"error\"));\r\n\t\t\r\n\t\t// Create the search request to use for the input\r\n\t\tSearchRequest request = Requests.searchRequest(\"idx\")\r\n\t\t\t\t.source(SearchSourceBuilder.searchSource().query(query_er));\r\n\r\n\t\t// Create the search input\r\n\t\tSearchInput input = new SearchInput(new WatcherSearchTemplateRequest(new String[] { \"idx\" }, null,\r\n\t\t\t\tSearchType.DEFAULT, WatcherSearchTemplateRequest.DEFAULT_INDICES_OPTIONS,\r\n\t\t\t\tnew BytesArray(request.source().toString())), null, null, null);\r\n\r\n\t\t// Set the input\r\n\t\twatchSourceBuilder.input(input);\r\n\r\n\t\t// Set the condition\r\n\t\twatchSourceBuilder.condition(new ScriptCondition(new Script(\"ctx.payload.hits.total > 1\")));\r\n\r\n\t\t// Create the email template to use for the action\r\n\t\tEmailTemplate.Builder emailBuilder = EmailTemplate.builder();\r\n\t\temailBuilder.to(\"abc.def@xyz.com\");\r\n\t\temailBuilder.subject(\"404\");\r\n\t\tEmailAction.Builder emailActionBuilder = EmailAction.builder(emailBuilder.build());\r\n\r\n\t\t// Add the action\r\n\t\twatchSourceBuilder.addAction(\"email_someone\", emailActionBuilder);\r\n\r\n\t\tPutWatchResponse putWatchResponse = watcherClient.preparePutWatch(\"my-watch\").setSource(watchSourceBuilder)\r\n\t\t\t\t.get();\r\n\t\tSystem.out.println(putWatchResponse);\r\n\t}\r\n}\r\n\r\n**Error logs ()**: \r\n![error](https://user-images.githubusercontent.com/15365045/41235122-a7c302ee-6dab-11e8-8839-fa9e4abf0578.png)\r\n\r\n","closed_by":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"performed_via_github_app":null}