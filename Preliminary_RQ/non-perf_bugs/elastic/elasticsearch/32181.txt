{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/32181","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32181/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32181/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32181/events","html_url":"https://github.com/elastic/elasticsearch/issues/32181","id":342502376,"node_id":"MDU6SXNzdWUzNDI1MDIzNzY=","number":32181,"title":"Test and Verify whether PolicyStepsRegistry is used safely in ILM","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"labels":[{"id":912828538,"node_id":"MDU6TGFiZWw5MTI4Mjg1Mzg=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/ILM+SLM","name":":Core/Features/ILM+SLM","color":"0e8a16","default":false,"description":"Index and Snapshot lifecycle management"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-07-18T21:41:55Z","updated_at":"2018-07-31T14:09:13Z","closed_at":"2018-07-31T14:09:13Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"summary of problem: CS-IndexLifecycleMetadata, indexMetaData-current_step info, and policyRegistry can get out of sync\r\n\r\nThe PolicyStepsRegistry for an IndexLifecycleService seems to be able to be both updated \r\nand used at the same time. It seems as though it is possible that the execution bits of the service can be attempting to read from the registry at the same time that updates are occurring.\r\n\r\nUpdates to the registry happen when [cluster-state-appliers are called](https://github.com/elastic/elasticsearch/blob/fc2f982542a3a265a6ff145885ba28303ff22f10/x-pack/plugin/index-lifecycle/src/main/java/org/elasticsearch/xpack/indexlifecycle/IndexLifecycleService.java#L126).\r\n\r\nReads to the registry happen in two cases\r\n\r\n1. [IndexLifecycleRunner#runPolicy](https://github.com/elastic/elasticsearch/blob/ebf0dd45d2606d14d08d0ed5f6b436ed56d4e906/x-pack/plugin/index-lifecycle/src/main/java/org/elasticsearch/xpack/indexlifecycle/IndexLifecycleRunner.java#L65).\r\n2. [ExecuteStepsUpdateTask#execute](https://github.com/elastic/elasticsearch/blob/fc2f982542a3a265a6ff145885ba28303ff22f10/x-pack/plugin/index-lifecycle/src/main/java/org/elasticsearch/xpack/indexlifecycle/ExecuteStepsUpdateTask.java#L53)\r\n\r\nThere is nothing preventing the system from being in both the update and/or (1),(2) at the same time.\r\n\r\nIt is also not clear from existing tests whether this is actually a problem. From a rough peek I see an IllegalStateException to be thrown in two scenarios\r\nA. API deletes/changes an action in a policy such that a step is removed\r\nB. API adds a policy to an index and `runPolicy` is executed from the scheduled-job before the cluster-state-applier populates the registry\r\nC. API changes policy such that the index is said to currently be on a specific step that has not yet been populated by the applier (similar to B.)\r\nD. runPolicy was triggered after the node was un-elected master and there is a stale representation of the truly up-to-date cluster state with changes to policies that resulted in indices moving to new steps that didn't exist before in the stale registry\r\n\r\nI do not think this to be an issue in (2) since it is fine if the execution task fails and tries again in a following iteration. One costly way to stop the `IllegalStateException` is to re-compute the steps on every run. Other ways may, indeed, exist, but further investigation is warranted.","closed_by":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"performed_via_github_app":null}