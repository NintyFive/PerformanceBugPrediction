[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/355671009","html_url":"https://github.com/elastic/elasticsearch/issues/28109#issuecomment-355671009","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28109","id":355671009,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTY3MTAwOQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2018-01-05T21:33:09Z","updated_at":"2018-01-05T21:33:09Z","author_association":"MEMBER","body":"> a custom plugin (which does not seem to support newer ES versions)\r\n\r\nWhy do you think a custom plugin will not work with newer ES versions?\r\n\r\nThis has less to do with painless itself, and more to do with docvalues. I don't think we should add anything like the \"dot\" method suggested here. This is a very advanced use case and exactly why we suggest custom script engines for advanced cases. /cc @jpountz for his thoughts.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/355683771","html_url":"https://github.com/elastic/elasticsearch/issues/28109#issuecomment-355683771","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28109","id":355683771,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTY4Mzc3MQ==","user":{"login":"adamhadani","id":139888,"node_id":"MDQ6VXNlcjEzOTg4OA==","avatar_url":"https://avatars0.githubusercontent.com/u/139888?v=4","gravatar_id":"","url":"https://api.github.com/users/adamhadani","html_url":"https://github.com/adamhadani","followers_url":"https://api.github.com/users/adamhadani/followers","following_url":"https://api.github.com/users/adamhadani/following{/other_user}","gists_url":"https://api.github.com/users/adamhadani/gists{/gist_id}","starred_url":"https://api.github.com/users/adamhadani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adamhadani/subscriptions","organizations_url":"https://api.github.com/users/adamhadani/orgs","repos_url":"https://api.github.com/users/adamhadani/repos","events_url":"https://api.github.com/users/adamhadani/events{/privacy}","received_events_url":"https://api.github.com/users/adamhadani/received_events","type":"User","site_admin":false},"created_at":"2018-01-05T22:33:10Z","updated_at":"2018-01-05T22:37:48Z","author_association":"NONE","body":"@rjernst, thanks for responding so promptly, I'll try to clarify a bit:\r\n\r\n1) I didn't mean to suggest a custom plugin will not work with newer ES versions period, just that the particular one I linked to wouldn't as is. I also get that its possible to just write new plugins to achieve this, but i'm specifically suggesting that a dot product / cosine similarity type of operation is general enough to be useful across many contexts, so that it will be useful to have more native support for something like this using inline scripting, without having to resort to writing elaborate custom code that needs to be bundled into the server deployment.\r\n\r\nAdded benefit here which is equally important for eng. organizations is that AWS ES doesn't currently support arbitrary plugins + there is non-trivial overhead of maintaining plugins that need to be compiled/bundled into service vs. a script that can be tweaked on the fly as it is provided along with the query.\r\n\r\n2) Vectorized operations on most modern architectures can be executed very efficiently which makes it compelling to delegate the dot product to the server to execute, which is one motivation for introducing an explicit dot operator vs. just writing an explicit for loop that iterates through individual components and multiplies them / sums the results. Syntax-wise or in terms of supporting a schema type that makes representing a vector for sake of such an operator is of course something that can be debated to large extent.\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/357677327","html_url":"https://github.com/elastic/elasticsearch/issues/28109#issuecomment-357677327","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28109","id":357677327,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NzY3NzMyNw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-01-15T13:05:10Z","updated_at":"2018-01-15T13:05:10Z","author_association":"CONTRIBUTOR","body":"Can you give concrete examples of things that you would like to do with this vector product? Scripting may or may not be the right tool depending on what you want to achieve. For instance I suspect implementing image similarity or a machine-learned scoring algorithm might require different solutions, even if both problems boil down to a dot product in the end. In addition to concrete examples, I'd be curious to know:\r\n - whether vectors are expected to be dense or sparse\r\n - how many dimensions do you expect to need?\r\n\r\nFor the record, we already have a way to run dot products: the `bool` query. If you have 3 sub queries that produce scores sA, sB and sC on a given document, then boosting each of these queries with bA, bB and bC and putting them as `SHOULD` clauses of a `bool` query is effectively going to produce the dot product of [sA, sB, sC] and [bA, bB, bC] as a score. I'm not saying this is necessarily the right tool for the job, this is just to give some perspective. Using the `bool` query comes with a number of benefits like very efficient consumption of sparse clauses. We are also working on optimizing the retrieval of top-scoring hits, so if your use-case can be expressed with a `bool` query, it could that Elasticsearch would be able to efficiently compute the top matches efficiently in the future, without resorting to computing the dot product on every match.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/358834469","html_url":"https://github.com/elastic/elasticsearch/issues/28109#issuecomment-358834469","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28109","id":358834469,"node_id":"MDEyOklzc3VlQ29tbWVudDM1ODgzNDQ2OQ==","user":{"login":"adamhadani","id":139888,"node_id":"MDQ6VXNlcjEzOTg4OA==","avatar_url":"https://avatars0.githubusercontent.com/u/139888?v=4","gravatar_id":"","url":"https://api.github.com/users/adamhadani","html_url":"https://github.com/adamhadani","followers_url":"https://api.github.com/users/adamhadani/followers","following_url":"https://api.github.com/users/adamhadani/following{/other_user}","gists_url":"https://api.github.com/users/adamhadani/gists{/gist_id}","starred_url":"https://api.github.com/users/adamhadani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adamhadani/subscriptions","organizations_url":"https://api.github.com/users/adamhadani/orgs","repos_url":"https://api.github.com/users/adamhadani/repos","events_url":"https://api.github.com/users/adamhadani/events{/privacy}","received_events_url":"https://api.github.com/users/adamhadani/received_events","type":"User","site_admin":false},"created_at":"2018-01-19T01:06:28Z","updated_at":"2018-01-19T01:06:28Z","author_association":"NONE","body":"@jpountz -\r\n\r\nMy current use case involves sparse vectors with dimensionality on the order of a few hundred dimensions. More specifically, typical number of non-zero entries  is expected to be << 100.\r\n\r\nI suspect for a lot of use cases vectors could be expected to be one-hot encoded or integers, although for my current use case they can be floats in general.\r\n\r\nIs this something that sounds like it can fit into your suggestion of using `bool` sub-queries? I'm not sure since we are talking about potentially tens or hundreds of 'components'..","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/372786478","html_url":"https://github.com/elastic/elasticsearch/issues/28109#issuecomment-372786478","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28109","id":372786478,"node_id":"MDEyOklzc3VlQ29tbWVudDM3Mjc4NjQ3OA==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2018-03-13T19:18:02Z","updated_at":"2018-03-13T19:18:02Z","author_association":"CONTRIBUTOR","body":"@jpountz Please re-assign this issue if it's not appropriate for you to own.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384797277","html_url":"https://github.com/elastic/elasticsearch/issues/28109#issuecomment-384797277","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28109","id":384797277,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDc5NzI3Nw==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2018-04-26T21:38:54Z","updated_at":"2018-04-26T21:38:54Z","author_association":"MEMBER","body":"We discussed this internally and agreed adding this functionality into the server is not something we want to do. This fits much better as a community plugin (like the one linked in the opening comment). Note that this function could now also be added via a [custom function in painless](https://github.com/elastic/elasticsearch/tree/master/plugins/examples/painless-whitelist) which is provided by a server plugin, but called like any normal painless method.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/432088077","html_url":"https://github.com/elastic/elasticsearch/issues/28109#issuecomment-432088077","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28109","id":432088077,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMjA4ODA3Nw==","user":{"login":"seperman","id":2314797,"node_id":"MDQ6VXNlcjIzMTQ3OTc=","avatar_url":"https://avatars2.githubusercontent.com/u/2314797?v=4","gravatar_id":"","url":"https://api.github.com/users/seperman","html_url":"https://github.com/seperman","followers_url":"https://api.github.com/users/seperman/followers","following_url":"https://api.github.com/users/seperman/following{/other_user}","gists_url":"https://api.github.com/users/seperman/gists{/gist_id}","starred_url":"https://api.github.com/users/seperman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/seperman/subscriptions","organizations_url":"https://api.github.com/users/seperman/orgs","repos_url":"https://api.github.com/users/seperman/repos","events_url":"https://api.github.com/users/seperman/events{/privacy}","received_events_url":"https://api.github.com/users/seperman/received_events","type":"User","site_admin":false},"created_at":"2018-10-23T04:34:14Z","updated_at":"2018-10-23T04:35:06Z","author_association":"NONE","body":"I know you have closed down this issue but I am with adamhadani that this is pretty basic math. I don't know how to write ES plugins and probably will just do it in Python then instead. :( ","performed_via_github_app":null}]