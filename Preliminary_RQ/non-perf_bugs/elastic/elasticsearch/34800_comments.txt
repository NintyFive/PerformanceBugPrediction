[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/432628791","html_url":"https://github.com/elastic/elasticsearch/issues/34800#issuecomment-432628791","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34800","id":432628791,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMjYyODc5MQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-10-24T12:07:10Z","updated_at":"2018-10-24T12:07:10Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/432697211","html_url":"https://github.com/elastic/elasticsearch/issues/34800#issuecomment-432697211","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34800","id":432697211,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMjY5NzIxMQ==","user":{"login":"tabletick","id":2270538,"node_id":"MDQ6VXNlcjIyNzA1Mzg=","avatar_url":"https://avatars2.githubusercontent.com/u/2270538?v=4","gravatar_id":"","url":"https://api.github.com/users/tabletick","html_url":"https://github.com/tabletick","followers_url":"https://api.github.com/users/tabletick/followers","following_url":"https://api.github.com/users/tabletick/following{/other_user}","gists_url":"https://api.github.com/users/tabletick/gists{/gist_id}","starred_url":"https://api.github.com/users/tabletick/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tabletick/subscriptions","organizations_url":"https://api.github.com/users/tabletick/orgs","repos_url":"https://api.github.com/users/tabletick/repos","events_url":"https://api.github.com/users/tabletick/events{/privacy}","received_events_url":"https://api.github.com/users/tabletick/received_events","type":"User","site_admin":false},"created_at":"2018-10-24T15:04:56Z","updated_at":"2018-10-24T15:04:56Z","author_association":"NONE","body":"At least my contribution for the course in stockholm.. ;)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/432800536","html_url":"https://github.com/elastic/elasticsearch/issues/34800#issuecomment-432800536","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34800","id":432800536,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMjgwMDUzNg==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-10-24T19:40:29Z","updated_at":"2018-10-24T19:40:29Z","author_association":"MEMBER","body":"In general I think that indicating a client error is the correct response here, and to these types of situations. The server is indicating that it was asked to do something that does not make sense given the current state. I do not think that 404 is the correct response, as that could easily be mis-construed as there being a problem with the path sent to the server in the request.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/433550309","html_url":"https://github.com/elastic/elasticsearch/issues/34800#issuecomment-433550309","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34800","id":433550309,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMzU1MDMwOQ==","user":{"login":"jpcarey","id":5118470,"node_id":"MDQ6VXNlcjUxMTg0NzA=","avatar_url":"https://avatars2.githubusercontent.com/u/5118470?v=4","gravatar_id":"","url":"https://api.github.com/users/jpcarey","html_url":"https://github.com/jpcarey","followers_url":"https://api.github.com/users/jpcarey/followers","following_url":"https://api.github.com/users/jpcarey/following{/other_user}","gists_url":"https://api.github.com/users/jpcarey/gists{/gist_id}","starred_url":"https://api.github.com/users/jpcarey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpcarey/subscriptions","organizations_url":"https://api.github.com/users/jpcarey/orgs","repos_url":"https://api.github.com/users/jpcarey/repos","events_url":"https://api.github.com/users/jpcarey/events{/privacy}","received_events_url":"https://api.github.com/users/jpcarey/received_events","type":"User","site_admin":false},"created_at":"2018-10-26T21:37:27Z","updated_at":"2018-10-26T21:37:27Z","author_association":"MEMBER","body":"@jasontedor it feels a bit weird to return a 400 on a GET request where no parameters were actually specified. It is supposed to return an explain for the allocation of the first unassigned shard. If no unassigned shards exist, why not respond with an empty body + 200? I fail to see why this GET should be categorized as a malformed request. A search request that results in `0` hits is not an error.\r\n\r\n400 = `The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.`","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/438702589","html_url":"https://github.com/elastic/elasticsearch/issues/34800#issuecomment-438702589","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34800","id":438702589,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODcwMjU4OQ==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2018-11-14T15:28:35Z","updated_at":"2018-11-14T15:28:35Z","author_association":"MEMBER","body":"We discussed this and decided to leave the API as-is. We felt the indication that a shard must be specified for the request in the event there are no unassigned shards warrants a 400 response, because the request is indeed malformed in that it does not provide what is needed for the request to succeed. Returning a 200 and empty body gives no indication that in order to correctly use the API a shard (even an already allocated shard) should be specified.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/438761607","html_url":"https://github.com/elastic/elasticsearch/issues/34800#issuecomment-438761607","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34800","id":438761607,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODc2MTYwNw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-11-14T18:09:58Z","updated_at":"2018-11-14T18:09:58Z","author_association":"MEMBER","body":"I want to point out one thing here. This is a response to the comment about the intent of 400. I don't know there the quoted text is from. The specification for 400 is:\r\n\r\n```\r\n6.5.1.  400 Bad Request\r\n\r\n   The 400 (Bad Request) status code indicates that the server cannot or\r\n   will not process the request due to something that is perceived to be\r\n   a client error (e.g., malformed request syntax, invalid request\r\n   message framing, or deceptive request routing).\r\n```\r\n\r\nThe key here is \"perceived to be a client error\". Malformed request syntax is only an example of what could be considered a bad request. The generic idea applies here though: asking for an explanation for an unassigned shard when there are no unassigned shards, we are considering this a client error. It's a bad request.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/438776630","html_url":"https://github.com/elastic/elasticsearch/issues/34800#issuecomment-438776630","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34800","id":438776630,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODc3NjYzMA==","user":{"login":"jpcarey","id":5118470,"node_id":"MDQ6VXNlcjUxMTg0NzA=","avatar_url":"https://avatars2.githubusercontent.com/u/5118470?v=4","gravatar_id":"","url":"https://api.github.com/users/jpcarey","html_url":"https://github.com/jpcarey","followers_url":"https://api.github.com/users/jpcarey/followers","following_url":"https://api.github.com/users/jpcarey/following{/other_user}","gists_url":"https://api.github.com/users/jpcarey/gists{/gist_id}","starred_url":"https://api.github.com/users/jpcarey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpcarey/subscriptions","organizations_url":"https://api.github.com/users/jpcarey/orgs","repos_url":"https://api.github.com/users/jpcarey/repos","events_url":"https://api.github.com/users/jpcarey/events{/privacy}","received_events_url":"https://api.github.com/users/jpcarey/received_events","type":"User","site_admin":false},"created_at":"2018-11-14T18:54:31Z","updated_at":"2018-11-14T18:54:31Z","author_association":"MEMBER","body":"Grabbed from an older standard (rfc2616 10.4.1), sorry about that @jasontedor. Thank you for the clarification, although I'll still disagree (but accept the resolution here) 😄 My opinion, the client shouldn't need pre-existing knowledge of the servers \"state\". The response has confused me more than once, especially when the shard allocation state changed between the time checking cluster health and asking for explain.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/438844104","html_url":"https://github.com/elastic/elasticsearch/issues/34800#issuecomment-438844104","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34800","id":438844104,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODg0NDEwNA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-11-14T22:33:02Z","updated_at":"2018-11-14T22:33:02Z","author_association":"MEMBER","body":"> My opinion, the client shouldn't need pre-existing knowledge of the servers \"state\".\r\n\r\nGiven that the intended use of this API is explaining:\r\n - why a cluster is not green\r\n - why a shard is allocated where it is allocated\r\n\r\nwe think a client should.\r\n\r\n> The response has confused me more than once, especially when the shard allocation state changed between the time checking cluster health and asking for explain.\r\n\r\nI think this is an edge case.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/438993357","html_url":"https://github.com/elastic/elasticsearch/issues/34800#issuecomment-438993357","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34800","id":438993357,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODk5MzM1Nw==","user":{"login":"Mpdreamz","id":245275,"node_id":"MDQ6VXNlcjI0NTI3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/245275?v=4","gravatar_id":"","url":"https://api.github.com/users/Mpdreamz","html_url":"https://github.com/Mpdreamz","followers_url":"https://api.github.com/users/Mpdreamz/followers","following_url":"https://api.github.com/users/Mpdreamz/following{/other_user}","gists_url":"https://api.github.com/users/Mpdreamz/gists{/gist_id}","starred_url":"https://api.github.com/users/Mpdreamz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mpdreamz/subscriptions","organizations_url":"https://api.github.com/users/Mpdreamz/orgs","repos_url":"https://api.github.com/users/Mpdreamz/repos","events_url":"https://api.github.com/users/Mpdreamz/events{/privacy}","received_events_url":"https://api.github.com/users/Mpdreamz/received_events","type":"User","site_admin":false},"created_at":"2018-11-15T10:30:13Z","updated_at":"2018-11-15T10:31:02Z","author_association":"MEMBER","body":"Hate to be a stickler but I think the reasoning for `400` is quite a liberal interpretation of the RFC.\r\n\r\nA `400` is widely accepted to mean: something you've sent does not validate (headers/payload) please go fix your request. \r\n\r\nNot send the request at a later time because we are not in a state to fulfill this request at this point of time.\r\n\r\nThe question this API answers is give me the list of shards that are causing my cluster not be green. If there are no shards that cause it not to be green I think we should return a `200` with an empty array. \r\n\r\nThis is what we do for e.g `GET /_cluster/pending_tasks` it will simply return an empty array if there are no tasks pending.\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/439003145","html_url":"https://github.com/elastic/elasticsearch/issues/34800#issuecomment-439003145","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34800","id":439003145,"node_id":"MDEyOklzc3VlQ29tbWVudDQzOTAwMzE0NQ==","user":{"login":"karmi","id":4790,"node_id":"MDQ6VXNlcjQ3OTA=","avatar_url":"https://avatars1.githubusercontent.com/u/4790?v=4","gravatar_id":"","url":"https://api.github.com/users/karmi","html_url":"https://github.com/karmi","followers_url":"https://api.github.com/users/karmi/followers","following_url":"https://api.github.com/users/karmi/following{/other_user}","gists_url":"https://api.github.com/users/karmi/gists{/gist_id}","starred_url":"https://api.github.com/users/karmi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karmi/subscriptions","organizations_url":"https://api.github.com/users/karmi/orgs","repos_url":"https://api.github.com/users/karmi/repos","events_url":"https://api.github.com/users/karmi/events{/privacy}","received_events_url":"https://api.github.com/users/karmi/received_events","type":"User","site_admin":false},"created_at":"2018-11-15T11:05:41Z","updated_at":"2018-11-15T11:05:41Z","author_association":"CONTRIBUTOR","body":"I agree with @Mpdreamz, and consider a `200` response appropriate in this situation.\r\n\r\nIn other words, when a client calls this API and gets an `200` status, and and empty JSON object/list, that's aligned with the purpose of the API call, in my understanding: no unassigned/inflight/etc shards, everything is OK.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/439082352","html_url":"https://github.com/elastic/elasticsearch/issues/34800#issuecomment-439082352","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34800","id":439082352,"node_id":"MDEyOklzc3VlQ29tbWVudDQzOTA4MjM1Mg==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2018-11-15T15:35:55Z","updated_at":"2018-11-15T15:42:20Z","author_association":"MEMBER","body":"> A 400 is widely accepted to mean: something you've sent does not validate (headers/payload) please go fix your request.\r\n\r\nThat is correct, in this case, the request must be fixed by specifying a shard to explain, regardless of the color of the cluster.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/439089421","html_url":"https://github.com/elastic/elasticsearch/issues/34800#issuecomment-439089421","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34800","id":439089421,"node_id":"MDEyOklzc3VlQ29tbWVudDQzOTA4OTQyMQ==","user":{"login":"HonzaKral","id":32132,"node_id":"MDQ6VXNlcjMyMTMy","avatar_url":"https://avatars0.githubusercontent.com/u/32132?v=4","gravatar_id":"","url":"https://api.github.com/users/HonzaKral","html_url":"https://github.com/HonzaKral","followers_url":"https://api.github.com/users/HonzaKral/followers","following_url":"https://api.github.com/users/HonzaKral/following{/other_user}","gists_url":"https://api.github.com/users/HonzaKral/gists{/gist_id}","starred_url":"https://api.github.com/users/HonzaKral/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HonzaKral/subscriptions","organizations_url":"https://api.github.com/users/HonzaKral/orgs","repos_url":"https://api.github.com/users/HonzaKral/repos","events_url":"https://api.github.com/users/HonzaKral/events{/privacy}","received_events_url":"https://api.github.com/users/HonzaKral/received_events","type":"User","site_admin":false},"created_at":"2018-11-15T15:54:45Z","updated_at":"2018-11-15T15:54:45Z","author_association":"MEMBER","body":"Just to pile on - since there is *as of now* no way for the client code to reliably identify what is the underlying cause of a `400` (misshapen body VS illegal request)  then `400` is not usable from anyone's code as it requires a human to interpret.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/439102293","html_url":"https://github.com/elastic/elasticsearch/issues/34800#issuecomment-439102293","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34800","id":439102293,"node_id":"MDEyOklzc3VlQ29tbWVudDQzOTEwMjI5Mw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-11-15T16:30:38Z","updated_at":"2018-11-15T16:30:38Z","author_association":"MEMBER","body":"This is an API for humans.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/439162640","html_url":"https://github.com/elastic/elasticsearch/issues/34800#issuecomment-439162640","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34800","id":439162640,"node_id":"MDEyOklzc3VlQ29tbWVudDQzOTE2MjY0MA==","user":{"login":"Mpdreamz","id":245275,"node_id":"MDQ6VXNlcjI0NTI3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/245275?v=4","gravatar_id":"","url":"https://api.github.com/users/Mpdreamz","html_url":"https://github.com/Mpdreamz","followers_url":"https://api.github.com/users/Mpdreamz/followers","following_url":"https://api.github.com/users/Mpdreamz/following{/other_user}","gists_url":"https://api.github.com/users/Mpdreamz/gists{/gist_id}","starred_url":"https://api.github.com/users/Mpdreamz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mpdreamz/subscriptions","organizations_url":"https://api.github.com/users/Mpdreamz/orgs","repos_url":"https://api.github.com/users/Mpdreamz/repos","events_url":"https://api.github.com/users/Mpdreamz/events{/privacy}","received_events_url":"https://api.github.com/users/Mpdreamz/received_events","type":"User","site_admin":false},"created_at":"2018-11-15T19:32:58Z","updated_at":"2018-11-15T19:39:36Z","author_association":"MEMBER","body":"> This is an API for humans.\r\n\r\nI don't think we should use this argument ever, we never communicated this explicitly nor should it change the design of how we expose API's. \r\n\r\n> That is correct, in this case, the request must be fixed by specifying a shard to explain, regardless of the color of the cluster.\r\n\r\nThe current behavior is to return only the first unallocated shard rather then listing all the unallocated shards.\r\n\r\nA `404` would be better in this case in my opinion:\r\n\r\n```\r\nGET /_cluster/allocation/explain\r\n{\r\n  \"error\": {\r\n    \"root_cause\": [\r\n      {\r\n        \"type\": \"illegal_argument_exception\",\r\n        \"reason\": \"unable to find any unassigned shards to explain [ClusterAllocationExplainRequest[useAnyUnassignedShard=true,includeYesDecisions?=false]\"\r\n      }\r\n    ],\r\n    \"type\": \"illegal_argument_exception\",\r\n    \"reason\": \"unable to find any unassigned shards to explain [ClusterAllocationExplainRequest[useAnyUnassignedShard=true,includeYesDecisions?=false]\"\r\n  },\r\n  \"status\": 404\r\n}\r\n```\r\n\r\nJust as the following currently does.\r\n\r\n```json\r\nGET /_cluster/allocation/explain\r\n{\r\n  \"index\": \"index4\",\r\n  \"shard\": 10,\r\n  \"primary\": true\r\n}\r\n\r\n...returns...\r\n\r\n{\r\n  \"error\": {\r\n    \"root_cause\": [\r\n      {\r\n        \"type\": \"shard_not_found_exception\",\r\n        \"reason\": \"no such shard\",\r\n        \"index_uuid\": \"5x8DUflATamZMLmgyuPlvw\",\r\n        \"shard\": \"10\",\r\n        \"index\": \"index4\"\r\n      }\r\n    ],\r\n    \"type\": \"shard_not_found_exception\",\r\n    \"reason\": \"no such shard\",\r\n    \"index_uuid\": \"5x8DUflATamZMLmgyuPlvw\",\r\n    \"shard\": \"10\",\r\n    \"index\": \"index4\"\r\n  },\r\n  \"status\": 404\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","performed_via_github_app":null}]