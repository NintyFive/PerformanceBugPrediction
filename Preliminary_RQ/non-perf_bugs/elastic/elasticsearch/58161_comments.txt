[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/644692468","html_url":"https://github.com/elastic/elasticsearch/issues/58161#issuecomment-644692468","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/58161","id":644692468,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NDY5MjQ2OA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-06-16T10:59:35Z","updated_at":"2020-06-16T10:59:35Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search (:Search/Ranking)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/644769516","html_url":"https://github.com/elastic/elasticsearch/issues/58161#issuecomment-644769516","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/58161","id":644769516,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NDc2OTUxNg==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2020-06-16T13:34:51Z","updated_at":"2020-06-16T13:54:56Z","author_association":"CONTRIBUTOR","body":"@aksel  Thanks for submitting a feature request.\r\n\r\n> it seems that only the latest timestamp is acted upon by distance_feature\r\n\r\nIf a document has multiple values for a field, `distance_feature` query  from multiple values chooses a value that is closest to the `origin` (that produces the highest score).  And there is no way for other values to effect the score. \r\n\r\nI see how it could be helpful to specify a custom `multi_values_mode`.  But I don't think it will work with `distance_feature` query as it uses internal optimizations to efficiently skip documents that will not produce competitive scores.  I think it would very difficult to reason about what documents can be skipped if we need a sum of scores from multi-values.\r\n\r\n\r\nAs an alternative I can suggest:\r\n- Use script_score function and write you custom script. This query is slower than distance_feature query as it needs to go through all matched documents.\r\n```js\r\n{\r\n  \"query\": {\r\n    \"script_score\": {\r\n      \"query\" : {\r\n        \"match_all\" : {}\r\n      },\r\n      \"script\": {\r\n        \"source\": \"\"\"\r\n        float my_score = 0;\r\n        for (int i = 0; i < doc['date'].length; ++i) {\r\n              my_score += decayDateLinear(params.origin, params.scale, params.offset, params.decay, doc['date'][i])\r\n        }\r\n        return my_score;\r\n        \"\"\",\r\n        \"params\": {\r\n          \"origin\": \"2020-01-01\",\r\n          \"scale\": \"1d\",\r\n          \"offset\": \"0\",\r\n          \"decay\": 0.5\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n- Use decay functions of function_score query with [multi_values_mode](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html#_multi_values_fields).  This query is slower than `distance_feature` query as it needs to go through all matched documents. Also, there is a plan to deprecate it from 8.0.\r\n- See if [rank_feature](https://www.elastic.co/guide/en/elasticsearch/reference/master/rank-feature.html) or [rank_features](https://www.elastic.co/guide/en/elasticsearch/reference/master/rank-features.html) could be helpful for your use case.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/645279883","html_url":"https://github.com/elastic/elasticsearch/issues/58161#issuecomment-645279883","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/58161","id":645279883,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NTI3OTg4Mw==","user":{"login":"aksel","id":6985716,"node_id":"MDQ6VXNlcjY5ODU3MTY=","avatar_url":"https://avatars1.githubusercontent.com/u/6985716?v=4","gravatar_id":"","url":"https://api.github.com/users/aksel","html_url":"https://github.com/aksel","followers_url":"https://api.github.com/users/aksel/followers","following_url":"https://api.github.com/users/aksel/following{/other_user}","gists_url":"https://api.github.com/users/aksel/gists{/gist_id}","starred_url":"https://api.github.com/users/aksel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aksel/subscriptions","organizations_url":"https://api.github.com/users/aksel/orgs","repos_url":"https://api.github.com/users/aksel/repos","events_url":"https://api.github.com/users/aksel/events{/privacy}","received_events_url":"https://api.github.com/users/aksel/received_events","type":"User","site_admin":false},"created_at":"2020-06-17T10:02:48Z","updated_at":"2020-06-17T10:02:48Z","author_association":"NONE","body":"Cool, thanks for the suggestions!\r\n\r\nYour example is very helpful.","performed_via_github_app":null}]