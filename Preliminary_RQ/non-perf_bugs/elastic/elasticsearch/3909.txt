{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3909","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3909/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3909/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3909/events","html_url":"https://github.com/elastic/elasticsearch/issues/3909","id":21000756,"node_id":"MDU6SXNzdWUyMTAwMDc1Ng==","number":3909,"title":"Cannot index some geo_shape geometries (before and after Geo Refactoring changes)","user":{"login":"tommcintyre","id":5124538,"node_id":"MDQ6VXNlcjUxMjQ1Mzg=","avatar_url":"https://avatars3.githubusercontent.com/u/5124538?v=4","gravatar_id":"","url":"https://api.github.com/users/tommcintyre","html_url":"https://github.com/tommcintyre","followers_url":"https://api.github.com/users/tommcintyre/followers","following_url":"https://api.github.com/users/tommcintyre/following{/other_user}","gists_url":"https://api.github.com/users/tommcintyre/gists{/gist_id}","starred_url":"https://api.github.com/users/tommcintyre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tommcintyre/subscriptions","organizations_url":"https://api.github.com/users/tommcintyre/orgs","repos_url":"https://api.github.com/users/tommcintyre/repos","events_url":"https://api.github.com/users/tommcintyre/events{/privacy}","received_events_url":"https://api.github.com/users/tommcintyre/received_events","type":"User","site_admin":false},"labels":[{"id":141079527,"node_id":"MDU6TGFiZWwxNDEwNzk1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Geo","name":":Analytics/Geo","color":"0e8a16","default":false,"description":"Indexing, search aggregations of geo points and shapes"},{"id":110557212,"node_id":"MDU6TGFiZWwxMTA1NTcyMTI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/high%20hanging%20fruit","name":"high hanging fruit","color":"fc6149","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"nknize","id":830187,"node_id":"MDQ6VXNlcjgzMDE4Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/830187?v=4","gravatar_id":"","url":"https://api.github.com/users/nknize","html_url":"https://github.com/nknize","followers_url":"https://api.github.com/users/nknize/followers","following_url":"https://api.github.com/users/nknize/following{/other_user}","gists_url":"https://api.github.com/users/nknize/gists{/gist_id}","starred_url":"https://api.github.com/users/nknize/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nknize/subscriptions","organizations_url":"https://api.github.com/users/nknize/orgs","repos_url":"https://api.github.com/users/nknize/repos","events_url":"https://api.github.com/users/nknize/events{/privacy}","received_events_url":"https://api.github.com/users/nknize/received_events","type":"User","site_admin":false},"assignees":[{"login":"nknize","id":830187,"node_id":"MDQ6VXNlcjgzMDE4Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/830187?v=4","gravatar_id":"","url":"https://api.github.com/users/nknize","html_url":"https://github.com/nknize","followers_url":"https://api.github.com/users/nknize/followers","following_url":"https://api.github.com/users/nknize/following{/other_user}","gists_url":"https://api.github.com/users/nknize/gists{/gist_id}","starred_url":"https://api.github.com/users/nknize/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nknize/subscriptions","organizations_url":"https://api.github.com/users/nknize/orgs","repos_url":"https://api.github.com/users/nknize/repos","events_url":"https://api.github.com/users/nknize/events{/privacy}","received_events_url":"https://api.github.com/users/nknize/received_events","type":"User","site_admin":false}],"milestone":null,"comments":10,"created_at":"2013-10-15T07:36:05Z","updated_at":"2015-05-14T03:28:40Z","closed_at":"2015-05-14T03:28:38Z","author_association":"NONE","active_lock_reason":null,"body":"Probably FAO @chilling .\n\nI have a mapping that includes some geo_shape fields. My test data contains GeoJSON fields that specify points, but do so in the form of polygons with the same lon/lat repeated 4 (or sometimes 3) times. This causes a validation exception to be thrown up from within Spatial4J when it generates the polygon.\n\nI am not sure if this is technically invalid GeoJSON or not - however, this is a form that the Twitter API generates frequently (around 1 in 1500 tweets in my dataset), and other libraries I have used can parse it OK. It would be good if ES can attempt to do what it can with data like this, rather than failing (i.e. treat it as another appropriate type like a point, or relax the verification).\n\nThis is tested against the branch that includes the Geo-Refactoring improvements at chilling/elasticsearch@0369983afdcc7c6e8db7703b20889f69ac14221a (it does also happen on master, if you can get that far!).\n\nThe stack trace:\n\n```\norg.elasticsearch.index.mapper.MapperParsingException: failed to parse [place]\n    at org.elasticsearch.index.mapper.geo.GeoShapeFieldMapper.parse(GeoShapeFieldMapper.java:232)\n    at org.elasticsearch.index.mapper.object.ObjectMapper.serializeObject(ObjectMapper.java:515)\n    at org.elasticsearch.index.mapper.object.ObjectMapper.parse(ObjectMapper.java:457)\n    at org.elasticsearch.index.mapper.object.ObjectMapper.serializeObject(ObjectMapper.java:515)\n    at org.elasticsearch.index.mapper.object.ObjectMapper.parse(ObjectMapper.java:457)\n    at org.elasticsearch.index.mapper.object.ObjectMapper.serializeObject(ObjectMapper.java:515)\n    at org.elasticsearch.index.mapper.object.ObjectMapper.parse(ObjectMapper.java:457)\n    at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:508)\n    at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:452)\n    at org.elasticsearch.index.shard.service.InternalIndexShard.prepareIndex(InternalIndexShard.java:341)\n    at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:203)\n    at org.elasticsearch.action.support.replication.TransportShardReplicationOperationAction$AsyncShardOperationAction.performOnPrimary(TransportShardReplicationOperationAction.java:533)\n    at org.elasticsearch.action.support.replication.TransportShardReplicationOperationAction$AsyncShardOperationAction$1.run(TransportShardReplicationOperationAction.java:418)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    ... 1 more\nCaused by: com.spatial4j.core.exception.InvalidShapeException: Too few distinct points in geometry component at or near point (-81.872495, 36.163117, NaN)\n    at com.spatial4j.core.shape.jts.JtsGeometry.(JtsGeometry.java:90)\n    at org.elasticsearch.common.geo.builders.BasePolygonBuilder.build(BasePolygonBuilder.java:153)\n    at org.elasticsearch.index.mapper.geo.GeoShapeFieldMapper.parse(GeoShapeFieldMapper.java:219)\n    ... 15 more\n```\n\nTo reproduce:\n\n```\ncurl -XPUT http://server:9200/dummyindex -d '\n{\n    \"mappings\": {\n        \"dummytype\": {\n            \"properties\": {\n                \"place\": {\n                    \"type\": \"geo_shape\",\n                    \"tree\": \"quadtree\",\n                    \"precision\": \"10m\"\n                }\n            }\n        }\n    }\n}'\n\ncurl -XPOST http://server:9200/dummyindex/dummytype/1 -d '\n{\n    \"place\": {\n        \"coordinates\": [[[-81.872495, 36.163117], [-81.872495, 36.163117], [-81.872495, 36.163117], [-81.872495, 36.163117]]],\n        \"type\": \"Polygon\"\n    }\n}'\n```\n\nI wrote a nasty, hacky workaround to fix this particular case - see below. This is obviously not an acceptable general purpose solution, as it doesn't address the issue for any other shapes, or other cases like only having 2 or 3 distinct points. I am not really familiar enough with the libraries, but I guess a real fix might involve simplifying or normalizing each geometry somehow before it gets passed to Spatial4J?\n\nAlternatively it could be deemed that this is not ES's job, and the GeoJSON needs to be more well-formed - but I think this is likely to be a common problem due to the source of this data, and because of the different expectations of different GeoJSON libraries.\n\nShapeBuilder.java:\n\n```\n-        protected static PolygonBuilder parsePolygon(CoordinateNode coordinates) {\n+        protected static ShapeBuilder parsePolygon(CoordinateNode coordinates) {\n             LineStringBuilder shell = parseLineString(coordinates.children.get(0));\n+            \n+            if (new HashSet<Coordinate>(shell.points).size() == 1)\n+                return newPoint(shell.points.get(0));\n+            \n             PolygonBuilder polygon = new PolygonBuilder(shell.points);\n             for (int i = 1; i < coordinates.children.size(); i++) {\n                 polygon.hole(parseLineString(coordinates.children.get(i)));\n\n...\n\n         protected static MultiPolygonBuilder parseMultiPolygon(CoordinateNode coordinates) {\n             MultiPolygonBuilder polygons = newMultiPolygon();\n             for (CoordinateNode node : coordinates.children) {\n-                polygons.polygon(parsePolygon(node));\n+              polygons.polygon((PolygonBuilder)parsePolygon(node));\n             }\n             return polygons;\n         }\n```\n","closed_by":{"login":"nknize","id":830187,"node_id":"MDQ6VXNlcjgzMDE4Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/830187?v=4","gravatar_id":"","url":"https://api.github.com/users/nknize","html_url":"https://github.com/nknize","followers_url":"https://api.github.com/users/nknize/followers","following_url":"https://api.github.com/users/nknize/following{/other_user}","gists_url":"https://api.github.com/users/nknize/gists{/gist_id}","starred_url":"https://api.github.com/users/nknize/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nknize/subscriptions","organizations_url":"https://api.github.com/users/nknize/orgs","repos_url":"https://api.github.com/users/nknize/repos","events_url":"https://api.github.com/users/nknize/events{/privacy}","received_events_url":"https://api.github.com/users/nknize/received_events","type":"User","site_admin":false},"performed_via_github_app":null}