{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/62090","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/62090/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/62090/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/62090/events","html_url":"https://github.com/elastic/elasticsearch/issues/62090","id":695803381,"node_id":"MDU6SXNzdWU2OTU4MDMzODE=","number":62090,"title":"[CI] DataStreamsRestIT.test {p0=data_stream/90_reindex/Reindex from index into data stream} failure","user":{"login":"probakowski","id":3896475,"node_id":"MDQ6VXNlcjM4OTY0NzU=","avatar_url":"https://avatars1.githubusercontent.com/u/3896475?v=4","gravatar_id":"","url":"https://api.github.com/users/probakowski","html_url":"https://github.com/probakowski","followers_url":"https://api.github.com/users/probakowski/followers","following_url":"https://api.github.com/users/probakowski/following{/other_user}","gists_url":"https://api.github.com/users/probakowski/gists{/gist_id}","starred_url":"https://api.github.com/users/probakowski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/probakowski/subscriptions","organizations_url":"https://api.github.com/users/probakowski/orgs","repos_url":"https://api.github.com/users/probakowski/repos","events_url":"https://api.github.com/users/probakowski/events{/privacy}","received_events_url":"https://api.github.com/users/probakowski/received_events","type":"User","site_admin":false},"labels":[{"id":1915711992,"node_id":"MDU6TGFiZWwxOTE1NzExOTky","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Data%20streams","name":":Core/Features/Data streams","color":"0e8a16","default":false,"description":""},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"},{"id":1967496097,"node_id":"MDU6TGFiZWwxOTY3NDk2MDk3","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Core/Features","name":"Team:Core/Features","color":"fef2c0","default":false,"description":"Meta label for core/features team"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-09-08T11:50:39Z","updated_at":"2020-09-09T06:30:12Z","closed_at":"2020-09-09T06:30:12Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Build scan**:\r\nhttps://gradle-enterprise.elastic.co/s/y6ykknsazcvp6\r\n**Repro line**:\r\n./gradlew ':x-pack:plugin:data-streams:qa:rest:yamlRestTest' --tests \"org.elasticsearch.xpack.datastreams.DataStreamsRestIT.test {p0=data_stream/90_reindex/Reindex from index into data stream}\" -Dtests.seed=8F6FB95F9DB7D007 -Dtests.security.manager=true -Dbuild.snapshot=false -Dtests.jvm.argline=\"-Dbuild.snapshot=false\" -Dtests.locale=et-EE -Dtests.timezone=America/Indiana/Knox -Druntime.java=11\r\n**Reproduces locally?**:\r\nNo \r\n**Applicable branches**:\r\nmaster, 7.x, 7.9\r\n**Failure history**:\r\nFailures started on 9/7, it seems it only fails on release job\r\nhttps://gradle-enterprise.elastic.co/scans/tests?failures.failureClassification=non_verification&list.offset=0&list.size=50&list.sortColumn=startTime&list.sortOrder=desc&search.buildToolTypes=gradle&search.buildToolTypes=maven&search.relativeStartTime=P7D&search.timeZoneId=Europe/Warsaw&tests.container=org.elasticsearch.xpack.datastreams.DataStreamsRestIT&tests.sortField=FAILED&tests.test=test%20%7Bp0%3Ddata_stream/90_reindex/Reindex%20from%20index%20into%20data%20stream%7D&tests.unstableOnly=true\r\n**Failure excerpt**:\r\n```\r\n[2020-09-08T03:50:41,333][INFO ][o.e.x.d.DataStreamsRestIT] [test] Stash dump on test failure [{ |  \r\n-- | --\r\n  | \"stash\" : { |  \r\n  | \"body\" : { |  \r\n  | \"error\" : { |  \r\n  | \"root_cause\" : [ |  \r\n  | { |  \r\n  | \"type\" : \"illegal_argument_exception\", |  \r\n  | \"reason\" : \"index template [generic_logs_template] has index patterns [logs-*] matching patterns from existing templates [my-template] with patterns (my-template => [logs-*]) that have the same priority [0], multiple index templates may not match during index creation, please use a different priority\", |  \r\n  | \"stack_trace\" : \"org.elasticsearch.ElasticsearchException$1: index template [generic_logs_template] has index patterns [logs-*] matching patterns from existing templates [my-template] with patterns (my-template => [logs-*]) that have the same priority [0], multiple index templates may not match during index creation, please use a different priority |  \r\n  | at org.elasticsearch.ElasticsearchException.guessRootCauses(ElasticsearchException.java:644) |  \r\n  | at org.elasticsearch.ElasticsearchException.generateFailureXContent(ElasticsearchException.java:572) |  \r\n  | at org.elasticsearch.rest.BytesRestResponse.build(BytesRestResponse.java:149) |  \r\n  | at org.elasticsearch.rest.BytesRestResponse.<init>(BytesRestResponse.java:110) |  \r\n  | at org.elasticsearch.rest.BytesRestResponse.<init>(BytesRestResponse.java:93) |  \r\n  | at org.elasticsearch.rest.action.RestActionListener.onFailure(RestActionListener.java:58) |  \r\n  | at org.elasticsearch.client.node.NodeClient.lambda$executeLocally$1(NodeClient.java:94) |  \r\n  | at org.elasticsearch.tasks.TaskManager$1.onFailure(TaskManager.java:184) |  \r\n  | at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.lambda$doStart$2(TransportMasterNodeAction.java:158) |  \r\n  | at org.elasticsearch.action.ActionListener$2.onFailure(ActionListener.java:94) |  \r\n  | at org.elasticsearch.cluster.metadata.MetadataIndexTemplateService$4.onFailure(MetadataIndexTemplateService.java:412) |  \r\n  | at org.elasticsearch.cluster.service.MasterService$SafeClusterStateTaskListener.onFailure(MasterService.java:508) |  \r\n  | at org.elasticsearch.cluster.service.MasterService$TaskOutputs.notifyFailedTasks(MasterService.java:441) |  \r\n  | at org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:215) |  \r\n  | at org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151) |  \r\n  | at org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150) |  \r\n  | at org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188) |  \r\n  | at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:647) |  \r\n  | at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252) |  \r\n  | at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215) |  \r\n  | at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) |  \r\n  | at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) |  \r\n  | at java.base/java.lang.Thread.run(Thread.java:834) |  \r\n  | Caused by: java.lang.IllegalArgumentException: index template [generic_logs_template] has index patterns [logs-*] matching patterns from existing templates [my-template] with patterns (my-template => [logs-*]) that have the same priority [0], multiple index templates may not match during index creation, please use a different priority |  \r\n  | at org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.addIndexTemplateV2(MetadataIndexTemplateService.java:468) |  \r\n  | at org.elasticsearch.cluster.metadata.MetadataIndexTemplateService$4.execute(MetadataIndexTemplateService.java:417) |  \r\n  | at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47) |  \r\n  | at org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697) |  \r\n  | at org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319) |  \r\n  | at org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214) |  \r\n  | ... 9 more |  \r\n  | \" |  \r\n  | } |  \r\n  | ], |  \r\n  | \"type\" : \"illegal_argument_exception\", |  \r\n  | \"reason\" : \"index template [generic_logs_template] has index patterns [logs-*] matching patterns from existing templates [my-template] with patterns (my-template => [logs-*]) that have the same priority [0], multiple index templates may not match during index creation, please use a different priority\", |  \r\n  | \"stack_trace\" : \"java.lang.IllegalArgumentException: index template [generic_logs_template] has index patterns [logs-*] matching patterns from existing templates [my-template] with patterns (my-template => [logs-*]) that have the same priority [0], multiple index templates may not match during index creation, please use a different priority |  \r\n  | at org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.addIndexTemplateV2(MetadataIndexTemplateService.java:468) |  \r\n  | at org.elasticsearch.cluster.metadata.MetadataIndexTemplateService$4.execute(MetadataIndexTemplateService.java:417) |  \r\n  | at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47) |  \r\n  | at org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697) |  \r\n  | at org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319) |  \r\n  | at org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214) |  \r\n  | at org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151) |  \r\n  | at org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150) |  \r\n  | at org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188) |  \r\n  | at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:647) |  \r\n  | at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252) |  \r\n  | at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215) |  \r\n  | at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) |  \r\n  | at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) |  \r\n  | at java.base/java.lang.Thread.run(Thread.java:834) |  \r\n  | \" |  \r\n  | }, |  \r\n  | \"status\" : 400 |  \r\n  | } |  \r\n  | } |  \r\n  | }]\r\n\r\n\r\n```\r\n\r\n","closed_by":{"login":"ywangd","id":2344308,"node_id":"MDQ6VXNlcjIzNDQzMDg=","avatar_url":"https://avatars3.githubusercontent.com/u/2344308?v=4","gravatar_id":"","url":"https://api.github.com/users/ywangd","html_url":"https://github.com/ywangd","followers_url":"https://api.github.com/users/ywangd/followers","following_url":"https://api.github.com/users/ywangd/following{/other_user}","gists_url":"https://api.github.com/users/ywangd/gists{/gist_id}","starred_url":"https://api.github.com/users/ywangd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywangd/subscriptions","organizations_url":"https://api.github.com/users/ywangd/orgs","repos_url":"https://api.github.com/users/ywangd/repos","events_url":"https://api.github.com/users/ywangd/events{/privacy}","received_events_url":"https://api.github.com/users/ywangd/received_events","type":"User","site_admin":false},"performed_via_github_app":null}