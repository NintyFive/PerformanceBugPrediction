[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/675945284","html_url":"https://github.com/elastic/elasticsearch/issues/61316#issuecomment-675945284","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61316","id":675945284,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NTk0NTI4NA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-08-19T08:33:04Z","updated_at":"2020-08-19T08:33:04Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra (:Core/Infra/Build)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/675945287","html_url":"https://github.com/elastic/elasticsearch/issues/61316#issuecomment-675945287","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61316","id":675945287,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NTk0NTI4Nw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-08-19T08:33:04Z","updated_at":"2020-08-19T08:33:04Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-security (:Security/Security)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/683670598","html_url":"https://github.com/elastic/elasticsearch/issues/61316#issuecomment-683670598","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61316","id":683670598,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MzY3MDU5OA==","user":{"login":"henningandersen","id":33268011,"node_id":"MDQ6VXNlcjMzMjY4MDEx","avatar_url":"https://avatars2.githubusercontent.com/u/33268011?v=4","gravatar_id":"","url":"https://api.github.com/users/henningandersen","html_url":"https://github.com/henningandersen","followers_url":"https://api.github.com/users/henningandersen/followers","following_url":"https://api.github.com/users/henningandersen/following{/other_user}","gists_url":"https://api.github.com/users/henningandersen/gists{/gist_id}","starred_url":"https://api.github.com/users/henningandersen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/henningandersen/subscriptions","organizations_url":"https://api.github.com/users/henningandersen/orgs","repos_url":"https://api.github.com/users/henningandersen/repos","events_url":"https://api.github.com/users/henningandersen/events{/privacy}","received_events_url":"https://api.github.com/users/henningandersen/received_events","type":"User","site_admin":false},"created_at":"2020-08-31T09:27:02Z","updated_at":"2020-08-31T09:27:02Z","author_association":"CONTRIBUTOR","body":"More failures incoming of which several only have jenkins logs, like:\r\nhttps://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+7.9+matrix-java-periodic-fips/ES_RUNTIME_JAVA=zulu8,nodes=general-purpose/94/console\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/685482708","html_url":"https://github.com/elastic/elasticsearch/issues/61316#issuecomment-685482708","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61316","id":685482708,"node_id":"MDEyOklzc3VlQ29tbWVudDY4NTQ4MjcwOA==","user":{"login":"jkakavas","id":10281256,"node_id":"MDQ6VXNlcjEwMjgxMjU2","avatar_url":"https://avatars2.githubusercontent.com/u/10281256?v=4","gravatar_id":"","url":"https://api.github.com/users/jkakavas","html_url":"https://github.com/jkakavas","followers_url":"https://api.github.com/users/jkakavas/followers","following_url":"https://api.github.com/users/jkakavas/following{/other_user}","gists_url":"https://api.github.com/users/jkakavas/gists{/gist_id}","starred_url":"https://api.github.com/users/jkakavas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkakavas/subscriptions","organizations_url":"https://api.github.com/users/jkakavas/orgs","repos_url":"https://api.github.com/users/jkakavas/repos","events_url":"https://api.github.com/users/jkakavas/events{/privacy}","received_events_url":"https://api.github.com/users/jkakavas/received_events","type":"User","site_admin":false},"created_at":"2020-09-02T09:22:00Z","updated_at":"2020-11-01T22:39:23Z","author_association":"CONTRIBUTOR","body":"That was an interesting one, leaving some details here for posterity.\r\n\r\n1. The reason all these tests fail is that a cluster fails to form when TLS is used for the transport layer. \r\n\r\n```\r\njava.lang.IllegalStateException: cluster failed to form\r\n        at org.elasticsearch.test.InternalTestCluster.validateClusterFormed(InternalTestCluster.java:1299)\r\n        at org.elasticsearch.test.InternalTestCluster.reset(InternalTestCluster.java:1263)\r\n        at org.elasticsearch.test.InternalTestCluster.beforeTest(InternalTestCluster.java:1157)\r\n        at org.elasticsearch.test.ESIntegTestCase.lambda$beforeInternal$0(ESIntegTestCase.java:374)\r\n        at org.elasticsearch.test.ESIntegTestCase.beforeInternal(ESIntegTestCase.java:387)\r\n        at org.elasticsearch.test.ESIntegTestCase.setupTestCluster(ESIntegTestCase.java:2216)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1750)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:972)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:988)\r\n        at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\r\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n        at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n        at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n        at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n        at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n        at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\r\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:817)\r\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:468)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:947)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:832)\r\n```\r\nThe reason for the cluster failing to form is SSL handshake errors \r\n\r\n```\r\n  1> javax.net.ssl.SSLHandshakeException: Received fatal alert: handshake_failure\r\n  1>    at sun.security.ssl.Alert.createSSLException(Alert.java:131) ~[?:?]\r\n  1>    at sun.security.ssl.Alert.createSSLException(Alert.java:117) ~[?:?]\r\n  1>    at sun.security.ssl.TransportContext.fatal(TransportContext.java:311) ~[?:?]\r\n  1>    at sun.security.ssl.Alert$AlertConsumer.consume(Alert.java:293) ~[?:?]\r\n  1>    at sun.security.ssl.TransportContext.dispatch(TransportContext.java:185) ~[?:?]\r\n  1>    at sun.security.ssl.SSLTransport.decode(SSLTransport.java:156) ~[?:?]\r\n  1>    at sun.security.ssl.SSLEngineImpl.decode(SSLEngineImpl.java:575) ~[?:?]\r\n  1>    at sun.security.ssl.SSLEngineImpl.readRecord(SSLEngineImpl.java:531) ~[?:?]\r\n  1>    at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:398) ~[?:?]\r\n  1>    at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:377) ~[?:?]\r\n  1>    at javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:669) ~[?:1.8.0_265]\r\n  1>    at org.elasticsearch.xpack.security.transport.nio.SSLDriver.unwrap(SSLDriver.java:178) ~[main/:?]\r\n  1>    at org.elasticsearch.xpack.security.transport.nio.SSLDriver.access$1300(SSLDriver.java:50) ~[main/:?]\r\n  1>    at org.elasticsearch.xpack.security.transport.nio.SSLDriver$RegularMode.read(SSLDriver.java:327) ~[main/:?]\r\n  1>    at org.elasticsearch.xpack.security.transport.nio.SSLDriver.read(SSLDriver.java:119) ~[main/:?]\r\n  1>    at org.elasticsearch.xpack.security.transport.nio.SSLChannelContext.read(SSLChannelContext.java:165) ~[main/:?]\r\n  1>    at org.elasticsearch.nio.EventHandler.handleRead(EventHandler.java:139) ~[elasticsearch-nio-7.10.0-SNAPSHOT.jar:7.10.0-SNAPSHOT]\r\n  1>    at org.elasticsearch.nio.NioSelector.handleRead(NioSelector.java:420) ~[elasticsearch-nio-7.10.0-SNAPSHOT.jar:7.10.0-SNAPSHOT]\r\n  1>    at org.elasticsearch.nio.NioSelector.processKey(NioSelector.java:246) ~[elasticsearch-nio-7.10.0-SNAPSHOT.jar:7.10.0-SNAPSHOT]\r\n  1>    at org.elasticsearch.nio.NioSelector.singleLoop(NioSelector.java:174) ~[elasticsearch-nio-7.10.0-SNAPSHOT.jar:7.10.0-SNAPSHOT]\r\n  1>    at org.elasticsearch.nio.NioSelector.runLoop(NioSelector.java:131) ~[elasticsearch-nio-7.10.0-SNAPSHOT.jar:7.10.0-SNAPSHOT]\r\n  1>    at java.lang.Thread.run(Thread.java:748) [?:1.8.0_265]\r\n```\r\n\r\nand the underlying error is `No available authentication scheme`\r\n\r\n```\r\n2020-09-01T13:06:46.369+0300 [DEBUG] [TestEventLogger]     io.netty.handler.codec.DecoderException: javax.net.ssl.SSLHandshakeException: No available authentication scheme\r\n2020-09-01T13:06:46.369+0300 [DEBUG] [TestEventLogger]          at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:471) ~[netty-codec-4.1.49.Final.jar:4.1.49.Final]\r\n2020-09-01T13:06:46.369+0300 [DEBUG] [TestEventLogger]          at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) ~[netty-codec-4.1.49.Final.jar:4.1.49.Final]\r\n2020-09-01T13:06:46.369+0300 [DEBUG] [TestEventLogger]          at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n2020-09-01T13:06:46.369+0300 [DEBUG] [TestEventLogger]          at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n2020-09-01T13:06:46.369+0300 [DEBUG] [TestEventLogger]          at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:615) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:578) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.49.Final.jar:4.1.49.Final]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.49.Final.jar:4.1.49.Final]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at java.lang.Thread.run(Thread.java:748) [?:1.8.0_265]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]     Caused by: javax.net.ssl.SSLHandshakeException: No available authentication scheme\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at sun.security.ssl.Alert.createSSLException(Alert.java:131) ~[?:?]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at sun.security.ssl.Alert.createSSLException(Alert.java:117) ~[?:?]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at sun.security.ssl.TransportContext.fatal(TransportContext.java:311) ~[?:?]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at sun.security.ssl.TransportContext.fatal(TransportContext.java:267) ~[?:?]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at sun.security.ssl.TransportContext.fatal(TransportContext.java:258) ~[?:?]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at sun.security.ssl.CertificateMessage$T13CertificateProducer.onProduceCertificate(CertificateMessage.java:955) ~[?:?]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at sun.security.ssl.CertificateMessage$T13CertificateProducer.produce(CertificateMessage.java:944) ~[?:?]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at sun.security.ssl.SSLHandshake.produce(SSLHandshake.java:421) ~[?:?]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at sun.security.ssl.ClientHello$T13ClientHelloConsumer.goServerHello(ClientHello.java:1141) ~[?:?]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at sun.security.ssl.ClientHello$T13ClientHelloConsumer.consume(ClientHello.java:1077) ~[?:?]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at sun.security.ssl.ClientHello$ClientHelloConsumer.onClientHello(ClientHello.java:721) ~[?:?]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at sun.security.ssl.ClientHello$ClientHelloConsumer.consume(ClientHello.java:689) ~[?:?]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:377) ~[?:?]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:444) ~[?:?]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:968) ~[?:?]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:955) ~[?:?]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_265]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at sun.security.ssl.SSLEngineImpl$DelegatedTask.run(SSLEngineImpl.java:902) ~[?:?]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at io.netty.handler.ssl.SslHandler.runAllDelegatedTasks(SslHandler.java:1542) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]\r\n2020-09-01T13:06:46.370+0300 [DEBUG] [TestEventLogger]          at io.netty.handler.ssl.SslHandler.runDelegatedTasks(SslHandler.java:1556) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]\r\n```\r\n\r\nThe handshake failing looks like this: \r\n\r\n### Client Hello\r\n\r\n```\r\njavax.net.ssl|FINE|20|elasticsearch[node_t1][transport_worker][T#1]|2020-09-02 03:50:05.562 CDT|Logger.java:765|Produced ClientHello handshake message (\r\n     \"ClientHello\": {\r\n       \"client version\"      : \"TLSv1.2\",\r\n       \"random\"              : \"3E C1 AE CE 3C E1 93 74 27 9E 75 AC 5F 7E 4B 99 16 57 C2 A6 87 16 F8 6C 1A 79 F5 C3 51 75 DC 61\",\r\n       \"session id\"          : \"2B F3 0D 8D 7C 18 7E 81 28 AE D1 DD 20 29 D5 8E 30 97 0D B6 E2 FE 98 3F B9 BA C9 01 38 7B 51 96\",\r\n       \"cipher suites\"       : \"[TLS_AES_256_GCM_SHA384(0x1302), TLS_AES_128_GCM_SHA256(0x1301), TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384(0xC024), TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256(0xC023), TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384(0xC028), TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256(0xC027), TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA(0xC00A), TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA(0xC009), TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA(0xC014), TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA(0xC013), TLS_RSA_WITH_AES_256_CBC_SHA256(0x003D), TLS_RSA_WITH_AES_128_CBC_SHA256(0x003C), TLS_RSA_WITH_AES_256_CBC_SHA(0x0035), TLS_RSA_WITH_AES_128_CBC_SHA(0x002F)]\",\r\n       \"compression methods\" : \"00\",\r\n       \"extensions\"          : [\r\n         \"supported_groups (10)\": {\r\n           \"versions\": [secp256r1, secp384r1, secp521r1, ffdhe2048, ffdhe3072, ffdhe4096, ffdhe6144, ffdhe8192]\r\n         },\r\n         \"ec_point_formats (11)\": {\r\n           \"formats\": [uncompressed]\r\n         },\r\n         \"signature_algorithms (13)\": {\r\n           \"signature schemes\": [ecdsa_secp256r1_sha256, ecdsa_secp384r1_sha384, ecdsa_secp521r1_sha512, rsa_pkcs1_sha256, rsa_pkcs1_sha384, rsa_pkcs1_sha512, dsa_sha256, ecdsa_sha224, rsa_sha224, dsa_sha224, ecdsa_sha1, rsa_pkcs1_sha1, dsa_sha1]\r\n         },\r\n         \"signature_algorithms_cert (50)\": {\r\n           \"signature schemes\": [ecdsa_secp256r1_sha256, ecdsa_secp384r1_sha384, ecdsa_secp521r1_sha512, rsa_pkcs1_sha256, rsa_pkcs1_sha384, rsa_pkcs1_sha512, dsa_sha256, ecdsa_sha224, rsa_sha224, dsa_sha224, ecdsa_sha1, rsa_pkcs1_sha1, dsa_sha1]\r\n         },\r\n         \"supported_versions (43)\": {\r\n           \"versions\": [TLSv1.3, TLSv1.2, TLSv1.1]\r\n         },\r\n         \"psk_key_exchange_modes (45)\": {\r\n           \"ke_modes\": [psk_dhe_ke]\r\n         },\r\n         \"key_share (51)\": {\r\n           \"client_shares\": [  \r\n             {\r\n               \"named group\": secp256r1\r\n               \"key_exchange\": {\r\n                 0000: 04 D8 5F 3B 78 8F 1F 04   4C 7A 53 3E 15 EB 36 60  .._;x...LzS>..6`\r\n                 0010: BB C4 90 85 9B ED 37 E3   FF F3 03 6B 1F 67 DE 4C  ......7....k.g.L\r\n                 0020: 23 62 FC 47 E6 44 B8 F9   88 C3 93 4F 7B B7 BC BE  #b.G.D.....O....\r\n                 0030: 3A FA D7 AE C7 E1 E2 16   C1 3C B7 18 C8 5F 53 05  :........<..._S.\r\n                 0040: 3D \r\n               }\r\n             },\r\n           ]\r\n         },\r\n         \"renegotiation_info (65,281)\": {\r\n           \"renegotiated connection\": [<no renegotiated connection>]\r\n         }\r\n       ]\r\n     }\r\n     )\r\n```\r\n\r\n### Server consuming client hello\r\n```\r\n     javax.net.ssl|FINE|2F|elasticsearch[node_t0][transport_worker][T#4]|2020-09-02 03:50:05.594 CDT|Logger.java:765|Consuming ClientHello handshake message (\r\n     \"ClientHello\": {\r\n       \"client version\"      : \"TLSv1.2\",\r\n       \"random\"              : \"3E C1 AE CE 3C E1 93 74 27 9E 75 AC 5F 7E 4B 99 16 57 C2 A6 87 16 F8 6C 1A 79 F5 C3 51 75 DC 61\",\r\n       \"session id\"          : \"2B F3 0D 8D 7C 18 7E 81 28 AE D1 DD 20 29 D5 8E 30 97 0D B6 E2 FE 98 3F B9 BA C9 01 38 7B 51 96\",\r\n       \"cipher suites\"       : \"[TLS_AES_256_GCM_SHA384(0x1302), TLS_AES_128_GCM_SHA256(0x1301), TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384(0xC024), TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256(0xC023), TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384(0xC028), TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256(0xC027), TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA(0xC00A), TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA(0xC009), TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA(0xC014), TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA(0xC013), TLS_RSA_WITH_AES_256_CBC_SHA256(0x003D), TLS_RSA_WITH_AES_128_CBC_SHA256(0x003C), TLS_RSA_WITH_AES_256_CBC_SHA(0x0035), TLS_RSA_WITH_AES_128_CBC_SHA(0x002F)]\",\r\n       \"compression methods\" : \"00\",\r\n       \"extensions\"          : [\r\n         \"supported_groups (10)\": {\r\n           \"versions\": [secp256r1, secp384r1, secp521r1, ffdhe2048, ffdhe3072, ffdhe4096, ffdhe6144, ffdhe8192]\r\n         },\r\n         \"ec_point_formats (11)\": {\r\n           \"formats\": [uncompressed]\r\n         },\r\n         \"signature_algorithms (13)\": {\r\n           \"signature schemes\": [ecdsa_secp256r1_sha256, ecdsa_secp384r1_sha384, ecdsa_secp521r1_sha512, rsa_pkcs1_sha256, rsa_pkcs1_sha384, rsa_pkcs1_sha512, dsa_sha256, ecdsa_sha224, rsa_sha224, dsa_sha224, ecdsa_sha1, rsa_pkcs1_sha1, dsa_sha1]\r\n         },\r\n         \"signature_algorithms_cert (50)\": {\r\n           \"signature schemes\": [ecdsa_secp256r1_sha256, ecdsa_secp384r1_sha384, ecdsa_secp521r1_sha512, rsa_pkcs1_sha256, rsa_pkcs1_sha384, rsa_pkcs1_sha512, dsa_sha256, ecdsa_sha224, rsa_sha224, dsa_sha224, ecdsa_sha1, rsa_pkcs1_sha1, dsa_sha1]\r\n         },\r\n         \"supported_versions (43)\": {\r\n           \"versions\": [TLSv1.3, TLSv1.2, TLSv1.1]\r\n         },\r\n         \"psk_key_exchange_modes (45)\": {\r\n           \"ke_modes\": [psk_dhe_ke]\r\n         },\r\n         \"key_share (51)\": {\r\n           \"client_shares\": [  \r\n             {\r\n               \"named group\": secp256r1\r\n               \"key_exchange\": {\r\n                 0000: 04 D8 5F 3B 78 8F 1F 04   4C 7A 53 3E 15 EB 36 60  .._;x...LzS>..6`\r\n                 0010: BB C4 90 85 9B ED 37 E3   FF F3 03 6B 1F 67 DE 4C  ......7....k.g.L\r\n                 0020: 23 62 FC 47 E6 44 B8 F9   88 C3 93 4F 7B B7 BC BE  #b.G.D.....O....\r\n                 0030: 3A FA D7 AE C7 E1 E2 16   C1 3C B7 18 C8 5F 53 05  :........<..._S.\r\n                 0040: 3D \r\n               }\r\n             },\r\n           ]\r\n         },\r\n         \"renegotiation_info (65,281)\": {\r\n           \"renegotiated connection\": [<no renegotiated connection>]\r\n         }\r\n       ]\r\n     }\r\n     )\r\n```\r\n\r\n### Server producing ServerHello\r\n\r\n```\r\n     javax.net.ssl|FINE|2F|elasticsearch[node_t0][transport_worker][T#4]|2020-09-02 03:50:05.611 CDT|Logger.java:765|Produced ServerHello handshake message (\r\n     \"ServerHello\": {\r\n       \"server version\"      : \"TLSv1.2\",\r\n       \"random\"              : \"B4 B5 90 9E 26 D2 C9 0F 79 EA E5 CC 56 D0 72 80 54 4A 15 E7 C8 F0 AA ED 6A F2 4E AF 85 6D 2E 45\",\r\n       \"session id\"          : \"2B F3 0D 8D 7C 18 7E 81 28 AE D1 DD 20 29 D5 8E 30 97 0D B6 E2 FE 98 3F B9 BA C9 01 38 7B 51 96\",\r\n       \"cipher suite\"        : \"TLS_AES_256_GCM_SHA384(0x1302)\",\r\n       \"compression methods\" : \"00\",\r\n       \"extensions\"          : [\r\n         \"supported_versions (43)\": {\r\n           \"selected version\": [TLSv1.3]\r\n         },\r\n         \"key_share (51)\": {\r\n           \"server_share\": {\r\n             \"named group\": secp256r1\r\n             \"key_exchange\": {\r\n               0000: 04 61 47 69 D4 14 77 CD   12 E7 9A 2C 12 19 F1 11  .aGi..w....,....\r\n               0010: B4 F1 A9 96 76 A1 9A E5   90 03 58 1E 12 F2 B6 A1  ....v.....X.....\r\n               0020: 63 A9 4E B9 EF EE 7A 5E   A9 7A A7 4A 27 6A D9 60  c.N...z^.z.J'j.`\r\n               0030: 03 18 2C 0F E4 B5 20 BE   0C A9 D0 E0 81 35 8B 5B  ..,... ......5.[\r\n               0040: 70 \r\n             }\r\n           },\r\n         }\r\n       ]\r\n     }\r\n     )\r\n```\r\n\r\n### Server sends encrypted extensions message\r\n\r\n```\r\n     javax.net.ssl|FINE|22|elasticsearch[node_t1][transport_worker][T#2]|2020-09-02 03:50:05.631 CDT|Logger.java:765|Produced EncryptedExtensions message (\r\n     \"EncryptedExtensions\": [\r\n       \"supported_groups (10)\": {\r\n         \"versions\": [secp256r1, secp384r1, secp521r1, ffdhe2048, ffdhe3072, ffdhe4096, ffdhe6144, ffdhe8192]\r\n       }\r\n     ]\r\n     )\r\n```\r\n\r\n### Server produces Certificate Request message\r\n```\r\n     javax.net.ssl|FINE|22|elasticsearch[node_t1][transport_worker][T#2]|2020-09-02 03:50:05.642 CDT|Logger.java:765|Produced CertificateRequest message (\r\n     \"CertificateRequest\": {\r\n       \"certificate_request_context\": \"\",\r\n       \"extensions\": [\r\n         \"signature_algorithms (13)\": {\r\n           \"signature schemes\": [ecdsa_secp256r1_sha256, ecdsa_secp384r1_sha384, ecdsa_secp521r1_sha512, rsa_pkcs1_sha256, rsa_pkcs1_sha384, rsa_pkcs1_sha512, ecdsa_sha1, rsa_pkcs1_sha1]\r\n         },\r\n         \"signature_algorithms_cert (50)\": {\r\n           \"signature schemes\": [ecdsa_secp256r1_sha256, ecdsa_secp384r1_sha384, ecdsa_secp521r1_sha512, rsa_pkcs1_sha256, rsa_pkcs1_sha384, rsa_pkcs1_sha512, ecdsa_sha1, rsa_pkcs1_sha1]\r\n         },\r\n         \"certificate_authorities (47)\": {\r\n           \"certificate authorities\": [\r\n             CN=Elasticsearch Test Client, OU=elasticsearch, O=org\r\n             CN=Elasticsearch Test Node, OU=elasticsearch, O=org]\r\n         }\r\n       ]\r\n     }\r\n     )\r\n```\r\n\r\n### Server fails the handshake\r\n\r\n```\r\n     javax.net.ssl|SEVERE|2F|elasticsearch[node_t0][transport_worker][T#4]|2020-09-02 03:50:05.644 CDT|Logger.java:765|Fatal (HANDSHAKE_FAILURE): No available authentication scheme (\r\n     \"throwable\" : {\r\n       javax.net.ssl.SSLHandshakeException: No available authentication scheme\r\n          at sun.security.ssl.Alert.createSSLException(Alert.java:131)\r\n          at sun.security.ssl.Alert.createSSLException(Alert.java:117)\r\n          at sun.security.ssl.TransportContext.fatal(TransportContext.java:311)\r\n          at sun.security.ssl.TransportContext.fatal(TransportContext.java:267)\r\n          at sun.security.ssl.TransportContext.fatal(TransportContext.java:258)\r\n          at sun.security.ssl.CertificateMessage$T13CertificateProducer.onProduceCertificate(CertificateMessage.java:955)\r\n          at sun.security.ssl.CertificateMessage$T13CertificateProducer.produce(CertificateMessage.java:944)\r\n          at sun.security.ssl.SSLHandshake.produce(SSLHandshake.java:421)\r\n          at sun.security.ssl.ClientHello$T13ClientHelloConsumer.goServerHello(ClientHello.java:1141)\r\n          at sun.security.ssl.ClientHello$T13ClientHelloConsumer.consume(ClientHello.java:1077)\r\n          at sun.security.ssl.ClientHello$ClientHelloConsumer.onClientHello(ClientHello.java:721)\r\n          at sun.security.ssl.ClientHello$ClientHelloConsumer.consume(ClientHello.java:689)\r\n          at sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:377)\r\n          at sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:444)\r\n          at sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:968)\r\n          at sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:955)\r\n          at java.security.AccessController.doPrivileged(Native Method)\r\n          at sun.security.ssl.SSLEngineImpl$DelegatedTask.run(SSLEngineImpl.java:902)\r\n          at io.netty.handler.ssl.SslHandler.runAllDelegatedTasks(SslHandler.java:1542)\r\n          at io.netty.handler.ssl.SslHandler.runDelegatedTasks(SslHandler.java:1556)\r\n          at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1440)\r\n          at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1267)\r\n          at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1314)\r\n          at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501)\r\n          at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:440)\r\n          at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)\r\n          at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n          at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n          at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n          at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n          at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n          at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n          at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n          at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n          at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n          at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:615)\r\n          at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:578)\r\n          at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n          at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n          at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n          at java.lang.Thread.run(Thread.java:748)}\r\n \r\n     )\r\n```\r\n\r\n\r\n\r\nSo what does `No available authentication scheme` means in this context? TLS1.2 and up has this extension called [`signature_algorithm`](https://tools.ietf.org/html/rfc5246#section-7.4.1.4.1) and TLS 1.3 also has a [`signature_algorithm_cert`](https://tools.ietf.org/html/rfc8446#section-4.2.3) extension. We're on TLS1.3 here and the message is a Certificate Request so we take a look at the [appropriate RFC section](https://tools.ietf.org/html/rfc8446#section-4.3.2) \r\n\r\n>  In prior versions of TLS, the CertificateRequest message carried a\r\n>   list of signature algorithms and certificate authorities which the\r\n>   server would accept.  In TLS 1.3, the former is expressed by sending\r\n>   the \"signature_algorithms\" and optionally \"signature_algorithms_cert\"\r\n>   extensions.\r\n\r\nServer is basically saying to the client that it will accept [certificate verify](https://tools.ietf.org/html/rfc8446#section-4.4.3) messages and certificates that are using one of the `[ecdsa_secp256r1_sha256, ecdsa_secp384r1_sha384, ecdsa_secp521r1_sha512, rsa_pkcs1_sha256, rsa_pkcs1_sha384, rsa_pkcs1_sha512, ecdsa_sha1, rsa_pkcs1_sha1]` schemes but after that ( and before the client has a chance to respond ) the server itself fails the handshake as it determines that it can't support any of the above schemes. The reason is that \r\n\r\n- ecdsa_* ones are applicable to EC keys and we are using RSA keys in most of our tests.\r\n- rsa_pkcs1* ones are not supported for certificate verify messages in TLSv1.3. \r\n\r\nThe problem here is that the server should be supporting also `rsa_pss_rsae_sha256, rsa_pss_rsae_sha384, rsa_pss_rsae_sha512, rsa_pss_pss_sha256, rsa_pss_pss_sha384, rsa_pss_pss_sha512` , which the client does too. The fact that it does not has to do with the name of the algorithms in the BouncyCastle FIPS provider and the way SunJSSE attempts to load them by name, relevant code in Azul looks like\r\n\r\n```\r\n            try {\r\n                Signature signer = JsseJce.getSignature(\"RSASSA-PSS\");\r\n                signer.setParameter(pssParamSpec);\r\n            } catch (InvalidAlgorithmParameterException |\r\n                    NoSuchAlgorithmException exp) {\r\n                mediator = false;\r\n                if (SSLLogger.isOn && SSLLogger.isOn(\"ssl,handshake\")) {\r\n                    SSLLogger.warning(\r\n                        \"RSASSA-PSS signature with \" + hash +\r\n                        \" is not supported by the underlying providers\", exp);\r\n                }\r\n            }\r\n```\r\n\r\nand this fails in BCFIPS as it has services for `Signature.SHA512(224)WITHRSA/PSS ImplementedIn` , `Signature.SHA384WITHRSA/PSS SupportedKeyClasses` and a couple of others while the lookup something like: \r\n\r\n```\r\npublic synchronized final Service getService(String type, String algorithm)\r\n    {\r\n        String upperCaseAlgName = Strings.toUpperCase(algorithm);\r\n        BcService service = serviceMap.get(type + \".\" + upperCaseAlgName);\r\n        if (service == null)\r\n        {\r\n            String aliasString = \"Alg.Alias.\" + type + \".\";\r\n            String realName = (String)this.get(aliasString + upperCaseAlgName);\r\n            if (realName == null)\r\n            {\r\n                realName = upperCaseAlgName;\r\n            }\r\n            String className = (String)this.get(type + \".\" + realName);\r\n            if (className == null)\r\n            {\r\n                return null;\r\n            }\r\n            String attributeKeyStart = type + \".\" + upperCaseAlgName + \" \";\r\n            List<String> aliases = new ArrayList<String>();\r\n            Map<String, String> attributes = new HashMap<String, String>();\r\n            for (Object key : this.keySet())\r\n            {\r\n                String sKey = (String)key;\r\n                if (sKey.startsWith(aliasString))\r\n                {\r\n                    if (this.get(key).equals(algorithm))\r\n                    {\r\n                        aliases.add(sKey.substring(aliasString.length()));\r\n                    }\r\n                }\r\n                if (sKey.startsWith(attributeKeyStart))\r\n                {\r\n                    attributes.put(sKey.substring(attributeKeyStart.length()), (String)this.get(sKey));\r\n                }\r\n            }\r\n            service = new BcService(this, type, upperCaseAlgName, className, aliases, getAttributeMap(attributes), creatorMap.get(className));\r\n            serviceMap.put(type + \".\" + upperCaseAlgName, service);\r\n        }\r\n        return service;\r\n    }\r\n```\r\n\r\n\r\nI believe the root of this issue comes down to Azul aggressively backporting TLS related changes from JDK11 to JDK8 and that SunJSSE with BCFIPS not being able to handle this. Using BCJSSE in FIPS 140 mode with Azul Zulu 8 works fine, so I will be making the necessary changes to use that combination in our CI ( like we do for JDK 11 and later ) ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/689287766","html_url":"https://github.com/elastic/elasticsearch/issues/61316#issuecomment-689287766","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61316","id":689287766,"node_id":"MDEyOklzc3VlQ29tbWVudDY4OTI4Nzc2Ng==","user":{"login":"ywangd","id":2344308,"node_id":"MDQ6VXNlcjIzNDQzMDg=","avatar_url":"https://avatars3.githubusercontent.com/u/2344308?v=4","gravatar_id":"","url":"https://api.github.com/users/ywangd","html_url":"https://github.com/ywangd","followers_url":"https://api.github.com/users/ywangd/followers","following_url":"https://api.github.com/users/ywangd/following{/other_user}","gists_url":"https://api.github.com/users/ywangd/gists{/gist_id}","starred_url":"https://api.github.com/users/ywangd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywangd/subscriptions","organizations_url":"https://api.github.com/users/ywangd/orgs","repos_url":"https://api.github.com/users/ywangd/repos","events_url":"https://api.github.com/users/ywangd/events{/privacy}","received_events_url":"https://api.github.com/users/ywangd/received_events","type":"User","site_admin":false},"created_at":"2020-09-09T04:04:58Z","updated_at":"2020-09-09T04:05:35Z","author_association":"MEMBER","body":"This seems to be a new pattern: https://gradle-enterprise.elastic.co/s/hsssjrq5nvkyc ([started](https://build-stats.elastic.co/app/kibana#/discover?_g=(refreshInterval:(pause:!t,value:0),time:(from:now-60d,mode:quick,to:now))&_a=(columns:!(_source),index:b646ed00-7efc-11e8-bf69-63c8ef516157,interval:auto,query:(language:lucene,query:testThatDelegateTrustManagerIsRespected),sort:!(process.time-start,desc))) on Sept. 05)\r\n\r\nIt is about `testThatDelegateTrustManagerIsRespected` and the failure message is:\r\n\r\n```\r\njava.lang.AssertionError: |  \r\n  | Expected: matches pattern PKIX path building failed.* |  \r\n  | but: was \"unable to process certificates: Unable to find certificate chain.\"\r\n```\r\n\r\nThere is a previous similar issue (#33081), not sure it is re-surfaced. \r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/690064843","html_url":"https://github.com/elastic/elasticsearch/issues/61316#issuecomment-690064843","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61316","id":690064843,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MDA2NDg0Mw==","user":{"login":"hendrikmuhs","id":7126422,"node_id":"MDQ6VXNlcjcxMjY0MjI=","avatar_url":"https://avatars3.githubusercontent.com/u/7126422?v=4","gravatar_id":"","url":"https://api.github.com/users/hendrikmuhs","html_url":"https://github.com/hendrikmuhs","followers_url":"https://api.github.com/users/hendrikmuhs/followers","following_url":"https://api.github.com/users/hendrikmuhs/following{/other_user}","gists_url":"https://api.github.com/users/hendrikmuhs/gists{/gist_id}","starred_url":"https://api.github.com/users/hendrikmuhs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hendrikmuhs/subscriptions","organizations_url":"https://api.github.com/users/hendrikmuhs/orgs","repos_url":"https://api.github.com/users/hendrikmuhs/repos","events_url":"https://api.github.com/users/hendrikmuhs/events{/privacy}","received_events_url":"https://api.github.com/users/hendrikmuhs/received_events","type":"User","site_admin":false},"created_at":"2020-09-10T08:02:01Z","updated_at":"2020-09-10T08:02:01Z","author_association":"CONTRIBUTOR","body":"failed once more: https://gradle-enterprise.elastic.co/s/slhiqge5ru44k, same error as previous comment","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/691653961","html_url":"https://github.com/elastic/elasticsearch/issues/61316#issuecomment-691653961","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61316","id":691653961,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MTY1Mzk2MQ==","user":{"login":"jkakavas","id":10281256,"node_id":"MDQ6VXNlcjEwMjgxMjU2","avatar_url":"https://avatars2.githubusercontent.com/u/10281256?v=4","gravatar_id":"","url":"https://api.github.com/users/jkakavas","html_url":"https://github.com/jkakavas","followers_url":"https://api.github.com/users/jkakavas/followers","following_url":"https://api.github.com/users/jkakavas/following{/other_user}","gists_url":"https://api.github.com/users/jkakavas/gists{/gist_id}","starred_url":"https://api.github.com/users/jkakavas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkakavas/subscriptions","organizations_url":"https://api.github.com/users/jkakavas/orgs","repos_url":"https://api.github.com/users/jkakavas/repos","events_url":"https://api.github.com/users/jkakavas/events{/privacy}","received_events_url":"https://api.github.com/users/jkakavas/received_events","type":"User","site_admin":false},"created_at":"2020-09-13T10:36:08Z","updated_at":"2020-09-13T10:36:08Z","author_association":"CONTRIBUTOR","body":"Should we track this specific failure in a separate issue? This issue had to do with ~300 tests failing in Zulu 8 and has been resolved by 61857. \r\n\r\n@ywangd I dont think this has to do with 33081 as I dont see anything related to date formats. This is probably a test that needs adjustment since we started running with bcjsse in fips mode in Zulu 8 ( different security providers have different errod messages for the same errors) ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/691661710","html_url":"https://github.com/elastic/elasticsearch/issues/61316#issuecomment-691661710","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61316","id":691661710,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MTY2MTcxMA==","user":{"login":"ywangd","id":2344308,"node_id":"MDQ6VXNlcjIzNDQzMDg=","avatar_url":"https://avatars3.githubusercontent.com/u/2344308?v=4","gravatar_id":"","url":"https://api.github.com/users/ywangd","html_url":"https://github.com/ywangd","followers_url":"https://api.github.com/users/ywangd/followers","following_url":"https://api.github.com/users/ywangd/following{/other_user}","gists_url":"https://api.github.com/users/ywangd/gists{/gist_id}","starred_url":"https://api.github.com/users/ywangd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywangd/subscriptions","organizations_url":"https://api.github.com/users/ywangd/orgs","repos_url":"https://api.github.com/users/ywangd/repos","events_url":"https://api.github.com/users/ywangd/events{/privacy}","received_events_url":"https://api.github.com/users/ywangd/received_events","type":"User","site_admin":false},"created_at":"2020-09-13T11:52:20Z","updated_at":"2020-09-13T11:52:20Z","author_association":"MEMBER","body":"> Should we track this specific failure in a separate issue? This issue had to do with ~300 tests failing in Zulu 8 and has been resolved by 61857.\r\n>\r\nYep you are right. I created #62281","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/705156397","html_url":"https://github.com/elastic/elasticsearch/issues/61316#issuecomment-705156397","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61316","id":705156397,"node_id":"MDEyOklzc3VlQ29tbWVudDcwNTE1NjM5Nw==","user":{"login":"jkakavas","id":10281256,"node_id":"MDQ6VXNlcjEwMjgxMjU2","avatar_url":"https://avatars2.githubusercontent.com/u/10281256?v=4","gravatar_id":"","url":"https://api.github.com/users/jkakavas","html_url":"https://github.com/jkakavas","followers_url":"https://api.github.com/users/jkakavas/followers","following_url":"https://api.github.com/users/jkakavas/following{/other_user}","gists_url":"https://api.github.com/users/jkakavas/gists{/gist_id}","starred_url":"https://api.github.com/users/jkakavas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkakavas/subscriptions","organizations_url":"https://api.github.com/users/jkakavas/orgs","repos_url":"https://api.github.com/users/jkakavas/repos","events_url":"https://api.github.com/users/jkakavas/events{/privacy}","received_events_url":"https://api.github.com/users/jkakavas/received_events","type":"User","site_admin":false},"created_at":"2020-10-07T19:48:24Z","updated_at":"2020-10-07T19:48:24Z","author_association":"CONTRIBUTOR","body":"This was resolved by #61857","performed_via_github_app":null}]