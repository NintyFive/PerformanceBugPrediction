{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/1416","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1416/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1416/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1416/events","html_url":"https://github.com/elastic/elasticsearch/issues/1416","id":2014776,"node_id":"MDU6SXNzdWUyMDE0Nzc2","number":1416,"title":"Query DSL: Indices query type","user":{"login":"poblish","id":152762,"node_id":"MDQ6VXNlcjE1Mjc2Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/152762?v=4","gravatar_id":"","url":"https://api.github.com/users/poblish","html_url":"https://github.com/poblish","followers_url":"https://api.github.com/users/poblish/followers","following_url":"https://api.github.com/users/poblish/following{/other_user}","gists_url":"https://api.github.com/users/poblish/gists{/gist_id}","starred_url":"https://api.github.com/users/poblish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/poblish/subscriptions","organizations_url":"https://api.github.com/users/poblish/orgs","repos_url":"https://api.github.com/users/poblish/repos","events_url":"https://api.github.com/users/poblish/events{/privacy}","received_events_url":"https://api.github.com/users/poblish/received_events","type":"User","site_admin":false},"labels":[{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":127902,"node_id":"MDU6TGFiZWwxMjc5MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.18.0","name":"v0.18.0","color":"DDDDDD","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2011-10-21T12:11:18Z","updated_at":"2012-03-17T16:11:41Z","closed_at":"2011-10-22T23:35:21Z","author_association":"NONE","active_lock_reason":null,"body":"The `indices` query type allows to execute a query only for shards that belong to the listed indices, otherwise resulting in a \"match_all\" behavior. For example:\n\n```\n`indices` : {\n    \"indices\" : [\"index1\", \"index_prefix_*\"]\n    \"query\" : {\n        \"term\" : ...\n    }\n}\n```\n\n--- original request\n\nCurrently, searches only allow one set of indices to be specified across the entire query, but it would be helpful to allow `BoolQueryBuilder`-style subqueries to be able to specify their own indices as well, something Compass used to support, and for ES to deal with the aggregation. In other words, add `setIndices(String... indices)` to `QueryBuilder`, rather than just having it on `SearchRequestBuilder`. This would allow UNION-style queries to be built up, of the form:\n\n\"return all hits where property=X in (indexA,indexB) OR property=Y in (indexA,indexC)\"\n","closed_by":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"performed_via_github_app":null}