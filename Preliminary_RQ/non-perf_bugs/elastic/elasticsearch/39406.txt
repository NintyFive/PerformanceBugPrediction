{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/39406","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39406/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39406/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39406/events","html_url":"https://github.com/elastic/elasticsearch/issues/39406","id":414710693,"node_id":"MDU6SXNzdWU0MTQ3MTA2OTM=","number":39406,"title":"Can't create anomaly detector that uses \"_index\" as \"partition_field_name\"","user":{"login":"tsouza","id":122435,"node_id":"MDQ6VXNlcjEyMjQzNQ==","avatar_url":"https://avatars3.githubusercontent.com/u/122435?v=4","gravatar_id":"","url":"https://api.github.com/users/tsouza","html_url":"https://github.com/tsouza","followers_url":"https://api.github.com/users/tsouza/followers","following_url":"https://api.github.com/users/tsouza/following{/other_user}","gists_url":"https://api.github.com/users/tsouza/gists{/gist_id}","starred_url":"https://api.github.com/users/tsouza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tsouza/subscriptions","organizations_url":"https://api.github.com/users/tsouza/orgs","repos_url":"https://api.github.com/users/tsouza/repos","events_url":"https://api.github.com/users/tsouza/events{/privacy}","received_events_url":"https://api.github.com/users/tsouza/received_events","type":"User","site_admin":false},"labels":[{"id":912833043,"node_id":"MDU6TGFiZWw5MTI4MzMwNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:ml","name":":ml","color":"0e8a16","default":false,"description":"Machine learning"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":92913858,"node_id":"MDU6TGFiZWw5MjkxMzg1OA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/good%20first%20issue","name":"good first issue","color":"07569b","default":true,"description":"low hanging fruit"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2019-02-26T16:46:53Z","updated_at":"2019-04-17T15:01:47Z","closed_at":"2019-04-17T15:01:47Z","author_association":"MEMBER","active_lock_reason":null,"body":"**Elasticsearch version** (`bin/elasticsearch --version`):\r\n```\r\nVersion: 6.5.0, Build: default/tar/816e6f6/2018-11-09T18:58:36.352602Z, JVM: 10.0.1\r\n```\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`):\r\n```\r\njava version \"1.8.0_172\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_172-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.172-b11, mixed mode)\r\n```\r\n\r\n**OS version** (`uname -a` if on a Unix-like system):\r\n```\r\nDarwin ElasticMBP 18.2.0 Darwin Kernel Version 18.2.0: Thu Dec 20 20:46:53 PST 2018; root:xnu-4903.241.1~1/RELEASE_X86_64 x86_64\r\n```\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nIt is not possible to create an anomaly detector that uses `_index` as `partition_field_name`. This can be a valid use case if one wants to find anomalies in document count per index, for instance.\r\n\r\nThe workaround is to use another field to carry the index name. The field can be created by either reindexing or creating a field alias.\r\n\r\n**Steps to reproduce**:\r\n\r\n 1. Try to create an anomaly detector with:\r\n```\r\nPUT _xpack/ml/anomaly_detectors/test\r\n{\r\n  \"description\": \"\",\r\n  \"established_model_memory\": 218234,\r\n  \"analysis_config\": {\r\n    \"bucket_span\": \"15m\",\r\n    \"detectors\": [\r\n      {\r\n        \"detector_description\": \"low count\",\r\n        \"function\": \"low_count\",\r\n        \"partition_field_name\": \"_index\",\r\n        \"detector_index\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"analysis_limits\": {\r\n    \"model_memory_limit\": \"100mb\",\r\n    \"categorization_examples_limit\": 4\r\n  },\r\n  \"data_description\": {\r\n    \"time_field\": \"@timestamp\",\r\n    \"time_format\": \"epoch_ms\"\r\n  },\r\n  \"results_index_name\": \"shared\"\r\n}\r\n```\r\n 2. Results in:\r\n```\r\n{\r\n  \"error\": {\r\n    \"root_cause\": [\r\n      {\r\n        \"type\": \"illegal_argument_exception\",\r\n        \"reason\": \"Field [_index] is defined twice in [doc]\"\r\n      }\r\n    ],\r\n    \"type\": \"illegal_argument_exception\",\r\n    \"reason\": \"Field [_index] is defined twice in [doc]\"\r\n  },\r\n  \"status\": 400\r\n}\r\n```\r\n\r\n**Provide logs (if relevant)**:\r\n```\r\n[2019-02-26T13:44:27,696][DEBUG][o.e.c.m.MetaDataCreateIndexService] [gzsj5Rv] [.ml-anomalies-shared] failed to create\r\njava.lang.IllegalArgumentException: Field [_index] is defined twice in [doc]\r\n\tat org.elasticsearch.index.mapper.MapperMergeValidator.lambda$checkFieldUniqueness$0(MapperMergeValidator.java:86) ~[elasticsearch-6.5.0.jar:6.5.0]\r\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1492) ~[?:?]\r\n\tat java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]\r\n\tat java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]\r\n\tat org.elasticsearch.index.mapper.MapperMergeValidator.checkFieldUniqueness(MapperMergeValidator.java:81) ~[elasticsearch-6.5.0.jar:6.5.0]\r\n\tat org.elasticsearch.index.mapper.MapperMergeValidator.validateMapperStructure(MapperMergeValidator.java:58) ~[elasticsearch-6.5.0.jar:6.5.0]\r\n\tat org.elasticsearch.index.mapper.MapperService.internalMerge(MapperService.java:479) ~[elasticsearch-6.5.0.jar:6.5.0]\r\n\tat org.elasticsearch.index.mapper.MapperService.internalMerge(MapperService.java:399) ~[elasticsearch-6.5.0.jar:6.5.0]\r\n\tat org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:323) ~[elasticsearch-6.5.0.jar:6.5.0]\r\n\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$IndexCreationTask.execute(MetaDataCreateIndexService.java:451) ~[elasticsearch-6.5.0.jar:6.5.0]\r\n\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45) ~[elasticsearch-6.5.0.jar:6.5.0]\r\n\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:639) ~[elasticsearch-6.5.0.jar:6.5.0]\r\n\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:268) ~[elasticsearch-6.5.0.jar:6.5.0]\r\n\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:198) [elasticsearch-6.5.0.jar:6.5.0]\r\n\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:133) [elasticsearch-6.5.0.jar:6.5.0]\r\n\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150) [elasticsearch-6.5.0.jar:6.5.0]\r\n\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188) [elasticsearch-6.5.0.jar:6.5.0]\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:624) [elasticsearch-6.5.0.jar:6.5.0]\r\n\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:244) [elasticsearch-6.5.0.jar:6.5.0]\r\n\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:207) [elasticsearch-6.5.0.jar:6.5.0]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135) [?:?]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) [?:?]\r\n\tat java.lang.Thread.run(Thread.java:844) [?:?]\r\n```\r\n\r\n","closed_by":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"performed_via_github_app":null}