[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/436421139","html_url":"https://github.com/elastic/elasticsearch/issues/35293#issuecomment-436421139","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293","id":436421139,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNjQyMTEzOQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-11-06T21:49:46Z","updated_at":"2018-11-06T21:49:46Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/436423442","html_url":"https://github.com/elastic/elasticsearch/issues/35293#issuecomment-436423442","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293","id":436423442,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNjQyMzQ0Mg==","user":{"login":"andyb-elastic","id":29205940,"node_id":"MDQ6VXNlcjI5MjA1OTQw","avatar_url":"https://avatars2.githubusercontent.com/u/29205940?v=4","gravatar_id":"","url":"https://api.github.com/users/andyb-elastic","html_url":"https://github.com/andyb-elastic","followers_url":"https://api.github.com/users/andyb-elastic/followers","following_url":"https://api.github.com/users/andyb-elastic/following{/other_user}","gists_url":"https://api.github.com/users/andyb-elastic/gists{/gist_id}","starred_url":"https://api.github.com/users/andyb-elastic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andyb-elastic/subscriptions","organizations_url":"https://api.github.com/users/andyb-elastic/orgs","repos_url":"https://api.github.com/users/andyb-elastic/repos","events_url":"https://api.github.com/users/andyb-elastic/events{/privacy}","received_events_url":"https://api.github.com/users/andyb-elastic/received_events","type":"User","site_admin":false},"created_at":"2018-11-06T21:57:31Z","updated_at":"2018-11-06T21:57:31Z","author_association":"CONTRIBUTOR","body":"It looks like the queries given in a `filter` for a function scores are actually executed in a query context, which is consistent with the behavior you're seeing here. It's definitely reasonable to infer that they would be executed in a filter context given the parameter name.\r\n\r\nIt also makes sense that they would be in a filter context considering their scores are not used, but there may be another consideration here I'm not aware of. @mayya-sharipova do you think `filter` queries here should be executed in a filter context? If not it seems like we should make it more clear in the docs that they're in a query context.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/436538205","html_url":"https://github.com/elastic/elasticsearch/issues/35293#issuecomment-436538205","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293","id":436538205,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNjUzODIwNQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2018-11-07T08:06:42Z","updated_at":"2018-11-07T08:06:42Z","author_association":"MEMBER","body":"The `filter` is correctly executed in the filter context, what happens here is that we set the default score to 1 for functions that don't define a [score functions]:(https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html#score-functions)\r\nThis is why a `weight` of 100 produces a score equals to 100. You can set `weight` to 0 if you want to disable the score entirely in the function. \r\nHowever I agree that the documentation should indicate the default score for functions that contains a `filter` and no score-function.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/436538253","html_url":"https://github.com/elastic/elasticsearch/issues/35293#issuecomment-436538253","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293","id":436538253,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNjUzODI1Mw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-11-07T08:06:54Z","updated_at":"2018-11-07T08:06:54Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-docs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/436571506","html_url":"https://github.com/elastic/elasticsearch/issues/35293#issuecomment-436571506","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293","id":436571506,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNjU3MTUwNg==","user":{"login":"telendt","id":85191,"node_id":"MDQ6VXNlcjg1MTkx","avatar_url":"https://avatars2.githubusercontent.com/u/85191?v=4","gravatar_id":"","url":"https://api.github.com/users/telendt","html_url":"https://github.com/telendt","followers_url":"https://api.github.com/users/telendt/followers","following_url":"https://api.github.com/users/telendt/following{/other_user}","gists_url":"https://api.github.com/users/telendt/gists{/gist_id}","starred_url":"https://api.github.com/users/telendt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/telendt/subscriptions","organizations_url":"https://api.github.com/users/telendt/orgs","repos_url":"https://api.github.com/users/telendt/repos","events_url":"https://api.github.com/users/telendt/events{/privacy}","received_events_url":"https://api.github.com/users/telendt/received_events","type":"User","site_admin":false},"created_at":"2018-11-07T10:05:53Z","updated_at":"2018-11-07T10:06:29Z","author_association":"CONTRIBUTOR","body":"@jimczi : I'm sorry but I don't follow. Yes, weight of 100 results in score of 100. But only on those documents that match the `filter`, right? If that's the case then why does document `_id=1` matches?\r\nIt clearly doesn't match this filter:\r\n\r\n```json\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"filter\": {\r\n\t\"bool\": {\r\n\t  \"must\":   {\"match\": {\"tags\": \"a\"}},\r\n\t  \"should\": {\"match\": {\"tags\": \"c\"}}\r\n\t}\r\n      }\r\n    }\r\n  }\r\n}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/436576689","html_url":"https://github.com/elastic/elasticsearch/issues/35293#issuecomment-436576689","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293","id":436576689,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNjU3NjY4OQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2018-11-07T10:23:33Z","updated_at":"2018-11-07T10:57:42Z","author_association":"MEMBER","body":"Sorry I don't follow either, document `_id=1` matches the filter because it contains the mandatory clause (`must`):\r\n{\"tags\":[\"a\", \"b\"]}\r\nThe `should` clause is not mandatory so the document matches with `\"must\":   {\"match\": {\"tags\": \"a\"}}`.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/436599121","html_url":"https://github.com/elastic/elasticsearch/issues/35293#issuecomment-436599121","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293","id":436599121,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNjU5OTEyMQ==","user":{"login":"telendt","id":85191,"node_id":"MDQ6VXNlcjg1MTkx","avatar_url":"https://avatars2.githubusercontent.com/u/85191?v=4","gravatar_id":"","url":"https://api.github.com/users/telendt","html_url":"https://github.com/telendt","followers_url":"https://api.github.com/users/telendt/followers","following_url":"https://api.github.com/users/telendt/following{/other_user}","gists_url":"https://api.github.com/users/telendt/gists{/gist_id}","starred_url":"https://api.github.com/users/telendt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/telendt/subscriptions","organizations_url":"https://api.github.com/users/telendt/orgs","repos_url":"https://api.github.com/users/telendt/repos","events_url":"https://api.github.com/users/telendt/events{/privacy}","received_events_url":"https://api.github.com/users/telendt/received_events","type":"User","site_admin":false},"created_at":"2018-11-07T11:52:26Z","updated_at":"2018-11-07T11:53:36Z","author_association":"CONTRIBUTOR","body":"@jimczi \r\n> The should clause is not mandatory\r\n\r\nIt is in the filter context (implicit `minimum_should_match=1`), it's not in the query context. Could you please try to run the last query I shared?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/436604912","html_url":"https://github.com/elastic/elasticsearch/issues/35293#issuecomment-436604912","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293","id":436604912,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNjYwNDkxMg==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2018-11-07T12:17:54Z","updated_at":"2018-11-07T12:17:54Z","author_association":"MEMBER","body":"I think I might have confused you with my initial answer regarding filter contexts. What I meant is that it is executed in a filter context because we don't take into account the score produced by the inner query. That's the only difference between a filter context and a query context. The part about `minimum_should_match` implicitly set in filter context is just wrong and I'll be happy to fix this in the documentation if you can point me where it is (I couldn't find it).\r\nA `filter` in a `bool` query is just a way to disable the score in the sub queries but in terms of matching it is equivalent to a `must` clause.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/436608181","html_url":"https://github.com/elastic/elasticsearch/issues/35293#issuecomment-436608181","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293","id":436608181,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNjYwODE4MQ==","user":{"login":"telendt","id":85191,"node_id":"MDQ6VXNlcjg1MTkx","avatar_url":"https://avatars2.githubusercontent.com/u/85191?v=4","gravatar_id":"","url":"https://api.github.com/users/telendt","html_url":"https://github.com/telendt","followers_url":"https://api.github.com/users/telendt/followers","following_url":"https://api.github.com/users/telendt/following{/other_user}","gists_url":"https://api.github.com/users/telendt/gists{/gist_id}","starred_url":"https://api.github.com/users/telendt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/telendt/subscriptions","organizations_url":"https://api.github.com/users/telendt/orgs","repos_url":"https://api.github.com/users/telendt/repos","events_url":"https://api.github.com/users/telendt/events{/privacy}","received_events_url":"https://api.github.com/users/telendt/received_events","type":"User","site_admin":false},"created_at":"2018-11-07T12:32:04Z","updated_at":"2018-11-07T12:36:05Z","author_association":"CONTRIBUTOR","body":"@jimczi \r\nNaturally. It's [here](https://github.com/elastic/elasticsearch/blame/416feeb7f925abd09b5a7059ffaf90f70068c9cd/docs/reference/query-dsl/bool-query.asciidoc#L24-L26):\r\n> [...] If the `bool` query is a <<query-filter-context,filter context>>\r\nor has neither `must` or `filter` then at least one of the `should` queries\r\nmust match a document for it to match the `bool` query\r\n\r\nAnd [here](https://github.com/elastic/elasticsearch/blame/416feeb7f925abd09b5a7059ffaf90f70068c9cd/docs/reference/query-dsl/bool-query.asciidoc#L39-L40):\r\n> If this query is used in a filter context and it has `should`\r\nclauses then at least one `should` clause is required to match.\r\n\r\n(And probably in other places as well.)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/436759558","html_url":"https://github.com/elastic/elasticsearch/issues/35293#issuecomment-436759558","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293","id":436759558,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNjc1OTU1OA==","user":{"login":"andyb-elastic","id":29205940,"node_id":"MDQ6VXNlcjI5MjA1OTQw","avatar_url":"https://avatars2.githubusercontent.com/u/29205940?v=4","gravatar_id":"","url":"https://api.github.com/users/andyb-elastic","html_url":"https://github.com/andyb-elastic","followers_url":"https://api.github.com/users/andyb-elastic/followers","following_url":"https://api.github.com/users/andyb-elastic/following{/other_user}","gists_url":"https://api.github.com/users/andyb-elastic/gists{/gist_id}","starred_url":"https://api.github.com/users/andyb-elastic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andyb-elastic/subscriptions","organizations_url":"https://api.github.com/users/andyb-elastic/orgs","repos_url":"https://api.github.com/users/andyb-elastic/repos","events_url":"https://api.github.com/users/andyb-elastic/events{/privacy}","received_events_url":"https://api.github.com/users/andyb-elastic/received_events","type":"User","site_admin":false},"created_at":"2018-11-07T20:06:15Z","updated_at":"2018-11-07T20:06:52Z","author_association":"CONTRIBUTOR","body":"To be clear about what I meant in [this comment](https://github.com/elastic/elasticsearch/issues/35293#issuecomment-436423442), when running the query in the original issue, the [builder for the boolean query](https://github.com/elastic/elasticsearch/blob/8de3c6e618505e46c10f95e4360ec23c746d2ddf/server/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java#L387-L394) sees `context.isFilter() == false` and leaves `minimumShouldMatch` set to default, which is no required optional clauses in the lucene BooleanQuery","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/436785720","html_url":"https://github.com/elastic/elasticsearch/issues/35293#issuecomment-436785720","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293","id":436785720,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNjc4NTcyMA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2018-11-07T21:35:30Z","updated_at":"2018-11-07T21:35:30Z","author_association":"MEMBER","body":"Yes thanks @andyb-elastic and sorry @telendt I completely skipped the fact that we have a different behavior for the boolean query in es. This is not the case at the Lucene level where I checked. I still don't understand why we need to change `minimumShouldMatch` in a filter context. I think this is due to an old behavior in an old version but I don't think it is required anymore. The query/filter context should be handled at the Lucene level only so I'll work on a pr to see if we can remove this buggy behavior in es. Bottom line is that `should` clauses in a `filter` clause should behave the same if put in a non-filtering clause (`must`).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/436790125","html_url":"https://github.com/elastic/elasticsearch/issues/35293#issuecomment-436790125","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293","id":436790125,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNjc5MDEyNQ==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2018-11-07T21:50:06Z","updated_at":"2018-11-07T22:00:36Z","author_association":"CONTRIBUTOR","body":"@jimczi  Thanks, it makes sense. So the plan is just to change `BoolQueryBuilder` so that filter context doesn't set it up `minimumShouldMatch = \"1\"`?  We don't need any changes for function score query, right?\r\n\r\nAlso if we get rid of setting `minimumShouldMatch = \"1\"`, it would not make sense to have `should` clause inside any `filter` context, as this filter will be useless, as all documents will be returned any way. \r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/436800540","html_url":"https://github.com/elastic/elasticsearch/issues/35293#issuecomment-436800540","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293","id":436800540,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNjgwMDU0MA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2018-11-07T22:25:52Z","updated_at":"2018-11-07T22:25:52Z","author_association":"MEMBER","body":"> So the plan is just to change BoolQueryBuilder so that filter context doesn't set it up minimumShouldMatch = \"1\"? We don't need any changes for function score query, right?\r\n\r\nI opened https://github.com/elastic/elasticsearch/pull/35354 to completely remove the filter context.\r\n\r\n> Also if we get rid of setting minimumShouldMatch = \"1\", it would not make sense to have should clause inside any filter context, as this filter will be useless, as all documents will be returned any way.\r\n\r\nTrue but I find very confusing to set a different minimumShouldMatch based on the context. That's not how Lucene does so we should be consistent here. In Lucene `should` clauses are ignored in a filter context only if they are mixed with other required clauses, otherwise at least one clause should match.\r\nIMHO setting a different minimum should match in es seems arbitrary and makes the interpretation of `should` clauses difficult for users (and devs that are not aware of this behavior ;) ).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/436807796","html_url":"https://github.com/elastic/elasticsearch/issues/35293#issuecomment-436807796","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293","id":436807796,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNjgwNzc5Ng==","user":{"login":"telendt","id":85191,"node_id":"MDQ6VXNlcjg1MTkx","avatar_url":"https://avatars2.githubusercontent.com/u/85191?v=4","gravatar_id":"","url":"https://api.github.com/users/telendt","html_url":"https://github.com/telendt","followers_url":"https://api.github.com/users/telendt/followers","following_url":"https://api.github.com/users/telendt/following{/other_user}","gists_url":"https://api.github.com/users/telendt/gists{/gist_id}","starred_url":"https://api.github.com/users/telendt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/telendt/subscriptions","organizations_url":"https://api.github.com/users/telendt/orgs","repos_url":"https://api.github.com/users/telendt/repos","events_url":"https://api.github.com/users/telendt/events{/privacy}","received_events_url":"https://api.github.com/users/telendt/received_events","type":"User","site_admin":false},"created_at":"2018-11-07T22:53:54Z","updated_at":"2018-11-07T22:55:35Z","author_association":"CONTRIBUTOR","body":"> IMHO setting a different minimum should match in es seems arbitrary and makes the interpretation of should clauses difficult for users (and devs that are not aware of this behavior ;) ).\r\n\r\nI can confirm that. I understand Lucene's implicit `minimumShouldMatch=1` when only `should` clauses are present -- in any other case I prefer setting `minimumShouldMatch` explicitly.\r\n\r\nIn this particular case the problem popped up when one other dev in my team moved boolean query from filter (that relied on this behaviour) and pasted it into function's filter. We were surprised to see that different set of documents got boosted from the set of documents previously returned by the filter.\r\n\r\nIt looks that you added this behaviour to BoolQueryBuilder on top of Lucene's default. My complain here is more about of lack of consistency between regular filter and function filter but I don't mind if you drop your concept of filter context and fall back to Lucene's default behaviour. It's just that it's a breaking change and many users don't like that (which you are probably perfectly aware of).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/436811199","html_url":"https://github.com/elastic/elasticsearch/issues/35293#issuecomment-436811199","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293","id":436811199,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNjgxMTE5OQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2018-11-07T23:07:49Z","updated_at":"2018-11-07T23:07:49Z","author_association":"MEMBER","body":"> It's just that it's a breaking change and many users don't like that (which you are probably perfectly aware of).\r\n\r\nI share this concern which is why we'd make this change in a major release (7.0) if we decide that it is the right thing to do. \r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/445733285","html_url":"https://github.com/elastic/elasticsearch/issues/35293#issuecomment-445733285","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293","id":445733285,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NTczMzI4NQ==","user":{"login":"ParanoiaUPC","id":9496321,"node_id":"MDQ6VXNlcjk0OTYzMjE=","avatar_url":"https://avatars2.githubusercontent.com/u/9496321?v=4","gravatar_id":"","url":"https://api.github.com/users/ParanoiaUPC","html_url":"https://github.com/ParanoiaUPC","followers_url":"https://api.github.com/users/ParanoiaUPC/followers","following_url":"https://api.github.com/users/ParanoiaUPC/following{/other_user}","gists_url":"https://api.github.com/users/ParanoiaUPC/gists{/gist_id}","starred_url":"https://api.github.com/users/ParanoiaUPC/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ParanoiaUPC/subscriptions","organizations_url":"https://api.github.com/users/ParanoiaUPC/orgs","repos_url":"https://api.github.com/users/ParanoiaUPC/repos","events_url":"https://api.github.com/users/ParanoiaUPC/events{/privacy}","received_events_url":"https://api.github.com/users/ParanoiaUPC/received_events","type":"User","site_admin":false},"created_at":"2018-12-10T08:37:37Z","updated_at":"2018-12-10T08:38:44Z","author_association":"NONE","body":"> The `filter` is correctly executed in the filter context, what happens here is that we set the default score to 1 for functions that don't define a [score functions]:(https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html#score-functions)\r\n> This is why a `weight` of 100 produces a score equals to 100. You can set `weight` to 0 if you want to disable the score entirely in the function.\r\n> However I agree that the documentation should indicate the default score for functions that contains a `filter` and no score-function.\r\n\r\n@jimczi Hi Jim, I was wondering if we could reset the default score (which is 1) to any value that we could config (like 0). And if we could do that, then how? Thanks a lot!","performed_via_github_app":null}]