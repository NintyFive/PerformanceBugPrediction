[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241075016","html_url":"https://github.com/elastic/elasticsearch/issues/19986#issuecomment-241075016","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19986","id":241075016,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTA3NTAxNg==","user":{"login":"chengpohi","id":5118048,"node_id":"MDQ6VXNlcjUxMTgwNDg=","avatar_url":"https://avatars2.githubusercontent.com/u/5118048?v=4","gravatar_id":"","url":"https://api.github.com/users/chengpohi","html_url":"https://github.com/chengpohi","followers_url":"https://api.github.com/users/chengpohi/followers","following_url":"https://api.github.com/users/chengpohi/following{/other_user}","gists_url":"https://api.github.com/users/chengpohi/gists{/gist_id}","starred_url":"https://api.github.com/users/chengpohi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengpohi/subscriptions","organizations_url":"https://api.github.com/users/chengpohi/orgs","repos_url":"https://api.github.com/users/chengpohi/repos","events_url":"https://api.github.com/users/chengpohi/events{/privacy}","received_events_url":"https://api.github.com/users/chengpohi/received_events","type":"User","site_admin":false},"created_at":"2016-08-19T17:04:02Z","updated_at":"2016-08-19T17:04:02Z","author_association":"CONTRIBUTOR","body":"@javanna I am trying to fix this bug, after investigation, Yes, this bug is caused by the order of `indexBoost:ObjectFloatHashMap` has different order when deserialised from `StreamInput`.\n\nthe caused `indexBoost` has different order even though the datas are same is `ObjectFloatHashMap` is using a `keyMixer` random number to calculate the `slot`.\n\n```\n  protected  int hashKey(KType key) {\n    assert !((key) == null); // Handled as a special case (empty slot marker).\n    return BitMixer.mix(key, this.keyMixer);\n  }\n  int slot = hashKey(existing) & mask;\n```\n\nwhen new a `ObjectFloatHashMap` it will create a new random `keyMixer`(`RandomizedHashOrderMixer`):\n\n```\n  protected final AtomicLong seedMixer;\n  public RandomizedHashOrderMixer() {\n    this(Containers.randomSeed64());\n  }\n  public RandomizedHashOrderMixer(long seed) {\n    seedMixer = new AtomicLong(seed);\n  }\n  @Override\n  public int newKeyMixer(int newContainerBufferSize) {\n    return (int) BitMixer.mix64(seedMixer.incrementAndGet());\n  }\n```\n\nSo it's nearly impossible to keep `keyMixer` same, after `StreamIn`, I am trying to sort the `ObjectFloatHashMap` when `StreamOut`, Do you think we can do it? or Is there a better way to do it?\n\nThere is a PR for sorting `indexBoost` when `StreamOut`:\n\nhttps://github.com/elastic/elasticsearch/pull/20081\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/242777373","html_url":"https://github.com/elastic/elasticsearch/issues/19986#issuecomment-242777373","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19986","id":242777373,"node_id":"MDEyOklzc3VlQ29tbWVudDI0Mjc3NzM3Mw==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-08-26T16:04:39Z","updated_at":"2016-08-26T16:04:39Z","author_association":"CONTRIBUTOR","body":"Fixed by #20081\n","performed_via_github_app":null}]