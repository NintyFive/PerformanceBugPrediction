[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/181543949","html_url":"https://github.com/elastic/elasticsearch/issues/16512#issuecomment-181543949","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16512","id":181543949,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MTU0Mzk0OQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-02-08T20:05:08Z","updated_at":"2016-02-08T20:05:35Z","author_association":"MEMBER","body":">  I know what I'm doing.\n\nI believe you :) . Can you give a concrete example using documents and queries? I think it will help understanding the need for the request / perhaps offer an alternative?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/182247694","html_url":"https://github.com/elastic/elasticsearch/issues/16512#issuecomment-182247694","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16512","id":182247694,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MjI0NzY5NA==","user":{"login":"pweerd","id":1112783,"node_id":"MDQ6VXNlcjExMTI3ODM=","avatar_url":"https://avatars0.githubusercontent.com/u/1112783?v=4","gravatar_id":"","url":"https://api.github.com/users/pweerd","html_url":"https://github.com/pweerd","followers_url":"https://api.github.com/users/pweerd/followers","following_url":"https://api.github.com/users/pweerd/following{/other_user}","gists_url":"https://api.github.com/users/pweerd/gists{/gist_id}","starred_url":"https://api.github.com/users/pweerd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pweerd/subscriptions","organizations_url":"https://api.github.com/users/pweerd/orgs","repos_url":"https://api.github.com/users/pweerd/repos","events_url":"https://api.github.com/users/pweerd/events{/privacy}","received_events_url":"https://api.github.com/users/pweerd/received_events","type":"User","site_admin":false},"created_at":"2016-02-10T08:11:16Z","updated_at":"2016-02-10T18:48:08Z","author_association":"NONE","body":"Trying to index TV shows, also using aggregations.\n\n### First attempt, using fielddata:\n\n``` bash\ncurl -XPUT localhost:9200/tv_shows -d'\n{\n   settings: {  \n      \"analysis\" : {\n         \"analyzer\" : {\n             \"lc_text\" : {\n                \"tokenizer\" : \"keyword\",\n                \"filter\": [\"lowercase\", \"asciifolding\"]\n             }\n          }\n      }   \n   },\n   \"mappings\": {\n      \"doc\": {\n         \"properties\": { \n            \"tv_show\": {\"type\": \"string\", \"analyzer\" : \"lc_text\"}\n         }\n      }\n   }\n}'\ncurl -XPOST localhost:9200/tv_shows/doc -d '{ \"tv_show\":\"3-2-1 Tučňáci\" }'\ncurl -XPOST localhost:9200/tv_shows/doc -d '{ \"tv_show\":\"3-2-1 Tucnaci\" }'\ncurl -XPOST localhost:9200/tv_shows/doc -d '{ \"tv_show\":\"3-2-1 tucnaci\" }'\n\ncurl -XPUT localhost:9200/_search -d'\n{\n   \"aggs\": {\n      \"tv_show\": {\n         \"terms\": {\n            \"field\": \"tv_show\"\n         }\n      }\n   }\n}'\n```\n\nEverything works fine, but fielddata is used, and common sense is that we should move to doc_values.\nOK, trying that:\n\n### Second attempt, using docvalues :\n\n``` bash\ncurl -XPUT localhost:9200/tv_shows -d'\n{\n   \"mappings\": {\n      \"doc\": {\n         \"properties\": { \n            \"tv_show\": {\"type\": \"string\", \"index\" : \"not_analyzed\"}\n         }\n      }\n   }\n}'\n```\n\nBut now the previous query obviously returns 3 different shows in the aggregation.\nSo, I have to do the normalization in my code. I'll do that. Though not beautiful, because it is a-symmetric)\n\nUsing the same mapping, I do:\n\n``` bash\ncurl -XPOST localhost:9200/tv_shows/doc -d '{ \"tv_show\":\"3-2-1 tucnaci\" }'\ncurl -XPOST localhost:9200/tv_shows/doc -d '{ \"tv_show\":\"3-2-1 tucnaci\" }'\ncurl -XPOST localhost:9200/tv_shows/doc -d '{ \"tv_show\":\"3-2-1 tucnaci\" }'\n```\n\nAnd we won: the query returns only 1 aggregation.\nHowever, when users are copy-pasting the real TV show nam,e into the query box, they find nothing (of course).\nSo, I tried to use a search analyzer:\n\n### Third attempt, using search_analyzer:\n\n``` bash\ncurl -XPUT localhost:9200/tv_shows -d'\n{\n   settings: {  \n      \"analysis\" : {\n         \"analyzer\" : {\n             \"lc_text\" : {\n                \"tokenizer\" : \"standard\",\n                \"filter\": [\"lowercase\", \"asciifolding\"]\n             }\n          }\n      }   \n   },\n   \"mappings\": {\n      \"doc\": {\n         \"properties\": { \n            \"tv_show\": {\"type\": \"string\", \"index\" : \"not_analyzed\", \"search_analyzer\": \"lc_text\"}\n         }\n      }\n   }\n}'\n```\n\nHowever, this is not accepted by ES, it states: \"analyzer on field [tv_show] must be set when search_analyzer is set\"\nThat is somewhat strange, because putting a keyword analyzer there (which is semantically the same as having no analyzer), would fix this exception.\n\n### Fouth attempt, using 2 fields:\n\n``` bash\ncurl -XPUT localhost:9200/tv_shows -d'\n{\n   settings: {  \n      \"analysis\" : {\n         \"analyzer\" : {\n             \"lc_text\" : {\n                \"tokenizer\" : \"keyword\",\n                \"filter\": [\"lowercase\", \"asciifolding\"]\n             }\n          }\n      }   \n   },\n   \"mappings\": {\n      \"doc\": {\n         \"properties\": { \n            \"tv_show\": {\"type\": \"string\", \"index\" : \"no\", \"copy_to\": [\"tv_show_a\", \"tv_show_s\"]}\n            \"tv_show_a\": {\"type\": \"string\", \"index\" : \"not_analyzed\"}\n            \"tv_show_s\": {\"type\": \"string\", \"analyzer\": \"lc_text\"}\n         }\n      }\n   }\n}'\n```\n\nThis will work, but now I have to educate people to use tv_show_a for aggregations and tv_show_s for searching.\nI know, doing this makes it even possible to use the standard tokenizer and let the user search for words in the show.\nHowever, that is currently not the use case.\n\n### Whishes:\n- It would be great to have the ability to specify an analyzer specific for doc_values. Something like \"docvalues_analyzer\": \"lc_keyword\".\n- Furthermore, is it possible to make a search_analyzer work on a not-analyzed field? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/182554581","html_url":"https://github.com/elastic/elasticsearch/issues/16512#issuecomment-182554581","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16512","id":182554581,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MjU1NDU4MQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2016-02-10T20:01:29Z","updated_at":"2016-02-10T20:01:59Z","author_association":"MEMBER","body":"> It would be great to have the ability to specify an analyzer specific for doc_values. Something like \"docvalues_analyzer\": \"lc_keyword\".\n\nDoc values doesn't have anything directly to do with analysis, but anything that is analyzed (ie broken up into multiple terms) cannot be stored in doc values. However, we would like to allow simple normalization like you want to do here on keyword fields, see this issue that is in progress: #12394.\n\n> Furthermore, is it possible to make a search_analyzer work on a not-analyzed field?\n\nYou can set the search analyzer on any string field, but it is required to specify the analyzer. This is to make the user understand that the index time analysis still happens with a different analyzer. In your case, I would allow searching with your normalized field, but aggregate with a non analyzed multi field:\n\n```\n\"mappings\": {\n    \"doc\": {\n        \"properties\": { \n            \"tv_show\": {\n                \"type\": \"string\",\n                \"analyzer\": \"lc_text\",\n                \"fields\": {\n                    \"original\" : {\n                        \"type\": \"string\",\n                        \"index\": \"not_analyzed\"\n                    }\n                }\n            }\n         }\n      }\n   }\n}\n```\n\nNow with this you would still search using your `lc_text` analyzer, but you should specify `tv_show.original` for doing aggregations.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/182591686","html_url":"https://github.com/elastic/elasticsearch/issues/16512#issuecomment-182591686","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16512","id":182591686,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MjU5MTY4Ng==","user":{"login":"pweerd","id":1112783,"node_id":"MDQ6VXNlcjExMTI3ODM=","avatar_url":"https://avatars0.githubusercontent.com/u/1112783?v=4","gravatar_id":"","url":"https://api.github.com/users/pweerd","html_url":"https://github.com/pweerd","followers_url":"https://api.github.com/users/pweerd/followers","following_url":"https://api.github.com/users/pweerd/following{/other_user}","gists_url":"https://api.github.com/users/pweerd/gists{/gist_id}","starred_url":"https://api.github.com/users/pweerd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pweerd/subscriptions","organizations_url":"https://api.github.com/users/pweerd/orgs","repos_url":"https://api.github.com/users/pweerd/repos","events_url":"https://api.github.com/users/pweerd/events{/privacy}","received_events_url":"https://api.github.com/users/pweerd/received_events","type":"User","site_admin":false},"created_at":"2016-02-10T21:34:59Z","updated_at":"2016-02-10T21:57:47Z","author_association":"NONE","body":"> Doc values doesn't have anything directly to do with analysis, but anything that is analyzed (ie broken up into multiple terms) cannot be stored in doc values. However, we would like to allow simple normalization like you want to do here on keyword fields, see this issue that is in progress: #12394\n\nI partially agree. It can be dangerous to let the user put multiple terms in the index. But, suppose that we have a field with a few comma-separated values... Then it makes sense. \nAnalyzing was of course tied to the Lucene indexed fields. But why not broadening that, and make it available for doc-values as well?\n\n> You can set the search analyzer on any string field, but it is required to specify the analyzer. This is to make the user understand that the index time analysis still happens with a different analyzer.\n\nI did understand what was going on here. But for the sake of 'understanding' we make things impossible?  :-(\nMaybe it is time for advanced mode vs novice mode. Like is done with the \n\n``` bash\nPUT _cluster/settings\n{\n    \"transient\": {\n        \"action.destructive_requires_name\": true\n    }\n}\n```\n\nES lets you choose here between protecting yourself or not.\n\n> Now with this you would still search using your lc_text analyzer, but you should specify tv_show.original for doing aggregations.\n\nThat solution is equivalent to my last attempt. But like I said: it is far from perfect...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/183660846","html_url":"https://github.com/elastic/elasticsearch/issues/16512#issuecomment-183660846","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16512","id":183660846,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzY2MDg0Ng==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-02-13T12:52:52Z","updated_at":"2016-02-13T12:52:52Z","author_association":"CONTRIBUTOR","body":"As @rjernst said, the new `keyword` field is being introduced specifically for this case where you want to use doc values for aggregations (possibly with case normalization) and have the field available for search as well with a `text` field.\n\nAlso note that you can set the `not_analyzed` version to `{\"index\": false, \"doc_values\": true}` so that it ONLY has doc values, and doesn't take up space in the index.\n\nThe third option that you have is to specify an analyzer at query time.\n\nClosing in favour of https://github.com/elastic/elasticsearch/issues/12394\n","performed_via_github_app":null}]