{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/10415","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10415/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10415/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10415/events","html_url":"https://github.com/elastic/elasticsearch/issues/10415","id":66162122,"node_id":"MDU6SXNzdWU2NjE2MjEyMg==","number":10415,"title":"Be lenient with \"has_child\" filter against a missing type","user":{"login":"tuxpiper","id":467393,"node_id":"MDQ6VXNlcjQ2NzM5Mw==","avatar_url":"https://avatars3.githubusercontent.com/u/467393?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxpiper","html_url":"https://github.com/tuxpiper","followers_url":"https://api.github.com/users/tuxpiper/followers","following_url":"https://api.github.com/users/tuxpiper/following{/other_user}","gists_url":"https://api.github.com/users/tuxpiper/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxpiper/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxpiper/subscriptions","organizations_url":"https://api.github.com/users/tuxpiper/orgs","repos_url":"https://api.github.com/users/tuxpiper/repos","events_url":"https://api.github.com/users/tuxpiper/events{/privacy}","received_events_url":"https://api.github.com/users/tuxpiper/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-04-03T15:02:33Z","updated_at":"2018-02-14T13:28:53Z","closed_at":"2016-01-15T19:07:32Z","author_association":"NONE","active_lock_reason":null,"body":"Currently a search request or query containing a filter like:\n\n```\n       \"has_child\": {\n          \"type\": \"missingtype\",\n          \"query\": { \"term\": { \"text\": \"yay\" } }\n       }\n```\n\nWill fail with a QueryParsingException (\"No mapping for for type [missingtype]\") if the mapping type it refers to is not defined.\n\nI think (and propose) that it would be useful to be able to at least instruct ES to be lenient in that case, and just evaluate the filter to false.\n\nI think this would make sense, moreover, it would be consistent with the behavior of search on a missing type, i.e. currently:\n\n```\ncurl http://localhost:9200/my-index/missingtype/_search?q=sometext\n```\n\nDoesn't fail, it returns 0 hits, despite of \"missingtype\" being (obviously) missing.\n\nAny reason why something similar shouldn't be done for the \"has_child\" filter?\n## \n\nSupporting use case:\n\nWe've got an app that indexes the full text of office documents that are attached to another type of entity, whose contents we also index in ES. We designed this as a parent-child relationship, indexing full text in a child type of the main entity type.\n\nCurrently, we are in the process of allowing end users to tweak their ES mappings, that means multiple (per user) parent mappings, each with their corresponding child mapping for indexed documents.\n\nWe would find it very clean and convenient to just create all these mappings lazily, and create the children type just when that user pushes an office document. The problem is that, unless we proactively make sure that the children types exist, our text search requests will break.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}