{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/21568","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21568/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21568/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21568/events","html_url":"https://github.com/elastic/elasticsearch/issues/21568","id":189440372,"node_id":"MDU6SXNzdWUxODk0NDAzNzI=","number":21568,"title":"OOM errors caused by large queue of cluster state update tasks","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"labels":[{"id":836504707,"node_id":"MDU6TGFiZWw4MzY1MDQ3MDc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Distributed","name":":Distributed/Distributed","color":"0e8a16","default":false,"description":"A catch all label for anything in the Distributed Area. If you aren't sure, use this one."},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"assignees":[{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2016-11-15T16:30:44Z","updated_at":"2018-03-20T16:58:03Z","closed_at":"2018-03-20T16:58:03Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"We've had multiple reports of master nodes going OOM when dealing with large numbers of pending cluster state update tasks. I am mainly opening this issue to explain what the implementation issues are and to link to current work being done to fix them. Before talking about the actual issues, let me quickly recapitulate what these update tasks are. Cluster state update tasks are units of work that are processed on the master node to change the cluster state, for example when creating a new index, updating mappings or changing the routing table (allocating / starting / moving shards). Some tasks have timeouts, others do not. Most tasks that result from user action (e.g. index creation) have timeouts which are configurable on the request with the `master_timeout` parameter (default is 30 seconds). Tasks are submitted to a single-threaded thread pool executor that considers priorities as well as insertion order for choosing the tasks to execute.\r\n\r\n1) The first issue is related to batching of cluster state updates. Even though a task might have timed out, the resources it will need to execute won't be cleaned up right away (in certain situations they won't be cleaned up at all which corresponds to a memory leak). The reason for this is that with the introduction of task batching a new map was added to cluster service that holds a reference to the UpdateTask. The task is only removed from this map once the task gets to execute (which can happen way later, or even not at all - see `TieBreakingPrioritizedRunnable#scheduleTimeout` and `#runAndClean`).\r\n\r\n2) The second issue is that cluster state update tasks often reference large states. One of the worst offenders is the action listener in `TransportMasterNodeAction.AsyncSingleAction` which has a `ClusterStateObserver` to coordinate the retry mechanism if the action on the master node fails due to the node not being master anymore. The `ClusterStateObserver` in `AsyncSingleAction` keeps a reference to the full cluster state when the action was initiated. If the pending tasks queue grows quite large and has older items in it lots of cluster states can possibly be referenced. In ES 5.x this is less of an issue as in 2.x because 5.x has immutable ShardRoutings (#17821) which lets us reuse ShardRouting objects across cluster states. The solution here I think is to look at how ClusterStateObserver is used and see that keeping the full old cluster state around is not really needed (we only care about version / status and cluster state identity of the old state).\r\n\r\n3) The third issue is that the pending task queue is unbounded. Here we could look at ways to constrain the number of tasks that can be submitted, possibly trading CPU time for memory.\r\n\r\n## Fixes:\r\n\r\n- #21578 fixes the memory leak issue where the cluster service does not remove an update task from its internal data structures that are used for batching cluster state updates.\r\n- #21631 fixes the issue where ClusterStateObserver holds onto cluster states","closed_by":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"performed_via_github_app":null}