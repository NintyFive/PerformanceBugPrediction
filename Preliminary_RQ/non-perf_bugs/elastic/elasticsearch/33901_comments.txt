[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/423264043","html_url":"https://github.com/elastic/elasticsearch/issues/33901#issuecomment-423264043","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33901","id":423264043,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMzI2NDA0Mw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-09-20T17:18:25Z","updated_at":"2018-09-20T17:18:25Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/423273235","html_url":"https://github.com/elastic/elasticsearch/issues/33901#issuecomment-423273235","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33901","id":423273235,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMzI3MzIzNQ==","user":{"login":"sabi0","id":11509875,"node_id":"MDQ6VXNlcjExNTA5ODc1","avatar_url":"https://avatars3.githubusercontent.com/u/11509875?v=4","gravatar_id":"","url":"https://api.github.com/users/sabi0","html_url":"https://github.com/sabi0","followers_url":"https://api.github.com/users/sabi0/followers","following_url":"https://api.github.com/users/sabi0/following{/other_user}","gists_url":"https://api.github.com/users/sabi0/gists{/gist_id}","starred_url":"https://api.github.com/users/sabi0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sabi0/subscriptions","organizations_url":"https://api.github.com/users/sabi0/orgs","repos_url":"https://api.github.com/users/sabi0/repos","events_url":"https://api.github.com/users/sabi0/events{/privacy}","received_events_url":"https://api.github.com/users/sabi0/received_events","type":"User","site_admin":false},"created_at":"2018-09-20T17:46:58Z","updated_at":"2018-09-20T17:46:58Z","author_association":"CONTRIBUTOR","body":"It might be reasonable to have `nextToken()` throw an \"Unexpected end of stream\" exception. And provide `nextTokenOrNull()` for those (presumably rare) cases when end of stream needs to be handled in a special way.\r\n\r\nIt would also be nice to be able to iterate the tokens in a more streamlined way:\r\n```\r\nfor (Token token : parser.iterateUntil(XContentParser.Token.END_OBJECT)) {\r\n```\r\nI could create a PR for the latter change if you think it would be a useful addition.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/423522019","html_url":"https://github.com/elastic/elasticsearch/issues/33901#issuecomment-423522019","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33901","id":423522019,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMzUyMjAxOQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2018-09-21T12:58:06Z","updated_at":"2018-09-21T12:58:06Z","author_association":"CONTRIBUTOR","body":"@sabi0, It looks to me like we're protected from this by a `com.fasterxml.jackson.core.io.JsonEOFException` that jackson throws at us when it hits the end of the steam but expects an END_ARRAY or END_OBJECT. Do these cause infinite loops for you?\r\n\r\nFor the most part we're pushing folks towards using `ObjectParser` which makes it a lot easier to look at the parsing code and say \"this is right\". I'm weary of making behavioral changes to methods like `nextToken` because they are still used in a ton of places. If most places used `ObjectParser` then a change to that method would be fine.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/424250441","html_url":"https://github.com/elastic/elasticsearch/issues/33901#issuecomment-424250441","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33901","id":424250441,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNDI1MDQ0MQ==","user":{"login":"sabi0","id":11509875,"node_id":"MDQ6VXNlcjExNTA5ODc1","avatar_url":"https://avatars3.githubusercontent.com/u/11509875?v=4","gravatar_id":"","url":"https://api.github.com/users/sabi0","html_url":"https://github.com/sabi0","followers_url":"https://api.github.com/users/sabi0/followers","following_url":"https://api.github.com/users/sabi0/following{/other_user}","gists_url":"https://api.github.com/users/sabi0/gists{/gist_id}","starred_url":"https://api.github.com/users/sabi0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sabi0/subscriptions","organizations_url":"https://api.github.com/users/sabi0/orgs","repos_url":"https://api.github.com/users/sabi0/repos","events_url":"https://api.github.com/users/sabi0/events{/privacy}","received_events_url":"https://api.github.com/users/sabi0/received_events","type":"User","site_admin":false},"created_at":"2018-09-25T08:21:41Z","updated_at":"2018-09-25T08:21:41Z","author_association":"CONTRIBUTOR","body":"You are right.\r\nI ran into this problem a while ago and remembered the details wrongly. It was not about malformed JSON.\r\nThere was a bug in the code that was supposed to skip unwanted values. It was sometimes consuming too much of the input pushing the logic above it into an infinite loop.\r\n\r\nSo the null check does not look strictly necessary indeed. But it would make code more resilient in case some (custom) query/aggregation parser does not play nice.\r\n\r\nP.S. Do all XContent formats have \"unexpected EOF\" protection?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/446237367","html_url":"https://github.com/elastic/elasticsearch/issues/33901#issuecomment-446237367","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33901","id":446237367,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NjIzNzM2Nw==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2018-12-11T15:13:16Z","updated_at":"2018-12-11T15:13:16Z","author_association":"CONTRIBUTOR","body":"> P.S. Do all XContent formats have \"unexpected EOF\" protection?\r\n\r\nThey do, yes.","performed_via_github_app":null}]