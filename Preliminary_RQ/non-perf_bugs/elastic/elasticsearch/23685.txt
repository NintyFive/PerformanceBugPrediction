{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/23685","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23685/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23685/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23685/events","html_url":"https://github.com/elastic/elasticsearch/issues/23685","id":215872543,"node_id":"MDU6SXNzdWUyMTU4NzI1NDM=","number":23685,"title":"Support setting `action.auto_create_index=false` per request","user":{"login":"spalger","id":1329312,"node_id":"MDQ6VXNlcjEzMjkzMTI=","avatar_url":"https://avatars1.githubusercontent.com/u/1329312?v=4","gravatar_id":"","url":"https://api.github.com/users/spalger","html_url":"https://github.com/spalger","followers_url":"https://api.github.com/users/spalger/followers","following_url":"https://api.github.com/users/spalger/following{/other_user}","gists_url":"https://api.github.com/users/spalger/gists{/gist_id}","starred_url":"https://api.github.com/users/spalger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spalger/subscriptions","organizations_url":"https://api.github.com/users/spalger/orgs","repos_url":"https://api.github.com/users/spalger/repos","events_url":"https://api.github.com/users/spalger/events{/privacy}","received_events_url":"https://api.github.com/users/spalger/received_events","type":"User","site_admin":false},"labels":[{"id":163824881,"node_id":"MDU6TGFiZWwxNjM4MjQ4ODE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Indices%20APIs","name":":Core/Features/Indices APIs","color":"0e8a16","default":false,"description":"APIs to create and manage indices"},{"id":144457604,"node_id":"MDU6TGFiZWwxNDQ0NTc2MDQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Settings","name":":Core/Infra/Settings","color":"0e8a16","default":false,"description":"Settings infrastructure and APIs"},{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-03-21T20:46:27Z","updated_at":"2017-03-25T01:06:18Z","closed_at":"2017-03-25T01:06:18Z","author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the feature**: On `index`/`create` or any request that would normally cause non-existing indexes to be created, a parameter would allow disabling automatic index creation for that request. The inverse should not be true (you shouldn't be able to opt-out of the `action.auto_create_index` config).\r\n\r\n**Examples**:\r\nStandard scenario:\r\n```yaml\r\n# config/elasticsearch.yml\r\naction.auto_create_index: true\r\n```\r\n```sh\r\ncurl -XDELETE 'http://localhost:9200/.kibana'\r\n# <- ok\r\n\r\ncurl -XPOST 'http://localhost:9200/.kibana/visualization/id?auto_create_index=disable' -d '{}'\r\n# <- fails the same way it would if action.auto_create_index was set to false\r\n```\r\n\r\nInverse scenario:\r\n```yaml\r\n# config/elasticsearch.yml\r\naction.auto_create_index: false\r\n```\r\n```sh\r\ncurl -XDELETE 'http://localhost:9200/.kibana'\r\n# <- ok\r\n\r\ncurl -XPOST 'http://localhost:9200/.kibana/visualization/id?auto_create_index=enable' -d '{}'\r\n# <- should also fail, the only valid value for auto_create_index is \"disable\"\r\n```\r\n\r\n\r\n**Why**: Kibana currently polls elasticsearch every so often to determine if it is in an expected state. In those checks it ensures that the `.kibana` index exists and creates it if not. This has several issues, one of which is the window of time between when the `.kibana` index is deleted and the next Kibana health check runs where Kibana's behavior is unpredictable.\r\n\r\nWe would like to move to a new model for this check:\r\n\r\n - make requests that try to use the `.kibana` index\r\n - ensure that requests fail when the index does not exist\r\n - react to the errors by:\r\n    - creating the .kibana index\r\n    - waiting for it to go yellow\r\n    - trying the original request again\r\n\r\n/cc @jbudz @tylersmalley","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}