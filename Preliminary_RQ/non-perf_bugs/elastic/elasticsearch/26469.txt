{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/26469","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26469/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26469/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26469/events","html_url":"https://github.com/elastic/elasticsearch/issues/26469","id":254596892,"node_id":"MDU6SXNzdWUyNTQ1OTY4OTI=","number":26469,"title":"Provide a way for plugins to implement new rescore builders ","user":{"login":"nomoa","id":5939211,"node_id":"MDQ6VXNlcjU5MzkyMTE=","avatar_url":"https://avatars1.githubusercontent.com/u/5939211?v=4","gravatar_id":"","url":"https://api.github.com/users/nomoa","html_url":"https://github.com/nomoa","followers_url":"https://api.github.com/users/nomoa/followers","following_url":"https://api.github.com/users/nomoa/following{/other_user}","gists_url":"https://api.github.com/users/nomoa/gists{/gist_id}","starred_url":"https://api.github.com/users/nomoa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nomoa/subscriptions","organizations_url":"https://api.github.com/users/nomoa/orgs","repos_url":"https://api.github.com/users/nomoa/repos","events_url":"https://api.github.com/users/nomoa/events{/privacy}","received_events_url":"https://api.github.com/users/nomoa/received_events","type":"User","site_admin":false},"labels":[{"id":146832994,"node_id":"MDU6TGFiZWwxNDY4MzI5OTQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Plugins","name":":Core/Infra/Plugins","color":"0e8a16","default":false,"description":"Plugin API and infrastructure"},{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-09-01T10:11:52Z","updated_at":"2017-09-01T13:12:01Z","closed_at":"2017-09-01T12:53:30Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"While working on a plugin I found that implementing a custom Rescorer would allow me to address issues that I cannot address with the default QueryRescorer : \r\n- Allow some performance optimizations for specific queries provided by the plugin (very specific bulk scoring operations)\r\n- Maybe add some code to support replacing the initial score, there are no easy ways to do this right now\r\n- And certainly other use cases\r\n\r\nWhile digging into the code I found that most of the code seems ready to accept multiple rescorer implementations but sadly the SearchPlugin does allow me to specify custom RescoreBuilders.\r\n\r\nAre there any objections/comments into providing such extension point? I'm willing to work on this if there are no objections.\r\n\r\nFor more contexts:\r\nwe are working on a learning to rank plugin (very similar to the one provided by solr). Decision trees is one the ranker we provide and @Ebernhardson made a nice proof of concept that we could improve evaluation time up to to 5x if we could do bulk scoring.\r\nConcerning the issue of not being able to easily replace query_score, I can (I think) workaround my problem with a custom lucene query to normalize scores but putting this code into the rescorer sounds more natural to me.","closed_by":{"login":"nomoa","id":5939211,"node_id":"MDQ6VXNlcjU5MzkyMTE=","avatar_url":"https://avatars1.githubusercontent.com/u/5939211?v=4","gravatar_id":"","url":"https://api.github.com/users/nomoa","html_url":"https://github.com/nomoa","followers_url":"https://api.github.com/users/nomoa/followers","following_url":"https://api.github.com/users/nomoa/following{/other_user}","gists_url":"https://api.github.com/users/nomoa/gists{/gist_id}","starred_url":"https://api.github.com/users/nomoa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nomoa/subscriptions","organizations_url":"https://api.github.com/users/nomoa/orgs","repos_url":"https://api.github.com/users/nomoa/repos","events_url":"https://api.github.com/users/nomoa/events{/privacy}","received_events_url":"https://api.github.com/users/nomoa/received_events","type":"User","site_admin":false},"performed_via_github_app":null}