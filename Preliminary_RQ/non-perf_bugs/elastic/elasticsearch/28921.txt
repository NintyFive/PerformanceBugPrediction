{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/28921","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28921/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28921/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28921/events","html_url":"https://github.com/elastic/elasticsearch/issues/28921","id":302954095,"node_id":"MDU6SXNzdWUzMDI5NTQwOTU=","number":28921,"title":"The problem about ordering in terms","user":{"login":"zp-shadowolf","id":31597062,"node_id":"MDQ6VXNlcjMxNTk3MDYy","avatar_url":"https://avatars3.githubusercontent.com/u/31597062?v=4","gravatar_id":"","url":"https://api.github.com/users/zp-shadowolf","html_url":"https://github.com/zp-shadowolf","followers_url":"https://api.github.com/users/zp-shadowolf/followers","following_url":"https://api.github.com/users/zp-shadowolf/following{/other_user}","gists_url":"https://api.github.com/users/zp-shadowolf/gists{/gist_id}","starred_url":"https://api.github.com/users/zp-shadowolf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zp-shadowolf/subscriptions","organizations_url":"https://api.github.com/users/zp-shadowolf/orgs","repos_url":"https://api.github.com/users/zp-shadowolf/repos","events_url":"https://api.github.com/users/zp-shadowolf/events{/privacy}","received_events_url":"https://api.github.com/users/zp-shadowolf/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-07T03:42:18Z","updated_at":"2018-03-07T07:20:07Z","closed_at":"2018-03-07T07:20:07Z","author_association":"NONE","active_lock_reason":null,"body":"### 1. FunctionDescription\r\n---\r\n\r\n1. Use terms to generate multiple buckets.\r\n2. Sort the buckets using the aggregated result.\r\n\r\n### 2. My Previous Solution\r\n---\r\n\r\n1. At first, I use terms->order to sort buckets.\r\n2. Then, part of the aggregate result must be achieved using bucket_script and need to support the paging function. The terms->sort can not be used. I use the bucket_sort to achieve the functions.\r\n3. But soon discovered a problem.  \r\n\r\n    ```\r\n    The bucket_sort aggregation, like all pipeline aggregations, is executed after all other non-pipeline aggregations. This means the sorting only applies to whatever buckets are already returned from the parent aggregation.\r\n    ````\r\n    * According to the above description, I need to set the terms->size to a number big enough. This will cause a lot of pressure on the cluster. And in the case of a large amount of concurrent, may lead to the cluster down.\r\n    * It is also impractical to return all the data for calculation. If the data is lager enough, data transmission can take a long time.\r\n\r\n### 3. Please Help\r\n---\r\n\r\n* For the above problem, I need your good idea. Thanks a lot.\r\n\r\n### 4. Related Statements\r\n---\r\n\r\n```\r\nGET 7b_hot/ptedata/_search\r\n{\r\n  \"size\": 0,\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"must\": [\r\n        {\r\n          \"term\": {\r\n            \"rs_type\": {\r\n              \"value\": \"session\"\r\n            }\r\n          }\r\n        },\r\n        {\r\n          \"range\": {\r\n            \"v_ymd\": {\r\n              \"gte\": \"2018-03-05\",\r\n              \"lte\": \"2018-03-05\",\r\n              \"format\": \"yyyy-MM-dd\"\r\n            }\r\n          }\r\n        },\r\n        {\r\n          \"terms\": {\r\n            \"sid\": [\r\n              \"7bdb3d08\"\r\n            ]\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"aggs\": {\r\n    \"content_page_merge\": {\r\n      \"nested\": {\r\n        \"path\": \"scene\"\r\n      },\r\n      \"aggs\": {\r\n        \"pv\": {\r\n          \"filter\": {\r\n            \"bool\": {\r\n              \"must\": [\r\n                {\r\n                  \"exists\": {\r\n                    \"field\": \"scene.pid\"\r\n                  }\r\n                }  \r\n              ]\r\n            }\r\n          },\r\n          \"aggs\": {\r\n            \"pv3\": {\r\n              \"terms\": {\r\n                \"field\": \"scene.cutpid\",\r\n                \"size\": 20,\r\n                \"shard_size\": 1000,\r\n                \"order\": {\r\n                  \"probability_exit\": \"desc\"\r\n                }\r\n              },\r\n              \"aggs\": {\r\n                \"vi\": {\r\n                  \"reverse_nested\": {},\r\n                  \"aggs\": {\r\n                    \"visits\": {\r\n                      \"filter\": {\r\n                        \"exists\": {\r\n                          \"field\": \"vid\"\r\n                        }\r\n                      },\r\n                      \"aggs\": {\r\n                        \"visits_value\": {\r\n                          \"value_count\": {\r\n                            \"field\": \"vid\"\r\n                          }\r\n                        }\r\n                      }\r\n                    },\r\n                    \"new_visits\": {\r\n                      \"filter\": {\r\n                        \"term\": {\r\n                          \"nv\": true\r\n                        }\r\n                      },\r\n                      \"aggs\": {\r\n                        \"new_visits_value\": {\r\n                          \"value_count\": {\r\n                            \"field\": \"vid\"\r\n                          }\r\n                        }\r\n                      }\r\n                    },\r\n                    \"bounce\": {\r\n                      \"filter\": {\r\n                        \"term\": {\r\n                          \"bounce\": true\r\n                        }\r\n                      },\r\n                      \"aggs\": {\r\n                        \"bounce_value\": {\r\n                          \"value_count\": {\r\n                            \"field\": \"vid\"\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                },\r\n                \"url_title_pid_cutpath\": {\r\n                  \"top_hits\": {\r\n                    \"from\": 0, \r\n                    \"size\": 1,\r\n                    \"_source\": {\r\n                      \"includes\": [\r\n                        \"scene.fullpath\",\r\n                        \"scene.title\",\r\n                        \"scene.pid\",\r\n                        \"scene.cutpath\"\r\n                      ]\r\n                    }\r\n                  }\r\n                },\r\n                \"st\": {\r\n                  \"filter\": {\r\n                    \"range\": {\r\n                      \"scene.staytm\": {\r\n                        \"gte\": 0\r\n                      }\r\n                    }\r\n                  },\r\n                  \"aggs\": {\r\n                    \"stay_time\": {\r\n                      \"sum\": {\r\n                        \"field\": \"scene.staytm\"\r\n                      }\r\n                    }\r\n                  }\r\n                },\r\n                \"page_visits\": {\r\n                  \"filter\": {\r\n                    \"exists\": {\r\n                      \"field\": \"scene.pid\"\r\n                    }\r\n                  },\r\n                  \"aggs\": {\r\n                    \"page_visits_value\": {\r\n                      \"value_count\": {\r\n                        \"field\": \"scene.pid\"\r\n                      }\r\n                    }\r\n                  }\r\n                },\r\n                \"land\": {\r\n                  \"filter\": {\r\n                    \"term\": {\r\n                      \"scene.is_land\": true\r\n                    }\r\n                  },\r\n                  \"aggs\": {\r\n                    \"land_value\": {\r\n                      \"value_count\": {\r\n                        \"field\": \"scene.pid\"\r\n                      }\r\n                    }\r\n                  }\r\n                },\r\n                \"exit\": {\r\n                  \"filter\": {\r\n                    \"term\": {\r\n                      \"scene.is_exit\": true\r\n                    }\r\n                  },\r\n                  \"aggs\": {\r\n                    \"exit_value\": {\r\n                      \"value_count\": {\r\n                        \"field\": \"scene.pid\"\r\n                      }\r\n                    }\r\n                  }\r\n                },\r\n                \"r_bucket_sort\": {\r\n                  \"bucket_sort\": {\r\n                    \"from\": 10,\r\n                    \"size\": 10\r\n                  }\r\n                },\r\n                \"probability_new_visits\": {\r\n                  \"bucket_script\": {\r\n                    \"buckets_path\": {\r\n                      \"visits\": \"vi>visits>visits_value\",\r\n                      \"new_visits\": \"vi>new_visits>new_visits_value\"\r\n                    },\r\n                    \"script\": \"(params.visits==0)?0:(params.new_visits/params.visits)\"\r\n                  }\r\n                },\r\n                \"probability_exit\": {\r\n                  \"bucket_script\": {\r\n                    \"buckets_path\": {\r\n                      \"exit\": \"exit>exit_value\",\r\n                      \"page_visits\": \"page_visits>page_visits_value\"\r\n                    },\r\n                    \"script\": \"(params.page_visits==0)?0:(params.exit/params.page_visits)\"\r\n                  }\r\n                },\r\n                \"probability_bounce\": {\r\n                  \"bucket_script\": {\r\n                    \"buckets_path\": {\r\n                      \"bounce\": \"vi>bounce>bounce_value\",\r\n                      \"land\": \"land>land_value\"\r\n                    },\r\n                    \"script\": \"(params.land==0)?0:(params.bounce/params.land)\"\r\n                  }\r\n                },\r\n                \"avg_staytime\": {\r\n                  \"bucket_script\": {\r\n                    \"buckets_path\": {\r\n                      \"page_visits\": \"page_visits>page_visits_value\",\r\n                      \"staytime\": \"st>stay_time\"\r\n                    },\r\n                    \"script\": \"(params.page_visits==0)?0:(params.staytime/(params.page_visits*1000))\"\r\n                  }\r\n                },\r\n                \"cutpid_count\": {\r\n                  \"cardinality\": {\r\n                    \"field\": \"scene.cutpid\",\r\n                    \"precision_threshold\": 10000\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n","closed_by":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"performed_via_github_app":null}