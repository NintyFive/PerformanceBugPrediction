[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/77159618","html_url":"https://github.com/elastic/elasticsearch/issues/9978#issuecomment-77159618","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9978","id":77159618,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MTU5NjE4","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-03-04T13:45:48Z","updated_at":"2015-03-04T13:45:48Z","author_association":"CONTRIBUTOR","body":"background: #9973 (i copied my comment here)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/88143961","html_url":"https://github.com/elastic/elasticsearch/issues/9978#issuecomment-88143961","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9978","id":88143961,"node_id":"MDEyOklzc3VlQ29tbWVudDg4MTQzOTYx","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2015-03-31T16:03:54Z","updated_at":"2015-03-31T16:05:01Z","author_association":"MEMBER","body":"@rmuir can you explain a little bit more how the `MultiTermAwareComponent` should be used? When I look for usages of it in the Lucene 4.x branch, the only users are tests and Solr.\n\nLooking at the `QueryBuilder`, it looks like it uses the analyzer to get the tokenStream for the text to get tokens, but that this doesn't seem to interface with choosing whether or not to do things like stemming? Do you think this is something that we should hold off on doing until we figure out how to exclude things like stemming from the analysis chain when analyzing expanded terms, or should we let the user deal with it by specifying a separate query-time analyzer?\n\n(I originally merged a change for this that did it in the generic way but then reverted it when Ryan reminded my about the MultiTermAwareComponent part of this)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/136685521","html_url":"https://github.com/elastic/elasticsearch/issues/9978#issuecomment-136685521","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9978","id":136685521,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNjY4NTUyMQ==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-09-01T11:47:45Z","updated_at":"2015-09-01T11:47:45Z","author_association":"CONTRIBUTOR","body":"> @rmuir can you explain a little bit more how the MultiTermAwareComponent should be used?\n\nYou create a separate chain (analyzer) for multitermqueries by iterating thru the query analysis chain. implicitly the tokenizer should be keywordtokenizer.\n\nimagine query analysis chain is: lowercase + snowball. you look at lowercase (http://svn.apache.org/viewvc/lucene/dev/branches/branch_5x/lucene/analysis/common/src/java/org/apache/lucene/analysis/core/LowerCaseFilterFactory.java?view=markup) and with instanceof you see it has that interface, so you call getMultiTermComponent() and add that to the chain. On the other hand snowball does not implement it, so nothing gets added.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/136685800","html_url":"https://github.com/elastic/elasticsearch/issues/9978#issuecomment-136685800","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9978","id":136685800,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNjY4NTgwMA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2015-09-01T11:49:45Z","updated_at":"2015-09-01T11:50:43Z","author_association":"MEMBER","body":"As a side note, if we remove the `lowercase_expanded_terms` option we should be able to remove the `locale` parameter from simple_query_string and query_string as well, that would help with solving #13229 .\n","performed_via_github_app":null}]