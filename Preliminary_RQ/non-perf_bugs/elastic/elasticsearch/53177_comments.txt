[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/595306531","html_url":"https://github.com/elastic/elasticsearch/issues/53177#issuecomment-595306531","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53177","id":595306531,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTMwNjUzMQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T16:01:47Z","updated_at":"2020-03-05T16:01:47Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-features (:Core/Features/Watcher)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/595349683","html_url":"https://github.com/elastic/elasticsearch/issues/53177#issuecomment-595349683","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53177","id":595349683,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTM0OTY4Mw==","user":{"login":"mark-vieira","id":4106672,"node_id":"MDQ6VXNlcjQxMDY2NzI=","avatar_url":"https://avatars2.githubusercontent.com/u/4106672?v=4","gravatar_id":"","url":"https://api.github.com/users/mark-vieira","html_url":"https://github.com/mark-vieira","followers_url":"https://api.github.com/users/mark-vieira/followers","following_url":"https://api.github.com/users/mark-vieira/following{/other_user}","gists_url":"https://api.github.com/users/mark-vieira/gists{/gist_id}","starred_url":"https://api.github.com/users/mark-vieira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mark-vieira/subscriptions","organizations_url":"https://api.github.com/users/mark-vieira/orgs","repos_url":"https://api.github.com/users/mark-vieira/repos","events_url":"https://api.github.com/users/mark-vieira/events{/privacy}","received_events_url":"https://api.github.com/users/mark-vieira/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T17:26:13Z","updated_at":"2020-03-05T17:26:13Z","author_association":"CONTRIBUTOR","body":"I tried, but it didn't reproduce locally for me.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/595885846","html_url":"https://github.com/elastic/elasticsearch/issues/53177#issuecomment-595885846","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53177","id":595885846,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTg4NTg0Ng==","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"created_at":"2020-03-06T17:54:09Z","updated_at":"2020-03-06T17:54:09Z","author_association":"MEMBER","body":"This also failed on 7.x today https://gradle-enterprise.elastic.co/s/izleuckcsczy6/tests/j3inyc2qyhaby-3e5dsrwmfrm6w. \r\n\r\n@martijnvg I see you have a commit that mentions this issue. I wonder if there might be a race condition in stopping the TriggerService where the TriggerService is stopped but a watch is added concurrently/after the stop of the triggerservice somehow, maybe by the WatcherIndexingListener?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/596395360","html_url":"https://github.com/elastic/elasticsearch/issues/53177#issuecomment-596395360","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53177","id":596395360,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NjM5NTM2MA==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2020-03-09T08:33:00Z","updated_at":"2020-03-09T08:33:00Z","author_association":"MEMBER","body":" Thanks @jaymode for triaging this failure. I also did some investigating and if watcher is stopped then the `watch_count` returned by watcher stats api is `0`, because all watcher (trigger service) are paused. However if watcher is stopped, a watch can still be added via the api and this increases the watch count in the watcher stats api by 1. This can also happen if for example a write is retried on a .watches shard copy that has watches allocated. The expectation is that if watcher is stopped then that the watch_count is always zero, but this isn't true. The `WatcherIndexingListener` doesn't check wether watcher is stopped, just whether it should delegate specific watches to the trigger service. I think that `WatcherIndexingListener` (and maybe other places too) should also check what the `watcher_state` is and act on it.\r\n\r\nI'm not sure whether this problem occurs here, the watcher rest qa module doesn't execute tests parallel and I've not yet found evidence that a watch was added after watcher was stopped.\r\n\r\nThe commit that I pushed, delays the checking of the watcher stats' `watcher_count` that happens between tests. Before this was done after watcher was stopped, but now after watcher is stopped and the `.watches` index has been removed. I think this make sense based on how the watcher stop api works, but this hasn't fixed the test failure.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/597121493","html_url":"https://github.com/elastic/elasticsearch/issues/53177#issuecomment-597121493","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53177","id":597121493,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NzEyMTQ5Mw==","user":{"login":"williamrandolph","id":3253644,"node_id":"MDQ6VXNlcjMyNTM2NDQ=","avatar_url":"https://avatars3.githubusercontent.com/u/3253644?v=4","gravatar_id":"","url":"https://api.github.com/users/williamrandolph","html_url":"https://github.com/williamrandolph","followers_url":"https://api.github.com/users/williamrandolph/followers","following_url":"https://api.github.com/users/williamrandolph/following{/other_user}","gists_url":"https://api.github.com/users/williamrandolph/gists{/gist_id}","starred_url":"https://api.github.com/users/williamrandolph/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/williamrandolph/subscriptions","organizations_url":"https://api.github.com/users/williamrandolph/orgs","repos_url":"https://api.github.com/users/williamrandolph/repos","events_url":"https://api.github.com/users/williamrandolph/events{/privacy}","received_events_url":"https://api.github.com/users/williamrandolph/received_events","type":"User","site_admin":false},"created_at":"2020-03-10T14:38:25Z","updated_at":"2020-03-10T14:38:25Z","author_association":"CONTRIBUTOR","body":"There's another instance of this failure on 7.x: https://gradle-enterprise.elastic.co/s/xreqekg5chqoy\r\n\r\nOne failure on `WatcherYamlRestIT`:\r\n```\r\n2> REPRODUCE WITH: ./gradlew ':x-pack:plugin:watcher:qa:rest:integTestRunner' --tests \"org.elasticsearch.smoketest.WatcherYamlRestIT.test {p0=watcher/put_watch/10_basic/Test empty body is rejected by put watch}\" -Dtests.seed=41277B042F438E42 -Dtests.security.manager=true -Dtests.locale=en-US -Dtests.timezone=Asia/Colombo -Dcompiler.java=13 |  \r\n-- | --\r\n  | 2> java.lang.AssertionError: |  \r\n  | Expected: <0> |  \r\n  | but: was <1> |  \r\n  | at __randomizedtesting.SeedInfo.seed([41277B042F438E42:C97344DE81BFE3BA]:0) |  \r\n  | at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18) |  \r\n  | at org.junit.Assert.assertThat(Assert.java:956) |  \r\n  | at org.junit.Assert.assertThat(Assert.java:923) |  \r\n  | at org.elasticsearch.xpack.watcher.WatcherYamlSuiteTestCase.lambda$startWatcher$0(WatcherYamlSuiteTestCase.java:57) |  \r\n  | at org.elasticsearch.test.ESTestCase.assertBusy(ESTestCase.java:906) |  \r\n  | at org.elasticsearch.test.ESTestCase.assertBusy(ESTestCase.java:879) |  \r\n  | at org.elasticsearch.xpack.watcher.WatcherYamlSuiteTestCase.startWatcher(WatcherYamlSuiteTestCase.java:39)\r\n  […]\r\n```\r\n\r\n…and another on `SmokeTestWatcherWithSecurityClientYamlTestSuiteIT`:\r\n```\r\n2> REPRODUCE WITH: ./gradlew ':x-pack:plugin:watcher:qa:with-security:integTestRunner' --tests \"org.elasticsearch.smoketest.SmokeTestWatcherWithSecurityClientYamlTestSuiteIT.test {yaml=watcher/activate_watch/10_basic/Non existent watch returns 404}\" -Dtests.seed=41277B042F438E42 -Dtests.security.manager=true -Dtests.locale=mt-MT -Dtests.timezone=Asia/Karachi -Dcompiler.java=13 |  \r\n-- | --\r\n  | 2> java.lang.AssertionError: |  \r\n  | Expected: <0> |  \r\n  | but: was <1> |  \r\n  | at __randomizedtesting.SeedInfo.seed([41277B042F438E42:C97344DE81BFE3BA]:0) |  \r\n  | at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18) |  \r\n  | at org.junit.Assert.assertThat(Assert.java:956) |  \r\n  | at org.junit.Assert.assertThat(Assert.java:923) |  \r\n  | at org.elasticsearch.xpack.watcher.WatcherYamlSuiteTestCase.lambda$startWatcher$0(WatcherYamlSuiteTestCase.java:57) |  \r\n  | at org.elasticsearch.test.ESTestCase.assertBusy(ESTestCase.java:906) |  \r\n  | at org.elasticsearch.test.ESTestCase.assertBusy(ESTestCase.java:879) |  \r\n  | at org.elasticsearch.xpack.watcher.WatcherYamlSuiteTestCase.startWatcher(WatcherYamlSuiteTestCase.java:39)\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/597261958","html_url":"https://github.com/elastic/elasticsearch/issues/53177#issuecomment-597261958","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53177","id":597261958,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NzI2MTk1OA==","user":{"login":"williamrandolph","id":3253644,"node_id":"MDQ6VXNlcjMyNTM2NDQ=","avatar_url":"https://avatars3.githubusercontent.com/u/3253644?v=4","gravatar_id":"","url":"https://api.github.com/users/williamrandolph","html_url":"https://github.com/williamrandolph","followers_url":"https://api.github.com/users/williamrandolph/followers","following_url":"https://api.github.com/users/williamrandolph/following{/other_user}","gists_url":"https://api.github.com/users/williamrandolph/gists{/gist_id}","starred_url":"https://api.github.com/users/williamrandolph/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/williamrandolph/subscriptions","organizations_url":"https://api.github.com/users/williamrandolph/orgs","repos_url":"https://api.github.com/users/williamrandolph/repos","events_url":"https://api.github.com/users/williamrandolph/events{/privacy}","received_events_url":"https://api.github.com/users/williamrandolph/received_events","type":"User","site_admin":false},"created_at":"2020-03-10T19:09:09Z","updated_at":"2020-03-10T19:09:09Z","author_association":"CONTRIBUTOR","body":"One more on `SmokeTestWatcherWithSecurityClientYamlTestSuiteIT`, master branch: https://gradle-enterprise.elastic.co/s/43mjgxd6sesck","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/598303541","html_url":"https://github.com/elastic/elasticsearch/issues/53177#issuecomment-598303541","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53177","id":598303541,"node_id":"MDEyOklzc3VlQ29tbWVudDU5ODMwMzU0MQ==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2020-03-12T17:06:07Z","updated_at":"2020-03-12T17:06:07Z","author_association":"CONTRIBUTOR","body":"It appears that this may be a setup/tear down issue and build-stats shows more test failures than the ones referenced here. As of #53362 all of the REST tests for Watcher are muted and will look into this issue as soon as possible. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/608631573","html_url":"https://github.com/elastic/elasticsearch/issues/53177#issuecomment-608631573","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53177","id":608631573,"node_id":"MDEyOklzc3VlQ29tbWVudDYwODYzMTU3Mw==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2020-04-03T19:59:46Z","updated_at":"2020-04-03T19:59:46Z","author_association":"CONTRIBUTOR","body":"Another failure of SmokeTestWatcherWithSecurityClientYamlTestSuiteIT on 7.x today, which doesn't reproduce for me.\r\n\r\n./gradlew ':x-pack:plugin:watcher:qa:with-security:integTestRunner' --tests \"org.elasticsearch.smoketest.SmokeTestWatcherWithSecurityClientYamlTestSuiteIT.test {yaml=watcher/usage/10_basic/Test watcher usage stats output}\" \\\r\n  -Dtests.seed=21A43F67890E43A9 \\\r\n  -Dtests.security.manager=true \\\r\n  -Dtests.locale=sl \\\r\n  -Dtests.timezone=Asia/Srednekolymsk \\\r\n  -Dcompiler.java=13\r\n\r\nLog: https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+7.x+multijob+fast+part2/4330/console\r\nBuild Scans: https://gradle-enterprise.elastic.co/s/dhqipxj2iuyfc\r\n\r\nStack trace:\r\njava.lang.AssertionError: Failure at [watcher/usage/10_basic:48]: field [watcher.count.active] is not greater than [$watch_count_active]\r\nExpected: a value greater than <1>\r\n     but: <1> was equal to <1>\r\n\tat __randomizedtesting.SeedInfo.seed([21A43F67890E43A9:A9F000BD27F22E51]:0)\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/626863673","html_url":"https://github.com/elastic/elasticsearch/issues/53177#issuecomment-626863673","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53177","id":626863673,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNjg2MzY3Mw==","user":{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false},"created_at":"2020-05-11T18:06:00Z","updated_at":"2020-05-11T18:06:00Z","author_association":"MEMBER","body":"@martijnvg @jakelandis new build failure: https://gradle-enterprise.elastic.co/s/y54f4tptbqszc\r\n\r\nHere are the logs.\r\nRemuting the tests\r\n[5532.tar.gz](https://github.com/elastic/elasticsearch/files/4611281/5532.tar.gz)\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/626877587","html_url":"https://github.com/elastic/elasticsearch/issues/53177#issuecomment-626877587","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53177","id":626877587,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNjg3NzU4Nw==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2020-05-11T18:31:12Z","updated_at":"2020-05-11T18:31:12Z","author_association":"CONTRIBUTOR","body":"Basde on the last failure. The logs show:\r\n```\r\norg.elasticsearch.smoketest.SmokeTestWatcherWithSecurityClientYamlTestSuiteIT > test {yaml=watcher/usage/10_basic/Test watcher usage stats output} FAILED\t\r\n    java.lang.AssertionError: Failure at [watcher/usage/10_basic:48]: field [watcher.count.active] is not greater than [$watch_count_active]\t\r\n    Expected: a value greater than <1>\t\r\n         but: <1> was equal to <1>\r\n```\r\n\r\n```\r\n  [2020-05-11T19:26:51,279][INFO ][o.e.s.SmokeTestWatcherWithSecurityClientYamlTestSuiteIT] [test] expected 0 active watches, but got [1], deleting watcher indices again\t\r\n  [2020-05-11T19:26:51,890][INFO ][o.e.s.SmokeTestWatcherWithSecurityClientYamlTestSuiteIT] [test] Stash dump on test failure [{\t\r\n    \"stash\" : {\t\r\n      \"watch_count_active\" : 1,\r\n```\r\nIt seems that on a fresh start the the watch_count is 1. So either the stat count is not getting updated fast enough (e.g. the new watch didn't seem to be counted), or the prior watch was not deleted on the first call to usage (per the view of the usage api), but was deleted (per the view of the usage api) by the time it go to the second call. I suspect the second scenerio based on the logs above.   ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/626908451","html_url":"https://github.com/elastic/elasticsearch/issues/53177#issuecomment-626908451","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53177","id":626908451,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNjkwODQ1MQ==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2020-05-11T19:26:04Z","updated_at":"2020-05-11T19:26:04Z","author_association":"CONTRIBUTOR","body":"Here is the server log with some context:\r\n```\r\n[2020-05-11T17:26:50,100][DEBUG][o.e.x.w.WatcherIndexingListener] [integTest-0] adding watch [NOixgXhHqnFMzEwLuZaY] to trigger service\r\n[2020-05-11T17:26:50,119][DEBUG][o.e.x.w.e.ExecutionService] [integTest-0] finished [NOixgXhHqnFMzEwLuZaY]/[NOixgXhHqnFMzEwLuZaY_c5458308-4b38-4839-bd92-b8290a5103ef-2020-05-11T17:26:50.075109Z]\r\n[2020-05-11T17:26:50,167][INFO ][o.e.c.m.MetadataDeleteIndexService] [integTest-0] [.watcher-history-11-2020.05.11/Q3WBHNaTT--vA6TCFZ_-2w] deleting index\r\n[2020-05-11T17:26:50,250][INFO ][o.e.c.m.MetadataDeleteIndexService] [integTest-0] [ilm-history-2-000001/wU8QANvgQeOUlaxhw7w2VA] deleting index\r\n[2020-05-11T17:26:50,251][INFO ][o.e.c.m.MetadataDeleteIndexService] [integTest-0] [index_not_allowed_to_read/CZ5c8XiPTGeadyJoO9iK5w] deleting index\r\n[2020-05-11T17:26:50,251][INFO ][o.e.c.m.MetadataDeleteIndexService] [integTest-0] [.triggered_watches/4KLBpbx_TMCP0_dbekx-NQ] deleting index\r\n[2020-05-11T17:26:50,251][INFO ][o.e.c.m.MetadataDeleteIndexService] [integTest-0] [my_test_index/_wVkq3PoSySN9Vvjm957gw] deleting index\r\n[2020-05-11T17:26:50,366][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-0] removing template [ilm-history]\r\n[2020-05-11T17:26:50,411][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-0] adding template [ilm-history] for index patterns [ilm-history-2*]\r\n[2020-05-11T17:26:51,292][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] applying create index request using v1 templates []\r\n[2020-05-11T17:26:51,302][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] [index_not_allowed_to_read] creating index, cause [auto(bulk api)], templates [], shards [1]/[1], mappings []\r\n[2020-05-11T17:26:51,441][INFO ][o.e.c.m.MetadataMappingService] [integTest-0] [index_not_allowed_to_read/lcZSU9egRQeS8OVpxpfmEQ] create_mapping\r\n[2020-05-11T17:26:51,579][DEBUG][o.e.x.w.t.s.e.TickerScheduleTriggerEngine] [integTest-0] triggered job [NOixgXhHqnFMzEwLuZaY] at [2020-05-11T17:26:51.579Z] (scheduled time was [2020-05-11T17:26:51.101Z])\r\n[2020-05-11T17:26:51,580][DEBUG][o.e.x.w.e.ExecutionService] [integTest-0] watcher execution service paused, not processing [1] events\r\n[2020-05-11T17:26:51,662][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] applying create index request using v1 templates [.watches]\r\n[2020-05-11T17:26:51,673][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] [.watches] creating index, cause [auto(bulk api)], templates [.watches], shards [1]/[0], mappings [_doc]\r\n[2020-05-11T17:26:51,791][INFO ][o.e.x.w.WatcherService   ] [integTest-0] reloading watcher, reason [new local watcher shard allocation ids], cancelled [0] queued tasks\r\n[2020-05-11T17:26:51,801][DEBUG][o.e.x.w.WatcherService   ] [integTest-0] watch service has been reloaded, reason [new local watcher shard allocation ids]\r\n[2020-05-11T17:26:51,808][DEBUG][o.e.x.w.WatcherIndexingListener] [integTest-0] adding watch [usage_stats_watch] to trigger service\r\n[2020-05-11T17:26:51,968][INFO ][o.e.x.w.WatcherService   ] [integTest-0] stopping watch service, reason [watcher manually marked to shutdown by cluster state update]\r\n[2020-05-11T17:26:51,969][INFO ][o.e.x.w.WatcherLifeCycleService] [integTest-0] watcher has stopped\r\n[2020-05-11T17:26:51,986][INFO ][o.e.c.m.MetadataDeleteIndexService] [integTest-0] [.watches/fJA7O7GEREq12I8un3F7kQ] deleting index\r\n[2020-05-11T17:26:52,084][INFO ][o.e.c.m.MetadataDeleteIndexService] [integTest-0] [index_not_allowed_to_read/lcZSU9egRQeS8OVpxpfmEQ] deleting index\r\n[2020-05-11T17:26:52,161][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-0] removing template [ilm-history]\r\n[2020-05-11T17:26:52,215][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-0] adding template [ilm-history] for index patterns [ilm-history-2*]\r\n[2020-05-11T17:26:52,437][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] applying create index request using v1 templates []\r\n[2020-05-11T17:26:52,445][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] [index_not_allowed_to_read] creating index, cause [auto(bulk api)], templates [], shards [1]/[1], mappings []\r\n[2020-05-11T17:26:52,574][INFO ][o.e.c.m.MetadataMappingService] [integTest-0] [index_not_allowed_to_read/v19BwETJQ1i0B4Pjqa94sA] create_mapping\r\n[2020-05-11T17:26:52,629][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] applying create index request using v1 templates []\r\n[2020-05-11T17:26:52,636][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] [my_test_index] creating index, cause [auto(bulk api)], templates [], shards [1]/[1], mappings []\r\n[2020-05-11T17:26:52,783][INFO ][o.e.c.m.MetadataMappingService] [integTest-0] [my_test_index/hdOuy235Qf2O-K45jhI99A] create_mapping\r\n[2020-05-11T17:26:52,925][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] applying create index request using v1 templates [.watches]\r\n[2020-05-11T17:26:52,935][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] [.watches] creating index, cause [auto(bulk api)], templates [.watches], shards [1]/[0], mappings [_doc]\r\n[2020-05-11T17:26:53,027][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] applying create index request using v1 templates [ilm-history]\r\n[2020-05-11T17:26:53,037][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] [ilm-history-2-000001] creating index, cause [api], templates [ilm-history], shards [1]/[0], mappings [_doc]\r\n[2020-05-11T17:26:53,130][INFO ][o.e.x.w.WatcherService   ] [integTest-0] reloading watcher, reason [new local watcher shard allocation ids], cancelled [0] queued tasks\r\n[2020-05-11T17:26:53,143][DEBUG][o.e.x.w.WatcherService   ] [integTest-0] watch service has been reloaded, reason [new local watcher shard allocation ids]\r\n[2020-05-11T17:26:53,151][DEBUG][o.e.x.w.WatcherIndexingListener] [integTest-0] adding watch [my_watch] to trigger service\r\n```\r\n\r\nIt looks like we still have start/stop issues specifically:\r\n```\r\n[2020-05-11T17:26:51,579][DEBUG][o.e.x.w.t.s.e.TickerScheduleTriggerEngine] [integTest-0] triggered job [NOixgXhHqnFMzEwLuZaY] at [2020-05-11T17:26:51.579Z] (scheduled time was [2020-05-11T17:26:51.101Z])\r\n[2020-05-11T17:26:51,580][DEBUG][o.e.x.w.e.ExecutionService] [integTest-0] watcher execution service paused, not processing [1] events\r\n[2020-05-11T17:26:51,662][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] applying create index request using v1 templates [.watches]\r\n[2020-05-11T17:26:51,673][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] [.watches] creating index, cause [auto(bulk api)], templates [.watches], shards [1]/[0], mappings [_doc]\r\n[2020-05-11T17:26:51,791][INFO ][o.e.x.w.WatcherService   ] [integTest-0] reloading watcher, reason [new local watcher shard allocation ids], cancelled [0] queued tasks\r\n[2020-05-11T17:26:51,801][DEBUG][o.e.x.w.WatcherService   ] [integTest-0] watch service has been reloaded, reason [new local watcher shard allocation ids]\r\n[2020-05-11T17:26:51,808][DEBUG][o.e.x.w.WatcherIndexingListener] [integTest-0] adding watch [usage_stats_watch] to trigger service\r\n[2020-05-11T17:26:51,968][INFO ][o.e.x.w.WatcherService   ] [integTest-0] stopping watch service, reason [watcher manually marked to shutdown by cluster state update]\r\n[2020-05-11T17:26:51,969][INFO ][o.e.x.w.WatcherLifeCycleService] [integTest-0] watcher has stopped\r\n```\r\nIt triggered a job, paused execution, then creates the .watches indices (maybe due to the watch itself updating the .watches index ?) which causes watcher to restart in the background ? ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/626997634","html_url":"https://github.com/elastic/elasticsearch/issues/53177#issuecomment-626997634","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53177","id":626997634,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNjk5NzYzNA==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2020-05-11T22:23:27Z","updated_at":"2020-05-11T22:23:27Z","author_association":"CONTRIBUTOR","body":"I think I see what is happening here ... When Watcher executes a Watch it will update the .watches index, on 'postIndex' to the .watches it will add that Watch to the trigger service. The trigger service does not have any notion of started/stopped state, so if we shutdown Watcher, it can be in a stopping or stopped state (which clears out the trigger service), but the trigger service is running and the update .watches added that watch back to the trigger service. So the watches can actually run via the trigger service even when the state is stopped. Subsequent watches don't actually run due the pause check (watcher execution service paused, not processing [1] events) , but adding watch back to the trigger service throws off the watch_count which is sourced from the trigger service. \r\n\r\nI am still exploring the fixes...\r\n\r\nmy notes\r\n```\r\n[2020-05-11T17:26:47,638][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] [.watches] creating index, cause [auto(bulk api)], templates [.watches], shards [1]/[0], mappings [_doc]\r\n[2020-05-11T17:26:47,761][INFO ][o.e.x.w.WatcherService   ] [integTest-0] reloading watcher, reason [new local watcher shard allocation ids], cancelled [0] queued tasks\r\n[2020-05-11T17:26:47,775][DEBUG][o.e.x.w.WatcherService   ] [integTest-0] watch service has been reloaded, reason [new local watcher shard allocation ids]\r\n[2020-05-11T17:26:47,777][DEBUG][o.e.x.w.WatcherIndexingListener] [integTest-0] adding watch [NOixgXhHqnFMzEwLuZaY] to trigger service\r\n[2020-05-11T17:26:49,069][DEBUG][o.e.x.w.t.s.e.TickerScheduleTriggerEngine] [integTest-0] triggered job [NOixgXhHqnFMzEwLuZaY] at [2020-05-11T17:26:49.069Z] (scheduled time was [2020-05-11T17:26:48.777Z])\r\n[2020-05-11T17:26:49,074][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] applying create index request using v1 templates [.triggered_watches]\r\n[2020-05-11T17:26:49,083][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] [.triggered_watches] creating index, cause [auto(bulk api)], templates [.triggered_watches], shards [1]/[1], mappings [_doc]\r\n[2020-05-11T17:26:49,085][INFO ][o.e.c.r.a.AllocationService] [integTest-0] updating number_of_replicas to [0] for indices [.triggered_watches]\r\n[2020-05-11T17:26:49,220][DEBUG][o.e.x.w.e.ExecutionService] [integTest-0] executing watch [NOixgXhHqnFMzEwLuZaY]\r\n[2020-05-11T17:26:49,225][DEBUG][o.e.x.w.i.s.ExecutableSearchInput] [integTest-0] [NOixgXhHqnFMzEwLuZaY_03681829-7911-4825-b112-247d3741e8b7-2020-05-11T17:26:49.070095Z] found [1] hits\r\n[2020-05-11T17:26:49,226][DEBUG][o.e.x.w.i.s.ExecutableSearchInput] [integTest-0] [NOixgXhHqnFMzEwLuZaY_03681829-7911-4825-b112-247d3741e8b7-2020-05-11T17:26:49.070095Z] hit [{value=15}]\r\n\r\n[2020-05-11T17:26:49,226][INFO ][o.e.x.w.a.l.ExecutableLoggingAction] [integTest-0] successfully ran NOixgXhHqnFMzEwLuZaYto test for search input <--- testSearchInputHasPermissions is running - note the typo of no space - the interval should be every 4s ... but the watch gets added again right away. \r\n\r\n[2020-05-11T17:26:49,241][DEBUG][o.e.x.w.WatcherIndexingListener] [integTest-0] adding watch [NOixgXhHqnFMzEwLuZaY] to trigger service <-- post index to updating the .watches index ?? (pretty sure yes)\r\n\r\n[2020-05-11T17:26:49,247][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] applying create index request using v1 templates [.watch-history-11]\r\n[2020-05-11T17:26:49,259][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] [.watcher-history-11-2020.05.11] creating index, cause [auto(bulk api)], templates [.watch-history-11], shards [1]/[0], mappings [_doc]\r\n[2020-05-11T17:26:49,400][INFO ][o.e.c.m.MetadataMappingService] [integTest-0] [.watcher-history-11-2020.05.11/Q3WBHNaTT--vA6TCFZ_-2w] update_mapping [_doc]\r\n[2020-05-11T17:26:49,455][DEBUG][o.e.x.w.e.ExecutionService] [integTest-0] finished [NOixgXhHqnFMzEwLuZaY]/[NOixgXhHqnFMzEwLuZaY_03681829-7911-4825-b112-247d3741e8b7-2020-05-11T17:26:49.070095Z]\r\n\r\n\r\n[2020-05-11T17:26:50,074][DEBUG][o.e.x.w.t.s.e.TickerScheduleTriggerEngine] [integTest-0] triggered job [NOixgXhHqnFMzEwLuZaY] at [2020-05-11T17:26:50.074Z] (scheduled time was [2020-05-11T17:26:49.777Z]) <-- job is triggered!\r\n[2020-05-11T17:26:50,080][INFO ][o.e.x.w.WatcherService   ] [integTest-0] stopping watch service, reason [watcher manually marked to shutdown by cluster state update]\r\n[2020-05-11T17:26:50,080][INFO ][o.e.x.w.WatcherLifeCycleService] [integTest-0] watcher has stopped  <-- we stopped watcher, the test thinks it has stopped ... but it hasn't ! ... but there is still a a rouge triggerd job!\r\n\r\n[2020-05-11T17:26:50,087][DEBUG][o.e.x.w.e.ExecutionService] [integTest-0] executing watch [NOixgXhHqnFMzEwLuZaY]\r\n[2020-05-11T17:26:50,092][DEBUG][o.e.x.w.i.s.ExecutableSearchInput] [integTest-0] [NOixgXhHqnFMzEwLuZaY_c5458308-4b38-4839-bd92-b8290a5103ef-2020-05-11T17:26:50.075109Z] found [1] hits\r\n[2020-05-11T17:26:50,092][DEBUG][o.e.x.w.i.s.ExecutableSearchInput] [integTest-0] [NOixgXhHqnFMzEwLuZaY_c5458308-4b38-4839-bd92-b8290a5103ef-2020-05-11T17:26:50.075109Z] hit [{value=15}]\r\n[2020-05-11T17:26:50,095][INFO ][o.e.c.m.MetadataDeleteIndexService] [integTest-0] [.watches/Y3jGo4ZARduQMwW0bbf7Uw] deleting index\r\n\r\n[2020-05-11T17:26:50,100][DEBUG][o.e.x.w.WatcherIndexingListener] [integTest-0] adding watch [NOixgXhHqnFMzEwLuZaY] to trigger service  <-- adding it back due to the .watches update which effectivly restart Watcher\r\n\r\n[2020-05-11T17:26:50,119][DEBUG][o.e.x.w.e.ExecutionService] [integTest-0] finished [NOixgXhHqnFMzEwLuZaY]/[NOixgXhHqnFMzEwLuZaY_c5458308-4b38-4839-bd92-b8290a5103ef-2020-05-11T17:26:50.075109Z]\r\n[2020-05-11T17:26:50,167][INFO ][o.e.c.m.MetadataDeleteIndexService] [integTest-0] [.watcher-history-11-2020.05.11/Q3WBHNaTT--vA6TCFZ_-2w] deleting index\r\n[2020-05-11T17:26:50,250][INFO ][o.e.c.m.MetadataDeleteIndexService] [integTest-0] [ilm-history-2-000001/wU8QANvgQeOUlaxhw7w2VA] deleting index\r\n[2020-05-11T17:26:50,251][INFO ][o.e.c.m.MetadataDeleteIndexService] [integTest-0] [index_not_allowed_to_read/CZ5c8XiPTGeadyJoO9iK5w] deleting index\r\n[2020-05-11T17:26:50,251][INFO ][o.e.c.m.MetadataDeleteIndexService] [integTest-0] [.triggered_watches/4KLBpbx_TMCP0_dbekx-NQ] deleting index\r\n[2020-05-11T17:26:50,251][INFO ][o.e.c.m.MetadataDeleteIndexService] [integTest-0] [my_test_index/_wVkq3PoSySN9Vvjm957gw] deleting index\r\n[2020-05-11T17:26:50,366][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-0] removing template [ilm-history]\r\n[2020-05-11T17:26:50,411][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-0] adding template [ilm-history] for index patterns [ilm-history-2*]\r\n[2020-05-11T17:26:51,292][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] applying create index request using v1 templates []\r\n[2020-05-11T17:26:51,302][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] [index_not_allowed_to_read] creating index, cause [auto(bulk api)], templates [], shards [1]/[1], mappings []\r\n[2020-05-11T17:26:51,441][INFO ][o.e.c.m.MetadataMappingService] [integTest-0] [index_not_allowed_to_read/lcZSU9egRQeS8OVpxpfmEQ] create_mapping\r\n[2020-05-11T17:26:51,579][DEBUG][o.e.x.w.t.s.e.TickerScheduleTriggerEngine] [integTest-0] triggered job [NOixgXhHqnFMzEwLuZaY] at [2020-05-11T17:26:51.579Z] (scheduled time was [2020-05-11T17:26:51.101Z])\r\n[2020-05-11T17:26:51,580][DEBUG][o.e.x.w.e.ExecutionService] [integTest-0] watcher execution service paused, not processing [1] events\r\n[2020-05-11T17:26:51,662][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] applying create index request using v1 templates [.watches]\r\n[2020-05-11T17:26:51,673][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-0] [.watches] creating index, cause [auto(bulk api)], templates [.watches], shards [1]/[0], mappings [_doc]\r\n[2020-05-11T17:26:51,791][INFO ][o.e.x.w.WatcherService   ] [integTest-0] reloading watcher, reason [new local watcher shard allocation ids], cancelled [0] queued tasks\r\n[2020-05-11T17:26:51,801][DEBUG][o.e.x.w.WatcherService   ] [integTest-0] watch service has been reloaded, reason [new local watcher shard allocation ids]\r\n[2020-05-11T17:26:51,808][DEBUG][o.e.x.w.WatcherIndexingListener] [integTest-0] adding watch [usage_stats_watch] to trigger service\r\n[2020-05-11T17:26:51,968][INFO ][o.e.x.w.WatcherService   ] [integTest-0] stopping watch service, reason [watcher manually marked to shutdown by cluster state update]\r\n[2020-05-11T17:26:51,969][INFO ][o.e.x.w.WatcherLifeCycleService] [integTest-0] watcher has stopped\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/627501533","html_url":"https://github.com/elastic/elasticsearch/issues/53177#issuecomment-627501533","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53177","id":627501533,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNzUwMTUzMw==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2020-05-12T18:01:27Z","updated_at":"2020-05-12T18:01:27Z","author_association":"CONTRIBUTOR","body":"I am hopeful that https://github.com/elastic/elasticsearch/pull/56556 stabilizes these tests. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/637755454","html_url":"https://github.com/elastic/elasticsearch/issues/53177#issuecomment-637755454","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53177","id":637755454,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNzc1NTQ1NA==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2020-06-02T19:20:57Z","updated_at":"2020-06-02T19:21:49Z","author_association":"CONTRIBUTOR","body":"No failures since is the introduction of #56556 (its hard to tell from the screenshot but that failure is on May 11 just prior to the tests getting muted)\r\n\r\nClosing this issue. \r\n \r\n<img width=\"970\" alt=\"image\" src=\"https://user-images.githubusercontent.com/976291/83559798-cac5ae00-a4da-11ea-8e9a-768277035572.png\">\r\n\r\n\r\n<img width=\"959\" alt=\"image\" src=\"https://user-images.githubusercontent.com/976291/83559965-0c565900-a4db-11ea-8a2c-e3b93a81aa15.png\">\r\n\r\n","performed_via_github_app":null}]