[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/63802108","html_url":"https://github.com/elastic/elasticsearch/issues/7332#issuecomment-63802108","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7332","id":63802108,"node_id":"MDEyOklzc3VlQ29tbWVudDYzODAyMTA4","user":{"login":"gmenegatti","id":2567095,"node_id":"MDQ6VXNlcjI1NjcwOTU=","avatar_url":"https://avatars1.githubusercontent.com/u/2567095?v=4","gravatar_id":"","url":"https://api.github.com/users/gmenegatti","html_url":"https://github.com/gmenegatti","followers_url":"https://api.github.com/users/gmenegatti/followers","following_url":"https://api.github.com/users/gmenegatti/following{/other_user}","gists_url":"https://api.github.com/users/gmenegatti/gists{/gist_id}","starred_url":"https://api.github.com/users/gmenegatti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gmenegatti/subscriptions","organizations_url":"https://api.github.com/users/gmenegatti/orgs","repos_url":"https://api.github.com/users/gmenegatti/repos","events_url":"https://api.github.com/users/gmenegatti/events{/privacy}","received_events_url":"https://api.github.com/users/gmenegatti/received_events","type":"User","site_admin":false},"created_at":"2014-11-20T12:41:37Z","updated_at":"2014-11-20T12:41:37Z","author_association":"NONE","body":"Hi guys, please, any update on that?\nThanks so much.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/64899327","html_url":"https://github.com/elastic/elasticsearch/issues/7332#issuecomment-64899327","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7332","id":64899327,"node_id":"MDEyOklzc3VlQ29tbWVudDY0ODk5MzI3","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2014-11-28T14:30:02Z","updated_at":"2014-11-28T14:30:02Z","author_association":"CONTRIBUTOR","body":"Json provides basic structures for representing data (primitives, arrays, objects) but the array elements make no indication of the how the contents are to be managed or accessed (e.g. as a map or a priority queue). \nWe don't know what type of collection an array is meant to be unless we start to include extra metadata in our mappings.\n\nIgnoring the lack of specialized collections, the cost of iterating across the elements when applying an update is likely to be lost in the costs involved in the overall update steps involved:\n1) seeking to the right place then reading and decompressing the json bytes from disk\n2) parsing the contents using a JSON parser\n3) applying an update to the relevant array element\n4) Feeding the entire updated JSON document back through the tokenization process\n5) Writing a brand new version of the whole document to disk.\n\nBy introducing specialized collections we are only talking about optimizing step 3 here but all the other steps are still directly related to the size of your documents and likely to be a concern.\n\nWhile performance may remain a concern, the complexity of update scripts could be reduced if we provide utility classes for managing common collections (e.g. PriorityQueues) which can serialize and deserialize to JSON representations. Here is a simple example Groovy function to turn what was a JSON-stored array into a map to make applying updates simpler:\n\n```\n// Convert basic array into map for ease of manipulation \nvendorMap = doc.vendorSummaries.collectEntries{[it.vendorName, it]};\n```\n\nNote that I take the \"vendorName\" of each object in the array here and turn that into the key used in the Map. We can then refer to map elements directly by name when applying updates.\n\nThe reason I think having access to collections like PriorityQueues and perhaps HyperLogLog type structures are important is that they are the means of defence from having documents that get too big in the first place - for popular bank accounts we don't have to remember every customer they have transacted with and maybe a fuzzy-counting collection is a more appropriate strategy than a JSON doc that expands into gigabytes of content (this scenario happened to one of our users!).\n\nIf we start to have some of these smarter collections we move to a situation where the JSON we persist perhaps contains a mix of both public and private elements - public content that is meaningful/searchable and displayable to end users and \"private\" variables that are internals essential to the deserialization of specialized collections e.g. the \"countOfCustomers\" field a bank account maintains may be a public integer but privately holds a serialized HyperLogLog structure required to compute and maintain this count-distinct value.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/64903752","html_url":"https://github.com/elastic/elasticsearch/issues/7332#issuecomment-64903752","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7332","id":64903752,"node_id":"MDEyOklzc3VlQ29tbWVudDY0OTAzNzUy","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-11-28T15:17:08Z","updated_at":"2014-11-28T15:17:08Z","author_association":"CONTRIBUTOR","body":"I compared two update scripts, one using a list with `.contains()` and one using a set of unique values.  I ran 1,000 updates with each script, adding 2, 20, 50, and 100 random numbers between 1..100,000 each time.\n\n```\n        List    Set     Unique vals\n2       3.7s    3.4s    ~2k\n20      21s     21s     ~18k\n50      52s     50s     ~39k\n100    108s    101s     ~63k\n```\n\nIn other words, Set is slightly faster than List, but you have to have a lot of values in the array before it makes a big difference.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/158662805","html_url":"https://github.com/elastic/elasticsearch/issues/7332#issuecomment-158662805","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7332","id":158662805,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODY2MjgwNQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-11-21T17:13:32Z","updated_at":"2015-11-21T17:13:32Z","author_association":"CONTRIBUTOR","body":"Closing as won't fix\n","performed_via_github_app":null}]