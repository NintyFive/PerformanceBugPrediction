[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/104581864","html_url":"https://github.com/elastic/elasticsearch/issues/10952#issuecomment-104581864","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10952","id":104581864,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNDU4MTg2NA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2015-05-22T09:01:47Z","updated_at":"2015-05-22T09:01:47Z","author_association":"CONTRIBUTOR","body":"I think this would be awesome to have. We already have most of the infrastructure to get this information. We can also make it relatively fast with our new async shard fetching classes `org.elasticsearch.gateway.AsyncShardFetch` together with `TransportNodesListGatewayStartedShards`  We might need to enhance the response information a bit here but it can give use all it was asked for here in a fast way. We don't need to read store file metadata at all. @areek do you want to give this a try, we spoke about getting more into the core of the system and this seems like a rather easy start?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/106534078","html_url":"https://github.com/elastic/elasticsearch/issues/10952#issuecomment-106534078","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10952","id":106534078,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNjUzNDA3OA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-05-28T18:01:08Z","updated_at":"2015-05-28T18:01:08Z","author_association":"CONTRIBUTOR","body":"@areek what information are you able to expose?  I'm thinking that maybe we should add a new API like:\n\n```\nGET /{indices}/_shard_copies\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/110164605","html_url":"https://github.com/elastic/elasticsearch/issues/10952#issuecomment-110164605","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10952","id":110164605,"node_id":"MDEyOklzc3VlQ29tbWVudDExMDE2NDYwNQ==","user":{"login":"areek","id":753679,"node_id":"MDQ6VXNlcjc1MzY3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/753679?v=4","gravatar_id":"","url":"https://api.github.com/users/areek","html_url":"https://github.com/areek","followers_url":"https://api.github.com/users/areek/followers","following_url":"https://api.github.com/users/areek/following{/other_user}","gists_url":"https://api.github.com/users/areek/gists{/gist_id}","starred_url":"https://api.github.com/users/areek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areek/subscriptions","organizations_url":"https://api.github.com/users/areek/orgs","repos_url":"https://api.github.com/users/areek/repos","events_url":"https://api.github.com/users/areek/events{/privacy}","received_events_url":"https://api.github.com/users/areek/received_events","type":"User","site_admin":false},"created_at":"2015-06-08T22:42:39Z","updated_at":"2015-06-10T03:04:25Z","author_association":"CONTRIBUTOR","body":"Hey @clintongormley,\n\nThe API:\n\n```\nGET /{indices}/_unassigned_shards\n\nGET /_unassigned_shards\n```\n\n(action name is up for debate)\n\nThe response will report the following on all copies of unassigned shards for specified indices:\n- node id of the host node\n- shard version of the copy\n- exception (if any) that has been encountered when trying to open the shard index. (will catch if the shard index has been corrupted, etc.)\n\n``` json\n{\n  \"indices\": {\n    \"<index>\": {\n      \"shards\": {\n        \"<shard_id>\": [\n          {\n            \"node\": \"UcZRcveHSjyfiN0rHalDsQ\",\n            \"version\": 6,\n            \"exception\": {..}\n          },\n          {\n            ....\n          }\n        ],\n        \"<shard_id>\": [\n          ....\n        ]\n      }\n    }\n  }\n}\n```\n\nThoughts? \nPR: #11545\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/110475480","html_url":"https://github.com/elastic/elasticsearch/issues/10952#issuecomment-110475480","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10952","id":110475480,"node_id":"MDEyOklzc3VlQ29tbWVudDExMDQ3NTQ4MA==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2015-06-09T19:27:11Z","updated_at":"2015-06-09T19:27:11Z","author_association":"MEMBER","body":"nice. I would call this \"_list_stores\" or something similar (the unassigned name means shards for which we have no store available or are throttled for being assigned). Question-- what is the exception? I presume it's a corruption marker? If so call it corruption? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/110477506","html_url":"https://github.com/elastic/elasticsearch/issues/10952#issuecomment-110477506","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10952","id":110477506,"node_id":"MDEyOklzc3VlQ29tbWVudDExMDQ3NzUwNg==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2015-06-09T19:30:59Z","updated_at":"2015-06-09T19:30:59Z","author_association":"CONTRIBUTOR","body":"@bleskes there is a PR linked #11545\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/110576558","html_url":"https://github.com/elastic/elasticsearch/issues/10952#issuecomment-110576558","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10952","id":110576558,"node_id":"MDEyOklzc3VlQ29tbWVudDExMDU3NjU1OA==","user":{"login":"areek","id":753679,"node_id":"MDQ6VXNlcjc1MzY3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/753679?v=4","gravatar_id":"","url":"https://api.github.com/users/areek","html_url":"https://github.com/areek","followers_url":"https://api.github.com/users/areek/followers","following_url":"https://api.github.com/users/areek/following{/other_user}","gists_url":"https://api.github.com/users/areek/gists{/gist_id}","starred_url":"https://api.github.com/users/areek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areek/subscriptions","organizations_url":"https://api.github.com/users/areek/orgs","repos_url":"https://api.github.com/users/areek/repos","events_url":"https://api.github.com/users/areek/events{/privacy}","received_events_url":"https://api.github.com/users/areek/received_events","type":"User","site_admin":false},"created_at":"2015-06-10T03:42:59Z","updated_at":"2015-06-10T03:42:59Z","author_association":"CONTRIBUTOR","body":"@bleskes thanks for the suggestion. \"_list_stores\" seem to imply that the API will list all the shard stores for the indices rather than only list stores of the copies of the currently unassigned shards? But I can not think of a better name though :). The exception is thrown when trying to open the shard index, can be caused by corruption marker or if the segment infos file can not be read. Maybe it still makes sense to call it corruption?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/110639465","html_url":"https://github.com/elastic/elasticsearch/issues/10952#issuecomment-110639465","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10952","id":110639465,"node_id":"MDEyOklzc3VlQ29tbWVudDExMDYzOTQ2NQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2015-06-10T07:45:36Z","updated_at":"2015-06-10T07:45:36Z","author_association":"MEMBER","body":"@areek I looked at the implementation and I'm not happy with `_list_stores` either, mainly because we use the `TransportNodesListGatewayStartedShards` and not the `TransportNodesListShardStoreMetaData`  (which is good, but the naming will confusing). I wonder if we should just rename `TransportNodesListGatewayStartedShards` to `TransportNodesListShardStores`  . Will think about this some more.\n\nre: exception vs corruption - I think we should call it corruption and also make `Store#canOpenIndex` leave a corruption marker (as another change). If we can't open an index, for what ever reason, I think it is safe to mark it as such. @s1monw thoughts?\n\nIn general it fills to mee better to have API list unassigned shards by default but have a parameter to make list everything the nodes have . Should be very simple to implement and will give us an alternative to telling customers to grep their disks.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/111077250","html_url":"https://github.com/elastic/elasticsearch/issues/10952#issuecomment-111077250","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10952","id":111077250,"node_id":"MDEyOklzc3VlQ29tbWVudDExMTA3NzI1MA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2015-06-11T10:15:25Z","updated_at":"2015-06-11T10:15:25Z","author_association":"CONTRIBUTOR","body":"> re: exception vs corruption - I think we should call it corruption and also make Store#canOpenIndex leave a corruption marker (as another change). If we can't open an index, for what ever reason, I think it is safe to mark it as such. @s1monw thoughts?\n\nwell we can also have exceptions if there is no index there for instance which is not a corruption?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/111365831","html_url":"https://github.com/elastic/elasticsearch/issues/10952#issuecomment-111365831","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10952","id":111365831,"node_id":"MDEyOklzc3VlQ29tbWVudDExMTM2NTgzMQ==","user":{"login":"areek","id":753679,"node_id":"MDQ6VXNlcjc1MzY3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/753679?v=4","gravatar_id":"","url":"https://api.github.com/users/areek","html_url":"https://github.com/areek","followers_url":"https://api.github.com/users/areek/followers","following_url":"https://api.github.com/users/areek/following{/other_user}","gists_url":"https://api.github.com/users/areek/gists{/gist_id}","starred_url":"https://api.github.com/users/areek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areek/subscriptions","organizations_url":"https://api.github.com/users/areek/orgs","repos_url":"https://api.github.com/users/areek/repos","events_url":"https://api.github.com/users/areek/events{/privacy}","received_events_url":"https://api.github.com/users/areek/received_events","type":"User","site_admin":false},"created_at":"2015-06-12T05:32:17Z","updated_at":"2015-06-12T05:46:50Z","author_association":"CONTRIBUTOR","body":"We could expose this as a `_list_stores` or `_list_shard_stores` API that has a query parameter `state` to pass in the shard routing states to filter out shards. By default, it will only report for the shards that are `unassigned`.\n\n```\n# lists all shards in unassigned state\nGET /_list_stores\n\n# lists all {index} shards\nGET /{index}/_list_stores?state=_all\n```\n\nThoughts?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/111385277","html_url":"https://github.com/elastic/elasticsearch/issues/10952#issuecomment-111385277","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10952","id":111385277,"node_id":"MDEyOklzc3VlQ29tbWVudDExMTM4NTI3Nw==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2015-06-12T06:59:43Z","updated_at":"2015-06-12T06:59:43Z","author_association":"MEMBER","body":"> well we can also have exceptions if there is no index there for instance which is not a corruption?\n\nI hear you see and see the distinction but I think it's OK to call this corruption (index is gone, is it distinguishable from a missing segment_n file?). All I was going at is that we need another name then a generic exception because currrently it's confusing - it's hard to telll if the operation has failed (ES/API exception) or the shard is bad (and I know we are adding a `failures` section, I think that's still confusing). \n\n> ```\n> GET /{index}/_list_stores?state=_all\n> ```\n\n`_list_shard_stores` is maybe even better. I would suggest `shards=_all`  and the default would be `shards=_unassigned` . @clintongormley how do you feel about these namings?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/111535711","html_url":"https://github.com/elastic/elasticsearch/issues/10952#issuecomment-111535711","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10952","id":111535711,"node_id":"MDEyOklzc3VlQ29tbWVudDExMTUzNTcxMQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-06-12T16:01:06Z","updated_at":"2015-06-12T16:01:06Z","author_association":"CONTRIBUTOR","body":"I don't like including `_list` because that's implied with the GET. We have a `_search_shards` end point.  I'm wondering if this should just be:\n\n```\nGET {index}/_shards\n```\n\nThe `state` filter should use `unassigned`, `relocating`, `started` etc, rather than `_unassigned`, and it should accept a comma-separated list.\n\nI think the default should actually be `all`, instead of `unassigned`. Of course the response should include the shard state.\n\nDo we need to filter by node?  I was considering whether this should be a `_node` API, but leaning towards no.  We could add a `nodes` param to allow filtering on a node spec, perhaps?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/111567412","html_url":"https://github.com/elastic/elasticsearch/issues/10952#issuecomment-111567412","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10952","id":111567412,"node_id":"MDEyOklzc3VlQ29tbWVudDExMTU2NzQxMg==","user":{"login":"areek","id":753679,"node_id":"MDQ6VXNlcjc1MzY3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/753679?v=4","gravatar_id":"","url":"https://api.github.com/users/areek","html_url":"https://github.com/areek","followers_url":"https://api.github.com/users/areek/followers","following_url":"https://api.github.com/users/areek/following{/other_user}","gists_url":"https://api.github.com/users/areek/gists{/gist_id}","starred_url":"https://api.github.com/users/areek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areek/subscriptions","organizations_url":"https://api.github.com/users/areek/orgs","repos_url":"https://api.github.com/users/areek/repos","events_url":"https://api.github.com/users/areek/events{/privacy}","received_events_url":"https://api.github.com/users/areek/received_events","type":"User","site_admin":false},"created_at":"2015-06-12T17:29:32Z","updated_at":"2015-06-12T17:29:32Z","author_association":"CONTRIBUTOR","body":"> I'm wondering if this should just be:\n> \n> ```\n> GET {index}/_shards\n> ```\n> \n> The state filter should use unassigned, relocating, started etc, rather than _unassigned, and it should accept a comma-separated list.\n> I think the default should actually be all, instead of unassigned. Of course the response should include the shard state.\n\nIMO it makes the purpose of the API clear. Locate all shards and their state meta-data for some index/indices.\nThe response format can be:\n\n``` json\n{\n  \"indices\": {\n    \"<index>\": {\n      \"shards\": {\n        \"<shard_id>\": [\n          {\n            \"node\": \"UcZRcveHSjyfiN0rHalDsQ\",\n            \"version\": 6,\n            \"state\": UNASSIGNED | STARTED | INITIALIZING | RELOCATING\n            \"exception\": {..}\n          },\n          {\n            ....\n          }\n        ],\n        \"<shard_id>\": [\n          ....\n        ]\n      }\n    }\n  }\n}\n```\n\nThoughts?\n\n> Do we need to filter by node? I was considering whether this should be a _node API, but leaning towards no. We could add a nodes param to allow filtering on a node spec, perhaps?\n\nWe currently filter by `indices` not `nodes`. Though possible, I think adding a `nodes` param would be confusing. The API should filter on either `indices` or `nodes` but not both.\n\n> well we can also have exceptions if there is no index there for instance which is not a corruption?\n\n@s1monw currently this is indicated by version being `-1` for the shard in the response, should it be reported under exception instead? I can't think of a way to distinguish between shards that have failed in a node (no ShardStateMetaData) and shards that never existed. Thoughts?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/111576028","html_url":"https://github.com/elastic/elasticsearch/issues/10952#issuecomment-111576028","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10952","id":111576028,"node_id":"MDEyOklzc3VlQ29tbWVudDExMTU3NjAyOA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-06-12T18:01:23Z","updated_at":"2015-06-12T18:01:23Z","author_association":"CONTRIBUTOR","body":"> ```\n> \"state\": UNASSIGNED | STARTED | INITIALIZING | RELOCATING\n> ```\n\nlgtm\n\n> We currently filter by indices not nodes. Though possible, I think adding a nodes param would be confusing. The API should filter on either indices or nodes but not both.\n\nNodes and indices are two ways of looking at the same data.  eg we have indices stats, and we have nodes-indices stats (which show index stats per node).  But agreed that it is a nice to have, most of the time we're interested in viewing this data by index.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/112111491","html_url":"https://github.com/elastic/elasticsearch/issues/10952#issuecomment-112111491","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10952","id":112111491,"node_id":"MDEyOklzc3VlQ29tbWVudDExMjExMTQ5MQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2015-06-15T15:34:20Z","updated_at":"2015-06-15T15:34:20Z","author_association":"MEMBER","body":"> GET {index}/_shards\n\nMy concern with just shards is that it's not clear we're going to disk and reporting what we found. It has nothing to do with the current state of shards as far as the cluster is concerned (at list as implemented now) - we don't care if shards are relocating, available for search etc. We need a name the reflect this (or change the API to do more in the future). Maybe something like\n\n```\nGET {indices}/_shards\n\nreturns:\n\n{\n   \"index\": {\n       \"1\": {\n              \"routing\": [{ ... extracted from the cluster state ... }]\n              \"stores\": [{ ... this is where we put the current output ... }]\n        }\n  }\n```\n\nThat said, something simple like `{indices}/_stores` (or something else that gives you what we return now) has my preference, assuming we can find a good name.\n\n> We currently filter by indices not nodes. Though possible, I think adding a nodes param would be confusing. The API should filter on either indices or nodes but not both.\n\n+1  . If we need a node oriented API, we can add that as well later on.\n\n> `\"node\": \"UcZRcveHSjyfiN0rHalDsQ\",`\n\nCan we use a DiscoveryNode instead of just an id? id's are hard to resolve and don't mean much on their own (they are random).\n\n> `\"state\": UNASSIGNED | STARTED | INITIALIZING | RELOCATING`\n\nThese are shard routings values. Things like initializing and relocating are a bit confusing imho. I think a simpler message is whether the store is \"used\" or not. I would use `\"state\": \"unassigned|assigned\"` .\n\n> I can't think of a way to distinguish between shards that have failed in a node (no ShardStateMetaData) and shards that never existed\n\nI confused here - shard that never existed will not have an entry right? shards where the ShardStateMetaData is corrupted will only have an exception (or corruption ) and shard where ShardStateMetaData is OK but the lucene index is bad will have both. I feel like I miss something...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/112943516","html_url":"https://github.com/elastic/elasticsearch/issues/10952#issuecomment-112943516","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10952","id":112943516,"node_id":"MDEyOklzc3VlQ29tbWVudDExMjk0MzUxNg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-06-17T20:40:55Z","updated_at":"2015-06-17T20:40:55Z","author_association":"CONTRIBUTOR","body":"Rethinking this API a bit.  When would you need it?  The typical use case is: I have unassigned primary shards and I want to know if copies of the shard exist somewhere in my cluster and whether they can recover or not. Replicas don't matter because they can recover from the primary.\n\nSo what I want to see are a list or shards which could become the primary, where they are, and if there has been a problem trying to open the shard already.  So perhaps we can drop the assigned shards completely and make this an API for unassigned primaries only.\n\nWhat about:\n\n```\nGET {index}/_primary_candidates\n```\n\nAnd we can drop the `state` key as well.\n","performed_via_github_app":null}]