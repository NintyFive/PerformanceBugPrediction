{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/5122","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5122/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5122/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5122/events","html_url":"https://github.com/elastic/elasticsearch/issues/5122","id":27596316,"node_id":"MDU6SXNzdWUyNzU5NjMxNg==","number":5122,"title":"Allow for executing search requests based on pre-defined templates","user":{"login":"MaineC","id":70953,"node_id":"MDQ6VXNlcjcwOTUz","avatar_url":"https://avatars3.githubusercontent.com/u/70953?v=4","gravatar_id":"","url":"https://api.github.com/users/MaineC","html_url":"https://github.com/MaineC","followers_url":"https://api.github.com/users/MaineC/followers","following_url":"https://api.github.com/users/MaineC/following{/other_user}","gists_url":"https://api.github.com/users/MaineC/gists{/gist_id}","starred_url":"https://api.github.com/users/MaineC/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MaineC/subscriptions","organizations_url":"https://api.github.com/users/MaineC/orgs","repos_url":"https://api.github.com/users/MaineC/repos","events_url":"https://api.github.com/users/MaineC/events{/privacy}","received_events_url":"https://api.github.com/users/MaineC/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-02-14T13:50:41Z","updated_at":"2014-04-01T08:51:36Z","closed_at":"2014-04-01T08:34:12Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Pretty much related to #4879 - the goal is to allow for templates to be used not only for individual queries but on the search request level.\n\nFor development templates submitted with the search request would look like the following:\n\n``` json\nGET _search\n{\n    \"template\" : {\n        \"content\" : {\n            \"query\": {\n                \"match_{{te_1}}\": {}\n            },\n            \"fac{{te_2}}\": {\n            \"list-id\": {\n                \"terms\": {\n                    \"field\": \"list-{{te_3}}\",\n                    \"size\": 10\n                }\n            }\n            }, \n            \"fields\": [\"subject\", \"from\"]\n        },\n        \"params\" : {\n            \"te_1\" : \"all\",\n            \"te_2\" : \"ets\",\n            \"te_3\" : \"id\"\n        }\n    }\n}\n```\n\n... (exact name of the template parameters (here \"content\" and \"params\") open for debate) resulting in a query that looks like this:\n\n``` json\nGET _search\n{\n    \"query\": {\n        \"match_all\": {}\n    },\n    \"facets\": {\n        \"list-id\": {\n            \"terms\": {\n                \"field\": \"list-id\",\n                \"size\": 10\n            }\n        }\n    }, \n    \"fields\": [\"subject\", \"from\"]\n}\n```\n\nUltimately it should be possible to permanently register (or load from configuration) these templates. The goal would be able to only reference the template and parameters in the GET URL parameters only.\n","closed_by":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"performed_via_github_app":null}