[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/467925328","html_url":"https://github.com/elastic/elasticsearch/issues/39467#issuecomment-467925328","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39467","id":467925328,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NzkyNTMyOA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-02-27T16:14:04Z","updated_at":"2019-02-27T16:14:04Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/467925368","html_url":"https://github.com/elastic/elasticsearch/issues/39467#issuecomment-467925368","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39467","id":467925368,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NzkyNTM2OA==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2019-02-27T16:14:10Z","updated_at":"2019-02-27T16:14:10Z","author_association":"MEMBER","body":"cc @dnhatn ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/467974292","html_url":"https://github.com/elastic/elasticsearch/issues/39467#issuecomment-467974292","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39467","id":467974292,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Nzk3NDI5Mg==","user":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"created_at":"2019-02-27T18:23:24Z","updated_at":"2019-02-27T18:23:24Z","author_association":"MEMBER","body":"Thanks @tlrx. I am on it today.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/468084755","html_url":"https://github.com/elastic/elasticsearch/issues/39467#issuecomment-468084755","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39467","id":468084755,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2ODA4NDc1NQ==","user":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"created_at":"2019-02-28T00:19:55Z","updated_at":"2019-02-28T00:19:55Z","author_association":"MEMBER","body":"Finally, I have an explanation for this failure.  It happened as follows:\r\n\r\n1. We are restarting a node that has the following primary running.\r\n\r\n```\r\n[2019-02-27T15:18:39,567][INFO ][o.e.t.InternalTestCluster] [testFailOverOnFollower] Restarting node [followerd4] \r\n[2019-02-27T15:18:39,568][INFO ][o.e.n.Node               ] [testFailOverOnFollower] stopping ...\r\n```\r\n2. The following primary  just completes a bulk request containing seq#133, seq#134, and seq#135,  but it can not send that bulk request to the following replica.\r\n\r\n```\r\n[2019-02-27T15:18:39,596][TRACE][o.e.x.c.a.b.TransportBulkShardOperationsAction] [followerd4] [[follower_test_failover][0]] op [indices:data/write/bulk_shard_operations[s]] completed on primary for request [BulkShardOperationsRequest{historyUUID=LAJy3qUiSLi5WipZHEQmsw, operations=3, maxSeqNoUpdates=99, shardId=[follower_test_failover][0], timeout=1m, index='follower_test_failover', waitForActiveShards=1}]\r\n[2019-02-27T15:18:39,610][TRACE][o.e.x.c.a.b.TransportBulkShardOperationsAction] [followerd4] [[follower_test_failover][0]] failure while performing [indices:data/write/bulk_shard_operations[s]] on replica [follower_test_failover][0], node[F0IIukrhRKy9xJP_ZO6YiA], [R], s[STARTED], a[id=tnsEYc72RWKeUe8141Q7EQ], request [BulkShardOperationsRequest{historyUUID=LAJy3qUiSLi5WipZHEQmsw, operations=10, maxSeqNoUpdates=99, shardId=[follower_test_failover][0], timeout=1m, index='follower_test_failover', waitForActiveShards=DEFAULT}]\r\norg.elasticsearch.transport.NodeDisconnectedException: [followerd1][127.0.0.1:43829][indices:data/write/bulk_shard_operations[s][r]] disconnected\r\n[2019-02-27T15:18:39,612][WARN ][o.e.t.TransportService   ] [followerd4] Transport response handler not found of id [68]\r\n[2019-02-27T15:18:39,615][WARN ][o.e.x.c.a.b.TransportBulkShardOperationsAction] [followerd4] [[follower_test_failover][0]] failed to perform indices:data/write/bulk_shard_operations[s] on replica [follower_test_failover][0], node[F0IIukrhRKy9xJP_ZO6YiA], [R], s[STARTED], a[id=tnsEYc72RWKeUe8141Q7EQ]\r\norg.elasticsearch.transport.NodeDisconnectedException: [followerd1][127.0.0.1:43829][indices:data/write/bulk_shard_operations[s][r]] disconnected\r\n```\r\n\r\n3. The following primary tries to reach to the master node to fail the following replica but is unable to send the request.\r\n\r\n```\r\n[2019-02-27T15:18:39,621][WARN ][o.e.c.a.s.ShardStateAction] [followerd4] node closed while execution action [internal:cluster/shard/failure] for shard entry [shard id [[follower_test_failover][0]], allocation id [tnsEYc72RWKeUe8141Q7EQ], primary term [1], message [failed to perform indices:data/write/bulk_shard_operations[s] on replica [follower_test_failover][0], node[F0IIukrhRKy9xJP_ZO6YiA], [R], s[STARTED], a[id=tnsEYc72RWKeUe8141Q7EQ]], failure [NodeDisconnectedException[[followerd1][127.0.0.1:43829][indices:data/write/bulk_shard_operations[s][r]] disconnected]], markAsStale [true]]\r\n```\r\n\r\n4. The following primary then is able to respond SUCCESS to the ShardFollowTask.\r\n\r\n```\r\n[2019-02-27T15:18:39,663][TRACE][o.e.x.c.a.b.TransportBulkShardOperationsAction] [followerd4] operation succeeded. action [indices:data/write/bulk_shard_operations[s]],request [BulkShardOperationsRequest{historyUUID=LAJy3qUiSLi5WipZHEQmsw, operations=3, maxSeqNoUpdates=99, shardId=[follower_test_failover][0], timeout=1m, index='follower_test_failover', waitForActiveShards=1}]\r\n```\r\n\r\n5. The following replica is promoted, but it won't have  seq#133, seq#134, and seq#135 for the ShardFollowTask won't send these operations unless the FollowTask is restarted.\r\n\r\n```\r\nThrowable #1: java.lang.AssertionError: mismatched documents [{0=[DocIdSeqNoAndTerm{id='133 seqNo=135 primaryTerm=1}, DocIdSeqNoAndTerm{id='132 seqNo=134 primaryTerm=1}, DocIdSeqNoAndTerm{id='131 seqNo=133 primaryTerm=1}]}]\r\n```\r\n\r\nI think this is a blocker for 6.7 and 7.0.\r\n\r\n/cc @bleskes @ywelsch @jasontedor @martijnvg","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/468129615","html_url":"https://github.com/elastic/elasticsearch/issues/39467#issuecomment-468129615","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39467","id":468129615,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2ODEyOTYxNQ==","user":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"created_at":"2019-02-28T04:06:58Z","updated_at":"2019-02-28T04:16:37Z","author_association":"MEMBER","body":"I see two solutions here:  one is to reset lastRequestedSeqNo to followerGlobalCheckpoint when the primary term on the follower increased. Another is to consider a bulk request with successful_shards < total_shards as a failure then retry.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/468167540","html_url":"https://github.com/elastic/elasticsearch/issues/39467#issuecomment-468167540","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39467","id":468167540,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2ODE2NzU0MA==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2019-02-28T07:29:43Z","updated_at":"2019-02-28T07:29:43Z","author_association":"MEMBER","body":"@dnhatn Thanks for the detailed explanation!\r\n\r\n> Another is to consider a bulk request with successful_shards < total_shards as a failure then retry.\r\n\r\nThe problem you described above, only happens when a replica shard is promoted to primary shard. `successful_shards < total_shards` happens when the we were unable to index into a replica shard, which I think happens more often than a primary promotion. So retrying based in that condition would result in retrying too often and most of the times it wouldn't be needed?\r\n\r\n> one is to reset lastRequestedSeqNo to followerGlobalCheckpoint when the primary term on the follower increased.\r\n\r\nI think it makes sense to reset the `followerGlobalCheckpoint` to `lastRequestedSeqNo` in case of primary promotion to avoid the scenario that you have described.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/468306895","html_url":"https://github.com/elastic/elasticsearch/issues/39467#issuecomment-468306895","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39467","id":468306895,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2ODMwNjg5NQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2019-02-28T15:06:20Z","updated_at":"2019-02-28T15:06:42Z","author_association":"MEMBER","body":"> The following primary then is able to respond SUCCESS to the ShardFollowTask.\r\n\r\n@dnhatn can you explain why a replicated write operation is finished succesfully after not being to able to fail a replica/mark it as stale?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/469105335","html_url":"https://github.com/elastic/elasticsearch/issues/39467#issuecomment-469105335","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39467","id":469105335,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTEwNTMzNQ==","user":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"created_at":"2019-03-04T03:22:36Z","updated_at":"2019-03-04T03:22:36Z","author_association":"MEMBER","body":"> @dnhatn can you explain why a replicated write operation is finished succesfully after not being to able to fail a replica/mark it as stale?\r\n\r\nDiscussed with @bleskes  on another channel. This happens because we [ignore](https://github.com/elastic/elasticsearch/blob/14eb7677ef609544b59cc353e91dbe67bdaeac3f/server/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java#L1212) NodeClosedException which is triggered when the ClusterService is being closed. I opened https://github.com/elastic/elasticsearch/pull/39584 to propose the fix.","performed_via_github_app":null}]