[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/452099188","html_url":"https://github.com/elastic/elasticsearch/issues/37197#issuecomment-452099188","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37197","id":452099188,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjA5OTE4OA==","user":{"login":"konstantin-pasko","id":30042998,"node_id":"MDQ6VXNlcjMwMDQyOTk4","avatar_url":"https://avatars3.githubusercontent.com/u/30042998?v=4","gravatar_id":"","url":"https://api.github.com/users/konstantin-pasko","html_url":"https://github.com/konstantin-pasko","followers_url":"https://api.github.com/users/konstantin-pasko/followers","following_url":"https://api.github.com/users/konstantin-pasko/following{/other_user}","gists_url":"https://api.github.com/users/konstantin-pasko/gists{/gist_id}","starred_url":"https://api.github.com/users/konstantin-pasko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/konstantin-pasko/subscriptions","organizations_url":"https://api.github.com/users/konstantin-pasko/orgs","repos_url":"https://api.github.com/users/konstantin-pasko/repos","events_url":"https://api.github.com/users/konstantin-pasko/events{/privacy}","received_events_url":"https://api.github.com/users/konstantin-pasko/received_events","type":"User","site_admin":false},"created_at":"2019-01-07T22:07:35Z","updated_at":"2019-01-07T22:18:09Z","author_association":"NONE","body":"All my IDs consist only of numbers, but in\r\nhttps://github.com/elastic/elasticsearch/blob/237650e9c054149fd08213b38a81a3666c1868e5/server/src/main/java/org/elasticsearch/cluster/routing/Murmur3HashFunction.java#L35\r\nwe convert a character into 2 bytes, in my case the second byte is always 0x0, as every single character is just a single digit.\r\nIf I do just \r\n```\r\nfinal byte[] bytesToHash = new byte[routing.length()];\r\n....\r\nbytesToHash[i] = b1;\r\n```\r\nthen the allocation is more or less even.\r\n\r\nP.S.\r\nThis video explains murmur3 hash function:\r\nhttps://www.youtube.com/watch?v=b8HzEZt0RCQ&t=\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/452101163","html_url":"https://github.com/elastic/elasticsearch/issues/37197#issuecomment-452101163","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37197","id":452101163,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjEwMTE2Mw==","user":{"login":"konstantin-pasko","id":30042998,"node_id":"MDQ6VXNlcjMwMDQyOTk4","avatar_url":"https://avatars3.githubusercontent.com/u/30042998?v=4","gravatar_id":"","url":"https://api.github.com/users/konstantin-pasko","html_url":"https://github.com/konstantin-pasko","followers_url":"https://api.github.com/users/konstantin-pasko/followers","following_url":"https://api.github.com/users/konstantin-pasko/following{/other_user}","gists_url":"https://api.github.com/users/konstantin-pasko/gists{/gist_id}","starred_url":"https://api.github.com/users/konstantin-pasko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/konstantin-pasko/subscriptions","organizations_url":"https://api.github.com/users/konstantin-pasko/orgs","repos_url":"https://api.github.com/users/konstantin-pasko/repos","events_url":"https://api.github.com/users/konstantin-pasko/events{/privacy}","received_events_url":"https://api.github.com/users/konstantin-pasko/received_events","type":"User","site_admin":false},"created_at":"2019-01-07T22:15:12Z","updated_at":"2019-01-07T22:15:12Z","author_association":"NONE","body":"Also setting `seed` to some random numbers seems to make allocation somewhat even.\r\nhttps://github.com/elastic/elasticsearch/blob/237650e9c054149fd08213b38a81a3666c1868e5/server/src/main/java/org/elasticsearch/cluster/routing/Murmur3HashFunction.java#L46","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/452233738","html_url":"https://github.com/elastic/elasticsearch/issues/37197#issuecomment-452233738","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37197","id":452233738,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjIzMzczOA==","user":{"login":"konstantin-pasko","id":30042998,"node_id":"MDQ6VXNlcjMwMDQyOTk4","avatar_url":"https://avatars3.githubusercontent.com/u/30042998?v=4","gravatar_id":"","url":"https://api.github.com/users/konstantin-pasko","html_url":"https://github.com/konstantin-pasko","followers_url":"https://api.github.com/users/konstantin-pasko/followers","following_url":"https://api.github.com/users/konstantin-pasko/following{/other_user}","gists_url":"https://api.github.com/users/konstantin-pasko/gists{/gist_id}","starred_url":"https://api.github.com/users/konstantin-pasko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/konstantin-pasko/subscriptions","organizations_url":"https://api.github.com/users/konstantin-pasko/orgs","repos_url":"https://api.github.com/users/konstantin-pasko/repos","events_url":"https://api.github.com/users/konstantin-pasko/events{/privacy}","received_events_url":"https://api.github.com/users/konstantin-pasko/received_events","type":"User","site_admin":false},"created_at":"2019-01-08T09:36:31Z","updated_at":"2019-01-08T09:36:31Z","author_association":"NONE","body":"Also md5 and couple of other hashing algorithms produce proper distribution with `seed = 0` and the given dataset. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/452243944","html_url":"https://github.com/elastic/elasticsearch/issues/37197#issuecomment-452243944","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37197","id":452243944,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjI0Mzk0NA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-01-08T10:09:27Z","updated_at":"2019-01-08T10:09:27Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/452252822","html_url":"https://github.com/elastic/elasticsearch/issues/37197#issuecomment-452252822","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37197","id":452252822,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjI1MjgyMg==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2019-01-08T10:38:25Z","updated_at":"2019-01-08T10:38:25Z","author_association":"CONTRIBUTOR","body":"The given dataset looks to have been picked such that all of the document IDs hash to a number that's a multiple of 9. Of course this will exhibit bad behaviour if your number of shards is also a multiple of 9, but it's quite easy to construct such a dataset for any hashing algorithm and for any seed.\r\n\r\nI also don't think this is to do with your document IDs being numeric, or having one byte of each character be `0x00`, because that's quite normal for document IDs.\r\n\r\nWas this index created as a new empty index or did it perhaps come from a shrink or split? Can you share the output of `GET indexName/_settings`? It contains around 3,000,000 documents - can you share a list of all of the IDs?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/452261387","html_url":"https://github.com/elastic/elasticsearch/issues/37197#issuecomment-452261387","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37197","id":452261387,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjI2MTM4Nw==","user":{"login":"konstantin-pasko","id":30042998,"node_id":"MDQ6VXNlcjMwMDQyOTk4","avatar_url":"https://avatars3.githubusercontent.com/u/30042998?v=4","gravatar_id":"","url":"https://api.github.com/users/konstantin-pasko","html_url":"https://github.com/konstantin-pasko","followers_url":"https://api.github.com/users/konstantin-pasko/followers","following_url":"https://api.github.com/users/konstantin-pasko/following{/other_user}","gists_url":"https://api.github.com/users/konstantin-pasko/gists{/gist_id}","starred_url":"https://api.github.com/users/konstantin-pasko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/konstantin-pasko/subscriptions","organizations_url":"https://api.github.com/users/konstantin-pasko/orgs","repos_url":"https://api.github.com/users/konstantin-pasko/repos","events_url":"https://api.github.com/users/konstantin-pasko/events{/privacy}","received_events_url":"https://api.github.com/users/konstantin-pasko/received_events","type":"User","site_admin":false},"created_at":"2019-01-08T11:09:19Z","updated_at":"2019-01-08T11:10:24Z","author_association":"NONE","body":"Hi Dave!\r\n\r\n1. Yes, I also see the pattern of x mod 3 = 0.\r\nAbout constructing a dataset, yes, it's possible to do it on purpose, but in our case it just has happened. The dataset from my example contains just the very first 2000 ids from 3kk IDs from prod.\r\n\r\n2. Settings (we have never used shrink or split features yet, all we do is just add 1 new shard with the grow of the load and reindex):\r\n```\r\n \"settings\": {\r\n      \"index\": {\r\n        \"routing\": {\r\n          \"allocation\": {\r\n            \"include\": {\r\n              \"rack\": \"\"\r\n            },\r\n            \"exclude\": {\r\n              \"rack\": \"data\"\r\n            }\r\n          }\r\n        },\r\n        \"mapping\": {\r\n          \"total_fields\": {\r\n            \"limit\": \"5000\"\r\n          },\r\n          \"ignore_malformed\": \"true\"\r\n        },\r\n        \"refresh_interval\": \"2s\",\r\n        \"number_of_shards\": \"9\",\r\n        \"provided_name\": \"***************\",\r\n        \"creation_date\": \"1539243021558\",\r\n        \"analysis\": {\r\n          \"analyzer\": {\r\n            \"payload_analyzer\": {\r\n              \"filter\": \"delimited_payload_filter\",\r\n              \"type\": \"custom\",\r\n              \"tokenizer\": \"whitespace\"\r\n            }\r\n          }\r\n        },\r\n        \"number_of_replicas\": \"1\",\r\n        \"uuid\": \"XKfCn5TVSf2975OOpWu7eA\",\r\n        \"version\": {\r\n          \"created\": \"5061199\"\r\n        }\r\n      }\r\n    }\r\n```\r\n\r\n3. With the full dataset the distribution looks like that\r\n```\r\n1:[3040442]\r\n2:[1554575, 1485867]\r\n3:[1061854, 1009751, 968837]\r\n4:[777360, 743868, 777215, 741999]\r\n5:[667563, 628961, 599992, 580224, 563702]\r\n6:[542816, 494268, 496276, 519038, 515483, 472561]\r\n7:[434593, 434288, 434164, 435265, 433539, 434304, 434289]\r\n8:[388224, 372330, 388908, 370796, 389136, 371538, 388307, 371203]\r\n9:[414182, 388317, 362089, 342782, 324263, 318252, 304890, 297171, 288496]\r\n10:[381835, 347411, 323098, 306142, 294010, 285728, 281550, 276894, 274082, 269692]\r\n11:[276748, 275836, 277530, 276207, 276074, 277126, 276512, 276065, 276532, 275513, 276299]\r\n12:[271547, 247662, 248086, 259026, 257623, 236194, 271269, 246606, 248190, 260012, 257860, 236367]\r\n13:[234191, 233436, 232710, 234529, 234188, 234528, 234091, 233752, 233603, 233030, 233598, 234498, 234288]\r\n14:[222094, 212143, 222276, 212926, 221474, 212219, 222162, 212499, 222145, 211888, 222339, 212065, 222085, 212127]\r\n15:[232570, 208794, 191220, 202853, 187054, 212886, 219182, 199494, 185069, 197971, 222107, 200985, 209278, 192302, 178677]\r\n16:[194201, 186306, 195068, 185566, 195065, 185706, 194424, 185629, 194023, 186024, 193840, 185230, 194071, 185832, 193883, 185574]\r\n17:[178924, 178776, 179050, 178411, 178687, 178859, 178568, 178756, 178802, 178345, 178825, 178876, 179205, 179147, 179166, 179440, 178605]\r\n18:[211239, 190839, 185020, 167526, 165739, 155232, 156321, 144905, 148236, 202943, 197478, 177069, 175256, 158524, 163020, 148569, 152266, 140260]\r\n19:[160077, 159952, 160179, 159683, 160399, 160347, 159609, 160470, 159874, 159440, 159587, 160394, 160128, 159406, 159559, 160116, 159907, 160713, 160602]\r\n20:[190727, 173952, 161621, 152686, 146745, 142756, 140431, 138106, 137292, 134916, 191108, 173459, 161477, 153456, 147265, 142972, 141119, 138788, 136790, 134776]\r\n21:[151694, 143895, 138467, 151736, 143553, 138133, 151626, 144100, 138316, 151262, 144704, 138015, 151488, 144381, 138799, 152077, 144435, 138825, 151971, 144683, 138282]\r\n22:[141520, 134845, 142152, 134710, 141459, 135465, 141078, 135171, 141495, 134794, 141109, 135228, 140991, 135378, 141497, 134615, 141661, 135434, 140894, 135037, 140719, 135190]\r\n23:[131768, 131483, 132819, 132456, 132521, 131827, 132035, 132561, 132218, 132636, 132563, 131798, 131949, 132394, 131854, 131734, 132222, 132133, 132337, 132196, 132649, 132145, 132144]\r\n24:[135255, 124046, 124212, 129176, 128809, 118107, 135734, 123358, 124155, 130197, 129161, 118372, 136292, 123616, 123874, 129850, 128814, 118087, 135535, 123248, 124035, 129815, 128699, 117995]\r\n25:[133813, 126107, 120462, 116082, 112092, 134004, 125497, 119954, 116243, 112717, 133290, 125884, 120156, 116075, 113462, 133062, 125901, 119750, 115841, 112599, 133394, 125572, 119670, 115983, 112832]\r\n26:[120016, 113994, 119616, 114497, 119591, 114695, 119535, 114347, 119515, 113677, 118768, 114822, 119793, 114175, 119442, 113094, 120032, 114597, 119833, 114556, 119405, 114088, 119353, 114830, 119676, 114495]\r\n27:[138328, 129385, 121294, 114451, 108131, 106304, 101620, 99368, 96403, 137949, 129695, 120493, 114063, 108060, 105802, 101564, 98650, 96282, 137905, 129237, 120302, 114268, 108072, 106146, 101706, 99153, 95811]\r\n28:[111085, 106276, 111198, 106125, 110274, 106118, 111130, 106263, 111404, 106142, 111077, 106112, 111225, 106342, 111009, 105867, 111078, 106801, 111200, 106101, 111032, 106236, 110741, 105746, 111262, 105953, 110860, 105785]\r\n29:[104913, 105513, 104783, 105140, 104818, 104783, 104848, 104295, 104918, 105629, 104716, 104298, 105356, 104523, 104833, 104648, 105296, 105121, 105082, 104949, 104451, 104664, 104722, 104182, 105064, 105151, 104570, 104676, 104500]\r\n```\r\n\r\nAs you can see, the number of shards 9 and 10 yield unbalanced distribution.\r\n\r\nI'd love to share the whole dataset, but don't feel comfortable posting it to the whore internet. Is there any way to send a link to google drive to people from elasticsearch that are interested in it?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/452270552","html_url":"https://github.com/elastic/elasticsearch/issues/37197#issuecomment-452270552","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37197","id":452270552,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjI3MDU1Mg==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2019-01-08T11:45:27Z","updated_at":"2019-01-08T11:45:27Z","author_association":"CONTRIBUTOR","body":"> The dataset from my example contains just the very first 2000 ids from 3kk IDs from prod.\r\n\r\nI'm guessing that all of them came from the first of the 9 shards, so the pattern you saw was an artefact of how those IDs were selected.\r\n\r\n> I'd love to share the whole dataset, but don't feel comfortable posting it to the whore internet. Is there any way to send a link to google drive to people from elasticsearch that are interested in it?\r\n\r\nYes, you can email me at david.turner@elastic.co and/or share a Google Drive folder with me there.\r\n\r\nCould you also share the output of `GET /thisindex/_stats?level=shards`, replacing `thisindex` with the name of the index in question?\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/452295955","html_url":"https://github.com/elastic/elasticsearch/issues/37197#issuecomment-452295955","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37197","id":452295955,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjI5NTk1NQ==","user":{"login":"konstantin-pasko","id":30042998,"node_id":"MDQ6VXNlcjMwMDQyOTk4","avatar_url":"https://avatars3.githubusercontent.com/u/30042998?v=4","gravatar_id":"","url":"https://api.github.com/users/konstantin-pasko","html_url":"https://github.com/konstantin-pasko","followers_url":"https://api.github.com/users/konstantin-pasko/followers","following_url":"https://api.github.com/users/konstantin-pasko/following{/other_user}","gists_url":"https://api.github.com/users/konstantin-pasko/gists{/gist_id}","starred_url":"https://api.github.com/users/konstantin-pasko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/konstantin-pasko/subscriptions","organizations_url":"https://api.github.com/users/konstantin-pasko/orgs","repos_url":"https://api.github.com/users/konstantin-pasko/repos","events_url":"https://api.github.com/users/konstantin-pasko/events{/privacy}","received_events_url":"https://api.github.com/users/konstantin-pasko/received_events","type":"User","site_admin":false},"created_at":"2019-01-08T13:21:43Z","updated_at":"2019-01-08T13:21:43Z","author_association":"NONE","body":"Thanks for the swift response!\r\n\r\nI think you are damn right about those first 2000 IDs.\r\n\r\nOutput of stats is not very helpful, as in that index we have parent-child documents (other types), but I still uploaded it to the shared folder (`index_stats.txt`), it's coming from dev cluster, but it has recent data.\r\n\r\nI did the following to collect number of parent types per shard\r\n```\r\nGET INDEX/PARENT_TYPE/_search?preference=_shards:0|_primary\r\n{\r\n  \"size\": 0\r\n}\r\n415872\r\nGET INDEX/PARENT_TYPE/_search?preference=_shards:1|_primary\r\n{\r\n  \"size\": 0\r\n}\r\n389995\r\nGET INDEX/PARENT_TYPE/_search?preference=_shards:2|_primary\r\n{\r\n  \"size\": 0\r\n}\r\n363655\r\nGET INDEX/PARENT_TYPE/_search?preference=_shards:3|_primary\r\n{\r\n  \"size\": 0\r\n}\r\n344335\r\nGET INDEX/PARENT_TYPE/_search?preference=_shards:4|_primary\r\n{\r\n  \"size\": 0\r\n}\r\n325850\r\nGET INDEX/PARENT_TYPE/_search?preference=_shards:5|_primary\r\n{\r\n  \"size\": 0\r\n}\r\n319831\r\nGET INDEX/PARENT_TYPE/_search?preference=_shards:6|_primary\r\n{\r\n  \"size\": 0\r\n}\r\n306391\r\nGET INDEX/PARENT_TYPE/_search?preference=_shards:7|_primary\r\n{\r\n  \"size\": 0\r\n}\r\n298746\r\nGET INDEX/PARENT_TYPE/_search?preference=_shards:8|_primary\r\n{\r\n  \"size\": 0\r\n}\r\n290133\r\n```\r\nThe numbers match with the allocation results from my test program run on the full dataset (`ids.txt.zip` from the shared folder).\r\n\r\nP.S. I've just has shared `es_debug` folder with you.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/452311999","html_url":"https://github.com/elastic/elasticsearch/issues/37197#issuecomment-452311999","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37197","id":452311999,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjMxMTk5OQ==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2019-01-08T14:13:03Z","updated_at":"2019-01-08T14:16:26Z","author_association":"CONTRIBUTOR","body":"Thanks. I see the same pattern (more docs in lower-numbered shards) for all docs as well as just the parent type.\r\n\r\nHowever I've also done some experiments with the distribution of hashes and have failed to find any evidence of this kind of bias. The only way I can think of to get a set of IDs like the one that you've shared is to involve some kind of selection process that is sensitive to the hashes of the IDs (or, equivalently, to the distribution of the documents across shards).\r\n\r\nI can think of a way to do this: if you were to scroll through all the docs in the index shard-by-shard, reindexing them into another index, whilst performing some cleanup (e.g. dropping later documents if they duplicate earlier ones) then this would bias the document distribution towards lower-numbered shards. The first few times you did this it'd appear to go away with a different shard count, but the bias will still be there in the prime factors of the hashes of the document IDs, so the next time you have a shard count with the same prime factors the bias would return.\r\n\r\nI think this explains why we see the same bias with 9 and 10 shards despite these numbers having no common factors: when reindexing out of 2 and 5 shards you created bias for remainders mod 2 and mod 5, which then reappears at 10 shards. In the numbers that you shared, you'll notice that there's some kind of pattern for many of the shard counts that are not prime, and essentially no bias at all for the prime-numbered ones.\r\n\r\nCan you explain how you do your reindexing? Is there something like a de-duplication process on the way through that favours documents in lower-numbered shards? If so, I think it'd work to sort the documents over which you are scrolling so that the order is not a function of the shard allocation.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/459672816","html_url":"https://github.com/elastic/elasticsearch/issues/37197#issuecomment-459672816","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37197","id":459672816,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1OTY3MjgxNg==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2019-02-01T10:11:57Z","updated_at":"2019-02-01T10:11:57Z","author_association":"CONTRIBUTOR","body":"We didn't receive any further information, so I'm closing this. We can reopen it if it needs further investigation at a later date.","performed_via_github_app":null}]