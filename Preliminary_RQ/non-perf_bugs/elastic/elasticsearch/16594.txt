{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/16594","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16594/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16594/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16594/events","html_url":"https://github.com/elastic/elasticsearch/issues/16594","id":132883408,"node_id":"MDU6SXNzdWUxMzI4ODM0MDg=","number":16594,"title":"Regression: cannot change default similarity for all fields","user":{"login":"gpstathis","id":365914,"node_id":"MDQ6VXNlcjM2NTkxNA==","avatar_url":"https://avatars0.githubusercontent.com/u/365914?v=4","gravatar_id":"","url":"https://api.github.com/users/gpstathis","html_url":"https://github.com/gpstathis","followers_url":"https://api.github.com/users/gpstathis/followers","following_url":"https://api.github.com/users/gpstathis/following{/other_user}","gists_url":"https://api.github.com/users/gpstathis/gists{/gist_id}","starred_url":"https://api.github.com/users/gpstathis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gpstathis/subscriptions","organizations_url":"https://api.github.com/users/gpstathis/orgs","repos_url":"https://api.github.com/users/gpstathis/repos","events_url":"https://api.github.com/users/gpstathis/events{/privacy}","received_events_url":"https://api.github.com/users/gpstathis/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":92913658,"node_id":"MDU6TGFiZWw5MjkxMzY1OA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/blocker","name":"blocker","color":"e11d21","default":false,"description":null},{"id":246685314,"node_id":"MDU6TGFiZWwyNDY2ODUzMTQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v5.0.0-alpha1","name":"v5.0.0-alpha1","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"assignees":[{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2016-02-11T04:15:13Z","updated_at":"2018-02-14T13:43:51Z","closed_at":"2016-03-08T14:30:44Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"One should be able to change the default similarity for all fields by putting the following setting into `elasticsearch.yml` (see [docs](https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules-similarity.html#default-base)):\n\n```\n// Should it be index.similarity.classic.type now?\nindex.similarity.default.type: BM25\n```\n\nWhile debugging #16550 I realized this is currently broken in `master`. See following `curl` statements for reproducing:\n\n```\necho \"Delete previous tests\"\ncurl -XDELETE 'http://localhost:9200/test/?pretty=true'\nsleep 1\n\necho \" \"\necho \"Create settings and mappings\"\ncurl -XPUT 'http://localhost:9200/test/?pretty=true' -d '{\n  \"settings\" : {\n    \"index\" : {\n      \"number_of_shards\" : 1,\n      \"number_of_replicas\" : 0,\n      \"similarity.classic.type\": \"BM25\",\n      \"similarity.custom.type\": \"classic\"\n    }\n  },\n  \"mappings\": {\n    \"type1\": {\n      \"properties\": {\n        \"field1\": { \"type\": \"string\" },\n        \"field2\": { \"type\": \"string\", \"similarity\": \"custom\" }\n      }\n    }\n  }\n}'\nsleep 1\n\necho \" \"\necho \"Add sample data\"\ncurl -XPUT 'http://localhost:9200/test/type1/1?pretty=true' -d '{\n  \"field1\": \"the quick brown fox jumped over the lazy dog\",\n  \"field2\": \"the quick brown fox jumped over the lazy dog\"\n}'\nsleep 1\n\necho \" \"\necho \"Search against Classic similarity field\"\ncurl -s 'http://localhost:9200/test/type1/_search?pretty=1' -d '{\n  \"query\" : {\n    \"match\" : {\n      \"field2\" : \"quick brown fox\"\n    }\n  }\n}' | grep '\"_score\"'\n\necho \" \"\necho \"NOTE!!! Classic similarity field yields a score of 0.16608897\"\n\necho \" \"\necho \"Search against BM25 similarity field\"\ncurl -s 'http://localhost:9200/test/type1/_search?pretty=1' -d '{\n  \"query\" : {\n    \"match\" : {\n      \"field1\" : \"quick brown fox\"\n    }\n  }\n}' | grep '\"_score\"'\n\necho \" \"\necho \"NOTE!!! BM25 field should yield a score of 0.8169974. Instead it yields 0.16608897 which is the same score as the Classic similarity field above\"\n```\n\nI think the issue is with the `SimilarityService.addSimilarities()` method overwriting any `providers` configured via index settings. Working on a PR.\n","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}