{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/63521","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63521/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63521/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63521/events","html_url":"https://github.com/elastic/elasticsearch/issues/63521","id":718249274,"node_id":"MDU6SXNzdWU3MTgyNDkyNzQ=","number":63521,"title":"SQL: missing serialisation of OffsetTime values for TIME type support","user":{"login":"bpintea","id":1562801,"node_id":"MDQ6VXNlcjE1NjI4MDE=","avatar_url":"https://avatars3.githubusercontent.com/u/1562801?v=4","gravatar_id":"","url":"https://api.github.com/users/bpintea","html_url":"https://github.com/bpintea","followers_url":"https://api.github.com/users/bpintea/followers","following_url":"https://api.github.com/users/bpintea/following{/other_user}","gists_url":"https://api.github.com/users/bpintea/gists{/gist_id}","starred_url":"https://api.github.com/users/bpintea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bpintea/subscriptions","organizations_url":"https://api.github.com/users/bpintea/orgs","repos_url":"https://api.github.com/users/bpintea/repos","events_url":"https://api.github.com/users/bpintea/events{/privacy}","received_events_url":"https://api.github.com/users/bpintea/received_events","type":"User","site_admin":false},"labels":[{"id":912794284,"node_id":"MDU6TGFiZWw5MTI3OTQyODQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Query%20Languages/SQL","name":":Query Languages/SQL","color":"0e8a16","default":false,"description":"SQL querying"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":1967501040,"node_id":"MDU6TGFiZWwxOTY3NTAxMDQw","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:QL","name":"Team:QL","color":"fef2c0","default":false,"description":"Meta label for query languages team"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-09T15:45:59Z","updated_at":"2020-10-14T07:35:53Z","closed_at":"2020-10-14T07:35:53Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"`SELECT count(*) AS c FROM test_emp WHERE birth_date::time IN ('00:00:00Z'::TIME)`\r\n\r\nwill fail with:\r\n```\r\n        \"root_cause\": [\r\n            {\r\n                \"type\": \"illegal_argument_exception\",\r\n                \"reason\": \"can not write type [class java.time.OffsetTime]\",\r\n                \"stack_trace\": \"org.elasticsearch.ElasticsearchException$1: can not write type [class java.time.OffsetTime]\r\n\tat org.elasticsearch.ElasticsearchException.guessRootCauses(ElasticsearchException.java:644)\r\n\tat org.elasticsearch.action.search.SearchPhaseExecutionException.guessRootCauses(SearchPhaseExecutionException.java:161)\r\n\tat org.elasticsearch.ElasticsearchException.guessRootCauses(ElasticsearchException.java:626)\r\n\tat org.elasticsearch.ElasticsearchException.generateFailureXContent(ElasticsearchException.java:572)\r\n\tat org.elasticsearch.rest.BytesRestResponse.build(BytesRestResponse.java:149)\r\n\tat org.elasticsearch.rest.BytesRestResponse.<init>(BytesRestResponse.java:110)\r\n\tat org.elasticsearch.rest.BytesRestResponse.<init>(BytesRestResponse.java:93)\r\n\tat org.elasticsearch.rest.action.RestActionListener.onFailure(RestActionListener.java:58)\r\n\tat org.elasticsearch.client.node.NodeClient.lambda$executeLocally$1(NodeClient.java:94)\r\n\tat org.elasticsearch.tasks.TaskManager$1.onFailure(TaskManager.java:184)\r\n\tat org.elasticsearch.action.support.ContextPreservingActionListener.onFailure(ContextPreservingActionListener.java:50)\r\n\tat org.elasticsearch.action.ActionListener$1.onFailure(ActionListener.java:71)\r\n\tat org.elasticsearch.xpack.sql.execution.PlanExecutor.lambda$sql$1(PlanExecutor.java:101)\r\n\tat org.elasticsearch.action.ActionListener$1.onFailure(ActionListener.java:71)\r\n\tat org.elasticsearch.xpack.sql.execution.search.Querier$BaseActionListener.onFailure(Querier.java:583)\r\n\tat org.elasticsearch.client.node.NodeClient.lambda$executeLocally$1(NodeClient.java:94)\r\n\tat org.elasticsearch.tasks.TaskManager$1.onFailure(TaskManager.java:184)\r\n\tat org.elasticsearch.action.support.ContextPreservingActionListener.onFailure(ContextPreservingActionListener.java:50)\r\n\tat org.elasticsearch.action.ActionListener$5.onFailure(ActionListener.java:258)\r\n\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.raisePhaseFailure(AbstractSearchAsyncAction.java:584)\r\n\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseFailure(AbstractSearchAsyncAction.java:558)\r\n\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.executeNextPhase(AbstractSearchAsyncAction.java:324)\r\n\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseDone(AbstractSearchAsyncAction.java:593)\r\n\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onShardFailure(AbstractSearchAsyncAction.java:400)\r\n\tat org.elasticsearch.action.search.AbstractSearchAsyncAction$1.onFailure(AbstractSearchAsyncAction.java:258)\r\n\tat org.elasticsearch.action.search.SearchExecutionStatsCollector.onFailure(SearchExecutionStatsCollector.java:73)\r\n\tat org.elasticsearch.action.ActionListenerResponseHandler.handleException(ActionListenerResponseHandler.java:59)\r\n\tat org.elasticsearch.action.search.SearchTransportService$ConnectionCountingHandler.handleException(SearchTransportService.java:408)\r\n\tat org.elasticsearch.transport.TransportService$6.handleException(TransportService.java:581)\r\n\tat org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleException(TransportService.java:1121)\r\n\tat org.elasticsearch.transport.TransportService$DirectResponseChannel.processException(TransportService.java:1230)\r\n\tat org.elasticsearch.transport.TransportService$DirectResponseChannel.sendResponse(TransportService.java:1204)\r\n\tat org.elasticsearch.transport.TaskTransportChannel.sendResponse(TaskTransportChannel.java:61)\r\n\tat org.elasticsearch.transport.TransportChannel.sendErrorResponse(TransportChannel.java:56)\r\n\tat org.elasticsearch.action.support.ChannelActionListener.onFailure(ChannelActionListener.java:51)\r\n\tat org.elasticsearch.action.ActionRunnable.onFailure(ActionRunnable.java:88)\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:39)\r\n\tat org.elasticsearch.common.util.concurrent.TimedRunnable.doRun(TimedRunnable.java:44)\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:733)\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)\r\n\tat java.base/java.lang.Thread.run(Thread.java:832)\r\nCaused by: java.lang.IllegalArgumentException: can not write type [class java.time.OffsetTime]\r\n\tat org.elasticsearch.common.io.stream.StreamOutput.writeGenericValue(StreamOutput.java:866)\r\n\tat org.elasticsearch.common.io.stream.StreamOutput.lambda$static$12(StreamOutput.java:693)\r\n\tat org.elasticsearch.common.io.stream.StreamOutput.writeGenericValue(StreamOutput.java:864)\r\n\tat org.elasticsearch.common.io.stream.StreamOutput.lambda$static$14(StreamOutput.java:718)\r\n\tat org.elasticsearch.common.io.stream.StreamOutput.writeGenericValue(StreamOutput.java:864)\r\n\tat org.elasticsearch.common.io.stream.StreamOutput.writeMap(StreamOutput.java:533)\r\n\tat org.elasticsearch.script.Script.writeTo(Script.java:573)\r\n\tat org.elasticsearch.index.query.ScriptQueryBuilder.doWriteTo(ScriptQueryBuilder.java:68)\r\n\tat org.elasticsearch.index.query.AbstractQueryBuilder.writeTo(AbstractQueryBuilder.java:79)\r\n\tat org.elasticsearch.common.io.stream.StreamOutput.writeNamedWriteable(StreamOutput.java:1133)\r\n\tat org.elasticsearch.common.io.stream.StreamOutput.writeOptionalNamedWriteable(StreamOutput.java:1144)\r\n\tat org.elasticsearch.search.builder.SearchSourceBuilder.writeTo(SearchSourceBuilder.java:271)\r\n\tat org.elasticsearch.common.io.stream.StreamOutput.writeOptionalWriteable(StreamOutput.java:994)\r\n\tat org.elasticsearch.search.internal.ShardSearchRequest.innerWriteTo(ShardSearchRequest.java:254)\r\n\tat org.elasticsearch.search.internal.ShardSearchRequest.cacheKey(ShardSearchRequest.java:401)\r\n\tat org.elasticsearch.indices.IndicesService.loadIntoContext(IndicesService.java:1387)\r\n\tat org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:370)\r\n\tat org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:431)\r\n\tat org.elasticsearch.search.SearchService$2.lambda$onResponse$0(SearchService.java:401)\r\n\tat org.elasticsearch.action.ActionRunnable.lambda$supply$0(ActionRunnable.java:58)\r\n\tat org.elasticsearch.action.ActionRunnable$2.doRun(ActionRunnable.java:73)\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n\t... 6 more\r\n\"\r\n            }\r\n        ]\r\n```","closed_by":{"login":"bpintea","id":1562801,"node_id":"MDQ6VXNlcjE1NjI4MDE=","avatar_url":"https://avatars3.githubusercontent.com/u/1562801?v=4","gravatar_id":"","url":"https://api.github.com/users/bpintea","html_url":"https://github.com/bpintea","followers_url":"https://api.github.com/users/bpintea/followers","following_url":"https://api.github.com/users/bpintea/following{/other_user}","gists_url":"https://api.github.com/users/bpintea/gists{/gist_id}","starred_url":"https://api.github.com/users/bpintea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bpintea/subscriptions","organizations_url":"https://api.github.com/users/bpintea/orgs","repos_url":"https://api.github.com/users/bpintea/repos","events_url":"https://api.github.com/users/bpintea/events{/privacy}","received_events_url":"https://api.github.com/users/bpintea/received_events","type":"User","site_admin":false},"performed_via_github_app":null}