[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/700497194","html_url":"https://github.com/elastic/elasticsearch/issues/62986#issuecomment-700497194","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/62986","id":700497194,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMDQ5NzE5NA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-09-29T07:09:10Z","updated_at":"2020-09-29T07:09:10Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-ql (:Query Languages/EQL)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/700497406","html_url":"https://github.com/elastic/elasticsearch/issues/62986#issuecomment-700497406","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/62986","id":700497406,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMDQ5NzQwNg==","user":{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false},"created_at":"2020-09-29T07:09:40Z","updated_at":"2020-09-29T07:09:40Z","author_association":"MEMBER","body":"/cc @rylnd ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/700787458","html_url":"https://github.com/elastic/elasticsearch/issues/62986#issuecomment-700787458","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/62986","id":700787458,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMDc4NzQ1OA==","user":{"login":"rylnd","id":657252,"node_id":"MDQ6VXNlcjY1NzI1Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/657252?v=4","gravatar_id":"","url":"https://api.github.com/users/rylnd","html_url":"https://github.com/rylnd","followers_url":"https://api.github.com/users/rylnd/followers","following_url":"https://api.github.com/users/rylnd/following{/other_user}","gists_url":"https://api.github.com/users/rylnd/gists{/gist_id}","starred_url":"https://api.github.com/users/rylnd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rylnd/subscriptions","organizations_url":"https://api.github.com/users/rylnd/orgs","repos_url":"https://api.github.com/users/rylnd/repos","events_url":"https://api.github.com/users/rylnd/events{/privacy}","received_events_url":"https://api.github.com/users/rylnd/received_events","type":"User","site_admin":false},"created_at":"2020-09-29T15:33:51Z","updated_at":"2020-09-29T15:33:51Z","author_association":"NONE","body":"@costin in addition to the above discrepancies, I wanted to note that `allow_no_indices` does provide behavior on which EQL rules currently depend: it overrides the default behavior of a query with multiple indexes failing if **any** of them do not resolve.\r\n\r\n```js\r\nGET auditbeat-*,foo*/_eql/search\r\n// index_not_found_exception: no such index [foo*]\r\n\r\nGET auditbeat-*,foo*/_eql/search?allow_no_indices=true\r\n// success\r\n```\r\n\r\nSince a default detection rule will be populated with security solution's default indices (some of which may or may not exist/be visible for the rule writer), and since the default behavior for an ES search is to ignore these unmatched patterns, the ability to replicate this behavior in EQL would be ideal.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/702769910","html_url":"https://github.com/elastic/elasticsearch/issues/62986#issuecomment-702769910","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/62986","id":702769910,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjc2OTkxMA==","user":{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false},"created_at":"2020-10-02T14:34:51Z","updated_at":"2020-10-02T14:34:51Z","author_association":"MEMBER","body":"@rylnd I've finally gotten around to look at this. There are two options relevant to you on index resolution:\r\n\r\n- `allow_no_indices` which in ES is `true` by default however in EQL it has to be `false` since at least one mapping is needed to validate the query.\r\n- `ignore_unavailable` which in ES is `true` by default but in EQL was `false`. That is why a combination of non-existing index/pattern plus an existing one failed. I've changed the default to `true` so it is possible to  query `indexA,missingIndex` without getting an exception.\r\n\r\nNote the associated PR only fixes the defaults, you can get the same behavior right now by adding `ignore_unavailable=true` to the request since EQL does parse index options.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/702897372","html_url":"https://github.com/elastic/elasticsearch/issues/62986#issuecomment-702897372","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/62986","id":702897372,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjg5NzM3Mg==","user":{"login":"rylnd","id":657252,"node_id":"MDQ6VXNlcjY1NzI1Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/657252?v=4","gravatar_id":"","url":"https://api.github.com/users/rylnd","html_url":"https://github.com/rylnd","followers_url":"https://api.github.com/users/rylnd/followers","following_url":"https://api.github.com/users/rylnd/following{/other_user}","gists_url":"https://api.github.com/users/rylnd/gists{/gist_id}","starred_url":"https://api.github.com/users/rylnd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rylnd/subscriptions","organizations_url":"https://api.github.com/users/rylnd/orgs","repos_url":"https://api.github.com/users/rylnd/repos","events_url":"https://api.github.com/users/rylnd/events{/privacy}","received_events_url":"https://api.github.com/users/rylnd/received_events","type":"User","site_admin":false},"created_at":"2020-10-02T18:43:42Z","updated_at":"2020-10-02T18:43:42Z","author_association":"NONE","body":"@costin thanks for looking into this! I agree with your assessment of `allow_no_indices`, we don't really have a need for that behavior, I think it was being conflated with `ignore_unavailable` due to the behavior exhibited in my [previous comment](https://github.com/elastic/elasticsearch/issues/62986#issuecomment-700787458).\r\n\r\nWhile I agree with your statements about how `ignore_unavailable` should behave, I want to verify that changing the defaults is all that's needed, since I seem to be seeing different behavior than what is described:\r\n\r\n```js\r\nGET auditbeat-*,foo*/_eql/search\r\n// index_not_found_exception: no such index [foo*]\r\n\r\nGET auditbeat-*,foo*/_eql/search?ignore_unavailable=true\r\n// index_not_found_exception: no such index [foo*]\r\n\r\nGET auditbeat-*,foo*/_eql/search?allow_no_indices=true\r\n// success\r\n```\r\n\r\nThis seems to be due to the wildcard index, since if I specify a concrete index `ignore_unavailable` functions as you describe:\r\n\r\n```js\r\nGET auditbeat-*,foo*/_eql/search?ignore_unavailable=true\r\n// index_not_found_exception: no such index [foo*]\r\n\r\nGET auditbeat-*,foo/_eql/search?ignore_unavailable=true\r\n// success\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/702943900","html_url":"https://github.com/elastic/elasticsearch/issues/62986#issuecomment-702943900","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/62986","id":702943900,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjk0MzkwMA==","user":{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false},"created_at":"2020-10-02T20:30:39Z","updated_at":"2020-10-02T20:30:39Z","author_association":"MEMBER","body":"This might be still on us due to the way we resolve the wildcard pattern.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/703074974","html_url":"https://github.com/elastic/elasticsearch/issues/62986#issuecomment-703074974","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/62986","id":703074974,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMzA3NDk3NA==","user":{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false},"created_at":"2020-10-03T09:23:34Z","updated_at":"2020-10-03T09:23:34Z","author_association":"MEMBER","body":"@rylnd I've added two integration tests for non existing indices, one with a [non-existing index](https://github.com/costin/elasticsearch/blob/fix/62986/x-pack/plugin/eql/qa/rest/src/yamlRestTest/resources/rest-api-spec/test/eql/10_basic.yml#L87) another one with a [non-matching pattern](https://github.com/costin/elasticsearch/blob/fix/62986/x-pack/plugin/eql/qa/rest/src/yamlRestTest/resources/rest-api-spec/test/eql/10_basic.yml#L101) and they are passing.\r\nOnce the PR gets merged, can you please try out the snapshot and see whether the issue still appears. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/703967815","html_url":"https://github.com/elastic/elasticsearch/issues/62986#issuecomment-703967815","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/62986","id":703967815,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMzk2NzgxNQ==","user":{"login":"rylnd","id":657252,"node_id":"MDQ6VXNlcjY1NzI1Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/657252?v=4","gravatar_id":"","url":"https://api.github.com/users/rylnd","html_url":"https://github.com/rylnd","followers_url":"https://api.github.com/users/rylnd/followers","following_url":"https://api.github.com/users/rylnd/following{/other_user}","gists_url":"https://api.github.com/users/rylnd/gists{/gist_id}","starred_url":"https://api.github.com/users/rylnd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rylnd/subscriptions","organizations_url":"https://api.github.com/users/rylnd/orgs","repos_url":"https://api.github.com/users/rylnd/repos","events_url":"https://api.github.com/users/rylnd/events{/privacy}","received_events_url":"https://api.github.com/users/rylnd/received_events","type":"User","site_admin":false},"created_at":"2020-10-06T00:58:21Z","updated_at":"2020-10-06T01:13:10Z","author_association":"NONE","body":"@costin I was able to test this on the latest snapshot (fcbbc7e7967). While the defaults look to be updated (I no longer have to specify `ignore_unavailable`), the aforementioned issue with wildcard indexes is still present:\r\n\r\n```js\r\nGET auditbeat-*,foo*/_eql/search\r\n// index_not_found_exception: no such index [foo*]\r\n\r\nGET auditbeat-*,foo/_eql/search\r\n// success\r\n```\r\n\r\nThis is undesirable for the kibana security app in particular, as the app's default indexes (and thus the defaults for these queries) all include wildcards. Rule creators can perform a normal ES query across all these indexes regardless of access/existence, while they would need to explicitly exclude from their EQL query those that they can't see.","performed_via_github_app":null}]