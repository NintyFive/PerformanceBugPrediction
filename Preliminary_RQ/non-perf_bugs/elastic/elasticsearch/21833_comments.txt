[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263344189","html_url":"https://github.com/elastic/elasticsearch/issues/21833#issuecomment-263344189","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21833","id":263344189,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzM0NDE4OQ==","user":{"login":"paullovessearch","id":1406946,"node_id":"MDQ6VXNlcjE0MDY5NDY=","avatar_url":"https://avatars3.githubusercontent.com/u/1406946?v=4","gravatar_id":"","url":"https://api.github.com/users/paullovessearch","html_url":"https://github.com/paullovessearch","followers_url":"https://api.github.com/users/paullovessearch/followers","following_url":"https://api.github.com/users/paullovessearch/following{/other_user}","gists_url":"https://api.github.com/users/paullovessearch/gists{/gist_id}","starred_url":"https://api.github.com/users/paullovessearch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paullovessearch/subscriptions","organizations_url":"https://api.github.com/users/paullovessearch/orgs","repos_url":"https://api.github.com/users/paullovessearch/repos","events_url":"https://api.github.com/users/paullovessearch/events{/privacy}","received_events_url":"https://api.github.com/users/paullovessearch/received_events","type":"User","site_admin":false},"created_at":"2016-11-28T17:58:30Z","updated_at":"2016-11-28T17:58:30Z","author_association":"NONE","body":"This makes sense to me. How deep can it handle? I think going down to 1000, 2000 groups (say) should still be reasonable performance. This would be 5-10 pages deep if pages are 10-20 groups each.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263345643","html_url":"https://github.com/elastic/elasticsearch/issues/21833#issuecomment-263345643","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21833","id":263345643,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzM0NTY0Mw==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-11-28T18:03:49Z","updated_at":"2016-11-28T18:03:49Z","author_association":"MEMBER","body":"@paullovessearch I think 1000/2000 is reasonable, more or less that's the order of magnitude we should aim.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263388244","html_url":"https://github.com/elastic/elasticsearch/issues/21833#issuecomment-263388244","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21833","id":263388244,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzM4ODI0NA==","user":{"login":"jvkumar","id":889636,"node_id":"MDQ6VXNlcjg4OTYzNg==","avatar_url":"https://avatars0.githubusercontent.com/u/889636?v=4","gravatar_id":"","url":"https://api.github.com/users/jvkumar","html_url":"https://github.com/jvkumar","followers_url":"https://api.github.com/users/jvkumar/followers","following_url":"https://api.github.com/users/jvkumar/following{/other_user}","gists_url":"https://api.github.com/users/jvkumar/gists{/gist_id}","starred_url":"https://api.github.com/users/jvkumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jvkumar/subscriptions","organizations_url":"https://api.github.com/users/jvkumar/orgs","repos_url":"https://api.github.com/users/jvkumar/repos","events_url":"https://api.github.com/users/jvkumar/events{/privacy}","received_events_url":"https://api.github.com/users/jvkumar/received_events","type":"User","site_admin":false},"created_at":"2016-11-28T20:43:11Z","updated_at":"2016-11-28T20:43:11Z","author_association":"NONE","body":"Looking forward to it üëç ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263513679","html_url":"https://github.com/elastic/elasticsearch/issues/21833#issuecomment-263513679","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21833","id":263513679,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzUxMzY3OQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-11-29T09:01:20Z","updated_at":"2016-11-29T09:01:20Z","author_association":"CONTRIBUTOR","body":"Looks great. Another important caveat is it does not support child aggs.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263740195","html_url":"https://github.com/elastic/elasticsearch/issues/21833#issuecomment-263740195","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21833","id":263740195,"node_id":"MDEyOklzc3VlQ29tbWVudDI2Mzc0MDE5NQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-11-30T00:01:42Z","updated_at":"2016-11-30T00:01:42Z","author_association":"MEMBER","body":"I discussed with @colings86 regarding the feasibility of such an aggregation and we came to the conclusion that this would require a lot of changes in the aggregation framework. Today aggregations are executed in a single phase but to implement field collapsing and paging efficiently we would need at least two phases. The first phase retrieves the top groups then the coordinating node can merge and select the N best groups globally. The second phase sends the N best groups to all shards to retrieve the M best hits per group. And finally the coordinating node can merge the top hits per group. Though with the aggregation as it is we would need to pack everything into one phase. Each shard would return the N top groups and the M top hits per group . With pagination it's not the N top groups but the N+from groups that need to be returned by each shard.\r\nWe could add a \"fetch\" phase for the aggregations but I don't think that other aggs could benefit from it. IMO this is not useful to have an agg that is intended to be a root aggregation and where sub-aggs are not allowed. \r\nConsidering that the use case that this issue is trying to solve is a search problem, I'd like to try another approach:\r\n\r\n## New Proposal\r\n\r\nThis intent of this issue is to provide a simple and accurate solution for single level field collapsing on search results. Since we want to enable pagination on top of collapsed results we need to keep the thing simple. The `top_groups` aggregation is one solution but it would be inefficient and too costly to run it without big modifications in the aggregation framework (multiple phase aggregations).  \r\nReusing the search capability of ES we could instead implement this feature in the search layer directly. A query for collapsed result would look like this:\r\n\r\n```\r\nGET _search\r\n{\r\n    \"collapse\": {\r\n        \"field\": \"product_id\"\r\n    },\r\n   \"query\": {\r\n     \"match_all\": {\r\n     }\r\n   }\r\n}\r\n```\r\nThe query above would just \"collapse\" the top hits based on the provided field. \r\nAn example of a response snippet:\r\n````\r\n\"hits\": [\r\n     {\r\n        \"_index\": \"my-index\",\r\n        \"_type\": \"items\",\r\n        \"_id\": \"1\",\r\n        \"_source\": ...,\r\n        \"_group\": 0,\r\n        \"_score\", 200\r\n     },\r\n     {\r\n        \"_index\": \"my-index\",\r\n        \"_type\": \"items\",\r\n        \"_id\": \"1\",\r\n        \"_source\": ...,\r\n        \"_group\": 3\r\n        \"_score\": 100\r\n     }\r\n]\r\n````\r\nThe response is a normal search response except that only one hit per group is returned. This hit is the head of the group, the best candidate based on the sort specification of the query. An additional meta field named `_group` indicates the id of the group for the hit. \r\nBy returning only the best hit per group we ensure that the ranking is accurate and the pagination works exactly like a normal search. \r\n\r\nIf we need more than one result per group then we can reuse the `inner_hits` idea:\r\n\r\n```\r\nGET _search\r\n{\r\n   \"collapse\": {\r\n        \"field\": \"product_id\"\r\n        \"inner_hits\": {\r\n           \"size\": 2\r\n        }\r\n   },\r\n   \"query\": {\r\n     \"match_all\": {\r\n     }\r\n   }\r\n}\r\n```\r\n\r\nEach search hit will contain an inner_hits object that contain the next 2 competitive hits for this group:\r\n\r\n```\r\n{\r\n    \"hits\": [\r\n     {\r\n        \"_index\": \"my-index\",\r\n        \"_type\": \"items\",\r\n        \"_id\": \"1\",\r\n        \"_source\": ...,\r\n        \"_group\": 0,\r\n        \"inner_hits\": {\r\n           \"product_id\": { \r\n              \"hits\": {\r\n                 \"total\": ...,\r\n                 \"hits\": [\r\n                    {\r\n                       \"_id\": \"12\",\r\n                       \"_source\": ...\r\n                       \"_score\": 15\r\n                    },\r\n                    {\r\n                       \"_id\": \"22\",\r\n                       \"_source\": ...\r\n                       \"_score\": 13\r\n                    },\r\n                    ...\r\n                 ]\r\n              }\r\n           }\r\n        }\r\n     }    \r\n}\r\n```\r\n The avantage of this solution is that it can be smoothly integrated in the existing search layer. `inner_hits` for the `collapse` parameter can be implemented as a sub fetch phase like the parent/child does. Although it would not be efficient in a scroll context and we should probably disable collapsed scroll queries if this beast gets in. Simple pagination would work with the same limitation than for normal search which is why deep pagination should also be prohibited. \r\nDoes it make any sense ?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263782141","html_url":"https://github.com/elastic/elasticsearch/issues/21833#issuecomment-263782141","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21833","id":263782141,"node_id":"MDEyOklzc3VlQ29tbWVudDI2Mzc4MjE0MQ==","user":{"login":"paullovessearch","id":1406946,"node_id":"MDQ6VXNlcjE0MDY5NDY=","avatar_url":"https://avatars3.githubusercontent.com/u/1406946?v=4","gravatar_id":"","url":"https://api.github.com/users/paullovessearch","html_url":"https://github.com/paullovessearch","followers_url":"https://api.github.com/users/paullovessearch/followers","following_url":"https://api.github.com/users/paullovessearch/following{/other_user}","gists_url":"https://api.github.com/users/paullovessearch/gists{/gist_id}","starred_url":"https://api.github.com/users/paullovessearch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paullovessearch/subscriptions","organizations_url":"https://api.github.com/users/paullovessearch/orgs","repos_url":"https://api.github.com/users/paullovessearch/repos","events_url":"https://api.github.com/users/paullovessearch/events{/privacy}","received_events_url":"https://api.github.com/users/paullovessearch/received_events","type":"User","site_admin":false},"created_at":"2016-11-30T04:47:29Z","updated_at":"2016-11-30T04:47:29Z","author_association":"NONE","body":"I like it!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263784219","html_url":"https://github.com/elastic/elasticsearch/issues/21833#issuecomment-263784219","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21833","id":263784219,"node_id":"MDEyOklzc3VlQ29tbWVudDI2Mzc4NDIxOQ==","user":{"login":"jvkumar","id":889636,"node_id":"MDQ6VXNlcjg4OTYzNg==","avatar_url":"https://avatars0.githubusercontent.com/u/889636?v=4","gravatar_id":"","url":"https://api.github.com/users/jvkumar","html_url":"https://github.com/jvkumar","followers_url":"https://api.github.com/users/jvkumar/followers","following_url":"https://api.github.com/users/jvkumar/following{/other_user}","gists_url":"https://api.github.com/users/jvkumar/gists{/gist_id}","starred_url":"https://api.github.com/users/jvkumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jvkumar/subscriptions","organizations_url":"https://api.github.com/users/jvkumar/orgs","repos_url":"https://api.github.com/users/jvkumar/repos","events_url":"https://api.github.com/users/jvkumar/events{/privacy}","received_events_url":"https://api.github.com/users/jvkumar/received_events","type":"User","site_admin":false},"created_at":"2016-11-30T05:05:44Z","updated_at":"2016-11-30T05:05:44Z","author_association":"NONE","body":"Awesome!! @jimczi I liked the proposal üëç ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265113274","html_url":"https://github.com/elastic/elasticsearch/issues/21833#issuecomment-265113274","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21833","id":265113274,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTExMzI3NA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-12-06T10:21:14Z","updated_at":"2016-12-06T10:21:14Z","author_association":"MEMBER","body":"We discussed this internally and decided to move on with a POC in order to evaluate the difficulty and the amount of code needed.\r\n I'll try to work on this soon but I have other issues to finish first. I'll update the issue when I start the implementation.","performed_via_github_app":null}]