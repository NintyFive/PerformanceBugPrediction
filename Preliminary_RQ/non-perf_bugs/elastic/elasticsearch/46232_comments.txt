[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/527118789","html_url":"https://github.com/elastic/elasticsearch/issues/46232#issuecomment-527118789","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46232","id":527118789,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzExODc4OQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-09-02T11:49:38Z","updated_at":"2019-09-02T11:49:38Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-security","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/530240540","html_url":"https://github.com/elastic/elasticsearch/issues/46232#issuecomment-530240540","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46232","id":530240540,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMDI0MDU0MA==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2019-09-11T06:27:39Z","updated_at":"2019-09-11T06:27:39Z","author_association":"CONTRIBUTOR","body":"> Moreover URL fragments used in Kibana can be pretty large so we can't store them in the session cookie like we do for SAML request ID.\r\n\r\n> We're planning to [...] store full URL in the RelayState\r\n\r\nThis isn't going to work. Per the specs `RelayState` may not exceed 80 bytes.\r\nSAML binding spec, section 3.4.3\r\n\r\n> RelayState data MAY be included with a SAML protocol message transmitted with this binding.\r\n> The value MUST NOT exceed 80 bytes in length and SHOULD be integrity protected by the\r\n> entity creating the message, either via a digital signature (see Section 3.4.4.1) or by some\r\n> independent means.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/530246068","html_url":"https://github.com/elastic/elasticsearch/issues/46232#issuecomment-530246068","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46232","id":530246068,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMDI0NjA2OA==","user":{"login":"jkakavas","id":10281256,"node_id":"MDQ6VXNlcjEwMjgxMjU2","avatar_url":"https://avatars2.githubusercontent.com/u/10281256?v=4","gravatar_id":"","url":"https://api.github.com/users/jkakavas","html_url":"https://github.com/jkakavas","followers_url":"https://api.github.com/users/jkakavas/followers","following_url":"https://api.github.com/users/jkakavas/following{/other_user}","gists_url":"https://api.github.com/users/jkakavas/gists{/gist_id}","starred_url":"https://api.github.com/users/jkakavas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkakavas/subscriptions","organizations_url":"https://api.github.com/users/jkakavas/orgs","repos_url":"https://api.github.com/users/jkakavas/repos","events_url":"https://api.github.com/users/jkakavas/events{/privacy}","received_events_url":"https://api.github.com/users/jkakavas/received_events","type":"User","site_admin":false},"created_at":"2019-09-11T06:46:39Z","updated_at":"2019-09-11T06:46:39Z","author_association":"CONTRIBUTOR","body":"Good catch Tim ! Link to the aforementioned spec: https://docs.oasis-open.org/security/saml/v2.0/saml-bindings-2.0-os.pdf","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/530253345","html_url":"https://github.com/elastic/elasticsearch/issues/46232#issuecomment-530253345","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46232","id":530253345,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMDI1MzM0NQ==","user":{"login":"azasypkin","id":1713708,"node_id":"MDQ6VXNlcjE3MTM3MDg=","avatar_url":"https://avatars1.githubusercontent.com/u/1713708?v=4","gravatar_id":"","url":"https://api.github.com/users/azasypkin","html_url":"https://github.com/azasypkin","followers_url":"https://api.github.com/users/azasypkin/followers","following_url":"https://api.github.com/users/azasypkin/following{/other_user}","gists_url":"https://api.github.com/users/azasypkin/gists{/gist_id}","starred_url":"https://api.github.com/users/azasypkin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azasypkin/subscriptions","organizations_url":"https://api.github.com/users/azasypkin/orgs","repos_url":"https://api.github.com/users/azasypkin/repos","events_url":"https://api.github.com/users/azasypkin/events{/privacy}","received_events_url":"https://api.github.com/users/azasypkin/received_events","type":"User","site_admin":false},"created_at":"2019-09-11T07:12:32Z","updated_at":"2019-09-11T07:12:32Z","author_association":"MEMBER","body":"That's a bummer, 80 byte RelayState isn't super useful. Looks like some (many?) IdPs (e.g. Auth0) don't enforce this limit though.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/530257470","html_url":"https://github.com/elastic/elasticsearch/issues/46232#issuecomment-530257470","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46232","id":530257470,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMDI1NzQ3MA==","user":{"login":"jkakavas","id":10281256,"node_id":"MDQ6VXNlcjEwMjgxMjU2","avatar_url":"https://avatars2.githubusercontent.com/u/10281256?v=4","gravatar_id":"","url":"https://api.github.com/users/jkakavas","html_url":"https://github.com/jkakavas","followers_url":"https://api.github.com/users/jkakavas/followers","following_url":"https://api.github.com/users/jkakavas/following{/other_user}","gists_url":"https://api.github.com/users/jkakavas/gists{/gist_id}","starred_url":"https://api.github.com/users/jkakavas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkakavas/subscriptions","organizations_url":"https://api.github.com/users/jkakavas/orgs","repos_url":"https://api.github.com/users/jkakavas/repos","events_url":"https://api.github.com/users/jkakavas/events{/privacy}","received_events_url":"https://api.github.com/users/jkakavas/received_events","type":"User","site_admin":false},"created_at":"2019-09-11T07:25:51Z","updated_at":"2019-09-11T07:25:51Z","author_association":"CONTRIBUTOR","body":"Okta doesn't and AFAIK shibboleth will only print a warning about it. The downside of this is that we will be building functionality that explicitly violates the spec and depends on other implementers current leniency which is not to be taken for granted and is not future-proof. \r\n\r\nI was digging up some old mailing list threads and it seems that (At least one of) the reason this size limit was added was to discourage SPs from sharing the entire return URL in the relaystate, in order to protect users' privacy","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/530270130","html_url":"https://github.com/elastic/elasticsearch/issues/46232#issuecomment-530270130","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46232","id":530270130,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMDI3MDEzMA==","user":{"login":"azasypkin","id":1713708,"node_id":"MDQ6VXNlcjE3MTM3MDg=","avatar_url":"https://avatars1.githubusercontent.com/u/1713708?v=4","gravatar_id":"","url":"https://api.github.com/users/azasypkin","html_url":"https://github.com/azasypkin","followers_url":"https://api.github.com/users/azasypkin/followers","following_url":"https://api.github.com/users/azasypkin/following{/other_user}","gists_url":"https://api.github.com/users/azasypkin/gists{/gist_id}","starred_url":"https://api.github.com/users/azasypkin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azasypkin/subscriptions","organizations_url":"https://api.github.com/users/azasypkin/orgs","repos_url":"https://api.github.com/users/azasypkin/repos","events_url":"https://api.github.com/users/azasypkin/events{/privacy}","received_events_url":"https://api.github.com/users/azasypkin/received_events","type":"User","site_admin":false},"created_at":"2019-09-11T08:05:10Z","updated_at":"2019-09-11T08:05:10Z","author_association":"MEMBER","body":"> Okta doesn't and AFAIK shibboleth will only print a warning about it. The downside of this is that we will be building functionality that explicitly violates the spec and depends on other implementers current leniency which is not to be taken for granted and is not future-proof.\r\n\r\nYeah, I agree. We have 80 bytes limit for RelayState and ~4KB limit for all cookies per domain Kibana server relies on. The correct and future-proof solution would probably be to store full URL in ES somehow (option 3 [here](https://github.com/elastic/kibana/issues/18392#issuecomment-523107818)). But the question here is whether Kibana or ES would be the best candidate to do that and how to automatically clean it up in case of SAML auth attempts that are never completed. It's not always obvious where to put that functionality in case of such a composite SP :)\r\n\r\nIf ES does that it could include some opaque token in `RelayState` instead of actual content and return that content only in saml/authenticate response. But as far as I understand ES doesn't store anything related to SAML request right now and doing so would be problematic/not-desirable?\r\n\r\nKibana can emulate that too via some dedicated Saved Object in .kibana-* index. We can put ID of such object to the cookie together with SAML Request ID and retrieve it later. The only problematic thing here is to somehow remove this object automatically after some period of time if it's not used. I can dig deeper into this option if the the option above is a no-go for ES.\r\n\r\n> I was digging up some old mailing list threads and it seems that (At least one of) the reason this size limit was added was to discourage SPs from sharing the entire return URL in the relaystate, in order to protect users' privacy\r\n\r\nInteresting, I see Auth0 [proposes to use URL in `RelayState` for the IdP initiated logins](https://auth0.com/docs/protocols/saml/saml-configuration/special-configuration-scenarios/idp-initiated-sso).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/530277041","html_url":"https://github.com/elastic/elasticsearch/issues/46232#issuecomment-530277041","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46232","id":530277041,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMDI3NzA0MQ==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2019-09-11T08:25:15Z","updated_at":"2019-09-11T08:25:15Z","author_association":"CONTRIBUTOR","body":"The reason I looked up the spec is because web servers have varying limits on the length of a request line, some as low as 4k.\r\nSo, putting aside the spec limit, once you include the rest of the path, and the signature etc, I'm not sure that a 4k redirect URL gives you a lot more space than you had with the cookie.\r\n\r\nHave you considered using `localStorage` instead of a cookie? I know Kibana doesn't do that now, but it seems like a reasonable fit for this.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/530278534","html_url":"https://github.com/elastic/elasticsearch/issues/46232#issuecomment-530278534","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46232","id":530278534,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMDI3ODUzNA==","user":{"login":"jkakavas","id":10281256,"node_id":"MDQ6VXNlcjEwMjgxMjU2","avatar_url":"https://avatars2.githubusercontent.com/u/10281256?v=4","gravatar_id":"","url":"https://api.github.com/users/jkakavas","html_url":"https://github.com/jkakavas","followers_url":"https://api.github.com/users/jkakavas/followers","following_url":"https://api.github.com/users/jkakavas/following{/other_user}","gists_url":"https://api.github.com/users/jkakavas/gists{/gist_id}","starred_url":"https://api.github.com/users/jkakavas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkakavas/subscriptions","organizations_url":"https://api.github.com/users/jkakavas/orgs","repos_url":"https://api.github.com/users/jkakavas/repos","events_url":"https://api.github.com/users/jkakavas/events{/privacy}","received_events_url":"https://api.github.com/users/jkakavas/received_events","type":"User","site_admin":false},"created_at":"2019-09-11T08:29:22Z","updated_at":"2019-09-11T08:40:21Z","author_association":"CONTRIBUTOR","body":"> If ES does that it could include some opaque token in RelayState instead of actual content and return that content only in saml/authenticate response. But as far as I understand ES doesn't store anything related to SAML request right now and doing so would be problematic/not-desirable?\r\n\r\nWe don't keep state at all ( we rely on the caller of the APIs to maintain the request IDs also ) so it would definitely not be preferable to store this in ES. \r\n\r\n> Interesting, I see Auth0 proposes to use URL in RelayState for the IdP initiated logins. \r\n\r\nThis is a different use case and this destination URL would be a generic app URL , which is fine. The problem with SP initiated SSO and deep links is that the IDP gets to know potentially private browsing  behaviors of the user ( i.e. `relayState=https://medicalforums.org?category=thisspecificidthatcorrespondstoaspecificdesease` ) ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/530294928","html_url":"https://github.com/elastic/elasticsearch/issues/46232#issuecomment-530294928","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46232","id":530294928,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMDI5NDkyOA==","user":{"login":"azasypkin","id":1713708,"node_id":"MDQ6VXNlcjE3MTM3MDg=","avatar_url":"https://avatars1.githubusercontent.com/u/1713708?v=4","gravatar_id":"","url":"https://api.github.com/users/azasypkin","html_url":"https://github.com/azasypkin","followers_url":"https://api.github.com/users/azasypkin/followers","following_url":"https://api.github.com/users/azasypkin/following{/other_user}","gists_url":"https://api.github.com/users/azasypkin/gists{/gist_id}","starred_url":"https://api.github.com/users/azasypkin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azasypkin/subscriptions","organizations_url":"https://api.github.com/users/azasypkin/orgs","repos_url":"https://api.github.com/users/azasypkin/repos","events_url":"https://api.github.com/users/azasypkin/events{/privacy}","received_events_url":"https://api.github.com/users/azasypkin/received_events","type":"User","site_admin":false},"created_at":"2019-09-11T09:14:13Z","updated_at":"2019-09-11T09:14:13Z","author_association":"MEMBER","body":">  I'm not sure that a 4k redirect URL gives you a lot more space than you had with the cookie.\r\n\r\nIt depends, we always encrypt cookie content that quite significantly affects the amount of info we can store there and 4k limit is for all cookies per domain (Kibana uses just one right now, but it can easily be hosted behind a custom path in a domain that is shared with other apps that also can use cookies). \r\n\r\n> Have you considered using localStorage instead of a cookie? I know Kibana doesn't do that now, but it seems like a reasonable fit for this.\r\n\r\nYes, [we considered `sessionStorage`](https://github.com/elastic/kibana/issues/18392#issuecomment-523834462) and it's an option, but not really the best one as it makes solution even more complex (additional redirect and additional type of storage we'll have to spread SAML auth knowledge over).\r\n\r\n> We don't keep state at all ( we rely on the caller of the APIs to maintain the request IDs also ) so it would definitely not be preferable to store this in ES.\r\n\r\nI see, thanks. So `RelayState` would be the only way for the caller of the APIs to know if response corresponds to a request (since it can't decrypt SAML response and extract request ID) in case there is a need for that.\r\n\r\n> This is a different use case and this destination URL would be a generic app URL , which is fine. \r\n\r\nRight, right. I just meant that if we don't use `RelayState` we won't be able to support custom URLs for IdP initiated logins.","performed_via_github_app":null}]