{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/19834","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19834/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19834/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19834/events","html_url":"https://github.com/elastic/elasticsearch/issues/19834","id":169639262,"node_id":"MDU6SXNzdWUxNjk2MzkyNjI=","number":19834,"title":"Netty4 HTTP does not support \"Expect: 100-continue\" header","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"labels":[{"id":146854632,"node_id":"MDU6TGFiZWwxNDY4NTQ2MzI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Network","name":":Distributed/Network","color":"0e8a16","default":false,"description":"Http and internode communication implementations"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":415784162,"node_id":"MDU6TGFiZWw0MTU3ODQxNjI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v5.0.0-beta1","name":"v5.0.0-beta1","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"assignees":[{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2016-08-05T15:56:50Z","updated_at":"2016-09-14T14:42:51Z","closed_at":"2016-08-10T11:21:22Z","author_association":"MEMBER","active_lock_reason":null,"body":"When using Netty4 HTTP transport type I have the following issue:\n#### Netty4\n\nStarting master using  `http.type: netty4`\n\n```\nbin/elasticsearch --E http.type=netty4\n```\n\nCreating a document with a medium size JSON document using cUrl (sample document is [here](https://gist.github.com/tlrx/5df7b9fe79e076b98c731e07d877650d)):\n\n```\ncurl -v -XPOST 'localhost:9200/samples/sample/0' -d '{\n   \"title\":\"My awesome book\",\n   \"pages\":456,\n   \"price\":27.99,\n   \"timestamp\":1428582942867,\n    ..... 30 other fields...\n}'\n```\n\nHere is the curl output:\n\n```\n\nNote: Unnecessary use of -X or --request, POST is already inferred.\n*   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 9200 (#0)\n> POST /samples/sample/0 HTTP/1.1\n> Host: localhost:9200\n> User-Agent: curl/7.47.0\n> Accept: */*\n> Content-Length: 1681\n> Content-Type: application/x-www-form-urlencoded\n> Expect: 100-continue\n> \n* Empty reply from server\n* Connection #0 to host localhost left intact\ncurl: (52) Empty reply from server\n```\n\nAnd the elasticsearch logs:\n\n```\n\n[2016-08-05 17:46:13,354][WARN ][http.netty4              ] [UqG1hcq] caught exception while handling client http traffic, closing connection [id: 0x0ca9a8ca, L:/127.0.0.1:9200 - R:/127.0.0.1:43208]\njava.lang.UnsupportedOperationException: unsupported message type: DefaultFullHttpResponse (expected: ByteBuf, FileRegion)\n    at io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage(AbstractNioByteChannel.java:260)\n    at io.netty.channel.AbstractChannel$AbstractUnsafe.write(AbstractChannel.java:799)\n    at io.netty.channel.DefaultChannelPipeline$HeadContext.write(DefaultChannelPipeline.java:1291)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:748)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:811)\n    at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:824)\n    at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:804)\n    at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:841)\n    at io.netty.handler.codec.MessageAggregator.decode(MessageAggregator.java:222)\n    at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)\n    at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)\n    at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)\n    at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:571)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:474)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:428)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:398)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:877)\n    at java.lang.Thread.run(Thread.java:745)\n```\n\nUpdate: as a workaround for users, forcing the `Expect` header to empty makes the request succeed:\n\n`curl -v -H \"Expect:\" -XPOST 'localhost:9200/samples/sample/0' -d '...'`\n#### Netty3\n\nIt works fine with  `http.type: netty3`\n\n```\nbin/elasticsearch --E http.type=netty3\n```\n\nCreating the document:\n\n```\ncurl -v -XPOST 'localhost:9200/samples/sample/0' -d '{\n   \"title\":\"My awesome book\",\n   \"pages\":456,\n   \"price\":27.99,\n   \"timestamp\":1428582942867,\n    ..... 30 other fields...\n}'\n```\n\nHere is the curl output:\n\n```\n\nNote: Unnecessary use of -X or --request, POST is already inferred.\n*   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 9200 (#0)\n> POST /samples/sample/0 HTTP/1.1\n> Host: localhost:9200\n> User-Agent: curl/7.47.0\n> Accept: */*\n> Content-Length: 1681\n> Content-Type: application/x-www-form-urlencoded\n> Expect: 100-continue\n> \n< HTTP/1.1 100 Continue\n* We are completely uploaded and fine\n< HTTP/1.1 201 Created\n< Location: /samples/sample/0\n< Content-Type: application/json; charset=UTF-8\n< Content-Length: 142\n< \n* Connection #0 to host localhost left intact\n{\"_index\":\"samples\",\"_type\":\"sample\",\"_id\":\"0\",\"_version\":1,\"result\":\"created\",\"_shards\":{\"total\":2,\"successful\":1,\"failed\":0},\"created\":true}%   \n\n```\n","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}