[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/22326668","html_url":"https://github.com/elastic/elasticsearch/issues/3456#issuecomment-22326668","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3456","id":22326668,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMzI2NjY4","user":{"login":"btiernay","id":2717578,"node_id":"MDQ6VXNlcjI3MTc1Nzg=","avatar_url":"https://avatars3.githubusercontent.com/u/2717578?v=4","gravatar_id":"","url":"https://api.github.com/users/btiernay","html_url":"https://github.com/btiernay","followers_url":"https://api.github.com/users/btiernay/followers","following_url":"https://api.github.com/users/btiernay/following{/other_user}","gists_url":"https://api.github.com/users/btiernay/gists{/gist_id}","starred_url":"https://api.github.com/users/btiernay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/btiernay/subscriptions","organizations_url":"https://api.github.com/users/btiernay/orgs","repos_url":"https://api.github.com/users/btiernay/repos","events_url":"https://api.github.com/users/btiernay/events{/privacy}","received_events_url":"https://api.github.com/users/btiernay/received_events","type":"User","site_admin":false},"created_at":"2013-08-08T14:22:02Z","updated_at":"2013-08-08T14:24:08Z","author_association":"NONE","body":"Just a thought I had was that this appears to be the nested analog of `null_value` for simple fields. One possible implementation strategy would be to insert a \"null value\" nested doc to represent its absence. This would allow the current join strategy to continue functioning. However, ideally this could be avoided and instead done closer to the Lucene level to reduce storage and perhaps get other query efficiency gains. On the other hand, \"null value\" may be simpler to implement.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23369362","html_url":"https://github.com/elastic/elasticsearch/issues/3456#issuecomment-23369362","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3456","id":23369362,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMzY5MzYy","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2013-08-27T20:47:38Z","updated_at":"2013-08-27T20:47:59Z","author_association":"MEMBER","body":"What about the following query:\n\n``` json\n{\n   \"fields\":[ \"id\" ],\n   \"query\":{\n       \"bool\" : {\n           \"should\" : [\n              {\"match_all\" : {}},\n              {\n                  \"nested\":{\n                      \"query\":{\n                           \"constant_score\":{\n                                \"query\":{\n                                    \"term\":{\"x\":1}\n                                }\n                          }\n                     },\n                     \"path\":\"nested\",\n                     \"score_mode\":\"total\"\n                  }\n              }\n           ]\n       }\n   }\n}\n```\n\nThis would also include docs with no nested docs, docs with nested would be scored higher. I think it makes sense to expose an option that just include docs with no nested docs.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23373504","html_url":"https://github.com/elastic/elasticsearch/issues/3456#issuecomment-23373504","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3456","id":23373504,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMzczNTA0","user":{"login":"btiernay","id":2717578,"node_id":"MDQ6VXNlcjI3MTc1Nzg=","avatar_url":"https://avatars3.githubusercontent.com/u/2717578?v=4","gravatar_id":"","url":"https://api.github.com/users/btiernay","html_url":"https://github.com/btiernay","followers_url":"https://api.github.com/users/btiernay/followers","following_url":"https://api.github.com/users/btiernay/following{/other_user}","gists_url":"https://api.github.com/users/btiernay/gists{/gist_id}","starred_url":"https://api.github.com/users/btiernay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/btiernay/subscriptions","organizations_url":"https://api.github.com/users/btiernay/orgs","repos_url":"https://api.github.com/users/btiernay/repos","events_url":"https://api.github.com/users/btiernay/events{/privacy}","received_events_url":"https://api.github.com/users/btiernay/received_events","type":"User","site_admin":false},"created_at":"2013-08-27T21:44:35Z","updated_at":"2013-08-27T23:35:48Z","author_association":"NONE","body":"Hey Martijn. \n\nI too had the same idea. However, I realized since `should` isn't mutually exclusive it will not filter out documents which have nested docs which _do not_ match the nested criteria. For example, it would also match:\n\n``` json\n{\n  \"id\":2,\n  \"nested\":[\n    {\n      \"x\":2\n    }\n  ]\n}\n```\n\nin my previous example above, which would be incorrect.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23412417","html_url":"https://github.com/elastic/elasticsearch/issues/3456#issuecomment-23412417","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3456","id":23412417,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNDEyNDE3","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2013-08-28T13:09:47Z","updated_at":"2013-08-28T13:09:47Z","author_association":"MEMBER","body":"Right, another way to solve it would be to use the following query:\n\n``` json\n{\n   \"fields\":[ \"id\" ],\n   \"query\":{\n       \"bool\" : {\n           \"should\" : [\n              {\n                \"bool\" : {\n                    \"not\" : [\n                        {\n                            \"nested\":{\n                                \"query\":{\n                                    \"match_all\": {}  \n                                },\n                                \"path\":\"nested\",\n                                \"score_mode\":\"total\"\n                          }    \n                        }\n                    ]\n                  }\n              },\n              {\n                  \"nested\":{\n                      \"query\":{\n                           \"constant_score\":{\n                                \"query\":{\n                                    \"term\":{\"x\":1}\n                                }\n                          }\n                     },\n                     \"path\":\"nested\",\n                     \"score_mode\":\"total\"\n                  }\n              }\n           ]\n       }\n   }\n}\n```\n\nSo the nested query in the bool should clause would only accept docs that don't have any nested docs. Looking at this query again it really look bloated and if we would implement this 'left join' / 'optional join' in the nested query it wouldn't be bloated and I guess would also perform better.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23459618","html_url":"https://github.com/elastic/elasticsearch/issues/3456#issuecomment-23459618","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3456","id":23459618,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNDU5NjE4","user":{"login":"btiernay","id":2717578,"node_id":"MDQ6VXNlcjI3MTc1Nzg=","avatar_url":"https://avatars3.githubusercontent.com/u/2717578?v=4","gravatar_id":"","url":"https://api.github.com/users/btiernay","html_url":"https://github.com/btiernay","followers_url":"https://api.github.com/users/btiernay/followers","following_url":"https://api.github.com/users/btiernay/following{/other_user}","gists_url":"https://api.github.com/users/btiernay/gists{/gist_id}","starred_url":"https://api.github.com/users/btiernay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/btiernay/subscriptions","organizations_url":"https://api.github.com/users/btiernay/orgs","repos_url":"https://api.github.com/users/btiernay/repos","events_url":"https://api.github.com/users/btiernay/events{/privacy}","received_events_url":"https://api.github.com/users/btiernay/received_events","type":"User","site_admin":false},"created_at":"2013-08-29T00:38:22Z","updated_at":"2013-08-29T00:38:49Z","author_association":"NONE","body":"Hey Martijn, yeah this actually would work, but...\n\n> Looking at this query again it really look bloated and if we would implement this 'left join' / 'optional join' in the nested query it wouldn't be bloated and I guess would also perform better.\n\nI think the two points you mentioned are bang on:\n- readability / understandability\n- performance\n\nIt's nice to know there is a way though. Thanks for taking the time to craft the example. \n\nI'd be curious to know if the `not` sub-expression would yield a score of 0 above. I suppose you could wrap that in a `custom_score`  (see https://github.com/elasticsearch/elasticsearch/issues/3058) if that wasn't the case. \n\nAlso not sure if `disable_coord` (see https://github.com/elasticsearch/elasticsearch/issues/3056) would be required above as well.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23507770","html_url":"https://github.com/elastic/elasticsearch/issues/3456#issuecomment-23507770","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3456","id":23507770,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNTA3Nzcw","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2013-08-29T17:36:15Z","updated_at":"2013-08-29T17:36:15Z","author_association":"MEMBER","body":"The `not` clause doesn't score, the score in this case determined by the should clause.\nThe `disable_coord` is only applicable to `should` clauses (the more matching, the more important a doc is), so in this case it doesn't matter. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23594007","html_url":"https://github.com/elastic/elasticsearch/issues/3456#issuecomment-23594007","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3456","id":23594007,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNTk0MDA3","user":{"login":"btiernay","id":2717578,"node_id":"MDQ6VXNlcjI3MTc1Nzg=","avatar_url":"https://avatars3.githubusercontent.com/u/2717578?v=4","gravatar_id":"","url":"https://api.github.com/users/btiernay","html_url":"https://github.com/btiernay","followers_url":"https://api.github.com/users/btiernay/followers","following_url":"https://api.github.com/users/btiernay/following{/other_user}","gists_url":"https://api.github.com/users/btiernay/gists{/gist_id}","starred_url":"https://api.github.com/users/btiernay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/btiernay/subscriptions","organizations_url":"https://api.github.com/users/btiernay/orgs","repos_url":"https://api.github.com/users/btiernay/repos","events_url":"https://api.github.com/users/btiernay/events{/privacy}","received_events_url":"https://api.github.com/users/btiernay/received_events","type":"User","site_admin":false},"created_at":"2013-08-30T23:03:03Z","updated_at":"2013-08-30T23:03:03Z","author_association":"NONE","body":"@martijnvg Thanks for the explanation. I actually just went through the ES training so this is all much clearer now :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49875552","html_url":"https://github.com/elastic/elasticsearch/issues/3456#issuecomment-49875552","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3456","id":49875552,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODc1NTUy","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-07-23T13:48:56Z","updated_at":"2014-07-23T13:48:56Z","author_association":"CONTRIBUTOR","body":"Relates to #3495 \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/51593127","html_url":"https://github.com/elastic/elasticsearch/issues/3456#issuecomment-51593127","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3456","id":51593127,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNTkzMTI3","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-08-08T12:12:05Z","updated_at":"2014-08-08T12:12:05Z","author_association":"CONTRIBUTOR","body":"Closed in favour of #3495 \n","performed_via_github_app":null}]