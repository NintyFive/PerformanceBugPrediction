{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/7916","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7916/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7916/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7916/events","html_url":"https://github.com/elastic/elasticsearch/issues/7916","id":44318801,"node_id":"MDU6SXNzdWU0NDMxODgwMQ==","number":7916,"title":"Stats: _status with #shards >> queue capacity failing with BroadcastShardOperationFailedException","user":{"login":"alexbrasetvik","id":43624,"node_id":"MDQ6VXNlcjQzNjI0","avatar_url":"https://avatars0.githubusercontent.com/u/43624?v=4","gravatar_id":"","url":"https://api.github.com/users/alexbrasetvik","html_url":"https://github.com/alexbrasetvik","followers_url":"https://api.github.com/users/alexbrasetvik/followers","following_url":"https://api.github.com/users/alexbrasetvik/following{/other_user}","gists_url":"https://api.github.com/users/alexbrasetvik/gists{/gist_id}","starred_url":"https://api.github.com/users/alexbrasetvik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexbrasetvik/subscriptions","organizations_url":"https://api.github.com/users/alexbrasetvik/orgs","repos_url":"https://api.github.com/users/alexbrasetvik/repos","events_url":"https://api.github.com/users/alexbrasetvik/events{/privacy}","received_events_url":"https://api.github.com/users/alexbrasetvik/received_events","type":"User","site_admin":false},"labels":[{"id":146836529,"node_id":"MDU6TGFiZWwxNDY4MzY1Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Stats","name":":Core/Features/Stats","color":"0e8a16","default":false,"description":"Statistics tracking and retrieval APIs"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":133442829,"node_id":"MDU6TGFiZWwxMzM0NDI4Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.3.4","name":"v1.3.4","color":"dddddd","default":false,"description":null},{"id":111540092,"node_id":"MDU6TGFiZWwxMTE1NDAwOTI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.4.0.Beta1","name":"v1.4.0.Beta1","color":"dddddd","default":false,"description":null},{"id":127700367,"node_id":"MDU6TGFiZWwxMjc3MDAzNjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.5.0","name":"v1.5.0","color":"dddddd","default":false,"description":null},{"id":76184120,"node_id":"MDU6TGFiZWw3NjE4NDEyMA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v2.0.0-beta1","name":"v2.0.0-beta1","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-09-29T17:08:21Z","updated_at":"2015-03-19T17:39:45Z","closed_at":"2014-09-30T09:37:27Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hi.\n\nWhile /_status is deprecated and should be replaced with /_recovery, there seems to be a regression between 1.3.2 and 1.3.3 when a cluster has lots of shards.\n\nThe /_status-request fails with e.g:\n\n```\n\"failures\" : [ {\n      \"index\" : \"foo-0104\",\n      \"shard\" : 0,\n      \"reason\" : \"BroadcastShardOperationFailedException[[foo-0104][0] ]; nested: EsRejectedExecutionException[rejected execution (queue capacity 100) on org.elasticsearch.action.support.broadcast.TransportBroadcastOperationAction$AsyncBroadcastAction$1@759c850c]; \"\n    } ]\n  }\n```\n\nElasticsearch logs \n\n```\n[2014-09-29 19:05:09,657][DEBUG][action.admin.indices.status] [Sputnik] [foo-0104][0], node[LWIGdaF4QdWwLEz2peydqQ], [P], s[STARTED]: failed to executed [org.elasticsearch.action.admin.indices.status.IndicesStatusRequest@746ef917]\norg.elasticsearch.common.util.concurrent.EsRejectedExecutionException: rejected execution (queue capacity 100) on org.elasticsearch.action.support.broadcast.TransportBroadcastOperationAction$AsyncBroadcastAction$1@759c850c\n    at org.elasticsearch.common.util.concurrent.EsAbortPolicy.rejectedExecution(EsAbortPolicy.java:62)\n    at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:821)\n    at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1372)\n    at org.elasticsearch.action.support.broadcast.TransportBroadcastOperationAction$AsyncBroadcastAction.performOperation(TransportBroadcastOperationAction.java:166)\n    at org.elasticsearch.action.support.broadcast.TransportBroadcastOperationAction$AsyncBroadcastAction.start(TransportBroadcastOperationAction.java:150)\n    at org.elasticsearch.action.support.broadcast.TransportBroadcastOperationAction.doExecute(TransportBroadcastOperationAction.java:70)\n    at org.elasticsearch.action.support.broadcast.TransportBroadcastOperationAction.doExecute(TransportBroadcastOperationAction.java:46)\n    at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:65)\n    at org.elasticsearch.client.node.NodeIndicesAdminClient.execute(NodeIndicesAdminClient.java:71)\n    at org.elasticsearch.client.support.AbstractIndicesAdminClient.status(AbstractIndicesAdminClient.java:429)\n    at org.elasticsearch.rest.action.admin.indices.status.RestIndicesStatusAction.handleRequest(RestIndicesStatusAction.java:62)\n    at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:66)\n    at org.elasticsearch.rest.RestController.executeHandler(RestController.java:177)\n    at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:160)\n    at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:121)\n    at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:83)\n    at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:301)\n    at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:44)\n    at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.common.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)\n    at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:296)\n    at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)\n    at org.elasticsearch.common.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)\n    at org.elasticsearch.common.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)\n    at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:74)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:268)\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:255)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)\n    at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)\n    at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:318)\n    at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)\n    at org.elasticsearch.common.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\n    at org.elasticsearch.common.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:722)\n```\n\nThis reliably reproduces the issue with a clean install of 1.3.3:\n- Create 200 indexes, e.g. `>>> for i in range(0, 200): requests.put('http://localhost:9200/foo-%04i' % i, data='{\"index\": {\"number_of_shards\": 1, \"number_of_replicas\": 0}}')`\n- `curl localhost:9200/_status`\n\nThis, in turn, causes dashboards like Kopf and Head to break.\n","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}