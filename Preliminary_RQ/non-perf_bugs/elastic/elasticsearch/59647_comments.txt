[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/658918331","html_url":"https://github.com/elastic/elasticsearch/issues/59647#issuecomment-658918331","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59647","id":658918331,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODkxODMzMQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-07-15T18:05:52Z","updated_at":"2020-07-15T18:05:52Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra (:Core/Infra/Scripting)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/661074563","html_url":"https://github.com/elastic/elasticsearch/issues/59647#issuecomment-661074563","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59647","id":661074563,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTA3NDU2Mw==","user":{"login":"stu-elastic","id":24232742,"node_id":"MDQ6VXNlcjI0MjMyNzQy","avatar_url":"https://avatars0.githubusercontent.com/u/24232742?v=4","gravatar_id":"","url":"https://api.github.com/users/stu-elastic","html_url":"https://github.com/stu-elastic","followers_url":"https://api.github.com/users/stu-elastic/followers","following_url":"https://api.github.com/users/stu-elastic/following{/other_user}","gists_url":"https://api.github.com/users/stu-elastic/gists{/gist_id}","starred_url":"https://api.github.com/users/stu-elastic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stu-elastic/subscriptions","organizations_url":"https://api.github.com/users/stu-elastic/orgs","repos_url":"https://api.github.com/users/stu-elastic/repos","events_url":"https://api.github.com/users/stu-elastic/events{/privacy}","received_events_url":"https://api.github.com/users/stu-elastic/received_events","type":"User","site_admin":false},"created_at":"2020-07-20T14:28:04Z","updated_at":"2020-07-20T14:28:04Z","author_association":"CONTRIBUTOR","body":"Wrongly closed.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/663163396","html_url":"https://github.com/elastic/elasticsearch/issues/59647#issuecomment-663163396","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59647","id":663163396,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzE2MzM5Ng==","user":{"login":"stu-elastic","id":24232742,"node_id":"MDQ6VXNlcjI0MjMyNzQy","avatar_url":"https://avatars0.githubusercontent.com/u/24232742?v=4","gravatar_id":"","url":"https://api.github.com/users/stu-elastic","html_url":"https://github.com/stu-elastic","followers_url":"https://api.github.com/users/stu-elastic/followers","following_url":"https://api.github.com/users/stu-elastic/following{/other_user}","gists_url":"https://api.github.com/users/stu-elastic/gists{/gist_id}","starred_url":"https://api.github.com/users/stu-elastic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stu-elastic/subscriptions","organizations_url":"https://api.github.com/users/stu-elastic/orgs","repos_url":"https://api.github.com/users/stu-elastic/repos","events_url":"https://api.github.com/users/stu-elastic/events{/privacy}","received_events_url":"https://api.github.com/users/stu-elastic/received_events","type":"User","site_admin":false},"created_at":"2020-07-23T18:28:52Z","updated_at":"2020-07-23T18:28:52Z","author_association":"CONTRIBUTOR","body":"* We will have contexts that all return primitive arrays\r\n* We will optimize for single value return by default allocating length one array\r\n  - If script returns non-array, we will automatically fill this array\r\n  - We can also auto-convert `List<BoxedTyped>` to `type[]`\r\n* RT field team will select the appropriate context based on their knowledge of the mappings.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/664684261","html_url":"https://github.com/elastic/elasticsearch/issues/59647#issuecomment-664684261","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59647","id":664684261,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NDY4NDI2MQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2020-07-27T23:11:41Z","updated_at":"2020-07-27T23:11:41Z","author_association":"MEMBER","body":"One thought regarding the return type conversions. We've gone to great lengths to make painless agnostic to the signature for particular contexts. Rather than having some kind of magic living within painless to do conversions, what if we were to have conversion methods on the script class itself? This would be similar to the special getters we have which painless looks for, in that the script class (ie script context) completely defines the input and output of the script. So painless would see the return types don't match up, and have some registered conversion methods to look at from when we registered the script context.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/669496559","html_url":"https://github.com/elastic/elasticsearch/issues/59647#issuecomment-669496559","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59647","id":669496559,"node_id":"MDEyOklzc3VlQ29tbWVudDY2OTQ5NjU1OQ==","user":{"login":"stu-elastic","id":24232742,"node_id":"MDQ6VXNlcjI0MjMyNzQy","avatar_url":"https://avatars0.githubusercontent.com/u/24232742?v=4","gravatar_id":"","url":"https://api.github.com/users/stu-elastic","html_url":"https://github.com/stu-elastic","followers_url":"https://api.github.com/users/stu-elastic/followers","following_url":"https://api.github.com/users/stu-elastic/following{/other_user}","gists_url":"https://api.github.com/users/stu-elastic/gists{/gist_id}","starred_url":"https://api.github.com/users/stu-elastic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stu-elastic/subscriptions","organizations_url":"https://api.github.com/users/stu-elastic/orgs","repos_url":"https://api.github.com/users/stu-elastic/repos","events_url":"https://api.github.com/users/stu-elastic/events{/privacy}","received_events_url":"https://api.github.com/users/stu-elastic/received_events","type":"User","site_admin":false},"created_at":"2020-08-05T20:42:39Z","updated_at":"2020-08-05T20:44:56Z","author_association":"CONTRIBUTOR","body":"Phase 1 - improve casting model:\r\n- ScriptContexts define a set of `cast` methods that take various types and return the context return value\r\n- `return x` is wrapped `return cast(x)` to ensure the proper return value is always returned\r\n\r\nThis is along with the current casting model (casting `long` when `double` is expected, for example).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/677862930","html_url":"https://github.com/elastic/elasticsearch/issues/59647#issuecomment-677862930","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59647","id":677862930,"node_id":"MDEyOklzc3VlQ29tbWVudDY3Nzg2MjkzMA==","user":{"login":"stu-elastic","id":24232742,"node_id":"MDQ6VXNlcjI0MjMyNzQy","avatar_url":"https://avatars0.githubusercontent.com/u/24232742?v=4","gravatar_id":"","url":"https://api.github.com/users/stu-elastic","html_url":"https://github.com/stu-elastic","followers_url":"https://api.github.com/users/stu-elastic/followers","following_url":"https://api.github.com/users/stu-elastic/following{/other_user}","gists_url":"https://api.github.com/users/stu-elastic/gists{/gist_id}","starred_url":"https://api.github.com/users/stu-elastic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stu-elastic/subscriptions","organizations_url":"https://api.github.com/users/stu-elastic/orgs","repos_url":"https://api.github.com/users/stu-elastic/repos","events_url":"https://api.github.com/users/stu-elastic/events{/privacy}","received_events_url":"https://api.github.com/users/stu-elastic/received_events","type":"User","site_admin":false},"created_at":"2020-08-20T19:41:33Z","updated_at":"2020-08-20T19:41:33Z","author_association":"CONTRIBUTOR","body":"Closing this as all requirements are implemented, created #61389 to make them easier on implementers.","performed_via_github_app":null}]