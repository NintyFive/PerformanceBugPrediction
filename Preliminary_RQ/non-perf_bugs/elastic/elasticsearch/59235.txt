{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/59235","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59235/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59235/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59235/events","html_url":"https://github.com/elastic/elasticsearch/issues/59235","id":653402051,"node_id":"MDU6SXNzdWU2NTM0MDIwNTE=","number":59235,"title":"Search - expose new Lucene option for case insensitive RegExp queries","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":1967498216,"node_id":"MDU6TGFiZWwxOTY3NDk4MjE2","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Search","name":"Team:Search","color":"fef2c0","default":false,"description":"Meta label for search team"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-07-08T15:43:05Z","updated_at":"2020-08-25T14:27:57Z","closed_at":"2020-08-25T14:27:57Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"[Lucene 9386](https://issues.apache.org/jira/projects/LUCENE/issues/LUCENE-9386) introduced an option for case insensitive matching of RegExp queries. This issue is to expose that capability to elasticsearch users.\r\n\r\nOne complexity with the feature is that it currently only supports ASCII characters and full support for Unicode has been left as a TODO. Rather than being a simple Boolean flag (eg case sensitive - yes or no?) there is a bitmask parameter which accepts only one flag at the moment - \"ASCII_CASE_INSENSITIVE\". In future the assumption is that we could use this same bitmask parameter and pass a new \"(Unicode)CASE_INSENSITIVE\" flag.\r\n\r\nAnother concern is in Lucene we renamed the previous \"flags\" constructor parameter to \"syntax_flags\" to make it distinct from the new \"match_flags\" parameter. Renaming constructor parameters works OK in Java because they are identified by position and type but in our REST api we rely on JSON field names so have to keep the existing [flags parameter](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-regexp-query.html#regexp-query-field-params).\r\nThe question then perhaps is how best to expose the new case insensitive matching flag in the REST api?\r\nOptions are:\r\n1)  Add an \"ASCII_CASE_INSENSITIVE\" value option for the existing `flags` parameter\r\n2) Add a new \"match_flags\" parameter with possible value option of \"ASCII_CASE_INSENSITIVE\"\r\n3) Add a simple Boolean flag that can only accept one value (the flag name choice would be `case_sensitive:false` or `case_insensitive:true`). We'd use documentation to declare that only ASCII is supported currently.\r\n\r\n","closed_by":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"performed_via_github_app":null}