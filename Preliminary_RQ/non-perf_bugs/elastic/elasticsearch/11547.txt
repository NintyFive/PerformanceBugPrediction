{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/11547","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11547/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11547/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11547/events","html_url":"https://github.com/elastic/elasticsearch/issues/11547","id":86385389,"node_id":"MDU6SXNzdWU4NjM4NTM4OQ==","number":11547,"title":"Too many bloked threads in elasticsearch java client","user":{"login":"darshanmehta10","id":12479117,"node_id":"MDQ6VXNlcjEyNDc5MTE3","avatar_url":"https://avatars3.githubusercontent.com/u/12479117?v=4","gravatar_id":"","url":"https://api.github.com/users/darshanmehta10","html_url":"https://github.com/darshanmehta10","followers_url":"https://api.github.com/users/darshanmehta10/followers","following_url":"https://api.github.com/users/darshanmehta10/following{/other_user}","gists_url":"https://api.github.com/users/darshanmehta10/gists{/gist_id}","starred_url":"https://api.github.com/users/darshanmehta10/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/darshanmehta10/subscriptions","organizations_url":"https://api.github.com/users/darshanmehta10/orgs","repos_url":"https://api.github.com/users/darshanmehta10/repos","events_url":"https://api.github.com/users/darshanmehta10/events{/privacy}","received_events_url":"https://api.github.com/users/darshanmehta10/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-06-09T00:32:00Z","updated_at":"2016-01-18T20:13:42Z","closed_at":"2016-01-18T20:13:42Z","author_association":"NONE","active_lock_reason":null,"body":"We are using elasticsearch 1.4.2 with Spring data. TransportClient object is used to establish connection, execute the query and fetch results (only search requests).\nFollowing code closes connection:\n`//There is an instanceof test above this block so no class cast exception here`\n`((TransportClient)element.getObjectValue()).close();`\n`((TransportClient)element.getObjectValue()).threadPool().shutdownNow();`\n\nSometimes, we get the following exception while executing the query or closing the connection:\n\n```\norg.elasticsearch.common.util.concurrent.EsRejectedExecutionException: rejected execution (shutting down) on org.elasticsearch.transport.netty.NettyTransport$2@489e4aa5\n//Long stack trace\n```\n\nHowever, this is intermittent, but the main issue is, after some hours (or days), the application completely hangs, (resulting in some 110% CPU and 80% memory) and all the upcoming search requests fail with 'Too many open files' exception. Below is the stack trace:\n\n```\norg.elasticsearch.common.netty.channel.ChannelException: Failed to create a selector.\nat org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.openSelector(AbstractNioSelector.java:343)\nat org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.<init>(AbstractNioSelector.java:100)\nat org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.<init>(AbstractNioWorker.java:52)\nat org.elasticsearch.common.netty.channel.socket.nio.NioWorker.<init>(NioWorker.java:45)\nat org.elasticsearch.common.netty.channel.socket.nio.NioWorkerPool.createWorker(NioWorkerPool.java:45)\nat org.elasticsearch.common.netty.channel.socket.nio.NioWorkerPool.createWorker(NioWorkerPool.java:28)\nat org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorkerPool.newWorker(AbstractNioWorkerPool.java:143)\nat org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorkerPool.init(AbstractNioWorkerPool.java:81)\nat org.elasticsearch.common.netty.channel.socket.nio.NioWorkerPool.<init>(NioWorkerPool.java:39)\nat org.elasticsearch.common.netty.channel.socket.nio.NioWorkerPool.<init>(NioWorkerPool.java:33)\n//many more\n\nCaused by: java.io.IOException: Too many open files\nat sun.nio.ch.EPollArrayWrapper.epollCreate(Native Method)\nat sun.nio.ch.EPollArrayWrapper.<init>(EPollArrayWrapper.java:87)\nat sun.nio.ch.EPollSelectorImpl.<init>(EPollSelectorImpl.java:68)\n```\n\nWe tried to get thread dump before restarting the api. Below stack trace appeared in it:\n\n```\nThread 12480: (state = BLOCKED)\n java.util.concurrent.FutureTask.<init>(java.lang.Runnable, java.lang.Object) @bci=5, line=92 (Compiled frame)\n java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>(java.util.concurrent.ScheduledThreadPoolExecutor, java.lang.Runnable, java.lang.Object, long) @bci=8, line=207 (Compiled frame)\n java.util.concurrent.ScheduledThreadPoolExecutor.schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit) @bci=33, line=527 (Compiled frame)\n org.elasticsearch.threadpool.ThreadPool.schedule(org.elasticsearch.common.unit.TimeValue, java.lang.String, java.lang.Runnable) @bci=37, line=245 (Compiled frame)\n org.elasticsearch.client.transport.TransportClientNodesService$ScheduledNodeSampler.run() @bci=41, line=323 (Compiled frame)\n java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1145 (Compiled frame)\n java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=615 (Interpreted frame)\n java.lang.Thread.run() @bci=11, line=724 (Interpreted frame)\n```\n\nThere were 93 such threads in blocked state which caused the application to fail. This has happened multiple times, however we are not able to nail down the root cause.\nWe don't have any thread pool limit placed on ES node. Don't know whether that would improve the situation. \n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}