{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/2510","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2510/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2510/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2510/events","html_url":"https://github.com/elastic/elasticsearch/issues/2510","id":9541125,"node_id":"MDU6SXNzdWU5NTQxMTI1","number":2510,"title":"NullPointerException on get with fresh index","user":{"login":"coreagile","id":1728638,"node_id":"MDQ6VXNlcjE3Mjg2Mzg=","avatar_url":"https://avatars0.githubusercontent.com/u/1728638?v=4","gravatar_id":"","url":"https://api.github.com/users/coreagile","html_url":"https://github.com/coreagile","followers_url":"https://api.github.com/users/coreagile/followers","following_url":"https://api.github.com/users/coreagile/following{/other_user}","gists_url":"https://api.github.com/users/coreagile/gists{/gist_id}","starred_url":"https://api.github.com/users/coreagile/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coreagile/subscriptions","organizations_url":"https://api.github.com/users/coreagile/orgs","repos_url":"https://api.github.com/users/coreagile/repos","events_url":"https://api.github.com/users/coreagile/events{/privacy}","received_events_url":"https://api.github.com/users/coreagile/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"assignees":[{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2012-12-27T16:41:54Z","updated_at":"2013-06-28T11:35:17Z","closed_at":"2013-06-28T11:35:17Z","author_association":"NONE","active_lock_reason":null,"body":"# Environment\n\nElasticSearch Server Version: 0.19.11\nElasticSearch Configuration: \n`cluster.name: sstarkey\n   index.number_of_shards: 1\n   index.number_of_replicas: 0\n   gateway.type: none`\n\nUsing Node Client in Java API\n# Steps\n1. Create a new index on a previously running ElasticSearch node\n2. Do something unrelated to the index that takes the \"right\" amount of time\n3. Try to get something that doesn't exist\n# Expected\n\nA SearchResponse where isExists() returns false\n# Actual\n\n`Caused by: java.lang.NullPointerException\n        at org.elasticsearch.action.support.single.shard.TransportShardSingleOperationAction$AsyncSingleAction.perform(TransportShardSingleOperationAction.java:150)\n        at org.elasticsearch.action.support.single.shard.TransportShardSingleOperationAction$AsyncSingleAction.start(TransportShardSingleOperationAction.java:125)\n        at org.elasticsearch.action.support.single.shard.TransportShardSingleOperationAction.doExecute(TransportShardSingleOperationAction.java:72)\n        at org.elasticsearch.action.support.single.shard.TransportShardSingleOperationAction.doExecute(TransportShardSingleOperationAction.java:47)\n        at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:61)\n        at org.elasticsearch.client.node.NodeClient.execute(NodeClient.java:90)\n        at org.elasticsearch.client.support.AbstractClient.get(AbstractClient.java:175)\n        at org.elasticsearch.action.get.GetRequestBuilder.doExecute(GetRequestBuilder.java:135)\n        at org.elasticsearch.action.support.BaseRequestBuilder.execute(BaseRequestBuilder.java:53)\n        at org.elasticsearch.action.support.BaseRequestBuilder.execute(BaseRequestBuilder.java:47)\n        at sun.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)\n        ... 58 more`\n# Unfortunately...\n\nThis exception only occurs at the integration test layer (i.e. when executing REST calls against our application which wraps ElasticSearch as opposed to when running unit tests directly against the library which integrates with ElasticSearch), and only intermittently.  We have not been able to figure out how to write a standalone unit test which reproduces this problem consistently.\n# Thanks!\n\nHelp is appreciated, as we'd really rather not catch this exception in our get service, and it smells of a kind of weird race condition.\n","closed_by":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"performed_via_github_app":null}