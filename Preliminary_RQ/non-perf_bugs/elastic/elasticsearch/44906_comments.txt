[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/515476566","html_url":"https://github.com/elastic/elasticsearch/issues/44906#issuecomment-515476566","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44906","id":515476566,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNTQ3NjU2Ng==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-07-26T14:29:42Z","updated_at":"2019-07-26T14:29:42Z","author_association":"COLLABORATOR","body":"Pinging @elastic/ml-core","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/516555145","html_url":"https://github.com/elastic/elasticsearch/issues/44906#issuecomment-516555145","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44906","id":516555145,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNjU1NTE0NQ==","user":{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false},"created_at":"2019-07-30T19:13:44Z","updated_at":"2019-07-30T19:13:44Z","author_association":"MEMBER","body":"I am against separating out `index` and `index_patterns`. I think that adds unnecessary complexity. \r\n\r\nWe should handle these types of responses in a sane way. Maybe allowing empty results, but auditing if we see empty results. It could be just fine that there are no concrete indices (for a period of time) that can be queried.\r\n\r\n\r\nIf we want to allow some sort of control to the user, we could also add support for index expansion flags in the `source` object, but that seems too granular. Possibly an `allow_no_indices` flag? Just spit balling. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/516811447","html_url":"https://github.com/elastic/elasticsearch/issues/44906#issuecomment-516811447","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44906","id":516811447,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNjgxMTQ0Nw==","user":{"login":"sophiec20","id":4185750,"node_id":"MDQ6VXNlcjQxODU3NTA=","avatar_url":"https://avatars2.githubusercontent.com/u/4185750?v=4","gravatar_id":"","url":"https://api.github.com/users/sophiec20","html_url":"https://github.com/sophiec20","followers_url":"https://api.github.com/users/sophiec20/followers","following_url":"https://api.github.com/users/sophiec20/following{/other_user}","gists_url":"https://api.github.com/users/sophiec20/gists{/gist_id}","starred_url":"https://api.github.com/users/sophiec20/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sophiec20/subscriptions","organizations_url":"https://api.github.com/users/sophiec20/orgs","repos_url":"https://api.github.com/users/sophiec20/repos","events_url":"https://api.github.com/users/sophiec20/events{/privacy}","received_events_url":"https://api.github.com/users/sophiec20/received_events","type":"User","site_admin":false},"created_at":"2019-07-31T11:35:22Z","updated_at":"2019-07-31T11:35:22Z","author_association":"NONE","body":"I would also be against separating out `index` and `index_patterns`.\r\n\r\nGood auditing is important here. As we are a platform and expect and want to see many varied use cases, we should not be trying to be too restrictive and controlling.\r\n\r\nI'd like to see lenience for now - document as such and provide good auditing. Pending wider adoption and user feedback we can consider giving stricter controls. \r\n\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/517584645","html_url":"https://github.com/elastic/elasticsearch/issues/44906#issuecomment-517584645","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44906","id":517584645,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNzU4NDY0NQ==","user":{"login":"hendrikmuhs","id":7126422,"node_id":"MDQ6VXNlcjcxMjY0MjI=","avatar_url":"https://avatars3.githubusercontent.com/u/7126422?v=4","gravatar_id":"","url":"https://api.github.com/users/hendrikmuhs","html_url":"https://github.com/hendrikmuhs","followers_url":"https://api.github.com/users/hendrikmuhs/followers","following_url":"https://api.github.com/users/hendrikmuhs/following{/other_user}","gists_url":"https://api.github.com/users/hendrikmuhs/gists{/gist_id}","starred_url":"https://api.github.com/users/hendrikmuhs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hendrikmuhs/subscriptions","organizations_url":"https://api.github.com/users/hendrikmuhs/orgs","repos_url":"https://api.github.com/users/hendrikmuhs/repos","events_url":"https://api.github.com/users/hendrikmuhs/events{/privacy}","received_events_url":"https://api.github.com/users/hendrikmuhs/received_events","type":"User","site_admin":false},"created_at":"2019-08-02T07:11:47Z","updated_at":"2019-08-02T07:11:47Z","author_association":"CONTRIBUTOR","body":"> Good auditing is important here. As we are a platform and expect and want to see many varied use cases, we should not be trying to be too restrictive and controlling.\r\n\r\nCan you elaborate on \"restrictions and controlling\" - I do not get what we restrict or control.\r\n\r\n> \r\n> I'd like to see lenience for now - document as such and provide good auditing. Pending wider adoption and user feedback we can consider giving stricter controls.\r\n\r\nCan you elaborate on the batch data frames usecase:\r\n\r\n- a user creates a dft \"pivot_A\" with source index A\r\n- source index A gets deleted\r\n- user starts \"pivot_A\"\r\n- result: \"pivot_A\" does not create results as A was deleted\r\n\r\nwe used to error for this usecase, now we are not.\r\n\r\nEven if we strictly validate:\r\n\r\n- a user creates a dft \"pivot_A\" with source index A\r\n- user starts \"pivot_A\" \r\n- user stops \"pivot_A\"\r\n- source index A gets deleted\r\n- user starts \"pivot_A\" again\r\n- result: \"pivot_A\" has incomplete results as A was deleted","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/517625386","html_url":"https://github.com/elastic/elasticsearch/issues/44906#issuecomment-517625386","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44906","id":517625386,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNzYyNTM4Ng==","user":{"login":"sophiec20","id":4185750,"node_id":"MDQ6VXNlcjQxODU3NTA=","avatar_url":"https://avatars2.githubusercontent.com/u/4185750?v=4","gravatar_id":"","url":"https://api.github.com/users/sophiec20","html_url":"https://github.com/sophiec20","followers_url":"https://api.github.com/users/sophiec20/followers","following_url":"https://api.github.com/users/sophiec20/following{/other_user}","gists_url":"https://api.github.com/users/sophiec20/gists{/gist_id}","starred_url":"https://api.github.com/users/sophiec20/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sophiec20/subscriptions","organizations_url":"https://api.github.com/users/sophiec20/orgs","repos_url":"https://api.github.com/users/sophiec20/repos","events_url":"https://api.github.com/users/sophiec20/events{/privacy}","received_events_url":"https://api.github.com/users/sophiec20/received_events","type":"User","site_admin":false},"created_at":"2019-08-02T09:09:52Z","updated_at":"2019-08-02T14:57:36Z","author_association":"NONE","body":"To elaborate / clarify / give more background (hopefully) ..\r\n\r\nThe user may use a single concrete index name, an array of concrete index names or a pattern (or possibly a combination). I would assume patterns to be the common usage. \r\n\r\nWhen the search runs and there are no results, then this would be due to either no documents matched or no indices matching. If we have results, these may have some (not all) missing concrete indices.\r\n\r\nIf no matching documents, then we retry the checkpoint. We think this is fairly likely in environments that don't change too much.\r\n\r\nIf one or more concrete indices are missing (but not all), then we may or may not find documents. In my opinion, we can be lenient here and this is worth an audit and continuing.\r\n\r\nIf no matching indices, then we can audit. I think we should retry (x times) as it may still be temporary.  \r\n\r\nThe above is from the point of view of continuous. At start, then perhaps we can fail faster if there are no matching indices.  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/517679435","html_url":"https://github.com/elastic/elasticsearch/issues/44906#issuecomment-517679435","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44906","id":517679435,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNzY3OTQzNQ==","user":{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false},"created_at":"2019-08-02T12:21:12Z","updated_at":"2019-08-02T12:21:12Z","author_association":"MEMBER","body":"1. We validate that indices exist on `_start`. If there are no underlying concrete source indices, we throw an error. If we don't that is bug.\r\n2. If ALL indices go away, that is the same as there being \"no more data\". I think we should be lenient, and audit. Additionally, if indices are persistently gone, checkpointing, or whatever system is in place should see that there are no changes between checkpoints (i.e. the data has been gone for two checkpoints). \r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/517719138","html_url":"https://github.com/elastic/elasticsearch/issues/44906#issuecomment-517719138","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44906","id":517719138,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNzcxOTEzOA==","user":{"login":"hendrikmuhs","id":7126422,"node_id":"MDQ6VXNlcjcxMjY0MjI=","avatar_url":"https://avatars3.githubusercontent.com/u/7126422?v=4","gravatar_id":"","url":"https://api.github.com/users/hendrikmuhs","html_url":"https://github.com/hendrikmuhs","followers_url":"https://api.github.com/users/hendrikmuhs/followers","following_url":"https://api.github.com/users/hendrikmuhs/following{/other_user}","gists_url":"https://api.github.com/users/hendrikmuhs/gists{/gist_id}","starred_url":"https://api.github.com/users/hendrikmuhs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hendrikmuhs/subscriptions","organizations_url":"https://api.github.com/users/hendrikmuhs/orgs","repos_url":"https://api.github.com/users/hendrikmuhs/repos","events_url":"https://api.github.com/users/hendrikmuhs/events{/privacy}","received_events_url":"https://api.github.com/users/hendrikmuhs/received_events","type":"User","site_admin":false},"created_at":"2019-08-02T14:21:27Z","updated_at":"2019-08-02T14:21:27Z","author_association":"CONTRIBUTOR","body":"I updated the top description for documentation purposes. ","performed_via_github_app":null}]