{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/14335","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14335/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14335/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14335/events","html_url":"https://github.com/elastic/elasticsearch/issues/14335","id":113830148,"node_id":"MDU6SXNzdWUxMTM4MzAxNDg=","number":14335,"title":"Optimize query parsing based on how a query will be used","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-10-28T14:14:41Z","updated_at":"2017-04-26T15:42:09Z","closed_at":"2017-04-26T09:34:39Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Today if you ask the `terms` query parser to generate a query, it will create a `TermsQuery`. However a `DocValuesTermsQuery` would match exactly the same documents, and would perform worse when used for iterating over matches, but better when used to check whether some documents match. We could make the parser a bit smarter and sometimes generate a `DocValuesTermsQuery` instead of a `TermsQuery`.\n\nI think there are at least two use-cases when using a `DocValuesTermsQuery` instead of a `TermsQuery` would be an easy win:\n- excluded clauses (`must_not` in a `bool`)\n- in `filter`/`filters` aggregation\n\nI used `TermsQuery` as an example, but it applies more generally to all multi-term queries that can also be executed via doc values such as ranges.\n\nIdeally this would be a Lucene feature, but I'm not sure how this could work given that Lucene doesn't have a schema. So I think elasticsearch is the right place to put it?\n","closed_by":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"performed_via_github_app":null}