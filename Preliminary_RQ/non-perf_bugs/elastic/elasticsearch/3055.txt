{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3055","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3055/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3055/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3055/events","html_url":"https://github.com/elastic/elasticsearch/issues/3055","id":14451125,"node_id":"MDU6SXNzdWUxNDQ1MTEyNQ==","number":3055,"title":"ClasscastException in GetResponse for binary data","user":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"labels":[{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"assignees":[{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2013-05-17T13:02:19Z","updated_at":"2013-05-17T14:32:43Z","closed_at":"2013-05-17T14:32:43Z","author_association":"MEMBER","active_lock_reason":null,"body":"Someone on the mailinglist mentioned a seemingly random occuring issue when executing a GetRequest...\n\nI managed to track down the issue, but the exception still occurs randomly (my assumption is, that it depends whether the data needs to be fetched remotely).\n\nThis is the test case\n\n``` java\npublic class SearchClassCastTest extends AbstractNodesTests {\n\n    private Client client;\n\n    @BeforeClass\n    public void createNodes() throws Exception {\n        startNode(\"node1\");\n        startNode(\"node2\");\n        client = node(\"node1\").client();\n    }\n\n    @AfterClass\n    public void closeNodes() {\n        client.close();\n        closeAllNodes();\n    }\n\n    @Test\n    public void flakyAssertion() throws Exception {\n        try {\n            client.admin().indices().prepareDelete(\"test\").execute().actionGet();\n        } catch (IndexMissingException e) {}\n        client.admin().indices().prepareCreate(\"test\").execute().actionGet();\n\n        String mapping = jsonBuilder().startObject()\n                .startObject(\"test\")\n                    .startObject(\"properties\")\n                        .startObject(\"data\")\n                            .field(\"type\",\"binary\")\n                        .endObject()\n                    .endObject()\n                .endObject()\n                .string();\n        client.admin().indices().preparePutMapping(\"test\").setType(\"test\").setSource(mapping).execute().actionGet();\n\n        client.prepareIndex(\"test\", \"test\", \"0\").setSource(jsonBuilder().startObject()\n                .field(\"data\", \"dm9vZG9v\")\n            .endObject())\n            .setRefresh(true)\n            .execute().actionGet();\n\n        GetResponse g = client.prepareGet(\"test\", \"test\", \"0\").setFields(\"data\").execute().actionGet();\n        assertThat(g.isExists(), is(true));\n\n        Object data= g.getField(\"data\").getValue();\n        // FLAKY ASSERTION HERE\n        assertThat(data, instanceOf(BytesArray.class));\n    }\n\n\n```\n\nThe assertion error is this\n\n```\njava.lang.AssertionError: \nExpected: an instance of org.elasticsearch.common.bytes.BytesArray\n     but: <org.elasticsearch.common.bytes.ChannelBufferBytesReference@cfac04ae> is a org.elasticsearch.common.bytes.ChannelBufferBytesReference\n    at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n    at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n    at org.elasticsearch.test.integration.search.simple.SearchClassCastTest.flakyAssertion(SearchClassCastTest.java:87)\n```\n\nMy assumption is, that we just forgot to call `ChannelBufferBytesReference.toBytesArray()` somewhere when getting the data.\n\nAlso, the test fails never when ES_LOCAL_MODE is set. And you need more than one node.\n","closed_by":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"performed_via_github_app":null}