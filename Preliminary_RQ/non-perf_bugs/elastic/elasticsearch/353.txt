{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/353","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/353/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/353/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/353/events","html_url":"https://github.com/elastic/elasticsearch/issues/353","id":302058,"node_id":"MDU6SXNzdWUzMDIwNTg=","number":353,"title":"Intelligent query routing to shards based on feedback ","user":{"login":"ppearcy","id":307414,"node_id":"MDQ6VXNlcjMwNzQxNA==","avatar_url":"https://avatars3.githubusercontent.com/u/307414?v=4","gravatar_id":"","url":"https://api.github.com/users/ppearcy","html_url":"https://github.com/ppearcy","followers_url":"https://api.github.com/users/ppearcy/followers","following_url":"https://api.github.com/users/ppearcy/following{/other_user}","gists_url":"https://api.github.com/users/ppearcy/gists{/gist_id}","starred_url":"https://api.github.com/users/ppearcy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppearcy/subscriptions","organizations_url":"https://api.github.com/users/ppearcy/orgs","repos_url":"https://api.github.com/users/ppearcy/repos","events_url":"https://api.github.com/users/ppearcy/events{/privacy}","received_events_url":"https://api.github.com/users/ppearcy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2010-09-03T23:10:40Z","updated_at":"2014-07-08T11:46:35Z","closed_at":"2014-07-08T11:46:35Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I believe that all queries are getting round robined between shards. This works well when all the servers have identical h/w and all are all healthy and in a steady state w/ caches built up.\n\nHowever, in a smaller cluster (and probably a bigger), one slow node can drag down performance disproportionately. \n\nIf there was feedback back into the shard router from response times,  it would be able route _most_ traffic around shards with warming caches, nodes with failing h/w, out of mem conditions, and properly distribute traffic to slower vs faster h/w in the cluster. \n\nI'd like to propose a simple model to use for routing traffic without sharing data. Each node will make the decision where to route based on its own response time history. The most recent response times should receive the most weight. The current trailing response time number should be computed by taking the last trailing response time and averaging it with the current. This would make the current response time average receive 50% of its weight from the last response time, but that should probably be tweaked based on testing. \n\nSo, each node can keep a response time metric for every shard. When it chooses which shard to route to, the ones with the lowest current response time should be hit with a frequency inversely proportional to the current trailing response time. \n\nThis scheme is definitely up for debate and there are a lot of other ways to accomplish this, but I think response time is the key metric. \n\nI would consider this yet another killer feature that differentiates itself and from my perspective the highest priority feature/bug request that I have out there. \n\nI would also be happy to play around with possible solutions to see how they work on my set up.\n\nThanks,\nPaul\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}