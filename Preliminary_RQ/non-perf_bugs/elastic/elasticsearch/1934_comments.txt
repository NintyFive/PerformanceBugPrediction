[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/5622106","html_url":"https://github.com/elastic/elasticsearch/issues/1934#issuecomment-5622106","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1934","id":5622106,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MjIxMDY=","user":{"login":"jprante","id":635745,"node_id":"MDQ6VXNlcjYzNTc0NQ==","avatar_url":"https://avatars1.githubusercontent.com/u/635745?v=4","gravatar_id":"","url":"https://api.github.com/users/jprante","html_url":"https://github.com/jprante","followers_url":"https://api.github.com/users/jprante/followers","following_url":"https://api.github.com/users/jprante/following{/other_user}","gists_url":"https://api.github.com/users/jprante/gists{/gist_id}","starred_url":"https://api.github.com/users/jprante/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jprante/subscriptions","organizations_url":"https://api.github.com/users/jprante/orgs","repos_url":"https://api.github.com/users/jprante/repos","events_url":"https://api.github.com/users/jprante/events{/privacy}","received_events_url":"https://api.github.com/users/jprante/received_events","type":"User","site_admin":false},"created_at":"2012-05-10T10:33:08Z","updated_at":"2012-05-10T10:33:08Z","author_association":"CONTRIBUTOR","body":"A challenge is to avoid false hits, e.g. for queries such as\n\ncity:Ontario -> should give 0 hits\ncity.state.name:Canada > should give 0 hits\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/5622248","html_url":"https://github.com/elastic/elasticsearch/issues/1934#issuecomment-5622248","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1934","id":5622248,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MjIyNDg=","user":{"login":"sfussenegger","id":117516,"node_id":"MDQ6VXNlcjExNzUxNg==","avatar_url":"https://avatars1.githubusercontent.com/u/117516?v=4","gravatar_id":"","url":"https://api.github.com/users/sfussenegger","html_url":"https://github.com/sfussenegger","followers_url":"https://api.github.com/users/sfussenegger/followers","following_url":"https://api.github.com/users/sfussenegger/following{/other_user}","gists_url":"https://api.github.com/users/sfussenegger/gists{/gist_id}","starred_url":"https://api.github.com/users/sfussenegger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sfussenegger/subscriptions","organizations_url":"https://api.github.com/users/sfussenegger/orgs","repos_url":"https://api.github.com/users/sfussenegger/repos","events_url":"https://api.github.com/users/sfussenegger/events{/privacy}","received_events_url":"https://api.github.com/users/sfussenegger/received_events","type":"User","site_admin":false},"created_at":"2012-05-10T10:43:48Z","updated_at":"2012-05-10T10:43:48Z","author_association":"CONTRIBUTOR","body":"In the above example I'd argue that `city:Ontario` should hit as state is nested inside city. If this isn't the desired behavior, state could be moved out of city. I was just thinking about queries like `city:\"Toronto Ontario\"` or `city:\"Boston MA\"`. That's why I've chosen this example. Thinking about exclusions from specific _all fields only (say include in _all, exclude from city._all) could make mapping quite complicated. I think it should be as simple as this:\n\n```\nstate: {\n  _all: {enabled: true}\n  path: \"just_name\",\n  index_name: \"s\",\n  properties: { ...}\n}\n```\n\nthat would enable `s:\"ontario canada\"`\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/5622577","html_url":"https://github.com/elastic/elasticsearch/issues/1934#issuecomment-5622577","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1934","id":5622577,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MjI1Nzc=","user":{"login":"sfussenegger","id":117516,"node_id":"MDQ6VXNlcjExNzUxNg==","avatar_url":"https://avatars1.githubusercontent.com/u/117516?v=4","gravatar_id":"","url":"https://api.github.com/users/sfussenegger","html_url":"https://github.com/sfussenegger","followers_url":"https://api.github.com/users/sfussenegger/followers","following_url":"https://api.github.com/users/sfussenegger/following{/other_user}","gists_url":"https://api.github.com/users/sfussenegger/gists{/gist_id}","starred_url":"https://api.github.com/users/sfussenegger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sfussenegger/subscriptions","organizations_url":"https://api.github.com/users/sfussenegger/orgs","repos_url":"https://api.github.com/users/sfussenegger/repos","events_url":"https://api.github.com/users/sfussenegger/events{/privacy}","received_events_url":"https://api.github.com/users/sfussenegger/received_events","type":"User","site_admin":false},"created_at":"2012-05-10T11:08:50Z","updated_at":"2012-05-10T11:08:50Z","author_association":"CONTRIBUTOR","body":"As a workaround, one can use wildcard fieldnames, e.g. `city.*`, in query text, see #1936\n\nAd additional workaround is using multi_field with non-unique index_name to create additional indexes, see [sample mapping](https://gist.github.com/2651930). The sample mapping allows querying using `country`, `country.name` and `country.code`\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/48348256","html_url":"https://github.com/elastic/elasticsearch/issues/1934#issuecomment-48348256","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1934","id":48348256,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzQ4MjU2","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-07-08T14:56:49Z","updated_at":"2014-07-08T14:56:49Z","author_association":"CONTRIBUTOR","body":"The `copy_to` functionality in #4796 allows custom `_all` fields, which will do what you need.  Closing\n","performed_via_github_app":null}]