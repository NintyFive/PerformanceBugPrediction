{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/55705","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55705/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55705/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55705/events","html_url":"https://github.com/elastic/elasticsearch/issues/55705","id":606040158,"node_id":"MDU6SXNzdWU2MDYwNDAxNTg=","number":55705,"title":"[CI] CorruptedFileIT.testCorruptionOnNetworkLayer failure ","user":{"login":"ywangd","id":2344308,"node_id":"MDQ6VXNlcjIzNDQzMDg=","avatar_url":"https://avatars3.githubusercontent.com/u/2344308?v=4","gravatar_id":"","url":"https://api.github.com/users/ywangd","html_url":"https://github.com/ywangd","followers_url":"https://api.github.com/users/ywangd/followers","following_url":"https://api.github.com/users/ywangd/following{/other_user}","gists_url":"https://api.github.com/users/ywangd/gists{/gist_id}","starred_url":"https://api.github.com/users/ywangd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywangd/subscriptions","organizations_url":"https://api.github.com/users/ywangd/orgs","repos_url":"https://api.github.com/users/ywangd/repos","events_url":"https://api.github.com/users/ywangd/events{/privacy}","received_events_url":"https://api.github.com/users/ywangd/received_events","type":"User","site_admin":false},"labels":[{"id":152510590,"node_id":"MDU6TGFiZWwxNTI1MTA1OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Recovery","name":":Distributed/Recovery","color":"0e8a16","default":false,"description":"Anything around constructing a new shard, either from a local or a remote source."},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"},{"id":1967496670,"node_id":"MDU6TGFiZWwxOTY3NDk2Njcw","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Distributed","name":"Team:Distributed","color":"fef2c0","default":false,"description":"Meta label for distributed team"}],"state":"closed","locked":false,"assignee":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"assignees":[{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2020-04-24T04:55:51Z","updated_at":"2020-05-05T03:47:46Z","closed_at":"2020-05-05T03:47:46Z","author_association":"MEMBER","active_lock_reason":null,"body":"This is a new failure today but it is reproducible locally on master branch.\r\n\r\n> ./gradlew ':server:integTest' --tests \"org.elasticsearch.index.store.CorruptedFileIT.testCorruptionOnNetworkLayer\" -Dtests.seed=416CE27C6D190108 -Dtests.security.manager=true -Dtests.locale=es-PE -Dtests.timezone=America/Manaus -Dcompiler.java=14 -Druntime.java=11\r\n\r\nBuild scan: https://gradle-enterprise.elastic.co/s/scdmcouk5clvs\r\n\r\nStacktrace:\r\n```\r\nCaptured an uncaught exception in thread: Thread[id=1251, name=elasticsearch[node_t0][generic][T#2], state=RUNNABLE, group=TGRP-CorruptedFileIT]\r\ncom.carrotsearch.randomizedtesting.UncaughtExceptionError: Captured an uncaught exception in thread: Thread[id=1251, name=elasticsearch[node_t0][generic][T#2], state=RUNNABLE, group=TGRP-CorruptedFileIT]\r\n\r\nCaused by: java.lang.AssertionError: no internal reference!!Close stacktrace\r\nat __randomizedtesting.SeedInfo.seed([416CE27C6D190108]:0)\r\nat org.elasticsearch.index.store.CorruptedFileIT.lambda$testCorruptionOnNetworkLayer$2(CorruptedFileIT.java:443)\r\nat org.elasticsearch.test.transport.StubbableTransport$WrappedConnection.sendRequest(StubbableTransport.java:235)\r\nat org.elasticsearch.transport.TransportService.sendRequestInternal(TransportService.java:680)\r\nat org.elasticsearch.transport.TransportService.sendRequest(TransportService.java:594)\r\nat org.elasticsearch.transport.TransportService.sendRequest(TransportService.java:548)\r\nat org.elasticsearch.indices.recovery.RemoteRecoveryTargetHandler$1.tryAction(RemoteRecoveryTargetHandler.java:264)\r\nat org.elasticsearch.action.support.RetryableAction$1.doRun(RetryableAction.java:87)\r\nat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\nat org.elasticsearch.common.util.concurrent.EsExecutors$DirectExecutorService.execute(EsExecutors.java:178)\r\nat org.elasticsearch.action.support.RetryableAction.run(RetryableAction.java:73)\r\nat org.elasticsearch.indices.recovery.RemoteRecoveryTargetHandler.executeRetryableAction(RemoteRecoveryTargetHandler.java:274)\r\nat org.elasticsearch.indices.recovery.RemoteRecoveryTargetHandler.writeFileChunk(RemoteRecoveryTargetHandler.java:225)\r\nat org.elasticsearch.indices.recovery.RecoverySourceHandler$2.executeChunkRequest(RecoverySourceHandler.java:884)\r\nat org.elasticsearch.indices.recovery.RecoverySourceHandler$2.executeChunkRequest(RecoverySourceHandler.java:848)\r\nat org.elasticsearch.indices.recovery.MultiFileTransfer.handleItems(MultiFileTransfer.java:124)\r\nat org.elasticsearch.indices.recovery.MultiFileTransfer$1.write(MultiFileTransfer.java:79)\r\nat org.elasticsearch.common.util.concurrent.AsyncIOProcessor.processList(AsyncIOProcessor.java:108)\r\nat org.elasticsearch.common.util.concurrent.AsyncIOProcessor.drainAndProcessAndRelease(AsyncIOProcessor.java:96)\r\nat org.elasticsearch.common.util.concurrent.AsyncIOProcessor.put(AsyncIOProcessor.java:84)\r\nat org.elasticsearch.indices.recovery.MultiFileTransfer.addItem(MultiFileTransfer.java:90)\r\nat org.elasticsearch.indices.recovery.MultiFileTransfer.start(MultiFileTransfer.java:86)\r\nat org.elasticsearch.indices.recovery.RecoverySourceHandler.sendFiles(RecoverySourceHandler.java:899)\r\nat org.elasticsearch.indices.recovery.RecoverySourceHandler.lambda$phase1$23(RecoverySourceHandler.java:509)\r\nat org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:63)\r\nat org.elasticsearch.common.util.concurrent.ListenableFuture$1.doRun(ListenableFuture.java:112)\r\nat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\nat org.elasticsearch.common.util.concurrent.EsExecutors$DirectExecutorService.execute(EsExecutors.java:178)\r\nat org.elasticsearch.common.util.concurrent.ListenableFuture.notifyListener(ListenableFuture.java:106)\r\nat org.elasticsearch.common.util.concurrent.ListenableFuture.lambda$done$0(ListenableFuture.java:98)\r\nat java.util.ArrayList.forEach(ArrayList.java:1540)\r\nat org.elasticsearch.common.util.concurrent.ListenableFuture.done(ListenableFuture.java:98)\r\nat org.elasticsearch.common.util.concurrent.BaseFuture.set(BaseFuture.java:144)\r\nat org.elasticsearch.common.util.concurrent.ListenableFuture.onResponse(ListenableFuture.java:127)\r\nat org.elasticsearch.action.StepListener.innerOnResponse(StepListener.java:62)\r\nat org.elasticsearch.action.NotifyOnceListener.onResponse(NotifyOnceListener.java:40)\r\nat org.elasticsearch.action.ActionListener$4.onResponse(ActionListener.java:163)\r\nat org.elasticsearch.action.ActionListener$6.onResponse(ActionListener.java:282)\r\nat org.elasticsearch.action.support.RetryableAction$RetryingListener.onResponse(RetryableAction.java:118)\r\nat org.elasticsearch.action.ActionListenerResponseHandler.handleResponse(ActionListenerResponseHandler.java:54)\r\nat org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleResponse(TransportService.java:1101)\r\nat org.elasticsearch.transport.InboundHandler$1.doRun(InboundHandler.java:206)\r\nat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:691)\r\nat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\nat java.lang.Thread.run(Thread.java:834)\r\n```\r\n","closed_by":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"performed_via_github_app":null}