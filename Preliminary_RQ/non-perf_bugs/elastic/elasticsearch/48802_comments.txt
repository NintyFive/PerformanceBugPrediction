[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/548809753","html_url":"https://github.com/elastic/elasticsearch/issues/48802#issuecomment-548809753","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48802","id":548809753,"node_id":"MDEyOklzc3VlQ29tbWVudDU0ODgwOTc1Mw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-11-01T14:32:27Z","updated_at":"2019-11-01T14:32:27Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search (:Search/Mapping)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/548866554","html_url":"https://github.com/elastic/elasticsearch/issues/48802#issuecomment-548866554","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48802","id":548866554,"node_id":"MDEyOklzc3VlQ29tbWVudDU0ODg2NjU1NA==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2019-11-01T16:56:54Z","updated_at":"2019-11-01T16:56:54Z","author_association":"CONTRIBUTOR","body":"That's the expected behaviour @stampycode: [`dynamic` is not a boolean](https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic.html) since it also accepts the value `\"strict\"`. I suppose we could remove the leniency that lets Elasticsearch accept the `\"dynamic\": false` syntax and require you to say `\"dynamic\": \"false\"` but that'd be quite a major breaking change for quite a minor benefit in consistency. I think there's no action required here so I am closing this.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/549044715","html_url":"https://github.com/elastic/elasticsearch/issues/48802#issuecomment-549044715","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48802","id":549044715,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTA0NDcxNQ==","user":{"login":"stampycode","id":5627756,"node_id":"MDQ6VXNlcjU2Mjc3NTY=","avatar_url":"https://avatars0.githubusercontent.com/u/5627756?v=4","gravatar_id":"","url":"https://api.github.com/users/stampycode","html_url":"https://github.com/stampycode","followers_url":"https://api.github.com/users/stampycode/followers","following_url":"https://api.github.com/users/stampycode/following{/other_user}","gists_url":"https://api.github.com/users/stampycode/gists{/gist_id}","starred_url":"https://api.github.com/users/stampycode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stampycode/subscriptions","organizations_url":"https://api.github.com/users/stampycode/orgs","repos_url":"https://api.github.com/users/stampycode/repos","events_url":"https://api.github.com/users/stampycode/events{/privacy}","received_events_url":"https://api.github.com/users/stampycode/received_events","type":"User","site_admin":false},"created_at":"2019-11-02T13:38:55Z","updated_at":"2019-11-02T13:38:55Z","author_association":"NONE","body":"I guess I didn't expect that - if I set the field to boolean false I would expect it to output the value as boolean false, not a string representation. It's not included in the documentation that the returned type would be a string, and there are no examples of the returned values.\r\n\r\nI only noticed this because I was doing a deep-compare on the index to detect changes in the mapping from the config it was defined with, and of course boolean false is not equal to string \"false\" so it flagged the change.\r\n\r\nFrom a design perspective, where is this decided?\r\nIf I have an integer setting, which can also accept boolean false, does it convert all int and boolean values to strings?","performed_via_github_app":null}]