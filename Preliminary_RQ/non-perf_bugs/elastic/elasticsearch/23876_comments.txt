[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/291166492","html_url":"https://github.com/elastic/elasticsearch/issues/23876#issuecomment-291166492","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23876","id":291166492,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MTE2NjQ5Mg==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2017-04-03T14:49:50Z","updated_at":"2017-04-03T14:49:50Z","author_association":"CONTRIBUTOR","body":"Why does it take so long for indexing to complete? Indexing a document should usually be fast. Also, once a document has been indexed into the primary but not replicated yet to all replicas, we cannot just abort the request, as this will make the replicas go out of sync.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/291188755","html_url":"https://github.com/elastic/elasticsearch/issues/23876#issuecomment-291188755","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23876","id":291188755,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MTE4ODc1NQ==","user":{"login":"joelstewart","id":6554411,"node_id":"MDQ6VXNlcjY1NTQ0MTE=","avatar_url":"https://avatars3.githubusercontent.com/u/6554411?v=4","gravatar_id":"","url":"https://api.github.com/users/joelstewart","html_url":"https://github.com/joelstewart","followers_url":"https://api.github.com/users/joelstewart/followers","following_url":"https://api.github.com/users/joelstewart/following{/other_user}","gists_url":"https://api.github.com/users/joelstewart/gists{/gist_id}","starred_url":"https://api.github.com/users/joelstewart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joelstewart/subscriptions","organizations_url":"https://api.github.com/users/joelstewart/orgs","repos_url":"https://api.github.com/users/joelstewart/repos","events_url":"https://api.github.com/users/joelstewart/events{/privacy}","received_events_url":"https://api.github.com/users/joelstewart/received_events","type":"User","site_admin":false},"created_at":"2017-04-03T16:02:22Z","updated_at":"2017-04-03T16:02:22Z","author_association":"NONE","body":"Our reason for the long index times is related to geo indexing.   https://github.com/elastic/elasticsearch/issues/22087  \r\n\r\nSome geoshapes just lock it up into hours of a CPU trying to get that geo shape indexed.   This causes a lot of problems, such if a client calls refresh on that index, it fills the refresh queue up.\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/291196484","html_url":"https://github.com/elastic/elasticsearch/issues/23876#issuecomment-291196484","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23876","id":291196484,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MTE5NjQ4NA==","user":{"login":"joelstewart","id":6554411,"node_id":"MDQ6VXNlcjY1NTQ0MTE=","avatar_url":"https://avatars3.githubusercontent.com/u/6554411?v=4","gravatar_id":"","url":"https://api.github.com/users/joelstewart","html_url":"https://github.com/joelstewart","followers_url":"https://api.github.com/users/joelstewart/followers","following_url":"https://api.github.com/users/joelstewart/following{/other_user}","gists_url":"https://api.github.com/users/joelstewart/gists{/gist_id}","starred_url":"https://api.github.com/users/joelstewart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joelstewart/subscriptions","organizations_url":"https://api.github.com/users/joelstewart/orgs","repos_url":"https://api.github.com/users/joelstewart/repos","events_url":"https://api.github.com/users/joelstewart/events{/privacy}","received_events_url":"https://api.github.com/users/joelstewart/received_events","type":"User","site_admin":false},"created_at":"2017-04-03T16:27:57Z","updated_at":"2017-04-03T16:27:57Z","author_association":"NONE","body":"Remind me how replicas work?  \r\n\r\nIf I remember, the translog is what is copied, and then indexing takes place on the replica as well.  I do see how timeouts then introduce a problem of what to do if it timesout on the primary - there is no guarantee it would timeout on the replica(s) as well.   \r\n\r\nI'll offer a couple ideas, recognizing each may have ramifications or difficulties: \r\n\r\n1) perhaps there can be a mode to enable aborts.  maybe timeouts in this case are set in elasticsearch,yml or in index settings.  If the mode is on, translog replication takes place after initial indexing?  \r\n\r\n2) if indexing fails on primary, send interrupt to secondaries for that doc id.  On replicas, if the task has already completed, do a delete.\r\n\r\n3) segment based replication mode:  https://writequit.org/org/es/design/shadow-replicas.html \r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/291197871","html_url":"https://github.com/elastic/elasticsearch/issues/23876#issuecomment-291197871","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23876","id":291197871,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MTE5Nzg3MQ==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2017-04-03T16:32:56Z","updated_at":"2017-04-03T16:32:56Z","author_association":"MEMBER","body":"I agree with @ywelsch.\r\n\r\nAdditionally, aborting a thread would require cooperation from the indexing thread all through the engine and inside Lucene, I do not think we want to add checks throughout as it will just increase the cost of indexing with a lot of added complexity.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/291198269","html_url":"https://github.com/elastic/elasticsearch/issues/23876#issuecomment-291198269","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23876","id":291198269,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MTE5ODI2OQ==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2017-04-03T16:34:15Z","updated_at":"2017-04-03T16:34:15Z","author_association":"MEMBER","body":"> Some geoshapes just lock it up into hours of a CPU trying to get that geo shape indexed. This causes a lot of problems, such if a client calls refresh on that index, it fills the refresh queue up.\r\n\r\nI think that instead of adding support for timeouts through Elasticsearch and Lucene, we should instead work on improving the performance here which is what #22087 can hopefully serve as a catalyst for.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/291199705","html_url":"https://github.com/elastic/elasticsearch/issues/23876#issuecomment-291199705","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23876","id":291199705,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MTE5OTcwNQ==","user":{"login":"joelstewart","id":6554411,"node_id":"MDQ6VXNlcjY1NTQ0MTE=","avatar_url":"https://avatars3.githubusercontent.com/u/6554411?v=4","gravatar_id":"","url":"https://api.github.com/users/joelstewart","html_url":"https://github.com/joelstewart","followers_url":"https://api.github.com/users/joelstewart/followers","following_url":"https://api.github.com/users/joelstewart/following{/other_user}","gists_url":"https://api.github.com/users/joelstewart/gists{/gist_id}","starred_url":"https://api.github.com/users/joelstewart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joelstewart/subscriptions","organizations_url":"https://api.github.com/users/joelstewart/orgs","repos_url":"https://api.github.com/users/joelstewart/repos","events_url":"https://api.github.com/users/joelstewart/events{/privacy}","received_events_url":"https://api.github.com/users/joelstewart/received_events","type":"User","site_admin":false},"created_at":"2017-04-03T16:39:09Z","updated_at":"2017-04-03T16:39:09Z","author_association":"NONE","body":"@jasontedor  I understand there are complexities, which is why it would be a non-default operating mode that would enable it (and it could be experimental without guarantees / support).\r\n\r\nMy only option now is to implement logic that will reject documents with linestrings that have some characteristics.  Trouble is, we don't really know when something is good or bad without having a deeper understanding of the linestring indexing algorithm.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/291237002","html_url":"https://github.com/elastic/elasticsearch/issues/23876#issuecomment-291237002","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23876","id":291237002,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MTIzNzAwMg==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2017-04-03T18:48:25Z","updated_at":"2017-04-03T18:48:25Z","author_association":"MEMBER","body":"> understand there are complexities, which is why it would be a non-default operating mode that would enable it (and it could be experimental without guarantees / support).\r\n\r\nNo, complexity means on the implementation side to what is already very hairy code. Hiding it behind being off by default doesn't change the fact that I'm very cautious about making any of the code involved here even more complex. Adding it behind an experimental flag will not help, it's still code in the main path of execution that has to change.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/291240495","html_url":"https://github.com/elastic/elasticsearch/issues/23876#issuecomment-291240495","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23876","id":291240495,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MTI0MDQ5NQ==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2017-04-03T18:59:50Z","updated_at":"2017-04-03T18:59:50Z","author_association":"MEMBER","body":"> If the mode is on, translog replication takes place after initial indexing?\r\n\r\nThere is no translog replication, documents are added to the translog when indexing is completed whether it's on the primary, or on the replicas after the primary has completed and the replica has indexed the same document.\r\n\r\n> if indexing fails on primary, send interrupt to secondaries for that doc id.\r\n\r\nIndexing requests will never be sent to the replica is the primary fails to index the document. We will be replicating failures, but only for the purpose of ensuring that the replicas have an operation history that is identical to that of the primary.\r\n\r\n> segment based replication mode:  https://writequit.org/org/es/design/shadow-replicas.html \r\n\r\nSegment-based replication and shadow replicas are slightly different things. Lucene has native segment-based replication. Elasticsearch does not expose it, and exposing it is a massive effort that I personally think is unlikely to be undertaken. Shadow replicas are deprecated and are going to be removed.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/291240690","html_url":"https://github.com/elastic/elasticsearch/issues/23876#issuecomment-291240690","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23876","id":291240690,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MTI0MDY5MA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2017-04-03T19:00:28Z","updated_at":"2017-04-03T19:00:28Z","author_association":"MEMBER","body":"I'm going to close this issue, I will reopen if it if there's a convincing argument presented that we should add timeouts here. Instead, I think we should figure out how to make indexing as fast as possible, including the case of geo points.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/291412026","html_url":"https://github.com/elastic/elasticsearch/issues/23876#issuecomment-291412026","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23876","id":291412026,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MTQxMjAyNg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-04-04T07:01:05Z","updated_at":"2017-04-04T07:01:05Z","author_association":"CONTRIBUTOR","body":"@joelstewart @nknize is working on BKD based geoshapes in Lucene, which will be much more efficient than the current implementation.  This tackles the problem at its root rather than papering over it with a timeout.  Yes, it's not immediate, but it will be worth the wait.","performed_via_github_app":null}]