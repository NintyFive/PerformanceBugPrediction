[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/264508290","html_url":"https://github.com/elastic/elasticsearch/issues/21942#issuecomment-264508290","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21942","id":264508290,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NDUwODI5MA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-12-02T17:15:31Z","updated_at":"2016-12-02T17:15:31Z","author_association":"CONTRIBUTOR","body":">  I would expect the circuit breaker to kick in and stop the query.\r\n\r\nThe circuit breaker is not perfect, and there are queries that cannot be stopped efficiently since they allocate most memory outside of the circuit breaker tracker, but a cardinality aggregation under a terms aggregation is the kind of query that should work well with the circuit breaker. Would you be able to share the whole search request?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/264527893","html_url":"https://github.com/elastic/elasticsearch/issues/21942#issuecomment-264527893","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21942","id":264527893,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NDUyNzg5Mw==","user":{"login":"AMarthaller","id":13474239,"node_id":"MDQ6VXNlcjEzNDc0MjM5","avatar_url":"https://avatars1.githubusercontent.com/u/13474239?v=4","gravatar_id":"","url":"https://api.github.com/users/AMarthaller","html_url":"https://github.com/AMarthaller","followers_url":"https://api.github.com/users/AMarthaller/followers","following_url":"https://api.github.com/users/AMarthaller/following{/other_user}","gists_url":"https://api.github.com/users/AMarthaller/gists{/gist_id}","starred_url":"https://api.github.com/users/AMarthaller/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AMarthaller/subscriptions","organizations_url":"https://api.github.com/users/AMarthaller/orgs","repos_url":"https://api.github.com/users/AMarthaller/repos","events_url":"https://api.github.com/users/AMarthaller/events{/privacy}","received_events_url":"https://api.github.com/users/AMarthaller/received_events","type":"User","site_admin":false},"created_at":"2016-12-02T18:35:35Z","updated_at":"2016-12-12T14:19:09Z","author_association":"NONE","body":"Here is the full query from Kibana.\r\n\r\n```\r\nPOST /devices/device/_search\r\n{\r\n   \"size\": 0,\r\n   \"query\": {\r\n      \"bool\": {\r\n         \"must\": [\r\n            {\r\n               \"query_string\": {\r\n                  \"query\": \"*\",\r\n                  \"analyze_wildcard\": true\r\n               }\r\n            },\r\n            {\r\n               \"range\": {\r\n                  \"StartTime\": {\r\n                     \"gte\": 1472923594387,\r\n                     \"lte\": 1480703194388,\r\n                     \"format\": \"epoch_millis\"\r\n                  }\r\n               }\r\n            }\r\n         ],\r\n         \"must_not\": []\r\n      }\r\n   },\r\n   \"aggs\": {\r\n      \"2\": {\r\n         \"terms\": {\r\n            \"field\": \"device\",\r\n            \"size\": 15,\r\n            \"order\": {\r\n               \"1\": \"desc\"\r\n            }\r\n         },\r\n         \"aggs\": {\r\n            \"1\": {\r\n               \"cardinality\": {\r\n                  \"field\": \"Id\"\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n```\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/290659038","html_url":"https://github.com/elastic/elasticsearch/issues/21942#issuecomment-290659038","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21942","id":290659038,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MDY1OTAzOA==","user":{"login":"Dyakovvn","id":9463504,"node_id":"MDQ6VXNlcjk0NjM1MDQ=","avatar_url":"https://avatars2.githubusercontent.com/u/9463504?v=4","gravatar_id":"","url":"https://api.github.com/users/Dyakovvn","html_url":"https://github.com/Dyakovvn","followers_url":"https://api.github.com/users/Dyakovvn/followers","following_url":"https://api.github.com/users/Dyakovvn/following{/other_user}","gists_url":"https://api.github.com/users/Dyakovvn/gists{/gist_id}","starred_url":"https://api.github.com/users/Dyakovvn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Dyakovvn/subscriptions","organizations_url":"https://api.github.com/users/Dyakovvn/orgs","repos_url":"https://api.github.com/users/Dyakovvn/repos","events_url":"https://api.github.com/users/Dyakovvn/events{/privacy}","received_events_url":"https://api.github.com/users/Dyakovvn/received_events","type":"User","site_admin":false},"created_at":"2017-03-31T09:02:31Z","updated_at":"2017-03-31T09:02:31Z","author_association":"NONE","body":"Hello! I have the same problem. I described it on the forum. When the precision_threshhold decreases to 100, the problem disappears. https://discuss.elastic.co/t/5-2-1-elasti-2-4-1/75357/28","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/291939149","html_url":"https://github.com/elastic/elasticsearch/issues/21942#issuecomment-291939149","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21942","id":291939149,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MTkzOTE0OQ==","user":{"login":"initialcontext","id":6453360,"node_id":"MDQ6VXNlcjY0NTMzNjA=","avatar_url":"https://avatars2.githubusercontent.com/u/6453360?v=4","gravatar_id":"","url":"https://api.github.com/users/initialcontext","html_url":"https://github.com/initialcontext","followers_url":"https://api.github.com/users/initialcontext/followers","following_url":"https://api.github.com/users/initialcontext/following{/other_user}","gists_url":"https://api.github.com/users/initialcontext/gists{/gist_id}","starred_url":"https://api.github.com/users/initialcontext/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/initialcontext/subscriptions","organizations_url":"https://api.github.com/users/initialcontext/orgs","repos_url":"https://api.github.com/users/initialcontext/repos","events_url":"https://api.github.com/users/initialcontext/events{/privacy}","received_events_url":"https://api.github.com/users/initialcontext/received_events","type":"User","site_admin":false},"created_at":"2017-04-05T17:40:02Z","updated_at":"2017-04-05T17:42:19Z","author_association":"NONE","body":"I hit the same issue where a large cardinality query took down my datanodes with similar stack trace on ES 5.2.2. `precision_threshold` was default (I think 3000) at the time:\r\n\r\n```\r\n[2017-04-04T00:10:50,663][INFO ][o.e.m.j.JvmGcMonitorService] [prod-esreqdata01] [gc][607212] overhead, spent [394ms] collecting in the last [1s]\r\n[2017-04-04T00:10:51,668][WARN ][o.e.m.j.JvmGcMonitorService] [prod-esreqdata01] [gc][607213] overhead, spent [778ms] collecting in the last [1s]\r\n[2017-04-04T00:10:52,739][WARN ][o.e.m.j.JvmGcMonitorService] [prod-esreqdata01] [gc][607214] overhead, spent [834ms] collecting in the last [1s]\r\n[2017-04-04T00:10:53,829][WARN ][o.e.m.j.JvmGcMonitorService] [prod-esreqdata01] [gc][607215] overhead, spent [866ms] collecting in the last [1s]\r\n[2017-04-04T00:10:54,880][WARN ][o.e.m.j.JvmGcMonitorService] [prod-esreqdata01] [gc][607216] overhead, spent [830ms] collecting in the last [1s]\r\n[2017-04-04T00:10:55,898][WARN ][o.e.m.j.JvmGcMonitorService] [prod-esreqdata01] [gc][607217] overhead, spent [800ms] collecting in the last [1s]\r\n[2017-04-04T00:10:59,469][WARN ][o.e.m.j.JvmGcMonitorService] [prod-esreqdata01] [gc][607218] overhead, spent [3.3s] collecting in the last [3.5s]\r\n[2017-04-04T00:11:02,521][WARN ][o.e.m.j.JvmGcMonitorService] [prod-esreqdata01] [gc][607219] overhead, spent [2.6s] collecting in the last [3s]\r\n[2017-04-04T00:11:04,885][WARN ][o.e.m.j.JvmGcMonitorService] [prod-esreqdata01] [gc][607220] overhead, spent [2.3s] collecting in the last [2.3s]\r\n[2017-04-04T00:11:09,888][WARN ][o.e.m.j.JvmGcMonitorService] [prod-esreqdata01] [gc][607221] overhead, spent [4.9s] collecting in the last [5s]\r\n[2017-04-04T00:11:14,921][WARN ][o.e.m.j.JvmGcMonitorService] [prod-esreqdata01] [gc][607222] overhead, spent [5s] collecting in the last [5s]\r\n[2017-04-04T00:11:20,792][ERROR][o.e.b.ElasticsearchUncaughtExceptionHandler] [prod-esreqdata01] fatal error in thread [elasticsearch[prod-esreqdata01][search][T#1]], exiting\r\njava.lang.OutOfMemoryError: Java heap space\r\n\tat org.elasticsearch.common.util.PageCacheRecycler$1.newInstance(PageCacheRecycler.java:99) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.common.util.PageCacheRecycler$1.newInstance(PageCacheRecycler.java:96) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.common.recycler.DequeRecycler.obtain(DequeRecycler.java:53) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.common.recycler.AbstractRecycler.obtain(AbstractRecycler.java:33) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.common.recycler.DequeRecycler.obtain(DequeRecycler.java:28) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.common.recycler.FilterRecycler.obtain(FilterRecycler.java:39) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.common.recycler.Recyclers$3.obtain(Recyclers.java:119) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.common.recycler.FilterRecycler.obtain(FilterRecycler.java:39) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.common.util.PageCacheRecycler.bytePage(PageCacheRecycler.java:147) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.common.util.AbstractBigArray.newBytePage(AbstractBigArray.java:112) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.common.util.BigByteArray.<init>(BigByteArray.java:44) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.common.util.BigArrays.newByteArray(BigArrays.java:464) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.common.util.BigArrays.resize(BigArrays.java:488) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.common.util.BigArrays.grow(BigArrays.java:502) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlus.ensureCapacity(HyperLogLogPlusPlus.java:197) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlus.collect(HyperLogLogPlusPlus.java:232) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityAggregator$OrdinalsCollector.postCollect(CardinalityAggregator.java:280) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityAggregator.postCollectLastCollector(CardinalityAggregator.java:120) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityAggregator.getLeafCollector(CardinalityAggregator.java:111) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.search.aggregations.AggregatorBase.getLeafCollector(AggregatorBase.java:149) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.search.aggregations.AggregatorBase.getLeafCollector(AggregatorBase.java:148) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.search.aggregations.AggregatorBase.getLeafCollector(AggregatorBase.java:41) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.apache.lucene.search.MultiCollector.getLeafCollector(MultiCollector.java:121) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.FilterCollector.getLeafCollector(FilterCollector.java:40) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.elasticsearch.search.query.CancellableCollector.getLeafCollector(CancellableCollector.java:61) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:660) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:473) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:379) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:106) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.indices.IndicesService.lambda$loadIntoContext$16(IndicesService.java:1108) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n\tat org.elasticsearch.indices.IndicesService$$Lambda$1716/2035669851.accept(Unknown Source) ~[?:?]\r\n\tat org.elasticsearch.indices.IndicesService.lambda$cacheShardLevelResult$18(IndicesService.java:1189) ~[elasticsearch-5.2.2.jar:5.2.2]\r\n[2017-04-04T00:18:15,117][INFO ][o.e.n.Node               ] [prod-esreqdata01] initializing ...\r\n```\r\n\r\nOur cluster is well resourced and handles large aggregations regularly (even setting aside that HyperLogLog isn't supposed to eat memory!) so I'm assuming we hit this bug.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/293599009","html_url":"https://github.com/elastic/elasticsearch/issues/21942#issuecomment-293599009","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21942","id":293599009,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzU5OTAwOQ==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2017-04-12T14:40:51Z","updated_at":"2017-04-12T14:40:51Z","author_association":"MEMBER","body":"Maybe we should revisit #19215","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/303392471","html_url":"https://github.com/elastic/elasticsearch/issues/21942#issuecomment-303392471","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21942","id":303392471,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMzM5MjQ3MQ==","user":{"login":"jhejl2","id":26970936,"node_id":"MDQ6VXNlcjI2OTcwOTM2","avatar_url":"https://avatars2.githubusercontent.com/u/26970936?v=4","gravatar_id":"","url":"https://api.github.com/users/jhejl2","html_url":"https://github.com/jhejl2","followers_url":"https://api.github.com/users/jhejl2/followers","following_url":"https://api.github.com/users/jhejl2/following{/other_user}","gists_url":"https://api.github.com/users/jhejl2/gists{/gist_id}","starred_url":"https://api.github.com/users/jhejl2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhejl2/subscriptions","organizations_url":"https://api.github.com/users/jhejl2/orgs","repos_url":"https://api.github.com/users/jhejl2/repos","events_url":"https://api.github.com/users/jhejl2/events{/privacy}","received_events_url":"https://api.github.com/users/jhejl2/received_events","type":"User","site_admin":false},"created_at":"2017-05-23T13:09:59Z","updated_at":"2017-05-23T13:40:41Z","author_association":"NONE","body":"I'm facing the same problem. Is there any update to this issue?\r\nBad aggs query literally really kill the cluster.\r\n\r\nTo add more informations. Limiting circuit breakers do not prevent from OOM:\r\n```\r\n{\r\n    \"transient\": {\r\n        \"indices.breaker.total.limit\": \"40%\",\r\n        \"indices.breaker.fielddata.limit\": \"10%\",\r\n        \"indices.breaker.request.limit\": \"10%\",\r\n        \"network.breaker.inflight_requests.limit\": \"30%\"\r\n    }\r\n}'\r\n```\r\nIt is a 40 data + 3 master + 3 client nodes cluster, each with 64GB RAM (31g reserved for a heap) and at least 8 cores of Intel E3-1275 v5.\r\nYes, there's a lot of data there (~40TB in 2700 shards, lots of logs) and the visualize query aggs do not contain `precision_threshold`, but I still think that it shouldn't kill the cluster with one query.\r\n\r\nWill lowering caches help? Currently I've got:\r\n\r\n```\r\nindices.memory.index_buffer_size: 30%\r\nindices.memory.min_index_buffer_size: 96mb\r\nindices.fielddata.cache.size: 15%\r\nindices.queries.cache.size: 15%\r\n```\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/374243590","html_url":"https://github.com/elastic/elasticsearch/issues/21942#issuecomment-374243590","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21942","id":374243590,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NDI0MzU5MA==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2018-03-19T15:02:33Z","updated_at":"2018-03-19T15:02:33Z","author_association":"CONTRIBUTOR","body":"cc @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/394502151","html_url":"https://github.com/elastic/elasticsearch/issues/21942#issuecomment-394502151","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21942","id":394502151,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NDUwMjE1MQ==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2018-06-04T21:15:50Z","updated_at":"2018-06-04T21:15:50Z","author_association":"MEMBER","body":"After conferring with @jimczi, this issue is probably resolved now.  The query in question was sorting by the cardinality, which was likely tripping the bug fixed in https://github.com/elastic/elasticsearch/pull/24941.","performed_via_github_app":null}]