{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/21906","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21906/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21906/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21906/events","html_url":"https://github.com/elastic/elasticsearch/issues/21906","id":192800919,"node_id":"MDU6SXNzdWUxOTI4MDA5MTk=","number":21906,"title":"Bug in _termvectors with artificial document?","user":{"login":"shaie","id":3469932,"node_id":"MDQ6VXNlcjM0Njk5MzI=","avatar_url":"https://avatars0.githubusercontent.com/u/3469932?v=4","gravatar_id":"","url":"https://api.github.com/users/shaie","html_url":"https://github.com/shaie","followers_url":"https://api.github.com/users/shaie/followers","following_url":"https://api.github.com/users/shaie/following{/other_user}","gists_url":"https://api.github.com/users/shaie/gists{/gist_id}","starred_url":"https://api.github.com/users/shaie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shaie/subscriptions","organizations_url":"https://api.github.com/users/shaie/orgs","repos_url":"https://api.github.com/users/shaie/repos","events_url":"https://api.github.com/users/shaie/events{/privacy}","received_events_url":"https://api.github.com/users/shaie/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2016-12-01T10:01:19Z","updated_at":"2018-02-14T13:44:08Z","closed_at":"2016-12-02T07:14:45Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I am using the `_termvectors` API with an artificial document, and I hit an inconsistent behavior, depending on which shard the request hits. Below I attach reproducing steps, but let me first explain what I do: I create an index with two shards and index one document with one field and the value \"one one\". When I request the term vectors of that document with `term_statistics`, I get `ttf=2` as expected. At this point I know that one shard contains the document, and the other shard has no documents at all.\r\n\r\nWhen I submit a `_termvectors` request with an artificial document with the field `text:one`, then if the request hits the shard that holds the indexed document, I get back `ttf=2` which is expected. But if it hits the shard without any documents, it returns `ttf=1` which is confusing.\r\n\r\nMore so, if I send an artificial document with the field `text:two` (NOTE: two does not exist in any of the shards!), then the response is similar -- if the query hits the shard without any documents, it returns `ttf=1`, while if it hits the shard with the one indexed document, it does not return `ttf` at all (which is expected).\r\n\r\nHere are the steps to reproduce:\r\n\r\n**Create the index**\r\n```curl -XPUT 'localhost:9200/tv_bug' -d'\r\n{\r\n  \"mappings\": {\r\n    \"doc\": {\r\n      \"properties\": {\r\n        \"text\" : {\r\n          \"type\": \"text\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"settings\" : {\r\n    \"index\" : {\r\n      \"number_of_shards\" : 2,\r\n      \"number_of_replicas\" : 0\r\n    }\r\n  }\r\n}'\r\n```\r\n\r\n**Index one document**\r\n```\r\ncurl -XPUT 'http://localhost:9200/tv_bug/doc/1?pretty=true' -d '{\r\n  \"text\" : \"one one\"\r\n}'\r\n```\r\n\r\n**Verify the document exists in one shard**\r\n```\r\ncurl -XGET 'http://localhost:9200/tv_bug/doc/_search?preference=_shards:0&pretty=true'\r\ncurl -XGET 'http://localhost:9200/tv_bug/doc/_search?preference=_shards:1&pretty=true'\r\n```\r\nOne of those requests will return 0 hits, the other 1 (in my case shard 0 did not return the hit)\r\n\r\n**Get the Term Vectors of that one document**\r\n```\r\ncurl -XGET 'http://localhost:9200/tv_bug/doc/1/_termvectors?pretty=true' -d '{\r\n  \"fields\": [\"text\"],\r\n  \"term_statistics\" : true\r\n}'\r\n```\r\n\r\n**Get the TV of 'one' using an artificial document**\r\n\r\n***From shard 0***\r\n```\r\ncurl -XGET 'http://localhost:9200/tv_bug/doc/_termvectors?preference=_shards:0&pretty=true' -d '{\r\n  \"term_statistics\" : true,\r\n  \"doc\" : {\r\n    \"text\" : \"one\"\r\n  }\r\n}'\r\n```\r\n\r\n***From shard 1***\r\n```\r\ncurl -XGET 'http://localhost:9200/tv_bug/doc/_termvectors?preference=_shards:1&pretty=true' -d '{\r\n  \"term_statistics\" : true,\r\n  \"doc\" : {\r\n    \"text\" : \"one\"\r\n  }\r\n}'\r\n```\r\n\r\nIn my case, shard 0 returns `ttf=1` and shard 1 returns `ttf=2` (expected). Also, if you send the word \"two\" instead, you will see that shard 1 does not return `ttf` at all (expected), but shard 0 returns `ttf=1`.\r\n\r\nBTW, and this may be a different bug report, when I send the TV requests with the `preference` parameter, I sometimes receive this error:\r\n\r\n```\r\n{\r\n  \"error\" : {\r\n    \"root_cause\" : [\r\n      {\r\n        \"type\" : \"remote_transport_exception\",\r\n        \"reason\" : \"[C-N1Zbn][127.0.0.1:9300][indices:data/read/tv[s]]\"\r\n      }\r\n    ],\r\n    \"type\" : \"null_pointer_exception\",\r\n    \"reason\" : null\r\n  },\r\n  \"status\" : 500\r\n}\r\n```\r\n\r\nSubmitting the request multiple times eventually succeeds.","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}