{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/28885","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28885/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28885/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28885/events","html_url":"https://github.com/elastic/elasticsearch/issues/28885","id":301833899,"node_id":"MDU6SXNzdWUzMDE4MzM4OTk=","number":28885,"title":"Using Java High Level Rest client does not auto-retry Bulk requests","user":{"login":"jdewald","id":31347,"node_id":"MDQ6VXNlcjMxMzQ3","avatar_url":"https://avatars2.githubusercontent.com/u/31347?v=4","gravatar_id":"","url":"https://api.github.com/users/jdewald","html_url":"https://github.com/jdewald","followers_url":"https://api.github.com/users/jdewald/followers","following_url":"https://api.github.com/users/jdewald/following{/other_user}","gists_url":"https://api.github.com/users/jdewald/gists{/gist_id}","starred_url":"https://api.github.com/users/jdewald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdewald/subscriptions","organizations_url":"https://api.github.com/users/jdewald/orgs","repos_url":"https://api.github.com/users/jdewald/repos","events_url":"https://api.github.com/users/jdewald/events{/privacy}","received_events_url":"https://api.github.com/users/jdewald/received_events","type":"User","site_admin":false},"labels":[{"id":493198109,"node_id":"MDU6TGFiZWw0OTMxOTgxMDk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Java%20High%20Level%20REST%20Client","name":":Core/Features/Java High Level REST Client","color":"0e8a16","default":false,"description":"Expressive Java Client for Elasticsearch"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-03-02T16:55:28Z","updated_at":"2018-05-09T18:38:08Z","closed_at":"2018-05-09T12:27:59Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):\r\nTested on both 5.6 and 6.2\r\n\r\n**Plugins installed**: [ None ]\r\n\r\n**JVM version** (`java -version`): 1.8.0_31-b13 \r\n\r\n**OS version** (`uname -a` if on a Unix-like system): Using the Dockerized version from https://quay.io/repository/pires/docker-elasticsearch\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n(This is pretty much just a copy of my original description at: https://discuss.elastic.co/t/using-java-high-level-rest-client-does-not-auto-retry-bulk-requests/121724)\r\n\r\nIf the `BulkProcessor` is made to use the High Level Rest Client to issue requests, it is unable to issue retries even though it passes through the `Retry` handler's `canRetry` logic\r\n\r\n**Steps to reproduce**:\r\n\r\n1. Create an index in ES\r\n\r\n1. Configure the thread_pool to limit the bulk requests and make more likely a rejection. In my case I used a very small queue size of 2\r\n\r\n1. To demonstrate \"expected\" functionality, create a `BulkProcessor` which submits requests using `TransportClient`\r\n\r\n`BulkProcessor.builder(client, listener);`\r\n\r\n1. Submit requests which result in rejection. You will find that the resulting `BulkResponse` does not contain failures (unless `BackoffPolicy` was exhausted), however querying the /_cat/thread_pool will show rejections, and the document count should have went up based on the total submitted, indicating all documents eventually made it via retries. \r\n\r\n1. Create a BulkProcessor which submits requests using the High Level Rest client's client.bulkAsyncmethod:\r\n\r\n     ```java\r\n      BulkProcessor.Builder builder(BulkProcessor.Listener listener) {\r\n          return BulkProcessor.builder(client::bulkAsync, listener);\r\n     }\r\n\r\n1. Submit requests at a rate to create rejection \r\n\r\n1. Perform the same set of inserts, you will find that the `BulkResponse` contains failures and the individual `Failure` objects have an ElasticsearchException which contain \"type=es_rejected_execution_exception\"\r\n\r\n**Additional Notes**\r\nI think the \"root\" cause is that with the High Level Rest Client, the `ElasticsearchException` that is extracted is not one of the sub-types such as `EsRejectedExceptionException` (_this is actually documented behavior in the `fromXContent` method of ElasticsearchException_)\r\n\r\nI made a naive attempt to modify `fromXContent` to return the correct typed `ElasticsearchException`, but in its current form this results in a deadlock during retry attempts due (I think) to the synchronization that occurs in `BulkProcessor`. You can make it work by setting high enough concurrency but this is a workaround. \r\n\r\nProbably not relevant (except for anyone that might stumble on this same issue): We are using Apache Flink with an Elasticsearch sink. We identified this issue during attempts to upgrade from ES 5.6 to 6.2 to get additional features. However Flink's pending ES6 support is High Level Rest client based, and does not include TransportClient support for 6.2. It has code attempting to perform retries but it is never triggered due to the same issue with typed exceptions (and in fact, would deadlock in any case). \r\n\r\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}