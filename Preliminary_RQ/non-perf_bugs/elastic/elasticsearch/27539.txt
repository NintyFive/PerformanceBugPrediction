{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/27539","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27539/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27539/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27539/events","html_url":"https://github.com/elastic/elasticsearch/issues/27539","id":277056727,"node_id":"MDU6SXNzdWUyNzcwNTY3Mjc=","number":27539,"title":"Multi Index Phrase Suggestions return only suggestions from single index ","user":{"login":"psytraxx","id":3626042,"node_id":"MDQ6VXNlcjM2MjYwNDI=","avatar_url":"https://avatars2.githubusercontent.com/u/3626042?v=4","gravatar_id":"","url":"https://api.github.com/users/psytraxx","html_url":"https://github.com/psytraxx","followers_url":"https://api.github.com/users/psytraxx/followers","following_url":"https://api.github.com/users/psytraxx/following{/other_user}","gists_url":"https://api.github.com/users/psytraxx/gists{/gist_id}","starred_url":"https://api.github.com/users/psytraxx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/psytraxx/subscriptions","organizations_url":"https://api.github.com/users/psytraxx/orgs","repos_url":"https://api.github.com/users/psytraxx/repos","events_url":"https://api.github.com/users/psytraxx/events{/privacy}","received_events_url":"https://api.github.com/users/psytraxx/received_events","type":"User","site_admin":false},"labels":[{"id":146833729,"node_id":"MDU6TGFiZWwxNDY4MzM3Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Suggesters","name":":Search/Suggesters","color":"0e8a16","default":false,"description":"\"Did you mean\" and suggestions as you type"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-11-27T15:25:01Z","updated_at":"2017-12-01T15:32:19Z","closed_at":"2017-12-01T08:49:06Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version**  5.5.3\r\n\r\n**Plugins installed**:  none\r\n\r\n**JVM version** standard docker image\r\n\r\n**OS version** standard docker image\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nSetup multiple indicies using a commonly shared field used for phrase suggestions \r\n\r\nExpected result:\r\n\r\nsuggestions are returned based on data in each index.\r\n\r\nActual result.\r\n\r\nonly suggestions from one index are returned\r\n\r\n\r\n**Steps to reproduce**:\r\n\r\nsetup a indexed property with a trigram field based on the example on the elastic website\r\n(we use nest)\r\n\r\nmapping field\r\n\r\n                        .Text(t => t\r\n                            .Name(\"searchName\")\r\n                            .Analyzer(GetLocalizedAnalyzerName(\"name\", languageId))\r\n                            .Fields(f => f.Text(x => x.Name(\"trigram\").Analyzer(\"trigram\"))))\r\n\r\n\r\nwe then use a  search template which contains the following code for the suggestion\r\n\r\n\r\n ```\r\n\"suggest\": {\r\n\t  \"text\": \"{{search}}\",\r\n\t  \"brand\": {\r\n\t\t\"phrase\": {\r\n\t\t  \"field\": \"searchName\",\r\n\t\t  \"size\": 1,\r\n\t\t  \"gram_size\": 1,\r\n\t\t  \"direct_generator\": [\r\n\t\t\t{\r\n\t\t\t  \"field\": \"searchName.trigram\",\r\n\t\t\t  \"suggest_mode\": \"always\"\r\n\t\t\t}\r\n\t\t  ],\r\n\t\t\"highlight\": {\r\n\t\t  \"pre_tag\": \"<em>\",\r\n\t\t  \"post_tag\": \"</em>\"\r\n\t\t}{{#portalId}},\r\n\t\t  \"collate\": {\r\n\t\t\t\"query\": {\r\n\t\t\t  \"inline\": {\r\n\t\t\t\t\"bool\": {\r\n\t\t\t\t  \"must\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t  \"term\": {\r\n\t\t\t\t\t\t\"suggestionContext\": \"{{portalId}}_brand\"\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t}\r\n\t\t\t\t  ]\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t\t\"params\": {\r\n\t\t\t  \"portalId\": {{portalId}}\r\n\t\t\t}\r\n\t\t  }{{/portalId}}\r\n\t\t}\r\n\t  },\r\n```\r\n\r\nwe do a templat query in the form of \r\n\r\n var indexName = clientService.GetSearchIndexNameWildcard(); // returns something like shopsearch_9_*\r\n\r\n            var templateName = clientService.GetEnterSearchTemplateName();\r\n\r\n            var searchTemplateRequest = CreateSearchTemplateRequest(\r\n                searchParameters,\r\n                indexName: indexName,\r\n                templateName: templateName,\r\n                searchString: searchString);\r\n            \r\n            var elasticClient = clientService.GetElasticClient();\r\n\r\n            return elasticClient.SearchTemplateAsync<VoidResponse>(searchTemplateRequest, cancellationToken);\r\n","closed_by":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}