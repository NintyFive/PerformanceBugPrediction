[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31451844","html_url":"https://github.com/elastic/elasticsearch/issues/4542#issuecomment-31451844","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4542","id":31451844,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNDUxODQ0","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-01-02T13:14:04Z","updated_at":"2014-01-02T13:14:04Z","author_association":"CONTRIBUTOR","body":"What about `_version`, `_timestamp` etc, where we know they are single-valued fields?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31451874","html_url":"https://github.com/elastic/elasticsearch/issues/4542#issuecomment-31451874","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4542","id":31451874,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNDUxODc0","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2014-01-02T13:14:52Z","updated_at":"2014-01-02T13:14:52Z","author_association":"MEMBER","body":"good Q..., `_routing` also...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31451958","html_url":"https://github.com/elastic/elasticsearch/issues/4542#issuecomment-31451958","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4542","id":31451958,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNDUxOTU4","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2014-01-02T13:16:49Z","updated_at":"2014-01-02T13:16:49Z","author_association":"MEMBER","body":"I lean towards having the same behaviour for both json and metadata fields for consistency.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31453288","html_url":"https://github.com/elastic/elasticsearch/issues/4542#issuecomment-31453288","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4542","id":31453288,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNDUzMjg4","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-01-02T13:48:25Z","updated_at":"2014-01-02T13:48:25Z","author_association":"CONTRIBUTOR","body":"Hmmm, not so sure... \n\nFor stored fields (or extracted from source) we don't know if they are single or multi-valued, so there it feels right to default to arrays. But for metadata fields, returning these values as an array starts to feel like a lot of overhead. We know and the user knows that these are always single-valued fields, and it feels cleaner to treat them as such.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31453356","html_url":"https://github.com/elastic/elasticsearch/issues/4542#issuecomment-31453356","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4542","id":31453356,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNDUzMzU2","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2014-01-02T13:50:09Z","updated_at":"2014-01-02T13:50:09Z","author_association":"MEMBER","body":"I'm okay with this exception to the rule, I'll update the issue description.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31453587","html_url":"https://github.com/elastic/elasticsearch/issues/4542#issuecomment-31453587","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4542","id":31453587,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNDUzNTg3","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2014-01-02T13:54:37Z","updated_at":"2014-01-02T13:54:56Z","author_association":"MEMBER","body":"++, agreed. I would love to eventually also have an \"_source + all_metadata\" option, since it is needed when reindexing for example (since the routing doesn't have to be part of the _source). This can be a different issue though.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31461428","html_url":"https://github.com/elastic/elasticsearch/issues/4542#issuecomment-31461428","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4542","id":31461428,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNDYxNDI4","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-01-02T15:57:43Z","updated_at":"2014-01-02T15:57:43Z","author_association":"CONTRIBUTOR","body":"++ agreed re source and all metadata!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/36090039","html_url":"https://github.com/elastic/elasticsearch/issues/4542#issuecomment-36090039","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4542","id":36090039,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDkwMDM5","user":{"login":"ehsanul","id":49203,"node_id":"MDQ6VXNlcjQ5MjAz","avatar_url":"https://avatars0.githubusercontent.com/u/49203?v=4","gravatar_id":"","url":"https://api.github.com/users/ehsanul","html_url":"https://github.com/ehsanul","followers_url":"https://api.github.com/users/ehsanul/followers","following_url":"https://api.github.com/users/ehsanul/following{/other_user}","gists_url":"https://api.github.com/users/ehsanul/gists{/gist_id}","starred_url":"https://api.github.com/users/ehsanul/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ehsanul/subscriptions","organizations_url":"https://api.github.com/users/ehsanul/orgs","repos_url":"https://api.github.com/users/ehsanul/repos","events_url":"https://api.github.com/users/ehsanul/events{/privacy}","received_events_url":"https://api.github.com/users/ehsanul/received_events","type":"User","site_admin":false},"created_at":"2014-02-26T04:33:07Z","updated_at":"2014-02-26T04:37:59Z","author_association":"NONE","body":"This was a breaking change for 1.0, but was unfortunately not mentioned in the breaking changes section of the manual. Our application relied on getting back the fields as the same type they were stored as originally in the _source, but getting back an array with a single result broke that assumption.\n\nNot sure about the best way to prevent this breakage, without trying to handle this in the application wherever we've used `fields` options. @Mpdreamz [mentioned](https://github.com/Mpdreamz/NEST/issues/481#issuecomment-35765858) using the [includes / excludes](http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/mapping-source-field.html#include-exclude) option for fields mapping, but I'm unsure how that works.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/36090320","html_url":"https://github.com/elastic/elasticsearch/issues/4542#issuecomment-36090320","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4542","id":36090320,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDkwMzIw","user":{"login":"ehsanul","id":49203,"node_id":"MDQ6VXNlcjQ5MjAz","avatar_url":"https://avatars0.githubusercontent.com/u/49203?v=4","gravatar_id":"","url":"https://api.github.com/users/ehsanul","html_url":"https://github.com/ehsanul","followers_url":"https://api.github.com/users/ehsanul/followers","following_url":"https://api.github.com/users/ehsanul/following{/other_user}","gists_url":"https://api.github.com/users/ehsanul/gists{/gist_id}","starred_url":"https://api.github.com/users/ehsanul/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ehsanul/subscriptions","organizations_url":"https://api.github.com/users/ehsanul/orgs","repos_url":"https://api.github.com/users/ehsanul/repos","events_url":"https://api.github.com/users/ehsanul/events{/privacy}","received_events_url":"https://api.github.com/users/ehsanul/received_events","type":"User","site_admin":false},"created_at":"2014-02-26T04:40:47Z","updated_at":"2014-02-26T04:40:47Z","author_association":"NONE","body":"Oh, I think I see. The link was to the source mapping, but I'm guessing I just want to use [source filtering](http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-request-source-filtering.html) here.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/36101887","html_url":"https://github.com/elastic/elasticsearch/issues/4542#issuecomment-36101887","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4542","id":36101887,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTAxODg3","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2014-02-26T08:28:14Z","updated_at":"2014-02-26T08:28:14Z","author_association":"MEMBER","body":"Hi @ehsanul , the breaking change is mentioned [here](http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/_return_values.html). You should indeed switch to source filtering, which is meant to extract portions of the `_source` and is more flexible as well.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/36191817","html_url":"https://github.com/elastic/elasticsearch/issues/4542#issuecomment-36191817","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4542","id":36191817,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTkxODE3","user":{"login":"ehsanul","id":49203,"node_id":"MDQ6VXNlcjQ5MjAz","avatar_url":"https://avatars0.githubusercontent.com/u/49203?v=4","gravatar_id":"","url":"https://api.github.com/users/ehsanul","html_url":"https://github.com/ehsanul","followers_url":"https://api.github.com/users/ehsanul/followers","following_url":"https://api.github.com/users/ehsanul/following{/other_user}","gists_url":"https://api.github.com/users/ehsanul/gists{/gist_id}","starred_url":"https://api.github.com/users/ehsanul/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ehsanul/subscriptions","organizations_url":"https://api.github.com/users/ehsanul/orgs","repos_url":"https://api.github.com/users/ehsanul/repos","events_url":"https://api.github.com/users/ehsanul/events{/privacy}","received_events_url":"https://api.github.com/users/ehsanul/received_events","type":"User","site_admin":false},"created_at":"2014-02-26T23:34:56Z","updated_at":"2014-02-26T23:34:56Z","author_association":"NONE","body":"Ah, I must have not read that closely enough, my apologies. Thanks for the confirmation, I will give source filtering a shot!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/36954711","html_url":"https://github.com/elastic/elasticsearch/issues/4542#issuecomment-36954711","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4542","id":36954711,"node_id":"MDEyOklzc3VlQ29tbWVudDM2OTU0NzEx","user":{"login":"nemosupremo","id":940094,"node_id":"MDQ6VXNlcjk0MDA5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/940094?v=4","gravatar_id":"","url":"https://api.github.com/users/nemosupremo","html_url":"https://github.com/nemosupremo","followers_url":"https://api.github.com/users/nemosupremo/followers","following_url":"https://api.github.com/users/nemosupremo/following{/other_user}","gists_url":"https://api.github.com/users/nemosupremo/gists{/gist_id}","starred_url":"https://api.github.com/users/nemosupremo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nemosupremo/subscriptions","organizations_url":"https://api.github.com/users/nemosupremo/orgs","repos_url":"https://api.github.com/users/nemosupremo/repos","events_url":"https://api.github.com/users/nemosupremo/events{/privacy}","received_events_url":"https://api.github.com/users/nemosupremo/received_events","type":"User","site_admin":false},"created_at":"2014-03-07T00:20:31Z","updated_at":"2014-03-07T06:54:41Z","author_association":"NONE","body":"This is probably a done deal and forgive my ignorance on the subject / elasticsearch. I am using ES as my single datastore, and I have relatively large `_source` objects (a single field has up to 256kb, the rest are tiny). However when I want to query objects, I don't need that field so I `_source_exclude` it.\n\nThe problem is compared using `_source_exclude` is slow (I'd imagine because you have to parse the JSON object), and when making a query for 500+ objects at time, I see query times jump from 5-15ms on average to 800-1400ms. I also only have less than 10,000 objects (a tiny database).\n\nThe solution I came up with was to store the fields I need in the index, then return those with the fields parameter - and it works, the queries are back down 5-15ms range and only I have the data I need.\n\nNow I don't know how common my use case is, but having to deal with the array is bothering and in my specific use case, in Go, it means having two struct definitions - 1 for the `fields` field that handles arrays, and another for everything else (getting/putting/etc.)\n\n**Edit**: I'm not sure if you wish to tackle this use case, but with large `_source` fields, `_source_exclude` can cripple a query. Making a query with 100 results on my local macbook air (no network latency) gives me ~5ms with `_source=false`, ~200ms with `_source=true` (the response size is over 100M), ~160ms for `_source=true&fields=subject,date,etc` and 30000ms for `_source_exclude=ast` - over 150x slower (and understandably so, from my understanding to exclude the fields, you need to parse and then reserialize the whole JSON object). \n\nThe reason I am asking for greater flexibility over the `fields` property is it allows me to store all my data in ES and have quicker access to fields I need in the source without parsing the `_source`. Now I'm new to ES and I'm not sure my use case common, or if I am properly using ES but I thought it would be useful to present it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/37246897","html_url":"https://github.com/elastic/elasticsearch/issues/4542#issuecomment-37246897","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4542","id":37246897,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MjQ2ODk3","user":{"login":"ajhalani","id":1163503,"node_id":"MDQ6VXNlcjExNjM1MDM=","avatar_url":"https://avatars3.githubusercontent.com/u/1163503?v=4","gravatar_id":"","url":"https://api.github.com/users/ajhalani","html_url":"https://github.com/ajhalani","followers_url":"https://api.github.com/users/ajhalani/followers","following_url":"https://api.github.com/users/ajhalani/following{/other_user}","gists_url":"https://api.github.com/users/ajhalani/gists{/gist_id}","starred_url":"https://api.github.com/users/ajhalani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ajhalani/subscriptions","organizations_url":"https://api.github.com/users/ajhalani/orgs","repos_url":"https://api.github.com/users/ajhalani/repos","events_url":"https://api.github.com/users/ajhalani/events{/privacy}","received_events_url":"https://api.github.com/users/ajhalani/received_events","type":"User","site_admin":false},"created_at":"2014-03-10T23:20:00Z","updated_at":"2014-03-10T23:22:05Z","author_association":"NONE","body":"Upgrading to v1.0.x and just ran into this change. I am worried once we switch to source filtering and in future decide to store fields for performance reasons, it's going to be very difficult to switch back to \"fields\" because of the inconsistency of returning non-array fields as array. \n\nMaybe we could have a field level option like allow_array:true|false (defaults to true), which if set to false allows to index/returns only non-array value so users can switch from source filtering to fields w/o breaking their code. Just an idea from top of my head, I am sure there may be better ways. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/39059863","html_url":"https://github.com/elastic/elasticsearch/issues/4542#issuecomment-39059863","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4542","id":39059863,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MDU5ODYz","user":{"login":"seti123","id":2937597,"node_id":"MDQ6VXNlcjI5Mzc1OTc=","avatar_url":"https://avatars3.githubusercontent.com/u/2937597?v=4","gravatar_id":"","url":"https://api.github.com/users/seti123","html_url":"https://github.com/seti123","followers_url":"https://api.github.com/users/seti123/followers","following_url":"https://api.github.com/users/seti123/following{/other_user}","gists_url":"https://api.github.com/users/seti123/gists{/gist_id}","starred_url":"https://api.github.com/users/seti123/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/seti123/subscriptions","organizations_url":"https://api.github.com/users/seti123/orgs","repos_url":"https://api.github.com/users/seti123/repos","events_url":"https://api.github.com/users/seti123/events{/privacy}","received_events_url":"https://api.github.com/users/seti123/received_events","type":"User","site_admin":false},"created_at":"2014-03-31T07:23:18Z","updated_at":"2014-03-31T07:24:26Z","author_association":"NONE","body":"+1 We have to change whole application and check where we query with fields and handle array instead of value. Please note it is a lot of work to check all places in ES Applications if a field query is used, and changing handling of results. This delays all my projects.\n\nIs there any option to switch it OFF - so that single values are NOT returned as array? Is there an option in the node.js elastic search client to convert it? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/39061129","html_url":"https://github.com/elastic/elasticsearch/issues/4542#issuecomment-39061129","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4542","id":39061129,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MDYxMTI5","user":{"login":"seti123","id":2937597,"node_id":"MDQ6VXNlcjI5Mzc1OTc=","avatar_url":"https://avatars3.githubusercontent.com/u/2937597?v=4","gravatar_id":"","url":"https://api.github.com/users/seti123","html_url":"https://github.com/seti123","followers_url":"https://api.github.com/users/seti123/followers","following_url":"https://api.github.com/users/seti123/following{/other_user}","gists_url":"https://api.github.com/users/seti123/gists{/gist_id}","starred_url":"https://api.github.com/users/seti123/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/seti123/subscriptions","organizations_url":"https://api.github.com/users/seti123/orgs","repos_url":"https://api.github.com/users/seti123/repos","events_url":"https://api.github.com/users/seti123/events{/privacy}","received_events_url":"https://api.github.com/users/seti123/received_events","type":"User","site_admin":false},"created_at":"2014-03-31T07:44:29Z","updated_at":"2014-03-31T07:44:29Z","author_association":"NONE","body":"Please note, I'm talking about the REST interface (I don't care about internal structure in ES, but if I store single field I expect to get the same back ...). Since a week we put code like (typeof doc.fields.xx == Array) //es 1.x then doc.fields.xx = doc.fields.xx[0] all around in our applications. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/39061295","html_url":"https://github.com/elastic/elasticsearch/issues/4542#issuecomment-39061295","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4542","id":39061295,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MDYxMjk1","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2014-03-31T07:47:19Z","updated_at":"2014-03-31T07:47:19Z","author_association":"MEMBER","body":"@seti123 now in 1.0 the response is much more consistent, though for rarer cases, but if you had single value vs. multiple values, you would have had to check it as well, worse when it was doing the _source extraction compared to stored fields, in which case the format was broken for different type of structures between _source and stored fields. Now, it only handles stored fields, and its much more consistent in returning an array of \"core\" values always.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/39061869","html_url":"https://github.com/elastic/elasticsearch/issues/4542#issuecomment-39061869","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4542","id":39061869,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MDYxODY5","user":{"login":"seti123","id":2937597,"node_id":"MDQ6VXNlcjI5Mzc1OTc=","avatar_url":"https://avatars3.githubusercontent.com/u/2937597?v=4","gravatar_id":"","url":"https://api.github.com/users/seti123","html_url":"https://github.com/seti123","followers_url":"https://api.github.com/users/seti123/followers","following_url":"https://api.github.com/users/seti123/following{/other_user}","gists_url":"https://api.github.com/users/seti123/gists{/gist_id}","starred_url":"https://api.github.com/users/seti123/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/seti123/subscriptions","organizations_url":"https://api.github.com/users/seti123/orgs","repos_url":"https://api.github.com/users/seti123/repos","events_url":"https://api.github.com/users/seti123/events{/privacy}","received_events_url":"https://api.github.com/users/seti123/received_events","type":"User","site_admin":false},"created_at":"2014-03-31T07:56:35Z","updated_at":"2014-03-31T07:56:35Z","author_association":"NONE","body":"Ok, I understand and we started already to do the changes. I think its more a business discussion, we have a product in evaluation by customers, for some other reason we had to update to 1.x (now to 1.1) - and all the effort delayed it. \nBack to the technical part: is there a way around, can we change mapping (e.g. declare all relevant fields used in Report and UI as \"stored\" and it will not be wrapped to \"[]\" ? ). Could somebody pls. advise on it. \n","performed_via_github_app":null}]