[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/166740063","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-166740063","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":166740063,"node_id":"MDEyOklzc3VlQ29tbWVudDE2Njc0MDA2Mw==","user":{"login":"zygfryd","id":654634,"node_id":"MDQ6VXNlcjY1NDYzNA==","avatar_url":"https://avatars1.githubusercontent.com/u/654634?v=4","gravatar_id":"","url":"https://api.github.com/users/zygfryd","html_url":"https://github.com/zygfryd","followers_url":"https://api.github.com/users/zygfryd/followers","following_url":"https://api.github.com/users/zygfryd/following{/other_user}","gists_url":"https://api.github.com/users/zygfryd/gists{/gist_id}","starred_url":"https://api.github.com/users/zygfryd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zygfryd/subscriptions","organizations_url":"https://api.github.com/users/zygfryd/orgs","repos_url":"https://api.github.com/users/zygfryd/repos","events_url":"https://api.github.com/users/zygfryd/events{/privacy}","received_events_url":"https://api.github.com/users/zygfryd/received_events","type":"User","site_admin":false},"created_at":"2015-12-22T21:51:36Z","updated_at":"2015-12-22T21:57:20Z","author_association":"NONE","body":"Seems like removing support for types would be blocked on https://github.com/elastic/elasticsearch/issues/11432.\n\nIt'd be lovely if this accelerated parent-child relations across indexes though, that'd get rid of a lot of the aforementioned sparsity.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/166740928","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-166740928","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":166740928,"node_id":"MDEyOklzc3VlQ29tbWVudDE2Njc0MDkyOA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2015-12-22T21:56:20Z","updated_at":"2015-12-22T21:56:20Z","author_association":"CONTRIBUTOR","body":"What about divorcing mappings from types? Make mappings an index level feature and types just kind of like part of the id? Would that make them light enough to not get in the way?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/166752890","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-166752890","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":166752890,"node_id":"MDEyOklzc3VlQ29tbWVudDE2Njc1Mjg5MA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-12-22T22:38:30Z","updated_at":"2015-12-22T22:38:30Z","author_association":"CONTRIBUTOR","body":"@zygfryd indeed\n\n@nik9000 That is an option too. At least it would make clear that there is a single mapping per index and we could stimplify the internals. With this option, I guess types would remain as first-class filters only (eg. we could do index sorting on _type so that filtering on them would be faster)?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/166753207","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-166753207","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":166753207,"node_id":"MDEyOklzc3VlQ29tbWVudDE2Njc1MzIwNw==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2015-12-22T22:40:31Z","updated_at":"2015-12-22T22:40:31Z","author_association":"CONTRIBUTOR","body":"> types would remain as first-class filters only\n\nI'd be fine with that.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/168212042","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-168212042","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":168212042,"node_id":"MDEyOklzc3VlQ29tbWVudDE2ODIxMjA0Mg==","user":{"login":"Mogztter","id":333276,"node_id":"MDQ6VXNlcjMzMzI3Ng==","avatar_url":"https://avatars3.githubusercontent.com/u/333276?v=4","gravatar_id":"","url":"https://api.github.com/users/Mogztter","html_url":"https://github.com/Mogztter","followers_url":"https://api.github.com/users/Mogztter/followers","following_url":"https://api.github.com/users/Mogztter/following{/other_user}","gists_url":"https://api.github.com/users/Mogztter/gists{/gist_id}","starred_url":"https://api.github.com/users/Mogztter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mogztter/subscriptions","organizations_url":"https://api.github.com/users/Mogztter/orgs","repos_url":"https://api.github.com/users/Mogztter/repos","events_url":"https://api.github.com/users/Mogztter/events{/privacy}","received_events_url":"https://api.github.com/users/Mogztter/received_events","type":"User","site_admin":false},"created_at":"2015-12-31T15:38:44Z","updated_at":"2015-12-31T15:38:44Z","author_association":"CONTRIBUTOR","body":"I think divorcing mappings from types is a good idea. In my opinion, removing types is too radical.\n\nIn our use case (logs management) we have 80+ types of logs and we use a (daily, weekly or monthly) index per project/tenant to be able to handle the load.\nWe do have a different mappings for each type of logs but mappings are identical across all indices.\n\n> In addition types encourage sparsity and sparse fields cause Lucene to either be slow when there is a special impl for the sparse case (eg. doc values) or use tremendous memory and disk space in spite of the fact that few documents have a value (eg. norms, because a fixed amount of memory is used for every doc, regardless of whether they have a value for this field or not).\n\nIf I read you correctly, we should instead use one index per log type ? \nIn our use case we have different needs for each project/tenant. Some projects can log as much as 5K logs/sec while others projects only log 10 logs/sec.\nSo we need to be able to configure replicas/shards and index creation frequency (daily, weekly, monthly...) per project/tenant.\n\nCould you please explain a little bit more your proposal with this use case and with types removed ?\n\n> Make mappings an index level feature \n\n:+1:\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/222552862","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-222552862","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":222552862,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMjU1Mjg2Mg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-05-30T20:49:14Z","updated_at":"2016-05-30T20:49:14Z","author_association":"CONTRIBUTOR","body":"> If I read you correctly, we should instead use one index per log type ? \n\nYes. Types are trappy: at first sight they look like an efficient way to have multiple tenants in a single index, but in practice this usually makes things _worse_ than having multiple indices due to the fact that Lucene likes dense data better than sparse data, especially for norms and doc values.\n\nIf some tenants have lower indexing rates, they would get fewer shards and/or longer time frames (eg. weekly indices instead of daily).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/222553336","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-222553336","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":222553336,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMjU1MzMzNg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-05-30T20:54:09Z","updated_at":"2016-05-30T20:54:09Z","author_association":"CONTRIBUTOR","body":"I first thought divorcing types from mappings would be a good compromise, but types have another issue that they force us to fold the type into the uid, which typically either makes the _uid less efficient (slower indexing and slower gets) if we prepend the type (like today) or more space-intensive if we append the type. So I think we should think about getting rid of types entirely. For instance, maybe we could consider enforcing a single type per index in version X, with APIs still working with either `index/type` or just `index`, and then removing types entirely in version X+1?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/222610422","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-222610422","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":222610422,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMjYxMDQyMg==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-05-31T07:18:02Z","updated_at":"2016-05-31T07:18:02Z","author_association":"CONTRIBUTOR","body":"I think we should deprecate type in 5.0 and start moving towards index level mappings, uuid per index not per type etc. If somebody really needs the type in the UUID they can still do that I guess. Types can be build on top of es without native support, there is nothing today that prevents you from doing this. It rather complicates things on all end internally without real benefit to the outsite except of the first level API support that someone might find useful but is only syntactic sugar with a potential high price to pay. I am also +1 to remove this in 6.0 entirely and guide folks how to do it correctly.  \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/223228121","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-223228121","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":223228121,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMzIyODEyMQ==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2016-06-02T08:29:01Z","updated_at":"2016-08-05T15:32:54Z","author_association":"MEMBER","body":"The main concern I have for now is the support of the parent/child feature.\nToday we need to have colocated data within the same shard for parent and children in order to perform joins in memory.\n\nRemoving types will only allow to do parent/child using the same \"kind\" of document.\n\nNot super terrible as at the end of the day this is what is happening behind the scene.\n\nSo if we had:\n\n```\nPUT index/company/1\n{\n  \"name\": \"elastic\"\n}\nPUT index/employee/11?parent=1\n{\n  \"first_name\": \"david\"\n}\n```\n\nWe will basically have to rewrite this as for example:\n\n```\nPUT index/1\n{\n  \"company\": {\n    \"name\": \"elastic\"\n  }\n}\nPUT index/11?parent=1\n{\n  \"employee\": {\n    \"name\": \"david\"\n  }\n}\n```\n\nIt means that parent/child will be able to do self referencing as proposed here in #11432.\nSo as soon as we have support for #11432, I'm totally +1 to remove types.\n\nBTW, may be we should already start to educate people to use only one type per index and use data structures similar to what I proposed in my example?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/237880437","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-237880437","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":237880437,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNzg4MDQzNw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-08-05T15:24:36Z","updated_at":"2016-08-05T15:24:36Z","author_association":"CONTRIBUTOR","body":"What about the following plan:\n- require 5.0+ indices to have at most one type (which means parent/child does not work)\n- add APIs without a type parameter, eg. `POST index/` to index with an auto-generated id or `PUT index/id` to index with an explicit id, remove the requirement to have the type name as a top-level key in mappings, etc. (all this does not need to done in 5.0, this could come in 5.x)\n- remove types from APIs in 6.0+\n- separately work on another way to expose joins in a reasonable way, as a replacement for parent/child (assuming we want a replacement)\n\nIf we are not ready to drop parent/child right now, one trade-off I could consent would be to have a setting that allows indices to have multiple types so that parent/child can be used, but these indices could not be upgraded to 6.0.\n\nFor the record, we have some evidence that removing types could help indexing speed quite significantly since we would not have to fold the type name into the uid: https://github.com/elastic/elasticsearch/issues/18154#issuecomment-237851085\n\nThoughts?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/239213496","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-239213496","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":239213496,"node_id":"MDEyOklzc3VlQ29tbWVudDIzOTIxMzQ5Ng==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2016-08-11T16:24:40Z","updated_at":"2016-08-11T16:24:49Z","author_association":"MEMBER","body":"@jpountz I think we should do this, but it seems your proposal has gone unnoticed given the lack of reaction (positive or negative). Can we get some other thoughts on this?\n\n/cc @s1monw @clintongormley \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/239213884","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-239213884","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":239213884,"node_id":"MDEyOklzc3VlQ29tbWVudDIzOTIxMzg4NA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-08-11T16:26:01Z","updated_at":"2016-08-11T16:26:01Z","author_association":"CONTRIBUTOR","body":"@rjernst i'm staring at it as you type :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/239435920","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-239435920","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":239435920,"node_id":"MDEyOklzc3VlQ29tbWVudDIzOTQzNTkyMA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-08-12T12:42:15Z","updated_at":"2019-01-30T01:46:20Z","author_association":"CONTRIBUTOR","body":"We discussed this in Fix it Friday.  \r\n\r\n## Where we want to get to:\r\n\r\nWe want to remove the concept of types from Elasticsearch, while still supporting parent/child. \r\n- Field mappings will be at the top level, instead of under type names\r\n- The `_uid` will consist only of the `_id`, not `type#id`.\r\n- Creating a document with ID : `PUT index/_doc/id`\r\n- Creating a document with autogenerated ID : `POST index/_doc`\r\n\r\nIt's very important to me that we don't leave users behind - we need to give them a smooth upgrade and transition path.\r\n\r\n## Proposed path:\r\n\r\n**In 5.0:**\r\n- [ ] ~~In new indices, enforce that fields with the same name in different types must have identical mappings.~~\r\n- [x] `POST index` should no longer create an index. #20001\r\n- [x] Check other REST endpoints for similar clashes. #20055\r\n\r\n**In 5.x:**\r\n- [x] Add support for setting `enabled:false` to the `_type` field, which will exclude type from the UID and use a fixed type name for (eg) mapping requests/responses. These indices will not support parent/child. #24317\r\n- [x] Add support for `PUT index/_doc/id`, `POST index/_doc`, and `PUT|POST index/_mapping`\r\n- [x] Add new mechanism for specifying and supporting parent/child.\r\n\r\n**In 6.0:**\r\n- [x] Prevent new indices from being created with more than one type.\r\n\r\n**In 6.7:**\r\n* [x] For APIs whose request/ response structure changes with types removal (create index, get mapping, etc.), add a query string parameter (eg `include_type_name`) which indicates whether the requests/responses should include a type name. This parameter defaults to `true`. Issue a deprecation warning for all requests that don't set `include_type_name` to `false`\r\n\r\n**In 7.0:**\r\n* [x] Remove support for old parent/child (#29224)\r\n* [x] For requests whose structure does not change with types removal, make sure to accept both typed + typeless versions of the API. Issue a deprecation warning for requests that specify types.\r\n* [x] Default `include_type_name` to `false`. Issue a deprecation warning for all requests that `include_type_name`.\r\n* [x] Deprecate references to types in the Java high-level rest client\r\n\r\n**In 8.0**\r\n\r\n* [ ] `type` can no longer be specified in requests\r\n* [ ] the `include_type_name` parameter is removed\r\n\r\nIn 6.0, all existing types from 5.x indices will have identical mappings. We will still have indices with old parent/child implementation.  If we can migrate existing parent/child settings to the new settings, then we could move the \"return fields at top level\" issue into 6.0.\r\n\r\nAlternatively, we could return fields at the top level in 6.0 regardless, and still show types (for old indices with types enabled, or with old parent-child) as a separate section in GET mapping.\r\n\r\n**UPDATED TO REFLECT CHANGES IN https://github.com/elastic/elasticsearch/issues/15613#issuecomment-303727982**\r\n\r\n**UPDATED TO REFLECT CHANGES IN https://github.com/elastic/elasticsearch/issues/15613#issuecomment-382427200**\r\n\r\n**UPDATED TO REFLECT CHANGES IN https://github.com/elastic/elasticsearch/issues/15613#issuecomment-438084242**\r\n\r\n**UPDATED TO REFLECT CHANGES DISCUSSED IN https://github.com/elastic/elasticsearch/issues/35190**","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240645902","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-240645902","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":240645902,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDY0NTkwMg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-08-18T07:31:37Z","updated_at":"2016-08-18T07:31:37Z","author_association":"CONTRIBUTOR","body":"> Check other REST endpoints for similar clashes.\n\nI think the only other endpoint we need to check is `PUT/POST {index}/_mapping`, which is free today. Am I missing another one?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240648998","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-240648998","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":240648998,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDY0ODk5OA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-08-18T07:47:44Z","updated_at":"2016-08-18T07:47:44Z","author_association":"CONTRIBUTOR","body":"`indices.exists_type` (`HEAD {index}/{type}`)  clashes with a typeless `exists` (`HEAD {index}/{id}`)\n\nPerhaps the existing form should be deprecated in favour of `HEAD {index}/_mapping/{type}`\n\nI think that's the lot\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240679004","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-240679004","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":240679004,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDY3OTAwNA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-08-18T09:59:58Z","updated_at":"2016-08-18T09:59:58Z","author_association":"CONTRIBUTOR","body":"> In new indices, enforce that fields with the same name in different types must have identical mappings.\n\nHaving started to work on it, this is more challenging than I initially thought. However I think this might not be needed: since we will require at most one type in 6.0+ anyway, we will not have to merge mappings across types in 7.0, so this step is not required for the type removal?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241362573","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-241362573","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":241362573,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTM2MjU3Mw==","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2016-08-22T09:41:02Z","updated_at":"2016-08-22T09:41:02Z","author_association":"MEMBER","body":"@clintongormley I like the purposed plan! _If_ we can find a way to support the new parent/child format in 5.x with the enabled set to false on _type, it would mean simpler migration down the road. We could start to push for setting this setting for new users.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/247160644","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-247160644","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":247160644,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NzE2MDY0NA==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2016-09-14T21:28:49Z","updated_at":"2016-09-14T21:28:49Z","author_association":"MEMBER","body":"@clintongormley I believe this:\n\n> In new indices, enforce that fields with the same name in different types must have identical mappings.\n\nIs resolved (from the 5.0 checkboxes):\n\n```\nPUT /i?pretty\n{\n  \"mappings\": {\n    \"typea\": {\n      \"properties\": {\n        \"title\": {\n          \"type\": \"text\",\n          \"analyzer\": \"standard\"\n        }\n      }\n    },\n    \"typeb\": {\n      \"properties\": {\n        \"title\": {\n          \"type\": \"text\",\n          \"analyzer\": \"english\"\n        }\n      }\n    }\n  }\n}\n\n{\n  \"error\" : {\n    \"root_cause\" : [\n      {\n        \"type\" : \"mapper_parsing_exception\",\n        \"reason\" : \"Failed to parse mapping [typea]: Mapper for [title] conflicts with existing mapping in other types:\\n[mapper [title] has different [analyzer], mapper [title] is used by multiple types. Set update_all_types to true to update [search_analyzer] across all types., mapper [title] is used by multiple types. Set update_all_types to true to update [search_quote_analyzer] across all types.]\"\n      }\n    ],\n    \"type\" : \"mapper_parsing_exception\",\n    \"reason\" : \"Failed to parse mapping [typea]: Mapper for [title] conflicts with existing mapping in other types:\\n[mapper [title] has different [analyzer], mapper [title] is used by multiple types. Set update_all_types to true to update [search_analyzer] across all types., mapper [title] is used by multiple types. Set update_all_types to true to update [search_quote_analyzer] across all types.]\",\n    \"caused_by\" : {\n      \"type\" : \"illegal_argument_exception\",\n      \"reason\" : \"Mapper for [title] conflicts with existing mapping in other types:\\n[mapper [title] has different [analyzer], mapper [title] is used by multiple types. Set update_all_types to true to update [search_analyzer] across all types., mapper [title] is used by multiple types. Set update_all_types to true to update [search_quote_analyzer] across all types.]\"\n    }\n  },\n  \"status\" : 400\n}\n```\n\nSo I _think_ this is no longer blocking for 5.0, is that correct? (I didn't want to check the box if there was something else missing)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/247178703","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-247178703","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":247178703,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NzE3ODcwMw==","user":{"login":"KodrAus","id":6721458,"node_id":"MDQ6VXNlcjY3MjE0NTg=","avatar_url":"https://avatars0.githubusercontent.com/u/6721458?v=4","gravatar_id":"","url":"https://api.github.com/users/KodrAus","html_url":"https://github.com/KodrAus","followers_url":"https://api.github.com/users/KodrAus/followers","following_url":"https://api.github.com/users/KodrAus/following{/other_user}","gists_url":"https://api.github.com/users/KodrAus/gists{/gist_id}","starred_url":"https://api.github.com/users/KodrAus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KodrAus/subscriptions","organizations_url":"https://api.github.com/users/KodrAus/orgs","repos_url":"https://api.github.com/users/KodrAus/repos","events_url":"https://api.github.com/users/KodrAus/events{/privacy}","received_events_url":"https://api.github.com/users/KodrAus/received_events","type":"User","site_admin":false},"created_at":"2016-09-14T22:38:25Z","updated_at":"2016-09-14T22:38:25Z","author_association":"NONE","body":"As an Elasticsearch user and someone who's spent the last few months working on a type mapping client implementation this sounds good to me. From what I can tell from the conversation so far: types aren't _really_ going away, they're just being shifted up to the index level, so the index determines the shape of its one document type, right?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/247183932","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-247183932","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":247183932,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NzE4MzkzMg==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2016-09-14T23:06:13Z","updated_at":"2016-09-14T23:06:13Z","author_association":"MEMBER","body":"> From what I can tell from the conversation so far: types aren't really going away, they're just being shifted up to the index level, so the index determines the shape of its one document type, right?\n\nThat's pretty much correct, once we eventually add support for `_type: {enabled: false}` (and a user uses it) it will be one type per index. The only trickiness will be parent/child which @martijnvg has been working on in https://github.com/elastic/elasticsearch/issues/20257\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/247321473","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-247321473","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":247321473,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NzMyMTQ3Mw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-09-15T13:02:03Z","updated_at":"2016-09-15T13:02:03Z","author_association":"CONTRIBUTOR","body":"> So I think this is no longer blocking for 5.0, is that correct? (I didn't want to check the box if there was something else missing)\n\nNot quite. There are certain properties today which can differ, eg:\n\n```\nPUT t\n{\n  \"mappings\": {\n    \"one\": {\n      \"properties\": {\n        \"text\": {\n          \"type\": \"text\",\n          \"copy_to\": \"foo\"\n        }\n      }\n    },\n    \"two\": {\n      \"properties\": {\n        \"text\": {\n          \"type\": \"text\",\n          \"copy_to\": \"bar\"\n        }\n      }\n    }\n  }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/247927465","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-247927465","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":247927465,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NzkyNzQ2NQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-09-19T07:34:18Z","updated_at":"2016-09-19T07:34:18Z","author_association":"CONTRIBUTOR","body":"> Having started to work on it, this is more challenging than I initially thought. However I think this might not be needed: since we will require at most one type in 6.0+ anyway, we will not have to merge mappings across types in 7.0, so this step is not required for the type removal?\n\n@jpountz makes sense to me.  OK, I'll remove that task and remove the blocker label.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/252206747","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-252206747","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":252206747,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MjIwNjc0Nw==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2016-10-07T10:14:08Z","updated_at":"2016-10-07T10:14:08Z","author_association":"MEMBER","body":"I like this change in general, my only concern is the fact that the create index and index document apis will be on the same rest endpoint with only a different method. I am worried this is confusing and error-prone for users.\n\nAs discussed above the create index will be only accessible with `PUT index` and indexing a document with an auto-generated id will be `POST index`. This seems weird to me as we are affecting different resources purely based on the method used (adding an index to the cluster vs adding a document to the index). We could instead have the auto-generated id endpoint as something like `POST index/_auto_id`. This should not clash with actual ids as we already have a convention of reserving `index/_X` for endpoints (e.g. `index/_mapping`).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/286085890","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-286085890","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":286085890,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NjA4NTg5MA==","user":{"login":"Danack","id":1505719,"node_id":"MDQ6VXNlcjE1MDU3MTk=","avatar_url":"https://avatars1.githubusercontent.com/u/1505719?v=4","gravatar_id":"","url":"https://api.github.com/users/Danack","html_url":"https://github.com/Danack","followers_url":"https://api.github.com/users/Danack/followers","following_url":"https://api.github.com/users/Danack/following{/other_user}","gists_url":"https://api.github.com/users/Danack/gists{/gist_id}","starred_url":"https://api.github.com/users/Danack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Danack/subscriptions","organizations_url":"https://api.github.com/users/Danack/orgs","repos_url":"https://api.github.com/users/Danack/repos","events_url":"https://api.github.com/users/Danack/events{/privacy}","received_events_url":"https://api.github.com/users/Danack/received_events","type":"User","site_admin":false},"created_at":"2017-03-13T11:49:21Z","updated_at":"2017-03-13T11:49:21Z","author_association":"NONE","body":"Hi,\r\n\r\nPlease could it be documented in the ES documentation that the long term plan is to move away from multiple types per index, so that people starting new projects now know to avoid them, and for people who have projects that already use multiple mappings, to start going through the seven stages of loss sooner rather than later. \r\n\r\nI only stumbled across this issue by chance when reading up on indexes vs types via google.\r\n\r\nObviously, apologies in advance if this has already been documented and I've just missed it.\r\n\r\ncheers\r\nDan\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/287015195","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-287015195","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":287015195,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NzAxNTE5NQ==","user":{"login":"stephanebastian","id":873039,"node_id":"MDQ6VXNlcjg3MzAzOQ==","avatar_url":"https://avatars2.githubusercontent.com/u/873039?v=4","gravatar_id":"","url":"https://api.github.com/users/stephanebastian","html_url":"https://github.com/stephanebastian","followers_url":"https://api.github.com/users/stephanebastian/followers","following_url":"https://api.github.com/users/stephanebastian/following{/other_user}","gists_url":"https://api.github.com/users/stephanebastian/gists{/gist_id}","starred_url":"https://api.github.com/users/stephanebastian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stephanebastian/subscriptions","organizations_url":"https://api.github.com/users/stephanebastian/orgs","repos_url":"https://api.github.com/users/stephanebastian/repos","events_url":"https://api.github.com/users/stephanebastian/events{/privacy}","received_events_url":"https://api.github.com/users/stephanebastian/received_events","type":"User","site_admin":false},"created_at":"2017-03-16T10:22:49Z","updated_at":"2017-03-16T10:22:49Z","author_association":"NONE","body":"Hi All,\r\n\r\nI already posted a comment related to typeless parent/child #20257 \r\nNow I would like to post some sort of summary about the Pros and Cons of types. The reason is that the more I think about the prospect of removing types, the more I feel that I would really miss what it buys me: considering the data store in ES as ONE entity (or sort of).\r\n\r\nPros:\r\n- Types allows me to use an index as some sort of database, each 'table' being a different type. It might be seen as some sort of edge case but a lot of people as using it this way and I would like to say that this is a really nice feature! Over the year, I've been involved in several project leveraging ES where ES became the only source of data. In all these projects ES is the database. There is no external SQL db at all and every single piece of data is stored in an index containing different types. Which brings me to the next point\r\n\r\n- In term of operations, in order to backup all the data spread across several types I simply need to snapshot ONE index. When something goes wrong I simply restore ONE snapshot and I'm back in business. To me this single feature is very important because data stored in ES are related. It's not a bunch of indexes but rather a group of related things. And Types buys me this. \r\n\r\n- We sometimes use Alias to perform operations on several types. For instance it could be upgrading all our data and switching to the upgraded data by simply updating the alias. I know aliases can point to several indices already but once again when I *use* ES, the notions of types allows me to thing about all this inter-related data as one (ahem...) database.\r\n\r\nCons:\r\n- Several issues mainly (only?) related to mappings, inconsistencies and such.\r\n\r\nDon't get me wrong, I do agree that types can be confusing until you understand their shortcomings. Once you are aware of them, it almost becomes a no-brainer. \r\n\r\nTo wrap up, we all agree that types have issues. One way of getting rid of these issues is to ged rid of types. Would it be possible to 'fix' these issues and keep types? For instance, would it be possible to prefix all field with the types they belong to at the lucene level. To me it would solve the mapping issues. WDYT ? \r\n\r\nSorry for the long post...\r\nAll the best,\r\n\r\nStéphane\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/287885896","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-287885896","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":287885896,"node_id":"MDEyOklzc3VlQ29tbWVudDI4Nzg4NTg5Ng==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2017-03-20T20:23:09Z","updated_at":"2017-03-20T20:23:09Z","author_association":"MEMBER","body":"@stephane-bastian \r\n\r\n> Types allows me to use an index as some sort of database, each 'table' being a different type. It might be seen as some sort of edge case but a lot of people as using it this way and I would like to say that this is a really nice feature!\r\n\r\nThis is a common misconception. Types are *not* tables. The underlying data structures are the same for the entire index, not per type. This means using multiple types causes gaps (ie sparsity) in the data structure each time consecutive docs have different fields.  Lucene is getter better at handling sparse data, but that will never fully solve this problem.\r\n\r\n> In term of operations, in order to backup all the data spread across several types I simply need to snapshot ONE index. When something goes wrong I simply restore ONE snapshot and I'm back in business.\r\n\r\nYou can snapshot multiple indices in one snapshot.\r\n\r\n> We sometimes use Alias to perform operations on several types. For instance it could be upgrading all our data and switching to the upgraded data by simply updating the alias. I know aliases can point to several indices already but once again when I use ES, the notions of types allows me to thing about all this inter-related data as one (ahem...) database.\r\n\r\nAs you say, you aliases can be used with multiple indices. There is nothing inherent about types that make this better, it is only an additional filter added to each query (ie a term filter on the type essentially).\r\n\r\n> Cons:\r\n> Several issues mainly (only?) related to mappings, inconsistencies and such.\r\n\r\nThis is a drastic oversimplification.  Types have caused issues for users for a very long time. We have made improvements to fix inconsistencies (eg #8870), and have discussed what types really give users since then. The remaining issues with types are well laid out by @jpountz in the original issue description here, as well as the linked blog post.\r\n\r\n>  For instance, would it be possible to prefix all field with the types they belong to at the lucene level.\r\n\r\nWe discussed this idea long ago (around the same time as #8870). It does not solve the code complexities of types, and removes one of the few benefits of types (shared lexicon for similar fields).\r\n\r\nThe key to all of this is that types are not actually special. Essentially they are just an additional field, with an element from the URL path translated into an additional query filter. This is simple for a user to do themselves if they really want to, without causing new users to fall into the trap of \"types are like tables\".","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/291551866","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-291551866","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":291551866,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MTU1MTg2Ng==","user":{"login":"synhershko","id":212252,"node_id":"MDQ6VXNlcjIxMjI1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/212252?v=4","gravatar_id":"","url":"https://api.github.com/users/synhershko","html_url":"https://github.com/synhershko","followers_url":"https://api.github.com/users/synhershko/followers","following_url":"https://api.github.com/users/synhershko/following{/other_user}","gists_url":"https://api.github.com/users/synhershko/gists{/gist_id}","starred_url":"https://api.github.com/users/synhershko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/synhershko/subscriptions","organizations_url":"https://api.github.com/users/synhershko/orgs","repos_url":"https://api.github.com/users/synhershko/repos","events_url":"https://api.github.com/users/synhershko/events{/privacy}","received_events_url":"https://api.github.com/users/synhershko/received_events","type":"User","site_admin":false},"created_at":"2017-04-04T16:16:03Z","updated_at":"2017-04-04T16:16:03Z","author_association":"CONTRIBUTOR","body":"Historically, types were useful for separating documents with different structure within indexes. However, in recent versions this practically no longer holds - different document types cannot share the same field name if their mappings don't match.\r\n\r\nIn addition the only manageable units in Elasticsearch are documents and indexes. You can add and delete them. You cannot manage types. As such, the usual recommendation I give is to maintain an index per type - since usually when there are several types involved their sizes and SLAs are different, and thus different configurations for replication, retention etc are required anyway. If not now then in the future.\r\n\r\nWith Elasticsearch slowly moving to index-level and even cluster-level sharding (with cross-cluster search), and with index sizes only growing in real-world systems - I think the chances of types actually being useful anywhere are now close to zero, and different types of documents are better separated on an index level.\r\n\r\nAt this point, IMO types are just an unnecessary noise for the majority of systems. We can certainly live without them, type less (pun intended) and manage different types of data using separate indexes. This will also avoid various not-uncommon pitfalls (e.g. large number of fields in mapping).\r\n\r\nOnly feature affected will be parent/child, and I'm sure there could be an easy solution there (I'd probably go with an \"invisible\" types for parents and children).\r\n\r\nSo I'm all in for this, hopefully will make it to v6!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/291722874","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-291722874","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":291722874,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MTcyMjg3NA==","user":{"login":"brusic","id":354105,"node_id":"MDQ6VXNlcjM1NDEwNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/354105?v=4","gravatar_id":"","url":"https://api.github.com/users/brusic","html_url":"https://github.com/brusic","followers_url":"https://api.github.com/users/brusic/followers","following_url":"https://api.github.com/users/brusic/following{/other_user}","gists_url":"https://api.github.com/users/brusic/gists{/gist_id}","starred_url":"https://api.github.com/users/brusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brusic/subscriptions","organizations_url":"https://api.github.com/users/brusic/orgs","repos_url":"https://api.github.com/users/brusic/repos","events_url":"https://api.github.com/users/brusic/events{/privacy}","received_events_url":"https://api.github.com/users/brusic/received_events","type":"User","site_admin":false},"created_at":"2017-04-05T02:30:11Z","updated_at":"2017-04-05T02:30:11Z","author_association":"CONTRIBUTOR","body":"Many years ago, I created an issue asking for inclusion of custom index-level metadata. The work-around given was to use a custom type within the same index with a single document: https://github.com/elastic/elasticsearch/issues/1649\r\n\r\nI always found multiple types in the same index to be kludgy (as highlighted by this issue), so I never implemented the suggested solution, but used aliases (had the added benefit if being visible in UIs such as head). It would be great to have custom index-level metadata, especially since the suggested workaround will no longer be supported. Please excuse me if such a feature has been created since the original issue.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/291788687","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-291788687","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":291788687,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MTc4ODY4Nw==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2017-04-05T08:19:00Z","updated_at":"2017-04-05T08:19:00Z","author_association":"MEMBER","body":">  It would be great to have custom index-level metadata,\r\n\r\n@brusic I presume the [mapping meta field](https://www.elastic.co/guide/en/elasticsearch/reference/5.3/mapping-meta-field.html) will cover this, as the mappings will now be an index level thing. Is this correct?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/292234657","html_url":"https://github.com/elastic/elasticsearch/issues/15613#issuecomment-292234657","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15613","id":292234657,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MjIzNDY1Nw==","user":{"login":"brusic","id":354105,"node_id":"MDQ6VXNlcjM1NDEwNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/354105?v=4","gravatar_id":"","url":"https://api.github.com/users/brusic","html_url":"https://github.com/brusic","followers_url":"https://api.github.com/users/brusic/followers","following_url":"https://api.github.com/users/brusic/following{/other_user}","gists_url":"https://api.github.com/users/brusic/gists{/gist_id}","starred_url":"https://api.github.com/users/brusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brusic/subscriptions","organizations_url":"https://api.github.com/users/brusic/orgs","repos_url":"https://api.github.com/users/brusic/repos","events_url":"https://api.github.com/users/brusic/events{/privacy}","received_events_url":"https://api.github.com/users/brusic/received_events","type":"User","site_admin":false},"created_at":"2017-04-06T16:47:14Z","updated_at":"2017-04-06T16:47:14Z","author_association":"CONTRIBUTOR","body":"@bleskes If the mapping meta field will be promoted to an index level setting, it would be perfect.","performed_via_github_app":null}]