{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/23818","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23818/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23818/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23818/events","html_url":"https://github.com/elastic/elasticsearch/issues/23818","id":218140046,"node_id":"MDU6SXNzdWUyMTgxNDAwNDY=","number":23818,"title":"Distinct Terms Aggregations","user":{"login":"gingerwizard","id":12695796,"node_id":"MDQ6VXNlcjEyNjk1Nzk2","avatar_url":"https://avatars0.githubusercontent.com/u/12695796?v=4","gravatar_id":"","url":"https://api.github.com/users/gingerwizard","html_url":"https://github.com/gingerwizard","followers_url":"https://api.github.com/users/gingerwizard/followers","following_url":"https://api.github.com/users/gingerwizard/following{/other_user}","gists_url":"https://api.github.com/users/gingerwizard/gists{/gist_id}","starred_url":"https://api.github.com/users/gingerwizard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gingerwizard/subscriptions","organizations_url":"https://api.github.com/users/gingerwizard/orgs","repos_url":"https://api.github.com/users/gingerwizard/repos","events_url":"https://api.github.com/users/gingerwizard/events{/privacy}","received_events_url":"https://api.github.com/users/gingerwizard/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":1967499105,"node_id":"MDU6TGFiZWwxOTY3NDk5MTA1","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Analytics","name":"Team:Analytics","color":"fef2c0","default":false,"description":"Meta label for analytics/geo team"},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"},{"id":110557212,"node_id":"MDU6TGFiZWwxMTA1NTcyMTI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/high%20hanging%20fruit","name":"high hanging fruit","color":"fc6149","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2017-03-30T09:47:41Z","updated_at":"2020-07-29T16:08:21Z","closed_at":"2020-07-29T16:08:20Z","author_association":"NONE","active_lock_reason":null,"body":"Ticket to request a new terms aggregation capable of identifying distinct values in a field, based on a query restriction.  This aggregation would return values for a field in the matching document set, that **do not** exist in the **non matching** documents.  This can be used to answer questions such as \"Give me the values for a field which are new in the last N minutes\".\r\n\r\nThis feature request comes out of use of Watcher to detect new values in fields - a common requirement in security analytics.   Problems such as \"lateral movement in communications\" (user logs onto a new server) or \"new process started on a server\" currently require multiple query executions.  Currently this has led to multiple implementations of watches, with varying degrees of efficiency.  \r\n\r\nNoting the following approach as discussions with @clintongormley indicate this is the current best approach for detecting new values in a field:\r\n\r\n- Identify values in the matching set - X\r\n- Query with values X using a terms query. This identifies common values in the non matching and matching document sets - Y\r\n- Script which identifies values in X NOT in Y.\r\n\r\nAn example watch for detecting a new process can be found [here](https://github.com/elastic/stack-demos/blob/master/security-analytics/watcher/new_process.json).\r\n\r\nThis specific watch looks for values in the last N mins for a field, identifying those which are \"new\".\r\n\r\nGiven the frequency of this requirement in Watcher, @clintongormley suggested potentially implementing this in ES.  The above approach is efficient, provided the background set X is small.  In most cases, we believe the set of matching documents would be smaller than those than do not match - thus the above approach is likely the most efficient.  Pending discussion as to whether this can be implemented at a node or shard level within ES. https://github.com/elastic/elasticsearch/issues/12316 may enable this to be implemented.\r\nWould require careful document that the aggregation is performant provided the matching set is small.  We may want to also narrow the requirement to detecting \"new\" values using time only - with the restriction within the aggregation.\r\n\r\ncc @sarwarbhuiyanm @LucaWintergerst @mikeh-elastic @MikePaquette have encountered similar requirements.\r\n@skearns64 \r\n\r\n\r\n\r\n","closed_by":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"performed_via_github_app":null}