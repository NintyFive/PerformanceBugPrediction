{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/21942","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21942/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21942/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21942/events","html_url":"https://github.com/elastic/elasticsearch/issues/21942","id":193165269,"node_id":"MDU6SXNzdWUxOTMxNjUyNjk=","number":21942,"title":"ElasticsearchUncaughtExceptionHandler OutOfMemoryError when running a cardinality query","user":{"login":"AMarthaller","id":13474239,"node_id":"MDQ6VXNlcjEzNDc0MjM5","avatar_url":"https://avatars1.githubusercontent.com/u/13474239?v=4","gravatar_id":"","url":"https://api.github.com/users/AMarthaller","html_url":"https://github.com/AMarthaller","followers_url":"https://api.github.com/users/AMarthaller/followers","following_url":"https://api.github.com/users/AMarthaller/following{/other_user}","gists_url":"https://api.github.com/users/AMarthaller/gists{/gist_id}","starred_url":"https://api.github.com/users/AMarthaller/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AMarthaller/subscriptions","organizations_url":"https://api.github.com/users/AMarthaller/orgs","repos_url":"https://api.github.com/users/AMarthaller/repos","events_url":"https://api.github.com/users/AMarthaller/events{/privacy}","received_events_url":"https://api.github.com/users/AMarthaller/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":166507771,"node_id":"MDU6TGFiZWwxNjY1MDc3NzE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Circuit%20Breakers","name":":Core/Infra/Circuit Breakers","color":"0e8a16","default":false,"description":"Track estimates of memory consumption to prevent overload"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-12-02T16:56:00Z","updated_at":"2018-06-04T21:15:50Z","closed_at":"2018-06-04T21:15:50Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version**: 5.0.0\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version**: jre1.8.0_111\r\n\r\n**OS version**: Windows Server 2016 Datacenter\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nWhen executing a cardinality query, all data nodes ran out of memory and died. I would expect the circuit breaker to kick in and stop the query.\r\n\r\n**Steps to reproduce**:\r\n 1. A user created a Kibana visualization that did unique count of docvalue_1 over docvalue_2.\r\n 2. Kibana timed the query out after 30s but ES did not fare so well.\r\n\r\nThe data nodes (4) all have 28GB physical with half dedicated to ES.\r\n\r\n-Xss1m\r\n-Xms14g\r\n-Xmx14g\r\n \r\nbootstrap.memory_lock: true\r\n\r\nThe index has 12 shards. The index overall is 400GB with even distribution across the shards. Regardless of setup, my hope would be that running dangerous queries results in the circuit breaker kicking in before killing the nodes. \r\n\r\n**Provide logs (if relevant)**:\r\n \r\n[2016-12-02T01:19:54,982][ERROR][o.e.b.ElasticsearchUncaughtExceptionHandler] [AI-DATA-01] fatal error in thread [elasticsearch[AI-DATA-01][search][T#4]], exiting\r\njava.lang.OutOfMemoryError: Java heap space\r\n               at org.elasticsearch.common.util.PageCacheRecycler$1.newInstance(PageCacheRecycler.java:99) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.common.util.PageCacheRecycler$1.newInstance(PageCacheRecycler.java:96) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.common.recycler.DequeRecycler.obtain(DequeRecycler.java:53) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.common.recycler.AbstractRecycler.obtain(AbstractRecycler.java:33) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.common.recycler.DequeRecycler.obtain(DequeRecycler.java:28) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.common.recycler.FilterRecycler.obtain(FilterRecycler.java:39) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.common.recycler.Recyclers$3.obtain(Recyclers.java:119) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.common.recycler.FilterRecycler.obtain(FilterRecycler.java:39) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.common.util.PageCacheRecycler.bytePage(PageCacheRecycler.java:147) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.common.util.AbstractBigArray.newBytePage(AbstractBigArray.java:112) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.common.util.BigByteArray.<init>(BigByteArray.java:44) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.common.util.BigArrays.newByteArray(BigArrays.java:464) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.common.util.BigArrays.resize(BigArrays.java:488) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.common.util.BigArrays.grow(BigArrays.java:502) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlus.ensureCapacity(HyperLogLogPlusPlus.java:197) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlus.collect(HyperLogLogPlusPlus.java:232) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityAggregator$DirectCollector.collect(CardinalityAggregator.java:198) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.search.aggregations.bucket.BucketsAggregator.collectExistingBucket(BucketsAggregator.java:80) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.search.aggregations.bucket.terms.GlobalOrdinalsStringTermsAggregator$2.collect(GlobalOrdinalsStringTermsAggregator.java:128) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.search.aggregations.LeafBucketCollector.collect(LeafBucketCollector.java:82) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.apache.lucene.search.MultiCollector$MultiLeafCollector.collect(MultiCollector.java:174) ~[lucene-core-6.2.0.jar:6.2.0 764d0f19151dbff6f5fcd9fc4b2682cf934590c5 - mike - 2016-08-20 05:39:36]\r\n               at org.apache.lucene.search.Weight$DefaultBulkScorer.scoreAll(Weight.java:221) ~[lucene-core-6.2.0.jar:6.2.0 764d0f19151dbff6f5fcd9fc4b2682cf934590c5 - mike - 2016-08-20 05:39:36]\r\n               at org.apache.lucene.search.Weight$DefaultBulkScorer.score(Weight.java:172) ~[lucene-core-6.2.0.jar:6.2.0 764d0f19151dbff6f5fcd9fc4b2682cf934590c5 - mike - 2016-08-20 05:39:36]\r\n               at org.apache.lucene.search.BulkScorer.score(BulkScorer.java:39) ~[lucene-core-6.2.0.jar:6.2.0 764d0f19151dbff6f5fcd9fc4b2682cf934590c5 - mike - 2016-08-20 05:39:36]\r\n               at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:669) ~[lucene-core-6.2.0.jar:6.2.0 764d0f19151dbff6f5fcd9fc4b2682cf934590c5 - mike - 2016-08-20 05:39:36]\r\n               at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:473) ~[lucene-core-6.2.0.jar:6.2.0 764d0f19151dbff6f5fcd9fc4b2682cf934590c5 - mike - 2016-08-20 05:39:36]\r\n               at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:370) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:106) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.indices.IndicesService.lambda$loadIntoContext$17(IndicesService.java:1109) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.indices.IndicesService$$Lambda$1467/1254300496.load(Unknown Source) ~[?:?]\r\n               at org.elasticsearch.indices.AbstractIndexShardCacheEntity.loadValue(AbstractIndexShardCacheEntity.java:73) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n               at org.elasticsearch.indices.IndicesRequestCache$Loader.load(IndicesRequestCache.java:148) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n","closed_by":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"performed_via_github_app":null}