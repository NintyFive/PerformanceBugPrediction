{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/2640","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2640/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2640/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2640/events","html_url":"https://github.com/elastic/elasticsearch/issues/2640","id":10912305,"node_id":"MDU6SXNzdWUxMDkxMjMwNQ==","number":2640,"title":"Add ability to re-score Top-K query results with a secondary query,","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"labels":[{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":17100279,"node_id":"MDU6TGFiZWwxNzEwMDI3OQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.90.0.Beta1","name":"v0.90.0.Beta1","color":"DDDDDD","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"assignees":[{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false}],"milestone":null,"comments":8,"created_at":"2013-02-12T15:59:05Z","updated_at":"2017-07-01T06:57:00Z","closed_at":"2013-02-12T16:23:47Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"# Rescore Feature\n\nThe rescore feature allows te rescore a document returned by a query based\non a secondary algorithm. Rescoring is commonly used if a scoring algorithm\nis too costly to be executed across the entire document set but efficient enough\nto be executed on the Top-K documents scored by a faster retrieval method. Rescoring\ncan help to improve precision by reordering a larger Top-K window than actually\nreturned to the user. Typically is it executed on a window between 100 and 500 documents\nwhile the actual result window requested by the user remains the same. \n# Query Rescorer\n\nThe `query` rescorer executes a secondary query only on the Top-K results of the actual\nuser query and rescores the documents based on a linear combination of the user query's score\nand the score of the `rescore_query`. This allows to execute any exposed query as a\n`rescore_query` and supports a `query_weight` as well as a `rescore_query_weight` to weight the\nfactors of the linear combination. \n# Rescore API\n\nThe `rescore` request is defined along side the query part in the json request:\n\n``` json\ncurl -s -XPOST 'localhost:9200/_search' -d {\n  \"query\" : {\n    \"match\" : {\n      \"field1\" : {\n        \"query\" : \"the quick brown\",\n        \"type\" : \"boolean\",\n        \"operator\" : \"OR\"\n      }\n    }\n  },\n  \"rescore\" : {\n    \"window_size\" : 50,\n    \"query\" : {\n      \"rescore_query\" : {\n        \"match\" : {\n          \"field1\" : {\n            \"query\" : \"the quick brown\",\n            \"type\" : \"phrase\",\n            \"slop\" : 2\n          }\n        }\n      },\n      \"query_weight\" : 0.7,\n      \"rescore_query_weight\" : 1.2\n    }\n  }\n}\n```\n\nEach `rescore` request is executed on a per-shard basis within the same roundtrip. Currently the rescore API\nhas only one implementation (the `query` rescorer) which modifies the result set in-place. Future developments\ncould include dedicated rescore results if needed by the implemenation ie. a pair-wise reranker.\n_Note:_ Only regualr queries are rescored, if the search type is set to `scan` or `count` rescorers are not executed.\n","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}