[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/248106840","html_url":"https://github.com/elastic/elasticsearch/issues/20569#issuecomment-248106840","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20569","id":248106840,"node_id":"MDEyOklzc3VlQ29tbWVudDI0ODEwNjg0MA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-09-19T20:01:15Z","updated_at":"2016-09-19T20:01:15Z","author_association":"CONTRIBUTOR","body":"apparently this is also in 2.x \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/248114103","html_url":"https://github.com/elastic/elasticsearch/issues/20569#issuecomment-248114103","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20569","id":248114103,"node_id":"MDEyOklzc3VlQ29tbWVudDI0ODExNDEwMw==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-09-19T20:23:15Z","updated_at":"2016-09-19T20:33:19Z","author_association":"MEMBER","body":"There is a couple of things at work here.\n\nMost importantly, a flush request on a shard now may throw a `FlushNotAllowedEngineException` if the shard is already flushing. This will cause unneeded shard failing as the primary will fail the replica (as is the standard logic for TRA).\n\nSecond, the reason flush is a TRA is because we have seen it in the past as a \"better refresh\" and moved it to TRA when we moved refresh to inherit from TRA.  Refresh needs to be part of the TRA logic in order to honor the sequence `write, refresh, search` and guarantee that the docs in the write are returned.\n\nThe logic in TRA is such that any operation that failed on a replica, doesn't matter why, means that the replica is not a good copy of the current state of the replication group. Normally this means it misses some documents but, with the current hard semantics of refresh, failing to refresh quanitfies to the same thing.\n\nIMO we can choose to do any of the following:\n\n1) Reduce the chance of flush hitting exceptions on replicas by:\n   1a) catching the `FlushNotAllowedEngineException` in `TransportFlushAction` and ignoring it (we should change the docs of the flush action here)\n   1b)  remove the `wait_if_ongoing` flag from FlushRequest and make it always wait.\n2) Change the semantics of `flush` to not be a superset of refresh and either move it from TRA or relax TRA's requirements for it.\n3) If needed, relax the requirement of `refresh` & `flush`.\n\nI'm in favor of 1b for 5.0. 2.x is better served  with 1a .\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/248115709","html_url":"https://github.com/elastic/elasticsearch/issues/20569#issuecomment-248115709","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20569","id":248115709,"node_id":"MDEyOklzc3VlQ29tbWVudDI0ODExNTcwOQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-09-19T20:28:39Z","updated_at":"2016-09-19T20:28:39Z","author_association":"CONTRIBUTOR","body":"I don't understand what guarantees you are talking about. The `_flush` doesn't have any visibility guarantees. It's only flush. We just don't need to fail the replica on flush? We can then just let exception reporting happen. I am also leaning towards always block but I think failing a replica on flush it the engines job and should not happen on such a high level\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/248226603","html_url":"https://github.com/elastic/elasticsearch/issues/20569#issuecomment-248226603","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20569","id":248226603,"node_id":"MDEyOklzc3VlQ29tbWVudDI0ODIyNjYwMw==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-09-20T07:36:34Z","updated_at":"2016-09-20T07:36:34Z","author_association":"CONTRIBUTOR","body":">  Change the semantics of flush to not be a superset of refresh and either move it from TRA or relax TRA's requirements for it.\n\nwhy is flush a superset of refresh? can you explain?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/248228098","html_url":"https://github.com/elastic/elasticsearch/issues/20569#issuecomment-248228098","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20569","id":248228098,"node_id":"MDEyOklzc3VlQ29tbWVudDI0ODIyODA5OA==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-09-20T07:43:44Z","updated_at":"2016-09-20T07:43:44Z","author_association":"MEMBER","body":"> why is flush a superset of refresh? can you explain?\n\nThat's a good question. If I remember correctly, the argument was that if you see flush as \"take everything you have and make lucene segments out of it\" it also implies making it visible for searchers.  If see it as just \"persist data and trim translog\" it doesn't have to imply refresh imo. I'm good with both.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/248229118","html_url":"https://github.com/elastic/elasticsearch/issues/20569#issuecomment-248229118","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20569","id":248229118,"node_id":"MDEyOklzc3VlQ29tbWVudDI0ODIyOTExOA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-09-20T07:48:28Z","updated_at":"2016-09-20T07:48:28Z","author_association":"CONTRIBUTOR","body":">  it also implies making it visible for searchers. \n\nthis is not true, you have to call `_refresh` to make it visible. \n\nRefresh:\n- write all segments to disk\n- reopen the lucene index reader\n- swap the new reader in\n\nFlush:\n- write all segments to disk\n- fsync them\n\nbut even if we'd be a super set I'd argue that if a refresh fails it's the engines job to decide if the exception was fatal (btw. any exception in InternalEngine#refresh()) is fatal. So in TRA the only think we should do is either report to the user or retry (we know exactly when we can retry) the shard failure is the engines job. The only exception here is `TransportWriteAction` since it can make assumptions of consistency.\n","performed_via_github_app":null}]