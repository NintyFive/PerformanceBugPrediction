{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/32478","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32478/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32478/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32478/events","html_url":"https://github.com/elastic/elasticsearch/issues/32478","id":345991816,"node_id":"MDU6SXNzdWUzNDU5OTE4MTY=","number":32478,"title":"Cluster stats return fs total / fs avaliable to 8EB","user":{"login":"hgword","id":1271836,"node_id":"MDQ6VXNlcjEyNzE4MzY=","avatar_url":"https://avatars0.githubusercontent.com/u/1271836?v=4","gravatar_id":"","url":"https://api.github.com/users/hgword","html_url":"https://github.com/hgword","followers_url":"https://api.github.com/users/hgword/followers","following_url":"https://api.github.com/users/hgword/following{/other_user}","gists_url":"https://api.github.com/users/hgword/gists{/gist_id}","starred_url":"https://api.github.com/users/hgword/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hgword/subscriptions","organizations_url":"https://api.github.com/users/hgword/orgs","repos_url":"https://api.github.com/users/hgword/repos","events_url":"https://api.github.com/users/hgword/events{/privacy}","received_events_url":"https://api.github.com/users/hgword/received_events","type":"User","site_admin":false},"labels":[{"id":146836529,"node_id":"MDU6TGFiZWwxNDY4MzY1Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Stats","name":":Core/Features/Stats","color":"0e8a16","default":false,"description":"Statistics tracking and retrieval APIs"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-07-31T00:41:37Z","updated_at":"2020-03-26T14:07:30Z","closed_at":"2020-03-26T14:07:30Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the feature**:\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** : 5.6.4\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`): 1.8.0_151\r\n\r\n**OS version** (`uname -a` if on a Unix-like system):\r\nLinux  3.10.0-693.2.2.el7.x86_64 #1 SMP x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nhere same issue in discuss\r\n\r\nhttps://discuss.elastic.co/t/es-cluster-stats-api-returning-false-values/84949\r\n\r\n```json\r\n\"fs\" : {\r\n  \"total\" : \"8192pb\",\r\n  \"total_in_bytes\" : 9223372036854775807,\r\n  \"free\" : \"8192pb\",\r\n  \"free_in_bytes\" : 9223372036854775807,\r\n  \"available\" : \"8192pb\",\r\n  \"available_in_bytes\" : 9223372036854775807\r\n}\r\n```\r\n\r\nthis issue occur by Elasticsearch Tribe node.\r\ntribe node return like this.\r\n```\r\nname                          dt     du       d\r\ndev-estribe001.ncl/es1       -1b     0b     -1b\r\n```\r\n\r\nand cluster stats api using this\r\n```java\r\nClusterStatsNodes(List<ClusterStatsNodeResponse> nodeResponses) {\r\n        this.versions = new HashSet<>();\r\n        this.fs = new FsInfo.Path();\r\n        this.plugins = new HashSet<>();\r\n\r\n        Set<InetAddress> seenAddresses = new HashSet<>(nodeResponses.size());\r\n        List<NodeInfo> nodeInfos = new ArrayList<>(nodeResponses.size());\r\n        List<NodeStats> nodeStats = new ArrayList<>(nodeResponses.size());\r\n        for (ClusterStatsNodeResponse nodeResponse : nodeResponses) {\r\n            // if first nodePresponse are tribe node --> it makes return 8EB\r\n            nodeInfos.add(nodeResponse.nodeInfo());\r\n            nodeStats.add(nodeResponse.nodeStats());\r\n            this.versions.add(nodeResponse.nodeInfo().getVersion());\r\n            this.plugins.addAll(nodeResponse.nodeInfo().getPlugins().getPluginInfos());\r\n\r\n            // now do the stats that should be deduped by hardware (implemented by ip deduping)\r\n            TransportAddress publishAddress = nodeResponse.nodeInfo().getTransport().address().publishAddress();\r\n            InetAddress inetAddress = null;\r\n            if (publishAddress.uniqueAddressTypeId() == 1) {\r\n                inetAddress = ((InetSocketTransportAddress) publishAddress).address().getAddress();\r\n            }\r\n            if (!seenAddresses.add(inetAddress)) {\r\n                continue;\r\n            }\r\n            if (nodeResponse.nodeStats().getFs() != null) {\r\n                this.fs.add(nodeResponse.nodeStats().getFs().getTotal());   // <-- here tribe node try to add this.fs\r\n            }\r\n        }\r\n        this.counts = new Counts(nodeInfos);\r\n        this.os = new OsStats(nodeInfos, nodeStats);\r\n        this.process = new ProcessStats(nodeStats);\r\n        this.jvm = new JvmStats(nodeInfos, nodeStats);\r\n        this.networkTypes = new NetworkTypes(nodeInfos);\r\n    }\r\n\r\n...\r\n\r\n// this.fs.add using this logic\r\n public void add(Path path) {\r\n            total = FsProbe.adjustForHugeFilesystems(addLong(total, path.total));\r\n            free = FsProbe.adjustForHugeFilesystems(addLong(free, path.free));\r\n            available = FsProbe.adjustForHugeFilesystems(addLong(available, path.available));\r\n            if (path.spins != null && path.spins.booleanValue()) {\r\n                // Spinning is contagious!\r\n                spins = Boolean.TRUE;\r\n            }\r\n        }\r\n\r\n...\r\n\r\n// if first node are tribe node\r\n// current = -1, other = -1\r\n// so it always return -1;\r\nprivate long addLong(long current, long other) {\r\n            if (other == -1) {\r\n                return current;\r\n            }\r\n            if (current == -1) {\r\n                return other;\r\n            }\r\n            return current + other;\r\n        }\r\n...\r\n\r\n// byte are -1 --> it makes return 8eb\r\n    static long adjustForHugeFilesystems(long bytes) {\r\n        if (bytes < 0) {\r\n            return Long.MAX_VALUE;\r\n        }\r\n        return bytes;\r\n    }\r\n```\r\n\r\nso it need to fix like this\r\n```java\r\nprivate long addLong(long current, long other) {\r\n            if (other == -1 && current == -1){\r\n                return 0;\r\n            }\r\n            if (other == -1) {\r\n                return current;\r\n            }\r\n            if (current == -1) {\r\n                return other;\r\n            }\r\n            return current + other;\r\n        }\r\n\r\n        private double addDouble(double current, double other) {\r\n            if (other == -1 && current == -1){\r\n                return 0;\r\n            }\r\n            if (other == -1) {\r\n                return current;\r\n            }\r\n            if (current == -1) {\r\n                return other;\r\n            }\r\n            return current + other;\r\n        }\r\n```\r\n\r\n**Steps to reproduce**:\r\nhard to re produce it.\r\nbecause First NodeResponse have to tribe node.\r\n\r\n**Provide logs (if relevant)**:\r\n\r\n","closed_by":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"performed_via_github_app":null}