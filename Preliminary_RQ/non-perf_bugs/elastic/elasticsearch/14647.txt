{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647/events","html_url":"https://github.com/elastic/elasticsearch/issues/14647","id":116058349,"node_id":"MDU6SXNzdWUxMTYwNTgzNDk=","number":14647,"title":"[Ingest] Add comparison processor for supporting conditionals in pipeline definition","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"labels":[{"id":268963484,"node_id":"MDU6TGFiZWwyNjg5NjM0ODQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Ingest","name":":Core/Features/Ingest","color":"0e8a16","default":false,"description":"Execution or management of Ingest Pipelines"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"assignees":[{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false}],"milestone":null,"comments":17,"created_at":"2015-11-10T08:09:39Z","updated_at":"2016-07-20T17:33:22Z","closed_at":"2016-07-20T17:33:22Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The Ingest Pipeline should support the ability for conditional branching of processor execution.\n\nThe proposal here is to define a `CompareProcessor` which will accept a list of conditions that must all be met for specific processors to be executed. This processor would have a `conditions` parameter that would accept various boolean operators, such as `gt`, `lt`, `gte`, `lte`, `eq`, `neq`. If all of the provided conditions evaluate to true, then a set of processors defined in a field potentially called `if_processors` would be executed. If any conditions in this set evaluate to false, then processors in the `else_processors` list option would be executed. This type of conditional can be though of as an \"if/else\" processor, where the `conditions` field is a compounded boolean expression joined with an `AND`. Continuing with this analogy -- the `if_processors` block would be the `if` block, and the `else_processors` would be the else block.\n\nWhether both `if_processors` and `else_processors` configuration options would be necessary is still up in the air, at least one must be defined.\n\nSince the `CompareProcessor` is just another processor, nested comparisons would be possible.\n\nHere is a potential processor definition for the `CompareProcessor`\n\n``` json\n{\n  \"compare\": {\n    \"conditions\": [\n      \"<field_name1>\" : { \"<OP1>\": x },\n      \"<field_name2>\" : { \"<OP2>\": y },\n      \"<field_name3>\" : { \"<OP3>\": z }\n    ],\n    \"if_processors\": [...],\n    \"else_processors\": [...]\n  }\n}\n```\n\nHere is an example pipeline definition with a Compare Processor\n\n``` json\n{\n  \"description\": \"_description\",\n  \"processors\": [\n    {\n      \"compare\": {\n        \"conditions\": [\n          \"ip_address\": { \"eq\": \"127.0.0.1\" },\n          \"user_age\": { \"gt\": 13 }\n        ],\n        \"if_processors\": [\n          \"compare\" : {\n            \"conditions\" : [\n               \"country_name\" : { \"neq\": \"USA\" }\n               \"if_processors\" : [\n                 {\n                   \"geoip\" : {\n                     \"source_field\" : \"ip\"\n                   }\n                 }\n               ]\n            ]\n          }\n        ],\n        \"else_processors\" : [\n          {\n            \"mutate\" : {\n              \"remove\" : [\"country_name\"]\n            }\n          }\n        ]\n      },\n      \"mutate\" : {\n        \"update\" : {\n          \"field2\" : \"_value\"\n        }\n      }\n    }\n  ]\n}\n```\n","closed_by":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"performed_via_github_app":null}