[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/493690662","html_url":"https://github.com/elastic/elasticsearch/issues/42206#issuecomment-493690662","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42206","id":493690662,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzY5MDY2Mg==","user":{"login":"GoodMirek","id":7804468,"node_id":"MDQ6VXNlcjc4MDQ0Njg=","avatar_url":"https://avatars1.githubusercontent.com/u/7804468?v=4","gravatar_id":"","url":"https://api.github.com/users/GoodMirek","html_url":"https://github.com/GoodMirek","followers_url":"https://api.github.com/users/GoodMirek/followers","following_url":"https://api.github.com/users/GoodMirek/following{/other_user}","gists_url":"https://api.github.com/users/GoodMirek/gists{/gist_id}","starred_url":"https://api.github.com/users/GoodMirek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GoodMirek/subscriptions","organizations_url":"https://api.github.com/users/GoodMirek/orgs","repos_url":"https://api.github.com/users/GoodMirek/repos","events_url":"https://api.github.com/users/GoodMirek/events{/privacy}","received_events_url":"https://api.github.com/users/GoodMirek/received_events","type":"User","site_admin":false},"created_at":"2019-05-18T16:46:17Z","updated_at":"2019-05-18T16:46:17Z","author_association":"CONTRIBUTOR","body":"It seems the issue has already been fixed for 6.8 release by [this commit](https://github.com/elastic/elasticsearch/commit/8a0b3e0fd41a7e57aa35648165c27768d9d3c91f).\r\nHowever, I am not able to validate it will work now.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/493710535","html_url":"https://github.com/elastic/elasticsearch/issues/42206#issuecomment-493710535","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42206","id":493710535,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzcxMDUzNQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-05-18T22:05:27Z","updated_at":"2019-05-18T22:05:27Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-features","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/493710545","html_url":"https://github.com/elastic/elasticsearch/issues/42206#issuecomment-493710545","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42206","id":493710545,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzcxMDU0NQ==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2019-05-18T22:05:46Z","updated_at":"2019-05-18T22:39:38Z","author_association":"MEMBER","body":"The 6.7.2 release tag does copy the settings with the resize request:\r\n\r\nhttps://github.com/elastic/elasticsearch/blob/56c6e4869ac8c10a89de1f31252f90fc3002a030/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/ShrinkStep.java#L61\r\n\r\n> Most importantly, it does not retain creation_date, what causes that further ILM processing does not happen at originally planned time.\r\n\r\nCan you share more of your policy and example use case so I can understand what you're trying to do?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/493730536","html_url":"https://github.com/elastic/elasticsearch/issues/42206#issuecomment-493730536","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42206","id":493730536,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzczMDUzNg==","user":{"login":"GoodMirek","id":7804468,"node_id":"MDQ6VXNlcjc4MDQ0Njg=","avatar_url":"https://avatars1.githubusercontent.com/u/7804468?v=4","gravatar_id":"","url":"https://api.github.com/users/GoodMirek","html_url":"https://github.com/GoodMirek","followers_url":"https://api.github.com/users/GoodMirek/followers","following_url":"https://api.github.com/users/GoodMirek/following{/other_user}","gists_url":"https://api.github.com/users/GoodMirek/gists{/gist_id}","starred_url":"https://api.github.com/users/GoodMirek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GoodMirek/subscriptions","organizations_url":"https://api.github.com/users/GoodMirek/orgs","repos_url":"https://api.github.com/users/GoodMirek/repos","events_url":"https://api.github.com/users/GoodMirek/events{/privacy}","received_events_url":"https://api.github.com/users/GoodMirek/received_events","type":"User","site_admin":false},"created_at":"2019-05-19T06:20:50Z","updated_at":"2019-05-19T06:20:50Z","author_association":"CONTRIBUTOR","body":"@dakrone Thanks for your answer. So there must be some other issue, as I still experience the described behavior.\r\n\r\nPlease find my ILM policy below:\r\n```\r\n{\r\n  \"logs-ilm-policy\" : {\r\n    \"version\" : 4,\r\n    \"modified_date\" : \"2019-05-18T19:25:43.876Z\",\r\n    \"policy\" : {\r\n      \"phases\" : {\r\n        \"warm\" : {\r\n          \"min_age\" : \"8d\",\r\n          \"actions\" : {\r\n            \"forcemerge\" : {\r\n              \"max_num_segments\" : 1\r\n            },\r\n            \"set_priority\" : {\r\n              \"priority\" : 50\r\n            },\r\n            \"shrink\" : {\r\n              \"number_of_shards\" : 1\r\n            }\r\n          }\r\n        },\r\n        \"cold\" : {\r\n          \"min_age\" : \"21d\",\r\n          \"actions\" : {\r\n            \"allocate\" : {\r\n              \"number_of_replicas\" : 0,\r\n              \"include\" : { },\r\n              \"exclude\" : { },\r\n              \"require\" : {\r\n                \"data\" : \"warm\"\r\n              }\r\n            },\r\n            \"set_priority\" : {\r\n              \"priority\" : 10\r\n            }\r\n          }\r\n        },\r\n        \"hot\" : {\r\n          \"min_age\" : \"0ms\",\r\n          \"actions\" : {\r\n            \"set_priority\" : {\r\n              \"priority\" : 100\r\n            }\r\n          }\r\n        },\r\n        \"delete\" : {\r\n          \"min_age\" : \"100d\",\r\n          \"actions\" : {\r\n            \"delete\" : { }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nWhat happens is that after transition to warm phase the `index.creation_date` is reset to the current time. The issue did not happen for indices which already had just one shard, thus were not shrunk by the shrink action.\r\nAlso, running `POST test-1/_shrink/shrink-test-1?copy_settings=true` retains the `index.creation_date`.\r\n\r\n## Use case\r\nThere are multiple logs indices. Some of them are created with time pattern in their name, e.g. \"logs_web.%{+xxxx.ww}\", which creates a new index every week. It is important that none of the indices is written again after 8 days since their creation. At that moment, I want to speed up search and save memory, so I shrink all indices to one shard, forcemerge them to one segment and also set their priority to 50. Everything works well, goal is achieved, but the issue with `index.creation_date` causes shrunk indices to transition to `cold` and `delete` phases eight days later than indices which were not shrunk.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/497139931","html_url":"https://github.com/elastic/elasticsearch/issues/42206#issuecomment-497139931","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42206","id":497139931,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzEzOTkzMQ==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2019-05-29T23:04:59Z","updated_at":"2019-05-29T23:04:59Z","author_association":"MEMBER","body":"> Everything works well, goal is achieved, but the issue with `index.creation_date` causes shrunk indices to transition to cold and delete phases eight days later than indices which were not shrunk.\r\n\r\nILM doesn't use `index.creation_date` for determining when to transition to the next phase (like cold or delete). In the \"init\" phase for an index (injected as the first step in any policy) we set custom metadata for when the index was created, see:\r\n\r\nhttps://github.com/elastic/elasticsearch/blob/45873b15a66d8a2d2dccd97bfef8a854cdc7f1cc/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/InitializePolicyContextStep.java#L46\r\n\r\nThis is what is used when determining whether to transition to a state:\r\n\r\nhttps://github.com/elastic/elasticsearch/blob/45873b15a66d8a2d2dccd97bfef8a854cdc7f1cc/x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/indexlifecycle/IndexLifecycleRunner.java#L80\r\n\r\nAre you seeing your indices transition later than expected? I can try to reproduce this behavior and see whether there's a bug there.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/497231937","html_url":"https://github.com/elastic/elasticsearch/issues/42206#issuecomment-497231937","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42206","id":497231937,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzIzMTkzNw==","user":{"login":"GoodMirek","id":7804468,"node_id":"MDQ6VXNlcjc4MDQ0Njg=","avatar_url":"https://avatars1.githubusercontent.com/u/7804468?v=4","gravatar_id":"","url":"https://api.github.com/users/GoodMirek","html_url":"https://github.com/GoodMirek","followers_url":"https://api.github.com/users/GoodMirek/followers","following_url":"https://api.github.com/users/GoodMirek/following{/other_user}","gists_url":"https://api.github.com/users/GoodMirek/gists{/gist_id}","starred_url":"https://api.github.com/users/GoodMirek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GoodMirek/subscriptions","organizations_url":"https://api.github.com/users/GoodMirek/orgs","repos_url":"https://api.github.com/users/GoodMirek/repos","events_url":"https://api.github.com/users/GoodMirek/events{/privacy}","received_events_url":"https://api.github.com/users/GoodMirek/received_events","type":"User","site_admin":false},"created_at":"2019-05-30T07:18:38Z","updated_at":"2019-05-30T07:19:06Z","author_association":"CONTRIBUTOR","body":"> Are you seeing your indices transition later than expected?\r\n\r\nYes, I do.\r\n\r\nThe issue is that `lifecycle_date_millis` is the same as `creation_date`. I do not think the issue was in the ILM lifecycle, but that the ILM shrink action did reset both the `lifecycle_date_millis` and `creation_date`. I cannot confirm whether the issue happens also in 6.8.0, as I stopped shrinking indices at all.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/498756615","html_url":"https://github.com/elastic/elasticsearch/issues/42206#issuecomment-498756615","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42206","id":498756615,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODc1NjYxNQ==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2019-06-04T16:58:26Z","updated_at":"2019-06-04T16:58:26Z","author_association":"MEMBER","body":"I ran a test today to try and reproduce this:\r\n\r\nFirst, setting up the poll interval for every 5 seconds:\r\n\r\n``` json\r\nPUT /_cluster/settings\r\n{\r\n  \"transient\": {\r\n    \"logger.org.elasticsearch.xpack.core.indexlifecycle\": \"TRACE\",\r\n    \"logger.org.elasticsearch.xpack.indexlifecycle\": \"TRACE\",\r\n    \"indices.lifecycle.poll_interval\": \"5s\"\r\n  }\r\n}\r\n```\r\n\r\nI created a policy that had only shrink and delete, waiting 1 minute to shrink, and deleting when the index is 2 minutes old\r\n\r\n``` json\r\nPUT _ilm/policy/shrink-only\r\n{\r\n  \"policy\": {\r\n    \"phases\": {\r\n      \"warm\": {\r\n        \"min_age\": \"1m\",\r\n        \"actions\": {\r\n          \"shrink\": {\r\n            \"number_of_shards\": 1\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"min_age\": \"2m\",\r\n        \"actions\": {\r\n          \"delete\": {}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAnd then create an index using it:\r\n\r\n``` json\r\nPUT /shrink-test\r\n{\r\n  \"settings\": {\r\n    \"number_of_shards\": 2,\r\n    \"number_of_replicas\": 0,\r\n    \"index.lifecycle.name\": \"shrink-only\"\r\n  }\r\n}\r\n```\r\n\r\nHere are excerpts from the logs.\r\n\r\nFirst, the index is created, ILM is waiting for it to be at least 1 minute old before moving into the \"warm\" phase:\r\n\r\n```\r\n[elasticsearch] [2019-06-04T10:40:06,677][INFO ][o.e.c.m.MetaDataCreateIndexService] [node-0] [shrink-test] creating index, cause [api], templates [], shards [2]/[0], mappings []\r\n...\r\n[elasticsearch] [2019-06-04T10:40:06,829][TRACE][o.e.x.i.IndexLifecycleRunner] [node-0] [shrink-test] checking for index age to be at least [1m] before performing actions in the \"warm\" phase. Now: 1559666406, lifecycle date: 1559666406, age: [159ms/0s]\r\n...\r\n[elasticsearch] [2019-06-04T10:40:36,760][TRACE][o.e.x.i.IndexLifecycleRunner] [node-0] [shrink-test] checking for index age to be at least [1m] before performing actions in the \"warm\" phase. Now: 1559666436, lifecycle date: 1559666406, age: [30s/30s]\r\n```\r\n\r\nAfter being > 1 minute old, it moves to the warm phase and eventually shrinks at 10:41:16 (~70 seconds after it was created), creating the `shrink-shrink-test` index:\r\n\r\n```\r\n[elasticsearch] [2019-06-04T10:41:06,761][TRACE][o.e.x.i.IndexLifecycleRunner] [node-0] [shrink-test] checking for index age to be at least [1m] before performing actions in the \"warm\" phase. Now: 1559666466, lifecycle date: 1559666406, age: [1m/60s]\r\n...\r\n[elasticsearch] [2019-06-04T10:41:16,767][DEBUG][o.e.x.i.IndexLifecycleRunner] [node-0] [shrink-test] moving to step [shrink-only] {\"phase\":\"warm\",\"action\":\"shrink\",\"name\":\"wait-for-shard-history-leases\"} -> {\"phase\":\"warm\",\"action\":\"shrink\",\"name\":\"readonly\"}\r\n...\r\n[elasticsearch] [2019-06-04T10:41:16,903][TRACE][o.e.x.i.ExecuteStepsUpdateTask] [node-0] [shrink-test] cluster state step condition met successfully (CheckShrinkReadyStep) [{\"phase\":\"warm\",\"action\":\"shrink\",\"name\":\"check-shrink-allocation\"}], moving to next step {\"phase\":\"warm\",\"action\":\"shrink\",\"name\":\"shrink\"}\r\n...\r\n[elasticsearch] [2019-06-04T10:41:16,922][TRACE][o.e.x.i.IndexLifecycleRunner] [node-0] [shrink-test] maybe running async action step (ShrinkStep) with current step {\"phase\":\"warm\",\"action\":\"shrink\",\"name\":\"shrink\"}\r\n[elasticsearch] [2019-06-04T10:41:16,923][DEBUG][o.e.x.i.IndexLifecycleRunner] [node-0] [shrink-test] running policy with async action step [{\"phase\":\"warm\",\"action\":\"shrink\",\"name\":\"shrink\"}]\r\n...\r\n[elasticsearch] [2019-06-04T10:41:16,964][INFO ][o.e.c.m.MetaDataCreateIndexService] [node-0] [shrink-shrink-test] creating index, cause [shrink_index], templates [], shards [1]/[0], mappings []\r\n```\r\n\r\nThe original index `shrink-test` index is deleted:\r\n\r\n```\r\n[elasticsearch] [2019-06-04T10:41:17,199][INFO ][o.e.c.m.MetaDataDeleteIndexService] [node-0] [shrink-test/f2XRN2ZJRiKLHVMmSsDZfQ] deleting index\r\n```\r\n\r\nNow it waits for the `shrink-shrink-index` to be 2 minutes old before moving into the delete phase:\r\n\r\n```\r\n[elasticsearch] [2019-06-04T10:41:17,290][TRACE][o.e.x.i.IndexLifecycleRunner] [node-0] [shrink-shrink-test] checking for index age to be at least [2m] before performing actions in the \"delete\" phase. Now: 1559666477, lifecycle date: 1559666406, age: [1.1m/70s]\r\n```\r\n\r\nAt 10:42:06 it moves into the delete phase, finally deleting the index at 10:42:11, 2 minutes and 5 seconds after the original index was created:\r\n\r\n```\r\n[elasticsearch] [2019-06-04T10:42:06,758][TRACE][o.e.x.i.IndexLifecycleRunner] [node-0] [shrink-shrink-test] checking for index age to be at least [2m] before performing actions in the \"delete\" phase. Now: 1559666526, lifecycle date: 1559666406, age: [2m/120s]\r\n[elasticsearch] [2019-06-04T10:42:06,758][DEBUG][o.e.x.i.IndexLifecycleRunner] [node-0] [shrink-shrink-test] moving to step [shrink-only] {\"phase\":\"warm\",\"action\":\"complete\",\"name\":\"complete\"} -> {\"phase\":\"delete\",\"action\":\"delete\",\"name\":\"wait-for-shard-history-leases\"}\r\n[elasticsearch] [2019-06-04T10:42:06,758][TRACE][o.e.x.i.MoveToNextStepUpdateTask] [node-0] moving [shrink-shrink-test] to next step ({\"phase\":\"delete\",\"action\":\"delete\",\"name\":\"wait-for-shard-history-leases\"})\r\n...\r\n[elasticsearch] [2019-06-04T10:42:11,777][INFO ][o.e.c.m.MetaDataDeleteIndexService] [node-0] [shrink-shrink-test/0NTGfF_2SEK5islAHhrCrg] deleting index\r\n```\r\n\r\nThe behavior you were describing sounds like it would only be deleted after 3 minutes instead of after 2. Are you able to reproduce this behavior in your environment?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/498796853","html_url":"https://github.com/elastic/elasticsearch/issues/42206#issuecomment-498796853","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42206","id":498796853,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODc5Njg1Mw==","user":{"login":"GoodMirek","id":7804468,"node_id":"MDQ6VXNlcjc4MDQ0Njg=","avatar_url":"https://avatars1.githubusercontent.com/u/7804468?v=4","gravatar_id":"","url":"https://api.github.com/users/GoodMirek","html_url":"https://github.com/GoodMirek","followers_url":"https://api.github.com/users/GoodMirek/followers","following_url":"https://api.github.com/users/GoodMirek/following{/other_user}","gists_url":"https://api.github.com/users/GoodMirek/gists{/gist_id}","starred_url":"https://api.github.com/users/GoodMirek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GoodMirek/subscriptions","organizations_url":"https://api.github.com/users/GoodMirek/orgs","repos_url":"https://api.github.com/users/GoodMirek/repos","events_url":"https://api.github.com/users/GoodMirek/events{/privacy}","received_events_url":"https://api.github.com/users/GoodMirek/received_events","type":"User","site_admin":false},"created_at":"2019-06-04T18:51:03Z","updated_at":"2019-06-04T18:51:03Z","author_association":"CONTRIBUTOR","body":"@dakrone Thanks for your effort.\r\nWhat version of ES did you use for your test?\r\n\r\nMy version was 6.7.2, my scenario was a bit different:\r\n1. I had existing indices without ILM policy attached to them.\r\n2. I have created ILM policy\r\n3. I have attached the ILM policy to the existing indices\r\n4. Then I observed the issue described above.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/498803840","html_url":"https://github.com/elastic/elasticsearch/issues/42206#issuecomment-498803840","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42206","id":498803840,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODgwMzg0MA==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2019-06-04T19:10:51Z","updated_at":"2019-06-04T19:10:51Z","author_association":"MEMBER","body":"@GoodMirek I was doing this with the master branch. Maybe it behaves differently if it is pre-existing indices, I'll try it with 6.7.2 and your scenario and see if I can get it to reproduce that way.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/500510539","html_url":"https://github.com/elastic/elasticsearch/issues/42206#issuecomment-500510539","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42206","id":500510539,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMDUxMDUzOQ==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2019-06-10T17:43:07Z","updated_at":"2019-06-10T17:43:07Z","author_association":"MEMBER","body":"I tested the scenario that you described @GoodMirek, but I was unable to reproduce any scenario where the date didn't work correctly for shrunked indices.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/500514104","html_url":"https://github.com/elastic/elasticsearch/issues/42206#issuecomment-500514104","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42206","id":500514104,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMDUxNDEwNA==","user":{"login":"GoodMirek","id":7804468,"node_id":"MDQ6VXNlcjc4MDQ0Njg=","avatar_url":"https://avatars1.githubusercontent.com/u/7804468?v=4","gravatar_id":"","url":"https://api.github.com/users/GoodMirek","html_url":"https://github.com/GoodMirek","followers_url":"https://api.github.com/users/GoodMirek/followers","following_url":"https://api.github.com/users/GoodMirek/following{/other_user}","gists_url":"https://api.github.com/users/GoodMirek/gists{/gist_id}","starred_url":"https://api.github.com/users/GoodMirek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GoodMirek/subscriptions","organizations_url":"https://api.github.com/users/GoodMirek/orgs","repos_url":"https://api.github.com/users/GoodMirek/repos","events_url":"https://api.github.com/users/GoodMirek/events{/privacy}","received_events_url":"https://api.github.com/users/GoodMirek/received_events","type":"User","site_admin":false},"created_at":"2019-06-10T17:51:25Z","updated_at":"2019-06-10T17:51:25Z","author_association":"CONTRIBUTOR","body":"@dakrone Thanks for your effort. I have no further ideas why and how that happened.","performed_via_github_app":null}]