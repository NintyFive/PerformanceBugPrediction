[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/231165384","html_url":"https://github.com/elastic/elasticsearch/issues/19305#issuecomment-231165384","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19305","id":231165384,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMTE2NTM4NA==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2016-07-07T18:25:50Z","updated_at":"2016-07-07T18:25:50Z","author_association":"MEMBER","body":"If the modules directory exists as it should, the modules will be loaded, even when constructing a Node directly. You just need the proper environment.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/231205056","html_url":"https://github.com/elastic/elasticsearch/issues/19305#issuecomment-231205056","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19305","id":231205056,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMTIwNTA1Ng==","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2016-07-07T20:57:26Z","updated_at":"2016-07-07T22:01:31Z","author_association":"NONE","body":"@rjernst Yes it will load if I have modules directory under elastic home. it will even load if modules jars are in my class path (rather than under modules) as long as i put plugin-descriptor.properties and plugin-security.policy under modules (not sure it is supported configuration) but my point is that with embedded deployments of elastic it is expected that all application components are inside WAR file and there is no need to manage a whole bunch of additional JARs and properties making sure they are properly upgraded with each system upgrade. That's why I am asking for more open module deployment and registration mechanism. For us it will be a nightmare because we have control over people who perform deployments we will end up with messed up modules directory and we have quite a few apps with elastic deployed \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/231220777","html_url":"https://github.com/elastic/elasticsearch/issues/19305#issuecomment-231220777","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19305","id":231220777,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMTIyMDc3Nw==","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2016-07-07T22:01:40Z","updated_at":"2016-07-07T22:03:47Z","author_association":"NONE","body":"@rjernst  Another viable option would be supporting not just modules and plugins directories but modules.zip and plugins.zip for packaged modules. With that integrity of modules inside the archive could be ensured and upgrade becomes just a matter of replacing modules.zp. All it takes is an abstraction over file based modules/plugins access so it can work over file system or zip file. I would be happy too develop it if it is acceptable for the elastic team. Actually there will b every little to do \nJava 7 already have File system over ZIP file\n\nhttp://docs.oracle.com/javase/7/docs/technotes/guides/io/fsp/zipfilesystemprovider.html\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/231234103","html_url":"https://github.com/elastic/elasticsearch/issues/19305#issuecomment-231234103","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19305","id":231234103,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMTIzNDEwMw==","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2016-07-07T23:09:34Z","updated_at":"2016-07-07T23:09:34Z","author_association":"NONE","body":"The environment an dPluginService are actually implemented on top of FileSystem so using Zip file system is possible instead of the default one\n\njust to try I plugged this into Environment class\n\n```\n      URI uri = URI.create(\"jar:\"+ homeFile.toUri() + \"/modules.zip\");\n      FileSystem fs = zipFileSystems.get(uri);\n      if (fs == null) {\n        Map<String, String> env = new HashMap<>();\n        env.put(\"create\", \"true\");\n        try {\n          fs = FileSystems.newFileSystem(uri, env);\n          zipFileSystems.put(uri, fs);\n        } catch (IOException e) {\n          throw new IllegalArgumentException(e);\n        }\n      }\n      modulesFile = fs.getPath(\"/\");\n```\n\nand when my modules.zip only have plugin-descriptor.properties and plugin-security.policy while actual JARS are on class path it worked just fine. Unfortunately if I bundle JARS in modules it fails in checkJarHell because it jumps from Path representation linked to Zip file file system to relative URIs then files could not be found\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/231301757","html_url":"https://github.com/elastic/elasticsearch/issues/19305#issuecomment-231301757","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19305","id":231301757,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMTMwMTc1Nw==","user":{"login":"jprante","id":635745,"node_id":"MDQ6VXNlcjYzNTc0NQ==","avatar_url":"https://avatars1.githubusercontent.com/u/635745?v=4","gravatar_id":"","url":"https://api.github.com/users/jprante","html_url":"https://github.com/jprante","followers_url":"https://api.github.com/users/jprante/followers","following_url":"https://api.github.com/users/jprante/following{/other_user}","gists_url":"https://api.github.com/users/jprante/gists{/gist_id}","starred_url":"https://api.github.com/users/jprante/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jprante/subscriptions","organizations_url":"https://api.github.com/users/jprante/orgs","repos_url":"https://api.github.com/users/jprante/repos","events_url":"https://api.github.com/users/jprante/events{/privacy}","received_events_url":"https://api.github.com/users/jprante/received_events","type":"User","site_admin":false},"created_at":"2016-07-08T08:15:48Z","updated_at":"2016-07-08T08:16:05Z","author_association":"CONTRIBUTOR","body":"@roytmana excellent suggestion. \n\nAdding plugins in zip filesystems is also how I implemented pluggable web apps in my Groovy web app platform so I would welcome this as an opportunity to better package and deploy plugins for ES.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243596049","html_url":"https://github.com/elastic/elasticsearch/issues/19305#issuecomment-243596049","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19305","id":243596049,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzU5NjA0OQ==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2016-08-30T22:03:25Z","updated_at":"2016-08-30T22:03:25Z","author_association":"MEMBER","body":"We [do not support](https://www.elastic.co/blog/elasticsearch-the-server) embedded Elasticsearch nodes.\n","performed_via_github_app":null}]