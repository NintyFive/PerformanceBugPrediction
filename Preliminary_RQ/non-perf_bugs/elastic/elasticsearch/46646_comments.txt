[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/530724912","html_url":"https://github.com/elastic/elasticsearch/issues/46646#issuecomment-530724912","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46646","id":530724912,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMDcyNDkxMg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-09-12T08:35:02Z","updated_at":"2019-09-12T08:35:02Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-security","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/531145886","html_url":"https://github.com/elastic/elasticsearch/issues/46646#issuecomment-531145886","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46646","id":531145886,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMTE0NTg4Ng==","user":{"login":"bytebilly","id":52658645,"node_id":"MDQ6VXNlcjUyNjU4NjQ1","avatar_url":"https://avatars0.githubusercontent.com/u/52658645?v=4","gravatar_id":"","url":"https://api.github.com/users/bytebilly","html_url":"https://github.com/bytebilly","followers_url":"https://api.github.com/users/bytebilly/followers","following_url":"https://api.github.com/users/bytebilly/following{/other_user}","gists_url":"https://api.github.com/users/bytebilly/gists{/gist_id}","starred_url":"https://api.github.com/users/bytebilly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bytebilly/subscriptions","organizations_url":"https://api.github.com/users/bytebilly/orgs","repos_url":"https://api.github.com/users/bytebilly/repos","events_url":"https://api.github.com/users/bytebilly/events{/privacy}","received_events_url":"https://api.github.com/users/bytebilly/received_events","type":"User","site_admin":false},"created_at":"2019-09-13T08:18:36Z","updated_at":"2019-09-13T08:18:36Z","author_association":"NONE","body":"@bizybot if I get the context correctly, the uniqueness is about the `name` property of the API key (not the `id`). The following considerations are assuming this is correct.\r\n\r\nFrom a technical point of view, having the `name` field unique is not a strict requirement, since we already have the `id` field that guarantees we can distinguish two keys with the same name.\r\n\r\nIn my opinion, the problem arise when keys are managed by the user. This is something we may expect to happen via APIs, and also via the Kibana UI (see https://github.com/elastic/elasticsearch-team/issues/228 for context).\r\nIn such context, users will primarily use the `name` field to recognize keys and their scope, rather than the `id` that is an internal opaque attribute that cannot be helpful to remind.\r\n\r\nIf we don't guarantee uniqueness of the `name` field, users can create two keys with the same value: not a good practice, but it may happen for a variety of reasons.\r\nIf they need to revoke one of the two, they will not know which is the right one.\r\n\r\nThat's why I think that having `name` unique is important. It should probably be unique per-user, so different users may have the same key name. This would require adding the \"owner\" in the equation, but with users being able to manage their own API keys in the next releases, it could make sense anyway.\r\n\r\nIf you look at GitHub PAT, for example, they enforce `note` (the equivalent of our `name`) to be unique.\r\n\r\nWhat do you think?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/531701506","html_url":"https://github.com/elastic/elasticsearch/issues/46646#issuecomment-531701506","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46646","id":531701506,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMTcwMTUwNg==","user":{"login":"bizybot","id":902768,"node_id":"MDQ6VXNlcjkwMjc2OA==","avatar_url":"https://avatars2.githubusercontent.com/u/902768?v=4","gravatar_id":"","url":"https://api.github.com/users/bizybot","html_url":"https://github.com/bizybot","followers_url":"https://api.github.com/users/bizybot/followers","following_url":"https://api.github.com/users/bizybot/following{/other_user}","gists_url":"https://api.github.com/users/bizybot/gists{/gist_id}","starred_url":"https://api.github.com/users/bizybot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bizybot/subscriptions","organizations_url":"https://api.github.com/users/bizybot/orgs","repos_url":"https://api.github.com/users/bizybot/repos","events_url":"https://api.github.com/users/bizybot/events{/privacy}","received_events_url":"https://api.github.com/users/bizybot/received_events","type":"User","site_admin":false},"created_at":"2019-09-16T09:23:02Z","updated_at":"2019-09-16T09:23:02Z","author_association":"CONTRIBUTOR","body":"Thank you @bytebilly for your comment.\r\n\r\nYour understanding is correct, the `Id` field is there for distinguishing two API keys and the purpose for `name` was to identify API key by some user-defined tag.\r\n\r\nI agree with uniqueness amongst all API keys may not be desirable but per user makes sense.\r\n\r\nIf we want to guarantee this behavior then we need to refresh the index on indexing new API key document immediately. This will ensure that when we query for duplicates we can see those.\r\nThen this will be similar to the put user request where the refresh is immediate.\r\n\r\nAnd where we require performance of API key creation (which so far has not been a concern) the users can set appropriate refresh policy in the Api key request.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/532579790","html_url":"https://github.com/elastic/elasticsearch/issues/46646#issuecomment-532579790","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46646","id":532579790,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMjU3OTc5MA==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2019-09-18T08:29:48Z","updated_at":"2019-09-18T08:29:48Z","author_association":"CONTRIBUTOR","body":">  the users can set appropriate refresh policy in the Api key request.\r\n\r\nBut won't that mean they are able to bypass the uniqueness check?\r\nAre we just saying the unqiueness check is best efforts?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/532585667","html_url":"https://github.com/elastic/elasticsearch/issues/46646#issuecomment-532585667","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46646","id":532585667,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMjU4NTY2Nw==","user":{"login":"bytebilly","id":52658645,"node_id":"MDQ6VXNlcjUyNjU4NjQ1","avatar_url":"https://avatars0.githubusercontent.com/u/52658645?v=4","gravatar_id":"","url":"https://api.github.com/users/bytebilly","html_url":"https://github.com/bytebilly","followers_url":"https://api.github.com/users/bytebilly/followers","following_url":"https://api.github.com/users/bytebilly/following{/other_user}","gists_url":"https://api.github.com/users/bytebilly/gists{/gist_id}","starred_url":"https://api.github.com/users/bytebilly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bytebilly/subscriptions","organizations_url":"https://api.github.com/users/bytebilly/orgs","repos_url":"https://api.github.com/users/bytebilly/repos","events_url":"https://api.github.com/users/bytebilly/events{/privacy}","received_events_url":"https://api.github.com/users/bytebilly/received_events","type":"User","site_admin":false},"created_at":"2019-09-18T08:44:48Z","updated_at":"2019-09-18T08:44:48Z","author_association":"NONE","body":"> > the users can set appropriate refresh policy in the Api key request.\r\n\r\n> But won't that mean they are able to bypass the uniqueness check?\r\nAre we just saying the unqiueness check is best efforts?\r\n\r\nI probably misunderstood that. I thought it means they have to wait the refresh interval (whatever they set) before the API call returns.\r\n\r\nI'd suggest to consider the uniqueness as a strict constraint, if we want to make it predictable and allow users to rely on it. This may impact the way we'll present keys in the UI too.\r\nIs forcing the refresh a performance concern? I'd expect the API keys will not be created too frequently, but obviously I understand we want to consider the case.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/534414754","html_url":"https://github.com/elastic/elasticsearch/issues/46646#issuecomment-534414754","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46646","id":534414754,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNDQxNDc1NA==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2019-09-24T06:42:08Z","updated_at":"2019-09-24T06:42:08Z","author_association":"CONTRIBUTOR","body":">  I thought it means they have to wait the refresh interval (whatever they set) before the API call returns.\r\n\r\nIf you want to optimise for performance you want to avoid any forced refresh, but neither do you want to wait for the standard refresh time.\r\nThere isn't really an option to strictly enforce uniqueness (by user or globally) and also optimise for bulk creation (particularly in the current API which has no bulk creation options).\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/534783915","html_url":"https://github.com/elastic/elasticsearch/issues/46646#issuecomment-534783915","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46646","id":534783915,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNDc4MzkxNQ==","user":{"login":"bizybot","id":902768,"node_id":"MDQ6VXNlcjkwMjc2OA==","avatar_url":"https://avatars2.githubusercontent.com/u/902768?v=4","gravatar_id":"","url":"https://api.github.com/users/bizybot","html_url":"https://github.com/bizybot","followers_url":"https://api.github.com/users/bizybot/followers","following_url":"https://api.github.com/users/bizybot/following{/other_user}","gists_url":"https://api.github.com/users/bizybot/gists{/gist_id}","starred_url":"https://api.github.com/users/bizybot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bizybot/subscriptions","organizations_url":"https://api.github.com/users/bizybot/orgs","repos_url":"https://api.github.com/users/bizybot/repos","events_url":"https://api.github.com/users/bizybot/events{/privacy}","received_events_url":"https://api.github.com/users/bizybot/received_events","type":"User","site_admin":false},"created_at":"2019-09-24T23:15:50Z","updated_at":"2019-09-24T23:15:50Z","author_association":"CONTRIBUTOR","body":"~If we want to guarantee this behavior then we need to refresh the index on indexing new API key~\r\n\r\n+1 that there is no option to enforce strict uniqueness unless we add it to the `id` of the API key created which we may not want to do.\r\n\r\nI am leaning towards not having this constraint of having a unique API key name and treat it as a tag/additional metadata. \r\nA user might have the same tag for multiple keys and there is a creation time to differentiate between them. It may be used to tag API keys like `service: finance`, `service: hr` by admins creating API keys for different apps connecting to ES.\r\n@bytebilly @tvernum thoughts?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/534789613","html_url":"https://github.com/elastic/elasticsearch/issues/46646#issuecomment-534789613","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46646","id":534789613,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNDc4OTYxMw==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2019-09-24T23:42:02Z","updated_at":"2019-09-24T23:42:02Z","author_association":"CONTRIBUTOR","body":"My vote would be to not enforce any uniqueness in the API. We can't do it well, and I don't think we should do it badly.\r\n\r\nThere's also no real reason to enforce it - it doesn't help us, and if they're system generated keys (e.g. fleet) then what do we expect the system to do? Just keep appending randomness until it works?\r\n\r\nThe UI could use the GET API with `name` and `owner=true` to check for an existing key before saving, if we think that would be a usability improvement, but I don't think it belongs in the API.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/535460244","html_url":"https://github.com/elastic/elasticsearch/issues/46646#issuecomment-535460244","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46646","id":535460244,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNTQ2MDI0NA==","user":{"login":"bytebilly","id":52658645,"node_id":"MDQ6VXNlcjUyNjU4NjQ1","avatar_url":"https://avatars0.githubusercontent.com/u/52658645?v=4","gravatar_id":"","url":"https://api.github.com/users/bytebilly","html_url":"https://github.com/bytebilly","followers_url":"https://api.github.com/users/bytebilly/followers","following_url":"https://api.github.com/users/bytebilly/following{/other_user}","gists_url":"https://api.github.com/users/bytebilly/gists{/gist_id}","starred_url":"https://api.github.com/users/bytebilly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bytebilly/subscriptions","organizations_url":"https://api.github.com/users/bytebilly/orgs","repos_url":"https://api.github.com/users/bytebilly/repos","events_url":"https://api.github.com/users/bytebilly/events{/privacy}","received_events_url":"https://api.github.com/users/bytebilly/received_events","type":"User","site_admin":false},"created_at":"2019-09-26T11:25:15Z","updated_at":"2019-09-26T11:25:15Z","author_association":"NONE","body":"I'm still on my idea that uniqueness could help to improve UX of API keys.\r\n\r\nHowever, since there is no simple and clean way to reach this goal via the API, and it is not a strict constraint, I agree it could be done in the UI, if we agree it can bring benefits.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/536889974","html_url":"https://github.com/elastic/elasticsearch/issues/46646#issuecomment-536889974","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46646","id":536889974,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNjg4OTk3NA==","user":{"login":"bizybot","id":902768,"node_id":"MDQ6VXNlcjkwMjc2OA==","avatar_url":"https://avatars2.githubusercontent.com/u/902768?v=4","gravatar_id":"","url":"https://api.github.com/users/bizybot","html_url":"https://github.com/bizybot","followers_url":"https://api.github.com/users/bizybot/followers","following_url":"https://api.github.com/users/bizybot/following{/other_user}","gists_url":"https://api.github.com/users/bizybot/gists{/gist_id}","starred_url":"https://api.github.com/users/bizybot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bizybot/subscriptions","organizations_url":"https://api.github.com/users/bizybot/orgs","repos_url":"https://api.github.com/users/bizybot/repos","events_url":"https://api.github.com/users/bizybot/events{/privacy}","received_events_url":"https://api.github.com/users/bizybot/received_events","type":"User","site_admin":false},"created_at":"2019-10-01T06:35:12Z","updated_at":"2019-10-01T06:35:12Z","author_association":"CONTRIBUTOR","body":"Based on the above discussion, I will create a PR to remove the uniqueness constraint for the API key name as we cannot guarantee the uniqueness. Thank you.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/537059483","html_url":"https://github.com/elastic/elasticsearch/issues/46646#issuecomment-537059483","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46646","id":537059483,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNzA1OTQ4Mw==","user":{"login":"bytebilly","id":52658645,"node_id":"MDQ6VXNlcjUyNjU4NjQ1","avatar_url":"https://avatars0.githubusercontent.com/u/52658645?v=4","gravatar_id":"","url":"https://api.github.com/users/bytebilly","html_url":"https://github.com/bytebilly","followers_url":"https://api.github.com/users/bytebilly/followers","following_url":"https://api.github.com/users/bytebilly/following{/other_user}","gists_url":"https://api.github.com/users/bytebilly/gists{/gist_id}","starred_url":"https://api.github.com/users/bytebilly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bytebilly/subscriptions","organizations_url":"https://api.github.com/users/bytebilly/orgs","repos_url":"https://api.github.com/users/bytebilly/repos","events_url":"https://api.github.com/users/bytebilly/events{/privacy}","received_events_url":"https://api.github.com/users/bytebilly/received_events","type":"User","site_admin":false},"created_at":"2019-10-01T14:20:57Z","updated_at":"2019-10-01T14:20:57Z","author_association":"NONE","body":"@jethr0null @cjcenizal this is not strictly related to the first iteration we are working on for API key management UI in Kibana, but we should reconsider and discuss about that if/when we'll add the ability to create new entries in the UI.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/537178345","html_url":"https://github.com/elastic/elasticsearch/issues/46646#issuecomment-537178345","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46646","id":537178345,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNzE3ODM0NQ==","user":{"login":"cjcenizal","id":1238659,"node_id":"MDQ6VXNlcjEyMzg2NTk=","avatar_url":"https://avatars2.githubusercontent.com/u/1238659?v=4","gravatar_id":"","url":"https://api.github.com/users/cjcenizal","html_url":"https://github.com/cjcenizal","followers_url":"https://api.github.com/users/cjcenizal/followers","following_url":"https://api.github.com/users/cjcenizal/following{/other_user}","gists_url":"https://api.github.com/users/cjcenizal/gists{/gist_id}","starred_url":"https://api.github.com/users/cjcenizal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cjcenizal/subscriptions","organizations_url":"https://api.github.com/users/cjcenizal/orgs","repos_url":"https://api.github.com/users/cjcenizal/repos","events_url":"https://api.github.com/users/cjcenizal/events{/privacy}","received_events_url":"https://api.github.com/users/cjcenizal/received_events","type":"User","site_admin":false},"created_at":"2019-10-01T18:52:51Z","updated_at":"2019-10-01T18:52:51Z","author_association":"CONTRIBUTOR","body":"Thanks @bytebilly.\r\n\r\n> I'm still on my idea that uniqueness could help to improve UX of API keys.\r\n> However, since there is no simple and clean way to reach this goal via the API, and it is not a strict constraint, I agree it could be done in the UI, if we agree it can bring benefits.\r\n\r\nI agree with this.\r\n\r\n> The UI could use the GET API with name and owner=true to check for an existing key before saving, if we think that would be a usability improvement, but I don't think it belongs in the API.\r\n\r\nWe can use this workaround that Tim suggested.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/537335354","html_url":"https://github.com/elastic/elasticsearch/issues/46646#issuecomment-537335354","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46646","id":537335354,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNzMzNTM1NA==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2019-10-02T04:57:04Z","updated_at":"2019-10-02T04:57:04Z","author_association":"CONTRIBUTOR","body":"> We can use this workaround that Tim suggested.\r\n\r\n@jkakavas raised a concern (in the security area meeting) that, if the UI prevents something, then users will make assumptions that it can never happen and might treat the name as unique even though it isn't.\r\nI don't have a strong view, about whether that should change our approach (e.g. to warn the user rather than strictly prevent them from creating a duplicate), but I think it's worth capturing here.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/537481535","html_url":"https://github.com/elastic/elasticsearch/issues/46646#issuecomment-537481535","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46646","id":537481535,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNzQ4MTUzNQ==","user":{"login":"bytebilly","id":52658645,"node_id":"MDQ6VXNlcjUyNjU4NjQ1","avatar_url":"https://avatars0.githubusercontent.com/u/52658645?v=4","gravatar_id":"","url":"https://api.github.com/users/bytebilly","html_url":"https://github.com/bytebilly","followers_url":"https://api.github.com/users/bytebilly/followers","following_url":"https://api.github.com/users/bytebilly/following{/other_user}","gists_url":"https://api.github.com/users/bytebilly/gists{/gist_id}","starred_url":"https://api.github.com/users/bytebilly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bytebilly/subscriptions","organizations_url":"https://api.github.com/users/bytebilly/orgs","repos_url":"https://api.github.com/users/bytebilly/repos","events_url":"https://api.github.com/users/bytebilly/events{/privacy}","received_events_url":"https://api.github.com/users/bytebilly/received_events","type":"User","site_admin":false},"created_at":"2019-10-02T13:02:01Z","updated_at":"2019-10-02T13:02:01Z","author_association":"NONE","body":"I agree warning instead of blocking is a reasonable approach — we cannot prevent it from happening anyway since it will be possible via API.\r\n\r\nSince this check is just for user's UX, if they know and they want to create it anyway... they will deal with it 🙂 ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/537520141","html_url":"https://github.com/elastic/elasticsearch/issues/46646#issuecomment-537520141","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46646","id":537520141,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNzUyMDE0MQ==","user":{"login":"albertzaharovits","id":4568420,"node_id":"MDQ6VXNlcjQ1Njg0MjA=","avatar_url":"https://avatars2.githubusercontent.com/u/4568420?v=4","gravatar_id":"","url":"https://api.github.com/users/albertzaharovits","html_url":"https://github.com/albertzaharovits","followers_url":"https://api.github.com/users/albertzaharovits/followers","following_url":"https://api.github.com/users/albertzaharovits/following{/other_user}","gists_url":"https://api.github.com/users/albertzaharovits/gists{/gist_id}","starred_url":"https://api.github.com/users/albertzaharovits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertzaharovits/subscriptions","organizations_url":"https://api.github.com/users/albertzaharovits/orgs","repos_url":"https://api.github.com/users/albertzaharovits/repos","events_url":"https://api.github.com/users/albertzaharovits/events{/privacy}","received_events_url":"https://api.github.com/users/albertzaharovits/received_events","type":"User","site_admin":false},"created_at":"2019-10-02T14:30:36Z","updated_at":"2019-10-02T14:30:36Z","author_association":"CONTRIBUTOR","body":"Although people's names are not unique, the `name` qualifier does raise some expectation of uniqueness. I suggest we present the `name` as a `tag` in the UI. On the ES side we could also return a `tag` alongside a `name` which would be having identical values in 7.x but `name` would be removed in 8 (due to the lack of API versioning).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/537909892","html_url":"https://github.com/elastic/elasticsearch/issues/46646#issuecomment-537909892","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46646","id":537909892,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNzkwOTg5Mg==","user":{"login":"bytebilly","id":52658645,"node_id":"MDQ6VXNlcjUyNjU4NjQ1","avatar_url":"https://avatars0.githubusercontent.com/u/52658645?v=4","gravatar_id":"","url":"https://api.github.com/users/bytebilly","html_url":"https://github.com/bytebilly","followers_url":"https://api.github.com/users/bytebilly/followers","following_url":"https://api.github.com/users/bytebilly/following{/other_user}","gists_url":"https://api.github.com/users/bytebilly/gists{/gist_id}","starred_url":"https://api.github.com/users/bytebilly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bytebilly/subscriptions","organizations_url":"https://api.github.com/users/bytebilly/orgs","repos_url":"https://api.github.com/users/bytebilly/repos","events_url":"https://api.github.com/users/bytebilly/events{/privacy}","received_events_url":"https://api.github.com/users/bytebilly/received_events","type":"User","site_admin":false},"created_at":"2019-10-03T11:43:16Z","updated_at":"2019-10-03T11:43:16Z","author_association":"NONE","body":"Since we agreed on the backend changes in the API, I created another issue to discuss the specific proposal for UI behavior and we can move the conversation there: https://github.com/elastic/elasticsearch/issues/47502","performed_via_github_app":null}]