[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/470950636","html_url":"https://github.com/elastic/elasticsearch/issues/39845#issuecomment-470950636","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39845","id":470950636,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDk1MDYzNg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-03-08T14:40:23Z","updated_at":"2019-03-08T14:40:23Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-analytics-geo","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/483821998","html_url":"https://github.com/elastic/elasticsearch/issues/39845#issuecomment-483821998","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39845","id":483821998,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzgyMTk5OA==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-04-16T20:01:52Z","updated_at":"2019-04-16T20:01:52Z","author_association":"MEMBER","body":"Started to look into this.  I agree the `500` errors are no good.  I'm not sure I like the `403 Forbidden` though, since that sorta implies it's some kind of authentication issue.\r\n\r\nML uses `409 Conflict` when trying to start an already started datafeed, which I think is a better fit.  It specifically applies to a conflict of internal state, although part of `409 Conflict` says it may be something the user can fix.  I guess it's \"fixable\" by the user stopping the job, but in any case, it feels like a better status than `403 Forbidden`.\r\n\r\nML also makes stopping datafeeds idempotent even if they are already stopped.  I think this is done to make UI management easier.\r\n\r\n@jen-huang @cjcenizal any opinions on this?\r\n\r\nMarking this as team-discuss so I can ask the A&G team in the next meeting.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/483837681","html_url":"https://github.com/elastic/elasticsearch/issues/39845#issuecomment-483837681","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39845","id":483837681,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzgzNzY4MQ==","user":{"login":"cjcenizal","id":1238659,"node_id":"MDQ6VXNlcjEyMzg2NTk=","avatar_url":"https://avatars2.githubusercontent.com/u/1238659?v=4","gravatar_id":"","url":"https://api.github.com/users/cjcenizal","html_url":"https://github.com/cjcenizal","followers_url":"https://api.github.com/users/cjcenizal/followers","following_url":"https://api.github.com/users/cjcenizal/following{/other_user}","gists_url":"https://api.github.com/users/cjcenizal/gists{/gist_id}","starred_url":"https://api.github.com/users/cjcenizal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cjcenizal/subscriptions","organizations_url":"https://api.github.com/users/cjcenizal/orgs","repos_url":"https://api.github.com/users/cjcenizal/repos","events_url":"https://api.github.com/users/cjcenizal/events{/privacy}","received_events_url":"https://api.github.com/users/cjcenizal/received_events","type":"User","site_admin":false},"created_at":"2019-04-16T20:49:30Z","updated_at":"2019-04-16T20:49:30Z","author_association":"CONTRIBUTOR","body":"Idempotency feels intuitive to me wrt start/stop actions. In those situations, I'd expect a `200` response, because the resource is in the desired state.\r\n\r\nA `409` code also seems the most reasonable response when trying to execute a state change that's disallowed by the current state -- agreed that `403` is a bit misleading for the reasons you mention @polyfractal.\r\n\r\nI guess we're not considering `418` in either of these scenarios? :)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/484050056","html_url":"https://github.com/elastic/elasticsearch/issues/39845#issuecomment-484050056","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39845","id":484050056,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NDA1MDA1Ng==","user":{"login":"sebelga","id":2854616,"node_id":"MDQ6VXNlcjI4NTQ2MTY=","avatar_url":"https://avatars0.githubusercontent.com/u/2854616?v=4","gravatar_id":"","url":"https://api.github.com/users/sebelga","html_url":"https://github.com/sebelga","followers_url":"https://api.github.com/users/sebelga/followers","following_url":"https://api.github.com/users/sebelga/following{/other_user}","gists_url":"https://api.github.com/users/sebelga/gists{/gist_id}","starred_url":"https://api.github.com/users/sebelga/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebelga/subscriptions","organizations_url":"https://api.github.com/users/sebelga/orgs","repos_url":"https://api.github.com/users/sebelga/repos","events_url":"https://api.github.com/users/sebelga/events{/privacy}","received_events_url":"https://api.github.com/users/sebelga/received_events","type":"User","site_admin":false},"created_at":"2019-04-17T11:48:06Z","updated_at":"2019-04-17T11:48:06Z","author_association":"CONTRIBUTOR","body":"I also would vote or Idempotency on those actions as, to me, they are neither\r\n\r\n- a `400 Bad request` (the request is well formulated)\r\n- nor a `409 Conflict` (there is no state _change_ that needs to occur, so no conflict possible)\r\n- nor a `403 Forbidden` (the user is allowed to execute the request)\r\n\r\nAnd above all, it is a much nicer UX ðŸ˜Š \r\n\r\nThe real downside is the breaking change it would create.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/484203017","html_url":"https://github.com/elastic/elasticsearch/issues/39845#issuecomment-484203017","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39845","id":484203017,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NDIwMzAxNw==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-04-17T18:14:10Z","updated_at":"2019-04-17T18:14:10Z","author_association":"MEMBER","body":"We chatted in the A&G meeting and came to the same conclusion: idempotency and returning `200 OK` made the most sense.\r\n\r\nWe still need to deal with the break this introduces, and the team wasn't sure if this is something we could slide into a minor or not.  It's a break, but only if you have special code that does something important the second time an API is called (like as part of a sanity check or test or something).  We're leaning towards ok to break that in a minor but wasn't decided.  I'll work on a PR and we can discuss what branches it can go into there.\r\n\r\n> I guess we're not considering 418 in either of these scenarios? :)\r\n\r\nDon't tempt me! :)","performed_via_github_app":null}]