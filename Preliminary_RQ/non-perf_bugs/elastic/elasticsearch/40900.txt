{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/40900","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40900/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40900/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40900/events","html_url":"https://github.com/elastic/elasticsearch/issues/40900","id":429758955,"node_id":"MDU6SXNzdWU0Mjk3NTg5NTU=","number":40900,"title":"Frozen indices could increase resource usage on hot nodes?","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"}],"state":"closed","locked":false,"assignee":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"assignees":[{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2019-04-05T13:36:24Z","updated_at":"2019-06-11T08:11:59Z","closed_at":"2019-06-11T08:11:59Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With our current approach to phasing searches (query then fetch) we assume that shards servicing a query will respond within similar timeframes. We keep Lucene reader contexts open until all shards have responded to the query phase so we can then fetch the final top doc IDs. \r\n\r\nIf there is a big gap in response times between the start of the query and the final set of top matches being returned from the query phase we are hanging on to resources for longer than we'd like. Frozen indices represent such a scenario where \"hot\" nodes undergoing constant indexing and search activity may now be asked to hang on to several reader contexts for longer while slower frozen indices hit by the same query lag in producing their responses.\r\n\r\nOne such scenario may be a phone company that keeps a \"hot\" window of 2 or 3 days' call data but has an investigation team who occasionally need to search for a phone number's calls going back a few years across frozen indices and are prepared to wait for the response.\r\n\r\nIn this case the long-running searches will impact the number of points-in-time that need to be kept open on the hot nodes. Of course the applications could use `top-hits` aggs instead of regular `hits` to make searches finish in the query phase. This would be a work-around but the concern raised here is that the default behaviour may be a little \"trappy\".\r\n\r\nThoughts? cc @jpountz ","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}