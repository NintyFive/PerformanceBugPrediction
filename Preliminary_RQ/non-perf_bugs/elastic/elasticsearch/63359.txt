{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/63359","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63359/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63359/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63359/events","html_url":"https://github.com/elastic/elasticsearch/issues/63359","id":715987964,"node_id":"MDU6SXNzdWU3MTU5ODc5NjQ=","number":63359,"title":"[CI] S3BlobContainerRetriesTests testReadRangeBlobWithRetries fails periodically","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"labels":[{"id":143077482,"node_id":"MDU6TGFiZWwxNDMwNzc0ODI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Snapshot/Restore","name":":Distributed/Snapshot/Restore","color":"0e8a16","default":false,"description":"Anything directly related to the `_snapshot/*` APIs"},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"},{"id":1967496670,"node_id":"MDU6TGFiZWwxOTY3NDk2Njcw","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Distributed","name":"Team:Distributed","color":"fef2c0","default":false,"description":"Meta label for distributed team"}],"state":"closed","locked":false,"assignee":{"login":"fcofdez","id":1033457,"node_id":"MDQ6VXNlcjEwMzM0NTc=","avatar_url":"https://avatars1.githubusercontent.com/u/1033457?v=4","gravatar_id":"","url":"https://api.github.com/users/fcofdez","html_url":"https://github.com/fcofdez","followers_url":"https://api.github.com/users/fcofdez/followers","following_url":"https://api.github.com/users/fcofdez/following{/other_user}","gists_url":"https://api.github.com/users/fcofdez/gists{/gist_id}","starred_url":"https://api.github.com/users/fcofdez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fcofdez/subscriptions","organizations_url":"https://api.github.com/users/fcofdez/orgs","repos_url":"https://api.github.com/users/fcofdez/repos","events_url":"https://api.github.com/users/fcofdez/events{/privacy}","received_events_url":"https://api.github.com/users/fcofdez/received_events","type":"User","site_admin":false},"assignees":[{"login":"fcofdez","id":1033457,"node_id":"MDQ6VXNlcjEwMzM0NTc=","avatar_url":"https://avatars1.githubusercontent.com/u/1033457?v=4","gravatar_id":"","url":"https://api.github.com/users/fcofdez","html_url":"https://github.com/fcofdez","followers_url":"https://api.github.com/users/fcofdez/followers","following_url":"https://api.github.com/users/fcofdez/following{/other_user}","gists_url":"https://api.github.com/users/fcofdez/gists{/gist_id}","starred_url":"https://api.github.com/users/fcofdez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fcofdez/subscriptions","organizations_url":"https://api.github.com/users/fcofdez/orgs","repos_url":"https://api.github.com/users/fcofdez/repos","events_url":"https://api.github.com/users/fcofdez/events{/privacy}","received_events_url":"https://api.github.com/users/fcofdez/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2020-10-06T20:08:28Z","updated_at":"2020-10-08T08:00:55Z","closed_at":"2020-10-08T08:00:55Z","author_association":"MEMBER","active_lock_reason":null,"body":"**Build scan**:\r\n- [6.8.13] https://gradle-enterprise.elastic.co/s/wb3ywmkgn3bza\r\n- https://gradle-enterprise.elastic.co/s/q5kkokdd74k22\r\n\r\n**Repro line**:\r\n```\r\nREPRODUCE WITH: ./gradlew ':plugins:repository-s3:test' --tests \"org.elasticsearch.repositories.s3.S3BlobContainerRetriesTests.testReadRangeBlobWithRetries\" \\\r\n  -Dtests.seed=99D5D33EB1146AB1 \\\r\n  -Dtests.security.manager=true \\\r\n  -Dtests.locale=ja \\\r\n  -Dtests.timezone=Pacific/Johnston \\\r\n  -Druntime.java=8 \\\r\n  -Dtests.fips.enabled=true\r\n```\r\n**Reproduces locally?**:\r\nNo\r\n\r\n**Applicable branches**:\r\n7.9, 7.x\r\n\r\n**Failure history**:\r\nIt doesn't fail that often, here is another recent failure on 7.x branch. Since it looks like it is caused by S3 timeout, maybe we should ignore such failures in this test?\r\n\r\n-  [6.8.13] https://gradle-enterprise.elastic.co/s/gry4h7utis7lk\r\n- https://gradle-enterprise.elastic.co/s/ku5jbt3j7foxc\r\n\r\n**Failure excerpt**:\r\n```\r\ncom.amazonaws.SdkClientException: Unable to execute HTTP request: Read timed out\r\n\tat __randomizedtesting.SeedInfo.seed([99D5D33EB1146AB1:4CAF3D633EA6877E]:0)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleRetryableException(AmazonHttpClient.java:1201)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1147)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:796)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:764)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:738)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:698)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:680)\r\n\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:544)\r\n\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:524)\r\n\tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5054)\r\n\tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5000)\r\n\tat com.amazonaws.services.s3.AmazonS3Client.getObject(AmazonS3Client.java:1486)\r\n\tat org.elasticsearch.repositories.s3.S3RetryingInputStream.lambda$openStream$0(S3RetryingInputStream.java:92)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat org.elasticsearch.repositories.s3.SocketAccess.doPrivileged(SocketAccess.java:42)\r\n\tat org.elasticsearch.repositories.s3.S3RetryingInputStream.openStream(S3RetryingInputStream.java:92)\r\n\tat org.elasticsearch.repositories.s3.S3RetryingInputStream.<init>(S3RetryingInputStream.java:80)\r\n\tat org.elasticsearch.repositories.s3.S3BlobContainer.readBlob(S3BlobContainer.java:113)\r\n\tat org.elasticsearch.repositories.blobstore.AbstractBlobContainerRetriesTestCase.testReadRangeBlobWithRetries(AbstractBlobContainerRetriesTestCase.java:201)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1750)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:938)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:974)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:988)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:817)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:468)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:947)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:832)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:883)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:894)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: Read timed out\r\n\tat java.net.SocketInputStream.socketRead0(Native Method)\r\n\tat java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\r\n\tat java.net.SocketInputStream.read(SocketInputStream.java:171)\r\n\tat java.net.SocketInputStream.read(SocketInputStream.java:141)\r\n\tat org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)\r\n\tat org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)\r\n\tat org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)\r\n\tat org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)\r\n\tat org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)\r\n\tat org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)\r\n\tat org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)\r\n\tat org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)\r\n\tat org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)\r\n\tat com.amazonaws.http.protocol.SdkHttpRequestExecutor.doReceiveResponse(SdkHttpRequestExecutor.java:82)\r\n\tat org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.amazonaws.http.apache.client.impl.SdkHttpClient.execute(SdkHttpClient.java:72)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1323)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1139)\r\n\t... 54 more\r\n```\r\n\r\n","closed_by":{"login":"fcofdez","id":1033457,"node_id":"MDQ6VXNlcjEwMzM0NTc=","avatar_url":"https://avatars1.githubusercontent.com/u/1033457?v=4","gravatar_id":"","url":"https://api.github.com/users/fcofdez","html_url":"https://github.com/fcofdez","followers_url":"https://api.github.com/users/fcofdez/followers","following_url":"https://api.github.com/users/fcofdez/following{/other_user}","gists_url":"https://api.github.com/users/fcofdez/gists{/gist_id}","starred_url":"https://api.github.com/users/fcofdez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fcofdez/subscriptions","organizations_url":"https://api.github.com/users/fcofdez/orgs","repos_url":"https://api.github.com/users/fcofdez/repos","events_url":"https://api.github.com/users/fcofdez/events{/privacy}","received_events_url":"https://api.github.com/users/fcofdez/received_events","type":"User","site_admin":false},"performed_via_github_app":null}