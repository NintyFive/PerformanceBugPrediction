{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/20087","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20087/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20087/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20087/events","html_url":"https://github.com/elastic/elasticsearch/issues/20087","id":172250532,"node_id":"MDU6SXNzdWUxNzIyNTA1MzI=","number":20087,"title":"Automatically create aliases based on field","user":{"login":"hijakk","id":2235149,"node_id":"MDQ6VXNlcjIyMzUxNDk=","avatar_url":"https://avatars1.githubusercontent.com/u/2235149?v=4","gravatar_id":"","url":"https://api.github.com/users/hijakk","html_url":"https://github.com/hijakk","followers_url":"https://api.github.com/users/hijakk/followers","following_url":"https://api.github.com/users/hijakk/following{/other_user}","gists_url":"https://api.github.com/users/hijakk/gists{/gist_id}","starred_url":"https://api.github.com/users/hijakk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hijakk/subscriptions","organizations_url":"https://api.github.com/users/hijakk/orgs","repos_url":"https://api.github.com/users/hijakk/repos","events_url":"https://api.github.com/users/hijakk/events{/privacy}","received_events_url":"https://api.github.com/users/hijakk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-08-20T03:17:21Z","updated_at":"2016-08-22T14:17:10Z","closed_at":"2016-08-22T14:17:10Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the feature**:\nI have a data stream that receives a finite, but arbitrary user defined set of tags. Aliases are an extremely valuable feature, and I've got a cron job that reads every index, reads every filtered alias currently assigned to it, and then compares that against the unique set of tags in that index. Any missing aliases are created.\nThus, if a record like \n`{\"tag\":[\"a1\", \"q2\", \"r8\"]}`\nis inserted into index monthly_2016_08, and the a1 and r8 filtered aliases already exist,\n`{\"term\":{\"tag\":\"a1\"}}`\nand\n`{\"term\":{\"tag\":\"r8\"}}`\nbut the q2 alias does not, it will be created - \n`{\"term\":{\"tag\":\"q2\"}}`\n\nIn a sufficiently large cluster, this isn't the most lightweight operation to run on a regular basis, but we have to to keep our cross temporal index access to, say, /a1/_search working.\n\nIt seems like a potential optimization point with the index template aliases to allow dynamic creation of aliases based on the content of a specified field. Something like:\n`{\"aliases\" : {\"{value}\" : {\"field\":\"tag\"} }}`\nWhenever a unique token is inserted into the particular field, a filtered alias would automatically be created against that field. \nEssentially:\n`{\"term\":{\"tag\":\"{value}\"}}`\n\nThere would also be minimal cycle time with an automated process - as it is, if a tag unique to the index is added, it could take up to the interval of the cron job to be activated - while for every other run in the day, no unique tags are added to the index. \n\nIs this a feasible feature?\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}