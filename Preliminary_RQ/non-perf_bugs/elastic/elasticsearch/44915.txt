{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/44915","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44915/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44915/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44915/events","html_url":"https://github.com/elastic/elasticsearch/issues/44915","id":473452912,"node_id":"MDU6SXNzdWU0NzM0NTI5MTI=","number":44915,"title":"GeoShapeQueryTests.testRandomGeoCollectionQuery failures on CI","user":{"login":"gwbrown","id":1522844,"node_id":"MDQ6VXNlcjE1MjI4NDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1522844?v=4","gravatar_id":"","url":"https://api.github.com/users/gwbrown","html_url":"https://github.com/gwbrown","followers_url":"https://api.github.com/users/gwbrown/followers","following_url":"https://api.github.com/users/gwbrown/following{/other_user}","gists_url":"https://api.github.com/users/gwbrown/gists{/gist_id}","starred_url":"https://api.github.com/users/gwbrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gwbrown/subscriptions","organizations_url":"https://api.github.com/users/gwbrown/orgs","repos_url":"https://api.github.com/users/gwbrown/repos","events_url":"https://api.github.com/users/gwbrown/events{/privacy}","received_events_url":"https://api.github.com/users/gwbrown/received_events","type":"User","site_admin":false},"labels":[{"id":141079527,"node_id":"MDU6TGFiZWwxNDEwNzk1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Geo","name":":Analytics/Geo","color":"0e8a16","default":false,"description":"Indexing, search aggregations of geo points and shapes"},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-07-26T17:04:48Z","updated_at":"2019-07-26T20:56:36Z","closed_at":"2019-07-26T20:56:35Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"[Build scan](https://scans.gradle.com/s/qsdg7dujtvmle/tests/nfxodyych4uas-5wqvk3m5mgnzm?openStackTraces=WzBd)\r\n\r\nPer build-stats this has failed a few times in the last 60 days, and 3 times within the past couple days.\r\n\r\nReproduce line (does not reproduce locally):\r\n```\r\n/gradlew :server:test --tests \"org.elasticsearch.search.geo.GeoShapeQueryTests.testRandomGeoCollectionQuery\" -Dtests.seed=C66D73C415DBFB0C -Dtests.security.manager=true -Dtests.locale=nn-NO -Dtests.timezone=America/St_Lucia -Dcompiler.java=12 -Druntime.java=8\r\n```\r\n\r\nFailure details:\r\n```\r\njava.lang.AssertionError: \r\nquery: {\r\n  \"geo_shape\" : {\r\n    \"location\" : {\r\n      \"shape\" : {\r\n        \"type\" : \"geometrycollection\",\r\n        \"geometries\" : [\r\n          {\r\n            \"type\" : \"multipoint\",\r\n            \"coordinates\" : [\r\n              [\r\n                109.33427363785381,\r\n                -31.055602170604672\r\n              ],\r\n              [\r\n                106.1064321128294,\r\n                -29.010310521912526\r\n              ],\r\n              [\r\n                104.8001918267574,\r\n                -31.24373213861376\r\n              ],\r\n              [\r\n                109.09068417090897,\r\n                -30.227476666966684\r\n              ],\r\n              [\r\n                108.52113521171589,\r\n                -30.18572773332367\r\n              ],\r\n              [\r\n                108.97009378627727,\r\n                -28.957151596631558\r\n              ],\r\n              [\r\n                104.27021889977178,\r\n                -30.746722049972746\r\n              ],\r\n              [\r\n                106.04757005639395,\r\n                -30.049325249811364\r\n              ],\r\n              [\r\n                106.16192110494983,\r\n                -29.583153339133382\r\n              ],\r\n              [\r\n                108.41290548703893,\r\n                -30.839102308836758\r\n              ]\r\n            ]\r\n          },\r\n          {\r\n            \"type\" : \"linestring\",\r\n            \"coordinates\" : [\r\n              [\r\n                105.77812860342026,\r\n                -32.29217300567255\r\n              ],\r\n              [\r\n                107.56444493009464,\r\n                -30.47188731140721\r\n              ],\r\n              [\r\n                108.88682918169046,\r\n                -30.168794386125768\r\n              ],\r\n              [\r\n                106.7397210052791,\r\n                -29.535880148994714\r\n              ],\r\n              [\r\n                105.87410624467522,\r\n                -30.117446177340703\r\n              ],\r\n              [\r\n                109.25780121368561,\r\n                -29.071284577228745\r\n              ]\r\n            ]\r\n          },\r\n          {\r\n            \"type\" : \"multipoint\",\r\n            \"coordinates\" : [\r\n              [\r\n                109.20444928453941,\r\n                -28.887330859986612\r\n              ],\r\n              [\r\n                108.4948177047382,\r\n                -31.814012086285782\r\n              ],\r\n              [\r\n                104.5081629751859,\r\n                -28.9716495030422\r\n              ],\r\n              [\r\n                107.58576915751799,\r\n                -28.999188592956223\r\n              ],\r\n              [\r\n                104.7019422125022,\r\n                -29.47963692603792\r\n              ],\r\n              [\r\n                107.40550479923213,\r\n                -29.080785475639004\r\n              ]\r\n            ]\r\n          },\r\n          {\r\n            \"type\" : \"multilinestring\",\r\n            \"coordinates\" : [\r\n              [\r\n                [\r\n                  108.3542147280241,\r\n                  -32.24251657011377\r\n                ],\r\n                [\r\n                  107.85786510015313,\r\n                  -29.956104515999883\r\n                ],\r\n                [\r\n                  107.19974175423394,\r\n                  -31.495655564108375\r\n                ],\r\n                [\r\n                  108.86874713499965,\r\n                  -30.693954694786402\r\n                ],\r\n                [\r\n                  107.81492735144948,\r\n                  -28.944613025188517\r\n                ]\r\n              ]\r\n            ]\r\n          },\r\n          {\r\n            \"type\" : \"polygon\",\r\n            \"coordinates\" : [\r\n              [\r\n                [\r\n                  -85.0,\r\n                  -55.41268710136279\r\n                ],\r\n                [\r\n                  -85.0,\r\n                  -45.08800706112868\r\n                ],\r\n                [\r\n                  110.46383303911944,\r\n                  -45.08800706112868\r\n                ],\r\n                [\r\n                  -85.0,\r\n                  -55.41268710136279\r\n                ]\r\n              ]\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      \"relation\" : \"intersects\"\r\n    },\r\n    \"ignore_unmapped\" : false,\r\n    \"boost\" : 1.0\r\n  }\r\n} doc: {\"location\":{\"type\":\"geometrycollection\",\"geometries\":[{\"type\":\"polygon\",\"orientation\":\"right\",\"coordinates\":[[[-105.04363460103107,21.529664784728634],[-106.93194353064283,21.769539947070843],[-108.65365799162868,22.73851432389303],[-108.63208348397023,25.12957017719524],[-108.25178382933814,26.02590291685958],[-104.39505130530688,25.613469467782718],[-104.39084040870026,22.743818215313],[-105.04363460103107,21.529664784728634]]]},{\"type\":\"polygon\",\"orientation\":\"right\",\"coordinates\":[[[-124.70359656336262,-36.87240260493818],[-126.60201263596461,-36.27149106730364],[-126.69424961260506,-35.07697072642597],[-126.58734752823541,-31.669998917167486],[-126.34023107753984,-31.607583503068806],[-124.45141782146695,-31.663005389609214],[-123.569435941306,-33.16420727207776],[-123.77784733511275,-36.43328202252092],[-124.70359656336262,-36.87240260493818]]]},{\"type\":\"point\",\"coordinates\":[52.0999666369553,26.195929943617784]},{\"type\":\"multilinestring\",\"coordinates\":[[[-114.9951002610597,81.26592744169788],[-118.45262282718537,82.89053346818918],[-115.74859271548624,80.25762823325577],[-117.18567198089143,80.3219078479273],[-115.14116348366986,82.75795186589495],[-115.23723057458224,79.91167513377567],[-114.90436429938512,81.31197056690364]],[[-114.10674635416268,82.61447077600309],[-114.4792869715932,81.20792950830932],[-117.2678921568098,81.16296955317189]],[[-115.9774572600585,81.81808068292607],[-114.50820245924662,82.97956086593652],[-115.07480716282188,81.69473520863662],[-114.35808164908535,80.55087045383196],[-116.36564898365921,80.6764557540112],[-118.51937931830362,81.94977234210653]]]},{\"type\":\"polygon\",\"orientation\":\"right\",\"coordinates\":[[[-85.0,-55.41268710136279],[-85.0,-45.08800706112868],[110.46383303911944,-45.08800706112868],[-85.0,-55.41268710136279]]]}]}}\r\n\r\nat __randomizedtesting.SeedInfo.seed([C66D73C415DBFB0C:AE107D6743F82484]:0)\r\nat org.junit.Assert.fail(Assert.java:88)\r\nat org.junit.Assert.assertTrue(Assert.java:41)\r\nat org.elasticsearch.search.geo.GeoShapeQueryTests.testRandomGeoCollectionQuery(GeoShapeQueryTests.java:455)\r\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\nat java.lang.reflect.Method.invoke(Method.java:498)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1750)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:938)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:974)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:988)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\nat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\nat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\nat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\nat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\r\nat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:817)\r\nat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:468)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:947)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:832)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:883)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:894)\r\nat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\nat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\nat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\nat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\nat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\nat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\r\nat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\nMay relate to https://github.com/elastic/elasticsearch/issues/37356","closed_by":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"performed_via_github_app":null}