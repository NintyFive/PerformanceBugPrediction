{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/22723","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22723/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22723/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22723/events","html_url":"https://github.com/elastic/elasticsearch/issues/22723","id":202213665,"node_id":"MDU6SXNzdWUyMDIyMTM2NjU=","number":22723,"title":"Ability to skip version checks during `update_by_query`","user":{"login":"marshall007","id":877936,"node_id":"MDQ6VXNlcjg3NzkzNg==","avatar_url":"https://avatars2.githubusercontent.com/u/877936?v=4","gravatar_id":"","url":"https://api.github.com/users/marshall007","html_url":"https://github.com/marshall007","followers_url":"https://api.github.com/users/marshall007/followers","following_url":"https://api.github.com/users/marshall007/following{/other_user}","gists_url":"https://api.github.com/users/marshall007/gists{/gist_id}","starred_url":"https://api.github.com/users/marshall007/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marshall007/subscriptions","organizations_url":"https://api.github.com/users/marshall007/orgs","repos_url":"https://api.github.com/users/marshall007/repos","events_url":"https://api.github.com/users/marshall007/events{/privacy}","received_events_url":"https://api.github.com/users/marshall007/received_events","type":"User","site_admin":false},"labels":[{"id":145572580,"node_id":"MDU6TGFiZWwxNDU1NzI1ODA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/CRUD","name":":Distributed/CRUD","color":"0e8a16","default":false,"description":"A catch all label for issues around indexing, updating and getting a doc by id. Not search."},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-01-20T18:47:45Z","updated_at":"2018-12-27T13:04:54Z","closed_at":"2018-03-20T01:01:19Z","author_association":"NONE","active_lock_reason":null,"body":"We're attempting to perform a series of `update_by_query` requests in parallel, several of which will attempt to update the same document. As you would expect, we get a `Conflict` error when this happens.\r\n\r\nThese partial document updates we're attempting to perform do not conflict with or depend on each other in any way. So the issue is two-fold:\r\n\r\n1. `update_by_query` is lacking in convenience features supported by `update`. Namely, there is no way to automatically retry updates on conflict (see #19632). Given the nature of `update_by_query` and its side-effects, this is quite a bit more painful to implement in user-code than retrying a single `update` would be.\r\n1. Since we know all of the updates we're trying to make are stateless (and that no external updates could be applied for the duration of these operations), we should be able to tell the server to skip version checking all together.\r\n\r\nIf there are any existing workarounds to emulate the behavior we're describing, I'd love to hear them. As far as I can tell, our only option is to use `?conflicts=proceed` on the first pass and then manually re-running any failed updates, this time ignoring any documents we've already successfully updated.","closed_by":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"performed_via_github_app":null}