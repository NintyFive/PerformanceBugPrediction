[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/11907966","html_url":"https://github.com/elastic/elasticsearch/issues/2524#issuecomment-11907966","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2524","id":11907966,"node_id":"MDEyOklzc3VlQ29tbWVudDExOTA3OTY2","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2013-01-05T02:24:19Z","updated_at":"2013-01-05T02:24:19Z","author_association":"MEMBER","body":"How about simply calling \"toString\" on the object you get back? It should work well for everything except binary ones (base64 shenanigans)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/11909305","html_url":"https://github.com/elastic/elasticsearch/issues/2524#issuecomment-11909305","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2524","id":11909305,"node_id":"MDEyOklzc3VlQ29tbWVudDExOTA5MzA1","user":{"login":"phungleson","id":93457,"node_id":"MDQ6VXNlcjkzNDU3","avatar_url":"https://avatars2.githubusercontent.com/u/93457?v=4","gravatar_id":"","url":"https://api.github.com/users/phungleson","html_url":"https://github.com/phungleson","followers_url":"https://api.github.com/users/phungleson/followers","following_url":"https://api.github.com/users/phungleson/following{/other_user}","gists_url":"https://api.github.com/users/phungleson/gists{/gist_id}","starred_url":"https://api.github.com/users/phungleson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phungleson/subscriptions","organizations_url":"https://api.github.com/users/phungleson/orgs","repos_url":"https://api.github.com/users/phungleson/repos","events_url":"https://api.github.com/users/phungleson/events{/privacy}","received_events_url":"https://api.github.com/users/phungleson/received_events","type":"User","site_admin":false},"created_at":"2013-01-05T03:27:52Z","updated_at":"2013-01-05T03:27:52Z","author_association":"CONTRIBUTOR","body":"If I call `toString` on `SearchResponse` I get a very big JSON which I have no intention or parse it.\n\nIdeally I would like to get fields as string per `SearchHit` only.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/11909658","html_url":"https://github.com/elastic/elasticsearch/issues/2524#issuecomment-11909658","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2524","id":11909658,"node_id":"MDEyOklzc3VlQ29tbWVudDExOTA5NjU4","user":{"login":"uboness","id":211019,"node_id":"MDQ6VXNlcjIxMTAxOQ==","avatar_url":"https://avatars3.githubusercontent.com/u/211019?v=4","gravatar_id":"","url":"https://api.github.com/users/uboness","html_url":"https://github.com/uboness","followers_url":"https://api.github.com/users/uboness/followers","following_url":"https://api.github.com/users/uboness/following{/other_user}","gists_url":"https://api.github.com/users/uboness/gists{/gist_id}","starred_url":"https://api.github.com/users/uboness/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uboness/subscriptions","organizations_url":"https://api.github.com/users/uboness/orgs","repos_url":"https://api.github.com/users/uboness/repos","events_url":"https://api.github.com/users/uboness/events{/privacy}","received_events_url":"https://api.github.com/users/uboness/received_events","type":"User","site_admin":false},"created_at":"2013-01-05T04:07:11Z","updated_at":"2013-01-05T04:07:11Z","author_association":"CONTRIBUTOR","body":"``` java\nSearchResponse res = ...;\nfor (SearchHit hit : res.hits()) {\n    for (SearchHitField field : hit.fields().values()) {\n         String name = field.name();\n         String value = String.valueOf(field.value());\n\n         // do your mappings\n         ....\n    }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/11909792","html_url":"https://github.com/elastic/elasticsearch/issues/2524#issuecomment-11909792","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2524","id":11909792,"node_id":"MDEyOklzc3VlQ29tbWVudDExOTA5Nzky","user":{"login":"phungleson","id":93457,"node_id":"MDQ6VXNlcjkzNDU3","avatar_url":"https://avatars2.githubusercontent.com/u/93457?v=4","gravatar_id":"","url":"https://api.github.com/users/phungleson","html_url":"https://github.com/phungleson","followers_url":"https://api.github.com/users/phungleson/followers","following_url":"https://api.github.com/users/phungleson/following{/other_user}","gists_url":"https://api.github.com/users/phungleson/gists{/gist_id}","starred_url":"https://api.github.com/users/phungleson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phungleson/subscriptions","organizations_url":"https://api.github.com/users/phungleson/orgs","repos_url":"https://api.github.com/users/phungleson/repos","events_url":"https://api.github.com/users/phungleson/events{/privacy}","received_events_url":"https://api.github.com/users/phungleson/received_events","type":"User","site_admin":false},"created_at":"2013-01-05T04:22:50Z","updated_at":"2013-01-05T04:22:50Z","author_association":"CONTRIBUTOR","body":"Hmm ok, it is the way I am currently doing now, but the down side is that I have to do very manually, i.e. assigning every single fields.\n\nI prefer to use some kind of jackson JSON mapping, the same way I use with `getSourceAsString()`\n\n``` java\nComment comment = new ObjectMapper().readValue(\n                        searchHit.getSourceAsString(), Comment.class);\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/11909978","html_url":"https://github.com/elastic/elasticsearch/issues/2524#issuecomment-11909978","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2524","id":11909978,"node_id":"MDEyOklzc3VlQ29tbWVudDExOTA5OTc4","user":{"login":"uboness","id":211019,"node_id":"MDQ6VXNlcjIxMTAxOQ==","avatar_url":"https://avatars3.githubusercontent.com/u/211019?v=4","gravatar_id":"","url":"https://api.github.com/users/uboness","html_url":"https://github.com/uboness","followers_url":"https://api.github.com/users/uboness/followers","following_url":"https://api.github.com/users/uboness/following{/other_user}","gists_url":"https://api.github.com/users/uboness/gists{/gist_id}","starred_url":"https://api.github.com/users/uboness/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uboness/subscriptions","organizations_url":"https://api.github.com/users/uboness/orgs","repos_url":"https://api.github.com/users/uboness/repos","events_url":"https://api.github.com/users/uboness/events{/privacy}","received_events_url":"https://api.github.com/users/uboness/received_events","type":"User","site_admin":false},"created_at":"2013-01-05T04:47:05Z","updated_at":"2013-01-05T04:47:05Z","author_association":"CONTRIBUTOR","body":"No, we don't have it now... the \"problem\" here from es perspective is that you get into discussions on the string representation of the fields - the format, the json structure (arrays vs. object, nested object vs. dot notation), etc... with the source it's not a problem, as the source you get back is exactly the source you push in. In your case I guess it'd be best to just use a utility method that converts the SearchHit to Jackson `JsonNode` (without the need to serialize/deserialize it to/from JSON string)\n","performed_via_github_app":null}]