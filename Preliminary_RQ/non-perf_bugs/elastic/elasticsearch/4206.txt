{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/4206","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4206/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4206/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4206/events","html_url":"https://github.com/elastic/elasticsearch/issues/4206","id":22925761,"node_id":"MDU6SXNzdWUyMjkyNTc2MQ==","number":4206,"title":"Cluster reroute api should have a way to assign all unassigned shards","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2013-11-19T16:24:36Z","updated_at":"2014-10-10T10:43:28Z","closed_at":"2014-10-10T10:43:28Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Sometimes, during a disaster, you end up with shards stuck unassigned and you just want them reassigned regardless of data loss.  It'd be great if the cluster reroute api supported an assign_all action that just assigns all the shards to free nodes.  It'd need to also support `allow_primary`.  Without this you need some nasty shell script like this:\n\n``` bash\nfunction reroute() {\n    curl -XPOST 'localhost:9200/_cluster/reroute?pretty' -d '{\n        \"commands\" : [ {\n                \"allocate\" : {\n                    \"index\" : \"'$1'\",\n                    \"shard\" : '$2'\n                    \"allow_primary\" : true,\n                    \"node\" : \"<node>\"\n                }\n            }\n        ]\n    }' > /dev/null\n    sleep 1\n}\ncurl -s localhost:9200/_cluster/state?pretty | awk '\n    BEGIN {more=1}\n    {if (/\"UNASSIGNED\"/) unassigned=1}\n    {if (/\"routing_nodes\"/) more=0}\n    {if (unassigned && /\"shard\"/) shard=$3}\n    {if (more && unassigned && /\"index\"/) {print \"reroute\",$3, shard; unassigned=false}}\n' > runit\nsource runit\n```\n\nI'm sure there are better ways to write that script, but great code doesn't typically come in the middle of disasters.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}