{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/30188","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30188/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30188/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30188/events","html_url":"https://github.com/elastic/elasticsearch/issues/30188","id":318213988,"node_id":"MDU6SXNzdWUzMTgyMTM5ODg=","number":30188,"title":"Add ability to \"freeze\" and \"unfreeze\" an index to consume fewer resources on a machine","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"labels":[{"id":836542781,"node_id":"MDU6TGFiZWw4MzY1NDI3ODE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Engine","name":":Distributed/Engine","color":"0e8a16","default":false,"description":"Anything around managing Lucene and the Translog in an open shard."},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"assignees":[{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2018-04-26T22:07:32Z","updated_at":"2018-06-06T15:10:12Z","closed_at":"2018-06-06T15:10:11Z","author_association":"MEMBER","active_lock_reason":null,"body":"For deployments that get larger and larger, sometimes it is helpful to be able\r\nto take a number of indices and put them in a low-resource state such that they\r\nare still available, however, they don't take as many resources as a regular\r\nindex does. We should add a feature that allows us to put indices in this state\r\n(frozen) and then put them back to a regular state (thaw) if desired.\r\n\r\nWhile in the frozen state, only read operations will be permitted on the index.\r\n\r\nThis would be similar to what the `/_close` API does, however, instead of the\r\nindex being completely inaccessible, a frozen index can still be searched and\r\nhave aggregations performed on the data. Additionally, rather than the data on\r\ndisk not being balanced/routed in the cluster, a frozen index would be treated\r\nsimilar to a regular index.\r\n\r\nThere are a few different steps for this (more may be needed):\r\n\r\n- [x] Add APIs for `/_freeze` and `/_thaw`\r\n- [x] Rename `/_thaw` to `/_unfreeze`\r\n- [x] Add a `FROZEN` threadpool with a single worker that all search requests to frozen indices use\r\n- [ ] Block indexing actions when an index is frozen\r\n- [ ] Add a specialized engine that does not keep resources for a frozen shard in memory except while a search is being performed\r\n- [ ] Switch \"get\" operations on frozen shards to use the FROZEN threadpool\r\n- [ ] Collapse `/_freeze`, `/_unfreeze`, `/_close`, and `/_open` into a single REST/transport handler\r\n- [ ] Add an option for `IndicesOptions` to allow including/excluding frozen indices from wildcards (`expandToFrozenIndices`)","closed_by":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"performed_via_github_app":null}