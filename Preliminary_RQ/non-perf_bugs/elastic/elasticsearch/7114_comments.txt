[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/50802759","html_url":"https://github.com/elastic/elasticsearch/issues/7114#issuecomment-50802759","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7114","id":50802759,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODAyNzU5","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2014-07-31T18:54:43Z","updated_at":"2014-07-31T18:54:43Z","author_association":"MEMBER","body":"Indeed, in `DateFieldMapper`:\n\n``` java\n        if (lowerTerm != null) {\n            if (lowerTerm instanceof Number) {\n                lowerVal = ((Number) lowerTerm).longValue();\n            } else {\n                String value = convertToString(lowerTerm);\n                cache = explicitCaching || !hasNowExpressionWithNoRounding(value);\n                lowerVal = parseToMilliseconds(value, context, false);\n            }\n        }\n        if (upperTerm != null) {\n            if (upperTerm instanceof Number) {\n                upperVal = ((Number) upperTerm).longValue();\n            } else {\n                String value = convertToString(upperTerm);\n                cache = explicitCaching || !hasNowExpressionWithNoRounding(value);\n                upperVal = parseToMilliseconds(value, context, includeUpper);\n            }\n        }\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/51358575","html_url":"https://github.com/elastic/elasticsearch/issues/7114#issuecomment-51358575","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7114","id":51358575,"node_id":"MDEyOklzc3VlQ29tbWVudDUxMzU4NTc1","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2014-08-06T16:16:21Z","updated_at":"2014-08-06T16:16:21Z","author_association":"MEMBER","body":"While looking at this issue, I found that if you use a `now` as the `from` value and a constant value as `to`, the range is cached although I think it should not:\n\n```\nDELETE /test \n\nPUT /test/t/1\n{\n  \"date\": \"2014-01-01\"\n}\n\nGET /test/_validate/query?explain\n{\n  \"query\": {\n    \"filtered\": {\n      \"filter\": {\n        \"range\": {\n          \"date\": {\n            \"from\": \"now\",\n            \"to\":\"now/d+d\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\ngives:\n\n```\n\"explanations\": [\n      {\n         \"index\": \"test\",\n         \"valid\": true,\n         \"explanation\": \"ConstantScore(cache(date:[1407341732658 TO 1407456000000]))\"\n      }\n   ]\n```\n\n@clintongormley Do you agree that this should be fixed as well?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/51464343","html_url":"https://github.com/elastic/elasticsearch/issues/7114#issuecomment-51464343","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7114","id":51464343,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNDY0MzQz","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-08-07T12:24:58Z","updated_at":"2014-08-07T12:24:58Z","author_association":"CONTRIBUTOR","body":"@dadoonet yes i do\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/51539152","html_url":"https://github.com/elastic/elasticsearch/issues/7114#issuecomment-51539152","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7114","id":51539152,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNTM5MTUy","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2014-08-07T22:09:14Z","updated_at":"2014-08-07T22:09:14Z","author_association":"MEMBER","body":"Here are the results of my findings so far (test agains master branch so before applying PR #7122):\n\nI created a range filter like this:\n\n``` js\n{\n    \"constant_score\" : {\n        \"filter\" : {\n            \"range\" : {\n                \"born\" : {\n                    \"gte\": <GTE>,\n                    \"lte\": <LTE>\n                },\n                \"_cache\" : <CACHE IF NOT NULL>\n            }\n        }\n    }\n}\n```\n\n## Failures\n\nThe most critical ones performance wise are:\n\n```\n[WARN ] gte [null], lte [1577836800], _cache [null] should be cached\n[WARN ] gte [1325376000], lte [null], _cache [null] should be cached\n[WARN ] gte [1325376000], lte [1577836800], _cache [null] should be cached\n[WARN ] gte [now], lte [2012-01-01], _cache [null] should not be cached\n```\n\nThose are minor issues performance wise.\n\n```\n[WARN ] gte [now/d], lte [null], _cache [false] should not be cached\n[WARN ] gte [null], lte [now/d], _cache [false] should not be cached\n[WARN ] gte [now/d], lte [now/d], _cache [false] should not be cached\n[WARN ] gte [2012-01-01], lte [null], _cache [false] should not be cached\n[WARN ] gte [null], lte [2012-01-01], _cache [false] should not be cached\n[WARN ] gte [2012-01-01], lte [2012-01-01], _cache [false] should not be cached\n[WARN ] gte [now], lte [2012-01-01], _cache [false] should not be cached\n[WARN ] gte [2012-01-01], lte [now/d], _cache [false] should not be cached\n[WARN ] gte [now/d], lte [2012-01-01], _cache [false] should not be cached\n[WARN ] gte [1325376000], lte [now/d], _cache [false] should not be cached\n[WARN ] gte [now/d], lte [1577836800], _cache [false] should not be cached\n```\n\nExtreme use case: I don't know if we should cache or not this one. It produces a range filter: `born:[* TO *]`. Should this be cached? @clintongormley WDYT?\n\n```\n[WARN ] gte [null], lte [null], _cache [null] should be cached\n```\n\n## Passing tests\n\nFor information, here are the successful tests:\n\n```\n[INFO ] gte [null], lte [null], _cache [true] is cached\n[INFO ] gte [null], lte [null], _cache [false] is not cached\n[INFO ] gte [now], lte [null], _cache [null] is not cached\n[INFO ] gte [null], lte [now], _cache [null] is not cached\n[INFO ] gte [now], lte [now], _cache [null] is not cached\n[INFO ] gte [now/d], lte [null], _cache [null] is cached\n[INFO ] gte [null], lte [now/d], _cache [null] is cached\n[INFO ] gte [now/d], lte [now/d], _cache [null] is cached\n[INFO ] gte [2012-01-01], lte [null], _cache [null] is cached\n[INFO ] gte [null], lte [2012-01-01], _cache [null] is cached\n[INFO ] gte [2012-01-01], lte [2012-01-01], _cache [null] is cached\n[INFO ] gte [2012-01-01], lte [now], _cache [null] is not cached\n[INFO ] gte [2012-01-01], lte [now/d], _cache [null] is cached\n[INFO ] gte [now/d], lte [2012-01-01], _cache [null] is cached\n[INFO ] gte [now], lte [1577836800], _cache [null] is not cached\n[INFO ] gte [1325376000], lte [now], _cache [null] is not cached\n[INFO ] gte [1325376000], lte [now/d], _cache [null] is cached\n[INFO ] gte [now/d], lte [1577836800], _cache [null] is cached\n[INFO ] gte [now], lte [null], _cache [true] is cached\n[INFO ] gte [null], lte [now], _cache [true] is cached\n[INFO ] gte [now], lte [now], _cache [true] is cached\n[INFO ] gte [now/d], lte [null], _cache [true] is cached\n[INFO ] gte [null], lte [now/d], _cache [true] is cached\n[INFO ] gte [now/d], lte [now/d], _cache [true] is cached\n[INFO ] gte [2012-01-01], lte [null], _cache [true] is cached\n[INFO ] gte [null], lte [2012-01-01], _cache [true] is cached\n[INFO ] gte [2012-01-01], lte [2012-01-01], _cache [true] is cached\n[INFO ] gte [now], lte [2012-01-01], _cache [true] is cached\n[INFO ] gte [2012-01-01], lte [now], _cache [true] is cached\n[INFO ] gte [2012-01-01], lte [now/d], _cache [true] is cached\n[INFO ] gte [now/d], lte [2012-01-01], _cache [true] is cached\n[INFO ] gte [null], lte [1577836800], _cache [true] is cached\n[INFO ] gte [1325376000], lte [null], _cache [true] is cached\n[INFO ] gte [1325376000], lte [1577836800], _cache [true] is cached\n[INFO ] gte [now], lte [1577836800], _cache [true] is cached\n[INFO ] gte [1325376000], lte [now], _cache [true] is cached\n[INFO ] gte [1325376000], lte [now/d], _cache [true] is cached\n[INFO ] gte [now/d], lte [1577836800], _cache [true] is cached\n[INFO ] gte [now], lte [null], _cache [false] is not cached\n[INFO ] gte [null], lte [now], _cache [false] is not cached\n[INFO ] gte [now], lte [now], _cache [false] is not cached\n[INFO ] gte [2012-01-01], lte [now], _cache [false] is not cached\n[INFO ] gte [null], lte [1577836800], _cache [false] is not cached\n[INFO ] gte [1325376000], lte [null], _cache [false] is not cached\n[INFO ] gte [1325376000], lte [1577836800], _cache [false] is not cached\n[INFO ] gte [now], lte [1577836800], _cache [false] is not cached\n[INFO ] gte [1325376000], lte [now], _cache [false] is not cached\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/51569561","html_url":"https://github.com/elastic/elasticsearch/issues/7114#issuecomment-51569561","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7114","id":51569561,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNTY5NTYx","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-08-08T07:01:51Z","updated_at":"2014-08-08T07:01:51Z","author_association":"CONTRIBUTOR","body":"> Extreme use case: I don't know if we should cache or not this one. It produces a range filter: born:[\\* TO *]. Should this be cached? @clintongormley WDYT?\n\nThis should be rewritten as a match_all filter instead.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/51610778","html_url":"https://github.com/elastic/elasticsearch/issues/7114#issuecomment-51610778","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7114","id":51610778,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNjEwNzc4","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2014-08-08T14:40:45Z","updated_at":"2014-08-08T14:40:45Z","author_association":"MEMBER","body":"After talking with @martijnvg and @clintongormley, I changed the test scenario. \nBasically, even if user explicitly choose to cache a filter which contains `now`, we don't cache it.\n\nHere are new list of failing tests:\n\n```\n[WARN ][org.elasticsearch.index.query] gte [now], lte [2012-01-01], _cache [null] should not be cached\n[WARN ][org.elasticsearch.index.query] gte [null], lte [1577836800], _cache [null] should be cached\n[WARN ][org.elasticsearch.index.query] gte [1325376000], lte [null], _cache [null] should be cached\n[WARN ][org.elasticsearch.index.query] gte [1325376000], lte [1577836800], _cache [null] should be cached\n[WARN ][org.elasticsearch.index.query] gte [now], lte [null], _cache [true] should not be cached\n[WARN ][org.elasticsearch.index.query] gte [null], lte [now], _cache [true] should not be cached\n[WARN ][org.elasticsearch.index.query] gte [now], lte [now], _cache [true] should not be cached\n[WARN ][org.elasticsearch.index.query] gte [now], lte [2012-01-01], _cache [true] should not be cached\n[WARN ][org.elasticsearch.index.query] gte [2012-01-01], lte [now], _cache [true] should not be cached\n[WARN ][org.elasticsearch.index.query] gte [now], lte [1577836800], _cache [true] should not be cached\n[WARN ][org.elasticsearch.index.query] gte [1325376000], lte [now], _cache [true] should not be cached\n```\n\nAbout:\n\n> Extreme use case: I don't know if we should cache or not this one. It produces a range filter: born:[\\* TO *]. \n\n#7204 is opened for that.\n","performed_via_github_app":null}]