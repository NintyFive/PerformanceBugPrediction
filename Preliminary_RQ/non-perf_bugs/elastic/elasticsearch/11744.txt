{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/11744","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11744/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11744/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11744/events","html_url":"https://github.com/elastic/elasticsearch/issues/11744","id":89261225,"node_id":"MDU6SXNzdWU4OTI2MTIyNQ==","number":11744,"title":"consolidate query _name and boost support in query DSL","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2015-06-18T10:59:15Z","updated_at":"2018-02-14T13:39:19Z","closed_at":"2015-08-27T10:25:19Z","author_association":"MEMBER","active_lock_reason":null,"body":"As part of the query refactoring we are trying to make support for `boost` and `_name` in our queries more generic and consistent (#10776) as it is currently copy pasted in all query parsers and builders, sometimes forgotten, and error prone. While working on that, I realized that `_name` and `boost` are supported slightly differently in the json depending on the type query. The main difference, besides bugs, is that some queries support both within the top level query object:\n\n```\n{\n  \"multi_match\" : {\n    \"query\" : \"test\",\n    \"fields\" : [\"field1\", \"field2\"],\n    \"_name\" : \"query_name\",\n    \"boost\" : 10\n  }\n}\n```\n\nwhile others support them within the inner object named like the field that gets queried:\n\n```\n{\n  \"term\" : {\n    \"field_name\" : {\n      \"value\" : \"test\",\n      \"_name\" : \"query_name\",\n      \"boost\" : 10\n    }\n  }\n}\n```\n\nor even the following:\n\n```\n{\n  \"term\" : {\n    \"field_name\" : \"value\" : \"test\",\n    \"_name\" : \"query_name\",\n    \"boost\" : 10\n  }\n}\n```\n\nThe following is a summary of all of the queries and their behaviour:\n\n| Query | _name top level | _name inner object | boost top level | boost inner object |\n| --- | :-: | :-: | :-: | :-: |\n| and | X |  |  |  |\n| bool | X |  | X |  |\n| boosting |  |  | X |  |\n| common_terms |  | X |  | X |\n| constant_score |  |  | X |  |\n| dis_max | X |  | X |  |\n| exists | X |  |  |  |\n| field_masking_span | X |  | X |  |\n| filtered | X |  | X |  |\n| function_score |  |  | X |  |\n| fuzzy |  | X |  | X |\n| geo_bbox ** | X |  |  |  |\n| geo_distance ** | X |  |  |  |\n| geo_distance_range ** | X |  |  |  |\n| geohash_cell |  |  |  |  |\n| geo_polygon ** | X |  |  |  |\n| geo_shape ** | X |  | X |  |\n| has_child | X |  | X |  |\n| has_parent | X |  | X |  |\n| ids | X |  | X |  |\n| indices | X |  |  |  |\n| limit |  |  |  |  |\n| match_all |  |  | X |  |\n| match |  | X |  | X |\n| missing | X |  | X |  |\n| more_like_this | X |  | X |  |\n| multi_match | X |  | X |  |\n| nested | X |  | X |  |\n| not | X |  |  |  |\n| or | X |  |  |  |\n| prefix ** | X | X |  | X |\n| query_string | X |  | X |  |\n| range ** |  | X | X |  |\n| regexp ** | X | X |  | X |\n| script | X |  |  |  |\n| simple_query_string | X |  |  |  |\n| span_containing | X |  | X |  |\n| span_first | X |  | X |  |\n| span_multi |  |  |  |  |\n| span_near | X |  | X |  |\n| span_not | X |  | X |  |\n| span_or | X |  | X |  |\n| span_term |  | X |  | X |\n| span_within | X |  | X |  |\n| term ** | X | X | X | X |\n| terms | X |  | X |  |\n| type |  |  |  |  |\n| wildcard |  | X |  | X |\n\n*\\* : queries that support the inner object named as the field that gets queried, but support `_name` on the top level object instead.\n\nAll of the queries that support _name and boost within the inner object do so in their long version. The corresponding short version usually doesn't support  `_name` and `boost`, but only a single field in the form `field: value`.\n\n1) The main question is where should the `_name` be supported. Should it always be in the top level object, as I was expecting without looking at the code, or does it make sense to wrap everything in the inner object if present?\n\n2) Queries that don't support _name at all: boosting, constant_score, function_score, geohash_cell, limit, match_all, span_multi, type. Support for `_name` needs to be added to these?\n\n3) Queries that don't support boost: indices, simple_query_string (PR opened), span_multi. Support for boost should be added to these?\n\n4) Filters that don't support boost: and, bool, exists, geo_bbox, geo_distance, geo_distance_range, geohash_cell, geo_polygon, limit, missing, not, or, script, type. Now that filters and queries are merged, can these be used as queries? If so would the `boost` make sense if it was supported here too?\n\n5) The following are inconsistencies that surely need to be fixed, according also to outcome of this discussion:\n- ~~`GeoShapeQueryBuilder` doesn't support `boost`, but `GeoShapeQueryParser` parses it (fixed in #11810)~~.\n- `PrefixQueryParser` supports `_name` in both short and long version, `boost` only in long version.\n- `RegexpQueryParser` supports `_name` in both short and long version, `boost` only in long version.\n- `RangeQueryParser` supports`_name` in the top level but `boost` in the inner field object.\n- `TermQueryParser` supports both  `_name` and `boost` in both long and short version.\n- ~~`TermsQueryBuilder` doesn't support `boost`, but parser parses it  (fixed in #11810)~~.\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}