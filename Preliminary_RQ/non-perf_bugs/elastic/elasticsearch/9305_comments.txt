[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/70265440","html_url":"https://github.com/elastic/elasticsearch/issues/9305#issuecomment-70265440","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9305","id":70265440,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjY1NDQw","user":{"login":"navneet83","id":4686373,"node_id":"MDQ6VXNlcjQ2ODYzNzM=","avatar_url":"https://avatars0.githubusercontent.com/u/4686373?v=4","gravatar_id":"","url":"https://api.github.com/users/navneet83","html_url":"https://github.com/navneet83","followers_url":"https://api.github.com/users/navneet83/followers","following_url":"https://api.github.com/users/navneet83/following{/other_user}","gists_url":"https://api.github.com/users/navneet83/gists{/gist_id}","starred_url":"https://api.github.com/users/navneet83/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/navneet83/subscriptions","organizations_url":"https://api.github.com/users/navneet83/orgs","repos_url":"https://api.github.com/users/navneet83/repos","events_url":"https://api.github.com/users/navneet83/events{/privacy}","received_events_url":"https://api.github.com/users/navneet83/received_events","type":"User","site_admin":false},"created_at":"2015-01-16T15:02:41Z","updated_at":"2015-01-16T15:02:41Z","author_association":"MEMBER","body":"A possible workaround for this problem would be to index inner \"workstation\" object **both** as nested fields and as flattened object field.This can be achieved by setting **\"include_in_parent\"** to **true**.\nHere is the updated schema (note the `\"include_in_parent\":\"true\"` under **workstation** :\n`PUT /test`\n\n``` json\n{\"mappings\":{\"type\":{\"properties\":{\"officelocation\":{\"type\":\"string\"},\"users\":{\"type\":\"nested\",\"properties\":{\"first\":{\"type\":\"string\"},\"last\":{\"type\":\"string\"},\"workstation\":{\"type\":\"nested\", \"include_in_parent\":\"true\" ,\"properties\":{\"stationid\":{\"type\":\"string\"},\"phoneid\":{\"type\":\"string\"}}}}}}}}}\n```\n\nHere is the updated query:\n`POST test/_search`\n\n``` json\n{\n  \"fields\":\"_id\",\n  \"sort\":[\n    {\n      \"users.first\":{\n        \"order\":\"asc\"\n      }\n    },\n    {\n      \"users.first\":{\n        \"order\":\"asc\",\n        \"nested_path\":\"users\",\n        \"nested_filter\":{\n          \"term\":{\n            \"users.workstation.stationid\":\"s5\"\n          }\n        }\n      }\n    }\n  ]\n}\n```\n\nThis returns:\n\n``` json\n{\n  \"took\" : 2,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 2,\n    \"max_score\" : null,\n    \"hits\" : [ {\n      \"_index\" : \"test123\",\n      \"_type\" : \"type\",\n      \"_id\" : \"2\",\n      \"_score\" : null,\n      \"sort\" : [ \"fname1\", \"fname1\" ]\n    }, {\n      \"_index\" : \"test123\",\n      \"_type\" : \"type\",\n      \"_id\" : \"1\",\n      \"_score\" : null,\n      \"sort\" : [ \"fname1\", \"fname3\" ]\n    } ]\n  }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/70489052","html_url":"https://github.com/elastic/elasticsearch/issues/9305#issuecomment-70489052","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9305","id":70489052,"node_id":"MDEyOklzc3VlQ29tbWVudDcwNDg5MDUy","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2015-01-19T13:02:09Z","updated_at":"2015-01-19T13:02:09Z","author_association":"MEMBER","body":"The reason why the sorting goes wrong here is that the nested query is dependant about the nested context it is placed in. If a nested query has no other nested query above it, it assumes that it is should link back to the main/root document. If a nested query is placed under another nested query then it assumes it should link back to nested level that belong to the path the parent nested query has been set to. Nested sorting doesn't set this nested context and therefor the nested query doesn't link back to the `users` level, but to the root level instead.\n\nWe need to make sure that nested sorting sets the nested level properly, so that other nested queries know about this. The tricky bit is here that due to how the sorting elements gets parsed (in a streaming manner), the nested filter may be parsed before the `path` field has been parsed, so in order to do this properly the filter should be parsed after the `path` field has been parsed.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73672716","html_url":"https://github.com/elastic/elasticsearch/issues/9305#issuecomment-73672716","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9305","id":73672716,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjcyNzE2","user":{"login":"angelatsai","id":3005153,"node_id":"MDQ6VXNlcjMwMDUxNTM=","avatar_url":"https://avatars1.githubusercontent.com/u/3005153?v=4","gravatar_id":"","url":"https://api.github.com/users/angelatsai","html_url":"https://github.com/angelatsai","followers_url":"https://api.github.com/users/angelatsai/followers","following_url":"https://api.github.com/users/angelatsai/following{/other_user}","gists_url":"https://api.github.com/users/angelatsai/gists{/gist_id}","starred_url":"https://api.github.com/users/angelatsai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/angelatsai/subscriptions","organizations_url":"https://api.github.com/users/angelatsai/orgs","repos_url":"https://api.github.com/users/angelatsai/repos","events_url":"https://api.github.com/users/angelatsai/events{/privacy}","received_events_url":"https://api.github.com/users/angelatsai/received_events","type":"User","site_admin":false},"created_at":"2015-02-10T09:55:51Z","updated_at":"2015-02-10T09:55:51Z","author_association":"NONE","body":"I encountered the same problem, too. \n\nThe include_in_parent workaround can solve this problem only when you don't need the relations defined in workstation nested object.\n\nFor example, if you need to filter by workstation {\"stationid\":\"s5\",\"phoneid\":\"p6\"}, user {\"first\":\"fname3\",\"last\":\"lname3\",\"workstation\":[{\"stationid\":\"s5\",\"phoneid\":\"p5\"},{\"stationid\":\"s6\",\"phoneid\":\"p6\"}]} in the first document would match, even there's no {\"stationid\":\"s5\",\"phoneid\":\"p6\"} in his workstations.\n","performed_via_github_app":null}]