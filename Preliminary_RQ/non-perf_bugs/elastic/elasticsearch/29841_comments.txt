[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384131073","html_url":"https://github.com/elastic/elasticsearch/issues/29841#issuecomment-384131073","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29841","id":384131073,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzMTA3Mw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-01-03T10:50:41Z","updated_at":"2018-04-25T01:24:29Z","author_association":"COLLABORATOR","body":"*Original comment by @droberts195:*\n\nOriginally we had a results index per job with 1 shard.  Then, as a result of LINK REDACTED we switched to a default of 1 shared results index.  I believe it was at this point that we switched back to 5 shards, on the assumption that most people would use a single results index.  However, due to problems with mappings conflicts, multiple results indices may be more common than envisaged at that time.  And these custom results indices, which are for a single job when created via our UI, still use the same index template as the shared results index, hence have 5 shards.\r\n\r\nA better alternative is probably therefore to have 1 shard for each results index.  However, we then need a way for customers who find a results index bursting at the seams to increase capacity.  The proposed solution for that is in LINK REDACTED, but the work is not scheduled.  So for a holistic solution we should reduce the number of shards in the results template to 1 but also plan to implement LINK REDACTED.\r\n\r\nFor the state index there is no facility to have multiple indices.  For large jobs the state index can be potentially big - several hundred MB of state per job, even after compression.  Therefore, for the time being I think we should leave the state index with 5 shards.\r\n\r\nAnother thing that was raised in the Slack discussion was that fact that these indices have async durability.  This dates back to the finding in https://discuss.elastic.co/t/resolved-elasticsearch-2-1-0-indexing-40-slower-than-1-7-0/37230 that it gave a 40% speedup.  This finding is now several years old and much has changed since.  Therefore some more performance benchmarks should be done to see whether it's still justified for the results indices.  But I think this setting should _not_ be applied to the state index.  In the review of LINK REDACTED a suggestion was made to remove the async setting from both results (LINK REDACTED) and state (LINK REDACTED) indices.  I said we should hold off removing it from the results index (LINK REDACTED), but as a consequence it wasn't removed from either index.  I think we should remove the async durability setting from the state index because:\r\n\r\n1. Far fewer documents go in the state index and they are much bigger than results, hence the fsync overhead will be lower\r\n2. Losing a result document in the translog is no worse than losing it because the analysis hadn't got quite as far as it did before unexpected shutdown, but losing a state document and _not_ losing the corresponding model snapshot document in the results leads to very bad user experience","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384131074","html_url":"https://github.com/elastic/elasticsearch/issues/29841#issuecomment-384131074","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29841","id":384131074,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzMTA3NA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-01-03T11:38:28Z","updated_at":"2018-04-25T01:24:29Z","author_association":"COLLABORATOR","body":"*Original comment by @DaveCTurner:*\n\n> However, we then need a way for customers who find a results index bursting at the seams to increase capacity.\r\n\r\nDoes [splitting the index](https://www.elastic.co/guide/en/elasticsearch/reference/6.1/indices-split-index.html) help to do this?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384131076","html_url":"https://github.com/elastic/elasticsearch/issues/29841#issuecomment-384131076","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29841","id":384131076,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzMTA3Ng==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-01-04T13:03:27Z","updated_at":"2018-04-25T01:24:29Z","author_association":"COLLABORATOR","body":"*Original comment by @droberts195:*\n\n> Does splitting the index help to do this?\r\n\r\nI don't think it's ideal for this use case.  It requires the source index be read-only, which would mean all ML jobs would have to be closed during the split (or we would have to add new functionality to defer results writing during the split).  Also, you end up with a new index so we'd still need to update all the aliases used by all the jobs to point at the new index.  Updating all the aliases correctly would be a tedious and error-prone process, so we'd want to create an endpoint to do it.  So I don't think it would be any less work than implementing the proposed ML results index rollover endpoint.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/604941088","html_url":"https://github.com/elastic/elasticsearch/issues/29841#issuecomment-604941088","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29841","id":604941088,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNDk0MTA4OA==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2020-03-27T11:05:23Z","updated_at":"2020-03-27T11:05:23Z","author_association":"CONTRIBUTOR","body":"In 7.x all ML indices are now using 1 shard.  We have other issues to cover rollover when ML indices get too big.  The state index has ILM since 7.7 and #29946 discusses ways we could improve the situation for results.  Therefore I'll close this one.","performed_via_github_app":null}]