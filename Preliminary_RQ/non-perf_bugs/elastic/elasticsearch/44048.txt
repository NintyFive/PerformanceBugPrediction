{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/44048","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44048/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44048/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44048/events","html_url":"https://github.com/elastic/elasticsearch/issues/44048","id":465039719,"node_id":"MDU6SXNzdWU0NjUwMzk3MTk=","number":44048,"title":"Cluster privileges refactoring to support privilege restrictions","user":{"login":"bizybot","id":902768,"node_id":"MDQ6VXNlcjkwMjc2OA==","avatar_url":"https://avatars2.githubusercontent.com/u/902768?v=4","gravatar_id":"","url":"https://api.github.com/users/bizybot","html_url":"https://github.com/bizybot","followers_url":"https://api.github.com/users/bizybot/followers","following_url":"https://api.github.com/users/bizybot/following{/other_user}","gists_url":"https://api.github.com/users/bizybot/gists{/gist_id}","starred_url":"https://api.github.com/users/bizybot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bizybot/subscriptions","organizations_url":"https://api.github.com/users/bizybot/orgs","repos_url":"https://api.github.com/users/bizybot/repos","events_url":"https://api.github.com/users/bizybot/events{/privacy}","received_events_url":"https://api.github.com/users/bizybot/received_events","type":"User","site_admin":false},"labels":[{"id":912838209,"node_id":"MDU6TGFiZWw5MTI4MzgyMDk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Security/Authorization","name":":Security/Authorization","color":"0e8a16","default":false,"description":"Roles, Privileges, DLS/FLS, RBAC/ABAC"},{"id":837440720,"node_id":"MDU6TGFiZWw4Mzc0NDA3MjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Erefactoring","name":">refactoring","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2019-07-08T03:41:11Z","updated_at":"2019-08-12T03:12:52Z","closed_at":"2019-08-12T03:12:51Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Currently, we support named cluster privileges (`ClusterPrivilege`) and conditional cluster privileges (`ConditionalClusterPrivilege`). When working with API keys we identified that there is a need to revisit and refactor the cluster privileges so we can support named conditional cluster privileges similar to named cluster privileges.\r\n\r\nThe `ClusterPrivilege` defines a set of permitted cluster actions. When introducing Application privileges we saw a need for conditional cluster privilege which is a composition of `ClusterPrivilege` and a request predicate but it seems that we have outgrown with the simplified nature of `ClusterPrivilege` and need to rethink in the advent of new use cases that we want to address in future. These new use cases need the security to consider the actual resource on which the action is being performed along with other contextual information like currently authenticated user, current request.\r\nFor example, for a given request (action name, other request parameters) what\r\n- cluster actions are allowed\r\n- optionally restricted by\r\n   - the request attributes (ex. watch id from the request)\r\n   - target (ex. group of `Settings`, group of `ApiKey`s identified by some criteria, etc.)\r\n   - current authenticated user's context (ex. realm, location, login time of the day, etc.)\r\n\r\nExample use cases:-\r\n- restrict API key cluster actions(GET, INVALIDATE, CREATE) to the API keys owned by the currently authenticated user\r\n- restrict watcher actions to the watches owned by the currently authenticated user or to those owned by a group of user based on some criteria etc.\r\n- other resources that were identified as part of an open issue (#34384)\r\n\r\nThe issue exists to gather feedback, ideas around refactoring, identify and limit the scope of the refactoring and to identify any other use cases that are important to be considered during the refactoring. We would want the refactoring to be additive but not break the backward compatibility of the authorization related APIs.","closed_by":{"login":"bizybot","id":902768,"node_id":"MDQ6VXNlcjkwMjc2OA==","avatar_url":"https://avatars2.githubusercontent.com/u/902768?v=4","gravatar_id":"","url":"https://api.github.com/users/bizybot","html_url":"https://github.com/bizybot","followers_url":"https://api.github.com/users/bizybot/followers","following_url":"https://api.github.com/users/bizybot/following{/other_user}","gists_url":"https://api.github.com/users/bizybot/gists{/gist_id}","starred_url":"https://api.github.com/users/bizybot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bizybot/subscriptions","organizations_url":"https://api.github.com/users/bizybot/orgs","repos_url":"https://api.github.com/users/bizybot/repos","events_url":"https://api.github.com/users/bizybot/events{/privacy}","received_events_url":"https://api.github.com/users/bizybot/received_events","type":"User","site_admin":false},"performed_via_github_app":null}