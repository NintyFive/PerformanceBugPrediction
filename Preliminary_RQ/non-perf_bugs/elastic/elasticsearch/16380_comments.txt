[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/183760673","html_url":"https://github.com/elastic/elasticsearch/issues/16380#issuecomment-183760673","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16380","id":183760673,"node_id":"MDEyOklzc3VlQ29tbWVudDE4Mzc2MDY3Mw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-02-13T21:41:39Z","updated_at":"2016-02-13T21:41:39Z","author_association":"CONTRIBUTOR","body":"Hi @roytmana \n\nAs you know, nested docs are independent of their parent docs, so there is no way to provide access to the parents from the nested docs in any way that is going to perform well.\n\n> Please do not suggest :-) that I can aggregate on Priority first and then on Teams and then flip/collate my nested result. \n\nSuggest that you design your data to fit with your access pattern?  It would seem the most obvious (and most efficient) thing to do, no?  \n\nYour \"practical\" and \"powerful\" suggestions would be great, except that they don't fit at all with how aggregations work - it'd be a horrible and expensive hack to implement this.\n\nIf you want access to a value inside a document, then it needs to be added to that document at index time. eg as follows:\n\n```\nPUT t\n{\n  \"mappings\": {\n    \"t\": {\n      \"properties\": {\n        \"teams\": {\n          \"type\": \"nested\"\n        }\n      }\n    }\n  }\n}\n\nPUT t/t/1\n{\n  \"priority\": 1,\n  \"teams\": [\n    {\n      \"name\": \"team1\",\n      \"hours\": 10,\n      \"priority\": 1\n    },\n    {\n      \"name\": \"team2\",\n      \"hours\": 20,\n      \"priority\": 1\n    }\n  ]\n}\n\nGET t/_search?size=0\n{\n  \"aggs\": {\n    \"teams\": {\n      \"nested\": {\n        \"path\": \"teams\"\n      },\n      \"aggs\": {\n        \"team_name\": {\n          \"terms\": {\n            \"field\": \"teams.name\"\n          },\n          \"aggs\": {\n            \"priority\": {\n              \"terms\": {\n                \"field\": \"teams.priority\"\n              },\n              \"aggs\": {\n                \"hours\": {\n                  \"sum\": {\n                    \"field\": \"teams.hours\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nThe one thing that _may_  be worth considering is allowing `copy_field` to add fields from the parent into each nested doc (a request I previously rejected), something like the following:\n\n```\nPUT t \n{\n  \"mappings\": {\n    \"t\": {\n      \"properties\": {\n        \"priority\": {\n          \"type\": \"integer\",\n          \"copy_to\": \"teams.priority\"\n        },\n        \"teams\": {\n          \"type\": \"nested\"\n        }\n      }\n    }\n  }\n}\n\nPUT t/t/1\n{\n  \"priority\": 1,\n  \"teams\": [\n    {\n      \"name\": \"team1\",\n      \"hours\": 10\n    },\n    {\n      \"name\": \"team2\",\n      \"hours\": 20\n    }\n  ]\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/373678702","html_url":"https://github.com/elastic/elasticsearch/issues/16380#issuecomment-373678702","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16380","id":373678702,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MzY3ODcwMg==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2018-03-16T10:55:25Z","updated_at":"2018-03-16T10:55:25Z","author_association":"MEMBER","body":"@elastic/es-search-aggs ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/413679271","html_url":"https://github.com/elastic/elasticsearch/issues/16380#issuecomment-413679271","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16380","id":413679271,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzY3OTI3MQ==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2018-08-16T20:46:20Z","updated_at":"2018-08-16T20:46:20Z","author_association":"CONTRIBUTOR","body":"We have decided to close this issue as there are several ways to update or modify data in an index now to setup your data in a way that can be used in the aggregations that is performant.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/565856243","html_url":"https://github.com/elastic/elasticsearch/issues/16380#issuecomment-565856243","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16380","id":565856243,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NTg1NjI0Mw==","user":{"login":"matthuhiggins","id":8185,"node_id":"MDQ6VXNlcjgxODU=","avatar_url":"https://avatars1.githubusercontent.com/u/8185?v=4","gravatar_id":"","url":"https://api.github.com/users/matthuhiggins","html_url":"https://github.com/matthuhiggins","followers_url":"https://api.github.com/users/matthuhiggins/followers","following_url":"https://api.github.com/users/matthuhiggins/following{/other_user}","gists_url":"https://api.github.com/users/matthuhiggins/gists{/gist_id}","starred_url":"https://api.github.com/users/matthuhiggins/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthuhiggins/subscriptions","organizations_url":"https://api.github.com/users/matthuhiggins/orgs","repos_url":"https://api.github.com/users/matthuhiggins/repos","events_url":"https://api.github.com/users/matthuhiggins/events{/privacy}","received_events_url":"https://api.github.com/users/matthuhiggins/received_events","type":"User","site_admin":false},"created_at":"2019-12-15T23:00:17Z","updated_at":"2019-12-15T23:00:17Z","author_association":"NONE","body":"My need is a terms aggregation on a parent attribute from a nested context. Copying all parent attributes down to the nested documents is a storage issue for me, so I've been checking in on this for several years. \r\n\r\nThe several stack overflow and github discussions about the topic hint that supporting access to the \"parent\" from the nested aggregation is not feasible due to how Lucene stores the child documents, and accessing the parent document from a nested aggregation would not be performant. (This makes me wonder how the `reverse_nested` aggregation can be performant, which seems to have similar requirements.)\r\n\r\nI am curious if there are any active discussions on the problem, or if this will forever be a no go. If it's the latter, I think it would help to note the issue in the reverse_nested documentation.","performed_via_github_app":null}]