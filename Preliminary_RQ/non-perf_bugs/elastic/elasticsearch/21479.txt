{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/21479","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21479/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21479/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21479/events","html_url":"https://github.com/elastic/elasticsearch/issues/21479","id":188607163,"node_id":"MDU6SXNzdWUxODg2MDcxNjM=","number":21479,"title":"More flexible script query","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"labels":[{"id":146834791,"node_id":"MDU6TGFiZWwxNDY4MzQ3OTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Scripting","name":":Core/Infra/Scripting","color":"0e8a16","default":false,"description":"Scripting abstractions, Painless, and Mustache"},{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":21,"created_at":"2016-11-10T20:14:07Z","updated_at":"2018-02-14T13:32:17Z","closed_at":"2016-11-21T20:25:52Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Now that Kibana supports painless, some [strange](https://github.com/elastic/kibana/issues/9024) things have come up around filtering. This is a proposal to implement a thing in Elasticsearch so Kibana doesn't have to do upsetting textual manipulation to user generated script fields.\r\n\r\nBackground: Kibana lets users configure script fields once and reuse them. The specific usage that is troubling is filtering which Kibana implements by creating a query like this:\r\n\r\n```js\r\n                \"script\" : {\r\n                    \"script\" : {\r\n                        \"inline\" : \"($scriptText) == params.value\",\r\n                        \"lang\"   : \"painless\",\r\n                        \"params\" : {\r\n                            \"value\" : \"whatever the user picked\"\r\n                        }\r\n                    }\r\n                }\r\n```\r\n\r\nSpecifically, the `($scriptText) == params.value` part is scary because script fields that are perfectly valid painless most places are not valid in this script context. Scripts that contain `return`, `;`, or variable declarations are in trouble with a construct like this.\r\n\r\nI propose a new version of the script query that'd look like this:\r\n\r\n```js\r\n                \"script\" : {\r\n                    \"script\" : {\r\n                        \"inline\"  : $scriptText,\r\n                        \"lang\"    : \"painless\",\r\n                        \"matches\" : \"whatever the user picked\"\r\n                    }\r\n                }\r\n```\r\n\r\nInstead of casting the return of the script to a boolean we cast it to whatever type is sent in the `matches` field and then check for equality.","closed_by":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"performed_via_github_app":null}