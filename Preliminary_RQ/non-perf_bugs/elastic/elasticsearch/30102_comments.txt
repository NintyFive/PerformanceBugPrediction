[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384138187","html_url":"https://github.com/elastic/elasticsearch/issues/30102#issuecomment-384138187","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30102","id":384138187,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzODE4Nw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2017-09-22T15:21:03Z","updated_at":"2018-04-25T02:05:57Z","author_association":"COLLABORATOR","body":"*Original comment by @Mpdreamz:*\n\ncc @elastic/es-clients ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384138188","html_url":"https://github.com/elastic/elasticsearch/issues/30102#issuecomment-384138188","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30102","id":384138188,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzODE4OA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2017-09-25T14:47:30Z","updated_at":"2018-04-25T02:05:57Z","author_association":"COLLABORATOR","body":"*Original comment by @jasontedor:*\n\nRelates LINK REDACTED","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384138189","html_url":"https://github.com/elastic/elasticsearch/issues/30102#issuecomment-384138189","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30102","id":384138189,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzODE4OQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2017-10-06T14:09:23Z","updated_at":"2018-04-25T02:05:57Z","author_association":"COLLABORATOR","body":"*Original comment by @clintongormley:*\n\nI don't think we need two separate end points.  Eventually, when we no longer need snapshot/restore for bootstrapping, then the logic would look something like this:\r\n\r\n* Fetch the remote index defn\r\n* If the index exists, check that it is compatible, otherwise create a new index\r\n* Perform file recovery if needed\r\n* Follow transactions from translog\r\n\r\nWhile we still need S&R, we'd do the following:\r\n\r\n* Fetch the remote index defn\r\n* If the index exists, check that it is compatible, otherwise create a new index\r\n* If file recovery needed, then throw an exception  (this check could come before creating a new index)\r\n* Follow transactions from translog\r\n\r\nSo this can all be handled by the single `_follow` end point.  eg with the reindex API and everywhere else, we create an index on demand.\r\n\r\nThe method should be POST not PUT, because we're not storing the body with the URL `_xpack/xdcr/_follow`.\r\n\r\nI talked to @jasontedor about possibly doing something like this, without need for a body\r\n\r\n    POST foo/_xpack/xdcr/_follow/cluster:foo\r\n\r\nor\r\n\r\n    POST cluster:foo/_xpack/xdcr/_follow/foo\r\n\r\nor \r\n\r\n    POST cluster:*/_xpack/xdcr/_follow\r\n\r\nbut he wasn't keen on having to remember the order of parameters.\r\n\r\nInstead, we thought about making consistent with the reindex API, eg:\r\n\r\n```\r\nPOST _xpack/xdcr/_follow\r\n{\r\n  \"source\": {\r\n    \"index\": \"cluster:foo\"\r\n  },\r\n  \"dest\": {\r\n    \"index\": \"foo\"  // optional\r\n  }\r\n}\r\n```\r\n\r\nThis seems pretty easy to remember and understand. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384138191","html_url":"https://github.com/elastic/elasticsearch/issues/30102#issuecomment-384138191","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30102","id":384138191,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzODE5MQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2017-10-08T19:32:43Z","updated_at":"2018-04-25T02:05:57Z","author_association":"COLLABORATOR","body":"*Original comment by @bleskes:*\n\nThanks @clintongormley \r\n\r\n> I don't think we need two separate end points.\r\n> If the index exists, check that it is compatible, otherwise create a new index\r\n\r\nI personally don't like the automatic fallback, in this case. I think that in this kind of admin level API this can only hide mistakes - for example, I expect the index to be there but it wasn't and now we automatically create it. This is a common issue in our API - sometime it's very useful, like when we automatically create an index in the time series data use case, but in general I think it should be avoided. \r\n\r\n> I talked to @jasontedor about possibly doing something like this, without need for a body\r\n\r\nSee comment in the description - we discussed this and the group decided to not go with url only. The main argument was to make it easier to add parameters and options.\r\n\r\n> Instead, we thought about making consistent with the reindex API, eg:\r\n```\r\nPOST _xpack/xdcr/_follow\r\n{\r\n  \"source\": {\r\n    \"index\": \"cluster:foo\"\r\n  },\r\n  \"dest\": {\r\n    \"index\": \"foo\"  // optional\r\n  }\r\n}\r\n```\r\n\r\nI personally find this less \"tight\" - although it's clear I'm biased. The words \"source\"/\"dest\" add confusion IMO in the context where we use \"follower\" and \"leader\". Can you elaborate on the reason for the suggestion?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384138192","html_url":"https://github.com/elastic/elasticsearch/issues/30102#issuecomment-384138192","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30102","id":384138192,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzODE5Mg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2017-10-09T12:10:25Z","updated_at":"2018-04-25T02:05:57Z","author_association":"COLLABORATOR","body":"*Original comment by @clintongormley:*\n\n> I personally don't like the automatic fallback, in this case. I think that in this kind of admin level API this can only hide mistakes - for example, I expect the index to be there but it wasn't and now we automatically create it. This is a common issue in our API - sometime it's very useful, like when we automatically create an index in the time series data use case, but in general I think it should be avoided.\r\n\r\nWhat is the purpose of creating an empty follower index?  Either:\r\n\r\n1. the index already exists, in which case we check it for (a) compatibility and (b) the existence of data in the remote translog to allow us to catch up, or\r\n2. the index doesn't exist, in which case we create it using the remote index definition and then we go to step 1\r\n\r\nThis looks like a single process to me.  When relying on snapshot restore for bootstrapping, we'll fail if we can't read data from the translog, and when we no longer rely on snapshot restore, then we'll do a segment copy.\r\n\r\nI don't understand why we need the two APIs.  I also value consistency.  Why should this API be different from all the others?\r\n\r\n> I personally find this less \"tight\" - although it's clear I'm biased. The words \"source\"/\"dest\" add confusion IMO in the context where we use \"follower\" and \"leader\". Can you elaborate on the reason for the suggestion?\r\n\r\nConsistency again. It's one less thing for users to remember.  I think `source` and `dest` leave little room for confusion.  We already have them.  Why introduce new terms?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384138193","html_url":"https://github.com/elastic/elasticsearch/issues/30102#issuecomment-384138193","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30102","id":384138193,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzODE5Mw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2017-11-01T20:16:17Z","updated_at":"2018-04-25T02:05:58Z","author_association":"COLLABORATOR","body":"*Original comment by @zuketo:*\n\nI started walking through using this API design for various use cases. Overall, looks good, a few questions came up (I'll group them by use case):\r\n\r\nData locality/replicating the same index to 5 different datacenters (to be close to the application server/user):\r\n- Can a leading index have multiple followers (e.g. by rerunning _follow with different destinations)\r\n- Can a following index follow another following index? (e.g. daisy chained replication)\r\n\r\nLogging/security events:\r\n- We'll have an index created per day (in a lot of scenarios), without autofollow, what are some workarounds for phase 1? Will \"POST cluster:*/_xpack/xdcr/_follow\" be supported, or the other option is using a process external to ES to do the daily follow work?\r\n- What happens when the following index name already exists? Thinking through future Logstash scenarios, will every index name need to include the cluster/DC name, to avoid conflicts? E.g. \"logstash-%{+YYYY.MM.dd}\" may exist in every cluster, so we would probably want to recommend something like \"logstash-datacenter1-%{+YYYY.MM.dd}\".\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384138195","html_url":"https://github.com/elastic/elasticsearch/issues/30102#issuecomment-384138195","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30102","id":384138195,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzODE5NQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2017-11-01T22:45:24Z","updated_at":"2018-04-25T02:05:58Z","author_association":"COLLABORATOR","body":"*Original comment by @bleskes:*\n\n@zuketo answers inline:\r\n\r\n> Can a leading index have multiple followers (e.g. by rerunning _follow with different destinations)\r\n\r\nYes. Following is a property of the target indices. The source index doesn't care how many followers read from it.\r\n\r\n> Can a following index follow another following index? (e.g. daisy chained replication)\r\n\r\nAs far as we know now there is no reason for this not work. It is obviously a more complex setup so we might need to drop the feature at the first iteration. out of curiosity - what was your use case?\r\n\r\n> Logging/security events\r\n\r\n> We'll have an index created per day (in a lot of scenarios), without autofollow, what are some workarounds for phase 1? Will \"POST cluster:*/_xpack/xdcr/_follow\" be supported, or the other option is using a process external to ES to do the daily follow work?\r\n\r\nAt this point we dont know yet. `POST cluster:*/_xpack/xdcr/_follow` is likely not be it as it requires for us to be lenient about indices that already have a follower locally. Might need an external process for daily work. Might be part of the index life cycle management (though this doesn't align well with the everything is driven by the target cluster mode). Might be something else.\r\n\r\n> What happens when the following index name already exists? Thinking through future Logstash scenarios, will every index name need to include the cluster/DC name, to avoid conflicts? E.g. \"logstash-%{+YYYY.MM.dd}\" may exist in every cluster, so we would probably want to recommend something like \"logstash-datacenter1-%{+YYYY.MM.dd}\".\r\n\r\nThat's a fair point. We may need to extend the api I suggested at the end. I lean towards the same rename options we have in the restore API.\r\n\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384138197","html_url":"https://github.com/elastic/elasticsearch/issues/30102#issuecomment-384138197","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30102","id":384138197,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzODE5Nw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2017-11-01T22:45:45Z","updated_at":"2018-04-25T02:05:58Z","author_association":"COLLABORATOR","body":"*Original comment by @bleskes:*\n\n@jasontedor do you mind updating the ticket about our discussion in berlin?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384138200","html_url":"https://github.com/elastic/elasticsearch/issues/30102#issuecomment-384138200","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30102","id":384138200,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzODIwMA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2017-11-01T23:10:56Z","updated_at":"2018-04-25T02:05:58Z","author_association":"COLLABORATOR","body":"*Original comment by @zuketo:*\n\nThanks! \r\n\r\nFor chained replication use cases, I haven't come across any users specifically asking for this (I definitely wouldn't list it as a priority). I was mainly interested in solving the data locality use case if the source index couldn't have multiple followers (which isn't the case).\r\n\r\nFor chained replication, thinking through some future scenarios, users may want to reduce load on the leading index (e.g. if replicating to 20 clusters, or maybe more, this can be fanned out with chaining). The other scenario is two or more clusters per DC/region, and replicating once over the WAN, then again locally, to reduce network traffic costs.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384138202","html_url":"https://github.com/elastic/elasticsearch/issues/30102#issuecomment-384138202","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30102","id":384138202,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzODIwMg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2017-11-01T23:26:20Z","updated_at":"2018-04-25T02:05:58Z","author_association":"COLLABORATOR","body":"*Original comment by @jasontedor:*\n\n@clintongormley Can you update this issue with the outcome of our discussion in Berlin?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384138203","html_url":"https://github.com/elastic/elasticsearch/issues/30102#issuecomment-384138203","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30102","id":384138203,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzODIwMw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2017-11-02T08:13:09Z","updated_at":"2018-04-25T02:05:58Z","author_association":"COLLABORATOR","body":"*Original comment by @clintongormley:*\n\nAs discussed in Berlin, we're going to go with a single API for setting up index following, and we're going to use `leader`/`follower` instead of `source`/`dest` in the body","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/470965169","html_url":"https://github.com/elastic/elasticsearch/issues/30102#issuecomment-470965169","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30102","id":470965169,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDk2NTE2OQ==","user":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"created_at":"2019-03-08T15:22:04Z","updated_at":"2019-03-08T15:22:04Z","author_association":"MEMBER","body":"We have implemented all these endpoints. Closing\r\n/cc @martijnvg","performed_via_github_app":null}]