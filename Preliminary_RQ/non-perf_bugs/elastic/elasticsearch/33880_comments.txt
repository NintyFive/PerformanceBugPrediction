[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/423179463","html_url":"https://github.com/elastic/elasticsearch/issues/33880#issuecomment-423179463","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33880","id":423179463,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMzE3OTQ2Mw==","user":{"login":"mpskovvang","id":7034075,"node_id":"MDQ6VXNlcjcwMzQwNzU=","avatar_url":"https://avatars3.githubusercontent.com/u/7034075?v=4","gravatar_id":"","url":"https://api.github.com/users/mpskovvang","html_url":"https://github.com/mpskovvang","followers_url":"https://api.github.com/users/mpskovvang/followers","following_url":"https://api.github.com/users/mpskovvang/following{/other_user}","gists_url":"https://api.github.com/users/mpskovvang/gists{/gist_id}","starred_url":"https://api.github.com/users/mpskovvang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mpskovvang/subscriptions","organizations_url":"https://api.github.com/users/mpskovvang/orgs","repos_url":"https://api.github.com/users/mpskovvang/repos","events_url":"https://api.github.com/users/mpskovvang/events{/privacy}","received_events_url":"https://api.github.com/users/mpskovvang/received_events","type":"User","site_admin":false},"created_at":"2018-09-20T13:17:44Z","updated_at":"2018-09-20T13:17:44Z","author_association":"NONE","body":"Also, when used together with `bucket_selector` you have no way to determinate the size as `cardinality` is processed before.\r\n\r\nJust my two cents.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/423195830","html_url":"https://github.com/elastic/elasticsearch/issues/33880#issuecomment-423195830","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33880","id":423195830,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMzE5NTgzMA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-09-20T14:04:40Z","updated_at":"2018-09-20T14:04:40Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/439838510","html_url":"https://github.com/elastic/elasticsearch/issues/33880#issuecomment-439838510","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33880","id":439838510,"node_id":"MDEyOklzc3VlQ29tbWVudDQzOTgzODUxMA==","user":{"login":"LuisAlvelaMendes","id":36206773,"node_id":"MDQ6VXNlcjM2MjA2Nzcz","avatar_url":"https://avatars3.githubusercontent.com/u/36206773?v=4","gravatar_id":"","url":"https://api.github.com/users/LuisAlvelaMendes","html_url":"https://github.com/LuisAlvelaMendes","followers_url":"https://api.github.com/users/LuisAlvelaMendes/followers","following_url":"https://api.github.com/users/LuisAlvelaMendes/following{/other_user}","gists_url":"https://api.github.com/users/LuisAlvelaMendes/gists{/gist_id}","starred_url":"https://api.github.com/users/LuisAlvelaMendes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LuisAlvelaMendes/subscriptions","organizations_url":"https://api.github.com/users/LuisAlvelaMendes/orgs","repos_url":"https://api.github.com/users/LuisAlvelaMendes/repos","events_url":"https://api.github.com/users/LuisAlvelaMendes/events{/privacy}","received_events_url":"https://api.github.com/users/LuisAlvelaMendes/received_events","type":"User","site_admin":false},"created_at":"2018-11-19T10:06:16Z","updated_at":"2018-11-19T10:06:16Z","author_association":"NONE","body":"I'd like to take this issue","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/439916454","html_url":"https://github.com/elastic/elasticsearch/issues/33880#issuecomment-439916454","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33880","id":439916454,"node_id":"MDEyOklzc3VlQ29tbWVudDQzOTkxNjQ1NA==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2018-11-19T14:45:21Z","updated_at":"2018-11-19T14:45:21Z","author_association":"MEMBER","body":"@mpskovvang If I understand correctly, you just want the total number of buckets that a multi-bucket agg (like a `terms`) contains?\r\n\r\nThat's doable with the special [`_count` property](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline.html#_special_paths), albeit not in a great manner.  If you use a `stats_bucket` with the `_count` property of the terms agg, you'll get a count of buckets:\r\n\r\n```\r\nGET /test/_search\r\n{\r\n    \"size\": 0,\r\n    \"aggs\" : {\r\n        \"ids\" : {\r\n            \"terms\": {\r\n                \"field\" : \"id\"\r\n            }\r\n        },\r\n        \"total_ids\": {\r\n            \"stats_bucket\": {\r\n                \"buckets_path\": \"ids._count\" \r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\nwhich returns:\r\n```\r\n{\r\n  \"took\": 13,\r\n  \"timed_out\": false,\r\n  \"_shards\": {...},\r\n  \"hits\": {...},\r\n  \"aggregations\": {\r\n    \"ids\": {\r\n      \"doc_count_error_upper_bound\": 0,\r\n      \"sum_other_doc_count\": 0,\r\n      \"buckets\": [\r\n        {\r\n          \"key\": 3,\r\n          \"doc_count\": 6\r\n        },\r\n        {\r\n          \"key\": 1,\r\n          \"doc_count\": 1\r\n        },\r\n        {\r\n          \"key\": 2,\r\n          \"doc_count\": 1\r\n        },\r\n        {\r\n          \"key\": 4,\r\n          \"doc_count\": 1\r\n        }\r\n      ]\r\n    },\r\n    \"total_ids\": {\r\n      \"count\": 4,\r\n      \"min\": 1,\r\n      \"max\": 6,\r\n      \"avg\": 2.25,\r\n      \"sum\": 9\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThe `count` metric is what you want, the rest of the values returned in the stats are related to the _counts of the buckets themselves.\r\n\r\nThis is a little roundabout.  There is also a `_bucket_count` special property which _should_ provide the info you want, but it appears to be a little buggy when it comes to stats/min/max/etc pipelines (a different issue, I'll file a ticket in a few).\r\n\r\n> When used to truncate the result buckets the total size could be used for a simple pagination. I know composite is better for scrolling large result sets, but in my case I would like to paginate through just 1,000 results. The bucket_sort reduces the response size and load time.\r\n\r\nJust a note: pipeline aggs are entirely post-processing.  So if you are using the bucket sort to \"paginate\" through the response, the results are being re-aggregated every single time.  It won't reduce response time at all, since the same work is being done.  The bucket_sort is just post-processing the same response and tossing away different parts of the response.  The only affect it would really have is a reduction in network transfer.\r\n\r\nI'd just stream all 1000 buckets to your app and paginate locally if it were me.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/440552010","html_url":"https://github.com/elastic/elasticsearch/issues/33880#issuecomment-440552010","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33880","id":440552010,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MDU1MjAxMA==","user":{"login":"mpskovvang","id":7034075,"node_id":"MDQ6VXNlcjcwMzQwNzU=","avatar_url":"https://avatars3.githubusercontent.com/u/7034075?v=4","gravatar_id":"","url":"https://api.github.com/users/mpskovvang","html_url":"https://github.com/mpskovvang","followers_url":"https://api.github.com/users/mpskovvang/followers","following_url":"https://api.github.com/users/mpskovvang/following{/other_user}","gists_url":"https://api.github.com/users/mpskovvang/gists{/gist_id}","starred_url":"https://api.github.com/users/mpskovvang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mpskovvang/subscriptions","organizations_url":"https://api.github.com/users/mpskovvang/orgs","repos_url":"https://api.github.com/users/mpskovvang/repos","events_url":"https://api.github.com/users/mpskovvang/events{/privacy}","received_events_url":"https://api.github.com/users/mpskovvang/received_events","type":"User","site_admin":false},"created_at":"2018-11-21T06:31:04Z","updated_at":"2018-11-21T06:31:04Z","author_association":"NONE","body":"@polyfractal Thanks for your detailed answer. The `stats_bucket` solves the issue in my case. I haven't thought of this solution.\r\n\r\n> Just a note: pipeline aggs are entirely post-processing. So if you are using the bucket sort to \"paginate\" through the response, the results are being re-aggregated every single time. It won't reduce response time at all, since the same work is being done. The bucket_sort is just post-processing the same response and tossing away different parts of the response. The only affect it would really have is a reduction in network transfer.\r\n>\r\n> I'd just stream all 1000 buckets to your app and paginate locally if it were me.\r\n\r\nMy point was exactly network related. I understand that Elasticsearch still has to perform all the hard work each time. In the mean time I decided to go with the local pagination.\r\n\r\nSeems like this issue can be closed then. Thanks for your help.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/440661161","html_url":"https://github.com/elastic/elasticsearch/issues/33880#issuecomment-440661161","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33880","id":440661161,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MDY2MTE2MQ==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2018-11-21T13:26:04Z","updated_at":"2018-11-21T13:26:04Z","author_association":"MEMBER","body":"Ok cool, just wanted to make sure it was clear what pipelines were doing (some folks are confused what all it entails).  Happy to help! :)","performed_via_github_app":null}]