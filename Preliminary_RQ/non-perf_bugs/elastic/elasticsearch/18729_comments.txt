[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225140399","html_url":"https://github.com/elastic/elasticsearch/issues/18729#issuecomment-225140399","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18729","id":225140399,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTE0MDM5OQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-06-10T09:45:14Z","updated_at":"2016-06-10T09:45:14Z","author_association":"CONTRIBUTOR","body":"We just discussed it in our weekly Fixit Friday meeting. While this would be more flexible, this also makes things more complicated while the current way of configuring allocation is simple (at least in the simple cases) and enough for most users. So we'd rather keep the current way.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225141721","html_url":"https://github.com/elastic/elasticsearch/issues/18729#issuecomment-225141721","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18729","id":225141721,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTE0MTcyMQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-10T09:52:05Z","updated_at":"2016-06-10T09:52:05Z","author_association":"CONTRIBUTOR","body":"I also want to add that it is extremely difficult to digest issues like this. I can see what you tried to achieve but we have to break things up into smaller and more digestible solutions. This entire thing seems like implementable in a lot of small PRs and issues and deprecate things step by step. That way it's faster to get improvements to the user, get better code reviews, add better APIs, make things simpler and clear. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/248646179","html_url":"https://github.com/elastic/elasticsearch/issues/18729#issuecomment-248646179","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18729","id":248646179,"node_id":"MDEyOklzc3VlQ29tbWVudDI0ODY0NjE3OQ==","user":{"login":"apatrida","id":182340,"node_id":"MDQ6VXNlcjE4MjM0MA==","avatar_url":"https://avatars3.githubusercontent.com/u/182340?v=4","gravatar_id":"","url":"https://api.github.com/users/apatrida","html_url":"https://github.com/apatrida","followers_url":"https://api.github.com/users/apatrida/followers","following_url":"https://api.github.com/users/apatrida/following{/other_user}","gists_url":"https://api.github.com/users/apatrida/gists{/gist_id}","starred_url":"https://api.github.com/users/apatrida/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apatrida/subscriptions","organizations_url":"https://api.github.com/users/apatrida/orgs","repos_url":"https://api.github.com/users/apatrida/repos","events_url":"https://api.github.com/users/apatrida/events{/privacy}","received_events_url":"https://api.github.com/users/apatrida/received_events","type":"User","site_admin":false},"created_at":"2016-09-21T15:22:38Z","updated_at":"2016-09-21T15:22:38Z","author_association":"CONTRIBUTOR","body":"@s1monw First the concept (like this) needs to be accepted as an idea that we want to pursue.  After we can break it down and re-address it as elemental PR's/Issues.  But it has to be thought through as a whole to make something that actually works.  While @jpountz says the current system is simple, because it has some simple parts that you can use to make some simple things happen ... but it also completely fails at making truly scalable topologies for big deployments that need control and have absolutely no way to make it work.  The current individual control mechanisms do not work together to describe cohesive topologies.\n\nSo what I was hoping for here was to get agreement on something along these lines, check out use cases and collect more info, then come back with the building blocks to make it happen.  Instead of closing big ideas, there needs to be someway (from outside your internal meetings) to discuss the big things, then come back at them.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/248650913","html_url":"https://github.com/elastic/elasticsearch/issues/18729#issuecomment-248650913","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18729","id":248650913,"node_id":"MDEyOklzc3VlQ29tbWVudDI0ODY1MDkxMw==","user":{"login":"apatrida","id":182340,"node_id":"MDQ6VXNlcjE4MjM0MA==","avatar_url":"https://avatars3.githubusercontent.com/u/182340?v=4","gravatar_id":"","url":"https://api.github.com/users/apatrida","html_url":"https://github.com/apatrida","followers_url":"https://api.github.com/users/apatrida/followers","following_url":"https://api.github.com/users/apatrida/following{/other_user}","gists_url":"https://api.github.com/users/apatrida/gists{/gist_id}","starred_url":"https://api.github.com/users/apatrida/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apatrida/subscriptions","organizations_url":"https://api.github.com/users/apatrida/orgs","repos_url":"https://api.github.com/users/apatrida/repos","events_url":"https://api.github.com/users/apatrida/events{/privacy}","received_events_url":"https://api.github.com/users/apatrida/received_events","type":"User","site_admin":false},"created_at":"2016-09-21T15:37:00Z","updated_at":"2016-09-21T15:37:00Z","author_association":"CONTRIBUTOR","body":"@jpountz not sure how simple is a combination of the current features:\n- rack awareness, which causes replicas and masters to try to be on separate racks\n- forced rack awareness, which works if you can define all of your racks ahead of time and ensures each rack has a copy \n- replica count range such as `3-ALL` which has a permanent bug #2869 which interferes with the other two and doesn't always seem to respond or do what it says it will, and definitely doesn't when using the above\n\nWith these three features you can end up in error states and things not really close to what you intended.  You can't control master distribution, you can't do things like ensuring a full copy of an index is on each node, etc.\n\nBy constraints you can say a few simple ones to replace the above \"simple\" features and have documentation that is one page.  So with 2 or 3 constraints that are in identical form you express the same thing, from which you can add a few more to do wondrous topologies.  So there is a simple easy to document version of the above for those simple cases.  Simplicity is how you present it and what you show the simple users.  A documentation problem.   That should limit writing a feature to have full control.\n\nI can write a sample constraint solver if you want to see how it is not very complicated code to answer for a given index and node what should happen.  If that helps.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/249204662","html_url":"https://github.com/elastic/elasticsearch/issues/18729#issuecomment-249204662","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18729","id":249204662,"node_id":"MDEyOklzc3VlQ29tbWVudDI0OTIwNDY2Mg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-09-23T14:15:53Z","updated_at":"2016-09-23T14:15:53Z","author_association":"CONTRIBUTOR","body":"Sorry @apatrida - I read this through again and it just made my head hurt.  While reading your examples I couldn't translate them into what the cluster would actually look like. It feels like reading Sendmail config.  Clearly our existing settings are not perfect, but they are at least fairly easy to understand.  I'd prefer working on incremental improvements to what we have instead.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/249250098","html_url":"https://github.com/elastic/elasticsearch/issues/18729#issuecomment-249250098","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18729","id":249250098,"node_id":"MDEyOklzc3VlQ29tbWVudDI0OTI1MDA5OA==","user":{"login":"apatrida","id":182340,"node_id":"MDQ6VXNlcjE4MjM0MA==","avatar_url":"https://avatars3.githubusercontent.com/u/182340?v=4","gravatar_id":"","url":"https://api.github.com/users/apatrida","html_url":"https://github.com/apatrida","followers_url":"https://api.github.com/users/apatrida/followers","following_url":"https://api.github.com/users/apatrida/following{/other_user}","gists_url":"https://api.github.com/users/apatrida/gists{/gist_id}","starred_url":"https://api.github.com/users/apatrida/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apatrida/subscriptions","organizations_url":"https://api.github.com/users/apatrida/orgs","repos_url":"https://api.github.com/users/apatrida/repos","events_url":"https://api.github.com/users/apatrida/events{/privacy}","received_events_url":"https://api.github.com/users/apatrida/received_events","type":"User","site_admin":false},"created_at":"2016-09-23T17:14:54Z","updated_at":"2016-09-23T17:15:15Z","author_association":"CONTRIBUTOR","body":"@clintongormley maybe another approach is for PR to allow some plugin to decide shard placement and replica count preferences for the core engine and swap out the current model via plugins.  So an advanced topology plugin could take over this decision making.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/249250433","html_url":"https://github.com/elastic/elasticsearch/issues/18729#issuecomment-249250433","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18729","id":249250433,"node_id":"MDEyOklzc3VlQ29tbWVudDI0OTI1MDQzMw==","user":{"login":"apatrida","id":182340,"node_id":"MDQ6VXNlcjE4MjM0MA==","avatar_url":"https://avatars3.githubusercontent.com/u/182340?v=4","gravatar_id":"","url":"https://api.github.com/users/apatrida","html_url":"https://github.com/apatrida","followers_url":"https://api.github.com/users/apatrida/followers","following_url":"https://api.github.com/users/apatrida/following{/other_user}","gists_url":"https://api.github.com/users/apatrida/gists{/gist_id}","starred_url":"https://api.github.com/users/apatrida/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apatrida/subscriptions","organizations_url":"https://api.github.com/users/apatrida/orgs","repos_url":"https://api.github.com/users/apatrida/repos","events_url":"https://api.github.com/users/apatrida/events{/privacy}","received_events_url":"https://api.github.com/users/apatrida/received_events","type":"User","site_admin":false},"created_at":"2016-09-23T17:16:20Z","updated_at":"2016-09-23T17:16:20Z","author_association":"CONTRIBUTOR","body":"Has anyone at elastic actually hit use cases that cannot be done at all with current settings?  I'd be surprised if you have not, because we do regularly and hit walls with the current model that prevent improving performance or reliability.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/249278587","html_url":"https://github.com/elastic/elasticsearch/issues/18729#issuecomment-249278587","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18729","id":249278587,"node_id":"MDEyOklzc3VlQ29tbWVudDI0OTI3ODU4Nw==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-09-23T19:13:16Z","updated_at":"2016-09-23T19:13:16Z","author_association":"MEMBER","body":"@apatrida may I suggest that you come up with a simple example where you show a concrete set of nodes (node 1,2,3,4... ), a concrete set of index shards and show how you want them to be layouted on your nodes in the form of \"index 1 shard 1 primary, on node 1\"?  Also please explain why you want them that way. I see you gave quite detailed examples of possible configuration but they involve many moving pieces and I fail to understand the why. That will help understand what your are trying to achieve. See why it can not  be done with the current system through a concrete example (as you say there are many theoretical limitations) and also think about potential alternative solutions to let you do what you try to do.\n\nNote that while I understand that you try to create a system that allows to do anything, there is a lot of value in a simple system everyone can understand albeit constrained. We try er towards the latter.\n","performed_via_github_app":null}]