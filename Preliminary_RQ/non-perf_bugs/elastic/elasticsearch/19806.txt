{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/19806","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19806/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19806/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19806/events","html_url":"https://github.com/elastic/elasticsearch/issues/19806","id":169414141,"node_id":"MDU6SXNzdWUxNjk0MTQxNDE=","number":19806,"title":"Groovy assert misses StringBuffer","user":{"login":"SweetNSourPavement","id":19834423,"node_id":"MDQ6VXNlcjE5ODM0NDIz","avatar_url":"https://avatars1.githubusercontent.com/u/19834423?v=4","gravatar_id":"","url":"https://api.github.com/users/SweetNSourPavement","html_url":"https://github.com/SweetNSourPavement","followers_url":"https://api.github.com/users/SweetNSourPavement/followers","following_url":"https://api.github.com/users/SweetNSourPavement/following{/other_user}","gists_url":"https://api.github.com/users/SweetNSourPavement/gists{/gist_id}","starred_url":"https://api.github.com/users/SweetNSourPavement/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SweetNSourPavement/subscriptions","organizations_url":"https://api.github.com/users/SweetNSourPavement/orgs","repos_url":"https://api.github.com/users/SweetNSourPavement/repos","events_url":"https://api.github.com/users/SweetNSourPavement/events{/privacy}","received_events_url":"https://api.github.com/users/SweetNSourPavement/received_events","type":"User","site_admin":false},"labels":[{"id":146834791,"node_id":"MDU6TGFiZWwxNDY4MzQ3OTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Scripting","name":":Core/Infra/Scripting","color":"0e8a16","default":false,"description":"Scripting abstractions, Painless, and Mustache"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"assignees":[{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2016-08-04T16:15:45Z","updated_at":"2016-08-12T19:38:25Z","closed_at":"2016-08-12T19:38:25Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version**:\n5.0.0-alpha4\n\n**JVM version**:\nOracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_101/25.101-b13\n\n**OS version**:\nLinux 107r01pc 4.2.0-42-generic #49~14.04.1-Ubuntu SMP Wed Jun 29 20:22:11 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n\n**Description of the problem including expected versus actual behavior**:\nIn a groovy scripted update asserting while referencing variables and specifying a message will cause a class not found exception.\n\n**Steps to reproduce**:\n1. on a clean elasticsearch enable scripting\n2. run some curl commands, see below\n3. observe the results\n\n**Various commands**:\n1. `curl -XPOST 'http://localhost:9200/a/a/a/_update' -d '{\"scripted_upsert\": true, \"script\": {\"inline\": \"assert false, \\\"foo\\\";\"}, \"upsert\": {}}'`\n   - `{\"error\":{\"root_cause\":[{\"type\":\"remote_transport_exception\",\"reason\":\"[Vertigo][127.0.0.1:9300][indices:data/write/update[s]]\"}],\"type\":\"illegal_argument_exception\",\"reason\":\"failed to execute script\",\"caused_by\":{\"type\":\"script_exception\",\"reason\":\"Error evaluating assert false, \\\"foo\\\";\",\"caused_by\":{\"type\":\"assertion_error\",\"reason\":\"foo. Expression: false\"},\"script_stack\":[],\"script\":\"\",\"lang\":\"groovy\"}},\"status\":400}`\n2. `curl -XPOST 'http://localhost:9200/a/a/b/_update' -d '{\"scripted_upsert\": true, \"script\": {\"inline\": \"def bar=false; assert bar, \\\"foo\\\";\"}, \"upsert\": {}}'`\n   - `{\"error\":{\"root_cause\":[{\"type\":\"remote_transport_exception\",\"reason\":\"[Vertigo][127.0.0.1:9300][indices:data/write/update[s]]\"}],\"type\":\"illegal_argument_exception\",\"reason\":\"failed to execute script\",\"caused_by\":{\"type\":\"script_exception\",\"reason\":\"Error evaluating def bar=false; assert bar, \\\"foo\\\";\",\"caused_by\":{\"type\":\"no_class_def_found_error\",\"reason\":\"java/lang/StringBuffer\"},\"script_stack\":[],\"script\":\"\",\"lang\":\"groovy\"}},\"status\":400}`\n3. `curl -XPOST 'http://localhost:9200/a/a/b/_update' -d '{\"scripted_upsert\": true, \"script\": {\"inline\": \"def bar=false; assert bar;\"}, \"upsert\": {}}'`\n   - `{\"error\":{\"root_cause\":[{\"type\":\"remote_transport_exception\",\"reason\":\"[Vertigo][127.0.0.1:9300][indices:data/write/update[s]]\"}],\"type\":\"illegal_argument_exception\",\"reason\":\"failed to execute script\",\"caused_by\":{\"type\":\"script_exception\",\"reason\":\"Error evaluating def bar=false; assert bar;\",\"caused_by\":{\"type\":\"power_assertion_error\",\"reason\":\"assert bar\\n       |\\n       false\"},\"script_stack\":[],\"script\":\"\",\"lang\":\"groovy\"}},\"status\":400}`\n\nSomewhat more clearly:\n1. using `assert false, \"message\"` works as expected\n2. using `assert var, \"message\"` throws a class not found exception somewhere down the stack\n3. using `assert var` works as expected\n\nI've tried this on a more recent snapshot (34bb1508637368c43b792992646a612bb8022e99) and the assert shows up in the log, but curl never prints anything nor exists, as if no response is generated.\nThis is the log:\n\n```\n[2016-08-04 18:07:53,886][ERROR][bootstrap                ] [] fatal error in thread [elasticsearch[0ZFv9t-][index][T#1]], exiting\njava.lang.AssertionError: foo. Expression: false\n    at org.codehaus.groovy.runtime.InvokerHelper.assertFailed(InvokerHelper.java:404)\n    at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.assertFailed(ScriptBytecodeAdapter.java:650)\n    at 20a61a940854553b62db2cfb00cb1511e91aac90.run(20a61a940854553b62db2cfb00cb1511e91aac90:1)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at org.elasticsearch.script.groovy.GroovyScriptEngineService$GroovyScript.run(GroovyScriptEngineService.java:295)\n    at org.elasticsearch.action.update.UpdateHelper.executeScript(UpdateHelper.java:253)\n    at org.elasticsearch.action.update.UpdateHelper.prepare(UpdateHelper.java:103)\n    at org.elasticsearch.action.update.UpdateHelper.prepare(UpdateHelper.java:80)\n    at org.elasticsearch.action.update.TransportUpdateAction.shardOperation(TransportUpdateAction.java:179)\n    at org.elasticsearch.action.update.TransportUpdateAction.shardOperation(TransportUpdateAction.java:172)\n    at org.elasticsearch.action.update.TransportUpdateAction.shardOperation(TransportUpdateAction.java:69)\n    at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction$ShardTransportHandler.messageReceived(TransportInstanceSingleOperationAction.java:247)\n    at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction$ShardTransportHandler.messageReceived(TransportInstanceSingleOperationAction.java:243)\n    at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)\n    at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69)\n    at org.elasticsearch.transport.TransportService$5.doRun(TransportService.java:517)\n    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:510)\n    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n\nException: java.security.AccessControlException thrown from the UncaughtExceptionHandler in thread \"elasticsearch[0ZFv9t-][index][T#1]\"\n```\n","closed_by":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"performed_via_github_app":null}