{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/34433","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34433/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34433/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34433/events","html_url":"https://github.com/elastic/elasticsearch/issues/34433","id":369815478,"node_id":"MDU6SXNzdWUzNjk4MTU0Nzg=","number":34433,"title":"[Rest High Level Client]:Error parse when document Id start with '/'","user":{"login":"roycarser","id":24681803,"node_id":"MDQ6VXNlcjI0NjgxODAz","avatar_url":"https://avatars3.githubusercontent.com/u/24681803?v=4","gravatar_id":"","url":"https://api.github.com/users/roycarser","html_url":"https://github.com/roycarser","followers_url":"https://api.github.com/users/roycarser/followers","following_url":"https://api.github.com/users/roycarser/following{/other_user}","gists_url":"https://api.github.com/users/roycarser/gists{/gist_id}","starred_url":"https://api.github.com/users/roycarser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roycarser/subscriptions","organizations_url":"https://api.github.com/users/roycarser/orgs","repos_url":"https://api.github.com/users/roycarser/repos","events_url":"https://api.github.com/users/roycarser/events{/privacy}","received_events_url":"https://api.github.com/users/roycarser/received_events","type":"User","site_admin":false},"labels":[{"id":493198109,"node_id":"MDU6TGFiZWw0OTMxOTgxMDk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Java%20High%20Level%20REST%20Client","name":":Core/Features/Java High Level REST Client","color":"0e8a16","default":false,"description":"Expressive Java Client for Elasticsearch"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-10-13T16:02:00Z","updated_at":"2019-04-04T17:58:42Z","closed_at":"2019-04-04T17:58:42Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Feature request -->\r\n\r\n**Describe the feature**:\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** :6.4.0\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** :1.8\r\n\r\n**OS version**:win10\r\n\r\n**Rest High Level Client Version**:6.4.2\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nThe rest-high-level-client make mistakes when a document id start with '/'\r\n\r\n**Steps to reproduce**:\r\n\r\n 1.\r\n```\r\n       RestHighLevelClient client = new RestHighLevelClient(\r\n                RestClient.builder(new HttpHost(\"localhost\", 9200, \"http\")));\r\n\r\n        /*the expected id is /abc/error_id*/\r\n        GetRequest request = new GetRequest(\"index\", \"type\", \"/abc/error_id\");\r\n        GetResponse rsp = client.get(request, RequestOptions.DEFAULT);\r\n        /*the actual id is error_id*/\r\n        System.out.println(rsp.getId());\r\n```\r\n 2.\r\n```\r\n      RestHighLevelClient client = new RestHighLevelClient(\r\n                RestClient.builder(new HttpHost(\"localhost\", 9200, \"http\")));\r\n\r\n        /*the expected id is /id*/\r\n        GetRequest request = new GetRequest(\"index\", \"type\", \"/id\");\r\n        GetResponse rsp = client.get(request, RequestOptions.DEFAULT);\r\n\r\n       you will get a exception in this case:\r\n\r\nException in thread \"main\" java.lang.StringIndexOutOfBoundsException: String index out of range: -1\r\n\tat java.lang.String.substring(String.java:1931)\r\n\tat org.elasticsearch.client.RequestConverters$EndpointBuilder.encodePart(RequestConverters.java:1532)\r\n\tat org.elasticsearch.client.RequestConverters$EndpointBuilder.addPathPart(RequestConverters.java:1503)\r\n\tat org.elasticsearch.client.RequestConverters.endpoint(RequestConverters.java:1150)\r\n\tat org.elasticsearch.client.RequestConverters.getStyleRequest(RequestConverters.java:463)\r\n\tat org.elasticsearch.client.RequestConverters.get(RequestConverters.java:459)\r\n\tat org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1252)\r\n\tat org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1231)\r\n\tat org.elasticsearch.client.RestHighLevelClient.get(RestHighLevelClient.java:416)\r\n\tat EsTest.main(EsTest.java:20)\r\n```\r\n 3.\r\n```\r\nRestHighLevelClient client = new RestHighLevelClient(\r\n                RestClient.builder(new HttpHost(\"localhost\", 9200, \"http\")));\r\n\r\n        /*the expected id is ///error_id*/\r\n        GetRequest request = new GetRequest(\"index\", \"type\", \"///error_id\");\r\n        GetResponse rsp = client.get(request, RequestOptions.DEFAULT);\r\n        /*the actual id is /error_id*/\r\n        System.out.println(rsp.getId());\r\n```\r\n4.\r\n```\r\n     RestHighLevelClient client = new RestHighLevelClient(\r\n                RestClient.builder(new HttpHost(\"localhost\", 9200, \"http\")));\r\n\r\n        /*the expected id is ///error_id*/\r\n        GetRequest request = new GetRequest(\"index\", \"type\", \"/-//error_id\");\r\n        GetResponse rsp = client.get(request, RequestOptions.DEFAULT);\r\n\r\n       you will get a exception in this case:\r\n\r\njava.net.URISyntaxException: Illegal character in hostname at index 2: //-//error_id\r\n\tat java.net.URI$Parser.fail(URI.java:2848)\r\n\tat java.net.URI$Parser.parseHostname(URI.java:3387)\r\n\tat java.net.URI$Parser.parseServer(URI.java:3236)\r\n\tat java.net.URI$Parser.parseAuthority(URI.java:3155)\r\n\tat java.net.URI$Parser.parseHierarchical(URI.java:3097)\r\n\tat java.net.URI$Parser.parse(URI.java:3063)\r\n\tat java.net.URI.<init>(URI.java:673)\r\n\tat org.elasticsearch.client.RequestConverters$EndpointBuilder.encodePart(RequestConverters.java:1530)\r\n```\r\n\r\n**Reason:**\r\nIn the function encodePart(RequestConverter.java)\r\n```\r\nprivate static String encodePart(String pathPart) {\r\n            try {\r\n                //encode each part (e.g. index, type and id) separately before merging them into the path\r\n                //we prepend \"/\" to the path part to make this pate absolute, otherwise there can be issues with\r\n                //paths that start with `-` or contain `:`\r\n---->  bug code:  URI uri = new URI(null, null, null, -1, \"/\" + pathPart, null, null);\r\n                //manually encode any slash that each part may contain\r\n                return uri.getRawPath().substring(1).replaceAll(\"/\", \"%2F\");\r\n            } catch (URISyntaxException e) {\r\n                throw new IllegalArgumentException(\"Path part [\" + pathPart + \"] couldn't be encoded\", e);\r\n            }\r\n        }\r\n```\r\na URI look likes:[scheme:][//authority][path][?query][#fragment] \r\nwhen you set pathPart to something start with '/',for example /abc, then call method \"new URI(null, null, null, -1, \"//abc\", null, null);\" .the \"//abc\" will be parse as \"authority\"  because \"//\" stand for authority!,uri.getRawPath() would return null in this situation.\r\n\r\nwhen you set pathPart to something like '/abc/def,then call method  \"new URI(null, null, null, -1, \"//abc/def\", null, null);\"，“//abc“ will be parse as “authority” and “/def” will be parse as path, uri.getRawPath() would return \"def\" \r\n\r\nA solution to this problem is to add “///” when partPart startwith '/'\r\n```\r\nnew URI(null, null, null, -1, pathPart.startsWith(\"/\") ? \"///\"+pathPart : \"/\" + pathPart, null, null)\r\n```\r\n\r\n**if that's ok, i'm gald to provide a PR**\r\n","closed_by":{"login":"hub-cap","id":613352,"node_id":"MDQ6VXNlcjYxMzM1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/613352?v=4","gravatar_id":"","url":"https://api.github.com/users/hub-cap","html_url":"https://github.com/hub-cap","followers_url":"https://api.github.com/users/hub-cap/followers","following_url":"https://api.github.com/users/hub-cap/following{/other_user}","gists_url":"https://api.github.com/users/hub-cap/gists{/gist_id}","starred_url":"https://api.github.com/users/hub-cap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hub-cap/subscriptions","organizations_url":"https://api.github.com/users/hub-cap/orgs","repos_url":"https://api.github.com/users/hub-cap/repos","events_url":"https://api.github.com/users/hub-cap/events{/privacy}","received_events_url":"https://api.github.com/users/hub-cap/received_events","type":"User","site_admin":false},"performed_via_github_app":null}