{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/14954","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14954/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14954/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14954/events","html_url":"https://github.com/elastic/elasticsearch/issues/14954","id":118507606,"node_id":"MDU6SXNzdWUxMTg1MDc2MDY=","number":14954,"title":"Concurrent calls to scroll API scrambles results","user":{"login":"TheDeveloper","id":432425,"node_id":"MDQ6VXNlcjQzMjQyNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/432425?v=4","gravatar_id":"","url":"https://api.github.com/users/TheDeveloper","html_url":"https://github.com/TheDeveloper","followers_url":"https://api.github.com/users/TheDeveloper/followers","following_url":"https://api.github.com/users/TheDeveloper/following{/other_user}","gists_url":"https://api.github.com/users/TheDeveloper/gists{/gist_id}","starred_url":"https://api.github.com/users/TheDeveloper/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TheDeveloper/subscriptions","organizations_url":"https://api.github.com/users/TheDeveloper/orgs","repos_url":"https://api.github.com/users/TheDeveloper/repos","events_url":"https://api.github.com/users/TheDeveloper/events{/privacy}","received_events_url":"https://api.github.com/users/TheDeveloper/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-11-24T00:49:04Z","updated_at":"2015-11-24T13:11:04Z","closed_at":"2015-11-24T12:41:24Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I'm not sure whether this is by design or not, but it appears that calling the scroll API with multiple requests to the same scroll ID concurrently will return mixed up results, whereby the meta fields (`_index`, `_type`, `_id` etc) get put together with the wrong document `_source`.\n\nI've written a JS [migration script](https://gist.github.com/TheDeveloper/e91f7b7044d4f3a33b2f) for node which uses redis to parallelise scroll requests across multiple workers / machines. The idea is to scale the number of fetches on the scan/scroll ID to speed up migration. If it changes, the new ID is picked up by the workers via Redis.\n\nIt works fine when running a single worker, which procedurally calls scroll, receives the documents then bulk inserts them to the new cluster before performing another scroll request. However, as soon as I start up a further one or more parallel workers, which will start issuing multiple requests to the scroll API at the same time, I start seeing weird results coming back, whereby the meta fields are being mixed up with `_source` bodies from other documents as mentioned above.\n\nIs this expected behaviour when multiple scroll requests are reading from the same scroll ID at the same time?\n\nThe script uses the official elasticsearch-js client node module, v8.2.0. I don't think there should be anything in the client causing this given that all it does is streams the http response and JSON decodes it.\n\nI'm seeing this on a 10-node cluster running ES 1.7.1. There are thousands of type mappings and hundreds of millions of documents in 2 indexes split into a dozen shards each.\n","closed_by":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"performed_via_github_app":null}