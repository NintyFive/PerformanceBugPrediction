{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/17561","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17561/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17561/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17561/events","html_url":"https://github.com/elastic/elasticsearch/issues/17561","id":146332787,"node_id":"MDU6SXNzdWUxNDYzMzI3ODc=","number":17561,"title":"'no such index' exception when index.mapper.dynamic: false","user":{"login":"robth","id":709051,"node_id":"MDQ6VXNlcjcwOTA1MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/709051?v=4","gravatar_id":"","url":"https://api.github.com/users/robth","html_url":"https://github.com/robth","followers_url":"https://api.github.com/users/robth/followers","following_url":"https://api.github.com/users/robth/following{/other_user}","gists_url":"https://api.github.com/users/robth/gists{/gist_id}","starred_url":"https://api.github.com/users/robth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robth/subscriptions","organizations_url":"https://api.github.com/users/robth/orgs","repos_url":"https://api.github.com/users/robth/repos","events_url":"https://api.github.com/users/robth/events{/privacy}","received_events_url":"https://api.github.com/users/robth/received_events","type":"User","site_admin":false},"labels":[{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":30486044,"node_id":"MDU6TGFiZWwzMDQ4NjA0NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eregression","name":">regression","color":"d7e102","default":false,"description":null},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-04-06T14:30:48Z","updated_at":"2016-05-05T08:07:03Z","closed_at":"2016-05-05T08:06:57Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\nGitHub is reserved for bug reports and feature requests. The best place\nto ask a general question is at the Elastic Discourse forums at\nhttps://discuss.elastic.co. If you are in fact posting a bug report or\na feature request, please include one and only one of the below blocks\nin your new issue.\n-->\n\n<!--\nIf you are filing a bug report, please remove the below feature\nrequest block and provide responses for all of the below items.\n-->\n\n**Elasticsearch version**: 2.3.0\n\n**JVM version**: Oracle 1.8.0_60 x86_64\n\n**OS version**: CentOS 6.7 (Final)\n\n**Description of the problem including expected versus actual behavior**:\nI have an index template that matches template `persons*`:\n\n```\n{\n    \"order\" : 0,\n    \"template\" : \"persons*\",\n    \"settings\" : {\n        \"index\" : {\n            \"number_of_shards\" : \"1\",\n            \"number_of_replicas\" : \"0\"\n        }\n    },\n    \"mappings\" : {\n        \"person\" : {\n            \"dynamic\" : \"strict\",\n            \"_all\" : {\n                \"enabled\" : false\n            },\n            \"properties\" : {\n                \"name\" : {\n                    \"index\" : \"not_analyzed\",\n                    \"type\" : \"string\"\n                }\n            }\n        }\n    }\n}\n```\n\nI index a document into an index `persons-1970-01-01`:\n\n```\n{\n    \"name\" : \"Henk\"\n}\n```\n\nBefore 2.3.0, the new index would be created with the supplied document. With 2.3.0 it doesn't work any longer. The response is:\n\n```\n{\n    \"error\": {\n        \"root_cause\": [\n            {\n                \"type\": \"index_not_found_exception\",\n                \"reason\": \"no such index\",\n                \"resource.type\": \"index_expression\",\n                \"resource.id\": \"persons-1970-01-01\",\n                \"index\": \"persons-1970-01-01\"\n            }\n        ],\n        \"type\": \"index_not_found_exception\",\n        \"reason\": \"no such index\",\n        \"resource.type\": \"index_expression\",\n        \"resource.id\": \"persons-1970-01-01\",\n        \"index\": \"persons-1970-01-01\"\n    },\n    \"status\": 404\n}\n```\n\nSee below for ES stacktrace.\n\n**Steps to reproduce**:\n1. Make sure you have `index.mapper.dynamic: false` configured in your `config/elasticsearch.yml` file.\n2. Create the template: `curl -s -XPUT localhost:13011/_template/my-template -d@persons-template.json`. This should work.\n3. Index the doc: `curl -s -XPUT localhost:13011/persons-1970-01-01/person/henk -d@person-doc.json`. You'll get the above mentioned error.\n4. Now, comment the `index.mapper.dynamic: false` setting.\n5. Repeat steps 2 and 3, but this time, the doc will be indexed as expected.\n\n**Provide logs (if relevant)**:\nElasticsearch stacktrace when indexing the doc with `index.mapper.dynamic: false`:\n\n```\n[2016-04-06 16:11:06,386][WARN ][action.index             ] [rob] unexpected error during the primary phase for action [indices:data/write/index], request [index {[persons-1970-01-01][person][henk], source[{    \"name\" : \"Henk\"}]}]\n[persons-1970-01-01] IndexNotFoundException[no such index]\n    at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:151)\n    at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:95)\n    at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteSingleIndex(IndexNameExpressionResolver.java:208)\n    at org.elasticsearch.action.support.replication.TransportReplicationAction$ReroutePhase.doRun(TransportReplicationAction.java:451)\n    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n    at org.elasticsearch.action.support.replication.TransportReplicationAction.doExecute(TransportReplicationAction.java:131)\n    at org.elasticsearch.action.index.TransportIndexAction.innerExecute(TransportIndexAction.java:135)\n    at org.elasticsearch.action.index.TransportIndexAction.doExecute(TransportIndexAction.java:119)\n    at org.elasticsearch.action.index.TransportIndexAction.doExecute(TransportIndexAction.java:66)\n    at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:137)\n    at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:85)\n    at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:58)\n    at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:359)\n    at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:52)\n    at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:83)\n    at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:359)\n    at org.elasticsearch.client.support.AbstractClient.index(AbstractClient.java:371)\n    at org.elasticsearch.rest.action.index.RestIndexAction.handleRequest(RestIndexAction.java:102)\n    at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:54)\n    at org.elasticsearch.rest.RestController.executeHandler(RestController.java:205)\n    at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:166)\n    at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:128)\n    at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:86)\n    at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:449)\n    at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:61)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:60)\n    at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)\n    at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)\n    at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)\n    at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:75)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)\n    at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)\n    at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)\n    at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)\n    at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)\n    at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)\n    at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\n    at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n```\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}