{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/58864","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/58864/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/58864/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/58864/events","html_url":"https://github.com/elastic/elasticsearch/issues/58864","id":649119294,"node_id":"MDU6SXNzdWU2NDkxMTkyOTQ=","number":58864,"title":"[Elasticsearch][Ingest Pipeline Processors] If conditions in processors are not precompiled on PUT (errors appear on ingest)","user":{"login":"P1llus","id":8027539,"node_id":"MDQ6VXNlcjgwMjc1Mzk=","avatar_url":"https://avatars1.githubusercontent.com/u/8027539?v=4","gravatar_id":"","url":"https://api.github.com/users/P1llus","html_url":"https://github.com/P1llus","followers_url":"https://api.github.com/users/P1llus/followers","following_url":"https://api.github.com/users/P1llus/following{/other_user}","gists_url":"https://api.github.com/users/P1llus/gists{/gist_id}","starred_url":"https://api.github.com/users/P1llus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/P1llus/subscriptions","organizations_url":"https://api.github.com/users/P1llus/orgs","repos_url":"https://api.github.com/users/P1llus/repos","events_url":"https://api.github.com/users/P1llus/events{/privacy}","received_events_url":"https://api.github.com/users/P1llus/received_events","type":"User","site_admin":false},"labels":[{"id":268963484,"node_id":"MDU6TGFiZWwyNjg5NjM0ODQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Ingest","name":":Core/Features/Ingest","color":"0e8a16","default":false,"description":"Execution or management of Ingest Pipelines"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-07-01T16:36:27Z","updated_at":"2020-07-02T17:10:39Z","closed_at":"2020-07-02T17:10:39Z","author_association":"NONE","active_lock_reason":null,"body":"There is plenty of different scenarios for using conditionals under processors. Discussing some of them on slack there seems to be a few unintended situations in terms of error handling and checking.\r\n\r\nWhen creating any sort of processor in ingest pipelines(only tested in yml format) that is created on a beats module, which is setup during `./filebeat setup`(or similar in other beats), the PUT of the pipeline does not return any syntax error in the if conditions itself.\r\n\r\nDuring ingestion of any event, if there is any typos at all, the error will be produced there instead. Here is a niche case with weird behaviour:\r\n\r\nLets say you have a large pipeline, it has tens or hundred(s) of processors, and a single one has a typo ending the name with \"?\" like this:\r\n(Ends with ?)\r\n```\r\n - set:\r\n    field: event.action\r\n    value: '{{json.category}}'\r\n    if: ctx.json?.category.? != null`\r\n```\r\nThe result of this will actually be that any processor above this will run successfully, and any processor below including this one will not run. BUT the document will be indexed and the error message that is supposed to be triggered by the below is actually empty. So it is created, the error is triggered, but the error message itself is a null string:\r\n```\r\non_failure:\r\n  - set:\r\n      field: error.message\r\n      value: '{{_ingest.on_failure_message}}'\r\n```\r\n\r\nOther cases might include calculating the length of a variable, since it's not know before ingestion, even with the syntax error, it will successfully PUT the pipeline onto the cluster instead of throwing syntax error.\r\n\r\nThis is similar to another issue that has been reported, in which if you forget to add a \"?\" to any of the variables used in if conditions on fields that might not always exist, like:\r\n(Missing ? on ipAddress)\r\n```\r\n  - append:\r\n      field: related.ip\r\n      value: '{{json.evidence.ipAddress}}'\r\n      if: ctx.json?.evidence.ipAddress != null\r\n```\r\nThe above will return an error related to nothing being able to run GetClass on Object null, though does not reference the processor, line number or anything else, so if you have a single typo somewhere then good luck! :)\r\n","closed_by":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"performed_via_github_app":null}