[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/112893575","html_url":"https://github.com/elastic/elasticsearch/issues/11698#issuecomment-112893575","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11698","id":112893575,"node_id":"MDEyOklzc3VlQ29tbWVudDExMjg5MzU3NQ==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2015-06-17T17:58:25Z","updated_at":"2015-06-17T17:58:25Z","author_association":"MEMBER","body":"Maybe we can support storing the parameters as a record in another index and then refer to this record in the request similar to what we do with terms lookup? Something like:\n\n```\n{\n  \"script_fields\": {\n    \"label\": {\n      \"script\": \"my_script\",\n      \"stored_parameters\": {\n        \"index\": \"models\",\n        \"type\": \"params\",\n        \"id\": \"1234\",\n        \"path\": \"something\"\n      }\n    }\n  }\n}\n```\n\nYou can do the same thing in the native script, but if this is a common use case, it might be worth supporting this functionality on the elasticsearch level. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114114047","html_url":"https://github.com/elastic/elasticsearch/issues/11698#issuecomment-114114047","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11698","id":114114047,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDExNDA0Nw==","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2015-06-22T14:04:24Z","updated_at":"2015-06-22T14:04:24Z","author_association":"CONTRIBUTOR","body":"@imotov thanks for the pointer to the workaround! (I assume you mean something like here: https://github.com/imotov/elasticsearch-native-script-example/blob/master/src/main/java/org/elasticsearch/examples/nativescript/script/LookupScript.java).We discussed this briefly and decided that we defer implementation of such a feature until more people actually need it. I can live with the workaround for now. @colings86 correct me if I am wrong.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114142533","html_url":"https://github.com/elastic/elasticsearch/issues/11698#issuecomment-114142533","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11698","id":114142533,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDE0MjUzMw==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2015-06-22T15:03:11Z","updated_at":"2015-06-22T15:03:11Z","author_association":"MEMBER","body":"@brwe yes, lookup script is one way to do it. Alternatively, if you don't want to deal with a cache (and it's invalidation and expiration) you can pull the parameters from the index and stash them in the \"params\" map. The params map is created once per execution per shard and then passed to all script instantiations for this shard. So, it will not be as efficient as with global cache but so much simpler. Basically you would have something like this:\n\n``` java\n    public static class Factory extends AbstractComponent implements NativeScriptFactory {\n\n        // ............ \n\n        @Override\n        public ExecutableScript newScript(@Nullable Map<String, Object> params) {\n            Map<String, Object> veryLargeParams = params.get(\"cached_params\");\n            if( veryLargeParams == null) {\n                // This will be executed once per search for every shard\n                veryLargeParams = loadVeryLargeParams(params);\n                params.put(\"cached_params\", veryLargeParams);\n            }\n            return new MyScript(veryLargeParams);\n        }\n\n        // ............ \n\n    }\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172646433","html_url":"https://github.com/elastic/elasticsearch/issues/11698#issuecomment-172646433","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11698","id":172646433,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjY0NjQzMw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-01-18T20:31:53Z","updated_at":"2016-01-18T20:31:53Z","author_association":"CONTRIBUTOR","body":"Nothing further in the last 9 months - closing\n","performed_via_github_app":null}]