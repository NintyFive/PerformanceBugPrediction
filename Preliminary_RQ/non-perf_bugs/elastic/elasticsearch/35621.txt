{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/35621","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35621/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35621/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35621/events","html_url":"https://github.com/elastic/elasticsearch/issues/35621","id":381496347,"node_id":"MDU6SXNzdWUzODE0OTYzNDc=","number":35621,"title":"Make PeerRecovery*Service overridable by plugins","user":{"login":"iksaif","id":1032963,"node_id":"MDQ6VXNlcjEwMzI5NjM=","avatar_url":"https://avatars1.githubusercontent.com/u/1032963?v=4","gravatar_id":"","url":"https://api.github.com/users/iksaif","html_url":"https://github.com/iksaif","followers_url":"https://api.github.com/users/iksaif/followers","following_url":"https://api.github.com/users/iksaif/following{/other_user}","gists_url":"https://api.github.com/users/iksaif/gists{/gist_id}","starred_url":"https://api.github.com/users/iksaif/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iksaif/subscriptions","organizations_url":"https://api.github.com/users/iksaif/orgs","repos_url":"https://api.github.com/users/iksaif/repos","events_url":"https://api.github.com/users/iksaif/events{/privacy}","received_events_url":"https://api.github.com/users/iksaif/received_events","type":"User","site_admin":false},"labels":[{"id":152510590,"node_id":"MDU6TGFiZWwxNTI1MTA1OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Recovery","name":":Distributed/Recovery","color":"0e8a16","default":false,"description":"Anything around constructing a new shard, either from a local or a remote source."}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-11-16T08:34:01Z","updated_at":"2018-11-19T13:05:04Z","closed_at":"2018-11-19T13:05:03Z","author_association":"NONE","active_lock_reason":null,"body":"\r\nThis is somewhat linked to:\r\n- https://github.com/elastic/elasticsearch/issues/9072\r\n- https://github.com/elastic/elasticsearch/issues/8976\r\n\r\nI though it would be nice to experiment (yet again) with storing indices on a distributed filesystem to have the ability to separate storage and compute. Lucene and Elasticsearch both have support for custom index store, which is nice and allow much of the hooks to be put in place.\r\n\r\nThe big missing thing would be to allow one to override the default `PeerRecoverySourceService` and `PeerRecoveryTargetService`. Once you have a distributed filesystem, these would become basically noop (you probably still want to take a lock somewhere, do a shallow copy or increase a reference count, but not transfer a file). This would also allow one to experiment with different ways of performing recoveries (eg: continue if you already have part of the files, etc..).\r\n\r\nGiven that we already have https://github.com/elastic/elasticsearch/blob/4f4fc3b8f85d2af05e3106b4a9d2115aa00f3199/server/src/main/java/org/elasticsearch/node/Node.java#L548 in place, it's probably just a matter of changing a bit the object hierarchy and adding an example plugin for this.\r\n\r\nWhat do you think?","closed_by":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"performed_via_github_app":null}