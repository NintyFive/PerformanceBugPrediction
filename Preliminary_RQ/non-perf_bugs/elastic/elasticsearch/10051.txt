{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/10051","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10051/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10051/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10051/events","html_url":"https://github.com/elastic/elasticsearch/issues/10051","id":60506309,"node_id":"MDU6SXNzdWU2MDUwNjMwOQ==","number":10051,"title":"Function score on ChildrenQuery execute diffrent in master version","user":{"login":"lukapor","id":3388840,"node_id":"MDQ6VXNlcjMzODg4NDA=","avatar_url":"https://avatars1.githubusercontent.com/u/3388840?v=4","gravatar_id":"","url":"https://api.github.com/users/lukapor","html_url":"https://github.com/lukapor","followers_url":"https://api.github.com/users/lukapor/followers","following_url":"https://api.github.com/users/lukapor/following{/other_user}","gists_url":"https://api.github.com/users/lukapor/gists{/gist_id}","starred_url":"https://api.github.com/users/lukapor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lukapor/subscriptions","organizations_url":"https://api.github.com/users/lukapor/orgs","repos_url":"https://api.github.com/users/lukapor/repos","events_url":"https://api.github.com/users/lukapor/events{/privacy}","received_events_url":"https://api.github.com/users/lukapor/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-10T14:20:14Z","updated_at":"2015-04-04T14:11:03Z","closed_at":"2015-04-04T14:11:03Z","author_association":"NONE","active_lock_reason":null,"body":"Hi, I am testing new master version of elasticsearch and have one question.\n\nI am using some statistics (store in usagestatistics object) which is child object of lets say document object. I implemented sort by most user used document by function score on child query. In a version 1.4.x it is ok, on master version i got error on some shard where i dont have childs (error below). It is any option to ignore this.\n\nerror is\n\n```\n{\n  \"index\": \"develop_compositedata_0\",\n  \"shard\": 3,\n  \"status\": 500,\n  \"reason\": \"QueryPhaseExecutionException[[develop_compositedata_0][3]: query[+companyId:[88 TO 88]^0.0 +deleted:F^0.0 +((typeId:[2 TO 2] typeId:[4 TO 4]^0.08 typeId:[32 TO 32]^0.02 typeId:[1 TO 1]^0.3 typeId:[2048 TO 2048]^0.0 typeId:[65536 TO 65536]^0.0)~1) +((authorizationTokens:noauth^0.0 authorizationTokens:noauthsubject^0.0 authorizationTokens:111^0.0 authorizationTokens:89^0.0 authorizationTokens:187^0.0 authorizationTokens:214^0.0 authorizationTokens:217^0.0 authorizationTokens:10244^0.0 authorizationTokens:10257^0.0 authorizationTokens:161^0.0)~1) +ConstantScore(+stringFields.dynstring_30303030303030302d303030302d303030302d303030302d3030303030303030303030302f47656e6572616c2f4e616d65.value:mi*)^0.01 +((main:[0 TO 0]^0.0 main:[-1 TO -1]^0.0)~1) +blocked:F^0.0 ChildrenQuery[min(0) max(2147483647)of usagestatistics/compositedata](filtered(function score (+userId:[111 TO 111]^0.0,function=script[doc['usagestatistics.searchBoost'].value], params [null]))->cache(_type:usagestatistics))],from[0],size[7],sort[<score>,<custom:\\\"sortName\\\": org.elasticsearch.index.fielddata.fieldcomparator.BytesRefFieldComparatorSource@2c1574e4>!]: Query Failed [Failed to execute main query]]; nested: RuntimeException[org.elasticsearch.script.groovy.GroovyScriptExecutionException: ElasticsearchIllegalArgumentException[No field found for [usagestatistics.searchBoost] in mapping with types []]]; nested: GroovyScriptExecutionException[ElasticsearchIllegalArgumentException[No field found for [usagestatistics.searchBoost] in mapping with types []]]; \"\n}\n```\n\nand query:\n\n```\n{\n  \"from\": 0,\n  \"size\": 7,\n  \"sort\": [\n    {\n      \"_score\": {\n        \"missing\": \"_last\",\n        \"order\": \"desc\"\n      }\n    },\n    {\n      \"sortName\": {\n        \"missing\": \"_last\",\n        \"order\": \"desc\"\n      }\n    }\n  ],\n  \"fields\": [\n    \"id\",\n    \"compositeId\",\n    \"name\",\n    \"typeId\",\n    \"external\",\n    \"blocked\",\n    \"deleted\",\n    \"serviceId\",\n    \"processInstanceId\",\n    \"serviceInstanceId\",\n    \"ownerServiceId\",\n    \"ownerProcessInstanceId\",\n    \"main\",\n    \"modified\"\n  ],\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"term\": {\n            \"companyId\": {\n              \"value\": 88,\n              \"boost\": 0\n            }\n          }\n        },\n        {\n          \"term\": {\n            \"deleted\": {\n              \"value\": false,\n              \"boost\": 0\n            }\n          }\n        },\n        {\n          \"bool\": {\n            \"should\": [\n              {\n                \"term\": {\n                  \"typeId\": {\n                    \"value\": 2,\n                    \"boost\": 1\n                  }\n                }\n              },\n              {\n                \"term\": {\n                  \"typeId\": {\n                    \"value\": 4,\n                    \"boost\": 0.07999999821186066\n                  }\n                }\n              },\n              {\n                \"term\": {\n                  \"typeId\": {\n                    \"value\": 32,\n                    \"boost\": 0.019999999552965164\n                  }\n                }\n              },\n              {\n                \"term\": {\n                  \"typeId\": {\n                    \"value\": 1,\n                    \"boost\": 0.30000001192092896\n                  }\n                }\n              },\n              {\n                \"term\": {\n                  \"typeId\": {\n                    \"value\": 2048,\n                    \"boost\": 0\n                  }\n                }\n              },\n              {\n                \"term\": {\n                  \"typeId\": {\n                    \"value\": 65536,\n                    \"boost\": 0\n                  }\n                }\n              }\n            ],\n            \"minimum_should_match\": \"1\"\n          }\n        },\n        {\n          \"bool\": {\n            \"should\": [\n              {\n                \"term\": {\n                  \"authorizationTokens\": {\n                    \"value\": \"noauth\",\n                    \"boost\": 0\n                  }\n                }\n              },\n              {\n                \"term\": {\n                  \"authorizationTokens\": {\n                    \"value\": \"noauthsubject\",\n                    \"boost\": 0\n                  }\n                }\n              },\n              {\n                \"term\": {\n                  \"authorizationTokens\": {\n                    \"value\": \"111\",\n                    \"boost\": 0\n                  }\n                }\n              },\n              {\n                \"term\": {\n                  \"authorizationTokens\": {\n                    \"value\": \"89\",\n                    \"boost\": 0\n                  }\n                }\n              },\n              {\n                \"term\": {\n                  \"authorizationTokens\": {\n                    \"value\": \"187\",\n                    \"boost\": 0\n                  }\n                }\n              },\n              {\n                \"term\": {\n                  \"authorizationTokens\": {\n                    \"value\": \"214\",\n                    \"boost\": 0\n                  }\n                }\n              },\n              {\n                \"term\": {\n                  \"authorizationTokens\": {\n                    \"value\": \"217\",\n                    \"boost\": 0\n                  }\n                }\n              },\n              {\n                \"term\": {\n                  \"authorizationTokens\": {\n                    \"value\": \"10244\",\n                    \"boost\": 0\n                  }\n                }\n              },\n              {\n                \"term\": {\n                  \"authorizationTokens\": {\n                    \"value\": \"10257\",\n                    \"boost\": 0\n                  }\n                }\n              },\n              {\n                \"term\": {\n                  \"authorizationTokens\": {\n                    \"value\": \"161\",\n                    \"boost\": 0\n                  }\n                }\n              }\n            ],\n            \"minimum_should_match\": \"1\"\n          }\n        },\n        {\n          \"constant_score\": {\n            \"query\": {\n              \"bool\": {\n                \"must\": [\n                  {\n                    \"query_string\": {\n                      \"query\": \"mi*\",\n                      \"fields\": [\n                        \"stringFields.dynstring_30303030303030302d303030302d303030302d303030302d3030303030303030303030302f47656e6572616c2f4e616d65.value\"\n                      ],\n                      \"default_operator\": \"and\",\n                      \"analyzer\": \"standard-4office\",\n                      \"allow_leading_wildcard\": false,\n                      \"analyze_wildcard\": true,\n                      \"minimum_should_match\": \"100%\",\n                      \"use_dis_max\": false\n                    }\n                  }\n                ]\n              }\n            },\n            \"boost\": 0.009999999776482582\n          }\n        },\n        {\n          \"bool\": {\n            \"should\": [\n              {\n                \"term\": {\n                  \"main\": {\n                    \"value\": 0,\n                    \"boost\": 0\n                  }\n                }\n              },\n              {\n                \"term\": {\n                  \"main\": {\n                    \"value\": -1,\n                    \"boost\": 0\n                  }\n                }\n              }\n            ],\n            \"minimum_should_match\": \"1\"\n          }\n        },\n        {\n          \"term\": {\n            \"blocked\": {\n              \"value\": false,\n              \"boost\": 0\n            }\n          }\n        }\n      ],\n      \"should\": [\n        {\n          \"has_child\": {\n            \"type\": \"usagestatistics\",\n            \"score_type\": \"sum\",\n            \"query\": {\n              \"function_score\": {\n                \"query\": {\n                  \"bool\": {\n                    \"must\": [\n                      {\n                        \"term\": {\n                          \"userId\": {\n                            \"value\": 111,\n                            \"boost\": 0\n                          }\n                        }\n                      }\n                    ]\n                  }\n                },\n                \"score_mode\": \"sum\",\n                \"boost_mode\": \"max\",\n                \"script_score\": {\n                  \"script\": \"doc['usagestatistics.searchBoost'].value\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"minimum_should_match\": \"0\"\n    }\n  }\n}\n```\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}