{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/12354","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12354/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12354/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12354/events","html_url":"https://github.com/elastic/elasticsearch/issues/12354","id":96208949,"node_id":"MDU6SXNzdWU5NjIwODk0OQ==","number":12354,"title":"IndicesShardStoreRequestTests flaky","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"labels":[{"id":60445228,"node_id":"MDU6TGFiZWw2MDQ0NTIyOA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest","name":">test","color":"5319e7","default":false,"description":"Issues or PRs that are addressing/adding tests"}],"state":"closed","locked":false,"assignee":{"login":"areek","id":753679,"node_id":"MDQ6VXNlcjc1MzY3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/753679?v=4","gravatar_id":"","url":"https://api.github.com/users/areek","html_url":"https://github.com/areek","followers_url":"https://api.github.com/users/areek/followers","following_url":"https://api.github.com/users/areek/following{/other_user}","gists_url":"https://api.github.com/users/areek/gists{/gist_id}","starred_url":"https://api.github.com/users/areek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areek/subscriptions","organizations_url":"https://api.github.com/users/areek/orgs","repos_url":"https://api.github.com/users/areek/repos","events_url":"https://api.github.com/users/areek/events{/privacy}","received_events_url":"https://api.github.com/users/areek/received_events","type":"User","site_admin":false},"assignees":[{"login":"areek","id":753679,"node_id":"MDQ6VXNlcjc1MzY3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/753679?v=4","gravatar_id":"","url":"https://api.github.com/users/areek","html_url":"https://github.com/areek","followers_url":"https://api.github.com/users/areek/followers","following_url":"https://api.github.com/users/areek/following{/other_user}","gists_url":"https://api.github.com/users/areek/gists{/gist_id}","starred_url":"https://api.github.com/users/areek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areek/subscriptions","organizations_url":"https://api.github.com/users/areek/orgs","repos_url":"https://api.github.com/users/areek/repos","events_url":"https://api.github.com/users/areek/events{/privacy}","received_events_url":"https://api.github.com/users/areek/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2015-07-21T02:07:48Z","updated_at":"2015-07-21T03:59:18Z","closed_at":"2015-07-21T03:59:18Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Suite: org.elasticsearch.action.admin.indices.segments.IndicesShardStoreRequestTests\n  1> [2015-07-20 22:03:39,297][TRACE][action.admin.indices.shards] [node_t0] cluster state used to determine shards [version: 14\n  1> state uuid: fLv4zaosRpSgl9raZAw-2Q\n  1> from_diff: false\n  1> meta data version: 5\n  1> nodes: \n  1>    [node_t1][AyweLoM9SDuPdgv3kTB_EQ][beast][local[462]]{mode=local, enable_custom_paths=true}\n  1>    [node_t2][q0NaofS5SGGHkn2DKmfKoA][beast][local[463]]{mode=local, enable_custom_paths=true}\n  1>    [node_t0][sKWP13YWSHyhpJ8fUgdhJw][beast][local[461]]{mode=local, enable_custom_paths=true}, local, master\n  1>    [node_t3][hfvftAiyS_yNlxicAGMhHQ][beast][local[464]]{mode=local, client=true, data=false, enable_custom_paths=true}\n  1> routing_table (version 7):\n  1> -- index [test]\n  1> ----shard_id [test][0]\n  1> --------[test][0], node[q0NaofS5SGGHkn2DKmfKoA], [P], v[4], s[STARTED], a[id=LRZukkcqQyKbTtaY9llqWA]\n  1> --------[test][0], node[AyweLoM9SDuPdgv3kTB_EQ], [R], v[4], s[STARTED], a[id=S3MYag4yRDejlaG5VjXwTw]\n  1> ----shard_id [test][1]\n  1> --------[test][1], node[AyweLoM9SDuPdgv3kTB_EQ], [P], v[4], s[STARTED], a[id=eVreOkM2S5W6rqvDubvg5A]\n  1> --------[test][1], node[sKWP13YWSHyhpJ8fUgdhJw], [R], v[4], s[STARTED], a[id=2hRWi2Y_QQujB4UlFRrkvw]\n  1> \n  1> routing_nodes:\n  1> -----node_id[q0NaofS5SGGHkn2DKmfKoA][V]\n  1> --------[test][0], node[q0NaofS5SGGHkn2DKmfKoA], [P], v[4], s[STARTED], a[id=LRZukkcqQyKbTtaY9llqWA]\n  1> -----node_id[AyweLoM9SDuPdgv3kTB_EQ][V]\n  1> --------[test][1], node[AyweLoM9SDuPdgv3kTB_EQ], [P], v[4], s[STARTED], a[id=eVreOkM2S5W6rqvDubvg5A]\n  1> --------[test][0], node[AyweLoM9SDuPdgv3kTB_EQ], [R], v[4], s[STARTED], a[id=S3MYag4yRDejlaG5VjXwTw]\n  1> -----node_id[sKWP13YWSHyhpJ8fUgdhJw][V]\n  1> --------[test][1], node[sKWP13YWSHyhpJ8fUgdhJw], [R], v[4], s[STARTED], a[id=2hRWi2Y_QQujB4UlFRrkvw]\n  1> ---- unassigned\n  1> ]\n  1> [2015-07-20 22:03:39,299][TRACE][action.admin.indices.shards] [node_t0] cluster state used to determine shards [version: 14\n  1> state uuid: fLv4zaosRpSgl9raZAw-2Q\n  1> from_diff: false\n  1> meta data version: 5\n  1> nodes: \n  1>    [node_t1][AyweLoM9SDuPdgv3kTB_EQ][beast][local[462]]{mode=local, enable_custom_paths=true}\n  1>    [node_t2][q0NaofS5SGGHkn2DKmfKoA][beast][local[463]]{mode=local, enable_custom_paths=true}\n  1>    [node_t0][sKWP13YWSHyhpJ8fUgdhJw][beast][local[461]]{mode=local, enable_custom_paths=true}, local, master\n  1>    [node_t3][hfvftAiyS_yNlxicAGMhHQ][beast][local[464]]{mode=local, client=true, data=false, enable_custom_paths=true}\n  1> routing_table (version 7):\n  1> -- index [test]\n  1> ----shard_id [test][0]\n  1> --------[test][0], node[q0NaofS5SGGHkn2DKmfKoA], [P], v[4], s[STARTED], a[id=LRZukkcqQyKbTtaY9llqWA]\n  1> --------[test][0], node[AyweLoM9SDuPdgv3kTB_EQ], [R], v[4], s[STARTED], a[id=S3MYag4yRDejlaG5VjXwTw]\n  1> ----shard_id [test][1]\n  1> --------[test][1], node[AyweLoM9SDuPdgv3kTB_EQ], [P], v[4], s[STARTED], a[id=eVreOkM2S5W6rqvDubvg5A]\n  1> --------[test][1], node[sKWP13YWSHyhpJ8fUgdhJw], [R], v[4], s[STARTED], a[id=2hRWi2Y_QQujB4UlFRrkvw]\n  1> \n  1> routing_nodes:\n  1> -----node_id[q0NaofS5SGGHkn2DKmfKoA][V]\n  1> --------[test][0], node[q0NaofS5SGGHkn2DKmfKoA], [P], v[4], s[STARTED], a[id=LRZukkcqQyKbTtaY9llqWA]\n  1> -----node_id[AyweLoM9SDuPdgv3kTB_EQ][V]\n  1> --------[test][1], node[AyweLoM9SDuPdgv3kTB_EQ], [P], v[4], s[STARTED], a[id=eVreOkM2S5W6rqvDubvg5A]\n  1> --------[test][0], node[AyweLoM9SDuPdgv3kTB_EQ], [R], v[4], s[STARTED], a[id=S3MYag4yRDejlaG5VjXwTw]\n  1> -----node_id[sKWP13YWSHyhpJ8fUgdhJw][V]\n  1> --------[test][1], node[sKWP13YWSHyhpJ8fUgdhJw], [R], v[4], s[STARTED], a[id=2hRWi2Y_QQujB4UlFRrkvw]\n  1> ---- unassigned\n  1> ]\n  1> [2015-07-20 22:03:39,303][TRACE][action.admin.indices.shards] [node_t0] [test][0] fetching [shard_stores] from [sKWP13YWSHyhpJ8fUgdhJw, AyweLoM9SDuPdgv3kTB_EQ, q0NaofS5SGGHkn2DKmfKoA]\n  1> [2015-07-20 22:03:39,304][TRACE][action.admin.indices.shards] [node_t0] [test][1] fetching [shard_stores] from [q0NaofS5SGGHkn2DKmfKoA, AyweLoM9SDuPdgv3kTB_EQ, sKWP13YWSHyhpJ8fUgdhJw]\n  1> [2015-07-20 22:03:39,350][TRACE][action.admin.indices.shards] [node_t0] cluster state used to determine shards [version: 16\n  1> state uuid: 46odQ1B4R0CbA_UCxM708Q\n  1> from_diff: false\n  1> meta data version: 6\n  1> nodes: \n  1>    [node_t2][q0NaofS5SGGHkn2DKmfKoA][beast][local[463]]{mode=local, enable_custom_paths=true}\n  1>    [node_t0][sKWP13YWSHyhpJ8fUgdhJw][beast][local[461]]{mode=local, enable_custom_paths=true}, local, master\n  1>    [node_t3][hfvftAiyS_yNlxicAGMhHQ][beast][local[464]]{mode=local, client=true, data=false, enable_custom_paths=true}\n  1> routing_table (version 9):\n  1> -- index [test]\n  1> ----shard_id [test][0]\n  1> --------[test][0], node[q0NaofS5SGGHkn2DKmfKoA], [P], v[5], s[STARTED], a[id=LRZukkcqQyKbTtaY9llqWA]\n  1> --------[test][0], node[null], [R], v[5], s[UNASSIGNED], unassigned_info[[reason=NODE_LEFT], at[2015-07-21T02:03:39.340Z], details[node_left[AyweLoM9SDuPdgv3kTB_EQ]]]\n  1> ----shard_id [test][1]\n  1> --------[test][1], node[sKWP13YWSHyhpJ8fUgdhJw], [P], v[6], s[STARTED], a[id=2hRWi2Y_QQujB4UlFRrkvw]\n  1> --------[test][1], node[null], [R], v[6], s[UNASSIGNED], unassigned_info[[reason=NODE_LEFT], at[2015-07-21T02:03:39.340Z], details[node_left[AyweLoM9SDuPdgv3kTB_EQ]]]\n  1> \n  1> routing_nodes:\n  1> -----node_id[q0NaofS5SGGHkn2DKmfKoA][V]\n  1> --------[test][0], node[q0NaofS5SGGHkn2DKmfKoA], [P], v[5], s[STARTED], a[id=LRZukkcqQyKbTtaY9llqWA]\n  1> -----node_id[sKWP13YWSHyhpJ8fUgdhJw][V]\n  1> --------[test][1], node[sKWP13YWSHyhpJ8fUgdhJw], [P], v[6], s[STARTED], a[id=2hRWi2Y_QQujB4UlFRrkvw]\n  1> ---- unassigned\n  1> --------[test][1], node[null], [R], v[6], s[UNASSIGNED], unassigned_info[[reason=NODE_LEFT], at[2015-07-21T02:03:39.340Z], details[node_left[AyweLoM9SDuPdgv3kTB_EQ]]]\n  1> --------[test][0], node[null], [R], v[5], s[UNASSIGNED], unassigned_info[[reason=NODE_LEFT], at[2015-07-21T02:03:39.340Z], details[node_left[AyweLoM9SDuPdgv3kTB_EQ]]]\n  1> ]\n  1> [2015-07-20 22:03:39,350][TRACE][action.admin.indices.shards] [node_t0] [test][0] fetching [shard_stores] from [q0NaofS5SGGHkn2DKmfKoA, sKWP13YWSHyhpJ8fUgdhJw]\n  1> [2015-07-20 22:03:39,350][TRACE][action.admin.indices.shards] [node_t0] [test][1] fetching [shard_stores] from [q0NaofS5SGGHkn2DKmfKoA, sKWP13YWSHyhpJ8fUgdhJw]\n  2> REPRODUCE WITH: mvn test -Pdev -Dtests.seed=989A264CC8E20C32 -Dtests.class=org.elasticsearch.action.admin.indices.segments.IndicesShardStoreRequestTests -Dtests.method=\"testBasic\" -Des.logger.level=ERROR -Dtests.assertion.disabled=false -Dtests.security.manager=true -Dtests.heap.size=512m -Dtests.locale=ja_JP -Dtests.timezone=Pacific/Easter\nFAILURE 0.97s J1 | IndicesShardStoreRequestTests.testBasic <<<\n\n> Throwable #1: java.lang.AssertionError: \n> Expected: <0>\n>      but: was <2>\n>    at __randomizedtesting.SeedInfo.seed([989A264CC8E20C32:33603B59173E8A1C]:0)\n>    at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n>    at org.elasticsearch.action.admin.indices.segments.IndicesShardStoreRequestTests.testBasic(IndicesShardStoreRequestTests.java:100)\n>    at java.lang.Thread.run(Thread.java:745)\n>   2> NOTE: leaving temporary files on disk at: /home/rmuir/workspace/elasticsearch/core/target/J1/temp/org.elasticsearch.action.admin.indices.segments.IndicesShardStoreRequestTests_989A264CC8E20C32-001\n>   2> NOTE: test params are: codec=Asserting(Lucene50): {_size=PostingsFormat(name=Asserting), field=PostingsFormat(name=Asserting), _field_names=PostingsFormat(name=Asserting), _type=PostingsFormat(name=Asserting), _uid=PostingsFormat(name=Asserting), _all=PostingsFormat(name=Asserting)}, docValues:{_version=DocValuesFormat(name=Asserting)}, sim=RandomSimilarityProvider(queryNorm=true,coord=yes): {}, locale=ja_JP, timezone=Pacific/Easter\n>   2> NOTE: Linux 3.19.0-15-generic amd64/Oracle Corporation 1.8.0_45 (64-bit)/cpus=8,threads=1,free=258551784,total=527433728\n>   2> NOTE: All tests run in this JVM: [FieldDataFilterIntegrationTests, IndexTemplateBlocksTests, JsonFilteringGeneratorTests, DynamicMappingTests, SimpleBlocksTests, SingleShardNoReplicasRoutingTests, MultiTermVectorsTests, AliasRoutingTests, SimpleCountTests, CommitStatsTests, DateBackwardsCompatibilityTests, GroovySecurityTests, ExplainableScriptTests, NaNSortingTests, BooleansTests, TimestampMappingTests, PluginsInfoTest, SimpleNodesInfoTests, ASCIIFoldingTokenFilterFactoryTests, RecoveriesCollectionTests, ShapeBuilderTests, MinDocCountTests, StopAnalyzerTests, SearchSourceBuilderTest, ClusterSettingsTests, PrimaryNotRelocatedWhileBeingRecoveredTests, MemoryCircuitBreakerTests, CircuitBreakerServiceTests, NetworkPartitionTests, HeadersAndContextCopyClientTests, DisabledFieldDataFormatTests, ExplainActionTests, FieldDataLoadingTests, ExistsMissingTests, ClusterBlockTests, ToAndFromJsonMetaDataTests, SimpleStringMappingTests, SnapshotBackwardsCompatibilityTest, SitePluginRelativePathConfigTests, NettyTransportMultiPortIntegrationTests, BlendedTermQueryTest, ShardsAllocatorModuleTests, GeoJSONShapeParserTests, FilterFieldDataTest, HotThreadsTest, WildcardExpressionResolverTests, PutWarmerRequestTests, CopyToMapperTests, ParentFieldLoadingTest, TransportClientTests, SuggestSearchTests, UpdateTests, SimpleNettyTransportTests, StartedShardsRoutingTests, ResourceWatcherServiceTests, DistanceUnitTests, CardinalityTests, SimpleAllMapperTests, IndexRequestBuilderTests, SettingsFilterTests, ExceptionRetryTests, CodecTests, CumulativeSumTests, CustomPostingsHighlighterTests, UpdateMappingIntegrationTests, IndexFieldTypeTests, ShardUtilsTests, SimpleValidateQueryTests, IndicesServiceTest, PreBuiltAnalyzerIntegrationTests, YamlFilteringGeneratorTests, ChildrenQueryTests, TribeUnitTests, AggregationsBinaryTests, AnalysisFactoryTests, BytesRestResponseTests, MustacheTest, StatsTests, HppcMapsTests, GeoShapeQueryBuilderTests, DuelScrollTests, SearchStatsUnitTests, BlobStoreTest, IndicesLifecycleListenerSingleNodeTests, GeoPointFieldTypeTests, LimitTokenCountFilterFactoryTests, MultiFieldTests, BytesStreamsTests, SignificantTermsBackwardCompatibilityTests, TransportTwoNodesSearchTests, BucketSelectorTests, Base64Test, SimpleMultiSearchTests, SimpleLuceneTests, HunspellServiceTests, SizeValueTests, DoubleNestedSortingTests, BigArraysTests, SearchScrollTests, SimpleRecoveryTests, UpdateByNativeScriptTests, UpdateNumberOfReplicasTests, IndexQueryParserFilterDateRangeTimezoneTests, PagedBytesStringFieldDataTests, PluginManagerTests, StemmerTokenFilterFactoryTests, IndexedScriptTests, FreqTermsEnumTests, WriteConsistencyLevelTests, AliasedIndexDocumentActionsTests, SearchServiceTests, NettyTransportTests, IdMappingTests, ScriptModesTests, Rest1Tests, UpgradeTest, Rest4Tests, NestedAggregatorTest, SimpleGetMappingsTests, CreateIndexRequestBuilderTest, InternalEngineIntegrationTest, TemplateQueryBuilderTest, TransportMessageTests, ChannelsTests, DedicatedClusterSnapshotRestoreTests, MoreLikeThisQueryTests, CancellableThreadsTest, BulkProcessorTests, RandomAllocationDeciderTests, FilterTests, RoundingTests, StoredNumericValuesTest, LongNestedSortingTests, MinBucketTests, AnalysisModuleTests, StartRecoveryRequestTest, DiscoveryWithServiceDisruptionsTests, IndexLifecycleActionTests, ItemSerializationTests, CircuitBreakerUnitTests, ConcurrentDynamicTemplateTests, MetaDataWriteDataNodesTests, IndexShardTests, ShardInfoTests, IndexRequestBuilderTest, PercolatorFacetsAndAggregationsTests, GeoDistanceTests, RecoveryWithUnsupportedIndicesTests, SyncedFlushUnitTests, ChildrenTests, CborXContentParserTests, UpdateSettingsTests, GeoLocationContextMappingTest, TemplateQueryTest, InnerHitsTests, OpenCloseIndexTests, SuggestStatsTests, TransportIndexFailuresTest, IndicesShardStoreRequestTests]\n","closed_by":{"login":"areek","id":753679,"node_id":"MDQ6VXNlcjc1MzY3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/753679?v=4","gravatar_id":"","url":"https://api.github.com/users/areek","html_url":"https://github.com/areek","followers_url":"https://api.github.com/users/areek/followers","following_url":"https://api.github.com/users/areek/following{/other_user}","gists_url":"https://api.github.com/users/areek/gists{/gist_id}","starred_url":"https://api.github.com/users/areek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areek/subscriptions","organizations_url":"https://api.github.com/users/areek/orgs","repos_url":"https://api.github.com/users/areek/repos","events_url":"https://api.github.com/users/areek/events{/privacy}","received_events_url":"https://api.github.com/users/areek/received_events","type":"User","site_admin":false},"performed_via_github_app":null}