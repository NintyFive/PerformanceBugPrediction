[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172489658","html_url":"https://github.com/elastic/elasticsearch/issues/16026#issuecomment-172489658","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16026","id":172489658,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjQ4OTY1OA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-01-18T10:24:20Z","updated_at":"2016-01-18T10:24:20Z","author_association":"CONTRIBUTOR","body":"I guess this method should take a compulsory Throwable parameter and call addSuppressed for on it for every Closeable that can't be closed successfully?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172538642","html_url":"https://github.com/elastic/elasticsearch/issues/16026#issuecomment-172538642","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16026","id":172538642,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjUzODY0Mg==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-01-18T14:20:25Z","updated_at":"2016-01-18T14:20:25Z","author_association":"CONTRIBUTOR","body":"> I guess this method should take a compulsory Throwable parameter and call addSuppressed for on it for every Closeable that can't be closed successfully?\n\nI'd be quite happy with that.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172585488","html_url":"https://github.com/elastic/elasticsearch/issues/16026#issuecomment-172585488","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16026","id":172585488,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjU4NTQ4OA==","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","site_admin":false},"created_at":"2016-01-18T16:52:03Z","updated_at":"2016-01-18T16:52:03Z","author_association":"CONTRIBUTOR","body":"> I guess this method should take a compulsory Throwable parameter \n\n+1\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/178030729","html_url":"https://github.com/elastic/elasticsearch/issues/16026#issuecomment-178030729","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16026","id":178030729,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODAzMDcyOQ==","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","site_admin":false},"created_at":"2016-02-01T15:42:04Z","updated_at":"2016-02-01T15:42:04Z","author_association":"CONTRIBUTOR","body":"> I guess this method should take a compulsory Throwable parameter\n\nActually there's some interesting history here ... which I dug up while working on heroic exception handling in the translog (#16117).\n\nLucene's `IOUtils` APIs used to take a prior `IOException`, and use `addSuppressed` on that if any new exceptions occurred.\n\nBut this API was dangerous.  See https://issues.apache.org/jira/browse/LUCENE-5654 for the full story, but the summary is that Lucene had code all over the place like this:\n\n```\n     @Override\n     public void close() throws IOException {\n      IOException priorE = null;\n       try {\n         super.close();\n      } catch (IOException ioe) {\n         priorE = ioe;\n       } finally {\n         IOUtils.closeWhileHandlingException(priorE, writer);\n       }\n     }\n```\n\nAnd if you stare at the code for long enough you'll realize that if say an OOME is hit in that `super.close`, then `priorE` is passed as `null` to `IOUtils.closeWhileHandlingException` thus possibly ignoring (losing) the OOME and throwing some other odd `IOException` which could look a lot like index corruption.  So we removed all IOUtils APIs that took a prior exception!\n\nThat said, I think we could maybe safely add them back, if we took `Throwable` not `IOException` as the prior exception?  I.e. do this instead?\n\n```\n     @Override\n     public void close() throws IOException {\n      Throwable priorThrowable = null;\n       try {\n         super.close();\n      } catch (Throwable t) {\n         priorThrowable = t;\n       } finally {\n         IOUtils.closeWhileHandlingException(priorThrowable, writer);\n       }\n     }\n```\n\nAnyway, I'm not really sure what to do here, and heroic exception handling is hard and I think often not justified (adds non-trivial complexing for what are exceptional cases)... but wanted to at least call attention here to why none of Lucene's `IOUtils` methods take a prior exception anymore...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/299478863","html_url":"https://github.com/elastic/elasticsearch/issues/16026#issuecomment-299478863","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16026","id":299478863,"node_id":"MDEyOklzc3VlQ29tbWVudDI5OTQ3ODg2Mw==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-05-05T14:25:07Z","updated_at":"2017-05-05T14:25:07Z","author_association":"MEMBER","body":"@nik9000 given Mike's explanation it seems like we don't want to make this change? Should we close this issue then?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/299491079","html_url":"https://github.com/elastic/elasticsearch/issues/16026#issuecomment-299491079","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16026","id":299491079,"node_id":"MDEyOklzc3VlQ29tbWVudDI5OTQ5MTA3OQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2017-05-05T15:09:37Z","updated_at":"2017-05-05T15:09:37Z","author_association":"CONTRIBUTOR","body":"As much as I hate it, sure. ","performed_via_github_app":null}]