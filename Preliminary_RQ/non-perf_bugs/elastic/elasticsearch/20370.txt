{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/20370","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20370/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20370/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20370/events","html_url":"https://github.com/elastic/elasticsearch/issues/20370","id":175512419,"node_id":"MDU6SXNzdWUxNzU1MTI0MTk=","number":20370,"title":"`multi_value_mode` on Terms Aggregation","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2016-09-07T14:09:32Z","updated_at":"2018-03-13T11:55:40Z","closed_at":"2018-03-13T11:55:40Z","author_association":"MEMBER","active_lock_reason":null,"body":"Today, all terms in a multi-valued field are aggregated.  Sometimes users want to prioritize the terms in some fashion, so that only one (or several) of the terms are aggregated while the rest are ignored.  This is more complicated than just inclusion/exclusion filtering, since it needs to be evaluated on a per-document basis in context of the other tags.\n\nThis can be useful if the document should only \"belong\" to a single bucket based on some kind of tagging scheme, rather than being added to multiple buckets.\n\nIt is currently possible today by using a script in the terms aggregation.  I've worked up an example here: https://gist.github.com/polyfractal/a9c3b1c87bdd7cb8151e5b17a24d70d2\n\nBut it might be nice to support this natively in the Terms agg.  @colings86 and I were spitballing a `multi_value_mode` which could be set to a number of options: `first`,`last`,`all`, `script`, potentially others.\n\nThe idea is that you could provide a list of priorities, in an ordered array:\n\n``` json\n{\n  \"my_terms_agg\": {\n    \"field\": \"tags\",\n    \"multi_value_mode\": \"first\",\n    \"priorities\": [\"foo\", \"bar\", \"baz\", \"fizz\", \"buzz\"]\n  }\n}\n```\n\nAnd this document:\n\n``` json\n{\n  \"tags\": [\"xyz\", \"bar\", \"buzz\"]\n}\n```\n\nwould only be aggregated into the \"bar\" bucket, since \"bar\" has a higher priority than \"buzz\", which has a higher priority than \"xyz\" (because it's not in the list at all).\n- `all` default terms agg behavior today\n- `first` / `max`: priorities are first -> last in the sorted array\n- `last` / `min`: priorities are last -> first in the sorted array\n- `script`: runs a script, which returns the terms to be aggregated.  But this is provided by scripting today, so probably not needed\n\nIf we only allow selecting either all the values, or just one value, it should be pretty simple implementation wise.  We can iterate through the matches as today, but instead of calling `collectDoc()` on each iteration we simply record the highest (or lowest) priority seen so far and cache the bytes.  At the end, we call `collectDoc()` once with those bytes.\n### More complicated alternative\n\nWe could get fancier, although I don't think this is a good idea.  For example, we could allow the user to provide a map of priorities and allow returning above threshold, ties, etc:\n\n``` json\n{\n  \"my_terms_agg\": {\n    \"field\": \"tags\",\n    \"multi_value_mode\": \"<=2\",\n    \"priorities\": {\n      \"foo\": 1, \n      \"bar\": 2, \n      \"baz\": 2, \n      \"fizz\": 3, \n      \"buzz\": 4\n    }\n  }\n}\n```\n\nWhich aggregates \"foo\" + \"bar\" + \"baz\" because their priorities are <= 2.\n\nHonestly this is getting rather complicated, and could be done by scripting, so I don't think it'd be good to implement.  But I wanted to at least throw out the possibility :)\n\n/cc @colings86 and @tylerfontaine \n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}