[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/137170889","html_url":"https://github.com/elastic/elasticsearch/issues/13266#issuecomment-137170889","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13266","id":137170889,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNzE3MDg4OQ==","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2015-09-02T16:59:47Z","updated_at":"2015-09-02T16:59:47Z","author_association":"CONTRIBUTOR","body":"The test fails because optimize is called and no errors are expected but optimize fails because a shard is relocating. Here is how:\n\nFirst of all, when a shard relocates while optimize is called the call might fail with \n`ForceMergeFailedEngineException[force merge failed]; nested: AlreadyClosedException[this IndexWriter is closed]` if:\n- the optimize request was send to a shard that is currently relocating\n- the request is started while the shard is still active and open but executed after it was closed (which happens very rarely)\n\nTo avoid this in the test we create an index, wait for relocations to finish and only then call optimize. \nThis is the part of the code:\n\n```\n        createIndex(\"test\");\n        client().prepareIndex(\"test\", \"type1\", \"1\").setSource(\"field1\", \"value1\").get();\n        client().prepareIndex(\"test\", \"type1\", \"2\").setSource(\"field1\", \"value2\").get();\n        client().prepareIndex(\"test\", \"type1\", \"3\").setSource(\"field1\", \"value3\").get();\n        waitForRelocation();\n        optimize();\n```\n\nThis assumes that after `waitForRelocation()` has returned shards are no more relocated and optimize will succeed always. \n\nHowever, because the test does not wait for green status, relocations can still start after `waitForRelocation()` has returned successfully. \nIn this case, here is the cluster state after all shards have been assigned but not all allocated:\n\n```\nnodes: \n{node_s2}{EXoFzKQETGiqaiRDrLPbCg}{127.0.0.1}{127.0.0.1:9402}{mode=network}\n{node_s0}{iUkDDsM2T-OGXFNYdljzBQ}{127.0.0.1}{127.0.0.1:9400}{mode=network}, master\n{node_s1}{gW0qrQwiQpOzwgOfzKUlPg}{127.0.0.1}{127.0.0.1:9401}{mode=network}\n[...]\nrouting_nodes:\n-----node_id[gW0qrQwiQpOzwgOfzKUlPg][V]\n--------[test][1], node[gW0qrQwiQpOzwgOfzKUlPg], [R], v[2], s[INITIALIZING], a[id=bdfh-y94SOi9bfw_zJ9OYQ], unassigned_info[[reason=INDEX_CREATED], at[2015-09-02T16:40:03.287Z]]\n--------[test][3], node[gW0qrQwiQpOzwgOfzKUlPg], [P], v[3], s[STARTED], a[id=LfWoFMG-Rr2b-T5xXcYfNQ]\n--------[test][2], node[gW0qrQwiQpOzwgOfzKUlPg], [R], v[3], s[STARTED], a[id=PJUO1DYETwujMkyCh9iR3A]\n--------[test][5], node[gW0qrQwiQpOzwgOfzKUlPg], [R], v[3], s[STARTED], a[id=HUnQpyvbTFycsVRZOYe87w]\n--------[test][0], node[gW0qrQwiQpOzwgOfzKUlPg], [P], v[2], s[STARTED], a[id=fbzg-cteQo6A9nIqCpfKXQ]\n-----node_id[iUkDDsM2T-OGXFNYdljzBQ][V]\n--------[test][1], node[iUkDDsM2T-OGXFNYdljzBQ], [P], v[2], s[STARTED], a[id=B7XeUI8-TqSXKA7ZnASn0Q]\n--------[test][4], node[iUkDDsM2T-OGXFNYdljzBQ], [P], v[3], s[STARTED], a[id=Xne9jkeJRZCLgxeU4ZDEUw]\n--------[test][0], node[iUkDDsM2T-OGXFNYdljzBQ], [R], v[2], s[INITIALIZING], a[id=IPATKM4TTRac_duGlNgEWQ], unassigned_info[[reason=INDEX_CREATED], at[2015-09-02T16:40:03.287Z]]\n-----node_id[EXoFzKQETGiqaiRDrLPbCg][V]\n--------[test][3], node[EXoFzKQETGiqaiRDrLPbCg], [R], v[3], s[STARTED], a[id=8BDoiJRgS0euiPu9svsgNA]\n--------[test][2], node[EXoFzKQETGiqaiRDrLPbCg], [P], v[3], s[STARTED], a[id=MbLEmN88TPOnZzD7Kj4Vcg]\n--------[test][4], node[EXoFzKQETGiqaiRDrLPbCg], [R], v[3], s[STARTED], a[id=rSdf8UHSQpuFZeDLbH6RNw]\n--------[test][5], node[EXoFzKQETGiqaiRDrLPbCg], [P], v[3], s[STARTED], a[id=dEuJ6wkYTo-XeJAch4AVYA]\n---- unassigned\n\ntasks: (1):\n131/URGENT/shard-started ([test][0], node[iUkDDsM2T-OGXFNYdljzBQ], [R], v[2], s[INITIALIZING], a[id=IPATKM4TTRac_duGlNgEWQ], unassigned_info[[reason=INDEX_CREATED], at[2015-09-02T16:40:03.287Z]]), reason [after recovery (replica) from node [{node_s1}{gW0qrQwiQpOzwgOfzKUlPg}{127.0.0.1}{127.0.0.1:9401}{mode=network}]]/10.6s\n\n```\n\nBecause of the uneven distribution of shards one shard will be relocated from `node_s0` to `node_s1` after waiting for relocations is done and the subsequent optimize might then fail.\n\nAn ensureGreen() will fix the issue but I do wonder why we start of with such an odd distribution of shards to begin with. I will investigate this.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/137198389","html_url":"https://github.com/elastic/elasticsearch/issues/13266#issuecomment-137198389","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13266","id":137198389,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNzE5ODM4OQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2015-09-02T18:21:36Z","updated_at":"2015-09-02T18:21:36Z","author_association":"CONTRIBUTOR","body":"> An ensureGreen() will fix the issue but I do wonder why we start of with such an odd distribution of shards to begin with. I will investigate this.\n\nthis allocation is a corner case that I tried to special case in the shard allocator here: https://github.com/elastic/elasticsearch/blob/master/core/src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/BalancedShardsAllocator.java#L647\n\nin the last allocation round we have wo shards left:\n\n```\n--------[test][1], node[gW0qrQwiQpOzwgOfzKUlPg], [R], v[2], s[INITIALIZING], a[id=bdfh-y94SOi9bfw_zJ9OYQ], unassigned_info[[reason=INDEX_CREATED], at[2015-09-02T16:40:03.287Z]]\n--------[test][0], node[iUkDDsM2T-OGXFNYdljzBQ], [R], v[2], s[INITIALIZING], a[id=IPATKM4TTRac_duGlNgEWQ], unassigned_info[[reason=INDEX_CREATED], at[2015-09-02T16:40:03.287Z]]\n```\n\nideally we would put both on `-----node_id[iUkDDsM2T-OGXFNYdljzBQ][V]` but it already has shard `--------[test][1]` so we had to put it somewhere else... maybe there is a bug in the code or we should take another look at solving it differently.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/138346888","html_url":"https://github.com/elastic/elasticsearch/issues/13266#issuecomment-138346888","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13266","id":138346888,"node_id":"MDEyOklzc3VlQ29tbWVudDEzODM0Njg4OA==","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2015-09-07T17:36:25Z","updated_at":"2015-09-07T17:36:25Z","author_association":"CONTRIBUTOR","body":"We ( @bleskes and I) discussed further about the fact that we get a failure at all for optimize while relocating. Before I wrote\n\n> The test fails because optimize is called and no errors are expected but optimize fails because a shard is relocating.\n\nBut actually, optimize should not fail at all just because a shard is relocating. The reason why we get a failure is that the Exceptions returned by the call because a shard is closed are not all handled the same. I made a pr to fix this (#13380).\n\nHowever, while discussing this we found another issue with this: when we call optimize in tests and shards are relocating we might actually miss some because they are relocating and maybe the coordinating node for the request does not have the new address of the shards yet, request is not sent to initializing shards etc. We should fix that as well as it might cause test failures too.\n\nIn addition other apis like stats does not seem to behave as expected too when shards are relocating. @tlrx might add more to that.\n\nOverall I now think the problem is not so much that shards are relocating in tests unexpectedly but more that apis don't behave as expected when shards are relocating?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/138470051","html_url":"https://github.com/elastic/elasticsearch/issues/13266#issuecomment-138470051","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13266","id":138470051,"node_id":"MDEyOklzc3VlQ29tbWVudDEzODQ3MDA1MQ==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2015-09-08T08:11:42Z","updated_at":"2015-09-08T08:11:42Z","author_association":"MEMBER","body":"> In addition other apis like stats does not seem to behave as expected too when shards are relocating. @tlrx might add more to that.\n\nI noticed that Indices Stats API, when executed at shard level, throws a ShardNotFoundException if the shard has no routing entry (see code [here](https://github.com/elastic/elasticsearch/blob/6e2dc7302366e9af861efa23b850999cd83748aa/core/src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java#L99-L102)). \n\nExceptions are then accumulated at `TransportBroadcastByNodeAction` level and shards operations that throws exceptions are just ignored and excluded from indices stats.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/145569730","html_url":"https://github.com/elastic/elasticsearch/issues/13266#issuecomment-145569730","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13266","id":145569730,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTU2OTczMA==","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2015-10-05T15:27:36Z","updated_at":"2015-10-05T15:27:36Z","author_association":"CONTRIBUTOR","body":"Test was fixed. I opened #13719 for a general discussion on how different apis deal with relocating shards.\n","performed_via_github_app":null}]