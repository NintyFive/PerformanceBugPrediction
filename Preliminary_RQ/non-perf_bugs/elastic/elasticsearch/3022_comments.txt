[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18545503","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18545503","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18545503,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTQ1NTAz","user":{"login":"eranid","id":2376537,"node_id":"MDQ6VXNlcjIzNzY1Mzc=","avatar_url":"https://avatars2.githubusercontent.com/u/2376537?v=4","gravatar_id":"","url":"https://api.github.com/users/eranid","html_url":"https://github.com/eranid","followers_url":"https://api.github.com/users/eranid/followers","following_url":"https://api.github.com/users/eranid/following{/other_user}","gists_url":"https://api.github.com/users/eranid/gists{/gist_id}","starred_url":"https://api.github.com/users/eranid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eranid/subscriptions","organizations_url":"https://api.github.com/users/eranid/orgs","repos_url":"https://api.github.com/users/eranid/repos","events_url":"https://api.github.com/users/eranid/events{/privacy}","received_events_url":"https://api.github.com/users/eranid/received_events","type":"User","site_admin":false},"created_at":"2013-05-28T11:49:09Z","updated_at":"2013-05-28T11:49:09Z","author_association":"NONE","body":"+1\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18546038","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18546038","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18546038,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTQ2MDM4","user":{"login":"roeena","id":1909196,"node_id":"MDQ6VXNlcjE5MDkxOTY=","avatar_url":"https://avatars2.githubusercontent.com/u/1909196?v=4","gravatar_id":"","url":"https://api.github.com/users/roeena","html_url":"https://github.com/roeena","followers_url":"https://api.github.com/users/roeena/followers","following_url":"https://api.github.com/users/roeena/following{/other_user}","gists_url":"https://api.github.com/users/roeena/gists{/gist_id}","starred_url":"https://api.github.com/users/roeena/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roeena/subscriptions","organizations_url":"https://api.github.com/users/roeena/orgs","repos_url":"https://api.github.com/users/roeena/repos","events_url":"https://api.github.com/users/roeena/events{/privacy}","received_events_url":"https://api.github.com/users/roeena/received_events","type":"User","site_admin":false},"created_at":"2013-05-28T12:02:27Z","updated_at":"2013-05-28T12:02:27Z","author_association":"NONE","body":"+1\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18553979","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18553979","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18553979,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTUzOTc5","user":{"login":"btiernay","id":2717578,"node_id":"MDQ6VXNlcjI3MTc1Nzg=","avatar_url":"https://avatars3.githubusercontent.com/u/2717578?v=4","gravatar_id":"","url":"https://api.github.com/users/btiernay","html_url":"https://github.com/btiernay","followers_url":"https://api.github.com/users/btiernay/followers","following_url":"https://api.github.com/users/btiernay/following{/other_user}","gists_url":"https://api.github.com/users/btiernay/gists{/gist_id}","starred_url":"https://api.github.com/users/btiernay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/btiernay/subscriptions","organizations_url":"https://api.github.com/users/btiernay/orgs","repos_url":"https://api.github.com/users/btiernay/repos","events_url":"https://api.github.com/users/btiernay/events{/privacy}","received_events_url":"https://api.github.com/users/btiernay/received_events","type":"User","site_admin":false},"created_at":"2013-05-28T14:28:27Z","updated_at":"2013-05-28T14:28:27Z","author_association":"NONE","body":"I'm curious on the intended behaviour of this feature: \n- Will it be possible to do a global sort, offset, limit based on properties of the child?\n- Will it be possible to return the matching child AND parent?\n\nThe answers to these questions will have implications in how we proceed in implementing our current application. \nThanks!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18564777","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18564777","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18564777,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTY0Nzc3","user":{"login":"brusic","id":354105,"node_id":"MDQ6VXNlcjM1NDEwNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/354105?v=4","gravatar_id":"","url":"https://api.github.com/users/brusic","html_url":"https://github.com/brusic","followers_url":"https://api.github.com/users/brusic/followers","following_url":"https://api.github.com/users/brusic/following{/other_user}","gists_url":"https://api.github.com/users/brusic/gists{/gist_id}","starred_url":"https://api.github.com/users/brusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brusic/subscriptions","organizations_url":"https://api.github.com/users/brusic/orgs","repos_url":"https://api.github.com/users/brusic/repos","events_url":"https://api.github.com/users/brusic/events{/privacy}","received_events_url":"https://api.github.com/users/brusic/received_events","type":"User","site_admin":false},"created_at":"2013-05-28T17:05:09Z","updated_at":"2013-05-28T17:05:09Z","author_association":"CONTRIBUTOR","body":"Sorting on nested documents has been supported since the 0.90 release: https://github.com/elasticsearch/elasticsearch/issues/2662\n\nNested queries always returns the parent so I am assuming the behavior will remain the same. Hopefully this feature will have many settings, similar to most other elasticsearch features.\n\nAnd I hate sounding like a broken record, but can we please stop with the +1s? The elasticsearch team is not influenced by them and they only create noise.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18566459","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18566459","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18566459,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTY2NDU5","user":{"login":"btiernay","id":2717578,"node_id":"MDQ6VXNlcjI3MTc1Nzg=","avatar_url":"https://avatars3.githubusercontent.com/u/2717578?v=4","gravatar_id":"","url":"https://api.github.com/users/btiernay","html_url":"https://github.com/btiernay","followers_url":"https://api.github.com/users/btiernay/followers","following_url":"https://api.github.com/users/btiernay/following{/other_user}","gists_url":"https://api.github.com/users/btiernay/gists{/gist_id}","starred_url":"https://api.github.com/users/btiernay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/btiernay/subscriptions","organizations_url":"https://api.github.com/users/btiernay/orgs","repos_url":"https://api.github.com/users/btiernay/repos","events_url":"https://api.github.com/users/btiernay/events{/privacy}","received_events_url":"https://api.github.com/users/btiernay/received_events","type":"User","site_admin":false},"created_at":"2013-05-28T17:29:50Z","updated_at":"2013-05-28T17:29:50Z","author_association":"NONE","body":"> Sorting on nested documents has been supported since the 0.90 release: #2662\n\nBy \"global sort\", a mean without regard to parent-nested relationship. That is, it is possible to return sorted children which may not be contiguous with respect to their parent. For example:\n\n```\nHit 1. nested1,1 -> parent1\nHit 2. nested2,1 -> parent2\nHit 3. nested1,2 -> parent1\n```\n\nNotice how different parents are interleaved.\n\n> Nested queries always returns the parent so I am assuming the behavior will remain the same. Hopefully this feature will have many settings, similar to most other elasticsearch features.\n\nIt would be nice to have flexibility here as you describe.\n\n> And I hate sounding like a broken record, but can we please stop with the +1s? The elasticsearch team is not influenced by them and they only create noise.\n\nMessage received, sorry about that.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18569259","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18569259","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18569259,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTY5MjU5","user":{"login":"brusic","id":354105,"node_id":"MDQ6VXNlcjM1NDEwNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/354105?v=4","gravatar_id":"","url":"https://api.github.com/users/brusic","html_url":"https://github.com/brusic","followers_url":"https://api.github.com/users/brusic/followers","following_url":"https://api.github.com/users/brusic/following{/other_user}","gists_url":"https://api.github.com/users/brusic/gists{/gist_id}","starred_url":"https://api.github.com/users/brusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brusic/subscriptions","organizations_url":"https://api.github.com/users/brusic/orgs","repos_url":"https://api.github.com/users/brusic/repos","events_url":"https://api.github.com/users/brusic/events{/privacy}","received_events_url":"https://api.github.com/users/brusic/received_events","type":"User","site_admin":false},"created_at":"2013-05-28T18:12:12Z","updated_at":"2013-05-28T18:12:12Z","author_association":"CONTRIBUTOR","body":"IMHO, your use case is better suited for parent/child documents and not nested documents. The way I see things is that inner/nested documents always form a single document with the outer/parent document. The inner/nested documents never appear separately. This feature breaks that model slightly by not returning certain nested documents, but the parent is always the same. Of course, I do not work for elasticsearch so my views and thoughts have no bearing on the issue. :)\n\nBTW, there was nothing wrong with your comment. Adding discussion to an issue via a concrete use case provides value and is the type of comment we should be seeing. A comment with nothing but +1 does not provide value. Perhaps I should just create an email filter that ignores github messages with only +1.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18570790","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18570790","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18570790,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTcwNzkw","user":{"login":"eranid","id":2376537,"node_id":"MDQ6VXNlcjIzNzY1Mzc=","avatar_url":"https://avatars2.githubusercontent.com/u/2376537?v=4","gravatar_id":"","url":"https://api.github.com/users/eranid","html_url":"https://github.com/eranid","followers_url":"https://api.github.com/users/eranid/followers","following_url":"https://api.github.com/users/eranid/following{/other_user}","gists_url":"https://api.github.com/users/eranid/gists{/gist_id}","starred_url":"https://api.github.com/users/eranid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eranid/subscriptions","organizations_url":"https://api.github.com/users/eranid/orgs","repos_url":"https://api.github.com/users/eranid/repos","events_url":"https://api.github.com/users/eranid/events{/privacy}","received_events_url":"https://api.github.com/users/eranid/received_events","type":"User","site_admin":false},"created_at":"2013-05-28T18:36:05Z","updated_at":"2013-05-28T18:36:05Z","author_association":"NONE","body":"Parent-Child has the problem of using ALOT of in-memory for the joins.\nI was using it at first, but as the index grew to hundreds of GB, it became a memory and CPU monster.\nWhen most of my queries are \"get me the photos that were tagged with certain tags with some value in a range of dates\" (the nested document is the tag)\nI have to use either parent-child or nested. \n\nSince there might be lots of tags per photo, I want to get just the relevant tags (don't care about getting the parent really, though I'd rather not).\n\nParent-Child just can't handle this. with 7GB of memory, The machine takes forever to do the joins, and sometimes crashes.\n\nAlso, I did not know the +1 was a bother. I thought it helped you guys prioritize features.\nMy apologies. Will spread the word.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18579284","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18579284","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18579284,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTc5Mjg0","user":{"login":"brusic","id":354105,"node_id":"MDQ6VXNlcjM1NDEwNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/354105?v=4","gravatar_id":"","url":"https://api.github.com/users/brusic","html_url":"https://github.com/brusic","followers_url":"https://api.github.com/users/brusic/followers","following_url":"https://api.github.com/users/brusic/following{/other_user}","gists_url":"https://api.github.com/users/brusic/gists{/gist_id}","starred_url":"https://api.github.com/users/brusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brusic/subscriptions","organizations_url":"https://api.github.com/users/brusic/orgs","repos_url":"https://api.github.com/users/brusic/repos","events_url":"https://api.github.com/users/brusic/events{/privacy}","received_events_url":"https://api.github.com/users/brusic/received_events","type":"User","site_admin":false},"created_at":"2013-05-28T20:53:01Z","updated_at":"2013-05-28T20:53:01Z","author_association":"CONTRIBUTOR","body":"I never said parent-child was efficient, just that its functionality is better suited to your use case. :) Even if nested documents eventually supported your use case, the overhead of sorting will also be it grossly inefficient. Each parent document would need to be scored several times.\n\nAs far as +1 goes, there has been some discussion about them. There are a few issues that are 2-3 years old that have hundreds of +1s. You can make the judgement if they are effective or not. I am not on the elasticsearch team so everyone should follow their advice on proper github etiquette and not mine. :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18612557","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18612557","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18612557,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NjEyNTU3","user":{"login":"btiernay","id":2717578,"node_id":"MDQ6VXNlcjI3MTc1Nzg=","avatar_url":"https://avatars3.githubusercontent.com/u/2717578?v=4","gravatar_id":"","url":"https://api.github.com/users/btiernay","html_url":"https://github.com/btiernay","followers_url":"https://api.github.com/users/btiernay/followers","following_url":"https://api.github.com/users/btiernay/following{/other_user}","gists_url":"https://api.github.com/users/btiernay/gists{/gist_id}","starred_url":"https://api.github.com/users/btiernay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/btiernay/subscriptions","organizations_url":"https://api.github.com/users/btiernay/orgs","repos_url":"https://api.github.com/users/btiernay/repos","events_url":"https://api.github.com/users/btiernay/events{/privacy}","received_events_url":"https://api.github.com/users/btiernay/received_events","type":"User","site_admin":false},"created_at":"2013-05-29T12:22:06Z","updated_at":"2013-05-29T12:35:58Z","author_association":"NONE","body":"> Even if nested documents eventually supported your use case, the overhead of sorting will also be it grossly inefficient. Each parent document would need to be scored several times.\n\nThis may be true given what lucene currently supports for `BlockJoinQuery` and `BlockJoinCollector`. This is a good article describing the basics: http://blog.mikemccandless.com/2012/01/searching-relational-content-with.html?m=1\n\n> The join can currently only go in one direction (mapping child docIDs to parent docIDs), but in some cases you need to map parent docIDs to child docIDs. For example, when searching songs, perhaps you want all matching songs sorted by their title. You can't easily do this today because the only way to get song hits is to group by album or band/artist. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18705079","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18705079","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18705079,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NzA1MDc5","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2013-05-30T20:13:05Z","updated_at":"2013-05-31T19:44:40Z","author_association":"MEMBER","body":"@btiernay @brusic  The idea is that the nested inner objects hits are included in the root doc hit. Something like this:\n\n```\n\"hits\" : [ {\n      \"_index\" : \"test\",\n      \"_type\" : \"type1\",\n      \"_id\" : \"1\",\n      \"_score\" : 1.584377, \"_source\" : ....,\n      \"nested_hits\" : {\n        \"total\" : 2,\n          \"max_score\" : 1.6391755,\n          \"hits\" : [ {\n            \"_offset\" : 1, \n            \"_score\" : 1.6391755, \"_source\" : ...\n          }, {\n            \"_offset\" : 0,\n            \"_score\" : 1.5295786, \"_source\" : ...\n          } ]\n      }\n}\n```\n\nIn the above case `_offset` is nested field's array offset in the _source. \n\nIt should be possible to specify a global sort and a sort inside the root document and what to show per nested hit (the complete inner object based on the source or just some fields). In addition supporting highlighting and other per hit features makes a lot of sense as well.\n\n@eranid The memory usage of the parent/child have been reduced in the new `0.90.1` version. Hopefully parent/child queries can work now better in your environment.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18710717","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18710717","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18710717,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NzEwNzE3","user":{"login":"brusic","id":354105,"node_id":"MDQ6VXNlcjM1NDEwNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/354105?v=4","gravatar_id":"","url":"https://api.github.com/users/brusic","html_url":"https://github.com/brusic","followers_url":"https://api.github.com/users/brusic/followers","following_url":"https://api.github.com/users/brusic/following{/other_user}","gists_url":"https://api.github.com/users/brusic/gists{/gist_id}","starred_url":"https://api.github.com/users/brusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brusic/subscriptions","organizations_url":"https://api.github.com/users/brusic/orgs","repos_url":"https://api.github.com/users/brusic/repos","events_url":"https://api.github.com/users/brusic/events{/privacy}","received_events_url":"https://api.github.com/users/brusic/received_events","type":"User","site_admin":false},"created_at":"2013-05-30T21:48:43Z","updated_at":"2013-05-30T21:48:43Z","author_association":"CONTRIBUTOR","body":"@martijnvg, so the full source will still be returned? The nested hits is a great idea in terms of flexibility and makes more sense than editing the source (which I referred to above in \"breaking the model\"), I just hope that it is efficient. I have some convoluted logic to deal with filtering nested documents on the client side, and the serialization/deserialization using Jackson is a bit of a performance hit.\n\nCan scoring be avoid on the nested hits results? My use case calls for scoring using the fields in the parent document, but only filtering the nested documents. Not sure if you thought of this scenario, but a flexible scoring model would be a great feature.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18711879","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18711879","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18711879,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NzExODc5","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2013-05-30T22:13:19Z","updated_at":"2013-05-30T22:13:19Z","author_association":"MEMBER","body":"@brusic The full source can optionally returned if that is requested, but it isn't necessary. The source of the nested inner object will be separately returned, but is based on the source in the root document. The source can also be disabled and individual fields can be separately be set to stored in the mapping, these individual fields can then be requested instead of the source. \n\nThe overhead of fetching inner nested objects should be small. This should be done in the fetch phase (so only for the competitive root docs) by re-executing the inner query of the nested query only on the nested docs of the root docs to be retrieved (a big filter).\n\nNot sure what you mean with the avoiding the scoring on neste hits. Just use a field from the parent for scoring via sorting by script?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18720818","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18720818","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18720818,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NzIwODE4","user":{"login":"btiernay","id":2717578,"node_id":"MDQ6VXNlcjI3MTc1Nzg=","avatar_url":"https://avatars3.githubusercontent.com/u/2717578?v=4","gravatar_id":"","url":"https://api.github.com/users/btiernay","html_url":"https://github.com/btiernay","followers_url":"https://api.github.com/users/btiernay/followers","following_url":"https://api.github.com/users/btiernay/following{/other_user}","gists_url":"https://api.github.com/users/btiernay/gists{/gist_id}","starred_url":"https://api.github.com/users/btiernay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/btiernay/subscriptions","organizations_url":"https://api.github.com/users/btiernay/orgs","repos_url":"https://api.github.com/users/btiernay/repos","events_url":"https://api.github.com/users/btiernay/events{/privacy}","received_events_url":"https://api.github.com/users/btiernay/received_events","type":"User","site_admin":false},"created_at":"2013-05-31T02:55:06Z","updated_at":"2013-05-31T02:55:06Z","author_association":"NONE","body":"@martijnvg: Very nice proposal. A couple of clarifications:\n\n> It should be possible to specify a global sort and a sort inside the root document\n\nWhen you say \"global sort\" do you mean global with respect to the root document, or with respect to nested documents? I could see how you might be implying the ability to do either. \n\n> ...based on the sort or just some fields\n\nI assume you mean \"source\" not \"sort\"?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18720892","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18720892","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18720892,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NzIwODky","user":{"login":"btiernay","id":2717578,"node_id":"MDQ6VXNlcjI3MTc1Nzg=","avatar_url":"https://avatars3.githubusercontent.com/u/2717578?v=4","gravatar_id":"","url":"https://api.github.com/users/btiernay","html_url":"https://github.com/btiernay","followers_url":"https://api.github.com/users/btiernay/followers","following_url":"https://api.github.com/users/btiernay/following{/other_user}","gists_url":"https://api.github.com/users/btiernay/gists{/gist_id}","starred_url":"https://api.github.com/users/btiernay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/btiernay/subscriptions","organizations_url":"https://api.github.com/users/btiernay/orgs","repos_url":"https://api.github.com/users/btiernay/repos","events_url":"https://api.github.com/users/btiernay/events{/privacy}","received_events_url":"https://api.github.com/users/btiernay/received_events","type":"User","site_admin":false},"created_at":"2013-05-31T02:58:13Z","updated_at":"2013-05-31T02:58:13Z","author_association":"NONE","body":"@brusic: With respect to:\n\n> The nested hits is a great idea in terms of flexibility and makes more sense than editing the source (which I referred to above in \"breaking the model\"), I just hope that it is efficient.\n\nI think this really depends on the size and structure of your documents. We have some very large documents (deep and wide) for which the ability to return the nested documents without \"editing\" the source would be _much_ more efficient.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18728438","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18728438","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18728438,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NzI4NDM4","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2013-05-31T07:27:42Z","updated_at":"2013-05-31T07:27:42Z","author_association":"CONTRIBUTOR","body":"@eranid to add to what @martijnvg said: up until 0.90.1, parent-child relationships required the parent IDs and child IDs to be held in memory. From 0.90.1 onwards, only the parent IDs need to be held in memory.  This is a massive saving and should make parent-child much lighter.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18767490","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18767490","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18767490,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NzY3NDkw","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2013-05-31T19:43:57Z","updated_at":"2013-05-31T19:44:25Z","author_association":"MEMBER","body":"@btiernay The global sort is with respect to the root document. You could use nested sorting as global sorting which will base the ordering of root docs based on aggregate sort values from the nested inner objects.\n\n> I assume you mean \"source\" not \"sort\"?\n\n Yes, I meant source.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18769045","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18769045","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18769045,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NzY5MDQ1","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2013-05-31T20:15:26Z","updated_at":"2013-05-31T20:15:26Z","author_association":"MEMBER","body":"We definitely want to get this feature in, but in order get in it in right, a refactoring is needed in the fetch phase.\nThe fetch phase needs to have \"a hit in a hit\" concept (inner hits), that should cover both nested hits and getting child hits as part of the parent hit. All features that currently work on normal hits like for example explain, highlighting, fields and partial fields should also work for inner hits (if applicable).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18792152","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18792152","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18792152,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NzkyMTUy","user":{"login":"btiernay","id":2717578,"node_id":"MDQ6VXNlcjI3MTc1Nzg=","avatar_url":"https://avatars3.githubusercontent.com/u/2717578?v=4","gravatar_id":"","url":"https://api.github.com/users/btiernay","html_url":"https://github.com/btiernay","followers_url":"https://api.github.com/users/btiernay/followers","following_url":"https://api.github.com/users/btiernay/following{/other_user}","gists_url":"https://api.github.com/users/btiernay/gists{/gist_id}","starred_url":"https://api.github.com/users/btiernay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/btiernay/subscriptions","organizations_url":"https://api.github.com/users/btiernay/orgs","repos_url":"https://api.github.com/users/btiernay/repos","events_url":"https://api.github.com/users/btiernay/events{/privacy}","received_events_url":"https://api.github.com/users/btiernay/received_events","type":"User","site_admin":false},"created_at":"2013-06-01T16:29:22Z","updated_at":"2013-06-01T16:29:50Z","author_association":"NONE","body":"@martijnvg To be clear, I suppose there would be no way of inverting the relationship to sort globally based on nested docs (effectively ignoring the root-nested grouping) globally? If so, is this due to a Lucene imposed limitation?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/18965721","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-18965721","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":18965721,"node_id":"MDEyOklzc3VlQ29tbWVudDE4OTY1NzIx","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2013-06-05T09:49:56Z","updated_at":"2013-06-05T09:49:56Z","author_association":"MEMBER","body":"@btiernay You can sort globally based on the nested docs with the current nested sorting support. The global nested sorting won't be changed when inner hits are added that allows to sort nested hits per root / main document hit. Makes sense?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/19566609","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-19566609","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":19566609,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NTY2NjA5","user":{"login":"btiernay","id":2717578,"node_id":"MDQ6VXNlcjI3MTc1Nzg=","avatar_url":"https://avatars3.githubusercontent.com/u/2717578?v=4","gravatar_id":"","url":"https://api.github.com/users/btiernay","html_url":"https://github.com/btiernay","followers_url":"https://api.github.com/users/btiernay/followers","following_url":"https://api.github.com/users/btiernay/following{/other_user}","gists_url":"https://api.github.com/users/btiernay/gists{/gist_id}","starred_url":"https://api.github.com/users/btiernay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/btiernay/subscriptions","organizations_url":"https://api.github.com/users/btiernay/orgs","repos_url":"https://api.github.com/users/btiernay/repos","events_url":"https://api.github.com/users/btiernay/events{/privacy}","received_events_url":"https://api.github.com/users/btiernay/received_events","type":"User","site_admin":false},"created_at":"2013-06-17T18:58:35Z","updated_at":"2013-06-17T18:58:35Z","author_association":"NONE","body":"@martijnvg: Sorry for being so dense here, but it is still unclear if I can return nested docs as the root document using this approach. Then, I would be able to sort by the nested doc, without regard to parents, very similar to how parent-child relationships work.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/19570462","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-19570462","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":19570462,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NTcwNDYy","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2013-06-17T19:58:33Z","updated_at":"2013-06-17T19:58:33Z","author_association":"MEMBER","body":"@btiernay No, with this approach the nested inner objects can't be a root document on its own. Nested inner objects are always part of the root document.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/19577355","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-19577355","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":19577355,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NTc3MzU1","user":{"login":"btiernay","id":2717578,"node_id":"MDQ6VXNlcjI3MTc1Nzg=","avatar_url":"https://avatars3.githubusercontent.com/u/2717578?v=4","gravatar_id":"","url":"https://api.github.com/users/btiernay","html_url":"https://github.com/btiernay","followers_url":"https://api.github.com/users/btiernay/followers","following_url":"https://api.github.com/users/btiernay/following{/other_user}","gists_url":"https://api.github.com/users/btiernay/gists{/gist_id}","starred_url":"https://api.github.com/users/btiernay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/btiernay/subscriptions","organizations_url":"https://api.github.com/users/btiernay/orgs","repos_url":"https://api.github.com/users/btiernay/repos","events_url":"https://api.github.com/users/btiernay/events{/privacy}","received_events_url":"https://api.github.com/users/btiernay/received_events","type":"User","site_admin":false},"created_at":"2013-06-17T21:48:40Z","updated_at":"2013-06-17T21:48:40Z","author_association":"NONE","body":"@martijnvg: Thanks again for the clarification. Much appreciated. I realize your answer / solution is consistent with the other aspects of nested docs (e.g whole part relationships). However, I'm very curious if my proposal is technically feasible since I think it could be very powerful and more performant than the alternative parent-child approach. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/19595500","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-19595500","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":19595500,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NTk1NTAw","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2013-06-18T07:35:41Z","updated_at":"2013-06-18T07:35:41Z","author_association":"MEMBER","body":"@btiernay I think your idea is technically possible. Right now the inner nested objects don't have a unique identifier like regular root document have. In theory we could use the path + the offset in the nested array as additional data to the root documents's unique identifier for the inner nested object's unique key.\n\nAlso inner objects are tightly coupled to the lifecycle of the root document. If a root document is removed all the nested inner objects (which are stored as separate Lucene documents) are removed as well. Updating or adding individual nested inner objects isn't possible without reindexing the root document and all other nested inner objects (Lucene document block). If nested inner objects were exposed as independent hits in the search result, I guess the fact that these hits have limitations would be confusing.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/19604496","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-19604496","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":19604496,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NjA0NDk2","user":{"login":"btiernay","id":2717578,"node_id":"MDQ6VXNlcjI3MTc1Nzg=","avatar_url":"https://avatars3.githubusercontent.com/u/2717578?v=4","gravatar_id":"","url":"https://api.github.com/users/btiernay","html_url":"https://github.com/btiernay","followers_url":"https://api.github.com/users/btiernay/followers","following_url":"https://api.github.com/users/btiernay/following{/other_user}","gists_url":"https://api.github.com/users/btiernay/gists{/gist_id}","starred_url":"https://api.github.com/users/btiernay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/btiernay/subscriptions","organizations_url":"https://api.github.com/users/btiernay/orgs","repos_url":"https://api.github.com/users/btiernay/repos","events_url":"https://api.github.com/users/btiernay/events{/privacy}","received_events_url":"https://api.github.com/users/btiernay/received_events","type":"User","site_admin":false},"created_at":"2013-06-18T11:08:13Z","updated_at":"2013-06-18T11:08:13Z","author_association":"NONE","body":"That gives me hope then :)\n\n> we could use the path + the offset in the nested array as additional data to the root documents's unique identifier for the inner nested object's unique key\n\nThat's an interesting idea. I hadn't thought about the `id` field. I like it :)\n\n> If nested inner objects were exposed as independent hits in the search result, I guess the fact that these hits have limitations would be confusing.\n\nPerhaps, but consider \"write once\" applications in which the documents rarely, (if ever) change. Given the potential speedup / memory improvements that can be achieved using block documents (especially for deeply nested or wide documents), it would be a shame to not expose this functionality.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/24507645","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-24507645","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":24507645,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NTA3NjQ1","user":{"login":"julianhille","id":741067,"node_id":"MDQ6VXNlcjc0MTA2Nw==","avatar_url":"https://avatars1.githubusercontent.com/u/741067?v=4","gravatar_id":"","url":"https://api.github.com/users/julianhille","html_url":"https://github.com/julianhille","followers_url":"https://api.github.com/users/julianhille/followers","following_url":"https://api.github.com/users/julianhille/following{/other_user}","gists_url":"https://api.github.com/users/julianhille/gists{/gist_id}","starred_url":"https://api.github.com/users/julianhille/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/julianhille/subscriptions","organizations_url":"https://api.github.com/users/julianhille/orgs","repos_url":"https://api.github.com/users/julianhille/repos","events_url":"https://api.github.com/users/julianhille/events{/privacy}","received_events_url":"https://api.github.com/users/julianhille/received_events","type":"User","site_admin":false},"created_at":"2013-09-16T12:58:12Z","updated_at":"2013-09-16T12:58:12Z","author_association":"NONE","body":"any progress on this one? cause i'd love to see this.\nOtherwise any etimated time or any way to help out?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/25848480","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-25848480","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":25848480,"node_id":"MDEyOklzc3VlQ29tbWVudDI1ODQ4NDgw","user":{"login":"GabrielKast","id":98432,"node_id":"MDQ6VXNlcjk4NDMy","avatar_url":"https://avatars1.githubusercontent.com/u/98432?v=4","gravatar_id":"","url":"https://api.github.com/users/GabrielKast","html_url":"https://github.com/GabrielKast","followers_url":"https://api.github.com/users/GabrielKast/followers","following_url":"https://api.github.com/users/GabrielKast/following{/other_user}","gists_url":"https://api.github.com/users/GabrielKast/gists{/gist_id}","starred_url":"https://api.github.com/users/GabrielKast/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GabrielKast/subscriptions","organizations_url":"https://api.github.com/users/GabrielKast/orgs","repos_url":"https://api.github.com/users/GabrielKast/repos","events_url":"https://api.github.com/users/GabrielKast/events{/privacy}","received_events_url":"https://api.github.com/users/GabrielKast/received_events","type":"User","site_admin":false},"created_at":"2013-10-07T21:51:16Z","updated_at":"2013-10-07T21:51:16Z","author_association":"NONE","body":"I would also like to know if there is any progress on that feature. Any way we could help out?\nI have more or less the same use case as described. I wouls like to select some children in a tree of data where the chlildren have sense only when they are included in their parent. (The use case is : I have a company, with many establisments linked to that company, I would like to query/retrieve the establishment based on their geographical position. The position belongs to the children, but all the \"good data\" are linkde to the parent document ie the Company) \nI can manage to do something with parent/children, but I need to duplicate some data from the parent to the children and vice-versa.\nAnother way to avoid issues would be to be able to embed the parent in a query with a \"has_parent\"/embed the child in a query with a \"has_child\". I know it's not in the perimeter of that issue but maybe it's a simpler idea?\nI have the intuition that nested_hits would be a faster solution.\nSomething might also be difficult (I am not familiar with ES internals..) : how do you compute the \"nested_count\" ? to know how many are the nested hits. Maybe it's more of a parent/children feature.\n(please be kind if I'm a little clumsy I don't usually post comment on github :) ) \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/26075908","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-26075908","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":26075908,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDc1OTA4","user":{"login":"gpstathis","id":365914,"node_id":"MDQ6VXNlcjM2NTkxNA==","avatar_url":"https://avatars0.githubusercontent.com/u/365914?v=4","gravatar_id":"","url":"https://api.github.com/users/gpstathis","html_url":"https://github.com/gpstathis","followers_url":"https://api.github.com/users/gpstathis/followers","following_url":"https://api.github.com/users/gpstathis/following{/other_user}","gists_url":"https://api.github.com/users/gpstathis/gists{/gist_id}","starred_url":"https://api.github.com/users/gpstathis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gpstathis/subscriptions","organizations_url":"https://api.github.com/users/gpstathis/orgs","repos_url":"https://api.github.com/users/gpstathis/repos","events_url":"https://api.github.com/users/gpstathis/events{/privacy}","received_events_url":"https://api.github.com/users/gpstathis/received_events","type":"User","site_admin":false},"created_at":"2013-10-10T17:55:41Z","updated_at":"2013-10-10T17:55:41Z","author_association":"CONTRIBUTOR","body":"+1, will be great to have this, right now we are using nested queries and have to filter the sub-docs at the app layer.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/26250350","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-26250350","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":26250350,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MjUwMzUw","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2013-10-14T11:52:25Z","updated_at":"2013-10-14T11:53:32Z","author_association":"MEMBER","body":"@julianhille @GabrielKast @gpstathis I'm working on this feature. I have an implementation that works for nested inner objects: https://github.com/martijnvg/elasticsearch/commits/nested_fields\n\nThe goal is to put this into a more generic framework (in FetchPhase), so that the notion of the inner hits also works with parent/child and that an inner hit has the same set of fetch features as a normal hit (for example highlighting and matched queries, explain etc).\n\nIf you take a look at the NestedHitsTests test in the mentioned branch, you can see how it can be used.\n\nThere is no ETA for this feature yet.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/26262801","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-26262801","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":26262801,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MjYyODAx","user":{"login":"gpstathis","id":365914,"node_id":"MDQ6VXNlcjM2NTkxNA==","avatar_url":"https://avatars0.githubusercontent.com/u/365914?v=4","gravatar_id":"","url":"https://api.github.com/users/gpstathis","html_url":"https://github.com/gpstathis","followers_url":"https://api.github.com/users/gpstathis/followers","following_url":"https://api.github.com/users/gpstathis/following{/other_user}","gists_url":"https://api.github.com/users/gpstathis/gists{/gist_id}","starred_url":"https://api.github.com/users/gpstathis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gpstathis/subscriptions","organizations_url":"https://api.github.com/users/gpstathis/orgs","repos_url":"https://api.github.com/users/gpstathis/repos","events_url":"https://api.github.com/users/gpstathis/events{/privacy}","received_events_url":"https://api.github.com/users/gpstathis/received_events","type":"User","site_admin":false},"created_at":"2013-10-14T15:19:46Z","updated_at":"2013-10-14T15:19:46Z","author_association":"CONTRIBUTOR","body":"@martijnvg this goes above and beyond what I was hoping to see. Since the nested hits are sorted, having their original offset in the source array makes total sense and is a nice touch.\n\nThe only thing I'm having a hard time following (and it's probably due to my lack of understanding of the internals) are the key values for the Map returned by nestedHits(). E.g.\n\n``` java\n[...]\nassertThat(response.getHits().getHits()[1].nestedHits().get(\"1\").getHits().length, equalTo(1));\n[...]\n```\n\nIs the key string value \"1\" an internal field name? Apologies in advance if there is an obvious answer to this that I'm missing.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/26272093","html_url":"https://github.com/elastic/elasticsearch/issues/3022#issuecomment-26272093","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3022","id":26272093,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MjcyMDkz","user":{"login":"brusic","id":354105,"node_id":"MDQ6VXNlcjM1NDEwNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/354105?v=4","gravatar_id":"","url":"https://api.github.com/users/brusic","html_url":"https://github.com/brusic","followers_url":"https://api.github.com/users/brusic/followers","following_url":"https://api.github.com/users/brusic/following{/other_user}","gists_url":"https://api.github.com/users/brusic/gists{/gist_id}","starred_url":"https://api.github.com/users/brusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brusic/subscriptions","organizations_url":"https://api.github.com/users/brusic/orgs","repos_url":"https://api.github.com/users/brusic/repos","events_url":"https://api.github.com/users/brusic/events{/privacy}","received_events_url":"https://api.github.com/users/brusic/received_events","type":"User","site_admin":false},"created_at":"2013-10-14T17:15:01Z","updated_at":"2013-10-14T17:15:01Z","author_association":"CONTRIBUTOR","body":"\"martijnvg authored 10 months ago\"\n\nYou are breaking my heart! :) \n\nHow does the new aggregation framework tie into this feature? Not an issue or are you designing around it?\n","performed_via_github_app":null}]