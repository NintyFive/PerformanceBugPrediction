[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/319705037","html_url":"https://github.com/elastic/elasticsearch/issues/26013#issuecomment-319705037","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26013","id":319705037,"node_id":"MDEyOklzc3VlQ29tbWVudDMxOTcwNTAzNw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-08-02T15:19:35Z","updated_at":"2017-08-02T15:19:35Z","author_association":"CONTRIBUTOR","body":"I agree it is a bit trappy to silently ignore unmapped fields. In my opinion, the following points are important:\r\n - It should be a per-request option, not per query. So either all queries/aggs are parsed strictly, or none of them are.\r\n - The default should be `true`. Otherwise nobody will think about turning it on since everything will \"work\" without it. I agree this might be controversial since it might mean that eg. Kibana might have to turn it off automatically, but if the default is `false` then nobody will use this option and it won't be worth mantaining?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/319733697","html_url":"https://github.com/elastic/elasticsearch/issues/26013#issuecomment-319733697","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26013","id":319733697,"node_id":"MDEyOklzc3VlQ29tbWVudDMxOTczMzY5Nw==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2017-08-02T16:57:48Z","updated_at":"2017-08-02T16:57:48Z","author_association":"CONTRIBUTOR","body":">It should be a per-request option, not per query\r\n\r\nBad English on my part :)  That was what I intended.\r\n\r\nPicking defaults will certainly be a controversial choice.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/319932737","html_url":"https://github.com/elastic/elasticsearch/issues/26013#issuecomment-319932737","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26013","id":319932737,"node_id":"MDEyOklzc3VlQ29tbWVudDMxOTkzMjczNw==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2017-08-03T10:34:36Z","updated_at":"2017-08-03T10:34:57Z","author_association":"CONTRIBUTOR","body":"If we do this maybe we should undeprecate the [indices query](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-indices-query.html) . It  would provide a convenient marker for scoping nested clauses that should only be validated on certain indexes. \r\n\r\nThe suggested alternative when we deprecated indices query was to add regular match queries on the `_index` field which would make it harder for any new field validation logic in query parsers to reason about which other clauses to validate. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/319947464","html_url":"https://github.com/elastic/elasticsearch/issues/26013#issuecomment-319947464","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26013","id":319947464,"node_id":"MDEyOklzc3VlQ29tbWVudDMxOTk0NzQ2NA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-08-03T11:52:23Z","updated_at":"2017-08-03T11:52:23Z","author_association":"MEMBER","body":"Indices query is removed from 6.0, I think we should rather find a different/better solution.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/319952935","html_url":"https://github.com/elastic/elasticsearch/issues/26013#issuecomment-319952935","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26013","id":319952935,"node_id":"MDEyOklzc3VlQ29tbWVudDMxOTk1MjkzNQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2017-08-03T12:19:43Z","updated_at":"2017-08-03T12:19:43Z","author_association":"CONTRIBUTOR","body":"> I think we should rather find a different/better solution.\r\n\r\nIt feels like it needs to be something like `nested` where it is a JSON container that defines a particular scope/context for all of its nested clauses.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320252253","html_url":"https://github.com/elastic/elasticsearch/issues/26013#issuecomment-320252253","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26013","id":320252253,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDI1MjI1Mw==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2017-08-04T13:42:51Z","updated_at":"2017-08-04T15:24:29Z","author_association":"CONTRIBUTOR","body":"@imotov had an additional suggestion which is to fail requests _only_ if a user-supplied field is unmapped on **all** of the indices accessed. This would require each shard to return a list of all unmapped fields referenced in the request. The coordinating node would then fail the request if _all_ shards listed the same fieldname as unmapped.\r\nThis would be largely backwards compatible, supporting those users querying across heterogenous indices but also supply the missing validation for those users with homogenous indices and bad queries. It would require no extra configuration but would be an added complexity for the internal search logic.\r\nI suspect it will be hard to do any better than saying:\r\n\r\n    invalid reference to field [X] somewhere in this request\r\n\r\nThere would be a lot of context required to pinpoint that field X in the subclause of `nested` aggregation Y was actually the source of the error.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320681597","html_url":"https://github.com/elastic/elasticsearch/issues/26013#issuecomment-320681597","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26013","id":320681597,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDY4MTU5Nw==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2017-08-07T14:37:15Z","updated_at":"2017-08-07T16:06:22Z","author_association":"CONTRIBUTOR","body":"I started implementing Igor's suggestion but then came across an existing \"ignore unmapped\" setting which is an (undocumented?) index-level setting to allow unmapped fields or not in queries.\r\nThis is checked in [QueryShardContext](https://github.com/elastic/elasticsearch/blob/5e629cfba060f4ba729d497ab3cbe3b0cfb48719/core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java#L199) \r\n\r\nThis is arguably not as useful as a policy of failing queries that contain fieldnames that are unmapped across _all_ indices accessed. The flag to disable this \"unanimous\" policy should be a request-level setting.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/321216658","html_url":"https://github.com/elastic/elasticsearch/issues/26013#issuecomment-321216658","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26013","id":321216658,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMTIxNjY1OA==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2017-08-09T10:26:33Z","updated_at":"2017-08-09T10:26:33Z","author_association":"CONTRIBUTOR","body":"One remaining question is how should the strict=true setting be interpreted in the context of the [validate query API](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-validate.html)? The api looks to allow multiple indices in the URL but in the reference docs claims it arbitrarily picks only one of the shards to test the query against.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/321218862","html_url":"https://github.com/elastic/elasticsearch/issues/26013#issuecomment-321218862","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26013","id":321218862,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMTIxODg2Mg==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-08-09T10:38:07Z","updated_at":"2017-08-09T10:38:07Z","author_association":"MEMBER","body":"The validate query picks one shard per index so if you have multiple indices in your query it will send one request per index and the answer contains an entry for each index. There is also a new parameter since 5.4 called `all_shards` that send the query to all shards rather than picking a random one. Though this is not relevant for your use case since all shards in an index have the same mapping so the default should be ok to also validate when `strict=true` ?\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/321221499","html_url":"https://github.com/elastic/elasticsearch/issues/26013#issuecomment-321221499","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26013","id":321221499,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMTIyMTQ5OQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2017-08-09T10:51:41Z","updated_at":"2017-08-09T10:51:41Z","author_association":"CONTRIBUTOR","body":"Thanks for the clarification @jimczi , that makes things simpler.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/372752760","html_url":"https://github.com/elastic/elasticsearch/issues/26013#issuecomment-372752760","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26013","id":372752760,"node_id":"MDEyOklzc3VlQ29tbWVudDM3Mjc1Mjc2MA==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2018-03-13T17:35:55Z","updated_at":"2018-03-13T17:35:55Z","author_association":"MEMBER","body":"cc @elastic/es-search-aggs ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/480214047","html_url":"https://github.com/elastic/elasticsearch/issues/26013#issuecomment-480214047","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26013","id":480214047,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDIxNDA0Nw==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2019-04-05T09:41:23Z","updated_at":"2019-04-05T09:41:23Z","author_association":"CONTRIBUTOR","body":"Closing this due to the complexity and reliability of a solution. We had a working PR but chose not to take it forward.\r\nThe requirement is that a field name used in the query could be missing from 99% of the indices being queried but if at least one index understands the field name then that is considered a valid query. This might be a common use case as users query across all indices in a cluster.\r\n\r\nIn practice this is difficult to implement. All node search responses would need to include a list of field names in the query they didn't understand. Only if ALL indices failed to understand a field name would it be considered an error. However, some query optimisations like can_match mean that certain shards may not exercise the full query in which case we can't fail the query. If an index doesn't run a query (eg. a time-based-index skipped from the query's date range) it cannot report back a list of unknown field names used in the query and we therefore cannot determine if a field name is universally missing. We fail to fail in these scenarios.\r\n\r\n","performed_via_github_app":null}]