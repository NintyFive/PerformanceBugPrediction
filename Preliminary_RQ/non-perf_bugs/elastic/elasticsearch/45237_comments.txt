[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/518656243","html_url":"https://github.com/elastic/elasticsearch/issues/45237#issuecomment-518656243","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45237","id":518656243,"node_id":"MDEyOklzc3VlQ29tbWVudDUxODY1NjI0Mw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-08-06T12:53:31Z","updated_at":"2019-08-06T12:53:31Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/519575645","html_url":"https://github.com/elastic/elasticsearch/issues/45237#issuecomment-519575645","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45237","id":519575645,"node_id":"MDEyOklzc3VlQ29tbWVudDUxOTU3NTY0NQ==","user":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"created_at":"2019-08-08T15:47:28Z","updated_at":"2019-08-08T15:47:28Z","author_association":"MEMBER","body":"If the index gets deleted while we are [creating](https://github.com/elastic/elasticsearch/blob/master/server/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java#L548) a retention lease for peer recovery, we can release the Store using CancellableThreads. And if we hold the last reference to the Store, we will verify the [node lock](https://github.com/elastic/elasticsearch/blob/42e8b36f5e2d134d0212baa5932e5a99f8c00386/server/src/main/java/org/elasticsearch/env/NodeEnvironment.java#L940) before deleting the Store. Accessing the node lock (i.e, NativeFSLock) [performs](https://github.com/apache/lucene-solr/blob/2eb493d1700d59845ac120dcc485556b7e7fb422/lucene/core/src/java/org/apache/lucene/store/NativeFSLockFactory.java#L182) some I/O on FileChannel. If CancellableThreads is canceled, the node lock becomes invalid as its channel is [closed](https://github.com/openjdk-mirror/jdk7u-jdk/blob/master/src/share/classes/java/nio/channels/spi/AbstractInterruptibleChannel.java#L165).\r\n\r\nI am working on the fix.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/521744272","html_url":"https://github.com/elastic/elasticsearch/issues/45237#issuecomment-521744272","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45237","id":521744272,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMTc0NDI3Mg==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-08-15T18:22:22Z","updated_at":"2019-08-15T18:22:22Z","author_association":"MEMBER","body":"Possibly related test failure in SimpleIndexStateIT?\r\n\r\nhttps://gradle-enterprise.elastic.co/s/a6as57hu5yt22/console-log#L4871\r\n\r\n```\r\n\r\n1> [2019-08-16T05:56:29,304][WARN ][o.e.i.IndicesService     ] [node_s0] [test/Dzo_hTd0QPW3C-Z3bRj-8w] failed to delete index\r\n--\r\n1> org.elasticsearch.env.ShardLockObtainFailedException: [test][0]: obtaining shard lock timed out after 0ms, previous lock details: [shard creation] trying to lock for [deleting index directory]\r\n1> \tat org.elasticsearch.env.NodeEnvironment$InternalShardLock.acquire(NodeEnvironment.java:860) ~[main/:?]\r\n1> \tat org.elasticsearch.env.NodeEnvironment.shardLock(NodeEnvironment.java:775) ~[main/:?]\r\n1> \tat org.elasticsearch.env.NodeEnvironment.lockAllForIndex(NodeEnvironment.java:718) ~[main/:?]\r\n1> \tat org.elasticsearch.env.NodeEnvironment.deleteIndexDirectorySafe(NodeEnvironment.java:670) ~[main/:?]\r\n1> \tat org.elasticsearch.indices.IndicesService.deleteIndexStoreIfDeletionAllowed(IndicesService.java:800) [main/:?]\r\n1> \tat org.elasticsearch.indices.IndicesService.deleteIndexStore(IndicesService.java:787) [main/:?]\r\n1> \tat org.elasticsearch.indices.IndicesService.removeIndex(IndicesService.java:691) [main/:?]\r\n1> \tat org.elasticsearch.indices.cluster.IndicesClusterStateService.deleteIndices(IndicesClusterStateService.java:375) [main/:?]\r\n1> \tat org.elasticsearch.indices.cluster.IndicesClusterStateService.applyClusterState(IndicesClusterStateService.java:241) [main/:?]\r\n1> \tat org.elasticsearch.cluster.service.ClusterApplierService.lambda$callClusterStateAppliers$5(ClusterApplierService.java:508) [main/:?]\r\n1> \tat java.lang.Iterable.forEach(Iterable.java:75) [?:?]\r\n...\r\n...\r\n```\r\n```\r\n\r\n[2019-08-16T05:56:29,419][WARN ][o.e.e.NodeEnvironment    ] [node_s1] lock assertion failed\r\n--\r\n1> java.nio.channels.ClosedByInterruptException: null\r\n1> \tat java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199) ~[?:?]\r\n1> \tat sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162) ~[?:?]\r\n1> \tat sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:388) ~[?:?]\r\n1> \tat org.apache.lucene.mockfile.FilterFileChannel.size(FilterFileChannel.java:85) ~[lucene-test-framework-8.2.0.jar:8.2.0 31d7ec7bbfdcd2c4cc61d9d35e962165410b65fe - ivera - 2019-07-19 15:05:58]\r\n1> \tat org.apache.lucene.mockfile.FilterFileChannel.size(FilterFileChannel.java:85) ~[lucene-test-framework-8.2.0.jar:8.2.0 31d7ec7bbfdcd2c4cc61d9d35e962165410b65fe - ivera - 2019-07-19 15:05:58]\r\n1> \tat org.apache.lucene.mockfile.FilterFileChannel.size(FilterFileChannel.java:85) ~[lucene-test-framework-8.2.0.jar:8.2.0 31d7ec7bbfdcd2c4cc61d9d35e962165410b65fe - ivera - 2019-07-19 15:05:58]\r\n1> \tat org.apache.lucene.store.NativeFSLockFactory$NativeFSLock.ensureValid(NativeFSLockFactory.java:182) ~[lucene-core-8.2.0.jar:8.2.0 31d7ec7bbfdcd2c4cc61d9d35e962165410b65fe - ivera - 2019-07-19 15:05:56]\r\n1> \tat org.elasticsearch.env.NodeEnvironment.assertEnvIsLocked(NodeEnvironment.java:1122) [main/:?]\r\n1> \tat org.elasticsearch.env.NodeEnvironment.availableShardPaths(NodeEnvironment.java:940) [main/:?]\r\n1> \tat org.elasticsearch.env.NodeEnvironment.deleteShardDirectoryUnderLock(NodeEnvironment.java:608) [main/:?]\r\n1> \tat org.elasticsearch.indices.IndicesService.deleteShardStore(IndicesService.java:829) [main/:?]\r\n1> \tat org.elasticsearch.index.IndexService.onShardClose(IndexService.java:507) [main/:?]\r\n1> \tat org.elasticsearch.index.IndexService$StoreCloseListener.accept(IndexService.java:594) [main/:?]\r\n1> \tat org.elasticsearch.index.IndexService$StoreCloseListener.accept(IndexService.java:581) [main/:?]\r\n1> \tat org.elasticsearch.index.store.Store.closeInternal(Store.java:434) [main/:?]\r\n1> \tat org.elasticsearch.index.store.Store$1.closeInternal(Store.java:159) [main/:?]\r\n...\r\n...\r\n```\r\n```\r\n\r\n[2019-08-16T05:56:29,429][WARN ][o.e.i.c.IndicesClusterStateService] [node_s1] [[test/Dzo_hTd0QPW3C-Z3bRj-8w]] failed to complete pending deletion for index\r\n--\r\n1> org.apache.lucene.store.AlreadyClosedException: FileLock invalidated by an external force: NativeFSLock(path=/var/lib/jenkins/workspace/elastic+elasticsearch+master+multijob+fast+part1/server/build/testrun/integTest/temp/org.elasticsearch.indices.state.SimpleIndexStateIT_27949ECA20AAFCA0-001/tempDir-002/node_s1/d0/node.lock,impl=sun.nio.ch.FileLockImpl[0:9223372036854775807 exclusive invalid],creationTime=2019-08-15T17:56:27.11435Z)\r\n1> \tat org.apache.lucene.store.NativeFSLockFactory$NativeFSLock.ensureValid(NativeFSLockFactory.java:178) ~[lucene-core-8.2.0.jar:8.2.0 31d7ec7bbfdcd2c4cc61d9d35e962165410b65fe - ivera - 2019-07-19 15:05:56]\r\n1> \tat org.elasticsearch.env.NodeEnvironment.assertEnvIsLocked(NodeEnvironment.java:1122) ~[main/:?]\r\n1> \tat org.elasticsearch.env.NodeEnvironment.indexPaths(NodeEnvironment.java:921) ~[main/:?]\r\n1> \tat org.elasticsearch.env.NodeEnvironment.deleteIndexDirectoryUnderLock(NodeEnvironment.java:686) ~[main/:?]\r\n1> \tat org.elasticsearch.indices.IndicesService.processPendingDeletes(IndicesService.java:1099) ~[main/:?]\r\n1> \tat org.elasticsearch.indices.cluster.IndicesClusterStateService$1.doRun(IndicesClusterStateService.java:410) [main/:?]\r\n1> \tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:769) [main/:8.0.0-SNAPSHOT]\r\n1> \tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [main/:8.0.0-SNAPSHOT]\r\n1> \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]\r\n1> \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]\r\n1> \tat java.lang.Thread.run(Thread.java:834) [?:?]\r\n...\r\n...\r\n```","performed_via_github_app":null}]