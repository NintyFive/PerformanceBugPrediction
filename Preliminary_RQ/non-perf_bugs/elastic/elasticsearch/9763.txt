{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/9763","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9763/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9763/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9763/events","html_url":"https://github.com/elastic/elasticsearch/issues/9763","id":58214795,"node_id":"MDU6SXNzdWU1ODIxNDc5NQ==","number":9763,"title":"Would be useful to be able to specify inner_hits at top level without specifying a query","user":{"login":"tstibbs","id":4869014,"node_id":"MDQ6VXNlcjQ4NjkwMTQ=","avatar_url":"https://avatars1.githubusercontent.com/u/4869014?v=4","gravatar_id":"","url":"https://api.github.com/users/tstibbs","html_url":"https://github.com/tstibbs","followers_url":"https://api.github.com/users/tstibbs/followers","following_url":"https://api.github.com/users/tstibbs/following{/other_user}","gists_url":"https://api.github.com/users/tstibbs/gists{/gist_id}","starred_url":"https://api.github.com/users/tstibbs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tstibbs/subscriptions","organizations_url":"https://api.github.com/users/tstibbs/orgs","repos_url":"https://api.github.com/users/tstibbs/repos","events_url":"https://api.github.com/users/tstibbs/events{/privacy}","received_events_url":"https://api.github.com/users/tstibbs/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"assignees":[{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2015-02-19T14:29:17Z","updated_at":"2018-02-14T13:27:04Z","closed_at":"2015-12-05T17:12:46Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I've been trying out the new 'nested_hits' stuff (see #8153, I built a 1.5 snapshot from commit 75b6d8e on the 1.x branch) and the two options for specifying it, and noticed that my use case seems to fall into a gap between the two options. Basically, I want to specify the inner_hits element at the top level, but I want it to return the inner hits based on the children that actually matched, rather than me specifying a whole new query (note I tried just leaving the query element out of the inner_hits bit, but that just seemed to return all my children regardless of whether they were part of the match).\n\nMy use case involves my users entering a query like this:\n\n> find a parent who has a child which is blue and another child which is red.\n\nSo my queries end up looking something like this (hopefully the pseudo-query-syntax made up for brevity will make sense to you): \n\n```\n(nested(blue)) AND (nested(red))\n```\n\nWhat would be really useful is a way to say “give me the three children that contributed most to the score of the overall result”. But I can’t see any way to do that with the current ways to specify the inner_hits element.\n\nOption one seems to be to specify inner hits for each of the nested queries. That will give me back three hits for each nested query so it’s difficult to tell which contributed most overall. I’d have to start taking the scores from the results for each nested query and combining them to work out which the top three matching children are. At which point I’m re-implementing a lot of lucene’s scoring maths. And it gets worse if the above query actually had “AND NOT” in it, or when the nested queries are deeply nested within boolean and constantscore queries.\n\nOption two seems to be to specify inner hits for the query as a whole. But I have to give it its own query – which means I have to somehow transform the query above into a new query. It would end up something like this:\n\n```\n(blue) OR (red)\n```\n\nNote it has to change from AND to OR because it needs to match the single child.\n\nTransforming the query sounds hard (particularly if I let my users enter an arbitrary query and try to transform it in code), and although I can’t come up with a compelling example I feel that it could result in highlights from children that didn’t actually contribute to the match of the parent. If transforming the query really is the right way to go about this, then maybe this logic should be put into elasticsearch (e.g. if you specify a top level inner_hits element but don’t specify a query, then it runs the main search query through the transformer and uses that for the inner_hits query). Regardless of whether I do this in my own code or whether it is done in elasticsearch, this approach has the problem that dealing with nested queries within nested queries could be tricky, and might require multiple levels of transformation.\n\nSo, another approach (sounds simpler but probably isn’t) might be to simply return the top x children that contributed most strongly to the parent match, regardless of how far down the tree of nested queries they are. So in my example above, I’d expect that a child containing both ‘blue’ and ‘red’ would be one of the top matches. This (I think, conceptually at least) is no different to lucene working out which fields matched most strongly in a document that matches a query with many levels of nested boolean queries. If this approach is possible, it sounds like it would be most robust than the transformer approach above.\n\nI’m not sure how much of what I’m proposing is even possible, or if my grasp of the situation is at all correct. I'd be interested to hear what people think.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}