{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/4745","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4745/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4745/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4745/events","html_url":"https://github.com/elastic/elasticsearch/issues/4745","id":25679253,"node_id":"MDU6SXNzdWUyNTY3OTI1Mw==","number":4745,"title":"Enabling \"_timestamp\" can cause bulk API to fail entire request instead of single operation","user":{"login":"carljm","id":61586,"node_id":"MDQ6VXNlcjYxNTg2","avatar_url":"https://avatars0.githubusercontent.com/u/61586?v=4","gravatar_id":"","url":"https://api.github.com/users/carljm","html_url":"https://github.com/carljm","followers_url":"https://api.github.com/users/carljm/followers","following_url":"https://api.github.com/users/carljm/following{/other_user}","gists_url":"https://api.github.com/users/carljm/gists{/gist_id}","starred_url":"https://api.github.com/users/carljm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/carljm/subscriptions","organizations_url":"https://api.github.com/users/carljm/orgs","repos_url":"https://api.github.com/users/carljm/repos","events_url":"https://api.github.com/users/carljm/events{/privacy}","received_events_url":"https://api.github.com/users/carljm/received_events","type":"User","site_admin":false},"labels":[{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":74293669,"node_id":"MDU6TGFiZWw3NDI5MzY2OQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.90.11","name":"v0.90.11","color":"DDDDDD","default":false,"description":null},{"id":76575635,"node_id":"MDU6TGFiZWw3NjU3NTYzNQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.0.0.RC2","name":"v1.0.0.RC2","color":"DDDDDD","default":false,"description":null},{"id":75962075,"node_id":"MDU6TGFiZWw3NTk2MjA3NQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.1.0","name":"v1.1.0","color":"DDDDDD","default":false,"description":null},{"id":76184120,"node_id":"MDU6TGFiZWw3NjE4NDEyMA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v2.0.0-beta1","name":"v2.0.0-beta1","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"assignees":[{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2014-01-15T20:29:06Z","updated_at":"2014-01-27T11:08:36Z","closed_at":"2014-01-27T10:35:21Z","author_association":"NONE","active_lock_reason":null,"body":"As I understand it, the intention of the bulk API is that individual operations may fail, but a failure in an individual operation should generally not cause the failure of all operations in the request.\n\nFirst let's verify that this is generally how it works. I am testing here with a simple case of malformed JSON (though I originally saw the problem with a subtler JSON-parsing issue of unexpected non-printable ASCII characters in JSON data).\n\n```\n$ curl -XPUT http://localhost:9200/testing/\n{\"ok\":true,\"acknowledged\":true}\n\n$ curl -XPUT http://localhost:9200/testing/person/_mapping -d '{\"person\": {\"dynamic\": \"strict\", \"properties\": {\"last_modified\": {\"type\": \"date\", \"format\": \"dateOptionalTime\"},\"name\": {\"type\": \"string\"}}}}'\n{\"ok\":true,\"acknowledged\":true}\n\n$ cat baddata.txt\n{\"index\": {\"_id\": \"1\"}}\n{\"name\": \"Malformed}\n{\"index\": {\"_id\": \"2\"}}\n{\"name\": \"Good\"}\n\n$ curl -XPOST http://localhost:9200/testing/person/_bulk --data-binary @baddata.txt\n{\"took\":72,\"items\":[{\"index\":{\"_index\":\"testing\",\"_type\":\"person\",\"_id\":\"1\",\"error\":\"MapperParsingException[failed to parse [name]]; nested: JsonParseException[Unexpected end-of-input in VALUE_STRING\\n at [Source: [B@27beb7ec; line: 1, column: 65]]; \"}},{\"index\":{\"_index\":\"testing\",\"_type\":\"person\",\"_id\":\"2\",\"_version\":1,\"ok\":true}}]}\n```\n\nThis worked correctly - one item failed with an error, the other succeeded, and we do indeed find one item indexed in a subsequent search.\n\nNow let's re-create that index and enable the magic \"_timestamp\" field this time:\n\n```\n$ curl -XDELETE http://localhost:9200/testing/\n{\"ok\":true,\"acknowledged\":true}\n\n$ curl -XPUT http://localhost:9200/testing/\n{\"ok\":true,\"acknowledged\":true}\n\n$ curl -XPUT $LOCAL/testing/person/_mapping -d '{\"person\": {\"_timestamp\": {\"enabled\": true, \"path\": \"last_modified\"}, \"dynamic\": \"strict\", \"properties\": {\"last_modified\": {\"type\": \"date\", \"format\": \"dateOptionalTime\"},\"name\": {\"type\": \"string\"}}}}'\n{\"ok\":true,\"acknowledged\":true}\n\n$ curl -XPOST $LOCAL/testing/person/_bulk --data-binary @baddata.txt\n{\"error\":\"ElasticSearchParseException[failed to parse doc to extract routing/timestamp]; nested: JsonParseException[Unexpected end-of-input in VALUE_STRING\\n at [Source: [B@68f55ff2; line: 1, column: 65]]; \",\"status\":400}\n```\n\nThis time the entire request errors out and returns a 400 response code, and no items are successfully indexed.\n\nSince the malformed JSON is limited to a single action in the bulk request, I would expect only that action to fail, regardless of whether the \"_timestamp\" magic field is enabled or not.\n\nTested against latest ElasticSearch release:\n\n```\n$ curl http://localhost:9200\n{\n  \"ok\" : true,\n  \"status\" : 200,\n  \"name\" : \"Pip the Troll\",\n  \"version\" : {\n    \"number\" : \"0.90.10\",\n    \"build_hash\" : \"0a5781f44876e8d1c30b6360628d59cb2a7a2bbb\",\n    \"build_timestamp\" : \"2014-01-10T10:18:37Z\",\n    \"build_snapshot\" : false,\n    \"lucene_version\" : \"4.6\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n}\n```\n","closed_by":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"performed_via_github_app":null}