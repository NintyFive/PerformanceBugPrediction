[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/224024429","html_url":"https://github.com/elastic/elasticsearch/issues/18738#issuecomment-224024429","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18738","id":224024429,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNDAyNDQyOQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-06-06T17:14:44Z","updated_at":"2016-06-06T17:14:44Z","author_association":"CONTRIBUTOR","body":"@markharwood could you take a look please?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/224033179","html_url":"https://github.com/elastic/elasticsearch/issues/18738#issuecomment-224033179","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18738","id":224033179,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNDAzMzE3OQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-06-06T17:45:06Z","updated_at":"2016-06-06T17:45:06Z","author_association":"CONTRIBUTOR","body":"I see the foreground and background sets do not overlap at all in terms of documents.\nIs it conceivable that the category fields used in the foreground set were not used at all in the background set? That would certainly be a significant change (nothing to 29754 sales). In my tests I see bg_count as >0 except for when the foreground set terms do not exist in the background set.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/224491126","html_url":"https://github.com/elastic/elasticsearch/issues/18738#issuecomment-224491126","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18738","id":224491126,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNDQ5MTEyNg==","user":{"login":"ryanrozich","id":3526287,"node_id":"MDQ6VXNlcjM1MjYyODc=","avatar_url":"https://avatars3.githubusercontent.com/u/3526287?v=4","gravatar_id":"","url":"https://api.github.com/users/ryanrozich","html_url":"https://github.com/ryanrozich","followers_url":"https://api.github.com/users/ryanrozich/followers","following_url":"https://api.github.com/users/ryanrozich/following{/other_user}","gists_url":"https://api.github.com/users/ryanrozich/gists{/gist_id}","starred_url":"https://api.github.com/users/ryanrozich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ryanrozich/subscriptions","organizations_url":"https://api.github.com/users/ryanrozich/orgs","repos_url":"https://api.github.com/users/ryanrozich/repos","events_url":"https://api.github.com/users/ryanrozich/events{/privacy}","received_events_url":"https://api.github.com/users/ryanrozich/received_events","type":"User","site_admin":false},"created_at":"2016-06-08T05:25:22Z","updated_at":"2016-06-08T05:25:22Z","author_association":"NONE","body":"Thanks @markharwood for taking a look here.\n\nWhat I am doing in this example is comparing log events from a previous time period to a current time period, so you are right the foreground and background do not overlap in terms of documents. However, I have verified that these terms do exist in the background set through a second query.\n\nHere is an example using region as the field for aggregating significant terms\n\n**Request**\n\n``` json\n{\n  \"size\" : 0,\n  \"query\" : {\n    \"bool\" : {\n      \"filter\" : {\n        \"range\" : {\n          \"createdAt\" : {\n            \"from\" : \"2016-05-19\",\n            \"to\" : \"2016-05-25\",\n            \"include_lower\" : true,\n            \"include_upper\" : true\n          }\n        }\n      }\n    }\n  },\n  \"aggregations\" : {\n    \"significant_categories\" : {\n      \"significant_terms\" : {\n        \"field\" : \"geoip.real_region_name.raw\",\n        \"size\" : 20,\n        \"background_filter\" : {\n          \"range\" : {\n            \"createdAt\" : {\n              \"from\" : \"2016-05-12\",\n              \"to\" : \"2016-05-18\",\n              \"include_lower\" : true,\n              \"include_upper\" : true\n            }\n          }\n        },\n        \"mutual_information\" : {\n          \"include_negatives\" : true,\n          \"background_is_superset\" : false\n        }\n      }\n    }\n  }\n}\n```\n\n**Response**\n\n``` json\n{\n  \"took\" : 40,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 18,\n    \"successful\" : 18,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 543817,\n    \"max_score\" : 0.0,\n    \"hits\" : [ ]\n  },\n  \"aggregations\" : {\n    \"significant_categories\" : {\n      \"doc_count\" : 543817,\n      \"buckets\" : [ {\n        \"key\" : \"California\",\n        \"doc_count\" : 40928,\n        \"score\" : 0.03900360479716631,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"New York\",\n        \"doc_count\" : 24273,\n        \"score\" : 0.0228697776932465,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"Florida\",\n        \"doc_count\" : 19577,\n        \"score\" : 0.018386887777233945,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"New Jersey\",\n        \"doc_count\" : 12524,\n        \"score\" : 0.011707184425668314,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"Massachusetts\",\n        \"doc_count\" : 11555,\n        \"score\" : 0.01079440443731854,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"Illinois\",\n        \"doc_count\" : 10948,\n        \"score\" : 0.010223223979040349,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"Indiana\",\n        \"doc_count\" : 9297,\n        \"score\" : 0.00867199072530764,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"Michigan\",\n        \"doc_count\" : 7680,\n        \"score\" : 0.007156007888300512,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"Connecticut\",\n        \"doc_count\" : 7320,\n        \"score\" : 0.006818941429226905,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"Georgia\",\n        \"doc_count\" : 7103,\n        \"score\" : 0.006615843146036082,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"Colorado\",\n        \"doc_count\" : 6712,\n        \"score\" : 0.006250039611369389,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"Arizona\",\n        \"doc_count\" : 6609,\n        \"score\" : 0.006153708646216918,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"Minnesota\",\n        \"doc_count\" : 6590,\n        \"score\" : 0.00613594029555656,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"Maryland\",\n        \"doc_count\" : 6420,\n        \"score\" : 0.005976980257079576,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"Missouri\",\n        \"doc_count\" : 5485,\n        \"score\" : 0.0051033406093923235,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"British Columbia\",\n        \"doc_count\" : 5466,\n        \"score\" : 0.005085598730652028,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"North Carolina\",\n        \"doc_count\" : 4702,\n        \"score\" : 0.004372558367334927,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"Louisiana\",\n        \"doc_count\" : 4329,\n        \"score\" : 0.0040246998498886764,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"Nevada\",\n        \"doc_count\" : 2683,\n        \"score\" : 0.0024916935042830425,\n        \"bg_count\" : 0\n      }, {\n        \"key\" : \"Alabama\",\n        \"doc_count\" : 2592,\n        \"score\" : 0.002407037622030747,\n        \"bg_count\" : 0\n      } ]\n    }\n  }\n}\n```\n\nNotice that the `bg_count` is always zero in each bucket. So I've created a follow up query with a `filters` aggregtion over the background set to get the actual counts for each bucket. See request and response below:\n\n**Request**\n\n``` json\n{\n  \"size\" : 0,\n  \"query\" : {\n    \"bool\" : {\n      \"filter\" : [ {\n        \"terms\" : {\n          \"geoip.real_region_name.raw\" : [ \"North Carolina\", \"New York\", \"Indiana\", \"Minnesota\", \"British Columbia\", \"California\", \"Florida\", \"Alabama\", \"New Jersey\", \"Michigan\", \"Massachusetts\", \"Illinois\", \"Colorado\", \"Connecticut\", \"Missouri\", \"Louisiana\", \"Georgia\", \"Maryland\", \"Arizona\", \"Nevada\" ]\n        }\n      }, {\n        \"range\" : {\n          \"createdAt\" : {\n            \"from\" : \"2016-05-12\",\n            \"to\" : \"2016-05-18\",\n            \"include_lower\" : true,\n            \"include_upper\" : true\n          }\n        }\n      } ]\n    }\n  },\n  \"aggregations\" : {\n    \"sigterms\" : {\n      \"filters\" : {\n        \"filters\" : {\n          \"California\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"California\"\n            }\n          },\n          \"New York\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"New York\"\n            }\n          },\n          \"Florida\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"Florida\"\n            }\n          },\n          \"New Jersey\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"New Jersey\"\n            }\n          },\n          \"Massachusetts\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"Massachusetts\"\n            }\n          },\n          \"Illinois\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"Illinois\"\n            }\n          },\n          \"Indiana\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"Indiana\"\n            }\n          },\n          \"Michigan\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"Michigan\"\n            }\n          },\n          \"Connecticut\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"Connecticut\"\n            }\n          },\n          \"Georgia\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"Georgia\"\n            }\n          },\n          \"Colorado\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"Colorado\"\n            }\n          },\n          \"Arizona\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"Arizona\"\n            }\n          },\n          \"Minnesota\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"Minnesota\"\n            }\n          },\n          \"Maryland\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"Maryland\"\n            }\n          },\n          \"Missouri\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"Missouri\"\n            }\n          },\n          \"British Columbia\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"British Columbia\"\n            }\n          },\n          \"North Carolina\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"North Carolina\"\n            }\n          },\n          \"Louisiana\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"Louisiana\"\n            }\n          },\n          \"Nevada\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"Nevada\"\n            }\n          },\n          \"Alabama\" : {\n            \"term\" : {\n              \"geoip.real_region_name.raw\" : \"Alabama\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n**Response**\n\n``` json\n{\n  \"took\" : 18,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 18,\n    \"successful\" : 18,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 214123,\n    \"max_score\" : 0.0,\n    \"hits\" : [ ]\n  },\n  \"aggregations\" : {\n    \"sigterms\" : {\n      \"buckets\" : {\n        \"California\" : {\n          \"doc_count\" : 39262\n        },\n        \"New York\" : {\n          \"doc_count\" : 25489\n        },\n        \"Florida\" : {\n          \"doc_count\" : 20512\n        },\n        \"New Jersey\" : {\n          \"doc_count\" : 14308\n        },\n        \"Massachusetts\" : {\n          \"doc_count\" : 13731\n        },\n        \"Illinois\" : {\n          \"doc_count\" : 12788\n        },\n        \"Indiana\" : {\n          \"doc_count\" : 4603\n        },\n        \"Michigan\" : {\n          \"doc_count\" : 9815\n        },\n        \"Connecticut\" : {\n          \"doc_count\" : 4457\n        },\n        \"Georgia\" : {\n          \"doc_count\" : 7617\n        },\n        \"Colorado\" : {\n          \"doc_count\" : 8229\n        },\n        \"Arizona\" : {\n          \"doc_count\" : 7056\n        },\n        \"Minnesota\" : {\n          \"doc_count\" : 7485\n        },\n        \"Maryland\" : {\n          \"doc_count\" : 7218\n        },\n        \"Missouri\" : {\n          \"doc_count\" : 6259\n        },\n        \"British Columbia\" : {\n          \"doc_count\" : 5440\n        },\n        \"North Carolina\" : {\n          \"doc_count\" : 10301\n        },\n        \"Louisiana\" : {\n          \"doc_count\" : 3819\n        },\n        \"Nevada\" : {\n          \"doc_count\" : 3140\n        },\n        \"Alabama\" : {\n          \"doc_count\" : 2594\n        }\n      }\n    }\n  }\n}\n```\n\nNotice that when I query the background set directly for doc counts using this secondary query and a `filters` aggregation I can get the actual counts in the background set. I would have expected these to be the counts that were returned in the `bg_count` field of the significant terms result. \n\nMy use case here is looking for anomalies in a current time period versus a previous time period (i.e. what is trending up or down). My intention is to produce reports from the query above like:\n\n```\nCalifornia change:   +8.36% significance score: 0.039004\n             *  cur_wk:  7.53% (   40,928 views out of   543,817)\n             * prev_wk:  6.95% (   39,262 views out of   565,291)\n\n  New York change:   -1.01% significance score: 0.022870\n             *  cur_wk:  4.46% (   24,273 views out of   543,817)\n             * prev_wk:  4.51% (   25,489 views out of   565,291)\n\n   Florida change:   -0.79% significance score: 0.018387\n             *  cur_wk:  3.60% (   19,577 views out of   543,817)\n             * prev_wk:  3.63% (   20,512 views out of   565,291)\n\nNew Jersey change:   -9.01% significance score: 0.011707\n             *  cur_wk:  2.30% (   12,524 views out of   543,817)\n             * prev_wk:  2.53% (   14,308 views out of   565,291)\n\nMassachusetts change:  -12.52% significance score: 0.010794\n             *  cur_wk:  2.12% (   11,555 views out of   543,817)\n             * prev_wk:  2.43% (   13,731 views out of   565,291)\n\n  Illinois change:  -11.01% significance score: 0.010223\n             *  cur_wk:  2.01% (   10,948 views out of   543,817)\n             * prev_wk:  2.26% (   12,788 views out of   565,291)\n\n   Indiana change: +109.95% significance score: 0.008672\n             *  cur_wk:  1.71% (    9,297 views out of   543,817)\n             * prev_wk:  0.81% (    4,603 views out of   565,291)\n\n  Michigan change:  -18.66% significance score: 0.007156\n             *  cur_wk:  1.41% (    7,680 views out of   543,817)\n             * prev_wk:  1.74% (    9,815 views out of   565,291)\n\nConnecticut change:  +70.72% significance score: 0.006819\n             *  cur_wk:  1.35% (    7,320 views out of   543,817)\n             * prev_wk:  0.79% (    4,457 views out of   565,291)\n\n   Georgia change:   -3.07% significance score: 0.006616\n             *  cur_wk:  1.31% (    7,103 views out of   543,817)\n             * prev_wk:  1.35% (    7,617 views out of   565,291)\n\n  Colorado change:  -15.21% significance score: 0.006250\n             *  cur_wk:  1.23% (    6,712 views out of   543,817)\n             * prev_wk:  1.46% (    8,229 views out of   565,291)\n\n   Arizona change:   -2.64% significance score: 0.006154\n             *  cur_wk:  1.22% (    6,609 views out of   543,817)\n             * prev_wk:  1.25% (    7,056 views out of   565,291)\n\n Minnesota change:   -8.48% significance score: 0.006136\n             *  cur_wk:  1.21% (    6,590 views out of   543,817)\n             * prev_wk:  1.32% (    7,485 views out of   565,291)\n\n  Maryland change:   -7.54% significance score: 0.005977\n             *  cur_wk:  1.18% (    6,420 views out of   543,817)\n             * prev_wk:  1.28% (    7,218 views out of   565,291)\n\n  Missouri change:   -8.91% significance score: 0.005103\n             *  cur_wk:  1.01% (    5,485 views out of   543,817)\n             * prev_wk:  1.11% (    6,259 views out of   565,291)\n\nBritish Columbia change:   +4.45% significance score: 0.005086\n             *  cur_wk:  1.01% (    5,466 views out of   543,817)\n             * prev_wk:  0.96% (    5,440 views out of   565,291)\n\nNorth Carolina change:  -52.55% significance score: 0.004373\n             *  cur_wk:  0.86% (    4,702 views out of   543,817)\n             * prev_wk:  1.82% (   10,301 views out of   565,291)\n\n Louisiana change:  +17.83% significance score: 0.004025\n             *  cur_wk:  0.80% (    4,329 views out of   543,817)\n             * prev_wk:  0.68% (    3,819 views out of   565,291)\n\n    Nevada change:  -11.18% significance score: 0.002492\n             *  cur_wk:  0.49% (    2,683 views out of   543,817)\n             * prev_wk:  0.56% (    3,140 views out of   565,291)\n\n   Alabama change:   +3.87% significance score: 0.002407\n             *  cur_wk:  0.48% (    2,592 views out of   543,817)\n             * prev_wk:  0.46% (    2,594 views out of   565,291)\n\n```\n\nWithout the `bg_count` I cannot calculate the proportion of events in the previous week and therefore cannot calculate the relative change week over week. The secondary query/aggregation is what I need to do for the time being to get this count.\n\nThis secondary query is a fine stopgap for a simple example like this, but as I want to do more advanced things like start nesting significant terms aggregations, having to do 2-stage queries for each bucket and each of the sub-buckets starts to get messy and expensive.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/224532610","html_url":"https://github.com/elastic/elasticsearch/issues/18738#issuecomment-224532610","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18738","id":224532610,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNDUzMjYxMA==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-06-08T09:08:57Z","updated_at":"2016-06-08T09:08:57Z","author_association":"CONTRIBUTOR","body":"I can't reproduce on 2.3.2 and using REST api.\n\nWe can either work back from your broken system's config, removing config/data until it works or build up from a simpler working example adding data/config that is the same as your system until it breaks.\n\nHere's my simple example which works with a single shard/node and also multiple shards and nodes\n\n```\nDELETE test\nPUT test\n{\n   \"settings\": {\n      \"number_of_replicas\": \"0\",\n      \"number_of_shards\": \"1\"\n   },\n   \"mappings\": {\n      \"doc\": {\n         \"properties\": {\n            \"state\": {\n               \"type\": \"string\",\n               \"index\": \"not_analyzed\"\n            },\n            \"date\": {\n               \"type\": \"date\",\n               \"format\": \"yyyy-MM-dd\"\n            }\n         }\n      }\n   }\n}\nPOST test/doc\n{ \"state\":\"MA\", \"date\":\"2016-05-12\" }\nPOST test/doc\n{ \"state\":\"CA\", \"date\":\"2016-05-12\" }\nPOST test/doc\n{ \"state\":\"CA\", \"date\":\"2016-05-13\" }\nPOST test/doc\n{ \"state\":\"CA\", \"date\":\"2016-05-14\" }\n\nPOST test/doc\n{ \"state\":\"MA\", \"date\":\"2016-05-19\" }\nPOST test/doc\n{ \"state\":\"CA\", \"date\":\"2016-05-19\" }\nPOST test/doc\n{ \"state\":\"CA\", \"date\":\"2016-05-20\" }\nPOST test/doc\n{ \"state\":\"CA\", \"date\":\"2016-05-21\" }\nPOST test/doc\n{ \"state\":\"CA\", \"date\":\"2016-05-22\" }\n\nPOST test/_search\n{\n   \"query\": {\n      \"bool\": {\n         \"filter\": {\n            \"range\": {\n               \"date\": {\n                  \"from\": \"2016-05-19\",\n                  \"to\": \"2016-05-25\",\n                  \"include_lower\": true,\n                  \"include_upper\": true\n               }\n            }\n         }\n      }\n   },\n   \"size\": 0,\n   \"aggs\": {\n      \"keywords\": {\n         \"significant_terms\": {\n            \"field\": \"state\",\n            \"background_filter\": {\n               \"range\": {\n                  \"date\": {\n                     \"from\": \"2016-05-12\",\n                     \"to\": \"2016-05-18\",\n                     \"include_lower\": true,\n                     \"include_upper\": true\n                  }\n               }\n            },\n            \"mutual_information\": {\n               \"include_negatives\": true,\n               \"background_is_superset\": false\n            }\n         }\n      }\n   }\n}\n```\n\nCan you help play spot-the-difference with your setup?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/224585563","html_url":"https://github.com/elastic/elasticsearch/issues/18738#issuecomment-224585563","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18738","id":224585563,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNDU4NTU2Mw==","user":{"login":"ryanrozich","id":3526287,"node_id":"MDQ6VXNlcjM1MjYyODc=","avatar_url":"https://avatars3.githubusercontent.com/u/3526287?v=4","gravatar_id":"","url":"https://api.github.com/users/ryanrozich","html_url":"https://github.com/ryanrozich","followers_url":"https://api.github.com/users/ryanrozich/followers","following_url":"https://api.github.com/users/ryanrozich/following{/other_user}","gists_url":"https://api.github.com/users/ryanrozich/gists{/gist_id}","starred_url":"https://api.github.com/users/ryanrozich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ryanrozich/subscriptions","organizations_url":"https://api.github.com/users/ryanrozich/orgs","repos_url":"https://api.github.com/users/ryanrozich/repos","events_url":"https://api.github.com/users/ryanrozich/events{/privacy}","received_events_url":"https://api.github.com/users/ryanrozich/received_events","type":"User","site_admin":false},"created_at":"2016-06-08T13:17:47Z","updated_at":"2016-06-08T13:18:13Z","author_association":"NONE","body":"One difference might be that I am using a logstash-style index with one shard per day. So in this case my foreground and background set data would exist on separate shards, could that make a difference?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/224592182","html_url":"https://github.com/elastic/elasticsearch/issues/18738#issuecomment-224592182","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18738","id":224592182,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNDU5MjE4Mg==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-06-08T13:41:46Z","updated_at":"2016-06-08T13:42:05Z","author_association":"CONTRIBUTOR","body":"> t I am using a logstash-style index with one shard per day.\n\nTo be clear, presumably one _index_ per day, not shard.\n\n> could that make a difference?\n\nYes. In the simple case if you were looking at this Thursday Vs last Thursday and had daily indices each shard would either have a zero-sized foreground or zero-sized background. If the former it would return no results (nothing matched the query) and if the latter it would return bg_count ==0 which is what you are seeing.\n\nThere's an assumption in significant_terms that each shard has a reasonable mix of both foreground and background data from which we can spot promising changes locally. If your data/queries are not organised this way it won't work well.\n\nGiven your data layout you're probably better advised to issue a single query and return two filtered aggregations one for the states in the current time range and one for the states in the historic time range and diff the values using your own code.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/224722657","html_url":"https://github.com/elastic/elasticsearch/issues/18738#issuecomment-224722657","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18738","id":224722657,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNDcyMjY1Nw==","user":{"login":"ryanrozich","id":3526287,"node_id":"MDQ6VXNlcjM1MjYyODc=","avatar_url":"https://avatars3.githubusercontent.com/u/3526287?v=4","gravatar_id":"","url":"https://api.github.com/users/ryanrozich","html_url":"https://github.com/ryanrozich","followers_url":"https://api.github.com/users/ryanrozich/followers","following_url":"https://api.github.com/users/ryanrozich/following{/other_user}","gists_url":"https://api.github.com/users/ryanrozich/gists{/gist_id}","starred_url":"https://api.github.com/users/ryanrozich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ryanrozich/subscriptions","organizations_url":"https://api.github.com/users/ryanrozich/orgs","repos_url":"https://api.github.com/users/ryanrozich/repos","events_url":"https://api.github.com/users/ryanrozich/events{/privacy}","received_events_url":"https://api.github.com/users/ryanrozich/received_events","type":"User","site_admin":false},"created_at":"2016-06-08T20:48:30Z","updated_at":"2016-06-08T20:48:30Z","author_association":"NONE","body":"Thanks Mark.\n\nIf the significant terms are calculated per-shard, its surprising that I am getting any results back at all, since none of the shards will contain examples from both foreground and background sets. What terms am I getting returned in these examples?\n\nFor examples like states with low cardinality its feasible to do two filter aggregations and do the diff in memory, but some fields have very high cardinality (tens of thousands of terms). Are there any other suggestions on looking for date-range-based anomalies for indexes that are partitioned by date?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/224738523","html_url":"https://github.com/elastic/elasticsearch/issues/18738#issuecomment-224738523","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18738","id":224738523,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNDczODUyMw==","user":{"login":"ryanrozich","id":3526287,"node_id":"MDQ6VXNlcjM1MjYyODc=","avatar_url":"https://avatars3.githubusercontent.com/u/3526287?v=4","gravatar_id":"","url":"https://api.github.com/users/ryanrozich","html_url":"https://github.com/ryanrozich","followers_url":"https://api.github.com/users/ryanrozich/followers","following_url":"https://api.github.com/users/ryanrozich/following{/other_user}","gists_url":"https://api.github.com/users/ryanrozich/gists{/gist_id}","starred_url":"https://api.github.com/users/ryanrozich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ryanrozich/subscriptions","organizations_url":"https://api.github.com/users/ryanrozich/orgs","repos_url":"https://api.github.com/users/ryanrozich/repos","events_url":"https://api.github.com/users/ryanrozich/events{/privacy}","received_events_url":"https://api.github.com/users/ryanrozich/received_events","type":"User","site_admin":false},"created_at":"2016-06-08T21:43:35Z","updated_at":"2016-06-08T21:43:35Z","author_association":"NONE","body":"From your comment on significant terms assuming that each shard needing to have a reasonable mix of foreground and background data to spot changes locally, I assumed that the buckets I was getting back were meaningless since this is never the case in my examples. \n\nHowever, it actually looks like these buckets do represent significant differences between the two date ranges. For instance here is example output based on referrer site\n\n```\n Views coming from referrer site buzzfeed.com changed by +1002.89% over the previous period (significance score: 0.004579)\n     *  cur_wk:  0.91% (    4,923 views out of   543,817)\n     * prev_wk:  0.08% (      464 views out of   565,291)\n```\n\nTaking a quick look in kibana at the foreground and background date range, there does seem to be a very significant difference between the foreground and background sets\n\n![kibana screenshot](https://gmkr.io/s/57588e718e519a8474c1e0a3/0)\n\nI did have to look up the background count in the separate query with the secondary filter query, but isn't it odd that the significant terms aggregation called this out, given how my indexes are partitioned?\n\nJust to check if I got lucky with this other example, I looked at another:\n\n```\n Views coming from referrer site facebook.com changed by  -30.27% over the previous period (significance score: 0.009720)\n     *  cur_wk:  1.91% (   10,413 views out of   543,817)\n     * prev_wk:  2.75% (   15,523 views out of   565,291)\n```\n\nvisualizing the data in kibana again shows that there is indeed a negative trend between the background and foreground sets\n\n![Screenshot of Kibana](https://gmkr.io/s/57589030cf468e6678b1e0c2/0)\n\nI did this for several of the other top significant terms buckets, they all seem to represent real significant differences in the foreground and background sets. I'm wondering how this could be, given that on each shard, the foreground count=0 or background count=0?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/224831918","html_url":"https://github.com/elastic/elasticsearch/issues/18738#issuecomment-224831918","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18738","id":224831918,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNDgzMTkxOA==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-06-09T08:30:24Z","updated_at":"2016-06-09T08:30:24Z","author_association":"CONTRIBUTOR","body":"> What terms am I getting returned in these examples?\n\nFrom shards with no foreground you'll get no results.\nFrom shards with no background, some significance heuristics I expect will throw an error. You have opted for mutual information and set the `background_is_superset` to false meaning that it should expect foreground and background numbers to be independent. In the absence of _any_ background stats it looks like this heuristic would simply rank based on straight foreground popularity.\n\n> Are there any other suggestions on looking for date-range-based anomalies for indexes that are partitioned by date?\n\nIf you could introduce just one dummy document into each shard that listed all states and had a dummy=true flag on it you could change your foreground query to be dateRange=X OR dummy=true. This would have the effect of always bringing each state into the foreground set at least once regardless if the shard was in the desired date range. That then means each shard would always return foreground and background stats and the final answer computed on the reduce node would have all the background stats - they would just be off by one because of the dummy doc.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225581602","html_url":"https://github.com/elastic/elasticsearch/issues/18738#issuecomment-225581602","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18738","id":225581602,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTU4MTYwMg==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-06-13T13:33:00Z","updated_at":"2016-06-13T13:33:00Z","author_association":"CONTRIBUTOR","body":"Currently working as-designed and although it would be nice to have a fix we don't see an easy work-around from the elastic side. My last comment offers a possible solution although this is less than ideal.\n\nClosing for now but I can re-open if we have any further bright ideas.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/226179805","html_url":"https://github.com/elastic/elasticsearch/issues/18738#issuecomment-226179805","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18738","id":226179805,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNjE3OTgwNQ==","user":{"login":"ryanrozich","id":3526287,"node_id":"MDQ6VXNlcjM1MjYyODc=","avatar_url":"https://avatars3.githubusercontent.com/u/3526287?v=4","gravatar_id":"","url":"https://api.github.com/users/ryanrozich","html_url":"https://github.com/ryanrozich","followers_url":"https://api.github.com/users/ryanrozich/followers","following_url":"https://api.github.com/users/ryanrozich/following{/other_user}","gists_url":"https://api.github.com/users/ryanrozich/gists{/gist_id}","starred_url":"https://api.github.com/users/ryanrozich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ryanrozich/subscriptions","organizations_url":"https://api.github.com/users/ryanrozich/orgs","repos_url":"https://api.github.com/users/ryanrozich/repos","events_url":"https://api.github.com/users/ryanrozich/events{/privacy}","received_events_url":"https://api.github.com/users/ryanrozich/received_events","type":"User","site_admin":false},"created_at":"2016-06-15T13:01:10Z","updated_at":"2016-06-15T13:01:10Z","author_association":"NONE","body":"Thanks Mark for the help and explanations. It would be great in the future to be able to have significant terms work for looking for differences in date ranges on dat-partitioned indexes, but for now I'll do the diffs in code. At least I can use the elasticsearch SignificanceHeurisitic implementations so I don't have to re-implement all the math.\n","performed_via_github_app":null}]