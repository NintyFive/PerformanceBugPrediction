[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274539754","html_url":"https://github.com/elastic/elasticsearch/issues/22732#issuecomment-274539754","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22732","id":274539754,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDUzOTc1NA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-01-23T16:36:05Z","updated_at":"2017-01-23T16:36:05Z","author_association":"CONTRIBUTOR","body":"Hi @hanan-levy-sp \r\n\r\nCould you expand more about your use case and practically how you would use this feature?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274578987","html_url":"https://github.com/elastic/elasticsearch/issues/22732#issuecomment-274578987","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22732","id":274578987,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDU3ODk4Nw==","user":{"login":"hanan-levy-sp","id":15210086,"node_id":"MDQ6VXNlcjE1MjEwMDg2","avatar_url":"https://avatars2.githubusercontent.com/u/15210086?v=4","gravatar_id":"","url":"https://api.github.com/users/hanan-levy-sp","html_url":"https://github.com/hanan-levy-sp","followers_url":"https://api.github.com/users/hanan-levy-sp/followers","following_url":"https://api.github.com/users/hanan-levy-sp/following{/other_user}","gists_url":"https://api.github.com/users/hanan-levy-sp/gists{/gist_id}","starred_url":"https://api.github.com/users/hanan-levy-sp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanan-levy-sp/subscriptions","organizations_url":"https://api.github.com/users/hanan-levy-sp/orgs","repos_url":"https://api.github.com/users/hanan-levy-sp/repos","events_url":"https://api.github.com/users/hanan-levy-sp/events{/privacy}","received_events_url":"https://api.github.com/users/hanan-levy-sp/received_events","type":"User","site_admin":false},"created_at":"2017-01-23T18:44:29Z","updated_at":"2017-01-23T18:44:29Z","author_association":"NONE","body":"Sure. \r\n\r\nAssume you're indexing large amounts of data, in very big documents - so you won't be able to store the actual data, and would also like to exclude it from the _source field. \r\n\r\nLet say you wish to find a sequence of 4 terms, that match particular regular expression. \r\nfor instance - a master card number sequence. \r\nYou could create 4 span multi queries - with an underlying regex query - and join them all in a SpanNear, ordered query with a slope of 0. \r\n\r\nThat would give you the doc_id of all document that contain such a sequence. \r\nHowever, if you wanted to know the actual sequence that matched the SpanNearQuery. For example, if you want to verify that the matched terms actually constitute a valid credit card number (let's say you're monitoring sensitive information for security, classification and remediation purposes) you would have to run a verification algorithm, on the actual terms. You'd have to join the 4 consecutive terms, into a card number and verify it by the Luhn verification algorithm. \r\n\r\nYou can't use highlighting - since you cannot store the actual data, and won't store it since its too big-  and you've excluded it from the _source. \r\n\r\nOne way of getting the data is based on Spans, and term vectors. \r\nThe spans information form the SpanNear query, will contain the position information for each matching sequence (and for each term within that sequence) - in every document that matched it. \r\n\r\nusing this position information you can than access the term vector of that specific field, in that specific document, and retrieve the actual terms. \r\n\r\nThere are probably tons of other situation in which you'd want to access the actual term, in a specific position. \r\n\r\nAnd since there's already access to that information - it's a shame not to make available for use.\r\nThe Lucene's Span Queries all expose the getSpans method as a public method, and you can easily access it using Lucene. \r\nI don't think you can do that in Elasticsearch. (Do correct me if I'm wrong - It would be super helpful! )\r\n\r\nA good response in my view would be a  JSON array, containing all spans objects for each hit document, where each span object contains the Start and End position of each document. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274616191","html_url":"https://github.com/elastic/elasticsearch/issues/22732#issuecomment-274616191","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22732","id":274616191,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDYxNjE5MQ==","user":{"login":"hanan-levy-sp","id":15210086,"node_id":"MDQ6VXNlcjE1MjEwMDg2","avatar_url":"https://avatars2.githubusercontent.com/u/15210086?v=4","gravatar_id":"","url":"https://api.github.com/users/hanan-levy-sp","html_url":"https://github.com/hanan-levy-sp","followers_url":"https://api.github.com/users/hanan-levy-sp/followers","following_url":"https://api.github.com/users/hanan-levy-sp/following{/other_user}","gists_url":"https://api.github.com/users/hanan-levy-sp/gists{/gist_id}","starred_url":"https://api.github.com/users/hanan-levy-sp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanan-levy-sp/subscriptions","organizations_url":"https://api.github.com/users/hanan-levy-sp/orgs","repos_url":"https://api.github.com/users/hanan-levy-sp/repos","events_url":"https://api.github.com/users/hanan-levy-sp/events{/privacy}","received_events_url":"https://api.github.com/users/hanan-levy-sp/received_events","type":"User","site_admin":false},"created_at":"2017-01-23T21:03:52Z","updated_at":"2017-01-23T21:03:52Z","author_association":"NONE","body":"In the last line: \r\n\" the Start and End position of each\" matched  **span **   within the document - of course. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/276020089","html_url":"https://github.com/elastic/elasticsearch/issues/22732#issuecomment-276020089","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22732","id":276020089,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjAyMDA4OQ==","user":{"login":"hanan-levy-sp","id":15210086,"node_id":"MDQ6VXNlcjE1MjEwMDg2","avatar_url":"https://avatars2.githubusercontent.com/u/15210086?v=4","gravatar_id":"","url":"https://api.github.com/users/hanan-levy-sp","html_url":"https://github.com/hanan-levy-sp","followers_url":"https://api.github.com/users/hanan-levy-sp/followers","following_url":"https://api.github.com/users/hanan-levy-sp/following{/other_user}","gists_url":"https://api.github.com/users/hanan-levy-sp/gists{/gist_id}","starred_url":"https://api.github.com/users/hanan-levy-sp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanan-levy-sp/subscriptions","organizations_url":"https://api.github.com/users/hanan-levy-sp/orgs","repos_url":"https://api.github.com/users/hanan-levy-sp/repos","events_url":"https://api.github.com/users/hanan-levy-sp/events{/privacy}","received_events_url":"https://api.github.com/users/hanan-levy-sp/received_events","type":"User","site_admin":false},"created_at":"2017-01-30T09:52:53Z","updated_at":"2017-01-30T09:52:53Z","author_association":"NONE","body":"Any Thoughts? ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/277246815","html_url":"https://github.com/elastic/elasticsearch/issues/22732#issuecomment-277246815","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22732","id":277246815,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzI0NjgxNQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-02-03T13:30:09Z","updated_at":"2017-02-03T13:30:09Z","author_association":"MEMBER","body":">That would give you the doc_id of all document that contain such a sequence.\r\nHowever, if you wanted to know the actual sequence that matched the SpanNearQuery. For example, if you want to verify that the matched terms actually constitute a valid credit card number (let's say you're monitoring sensitive information for security, classification and remediation purposes) you would have to run a verification algorithm, on the actual terms. You'd have to join the 4 consecutive terms, into a card number and verify it by the Luhn verification algorithm.\r\n\r\n@hanan-levy-sp the response contains only the top document that match the query. So what you describes here would be achievable in a custom query rather than just returning the positions in the response. You could for instance write a plugin that defines a new `credit card query` extending `Query` and implemented with the two-phase execution of the `Scorer` API. The first phase would just select the docs that match the `SpanNear` query and the second phase could just runs a verification on all spans inside the current document. This way you could return only the hits that fully match the query (hits that contain a verified credit card number) and you don't have to do anything on the client side.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/277533887","html_url":"https://github.com/elastic/elasticsearch/issues/22732#issuecomment-277533887","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22732","id":277533887,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzUzMzg4Nw==","user":{"login":"hanan-levy-sp","id":15210086,"node_id":"MDQ6VXNlcjE1MjEwMDg2","avatar_url":"https://avatars2.githubusercontent.com/u/15210086?v=4","gravatar_id":"","url":"https://api.github.com/users/hanan-levy-sp","html_url":"https://github.com/hanan-levy-sp","followers_url":"https://api.github.com/users/hanan-levy-sp/followers","following_url":"https://api.github.com/users/hanan-levy-sp/following{/other_user}","gists_url":"https://api.github.com/users/hanan-levy-sp/gists{/gist_id}","starred_url":"https://api.github.com/users/hanan-levy-sp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanan-levy-sp/subscriptions","organizations_url":"https://api.github.com/users/hanan-levy-sp/orgs","repos_url":"https://api.github.com/users/hanan-levy-sp/repos","events_url":"https://api.github.com/users/hanan-levy-sp/events{/privacy}","received_events_url":"https://api.github.com/users/hanan-levy-sp/received_events","type":"User","site_admin":false},"created_at":"2017-02-05T17:19:37Z","updated_at":"2017-02-05T17:19:37Z","author_association":"NONE","body":"Hi Jim, \r\nI'm not sure i'm following. \r\nwill not exposing the Spans information of a Lucene Span query return the position info of each term in every document that matched the query? \r\n\r\nIf so, you could just parse it as part of the response and return a list of positions for each matched document. subject to restriction of how many results you need to return (\"size\").\r\n\r\nThe credit card example is just one example. I need to positions so i can re-discover the actual terms.\r\n\r\nI'll appreciate your response.\r\nthank you\r\nHanan.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/277630211","html_url":"https://github.com/elastic/elasticsearch/issues/22732#issuecomment-277630211","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22732","id":277630211,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzYzMDIxMQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-02-06T09:38:30Z","updated_at":"2017-02-06T09:38:30Z","author_association":"MEMBER","body":"> I'm not sure i'm following.\r\nwill not exposing the Spans information of a Lucene Span query return the position info of each term in every document that matched the query?\r\n\r\nNo, not every document just the top documents. If you want to filter documents based on the matched positions then you should not work at the response level but rather at the index level. This is why I advised you to create a custom span query that fits your need. This query would run on every document but would return only the matching document (those that contain valid credit card number for instance). This way you don't have to do the filtering on the top documents, they would be already filtered. \r\n\r\n> If so, you could just parse it as part of the response and return a list of positions for each matched document. subject to restriction of how many results you need to return (\"size\").\r\n\r\nI understand what you're asking but I don't think it's a good design (at least for your use case). Though you could write a custom plugin that would return the positions for each top hit. You can check for instance `org.elasticsearch.search.fetch.subphase.MatchedQueriesFetchSubPhase` that runs named queries on the top hits and adds the name of the matching queries to the response for each hit. But again if your intent is to filter documents based on the output of span queries then a custom query would be a better fit.\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/277727532","html_url":"https://github.com/elastic/elasticsearch/issues/22732#issuecomment-277727532","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22732","id":277727532,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzcyNzUzMg==","user":{"login":"hanan-levy-sp","id":15210086,"node_id":"MDQ6VXNlcjE1MjEwMDg2","avatar_url":"https://avatars2.githubusercontent.com/u/15210086?v=4","gravatar_id":"","url":"https://api.github.com/users/hanan-levy-sp","html_url":"https://github.com/hanan-levy-sp","followers_url":"https://api.github.com/users/hanan-levy-sp/followers","following_url":"https://api.github.com/users/hanan-levy-sp/following{/other_user}","gists_url":"https://api.github.com/users/hanan-levy-sp/gists{/gist_id}","starred_url":"https://api.github.com/users/hanan-levy-sp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanan-levy-sp/subscriptions","organizations_url":"https://api.github.com/users/hanan-levy-sp/orgs","repos_url":"https://api.github.com/users/hanan-levy-sp/repos","events_url":"https://api.github.com/users/hanan-levy-sp/events{/privacy}","received_events_url":"https://api.github.com/users/hanan-levy-sp/received_events","type":"User","site_admin":false},"created_at":"2017-02-06T16:04:14Z","updated_at":"2017-02-06T16:05:17Z","author_association":"NONE","body":"Hi Jim,\r\nThanks for the elaborate response. \r\nI do understand your point now, and agree that such computations should be done at the query level and not the response level. \r\n\r\nCan you please refer me to such a custom query plugin? \r\n\r\nthanks very much \r\nHanan.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/277801086","html_url":"https://github.com/elastic/elasticsearch/issues/22732#issuecomment-277801086","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22732","id":277801086,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzgwMTA4Ng==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-02-06T20:19:40Z","updated_at":"2017-02-06T20:19:40Z","author_association":"MEMBER","body":"> Can you please refer me to such a custom query plugin?\r\n\r\nWell it's a custom query plugin so it doesn't exist yet, **you** must write it ;) \r\nYou can check this page for examples of ES plugins:\r\nhttps://www.elastic.co/guide/en/elasticsearch/plugins/5.2/api.html\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/277934197","html_url":"https://github.com/elastic/elasticsearch/issues/22732#issuecomment-277934197","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22732","id":277934197,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzkzNDE5Nw==","user":{"login":"hanan-levy-sp","id":15210086,"node_id":"MDQ6VXNlcjE1MjEwMDg2","avatar_url":"https://avatars2.githubusercontent.com/u/15210086?v=4","gravatar_id":"","url":"https://api.github.com/users/hanan-levy-sp","html_url":"https://github.com/hanan-levy-sp","followers_url":"https://api.github.com/users/hanan-levy-sp/followers","following_url":"https://api.github.com/users/hanan-levy-sp/following{/other_user}","gists_url":"https://api.github.com/users/hanan-levy-sp/gists{/gist_id}","starred_url":"https://api.github.com/users/hanan-levy-sp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanan-levy-sp/subscriptions","organizations_url":"https://api.github.com/users/hanan-levy-sp/orgs","repos_url":"https://api.github.com/users/hanan-levy-sp/repos","events_url":"https://api.github.com/users/hanan-levy-sp/events{/privacy}","received_events_url":"https://api.github.com/users/hanan-levy-sp/received_events","type":"User","site_admin":false},"created_at":"2017-02-07T08:38:22Z","updated_at":"2017-02-07T08:38:22Z","author_association":"NONE","body":"Yea. I know. :) \r\nI was wondering if you knew of any example of a custom query plugin, that i might have a look at for the integration with elastic. \r\nThe logic I'll obviously write myself. \r\n\r\nThanks.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/277938529","html_url":"https://github.com/elastic/elasticsearch/issues/22732#issuecomment-277938529","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22732","id":277938529,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzkzODUyOQ==","user":{"login":"hanan-levy-sp","id":15210086,"node_id":"MDQ6VXNlcjE1MjEwMDg2","avatar_url":"https://avatars2.githubusercontent.com/u/15210086?v=4","gravatar_id":"","url":"https://api.github.com/users/hanan-levy-sp","html_url":"https://github.com/hanan-levy-sp","followers_url":"https://api.github.com/users/hanan-levy-sp/followers","following_url":"https://api.github.com/users/hanan-levy-sp/following{/other_user}","gists_url":"https://api.github.com/users/hanan-levy-sp/gists{/gist_id}","starred_url":"https://api.github.com/users/hanan-levy-sp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanan-levy-sp/subscriptions","organizations_url":"https://api.github.com/users/hanan-levy-sp/orgs","repos_url":"https://api.github.com/users/hanan-levy-sp/repos","events_url":"https://api.github.com/users/hanan-levy-sp/events{/privacy}","received_events_url":"https://api.github.com/users/hanan-levy-sp/received_events","type":"User","site_admin":false},"created_at":"2017-02-07T08:58:09Z","updated_at":"2017-02-07T08:58:09Z","author_association":"NONE","body":"I've found what i needed. \r\nThanks for all you help. \r\n\r\nHanan.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/342793990","html_url":"https://github.com/elastic/elasticsearch/issues/22732#issuecomment-342793990","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22732","id":342793990,"node_id":"MDEyOklzc3VlQ29tbWVudDM0Mjc5Mzk5MA==","user":{"login":"shijiebei2009","id":4994697,"node_id":"MDQ6VXNlcjQ5OTQ2OTc=","avatar_url":"https://avatars0.githubusercontent.com/u/4994697?v=4","gravatar_id":"","url":"https://api.github.com/users/shijiebei2009","html_url":"https://github.com/shijiebei2009","followers_url":"https://api.github.com/users/shijiebei2009/followers","following_url":"https://api.github.com/users/shijiebei2009/following{/other_user}","gists_url":"https://api.github.com/users/shijiebei2009/gists{/gist_id}","starred_url":"https://api.github.com/users/shijiebei2009/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shijiebei2009/subscriptions","organizations_url":"https://api.github.com/users/shijiebei2009/orgs","repos_url":"https://api.github.com/users/shijiebei2009/repos","events_url":"https://api.github.com/users/shijiebei2009/events{/privacy}","received_events_url":"https://api.github.com/users/shijiebei2009/received_events","type":"User","site_admin":false},"created_at":"2017-11-08T11:46:15Z","updated_at":"2017-11-08T11:46:15Z","author_association":"NONE","body":"@hanan-levy-sp \r\nI want to know how do you solve this problem? I want to get position information by span query too.","performed_via_github_app":null}]