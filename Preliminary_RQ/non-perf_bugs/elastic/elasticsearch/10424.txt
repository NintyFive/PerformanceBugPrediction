{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/10424","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10424/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10424/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10424/events","html_url":"https://github.com/elastic/elasticsearch/issues/10424","id":66235707,"node_id":"MDU6SXNzdWU2NjIzNTcwNw==","number":10424,"title":"http.publish_address should allow for more fine-grained configuration","user":{"login":"torrancew","id":235666,"node_id":"MDQ6VXNlcjIzNTY2Ng==","avatar_url":"https://avatars0.githubusercontent.com/u/235666?v=4","gravatar_id":"","url":"https://api.github.com/users/torrancew","html_url":"https://github.com/torrancew","followers_url":"https://api.github.com/users/torrancew/followers","following_url":"https://api.github.com/users/torrancew/following{/other_user}","gists_url":"https://api.github.com/users/torrancew/gists{/gist_id}","starred_url":"https://api.github.com/users/torrancew/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/torrancew/subscriptions","organizations_url":"https://api.github.com/users/torrancew/orgs","repos_url":"https://api.github.com/users/torrancew/repos","events_url":"https://api.github.com/users/torrancew/events{/privacy}","received_events_url":"https://api.github.com/users/torrancew/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-04-03T21:55:58Z","updated_at":"2015-04-06T20:12:23Z","closed_at":"2015-04-05T19:00:30Z","author_association":"NONE","active_lock_reason":null,"body":"Our use case for this ticket involves an ES cluster with an Nginx proxy in front of the HTTP API, to enforce TLS mutual authentication. This works perfectly fine for simple use cases, however, when using the ruby client with some of its more advanced/robust features (specifically, reload_connections) we noticed that we would configure a client, it would make a request to determine cluster state, and then attempt to perform communications over http://$IPADDRESS:9200, which is firewalled off. I attempted to set http.publish_host and publish_port, but observed the following problems:\n\n1) while http.publish_host had a visible impact on the output of the /_nodes endpoint, ultimately the client gem still wants to use the IP that the name I set resolves to, rather than the name I set itself.\n2) setting http.publish_port had no visible impact\n3) there is no apparent way to manipulate the protocol, to advertise https instead of http\n\nA lot of these pain points could be resolved if a user were allowed to directly control http.publish_address, but I have been unsuccessful at doing so.\n\nI realize that shield may solve this problem, but given that we have a functional TLS proxy, and a functional ES cluster, Shield seems a bit like using a jackhammer to drive a nail in this case.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}