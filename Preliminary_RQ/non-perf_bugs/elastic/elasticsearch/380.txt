{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/380","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/380/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/380/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/380/events","html_url":"https://github.com/elastic/elasticsearch/issues/380","id":326969,"node_id":"MDU6SXNzdWUzMjY5Njk=","number":380,"title":"River RabbitMQ Plugin","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"labels":[{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":45098,"node_id":"MDU6TGFiZWw0NTA5OA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.11.0","name":"v0.11.0","color":"DDDDDD","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2010-09-21T20:26:20Z","updated_at":"2010-09-23T21:08:45Z","closed_at":"2010-09-22T03:26:30Z","author_association":"MEMBER","active_lock_reason":null,"body":"Allow to have a river plugin that automatically index changes by listening to a rabbitmq queue. The format of the message is the same as the bulk API (#371), here is an example:\n\n```\n{ \"index\" : { \"index\" : \"test\", \"type\" : \"type1\", \"id\" : \"1\" }\n{ \"type1\" : { \"field1\" : \"value1\" } }\n{ \"delete\" : { \"index\" : \"test\", \"type\" : \"type1\", \"id\" : \"2\" } }\n{ \"create\" : { \"index\" : \"test\", \"type\" : \"type1\", \"id\" : \"1\" }\n{ \"type1\" : { \"field1\" : \"value1\" } }\n```\n\nCreating a rabbitmq river is simple:\n\n```\ncurl -XPUT 'localhost:9200/_river/my_river/_meta' -d '{\n    \"type\" : \"rabbitmq\",\n}'\n```\n\nThere are several configuration that can be set along with the `type` on an `rabbitmq` element:\n- `host`: The host to connect to, defaults to `localhost`.\n- `port`: The port to connect to, defaults to the default AMQP port.\n- `user`: The user name. Default to not being set.\n- `password`: The password. Defaults to not being set.\n- `vhost`: The virtual host.\n- `queue`: The queue name. Defaults to `elasticsearch`.\n- `exchange`: The exchange name. Defaults to `elasticsearch`.\n- `routing_key`: The routing key. Defaults to `elasticsearch`.\n\nOn the `index` element, the following can be controlled:\n- `bulk_size`: The total bulk size when aggregating messages.\n- `bulk_timeout`: One a first message is received, how much time to wait to try and aggregate more messages to a single bulk.\n","closed_by":null,"performed_via_github_app":null}