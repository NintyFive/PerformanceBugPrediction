[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/393500013","html_url":"https://github.com/elastic/elasticsearch/issues/30984#issuecomment-393500013","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30984","id":393500013,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MzUwMDAxMw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-05-31T11:25:52Z","updated_at":"2018-05-31T11:25:52Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/393876341","html_url":"https://github.com/elastic/elasticsearch/issues/30984#issuecomment-393876341","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30984","id":393876341,"node_id":"MDEyOklzc3VlQ29tbWVudDM5Mzg3NjM0MQ==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2018-06-01T13:13:22Z","updated_at":"2018-06-01T13:13:22Z","author_association":"MEMBER","body":"Accessing the `_source` field is slow and something that we don't want to expose in the ScriptQuery because it would be need to be accessed on every document making the search very inefficient. \r\n\r\nWhat is the reason that using nested queries does not fit your use case?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/393878767","html_url":"https://github.com/elastic/elasticsearch/issues/30984#issuecomment-393878767","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30984","id":393878767,"node_id":"MDEyOklzc3VlQ29tbWVudDM5Mzg3ODc2Nw==","user":{"login":"ruizmarc","id":5717082,"node_id":"MDQ6VXNlcjU3MTcwODI=","avatar_url":"https://avatars3.githubusercontent.com/u/5717082?v=4","gravatar_id":"","url":"https://api.github.com/users/ruizmarc","html_url":"https://github.com/ruizmarc","followers_url":"https://api.github.com/users/ruizmarc/followers","following_url":"https://api.github.com/users/ruizmarc/following{/other_user}","gists_url":"https://api.github.com/users/ruizmarc/gists{/gist_id}","starred_url":"https://api.github.com/users/ruizmarc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruizmarc/subscriptions","organizations_url":"https://api.github.com/users/ruizmarc/orgs","repos_url":"https://api.github.com/users/ruizmarc/repos","events_url":"https://api.github.com/users/ruizmarc/events{/privacy}","received_events_url":"https://api.github.com/users/ruizmarc/received_events","type":"User","site_admin":false},"created_at":"2018-06-01T13:22:31Z","updated_at":"2018-06-01T13:23:02Z","author_association":"NONE","body":"Let's imagine that we have a hierarchy of three levels. \r\n\r\nGrandparent 1 - n parent\r\nparent 1 - n child. \r\n\r\nEach level has an status. Grandparent status is calculated based on each of the parents. Each parent status is calculated based on each child status. So if I want to filter based on grand parent status, I need an script to calculate the status of parents and childs. I didn't really find a way to do this with nested queries, so I needed to access _source. Maybe there is a way, but I couldn't really find it.  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/393885982","html_url":"https://github.com/elastic/elasticsearch/issues/30984#issuecomment-393885982","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30984","id":393885982,"node_id":"MDEyOklzc3VlQ29tbWVudDM5Mzg4NTk4Mg==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2018-06-01T13:47:59Z","updated_at":"2018-06-01T13:47:59Z","author_association":"MEMBER","body":"Given you are using nested documents and therefore need to re-index the grandparent, all parents and all there grandchildren with every update you could just calculate the status at each level at index time and add a status field to the grandparent, parents, and children which can then be queried directly using the match query\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/393888820","html_url":"https://github.com/elastic/elasticsearch/issues/30984#issuecomment-393888820","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30984","id":393888820,"node_id":"MDEyOklzc3VlQ29tbWVudDM5Mzg4ODgyMA==","user":{"login":"ruizmarc","id":5717082,"node_id":"MDQ6VXNlcjU3MTcwODI=","avatar_url":"https://avatars3.githubusercontent.com/u/5717082?v=4","gravatar_id":"","url":"https://api.github.com/users/ruizmarc","html_url":"https://github.com/ruizmarc","followers_url":"https://api.github.com/users/ruizmarc/followers","following_url":"https://api.github.com/users/ruizmarc/following{/other_user}","gists_url":"https://api.github.com/users/ruizmarc/gists{/gist_id}","starred_url":"https://api.github.com/users/ruizmarc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruizmarc/subscriptions","organizations_url":"https://api.github.com/users/ruizmarc/orgs","repos_url":"https://api.github.com/users/ruizmarc/repos","events_url":"https://api.github.com/users/ruizmarc/events{/privacy}","received_events_url":"https://api.github.com/users/ruizmarc/received_events","type":"User","site_admin":false},"created_at":"2018-06-01T13:57:52Z","updated_at":"2018-06-01T13:59:54Z","author_association":"NONE","body":"Really? I was using nested objects to avoid reindexing the entire document. I really thought they were indexed indepedently according to documentation:\r\n\r\n> The nested type is a specialised version of the object datatype that allows arrays of objects to be indexed and queried independently of each other.\r\n\r\nChilds are edited constantly, so I wanted to avoid reindexing the entire document to update status everywhere. That's why it is currently being calculated. If the entire document is reindexed it doesn't really make sense to use nested objects in this scenearios... which I thought it was one of the biggest advantatges of using nested objects. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/394269369","html_url":"https://github.com/elastic/elasticsearch/issues/30984#issuecomment-394269369","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30984","id":394269369,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NDI2OTM2OQ==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2018-06-04T08:07:50Z","updated_at":"2018-06-04T08:07:50Z","author_association":"MEMBER","body":"The advantage of using nested docs is to avoid something called \"cross-matching\". To explain what this is imagine you are indexing actors and in the actor document you store an array of objects representing the films they have been in. These inner film objects have a name, genre and total box office sales amount. If you are searching for actors that have been a film which is a comedy and got over 50 million in box office sales then without using nested documents you can match actors who have been in a comedy  and in a different film that got over 50 million at the box office. Making the film a nested object and using the appropriate nested queries will allow the two conditions to be connects so a single film the actor has been in must both be a comedy AND have got over 50 million at the box office.\r\n\r\nThe searches with nested object can still be relatively fast (still slower than embedded object though) because the nested documents are always stored next to the root document in the index. This proximity is the reason that the entire hierarchy has to be re-indexed on every update to even a single document in the hierarchy.\r\n\r\nI agree the documentation is a little confusing here I think it is trying to say:\r\n\r\n> The nested type is a specialised version of the object datatype that allows arrays of objects to be indexed in a way that they can be queried independently of each other.\r\n\r\nI will raise a PR to make this change int he documentation. Since the original feature request for this issue is not something we are wanting to pursue I am also going to close this issue\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/394273857","html_url":"https://github.com/elastic/elasticsearch/issues/30984#issuecomment-394273857","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30984","id":394273857,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NDI3Mzg1Nw==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2018-06-04T08:24:40Z","updated_at":"2018-06-04T08:24:40Z","author_association":"MEMBER","body":"I opened https://github.com/elastic/elasticsearch/pull/31055 to fix the confusion in the docs","performed_via_github_app":null}]