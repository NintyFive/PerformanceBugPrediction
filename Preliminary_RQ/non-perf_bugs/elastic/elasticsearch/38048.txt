{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/38048","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38048/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38048/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38048/events","html_url":"https://github.com/elastic/elasticsearch/issues/38048","id":404925156,"node_id":"MDU6SXNzdWU0MDQ5MjUxNTY=","number":38048,"title":"fuzziness AUTO option does not work as intended with edgeNgram analyzer","user":{"login":"JshiGit","id":33029420,"node_id":"MDQ6VXNlcjMzMDI5NDIw","avatar_url":"https://avatars0.githubusercontent.com/u/33029420?v=4","gravatar_id":"","url":"https://api.github.com/users/JshiGit","html_url":"https://github.com/JshiGit","followers_url":"https://api.github.com/users/JshiGit/followers","following_url":"https://api.github.com/users/JshiGit/following{/other_user}","gists_url":"https://api.github.com/users/JshiGit/gists{/gist_id}","starred_url":"https://api.github.com/users/JshiGit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JshiGit/subscriptions","organizations_url":"https://api.github.com/users/JshiGit/orgs","repos_url":"https://api.github.com/users/JshiGit/repos","events_url":"https://api.github.com/users/JshiGit/events{/privacy}","received_events_url":"https://api.github.com/users/JshiGit/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-01-30T19:21:33Z","updated_at":"2019-05-10T07:30:04Z","closed_at":"2019-05-10T07:30:04Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Feature request -->\r\n\r\n**Describe the feature**:\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 6.2.1 and 6.2.4\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`): 8\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): CentOS7\r\n\r\n**Description of the problem including expected versus actual behavior**: \r\nI built an edgeNgram analyzer on a text field. The query with \"fuzziness\": \"AUTO\" act weirdly as if it is 0, no matter what the length of the search string is.  \r\n\r\nFor example, assuming I have two documents with the content \"interpretation\" and \"elasticsearch\". Per the document, a search key \"inyer\" will return the first document because it is only wrong by 1 LV distance. But it didn't. However for some search key like \"ekast\", it can return the second document. Basically the points are:\r\n\r\n1. For some documents, \"fuzziness\": \"AUTO\" act like 0\r\n2. For some other documents in the same index, it actually works \r\n\r\n**Steps to reproduce**:\r\n\r\nPlease include a *minimal* but *complete* recreation of the problem, including\r\n(e.g.) index creation, mappings, settings, query etc.  The easier you make for\r\nus to reproduce it, the more likely that somebody will take the time to look at it.\r\n\r\n 1.Create a index with at least the following things:\r\n{\r\n        \"analysis\": {\r\n            \"char_filter\": {\r\n                \"my_char_filter\":{\r\n                    \"type\": \"mapping\",\r\n                    \"mappings\":[\"( =>\", \") =>\", \"- =>\"]\r\n                }\r\n            },\r\n            \"tokenizer\": {\r\n                \"my_tokenizer\": {\r\n                    \"type\": \"edge_ngram\",\r\n                    \"min_gram\": 1,\r\n                    \"max_gram\": 20,\r\n                    \"token_chars\": [\r\n                        \"letter\",\r\n                        \"punctuation\",\r\n                        \"digit\"\r\n                    ]\r\n                }\r\n            },\r\n            \"analyzer\": {\r\n                \"my_analyzer\": {\r\n                    \"type\": \"custom\",\r\n                    \"char_filter\": \"my_char_filter\",\r\n                    \"tokenizer\": \"my_tokenizer\",\r\n                    \"filter\": [\r\n                        \"lowercase\",\r\n                        \"asciifolding\"\r\n                    ]\r\n                }\r\n            },\r\n    \"mappings\": {\r\n        \"mydoc\": {\r\n            \"properties\": {\r\n                \"my_field\": {\r\n                    \"type\": \"text\",\r\n                    \"analyzer\": \"my_analyzer\",\r\n                    \"search_analyzer\": \"my_analyzer\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n \r\n 2. Give it a few random data and run a query like this:\r\nGET my_index/_search\r\n{\r\n            \"query\": {\r\n                \"bool\": {\r\n                    \"should\": [\r\n                        {\"match\": {\r\n                            \"my_field\": {\r\n                                \"query\": \"blabla\",\r\n                                \"fuzziness\": \"AUTO\",\r\n                                \"operator\": \"and\"\r\n                                }\r\n                            }\r\n                        }\r\n              }\r\n}\r\n\r\n 3. If you think there should be a match and there is not, set the \"fuzziness\" to 1 or 2 and it will work. \r\n\r\n**Provide logs (if relevant)**:\r\n\r\nAccording to this chapter in the official documentation: https://www.elastic.co/guide/en/elasticsearch/reference/6.2/analysis-edgengram-tokenizer.html\r\n\r\nOne \"does not have to\" use the EdgeNgram analyzer for both indexing and searching, however it should not be wrong to use it. Also if there is in fact a reason for fuzziness settings not working with this type of analyzer, it should be listed with bold font. \r\n\r\nI can bypass this problem by 2 different means:\r\n1.  use a normal analyzer such as whitespace as the search_analyzer\r\n2.  manually create a heuristic like \"fuzziness\":\"AUTO\" but assign actual values (0,1,2)\r\n\r\nAnyway, I think this behavior is suspicious and worth looking into. Thanks. ","closed_by":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}