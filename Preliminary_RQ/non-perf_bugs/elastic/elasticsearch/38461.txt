{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/38461","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38461/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38461/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38461/events","html_url":"https://github.com/elastic/elasticsearch/issues/38461","id":406970676,"node_id":"MDU6SXNzdWU0MDY5NzA2NzY=","number":38461,"title":"Snapshot lifecycle management","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"labels":[{"id":912828538,"node_id":"MDU6TGFiZWw5MTI4Mjg1Mzg=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/ILM+SLM","name":":Core/Features/ILM+SLM","color":"0e8a16","default":false,"description":"Index and Snapshot lifecycle management"},{"id":143077482,"node_id":"MDU6TGFiZWwxNDMwNzc0ODI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Snapshot/Restore","name":":Distributed/Snapshot/Restore","color":"0e8a16","default":false,"description":"Anything directly related to the `_snapshot/*` APIs"},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":108108556,"node_id":"MDU6TGFiZWwxMDgxMDg1NTY=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/release%20highlight","name":"release highlight","color":"fbca04","default":false,"description":null},{"id":1434538947,"node_id":"MDU6TGFiZWwxNDM0NTM4OTQ3","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v7.4.0","name":"v7.4.0","color":"dddddd","default":false,"description":""},{"id":1194435738,"node_id":"MDU6TGFiZWwxMTk0NDM1NzM4","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v8.0.0","name":"v8.0.0","color":"dddddd","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"assignees":[{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},{"login":"gwbrown","id":1522844,"node_id":"MDQ6VXNlcjE1MjI4NDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1522844?v=4","gravatar_id":"","url":"https://api.github.com/users/gwbrown","html_url":"https://github.com/gwbrown","followers_url":"https://api.github.com/users/gwbrown/followers","following_url":"https://api.github.com/users/gwbrown/following{/other_user}","gists_url":"https://api.github.com/users/gwbrown/gists{/gist_id}","starred_url":"https://api.github.com/users/gwbrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gwbrown/subscriptions","organizations_url":"https://api.github.com/users/gwbrown/orgs","repos_url":"https://api.github.com/users/gwbrown/repos","events_url":"https://api.github.com/users/gwbrown/events{/privacy}","received_events_url":"https://api.github.com/users/gwbrown/received_events","type":"User","site_admin":false}],"milestone":null,"comments":15,"created_at":"2019-02-05T20:56:42Z","updated_at":"2019-07-30T15:18:23Z","closed_at":"2019-07-30T15:13:34Z","author_association":"MEMBER","active_lock_reason":null,"body":"ILM has been included in Elasticsearch, which allows us to manage the lifecycle\r\nof an index, however, this lifecycle management does not currently include\r\nperiodic snapshots of the index.\r\n\r\nIn order to provide a full replacement for other cluster periodic management\r\ntools out there (such as Curator), we should add snapshot management to\r\nElasticsearch.\r\n\r\nIdeally this would fall under the same sort of management than ILM provides, the\r\ndifference, however, is that snapshots are multi-index whereas index lifecycle\r\npolicies are applied to a single index (and all actions are executed on a single\r\nindex).\r\n\r\nWe need a way of specifying a periodic and/or scheduled snapshots of a given set\r\nof indices using a specific repository, perhaps something like this (all of the\r\nAPI is made up)\r\n\r\n```\r\nPUT /_slm/policy/snapshot-every-day\r\n{\r\n  // Run this every day at 2:30am\r\n  \"schedule\": \"0 30 2 * * ?\",\r\n\r\n  // What the snapshot should be named, supporting date-math\r\n  \"name\": \"<production-snap-{now/d}>\",\r\n\r\n  // Which snapshot repository to use for the snapshot\r\n  \"repository\": \"my-s3-repository\",\r\n\r\n  // \"config\" is a map of all the options that the regular snapshot API takes\r\n  \"config\": {\r\n    \"indices\": [\"foo-*\", \"important\"],\r\n    \"ignore_unavailable\": true,\r\n    \"include_global_state\": false\r\n  }\r\n}\r\n```\r\n\r\nElasticsearch will then manage taking snapshots of the given indices for the\r\nrepository on the schedule specified. The status of the snapshots would have to\r\nbe stored somewhere, likely in an index (`.tasks` perhaps?)\r\n\r\nSome other things that would be nice (but not required) to support:\r\n\r\n- Snapshots every N minutes. Where N only starts counting from the completion of\r\n  the previous snapshot (for example, a snapshot every 30 minutes that takes 4\r\n  minutes to complete would start a snapshot at 00:00, and then the next would\r\n  be 00:34 - 30 minutes after the completion of the previous snapshot).\r\n- Retention of snapshots. Specifying something like `\"max_count\": 10` meaning to\r\n  keep the last 10 snapshots, or `\"max_age\": \"7d\"` meaning to keep a weeks'\r\n  worth of snapshots, the old snapshot deletion would be managed by ES.\r\n  \r\n------------------\r\n\r\nTask Checklist\r\n--------------\r\n\r\n- [X] Basic CRUD for snapshot lifecycle policies (@dakrone) #39795\r\n- [x] Correctly handle updates and deletes to snapshot lifecycle policies (@dakrone) #40062\r\n- [x] Issue snapshot request when job is triggered (@dakrone) #40383\r\n- [x] Persist debugging and error information about making snapshot requests (@gwbrown) #40619\r\n- [x] Persist a history of successful/failed snapshots in an ES index (@gwbrown) #41707\r\n- [x] Add validation for snapshot lifecycle policies (check repo exists and pass its validation, check snapshot name doesn't break S3, etc) (@dakrone) #40654\r\n- [x] Hook into the existing ILM stop/start so users can perform maintenance (@dakrone) #40871\r\n- [x] Change URI paths to be under `/_slm/policy` (currently `GET|PUT|DELETE /_ilm/snapshot/<policy-id>`) (@dakrone) #41320\r\n- [x] Add API to execute a snapshot for a policy *now* rather than waiting for the scheduled time (@dakrone) #41038\r\n- [x] Display \"the next time this policy will execute is: ____\" with the success/failure/info when retrieving policy (@dakrone) #41221\r\n- [x] Ensure that SLM has a dedicated cluster privilege and that its actions are separate from ILM actions (@dakrone) #41607\r\n- [x] Documentation (@dakrone) #41510\r\n  - [x] Package level javadocs (@jbaiera) #43535\r\n  - [x] Document what security privileges are necessary for using SLM (@dakrone) #43708\r\n- [x] High Level Rest Client Support (@dakrone) #41767\r\n- Testing\r\n  - [x] Add integration test for SLM x-pack security role (dakrone) #42678\r\n  - [x] Manual testing (everyone)\r\n- Retention\r\n  - [x] Add support for `_meta` in `CreateSnapshotRequest` (@gwbrown) #41281\r\n  - [x] Send `_meta` associating each snapshot with the policy that created it (@gwbrown) #43132\r\n  - Implement retention (See: #43663)","closed_by":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"performed_via_github_app":null}