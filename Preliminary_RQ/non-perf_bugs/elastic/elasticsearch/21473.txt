{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/21473","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21473/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21473/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21473/events","html_url":"https://github.com/elastic/elasticsearch/issues/21473","id":188588058,"node_id":"MDU6SXNzdWUxODg1ODgwNTg=","number":21473,"title":"Multi-cluster search, GET, and field_stats","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-11-10T18:51:18Z","updated_at":"2017-01-18T08:28:05Z","closed_at":"2017-01-18T08:28:05Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"# Background\r\nThe tribe node today joins a list of clusters and merges their cluster state into a single overall view.  Because it knows about the location of every shard in its clusters, it can scatter requests out to all involved shards then gathers and reduces the shard level results.\r\n\r\nThis approach has some downsides: joining many clusters can result in a very large merged cluster state, indices with the same name in different clusters can't be searched, and any master-level actions (eg creating an index) just hangs because there is no master.\r\n\r\nWhile, no doubt, there are some users who use the tribe node to write to indices in different clusters, by far the majority use for tribe is to perform searches and aggregations across multiple clusters.\r\n\r\n# Proposal\r\n\r\nAllow a cluster to to perform searches on external clusters, and to merge their results with results from the local cluster.\r\n\r\nThe main cluster would be provided with a list of cluster names and the publish addresses of some nodes in the cluster (could use these as a static round-robin list or as seed nodes for sniffing).  This list would be dynamically updatable, so clusters could be added or removed at will.\r\n\r\nBy default, the search API would work as it does today ,eg the following command would search all local indices only:\r\n\r\n    GET */_search \r\n\r\nHowever, indices can be preceded by a cluster name and a colon to perform searches on remote clusters eg the following would search all indices beginning with `logs` in the local, `europe`, and `asia` clusters:\r\n\r\n    GET logs*,europe:logs*,asia:logs*/_search\r\n\r\nThe local cluster would forward search requests to the remote clusters and treat the results in the same way as it would the results from a single shard, which can be merged with the results from local shards and the other remote clusters into a single global result set.\r\n\r\nHits could be returned as:\r\n\r\n    \"index\": \"europe:logs-2016.11.10\"\r\n\r\nPipeline aggregations would have to be removed from the aggs sent to remote clusters, and only applied on the coordinating node after results have been merged.\r\n\r\nWe would also need an API which can list known clusters and their indices (eg for Kibana) and the GET and field-stats APIs should be made multi-cluster aware as well.\r\n\r\nThis would be a read-only integration.  Any writes (including creating an index) would happen in the local cluster only.\r\n","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}