{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/11867","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11867/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11867/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11867/events","html_url":"https://github.com/elastic/elasticsearch/issues/11867","id":90820023,"node_id":"MDU6SXNzdWU5MDgyMDAyMw==","number":11867,"title":"sort ignore_unmapped fails for String fields","user":{"login":"TroyMass","id":4421634,"node_id":"MDQ6VXNlcjQ0MjE2MzQ=","avatar_url":"https://avatars3.githubusercontent.com/u/4421634?v=4","gravatar_id":"","url":"https://api.github.com/users/TroyMass","html_url":"https://github.com/TroyMass","followers_url":"https://api.github.com/users/TroyMass/followers","following_url":"https://api.github.com/users/TroyMass/following{/other_user}","gists_url":"https://api.github.com/users/TroyMass/gists{/gist_id}","starred_url":"https://api.github.com/users/TroyMass/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TroyMass/subscriptions","organizations_url":"https://api.github.com/users/TroyMass/orgs","repos_url":"https://api.github.com/users/TroyMass/repos","events_url":"https://api.github.com/users/TroyMass/events{/privacy}","received_events_url":"https://api.github.com/users/TroyMass/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":110557212,"node_id":"MDU6TGFiZWwxMTA1NTcyMTI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/high%20hanging%20fruit","name":"high hanging fruit","color":"fc6149","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-06-25T01:12:57Z","updated_at":"2015-06-26T11:44:00Z","closed_at":"2015-06-26T11:44:00Z","author_association":"NONE","active_lock_reason":null,"body":"When sorting values using an alias, and one of the aliased indexes is missing the values, I added the `ignore_unmapped=true` option. This works well for Long fields, but does not work for String fields. \n\nIt appears that it tries to insert Long.MAX_VALUE or Long.MIN_VALUE to force items to the bottom of the sort. But when it does this for String values, I get the error `ReduceSearchPhaseException[Failed to execute phase [query], [reduce] ]; nested: ClassCastException[java.lang.Long cannot be cast to org.apache.lucene.util.BytesRef]`\n\nThe newer version of the Query DSL support the `unmapped_type` parameter which allows specifying that the field is a String or a Long which works correctly. However in my use case, these fields are dynamically mapped and the code does not have knowledge of what their mapped types are.\n\nSteps to reproduce:\n\n```\n# create some documents in the first index with a string field\nPOST my_index1/my_type\n{\n  \"FieldStr\": \"this is a string\"\n}\nPOST my_index1/my_type\n{\n  \"FieldStr\": \"another string\"\n}\n\n# create some documents in a second index with a different long field\nPOST my_index2/my_type\n{\n  \"FieldLong\": 234\n}\nPOST my_index2/my_type\n{\n  \"FieldLong\": 56\n}\n\n# create an alias that points to both indexes\nPOST _aliases\n{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"my_index1\",\n        \"alias\": \"my_alias\"\n      }\n    },\n    {\n      \"add\": {\n        \"index\": \"my_index2\",\n        \"alias\": \"my_alias\"\n      }\n    }\n  ]\n}\n\n# sort by the string field\n# Fails for my_index2 but returns results from my_index1\nGET my_alias/my_type/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  },\n  \"sort\": [\n    {\n      \"FieldStr\": {\n        \"order\": \"desc\"\n      }\n    }\n  ]\n}\n\n# sort by the long field\n# Fails for my_index1 but returns results from my_index2\nGET my_alias/my_type/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  },\n  \"sort\": [\n    {\n      \"FieldLong\": {\n        \"order\": \"desc\"\n      }\n    }\n  ]\n}\n\n# sort by the string field\n# put missing fields last and ignore unmapped\n# FAILS completely\nGET my_alias/my_type/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  },\n  \"sort\": [\n    {\n      \"FieldStr\": {\n        \"order\": \"desc\",\n        \"missing\": \"_last\",\n        \"ignore_unmapped\": true\n      }\n    }\n  ]\n}\n\n# sort by the long field\n# put missing fields last and ignore unmapped\n# Works perfectly\nGET my_alias/my_type/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  },\n  \"sort\": [\n    {\n      \"FieldLong\": {\n        \"order\": \"desc\",\n        \"missing\": \"_last\",\n        \"ignore_unmapped\": true\n      }\n    }\n  ]\n}\n\n# sort by the string field\n# use unmapped_type\n# Works perfectly\nGET my_alias/my_type/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  },\n  \"sort\": [\n    {\n      \"FieldStr\": {\n        \"order\": \"desc\",\n        \"missing\": \"_last\",\n        \"unmapped_type\": \"String\"\n      }\n    }\n  ]\n}\n\n# sort by the long field\n# use unmapped_type\n# Works perfectly\nGET my_alias/my_type/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  },\n  \"sort\": [\n    {\n      \"FieldLong\": {\n        \"order\": \"desc\",\n        \"missing\": \"_last\",\n        \"unmapped_type\": \"Long\"\n      }\n    }\n  ]\n}\n```\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}