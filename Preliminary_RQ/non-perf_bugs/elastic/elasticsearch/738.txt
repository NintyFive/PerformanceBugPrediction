{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/738","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/738/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/738/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/738/events","html_url":"https://github.com/elastic/elasticsearch/issues/738","id":639832,"node_id":"MDU6SXNzdWU2Mzk4MzI=","number":738,"title":"Cannot index using java API 0.15.1","user":{"login":"adamw","id":60503,"node_id":"MDQ6VXNlcjYwNTAz","avatar_url":"https://avatars3.githubusercontent.com/u/60503?v=4","gravatar_id":"","url":"https://api.github.com/users/adamw","html_url":"https://github.com/adamw","followers_url":"https://api.github.com/users/adamw/followers","following_url":"https://api.github.com/users/adamw/following{/other_user}","gists_url":"https://api.github.com/users/adamw/gists{/gist_id}","starred_url":"https://api.github.com/users/adamw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adamw/subscriptions","organizations_url":"https://api.github.com/users/adamw/orgs","repos_url":"https://api.github.com/users/adamw/repos","events_url":"https://api.github.com/users/adamw/events{/privacy}","received_events_url":"https://api.github.com/users/adamw/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2011-03-02T08:33:54Z","updated_at":"2011-03-03T17:49:32Z","closed_at":"2011-03-03T16:19:48Z","author_association":"NONE","active_lock_reason":null,"body":"When running an index request I get an exception (see below).\n\nThe client is obtained in the following way:\n\n```\n    new TransportClient().addTransportAddress(new InetSocketTransportAddress(\"localhost\", \"9300\"));\n```\n\nThis worked fine in 0.14.3. Using the REST api indexing works fine.\n\n```\n    Caused by: org.elasticsearch.transport.RemoteTransportException: [Baron Mordo][inet[/127.0.0.1:9300]][indices/index/shard/index]\n    Caused by: java.io.EOFException\n    at org.elasticsearch.transport.netty.ChannelBufferStreamInput.readByte(ChannelBufferStreamInput.java:112) [:]\n    at org.elasticsearch.common.io.stream.HandlesStreamInput.readByte(HandlesStreamInput.java:80) [:]\n    at org.elasticsearch.common.io.stream.StreamInput.readInt(StreamInput.java:64) [:]\n    at org.elasticsearch.common.io.stream.StreamInput.readLong(StreamInput.java:87) [:]\n    at org.elasticsearch.action.index.IndexRequest.readFrom(IndexRequest.java:593) [:]\n    at org.elasticsearch.transport.netty.MessageChannelHandler.handleRequest(MessageChannelHandler.java:182) [:]\n    at org.elasticsearch.transport.netty.MessageChannelHandler.messageReceived(MessageChannelHandler.java:85) [:]\n    at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:80) [:]\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:545) [:]\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:754) [:]\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:302) [:]\n    at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:317) [:]\n    at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.callDecode(FrameDecoder.java:299) [:]\n    at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.messageReceived(FrameDecoder.java:216) [:]\n    at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:80) [:]\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:545) [:]\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:754) [:]\n    at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:51) [:]\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:545) [:]\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:540) [:]\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:274) [:]\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:261) [:]\n    at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.read(NioWorker.java:349) [:]\n    at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.processSelectedKeys(NioWorker.java:280) [:]\n    at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.run(NioWorker.java:200) [:]\n    at org.elasticsearch.common.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108) [:]\n    at org.elasticsearch.common.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:44)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) [:1.6.0_22]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) [:1.6.0_22]\n    at java.lang.Thread.run(Thread.java:680) [:1.6.0_22]\n```\n","closed_by":null,"performed_via_github_app":null}