{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/22672","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22672/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22672/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22672/events","html_url":"https://github.com/elastic/elasticsearch/issues/22672","id":201540074,"node_id":"MDU6SXNzdWUyMDE1NDAwNzQ=","number":22672,"title":"conflicts with existing mapping in other types:","user":{"login":"makeyang","id":13898618,"node_id":"MDQ6VXNlcjEzODk4NjE4","avatar_url":"https://avatars2.githubusercontent.com/u/13898618?v=4","gravatar_id":"","url":"https://api.github.com/users/makeyang","html_url":"https://github.com/makeyang","followers_url":"https://api.github.com/users/makeyang/followers","following_url":"https://api.github.com/users/makeyang/following{/other_user}","gists_url":"https://api.github.com/users/makeyang/gists{/gist_id}","starred_url":"https://api.github.com/users/makeyang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/makeyang/subscriptions","organizations_url":"https://api.github.com/users/makeyang/orgs","repos_url":"https://api.github.com/users/makeyang/repos","events_url":"https://api.github.com/users/makeyang/events{/privacy}","received_events_url":"https://api.github.com/users/makeyang/received_events","type":"User","site_admin":false},"labels":[{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-01-18T10:56:27Z","updated_at":"2017-01-23T02:52:08Z","closed_at":"2017-01-23T02:52:08Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Elasticsearch version**:\r\n2.1\r\n**Plugins installed**: []\r\ndelete-by-query\r\nelasticsearch-analysis-ik\r\nrepository-hdfs\r\n**JVM version**:\r\n8u60\r\n**OS version**:\r\nCentOS release 6.6 (Final)\r\n**Description of the problem including expected versus actual behavior**:\r\nserver keep throw below exceptions: \r\n\r\n```\r\n[WARN ][cluster.action.shard     ] [dm_xxx] [form_index][8] received shard failed for [form_index][8], node[Yz0FhSvfS2C9Ka_fUhywKQ], [P], v[104], s[INITIALIZING], a[id=9iRqwiV8Qpu2_uZc4nW_Iw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-12-30T08:20:32.956Z], details[failed to update mappings, failure IllegalArgumentException[Mapper for [lockUser] conflicts with existing mapping in other types:\r\n[mapper [lockUser] has different [index] values, mapper [lockUser] has different [doc_values] values, cannot change from disabled to enabled, mapper [lockUser] has different [analyzer]]]]], indexUUID [Ww4WaOiPS2Oy09E_MAWPHA], message [failed recovery], failure [IndexShardRecoveryException[failed to recovery from gateway]; nested: EngineCreationFailureException[failed to recover from translog]; nested: EngineException[failed to recover from translog]; nested: TypeMissingException[type[[formData, trying to auto create mapping, but dynamic mapping is disabled]] missing]; ]\r\n[form_index][[form_index][8]] IndexShardRecoveryException[failed to recovery from gateway]; nested: EngineCreationFailureException[failed to recover from translog]; nested: EngineException[failed to recover from translog]; nested: TypeMissingException[type[[formData, trying to auto create mapping, but dynamic mapping is disabled]] missing];\r\n        at org.elasticsearch.index.shard.StoreRecoveryService.recoverFromStore(StoreRecoveryService.java:254)\r\n        at org.elasticsearch.index.shard.StoreRecoveryService.access$100(StoreRecoveryService.java:56)\r\n        at org.elasticsearch.index.shard.StoreRecoveryService$1.run(StoreRecoveryService.java:129)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:745)\r\nCaused by: [form_index][[form_index][8]] EngineCreationFailureException[failed to recover from translog]; nested: EngineException[failed to recover from translog]; nested: TypeMissingException[type[[formData, trying to auto create mapping, but dynamic mapping is disabled]] missing];\r\n        at org.elasticsearch.index.engine.InternalEngine.<init>(InternalEngine.java:178)\r\n        at org.elasticsearch.index.engine.InternalEngineFactory.newReadWriteEngine(InternalEngineFactory.java:25)\r\n        at org.elasticsearch.index.shard.IndexShard.newEngine(IndexShard.java:1437)\r\n        at org.elasticsearch.index.shard.IndexShard.createNewEngine(IndexShard.java:1421)\r\n        at org.elasticsearch.index.shard.IndexShard.internalPerformTranslogRecovery(IndexShard.java:920)\r\n        at org.elasticsearch.index.shard.IndexShard.performTranslogRecovery(IndexShard.java:892)\r\n        at org.elasticsearch.index.shard.StoreRecoveryService.recoverFromStore(StoreRecoveryService.java:245)\r\n        ... 5 more\r\nCaused by: [form_index][[form_index][8]] EngineException[failed to recover from translog]; nested: TypeMissingException[type[[formData, trying to auto create mapping, but dynamic mapping is disabled]] missing];\r\n        at org.elasticsearch.index.engine.InternalEngine.recoverFromTranslog(InternalEngine.java:254)\r\n        at org.elasticsearch.index.engine.InternalEngine.<init>(InternalEngine.java:175)\r\n        ... 11 more\r\nCaused by: [form_index] TypeMissingException[type[[formData, trying to auto create mapping, but dynamic mapping is disabled]] missing]\r\n        at org.elasticsearch.index.mapper.MapperService.documentMapperWithAutoCreate(MapperService.java:416)\r\n        at org.elasticsearch.index.shard.TranslogRecoveryPerformer.docMapper(TranslogRecoveryPerformer.java:74)\r\n        at org.elasticsearch.index.shard.TranslogRecoveryPerformer.performRecoveryOperation(TranslogRecoveryPerformer.java:163)\r\n        at org.elasticsearch.index.engine.InternalEngine.recoverFromTranslog(InternalEngine.java:242)\r\n        ... 12 more\r\n```\r\n\r\n**Steps to reproduce:**\r\nI checked the code complete and it turns out it really hard to reproduce this issue:\r\n1. when put/update mapping on master, the merge mapping action is execute in single thread and if any mapping conflict, it won't send mapping to data node but just throw exception\r\n2. when put mappping below:\r\n\r\n```\r\ntwitter' -d'\r\n{  \"settings\": {    \"index\": {\t  \"unassigned.node_left.delayed_timeout\": \"5m\",      \"number_of_shards\": \"2\",      \"number_of_replicas\": \"0\"    }  },\r\n  \"mappings\": {    \"tweet1\": {      \"properties\": {        \"message\": {          \"type\": \"string\",\t\t  \"index\":      \"not_analyzed\",\t\t  \"doc_values\": true        }      }    }  }\r\n} \r\n```\r\n\r\nadd some data and then kill one data node. then update mapping \r\n\r\n```\r\n{\r\n    \"properties\": {        \"message\": {\t\t  \"type\": \"string\",\"doc_values\": false, \"index\":      \"not_analyzed\",    \"norms\": {\"enabled\": false}    }    }\r\n}\r\n```\r\n\r\nand restart the killed node which has translog in disk. but the mapping will be merged sinnce doc value can changed from enable to disable.\r\n\r\n3. when put mapping below:\r\n\r\n```\r\ncurl -XPUT '192.168.200.191:9405/twitter' -d'\r\n{  \"settings\": {    \"index\": {\t  \"unassigned.node_left.delayed_timeout\": \"5m\",      \"number_of_shards\": \"2\",      \"number_of_replicas\": \"0\"    }  },\r\n  \"mappings\": {    \"tweet1\": {      \"properties\": {        \"message\": {          \"type\": \"string\",\t\t  \"index\":      \"not_analyzed\",\t\t  \"doc_values\": false        }      }    }  }\r\n}\r\n'\r\n```\r\n\r\nadd some data and then kill one data node. then update mapping\r\n\r\n```\r\n{\r\n    \"properties\": {        \"message\": {\t\t  \"type\": \"string\",\"doc_values\": true, \"index\":      \"not_analyzed\",    \"norms\": {\"enabled\": false}    }    }\r\n}\r\n```\r\n\r\nthen merge exception will throw on master node. \r\nso can anybody help to investigate on this please?","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}