[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/5484743","html_url":"https://github.com/elastic/elasticsearch/issues/1905#issuecomment-5484743","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1905","id":5484743,"node_id":"MDEyOklzc3VlQ29tbWVudDU0ODQ3NDM=","user":{"login":"snazy","id":957468,"node_id":"MDQ6VXNlcjk1NzQ2OA==","avatar_url":"https://avatars0.githubusercontent.com/u/957468?v=4","gravatar_id":"","url":"https://api.github.com/users/snazy","html_url":"https://github.com/snazy","followers_url":"https://api.github.com/users/snazy/followers","following_url":"https://api.github.com/users/snazy/following{/other_user}","gists_url":"https://api.github.com/users/snazy/gists{/gist_id}","starred_url":"https://api.github.com/users/snazy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/snazy/subscriptions","organizations_url":"https://api.github.com/users/snazy/orgs","repos_url":"https://api.github.com/users/snazy/repos","events_url":"https://api.github.com/users/snazy/events{/privacy}","received_events_url":"https://api.github.com/users/snazy/received_events","type":"User","site_admin":false},"created_at":"2012-05-03T10:22:59Z","updated_at":"2012-05-03T10:22:59Z","author_association":"NONE","body":"My JUnit that works with 0.19.2 but fails with 0.19.3\n\n```\n    @Test\n    public void percolateRawTest() throws Exception {\n\n        Client client = createTransportClient();\n\n        QueryBuilder qb = QueryBuilders.boolQuery().must(QueryBuilders.queryString(\"hallo\")).must(\n                QueryBuilders.queryString(\"welt\"));\n        System.out.println(\"qb: \" + qb.toString());\n\n        XContentBuilder xContentBuilder = XContentFactory.jsonBuilder();\n        xContentBuilder.startObject();\n        xContentBuilder.field(\"query\");\n        xContentBuilder = qb.toXContent(xContentBuilder, ToXContent.EMPTY_PARAMS);\n        xContentBuilder.endObject();\n        System.out.println(\"xContentBuilder: \" + xContentBuilder.string());\n\n        IndexRequestBuilder irb = new IndexRequestBuilder(client, null);\n        String indexType = \"default\";\n        String indexIndex = \"_percolator\";\n        String indexId = \"mySuperQuery\";\n        irb = irb.\n                setIndex(indexIndex).\n                setId(indexId).\n                setType(indexType).\n                setSource(xContentBuilder);\n        System.out.println(\"indexRequestBuilder: \" + irb.toString());\n        IndexResponse indexResponse = irb.execute().actionGet();\n        System.out.println(\"indexResponse: \" + indexResponse);\n        System.out.println(\"indexResponse: \" + indexResponse.getId());\n\n        XContentBuilder sourceBuilder = XContentFactory.jsonBuilder();\n        sourceBuilder.startObject();\n        sourceBuilder.rawField(\"doc\", \"{\\\"text\\\": \\\"hallo welt hier bin ich\\\"}\".getBytes());\n        sourceBuilder.endObject();\n        System.out.println(\"sourceBuilder: \" + sourceBuilder.string());\n\n        sourceBuilder = XContentFactory.jsonBuilder();\n        sourceBuilder.startObject();\n        sourceBuilder.field(\"doc\");\n        sourceBuilder.startObject();\n        sourceBuilder.field(\"text\", \"hallo welt hier bin ich\");\n        sourceBuilder.endObject();\n        sourceBuilder.endObject();\n        System.out.println(\"sourceBuilder: \" + sourceBuilder.string());\n\n        String percolateIndex = \"default\";\n        String percolateType = \"PERCOLATE_TYPE\";\n        PercolateRequestBuilder prb = new PercolateRequestBuilder(client, percolateIndex, percolateType).setSource(\n                sourceBuilder);\n        System.out.println(prb);\n        PercolateResponse percolateResponse = prb.execute().actionGet();\n        List<String> matches = percolateResponse.matches();\n        Assert.assertTrue(matches.contains(\"mySuperQuery\"));\n        System.out.println(\"PercolateResponse.matches: \" + matches);\n    }\n```\n","performed_via_github_app":null}]