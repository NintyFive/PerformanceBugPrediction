[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/249352289","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-249352289","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":249352289,"node_id":"MDEyOklzc3VlQ29tbWVudDI0OTM1MjI4OQ==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2016-09-24T08:13:41Z","updated_at":"2016-09-24T08:13:41Z","author_association":"MEMBER","body":"Agreed, we shouldn't cache this at all. There are two caches we need to take into account here, the request cache (which cached the search request in this case) and the query cache (if the `script` query is used).\n\nWe could in `IndicesService#canCache(...)` introspect the aggregation and query builder and decide to not cache if we encounter a file (the file can still be updated after node startup) or stored script.\n\nAlternatively we could also during query builder rewrite resolve file and stored scripts and replace them with inline scripts. I think this is nicer as it fixes this problem for both request and query cache. Also ScriptService can then become simpler as it no longer has to worry where the content of the script comes from.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/249357228","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-249357228","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":249357228,"node_id":"MDEyOklzc3VlQ29tbWVudDI0OTM1NzIyOA==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2016-09-24T10:13:36Z","updated_at":"2016-09-24T10:13:36Z","author_association":"MEMBER","body":"> Alternatively we could also during query builder rewrite resolve file and stored scripts and replace them with inline scripts.\n\nYes, but caching of inline scripts only works for scripts that are pure functions, which doesn't necessary true even for painless scripts that have access to `java.time.Instant.now()` for example. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/249358333","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-249358333","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":249358333,"node_id":"MDEyOklzc3VlQ29tbWVudDI0OTM1ODMzMw==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2016-09-24T10:44:24Z","updated_at":"2016-09-24T10:44:24Z","author_association":"MEMBER","body":"Right, I didn't think of that. I think we have then no other alternative then completely opting out of caching if scripts or being used in a search request. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/249379720","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-249379720","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":249379720,"node_id":"MDEyOklzc3VlQ29tbWVudDI0OTM3OTcyMA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-09-24T18:22:13Z","updated_at":"2016-09-24T18:22:13Z","author_association":"CONTRIBUTOR","body":"_technically_ we can detect that sort of thing with painless.... Should we\ndisable caching for any request with a script and then slowly drag things\nback? Like expressions can be cached, painless without `now()`. Maybe we\ncan't ever cache groovy.\n\nOr do we tell users to opt requests out of the cache manually if they have\na script?\n\nOn Sat, Sep 24, 2016 at 6:44 AM, Martijn van Groningen <\nnotifications@github.com> wrote:\n\n> Right, I didn't think of that. I think we have then no other alternative\n> then completely opting out of caching if scripts or being used in a search\n> request.\n> \n> â€”\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/elastic/elasticsearch/issues/20645#issuecomment-249358333,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AANLog-dx25jvTPVpje3WodSBENWbiNWks5qtP8MgaJpZM4KFPE_\n> .\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/249381312","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-249381312","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":249381312,"node_id":"MDEyOklzc3VlQ29tbWVudDI0OTM4MTMxMg==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2016-09-24T18:55:18Z","updated_at":"2016-09-24T18:55:18Z","author_association":"MEMBER","body":"The simplest solution might be to disable caching queries with scripts by default, but give users an ability to opt-in for caching if they know that it is acceptable for their use-case. A more sophisticated solution would be to ask script engine service to return some sort of a flag for a script that would indicate if the script is a pure function or not and then we can decide if we want to cache it or not based on that.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/249513398","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-249513398","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":249513398,"node_id":"MDEyOklzc3VlQ29tbWVudDI0OTUxMzM5OA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-09-26T08:47:45Z","updated_at":"2016-09-26T08:47:45Z","author_association":"CONTRIBUTOR","body":"I think for now we should prevent caching if scripts are involved here. We even should not do it if users ask for it explicitly. Down the road we should require our scripts to be functions. There should not be access to APIs that are not idempotent. We can still allow access to `NOW` since we detect that or at least can detect it. Once we can ensure that we can allow caching for certain scripts (painless only?)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/249561576","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-249561576","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":249561576,"node_id":"MDEyOklzc3VlQ29tbWVudDI0OTU2MTU3Ng==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2016-09-26T12:55:55Z","updated_at":"2016-09-26T12:55:55Z","author_association":"MEMBER","body":">  Once we can ensure that we can allow caching for certain scripts (painless only?)\n\nI think allowing script engine to identify if a script is a pure function or not is not going to be much more complex than implementing painless-only solution, but it will also benefit plugins like PMML which always generates and executes pure function scripts. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/250394154","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-250394154","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":250394154,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MDM5NDE1NA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-09-29T07:42:35Z","updated_at":"2016-09-29T07:42:35Z","author_association":"CONTRIBUTOR","body":"I don't understand why PMML will benefit from a generic solution? \nWe need a solution for this for 5.0 and I am leaning towards just disabling cache if any script is involved. The only safe exception is expressions. I am curious if @jdconrad or @rjernst has ideas here.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/250395975","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-250395975","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":250395975,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MDM5NTk3NQ==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2016-09-29T07:51:46Z","updated_at":"2016-09-29T07:51:46Z","author_association":"MEMBER","body":"I agree that the most sensible option for 5.0 is to disable cache if any scripts are involved. My comment was about your proposal to re-enable caching for some scripts in the future. My understanding was that you are proposing to enable this only for painless. My proposal was to allow any script engine to let the caching system know if scripts are pure functions or not. I envision it as a method of a script engine that in case of painless will return `false` if access to `now` is detected and `true` otherwise. In case of script engines like PMML it will also return `true` because all PMML scripts are pure functions by definition.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/250396746","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-250396746","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":250396746,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MDM5Njc0Ng==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-09-29T07:55:51Z","updated_at":"2016-09-29T07:55:51Z","author_association":"CONTRIBUTOR","body":"I think we have different understandings when it comes to PMML I don't see why it needs to be it's own script engine. Can't it just produce scripts using painless iff it really needs a script? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/250398198","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-250398198","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":250398198,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MDM5ODE5OA==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2016-09-29T08:03:08Z","updated_at":"2016-09-29T08:03:08Z","author_association":"MEMBER","body":"Yes, it doesn't have to be its own script engine (if we could add some ML-specific math functions to painless and if we are doing PMML at all). I am just proposing a clean generic solution that will work not only for painless but also for any script engine that can guarantee that its scripts are pure functions as in the case of the current implementation of PMML. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/250536074","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-250536074","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":250536074,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MDUzNjA3NA==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2016-09-29T17:32:02Z","updated_at":"2016-09-29T17:58:10Z","author_association":"CONTRIBUTOR","body":"So, just to make sure I understand, there are two caching issues here -- one is related to queries being cached with scripts that are potentially updated in the background (stored/file), the other is related to non-idempotent whitelisted methods.  For the first we need to check to make sure the stored/file script is the same as the one in the cached request, I don't know who the responsibility should belong to for invalidation, but I guess it would be a callback to a listener coming out of the ScriptService every time a new stored/file script is cached.  For the second one, I need to go through the whitelist for Painless and make sure that it is only the now methods of Instant that aren't idempotent.  Currently, 'now' is already broken since the script will be calling it at slightly different times for each document.  @rjernst can probably better explain a possible solution at least for this last part.\n\nEdit: For 5.0, I completely agree with turning off support for caching involving scripts.  I think other solutions are longer term and need to be fully thought through.\n\nSecond Edit: @imotov pointed out that I don't mean idempotent, but rather a pure function.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/250547930","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-250547930","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":250547930,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MDU0NzkzMA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-09-29T18:16:11Z","updated_at":"2016-09-29T18:16:11Z","author_association":"CONTRIBUTOR","body":"your understanding is correct @jdconrad \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251092494","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-251092494","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":251092494,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTA5MjQ5NA==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-10-03T12:22:28Z","updated_at":"2016-10-03T12:22:28Z","author_association":"MEMBER","body":"A thought I had while reading along (for the easiest problems of those above) - should we remove support for  `now()` from painless and only support it as a script parameter? seems like it will give people what they want and be consistent (across shards?)/cacheable?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251157140","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-251157140","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":251157140,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTE1NzE0MA==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2016-10-03T16:39:17Z","updated_at":"2016-10-03T16:39:17Z","author_association":"CONTRIBUTOR","body":"@bleskes This is the correct way to do this.  We can even leave the method in the whitelist and just specialize on that specific method as it seems more intuitive than pulling 'now' out of a params map.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251157913","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-251157913","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":251157913,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTE1NzkxMw==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-10-03T16:42:31Z","updated_at":"2016-10-03T16:42:31Z","author_association":"CONTRIBUTOR","body":"So, like, for painless we detect that someone wants `now` and if they do then we stick it in the params map? That sounds good, though we'll need to do some work to make sure that this properly dodges the request cache.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251158361","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-251158361","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":251158361,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTE1ODM2MQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2016-10-03T16:44:19Z","updated_at":"2016-10-03T16:44:19Z","author_association":"MEMBER","body":"I actually like the idea more of having a special variable, instead of calling `now()`, as it makes it clear the value will not change within the request (for example, using in two different clauses within a script).\n\nThe only caveat is this will require some distributed changes, as we need to create this timestamp on coordinating node, and send it along with shard request, and then allow scripting engines to pull it in when a script uses `now`.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251159211","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-251159211","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":251159211,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTE1OTIxMQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-10-03T16:47:36Z","updated_at":"2016-10-03T16:47:36Z","author_association":"MEMBER","body":"One upside of a parameter is that it can be set on the coordinating node which means now is the same across shard. Not sure if we can do that with painless magic. Another upside is that it will be available in expressions as well.\n\n> On 3 Oct 2016, at 6:42 PM, Nik Everett notifications@github.com wrote:\n> \n> So, like, for painless we detect that someone wants now and if they do then we stick it in the params map? That sounds good, though we'll need to do some work to make sure that this properly dodges the request cache.\n> \n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251166995","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-251166995","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":251166995,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTE2Njk5NQ==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2016-10-03T17:17:54Z","updated_at":"2016-10-03T17:17:54Z","author_association":"CONTRIBUTOR","body":"@rjernst Fair enough about the special variable.  Do you care if it's a variable of a method?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251169930","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-251169930","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":251169930,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTE2OTkzMA==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2016-10-03T17:29:08Z","updated_at":"2016-10-03T17:29:08Z","author_association":"MEMBER","body":"I think a variable implies more that the value will not change between uses, vs a method, especially one called `now()` might be confusing. Perhaps we could at least change to a variable to start, with painless setting it equal to a `now()` call during parameter setup (so it would not be per document, but once when binding the script for a shard), and then follow up to make this value in a future change consistent across shards.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251170281","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-251170281","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":251170281,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTE3MDI4MQ==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2016-10-03T17:30:28Z","updated_at":"2016-10-03T17:30:28Z","author_association":"CONTRIBUTOR","body":"Yeah, sounds good.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251176562","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-251176562","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":251176562,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTE3NjU2Mg==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-10-03T17:54:07Z","updated_at":"2016-10-03T17:54:07Z","author_association":"MEMBER","body":"Another question I had is the following - it seems to me that we should resolve stored scripts on the coordinating node as well. If that's the case, and we took care of the now(), is there anything else that can render a script not cachable? I think we're good there?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251177215","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-251177215","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":251177215,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTE3NzIxNQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2016-10-03T17:56:32Z","updated_at":"2016-10-03T17:56:32Z","author_association":"MEMBER","body":"> it seems to me that we should resolve stored scripts on the coordinating node as well\n\nNot sure about this; it would mean passing along the source of the stored script to shards, which effectively becomes an inline script. I think that would be hard to manage, give the separate security settings for disabling inline scripts vs stored scripts, and there would be no way for shards to understand the difference (that could not also be used by someone trying to circumvent the disabling of inline scripts).\n\n> is there anything else that can render a script not cachable?\n\nAnything that is not idempotent, but I don't know of anything else at this time.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251182134","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-251182134","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":251182134,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTE4MjEzNA==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-10-03T18:14:47Z","updated_at":"2016-10-03T18:14:47Z","author_association":"MEMBER","body":"I think the security aspect is the same, regardless if it's done on shard or the coordinating node?\n\nRe transfer of the whole script - I agree it's a shame if the script is large. On the other hand it also provides consistency. We have no guarantee that all shards will have the same script if it is concurrently changed. Seems like all in all it is the easiest to do? \n\n> On 3 Oct 2016, at 7:56 PM, Ryan Ernst notifications@github.com wrote:\n> \n> it seems to me that we should resolve stored scripts on the coordinating node as well\n> \n> Not sure about this; it would mean passing along the source of the stored script to shards, which effectively becomes an inline script. I think that would be hard to manage, give the separate security settings for disabling inline scripts vs stored scripts, and there would be no way for shards to understand the difference (that could not also be used by someone trying to circumvent the disabling of inline scripts).\n> \n> is there anything else that can render a script not cachable?\n> \n> Anything that is not idempotent, but I don't know of anything else at this time.\n> \n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251183082","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-251183082","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":251183082,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTE4MzA4Mg==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2016-10-03T18:18:10Z","updated_at":"2016-10-03T18:18:10Z","author_association":"MEMBER","body":"> I think the security aspect is the same, regardless if it's done on shard or the coordinating node?\n\nI don't think so? Inline scripting could be disabled, with a block on putting stored scripts (for example, putting them into cluster state while \"closed off\" from the outside world, and then restarting with a block), so you effectively have read only stored scripts.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251197841","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-251197841","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":251197841,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTE5Nzg0MQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-10-03T19:12:45Z","updated_at":"2016-10-03T19:12:45Z","author_association":"MEMBER","body":"I spoke with @rjernst and it seems that the concern with enforcing the script setting on the coordinating node is that someone will be able to bypass it by making/faking a shard level transport request directly to the data nodes. While that will indeed work it falls into a much bigger list of evil things people could do if the use direct transport messages - these range from deleting data to replacing any stored script with another. I don't think it should influence our decision here. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251200135","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-251200135","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":251200135,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTIwMDEzNQ==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2016-10-03T19:21:23Z","updated_at":"2016-10-03T19:21:23Z","author_association":"CONTRIBUTOR","body":"Security absolutely should influence our decision here.  Just because something else is already insecure doesn't mean we should feel free to add more insecurities.  We should be working toward making the other things more secure.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251206905","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-251206905","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":251206905,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTIwNjkwNQ==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2016-10-03T19:48:16Z","updated_at":"2016-10-03T19:48:34Z","author_association":"CONTRIBUTOR","body":"Spoke with @bleskes just now.  I better understand his arguments, but need some more time to process.  We'll hop on zoom tomorrow to discuss a solution.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251315824","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-251315824","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":251315824,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTMxNTgyNA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-10-04T07:36:49Z","updated_at":"2016-10-04T07:36:49Z","author_association":"CONTRIBUTOR","body":"whatever we decide here, I think this must be fixed for 5.0 GA so if anybody is working on this please assign the issue. I will pick it up tomorrow if nobody did so\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251316418","html_url":"https://github.com/elastic/elasticsearch/issues/20645#issuecomment-251316418","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20645","id":251316418,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTMxNjQxOA==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-10-04T07:40:03Z","updated_at":"2016-10-04T07:40:03Z","author_association":"MEMBER","body":"> I think this must be fixed for 5.0 GA\n\n++ . I think we are all in alignment on the fix for 5.0 (disable caching for scripts). The discussion is about future work.\n","performed_via_github_app":null}]