[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/540008684","html_url":"https://github.com/elastic/elasticsearch/issues/47796#issuecomment-540008684","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47796","id":540008684,"node_id":"MDEyOklzc3VlQ29tbWVudDU0MDAwODY4NA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-10-09T13:47:33Z","updated_at":"2019-10-09T13:47:33Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra (:Core/Infra/Build)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/540100992","html_url":"https://github.com/elastic/elasticsearch/issues/47796#issuecomment-540100992","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47796","id":540100992,"node_id":"MDEyOklzc3VlQ29tbWVudDU0MDEwMDk5Mg==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2019-10-09T17:20:32Z","updated_at":"2019-10-09T17:20:32Z","author_association":"MEMBER","body":"While we provision the jdk used within packaging tests, I don't think we do this for tests? AFAIR we still use RUNTIME_JAVA_HOME to control the java used for running tests. If we want to remove the JAVA<n>_HOME that seems fine, but then we need to also remove the alternative sysprops for specifying the java version number to internally select the java N.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/540461507","html_url":"https://github.com/elastic/elasticsearch/issues/47796#issuecomment-540461507","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47796","id":540461507,"node_id":"MDEyOklzc3VlQ29tbWVudDU0MDQ2MTUwNw==","user":{"login":"alpar-t","id":2565652,"node_id":"MDQ6VXNlcjI1NjU2NTI=","avatar_url":"https://avatars1.githubusercontent.com/u/2565652?v=4","gravatar_id":"","url":"https://api.github.com/users/alpar-t","html_url":"https://github.com/alpar-t","followers_url":"https://api.github.com/users/alpar-t/followers","following_url":"https://api.github.com/users/alpar-t/following{/other_user}","gists_url":"https://api.github.com/users/alpar-t/gists{/gist_id}","starred_url":"https://api.github.com/users/alpar-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpar-t/subscriptions","organizations_url":"https://api.github.com/users/alpar-t/orgs","repos_url":"https://api.github.com/users/alpar-t/repos","events_url":"https://api.github.com/users/alpar-t/events{/privacy}","received_events_url":"https://api.github.com/users/alpar-t/received_events","type":"User","site_admin":false},"created_at":"2019-10-10T08:32:31Z","updated_at":"2019-10-10T08:32:31Z","author_association":"CONTRIBUTOR","body":"We do default  `RUNTIME_JAVA_HOME` to `JAVA_HOME` so we can run some tests if it's not set, or use the bundled jdk, so that's fine from a getting started perspective. \r\n  \r\nWe will have to keep the possibility of setting the runtime java home since it's probably not feasible to expect that we will be ale to provision all JDKs we want to test against.  \r\n\r\nWhile we are simplifying, we should remove the env vars and keep the system properties only. There's not much reason to have both. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/540681445","html_url":"https://github.com/elastic/elasticsearch/issues/47796#issuecomment-540681445","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47796","id":540681445,"node_id":"MDEyOklzc3VlQ29tbWVudDU0MDY4MTQ0NQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2019-10-10T17:06:24Z","updated_at":"2019-10-10T17:06:24Z","author_association":"MEMBER","body":"> keep the system properties\r\n\r\nThe system property we are discussing is like `-Druntime.java=N` right? How would that work if `JAVA<N>_HOME` is not present?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/542185402","html_url":"https://github.com/elastic/elasticsearch/issues/47796#issuecomment-542185402","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47796","id":542185402,"node_id":"MDEyOklzc3VlQ29tbWVudDU0MjE4NTQwMg==","user":{"login":"alpar-t","id":2565652,"node_id":"MDQ6VXNlcjI1NjU2NTI=","avatar_url":"https://avatars1.githubusercontent.com/u/2565652?v=4","gravatar_id":"","url":"https://api.github.com/users/alpar-t","html_url":"https://github.com/alpar-t","followers_url":"https://api.github.com/users/alpar-t/followers","following_url":"https://api.github.com/users/alpar-t/following{/other_user}","gists_url":"https://api.github.com/users/alpar-t/gists{/gist_id}","starred_url":"https://api.github.com/users/alpar-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpar-t/subscriptions","organizations_url":"https://api.github.com/users/alpar-t/orgs","repos_url":"https://api.github.com/users/alpar-t/repos","events_url":"https://api.github.com/users/alpar-t/events{/privacy}","received_events_url":"https://api.github.com/users/alpar-t/received_events","type":"User","site_admin":false},"created_at":"2019-10-15T12:24:28Z","updated_at":"2019-10-15T12:24:28Z","author_association":"CONTRIBUTOR","body":"yes, I was thinking about properties such as `runtime,java`. \r\nMy thinking is that it could take either a path, similar to the env var, or a number, which could work without `JAVAN_HOME` if we provision that version of Java instead of relying on  `JAVAN_HOME` being present.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/542428650","html_url":"https://github.com/elastic/elasticsearch/issues/47796#issuecomment-542428650","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47796","id":542428650,"node_id":"MDEyOklzc3VlQ29tbWVudDU0MjQyODY1MA==","user":{"login":"mark-vieira","id":4106672,"node_id":"MDQ6VXNlcjQxMDY2NzI=","avatar_url":"https://avatars2.githubusercontent.com/u/4106672?v=4","gravatar_id":"","url":"https://api.github.com/users/mark-vieira","html_url":"https://github.com/mark-vieira","followers_url":"https://api.github.com/users/mark-vieira/followers","following_url":"https://api.github.com/users/mark-vieira/following{/other_user}","gists_url":"https://api.github.com/users/mark-vieira/gists{/gist_id}","starred_url":"https://api.github.com/users/mark-vieira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mark-vieira/subscriptions","organizations_url":"https://api.github.com/users/mark-vieira/orgs","repos_url":"https://api.github.com/users/mark-vieira/repos","events_url":"https://api.github.com/users/mark-vieira/events{/privacy}","received_events_url":"https://api.github.com/users/mark-vieira/received_events","type":"User","site_admin":false},"created_at":"2019-10-15T22:17:52Z","updated_at":"2019-10-15T22:17:52Z","author_association":"CONTRIBUTOR","body":"> Right now we require multiple JAVA<n>_HOME env variables to be present despite the fact that we have the ability to provision JDKs ourselves.\r\n\r\nThe only places I'm aware of where this is _required_ is for BWC builds (where we require the Java versions necessary for that branch) and [this particular fixture](https://github.com/elastic/elasticsearch/blob/8f7855464a5c95a738b443f18ae48390fd99128e/modules/reindex/build.gradle#L119). In any case we provide a [pretty descriptive error message](https://github.com/elastic/elasticsearch/blob/55f4988f8d76aa803cd04e9ffbadf1dc906a1b66/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy#L307).\r\n\r\n> We are also lacking some validation in case one of these is not configured correct ( e.x. set to a missing folder or set to a JRE instead of a JDK ).\r\n\r\nWe do [validate these variables](https://github.com/elastic/elasticsearch/blob/02286e9d3d259b6e484da6527eaf2f8f4dd87a83/buildSrc/src/main/java/org/elasticsearch/gradle/info/GenerateGlobalBuildInfoTask.java#L196-L214). We ensure they are pointing to a proper Java install folder for the correct versions. So setting `JAVA9_HOME` to a random folder, or a Java 8 JDK would both result in a build error. I believe we implicitly validate this is a JDK vs JRE via the dependence on `jrunscript` since that's only available in the JDK.\r\n\r\nThat said, I would like us to make some improvements to our current JDK download plugin before we make the build \"self-provisioning\" by default. The main one being the unnecessary extracting of the JDK after every `clean`. There are a few ways to solve this but so far it's not been too annoying, but if we use it for _all_ test execution it might get a bit annoying.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/645493374","html_url":"https://github.com/elastic/elasticsearch/issues/47796#issuecomment-645493374","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47796","id":645493374,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NTQ5MzM3NA==","user":{"login":"mark-vieira","id":4106672,"node_id":"MDQ6VXNlcjQxMDY2NzI=","avatar_url":"https://avatars2.githubusercontent.com/u/4106672?v=4","gravatar_id":"","url":"https://api.github.com/users/mark-vieira","html_url":"https://github.com/mark-vieira","followers_url":"https://api.github.com/users/mark-vieira/followers","following_url":"https://api.github.com/users/mark-vieira/following{/other_user}","gists_url":"https://api.github.com/users/mark-vieira/gists{/gist_id}","starred_url":"https://api.github.com/users/mark-vieira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mark-vieira/subscriptions","organizations_url":"https://api.github.com/users/mark-vieira/orgs","repos_url":"https://api.github.com/users/mark-vieira/repos","events_url":"https://api.github.com/users/mark-vieira/events{/privacy}","received_events_url":"https://api.github.com/users/mark-vieira/received_events","type":"User","site_admin":false},"created_at":"2020-06-17T16:51:59Z","updated_at":"2020-06-17T16:51:59Z","author_association":"CONTRIBUTOR","body":"Closing this as it was addressed by #52606.","performed_via_github_app":null}]