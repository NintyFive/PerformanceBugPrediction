[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/8194259","html_url":"https://github.com/elastic/elasticsearch/issues/2218#issuecomment-8194259","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2218","id":8194259,"node_id":"MDEyOklzc3VlQ29tbWVudDgxOTQyNTk=","user":{"login":"unikoid","id":772189,"node_id":"MDQ6VXNlcjc3MjE4OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/772189?v=4","gravatar_id":"","url":"https://api.github.com/users/unikoid","html_url":"https://github.com/unikoid","followers_url":"https://api.github.com/users/unikoid/followers","following_url":"https://api.github.com/users/unikoid/following{/other_user}","gists_url":"https://api.github.com/users/unikoid/gists{/gist_id}","starred_url":"https://api.github.com/users/unikoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/unikoid/subscriptions","organizations_url":"https://api.github.com/users/unikoid/orgs","repos_url":"https://api.github.com/users/unikoid/repos","events_url":"https://api.github.com/users/unikoid/events{/privacy}","received_events_url":"https://api.github.com/users/unikoid/received_events","type":"User","site_admin":false},"created_at":"2012-08-31T14:46:08Z","updated_at":"2012-08-31T14:46:08Z","author_association":"NONE","body":"1 minute ago I tryed to delete index completely and reindex all my data from db again. It helps. But I'm afraid that an issue can appear again soon.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/8292806","html_url":"https://github.com/elastic/elasticsearch/issues/2218#issuecomment-8292806","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2218","id":8292806,"node_id":"MDEyOklzc3VlQ29tbWVudDgyOTI4MDY=","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2012-09-05T09:45:55Z","updated_at":"2012-09-05T09:45:55Z","author_association":"MEMBER","body":"If you can get a recreation, it would help to try and solve this. What you do should work, i.e. searching across all types. One possible reason for this is maybe some types share the same field name, but with different field type? For example, you have an age field in two types, where in one its a string, and in the other its numeric? In this case, without specifying the type, ES will pick one of those to build the query.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/8357121","html_url":"https://github.com/elastic/elasticsearch/issues/2218#issuecomment-8357121","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2218","id":8357121,"node_id":"MDEyOklzc3VlQ29tbWVudDgzNTcxMjE=","user":{"login":"unikoid","id":772189,"node_id":"MDQ6VXNlcjc3MjE4OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/772189?v=4","gravatar_id":"","url":"https://api.github.com/users/unikoid","html_url":"https://github.com/unikoid","followers_url":"https://api.github.com/users/unikoid/followers","following_url":"https://api.github.com/users/unikoid/following{/other_user}","gists_url":"https://api.github.com/users/unikoid/gists{/gist_id}","starred_url":"https://api.github.com/users/unikoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/unikoid/subscriptions","organizations_url":"https://api.github.com/users/unikoid/orgs","repos_url":"https://api.github.com/users/unikoid/repos","events_url":"https://api.github.com/users/unikoid/events{/privacy}","received_events_url":"https://api.github.com/users/unikoid/received_events","type":"User","site_admin":false},"created_at":"2012-09-07T06:26:37Z","updated_at":"2012-09-07T12:47:38Z","author_association":"NONE","body":"No, there are no types that share the same field name, but with different field type. I will try to provide a testcase, but now I can't provide all our data, it's hundreds of thousands of docs.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/9916662","html_url":"https://github.com/elastic/elasticsearch/issues/2218#issuecomment-9916662","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2218","id":9916662,"node_id":"MDEyOklzc3VlQ29tbWVudDk5MTY2NjI=","user":{"login":"steeve","id":137467,"node_id":"MDQ6VXNlcjEzNzQ2Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/137467?v=4","gravatar_id":"","url":"https://api.github.com/users/steeve","html_url":"https://github.com/steeve","followers_url":"https://api.github.com/users/steeve/followers","following_url":"https://api.github.com/users/steeve/following{/other_user}","gists_url":"https://api.github.com/users/steeve/gists{/gist_id}","starred_url":"https://api.github.com/users/steeve/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/steeve/subscriptions","organizations_url":"https://api.github.com/users/steeve/orgs","repos_url":"https://api.github.com/users/steeve/repos","events_url":"https://api.github.com/users/steeve/events{/privacy}","received_events_url":"https://api.github.com/users/steeve/received_events","type":"User","site_admin":false},"created_at":"2012-10-30T18:09:04Z","updated_at":"2012-10-30T18:09:04Z","author_association":"NONE","body":"Same issue here :(\n\n`type1,type2` works as expected, but `type2,type1` returns no results.\n\nNote that each type has it's own analyzer (multilang).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/9996726","html_url":"https://github.com/elastic/elasticsearch/issues/2218#issuecomment-9996726","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2218","id":9996726,"node_id":"MDEyOklzc3VlQ29tbWVudDk5OTY3MjY=","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2012-11-01T21:30:28Z","updated_at":"2012-11-01T21:30:28Z","author_association":"MEMBER","body":"When you do \"cross\" type search, the first field that we find for the type we use its mapping definition to construct the query. There has been requests for a different behavior, using boolean logic between fields of different types, but for now, you can simply search on all types, and have your query be type specific on the same field (i.e. `type1.field1`, `type2.field1`).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/13773632","html_url":"https://github.com/elastic/elasticsearch/issues/2218#issuecomment-13773632","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2218","id":13773632,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNzczNjMy","user":{"login":"bclozel","id":103264,"node_id":"MDQ6VXNlcjEwMzI2NA==","avatar_url":"https://avatars2.githubusercontent.com/u/103264?v=4","gravatar_id":"","url":"https://api.github.com/users/bclozel","html_url":"https://github.com/bclozel","followers_url":"https://api.github.com/users/bclozel/followers","following_url":"https://api.github.com/users/bclozel/following{/other_user}","gists_url":"https://api.github.com/users/bclozel/gists{/gist_id}","starred_url":"https://api.github.com/users/bclozel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bclozel/subscriptions","organizations_url":"https://api.github.com/users/bclozel/orgs","repos_url":"https://api.github.com/users/bclozel/repos","events_url":"https://api.github.com/users/bclozel/events{/privacy}","received_events_url":"https://api.github.com/users/bclozel/received_events","type":"User","site_admin":false},"created_at":"2013-02-19T14:02:10Z","updated_at":"2013-02-19T14:02:10Z","author_association":"NONE","body":"Got caught by this one.\nHad a different mapping configuration on types (with same field name).\n\nGetting different results for `type1,type2` and `type2,type1` feels wrong, but it makes sense once you figure it out.\n\nFixing mappings should do the trick.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/14567310","html_url":"https://github.com/elastic/elasticsearch/issues/2218#issuecomment-14567310","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2218","id":14567310,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTY3MzEw","user":{"login":"jbarata","id":254429,"node_id":"MDQ6VXNlcjI1NDQyOQ==","avatar_url":"https://avatars2.githubusercontent.com/u/254429?v=4","gravatar_id":"","url":"https://api.github.com/users/jbarata","html_url":"https://github.com/jbarata","followers_url":"https://api.github.com/users/jbarata/followers","following_url":"https://api.github.com/users/jbarata/following{/other_user}","gists_url":"https://api.github.com/users/jbarata/gists{/gist_id}","starred_url":"https://api.github.com/users/jbarata/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbarata/subscriptions","organizations_url":"https://api.github.com/users/jbarata/orgs","repos_url":"https://api.github.com/users/jbarata/repos","events_url":"https://api.github.com/users/jbarata/events{/privacy}","received_events_url":"https://api.github.com/users/jbarata/received_events","type":"User","site_admin":false},"created_at":"2013-03-07T15:36:59Z","updated_at":"2013-03-07T15:36:59Z","author_association":"NONE","body":"Hi, \nI think I'm having the same problem.\n\nWe have a simple search page (with an input field) where a user can search for anything in our 2 types of docs (client and invoice). \nA `cliente` doc is like `{\"name\":\"john\"}` and an invoice doc is like `{\"number\":\"123\", \"client\":{\"name\":\"john\"}}`\n\nThe output of the search, beside de docs, consists of a grand total and byType totals.\n\nIf the search consists of only the text to be found, for eg. `john`, than all the docs are shown and all the totals are OK.\nIf the search is like `name:john` than the results are NOT OK (it returns the only client doc or the invoice doc, depending on the types order that goes to ElasticSearch); also the totals are incorrect.\n\nTo reproduce the situation execute the following curls against your ElasticSearch:\n\n```\nCreate the index `testindex`\ncurl -XPUT 'http://127.0.0.1:9602/testindex'\n\nCreate a type `client` where docs have a root field `name`\ncurl -XPUT 'http://127.0.0.1:9602/testindex/client/1' -d '{\"name\":\"john\"}'\n\nCreate a type `invoice` where docs have a root field `number` and an object `client` with a `name` field\ncurl -XPUT 'http://127.0.0.1:9602/testindex/invoice/1' -d '{\"number\":\"123\", \"client\":{\"name\":\"john\"}}'\n\n\n\nNow, if one searches for \"name:john\" in the `client` type we get the `client` doc\ncurl -XGET 'http://127.0.0.1:9602/testindex/client/_search?q=name:john'\n\nif the search is made in the `invoice` type we get the `invoice` doc\ncurl -XGET 'http://127.0.0.1:9602/testindex/invoice/_search?q=name:john'\n\nif the search is made in both types with `client` before `invoice` we get only the `client` doc\ncurl -XGET 'http://127.0.0.1:9602/testindex/client,invoice/_search?q=name:john'\n\nif we swap the types order (`invoice` before `client`) we get only the `invoice` doc\ncurl -XGET 'http://127.0.0.1:9602/testindex/invoice,client/_search?q=name:john'\n```\n\nI would expect that the searches made on both types would return both docs but that's not happening.\n\nI guess it may have to do with the mappings.\n\nIs there a way to overcome this problem? (without manually extract the fields from the user query and build a multi-match query as suggested in https://groups.google.com/forum/#!topic/elasticsearch/-RZtZykZq5o) \n\nThanks in advance!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/14583894","html_url":"https://github.com/elastic/elasticsearch/issues/2218#issuecomment-14583894","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2218","id":14583894,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTgzODk0","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2013-03-07T20:23:11Z","updated_at":"2013-03-07T20:23:11Z","author_association":"MEMBER","body":"@jbarata you can search on all types:\n\n``` sh\ncurl -XGET 'http://localhost:9200/testindex/_search?q=john&pretty'\n```\n\nproduces:\n\n``` javascript\n{\n  \"took\" : 2,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 2,\n    \"max_score\" : 0.5945348,\n    \"hits\" : [ {\n      \"_index\" : \"testindex\",\n      \"_type\" : \"client\",\n      \"_id\" : \"1\",\n      \"_score\" : 0.5945348, \"_source\" : {\"name\":\"john\"}\n    }, {\n      \"_index\" : \"testindex\",\n      \"_type\" : \"invoice\",\n      \"_id\" : \"1\",\n      \"_score\" : 0.37158427, \"_source\" : {\"number\":\"123\", \"client\":{\"name\":\"john\"}}\n    } ]\n  }\n}\n```\n\nHere is a full recreation: https://gist.github.com/dadoonet/5111167\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/14590412","html_url":"https://github.com/elastic/elasticsearch/issues/2218#issuecomment-14590412","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2218","id":14590412,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTkwNDEy","user":{"login":"jbarata","id":254429,"node_id":"MDQ6VXNlcjI1NDQyOQ==","avatar_url":"https://avatars2.githubusercontent.com/u/254429?v=4","gravatar_id":"","url":"https://api.github.com/users/jbarata","html_url":"https://github.com/jbarata","followers_url":"https://api.github.com/users/jbarata/followers","following_url":"https://api.github.com/users/jbarata/following{/other_user}","gists_url":"https://api.github.com/users/jbarata/gists{/gist_id}","starred_url":"https://api.github.com/users/jbarata/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbarata/subscriptions","organizations_url":"https://api.github.com/users/jbarata/orgs","repos_url":"https://api.github.com/users/jbarata/repos","events_url":"https://api.github.com/users/jbarata/events{/privacy}","received_events_url":"https://api.github.com/users/jbarata/received_events","type":"User","site_admin":false},"created_at":"2013-03-07T22:26:13Z","updated_at":"2013-03-07T22:26:13Z","author_association":"NONE","body":"@dadoonet \nthank you very much for taking the time to test this.\n\nYou might have not noticed in the beginning of my post but i have done that test with success (when the query has no field filter everything works fine)\n\n> If the search consists of only the text to be found, for eg. john, than all the docs are shown and all the totals are OK.\n\nThe problem is when the query has a field filter that exists in different levels of the JSONs, as is the `name` field in my example.\n\ncheers!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/14752567","html_url":"https://github.com/elastic/elasticsearch/issues/2218#issuecomment-14752567","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2218","id":14752567,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NzUyNTY3","user":{"login":"jbarata","id":254429,"node_id":"MDQ6VXNlcjI1NDQyOQ==","avatar_url":"https://avatars2.githubusercontent.com/u/254429?v=4","gravatar_id":"","url":"https://api.github.com/users/jbarata","html_url":"https://github.com/jbarata","followers_url":"https://api.github.com/users/jbarata/followers","following_url":"https://api.github.com/users/jbarata/following{/other_user}","gists_url":"https://api.github.com/users/jbarata/gists{/gist_id}","starred_url":"https://api.github.com/users/jbarata/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbarata/subscriptions","organizations_url":"https://api.github.com/users/jbarata/orgs","repos_url":"https://api.github.com/users/jbarata/repos","events_url":"https://api.github.com/users/jbarata/events{/privacy}","received_events_url":"https://api.github.com/users/jbarata/received_events","type":"User","site_admin":false},"created_at":"2013-03-12T00:50:36Z","updated_at":"2013-03-12T00:50:36Z","author_association":"NONE","body":"Also, @kimchy solution would do just fine for now but it seems not to work (at least in this case)\n\n> you can simply search on all types, and have your query be type specific on the same field (i.e. type1.field1, type2.field1).\n\nIf I use `client.name` as in\n`curl -XGET 'http://127.0.0.1:9602/testindex/client,invoice/_search?q=client.name:john'`\nI'll get the `invoice` doc no matter the order of the `invoice` and `client` types. \nWith `client.name` I will only get the client doc if the search is made only on the `client`type (I would be happy if the result was only the client doc whatever the types order is). \n\nIf I use `invoice.client.name` then it will always return the invoice as expected\n\nIs there a problem with the subpath to the field being equal in both types?\nIs there a way to force field full path by configuration or query parameter (searched a lot but could not find a way to do this)\n\nThanks\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/14807266","html_url":"https://github.com/elastic/elasticsearch/issues/2218#issuecomment-14807266","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2218","id":14807266,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODA3MjY2","user":{"login":"jbarata","id":254429,"node_id":"MDQ6VXNlcjI1NDQyOQ==","avatar_url":"https://avatars2.githubusercontent.com/u/254429?v=4","gravatar_id":"","url":"https://api.github.com/users/jbarata","html_url":"https://github.com/jbarata","followers_url":"https://api.github.com/users/jbarata/followers","following_url":"https://api.github.com/users/jbarata/following{/other_user}","gists_url":"https://api.github.com/users/jbarata/gists{/gist_id}","starred_url":"https://api.github.com/users/jbarata/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbarata/subscriptions","organizations_url":"https://api.github.com/users/jbarata/orgs","repos_url":"https://api.github.com/users/jbarata/repos","events_url":"https://api.github.com/users/jbarata/events{/privacy}","received_events_url":"https://api.github.com/users/jbarata/received_events","type":"User","site_admin":false},"created_at":"2013-03-12T22:00:54Z","updated_at":"2013-03-12T22:21:33Z","author_association":"NONE","body":"Hi again!\njust to let you guys now that I managed to put it returning the correct results if I \"promote\" the types to be separated indexes and ignore the types altogether, i.e having one type per index.\n\nDo you think there will be any performance problems with this approach?\nThanks\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/14807506","html_url":"https://github.com/elastic/elasticsearch/issues/2218#issuecomment-14807506","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2218","id":14807506,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODA3NTA2","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2013-03-12T22:03:13Z","updated_at":"2013-03-12T22:03:13Z","author_association":"MEMBER","body":"@jbarata don't think you will notice a performance difference, and yea, the reason why it happens is that ES needs to decide on what to search, either `name` or `customer.name`, and thats picked based on the first type match\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/14808717","html_url":"https://github.com/elastic/elasticsearch/issues/2218#issuecomment-14808717","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2218","id":14808717,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODA4NzE3","user":{"login":"jbarata","id":254429,"node_id":"MDQ6VXNlcjI1NDQyOQ==","avatar_url":"https://avatars2.githubusercontent.com/u/254429?v=4","gravatar_id":"","url":"https://api.github.com/users/jbarata","html_url":"https://github.com/jbarata","followers_url":"https://api.github.com/users/jbarata/followers","following_url":"https://api.github.com/users/jbarata/following{/other_user}","gists_url":"https://api.github.com/users/jbarata/gists{/gist_id}","starred_url":"https://api.github.com/users/jbarata/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbarata/subscriptions","organizations_url":"https://api.github.com/users/jbarata/orgs","repos_url":"https://api.github.com/users/jbarata/repos","events_url":"https://api.github.com/users/jbarata/events{/privacy}","received_events_url":"https://api.github.com/users/jbarata/received_events","type":"User","site_admin":false},"created_at":"2013-03-12T22:15:03Z","updated_at":"2013-03-12T22:15:03Z","author_association":"NONE","body":"Ok @kimchy :+1: \n\nIf I find any problems implementing this approach I'll report it here so it helps others in any way :)\n\nThanks a lot for your help.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/14839603","html_url":"https://github.com/elastic/elasticsearch/issues/2218#issuecomment-14839603","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2218","id":14839603,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODM5NjAz","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2013-03-13T13:00:34Z","updated_at":"2013-03-13T13:00:34Z","author_association":"CONTRIBUTOR","body":"I'm wondering if we should make the field \"chooser\" more predictable, eg choosing the field that starts with a type name before a field that doesn't, so `customer.name` should match type `customer`, field `name` before it matches type `invoice`, field `customer.name`.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/48361854","html_url":"https://github.com/elastic/elasticsearch/issues/2218#issuecomment-48361854","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2218","id":48361854,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzYxODU0","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-07-08T16:13:38Z","updated_at":"2014-07-08T16:13:38Z","author_association":"CONTRIBUTOR","body":"Closed in favour of #4081 \n","performed_via_github_app":null}]