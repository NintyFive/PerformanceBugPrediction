[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49720485","html_url":"https://github.com/elastic/elasticsearch/issues/6955#issuecomment-49720485","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6955","id":49720485,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzIwNDg1","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-07-22T10:10:13Z","updated_at":"2014-07-22T10:10:13Z","author_association":"CONTRIBUTOR","body":"/cc @brwe @rjernst \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49734111","html_url":"https://github.com/elastic/elasticsearch/issues/6955#issuecomment-49734111","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6955","id":49734111,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzM0MTEx","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2014-07-22T12:51:01Z","updated_at":"2014-07-22T12:51:01Z","author_association":"CONTRIBUTOR","body":"Can you use multiple reviews as a temporary workaround for this?  I haven't\nchecked the all API but I image so. If so it might be worth checking how\nmuch this improves performance over the work around. Could be substantial\nbecause multiple rescores has to sort between each.\nOn Jul 22, 2014 6:10 AM, \"Lee Hinman\" notifications@github.com wrote:\n\n> +1 on boost_factor for any sub function\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/elasticsearch/elasticsearch/issues/6955#issuecomment-49720535\n> .\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49887680","html_url":"https://github.com/elastic/elasticsearch/issues/6955#issuecomment-49887680","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6955","id":49887680,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODg3Njgw","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2014-07-23T15:12:27Z","updated_at":"2014-07-23T15:12:27Z","author_association":"CONTRIBUTOR","body":"@nik9000  I do not think there is a workaround currently which is unfortunate. \n\nI think having the boost factor for each function would make a lot of sense. \nAlternatively I though we could also do something like nest `function_score` in functions like in the below example and then use each function again together with the score computed inside the query. That would allow lots of flexibility but would be a json nightmare I guess...\n\n@s1monw mentioned we could use expressions and expose many of the current functions as expression. That way everyone could write their custom function easily (and add whatever factor they wish) without performance loss.\n\nBut implementing a boost factor for each function seems like the easiest thing to do right now.\n\n```\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {},\n      \"functions\": [\n        {\n          \"boost_factor\": 2,\n          \"query\": {\n            \"function_score\": {\n              \"functions\": [\n                {\n                  \"gauss\": {\n                    \"FIELD\": {\n                      \"origin\": \"...\",\n                      \"scale\": \"...\"\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        },\n        {\n          \"boost_factor\": 2,\n          \"query\": {\n            \"function_score\": {\n              \"functions\": [\n                {...}\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n(also cc @HonzaKral )\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/50140030","html_url":"https://github.com/elastic/elasticsearch/issues/6955#issuecomment-50140030","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6955","id":50140030,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMTQwMDMw","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2014-07-25T12:00:50Z","updated_at":"2014-07-25T12:00:50Z","author_association":"CONTRIBUTOR","body":"If we implement the boost_factor thing, I think `weight` might be a better name for it. \nHere is how this could look like:\n\n```\n{\n  \"query\": {\n    \"function_score\": {\n      \"functions\": [\n        {\n          \"exp\": {\n            ...\n          },\n          \"weight\": 2\n        },\n        {\n          \"random_score\": {\n            ...\n          }, \n          \"weight\": 0.01\n        }\n      ]\n    }\n  }\n}\n```\n\nIf only one function is in there then this weight does not seem to make sense so I would not allow it. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/50140415","html_url":"https://github.com/elastic/elasticsearch/issues/6955#issuecomment-50140415","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6955","id":50140415,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMTQwNDE1","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-07-25T12:06:23Z","updated_at":"2014-07-25T12:06:23Z","author_association":"CONTRIBUTOR","body":"I like `weight`, although `boost_factor` wouldn't need it.  I'm torn about supporting it if there is only one function.  I understand that you should use `boost` there instead, but...  \n\nHmmm, I think you're right.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/50141190","html_url":"https://github.com/elastic/elasticsearch/issues/6955#issuecomment-50141190","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6955","id":50141190,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMTQxMTkw","user":{"login":"HonzaKral","id":32132,"node_id":"MDQ6VXNlcjMyMTMy","avatar_url":"https://avatars0.githubusercontent.com/u/32132?v=4","gravatar_id":"","url":"https://api.github.com/users/HonzaKral","html_url":"https://github.com/HonzaKral","followers_url":"https://api.github.com/users/HonzaKral/followers","following_url":"https://api.github.com/users/HonzaKral/following{/other_user}","gists_url":"https://api.github.com/users/HonzaKral/gists{/gist_id}","starred_url":"https://api.github.com/users/HonzaKral/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HonzaKral/subscriptions","organizations_url":"https://api.github.com/users/HonzaKral/orgs","repos_url":"https://api.github.com/users/HonzaKral/repos","events_url":"https://api.github.com/users/HonzaKral/events{/privacy}","received_events_url":"https://api.github.com/users/HonzaKral/received_events","type":"User","site_admin":false},"created_at":"2014-07-25T12:15:49Z","updated_at":"2014-07-25T12:15:49Z","author_association":"MEMBER","body":"I see the use case for single function - a lot of people have simple\nqueries that they then expand upon by adding more clauses. At that point it\nwould be simpler to allow this.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/50145946","html_url":"https://github.com/elastic/elasticsearch/issues/6955#issuecomment-50145946","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6955","id":50145946,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMTQ1OTQ2","user":{"login":"alexksikes","id":43475,"node_id":"MDQ6VXNlcjQzNDc1","avatar_url":"https://avatars2.githubusercontent.com/u/43475?v=4","gravatar_id":"","url":"https://api.github.com/users/alexksikes","html_url":"https://github.com/alexksikes","followers_url":"https://api.github.com/users/alexksikes/followers","following_url":"https://api.github.com/users/alexksikes/following{/other_user}","gists_url":"https://api.github.com/users/alexksikes/gists{/gist_id}","starred_url":"https://api.github.com/users/alexksikes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexksikes/subscriptions","organizations_url":"https://api.github.com/users/alexksikes/orgs","repos_url":"https://api.github.com/users/alexksikes/repos","events_url":"https://api.github.com/users/alexksikes/events{/privacy}","received_events_url":"https://api.github.com/users/alexksikes/received_events","type":"User","site_admin":false},"created_at":"2014-07-25T13:07:32Z","updated_at":"2014-07-25T13:07:32Z","author_association":"CONTRIBUTOR","body":"This seems to be an interesting use case until we get another use case. Why not more simply using mathematical expressions to express the different decay functions or a combination them? So I'm definitely +1 on exposing the various functions with Lucene expressions, and on implementing new ones.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/50481825","html_url":"https://github.com/elastic/elasticsearch/issues/6955#issuecomment-50481825","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6955","id":50481825,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNDgxODI1","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2014-07-29T14:19:43Z","updated_at":"2014-07-29T14:19:43Z","author_association":"CONTRIBUTOR","body":"The main reason why we added the decay functions as json with parameters was that not all users like scripting. So, maybe we should have both?\n\nAdding the different functions we have now in `function_score` to expressions is not tied to function score so I think we should have a different issue for that. \n\n@HonzaKral sorry, I was not clear with the single function, I was referring to the case where the score function is not in the function list, like this:\n\n```\n\"function_score\": {\n    \"boost_mode\": \"replace\",\n    \"query\": {...},\n    \"script_score/random/...\": {\n        ....\n    }\n}\n```\n\nDoes not make sense to me to allow it there but I could do it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/50777985","html_url":"https://github.com/elastic/elasticsearch/issues/6955#issuecomment-50777985","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6955","id":50777985,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNzc3OTg1","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2014-07-31T15:50:02Z","updated_at":"2014-07-31T15:50:02Z","author_association":"MEMBER","body":"I'm ok with adding a `weight` parameter to all functions.\n","performed_via_github_app":null}]