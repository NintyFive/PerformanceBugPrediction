{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/30742","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30742/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30742/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30742/events","html_url":"https://github.com/elastic/elasticsearch/issues/30742","id":324647373,"node_id":"MDU6SXNzdWUzMjQ2NDczNzM=","number":30742,"title":"Snapshot and restore queue","user":{"login":"packetrevolt","id":11772104,"node_id":"MDQ6VXNlcjExNzcyMTA0","avatar_url":"https://avatars2.githubusercontent.com/u/11772104?v=4","gravatar_id":"","url":"https://api.github.com/users/packetrevolt","html_url":"https://github.com/packetrevolt","followers_url":"https://api.github.com/users/packetrevolt/followers","following_url":"https://api.github.com/users/packetrevolt/following{/other_user}","gists_url":"https://api.github.com/users/packetrevolt/gists{/gist_id}","starred_url":"https://api.github.com/users/packetrevolt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/packetrevolt/subscriptions","organizations_url":"https://api.github.com/users/packetrevolt/orgs","repos_url":"https://api.github.com/users/packetrevolt/repos","events_url":"https://api.github.com/users/packetrevolt/events{/privacy}","received_events_url":"https://api.github.com/users/packetrevolt/received_events","type":"User","site_admin":false},"labels":[{"id":143077482,"node_id":"MDU6TGFiZWwxNDMwNzc0ODI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Snapshot/Restore","name":":Distributed/Snapshot/Restore","color":"0e8a16","default":false,"description":"Anything directly related to the `_snapshot/*` APIs"},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-05-19T17:46:46Z","updated_at":"2018-05-24T20:10:18Z","closed_at":"2018-05-24T20:10:18Z","author_association":"NONE","active_lock_reason":null,"body":"Specific to using this in the typical ELK stack logging solution the lack of a snapshot/restore queue is confusing to end users and a major limitation.  This has been brought up here before and also on the forums a few times with the suggestion on the forum to open up an issue here.   I was just wondering if there was (or could be) any reconsideration into adding a snapshot/restore queue.\r\n\r\nAn example use case:\r\n- Collect 5TB of logs per day\r\n- Keep 30 days online in Elasticsearch\r\n- 30+ days take a snapshot and delete from Elasticsearch\r\n- Keep snapshot for 1+ years\r\n- Users have the ability to create snapshots of indexes not normally snapshotted\r\n- Users have the ability to restore old snapshots to reference old logs\r\n\r\nAutomation tools that create snapshots need to either wait until completion and then run the next snapshot creation sequentially (Curator) or continually retry the snapshot creation task until successful. The sequential creation of snapshots can get derailed should there be a failure during the process (the server running the snapshot creation tasks getting rebooted for example) and necessary logic introduced to verify that snapshots were indeed created and/or restarting from where the sequential task left off at. This has led to mostly using the continual retry method where independent snapshot jobs all continually attempt to create snapshots until they are successful. It works, but it is very messy and less then idea. This is especially problematic if you want to give certain users the ability to create a snapshot in a cluster where there are continual background snapshot tasks running throughout the day, a user either has to get lucky and create a snapshot when no other one is running or the user has to resort to scripting a loop for the snapshot creation request that continues to loop until successful.\r\n\r\nRestores are particularly painful. Users sometimes need to go back to back and reference the data that was archived off in snapshots which means it needs to be restored. This runs into the same problem above in that there is no queue for snapshot tasks in Elasticsearch so a user is either left trying to manually restore a snapshot repeatedly until successful, or writing a script that loops indefinitely until successful. How does a user get his restore to happen sooner? Have the script loop once per second of course!! since the snapshot API is first come first serve.","closed_by":{"login":"tomcallahan","id":15988488,"node_id":"MDQ6VXNlcjE1OTg4NDg4","avatar_url":"https://avatars1.githubusercontent.com/u/15988488?v=4","gravatar_id":"","url":"https://api.github.com/users/tomcallahan","html_url":"https://github.com/tomcallahan","followers_url":"https://api.github.com/users/tomcallahan/followers","following_url":"https://api.github.com/users/tomcallahan/following{/other_user}","gists_url":"https://api.github.com/users/tomcallahan/gists{/gist_id}","starred_url":"https://api.github.com/users/tomcallahan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomcallahan/subscriptions","organizations_url":"https://api.github.com/users/tomcallahan/orgs","repos_url":"https://api.github.com/users/tomcallahan/repos","events_url":"https://api.github.com/users/tomcallahan/events{/privacy}","received_events_url":"https://api.github.com/users/tomcallahan/received_events","type":"User","site_admin":false},"performed_via_github_app":null}