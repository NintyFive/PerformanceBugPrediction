{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/4520","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4520/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4520/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4520/events","html_url":"https://github.com/elastic/elasticsearch/issues/4520","id":24566690,"node_id":"MDU6SXNzdWUyNDU2NjY5MA==","number":4520,"title":"Custom _all fields","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"labels":[{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":74899026,"node_id":"MDU6TGFiZWw3NDg5OTAyNg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.0.0","name":"v1.0.0","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"assignees":[{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":12,"created_at":"2013-12-19T16:22:58Z","updated_at":"2014-01-31T18:23:56Z","closed_at":"2014-01-20T16:05:06Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In the quest for a cleaner way of setting up custom `_all` fields, there are two questions that need to be answered:\n1. Does it ever make sense to index tokens from different analyzer chains into a single field?\n2. Can we support per-field boosting on the custom `_all` field (like we do with the `_all` field), and can we only pay the query-time price of per-field boosting if it used?\n## Different analyzer chains\n\nI can't think of a good use case where it makes sense to combine the output from different analyzer chains into a single field.  The field can only ever be searched via a single analyzer, multiple analyzers can produce tokens which interfere with each other (and so produce wrong results) and the term frequencies for overlapping tokens will be badly messed up.  Also, a clean token stream should never have offsets move \"backwards\".\n\nSo I think we can discount multiple analyzers outputting to a single field.\n## Per-field boosting\n\nWhen combining multiple fields into a single field, you lose the effect of field norms (ie title is shorter and thus more important than body).  Field-level boosting at index time is the only way to maintain this distinction.\n\nThe `_all` field takes field-level boosts into account by storing any boost that is not 1.0 as a payload with each term.  Retrieving these payloads has an impact on query performance, but the `_all` field has an optimization called \"auto_boost\" which allows you to only pay the price of payloads if any included field has a boost other than 1.0.  \n\nI think field-level boosts should be supported with custom `_all` fields too.\n# Proposed syntax\n\nGiven that we're not going to support separate analyzer chains, the current way of implementing custom `_all` fields with multi-fields is verbose and misleading, as it implies that each source field can apply its own analyzer.  \n\nInstead, we suggest the following:\n\n```\n{ \"title\": {\n    \"type\": \"string\",\n    \"copy_to\": \"my_all_field\"\n}}\n```\n\nThe `copy_to` parameter can also support an array of fieldnames:\n\n```\n\"copy_to\": [ \"my_all_field_1\", \"my_all_field_2\" ]\n```\n\nPer-field boosting could be specified in two ways:\n1. With the caret `^` syntax:\n   \n   \"copy_to\": \"my_all_field^2\"\n2. As an object:\n   \n   \"copy_to\": { \"field\": \"my_all_field\", \"boost\": 2 }\n\nThe destination custom `_all` field can be defined in the mapping:\n\n```\n\"my_all_field\": {\n    \"type\": \"string\",\n    \"analyzer\": \"my_analyzer\"\n}\n```\n\nIf it is not defined in the mapping, then it should be added using dynamic mapping (or fail if dynamic mapping is disabled)\n","closed_by":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"performed_via_github_app":null}