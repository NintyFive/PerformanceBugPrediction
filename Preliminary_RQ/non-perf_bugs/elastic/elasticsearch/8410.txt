{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/8410","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8410/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8410/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8410/events","html_url":"https://github.com/elastic/elasticsearch/issues/8410","id":48207531,"node_id":"MDU6SXNzdWU0ODIwNzUzMQ==","number":8410,"title":"Support _analyzer mapping in nested documents","user":{"login":"pspanja","id":1135425,"node_id":"MDQ6VXNlcjExMzU0MjU=","avatar_url":"https://avatars0.githubusercontent.com/u/1135425?v=4","gravatar_id":"","url":"https://api.github.com/users/pspanja","html_url":"https://github.com/pspanja","followers_url":"https://api.github.com/users/pspanja/followers","following_url":"https://api.github.com/users/pspanja/following{/other_user}","gists_url":"https://api.github.com/users/pspanja/gists{/gist_id}","starred_url":"https://api.github.com/users/pspanja/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pspanja/subscriptions","organizations_url":"https://api.github.com/users/pspanja/orgs","repos_url":"https://api.github.com/users/pspanja/repos","events_url":"https://api.github.com/users/pspanja/events{/privacy}","received_events_url":"https://api.github.com/users/pspanja/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-11-09T17:35:24Z","updated_at":"2014-11-10T10:47:45Z","closed_at":"2014-11-10T10:47:45Z","author_association":"NONE","active_lock_reason":null,"body":"The existing [`_analyzer` mapping feature](http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/mapping-analyzer-field.html) currently works only with top-level documents.\n\nIt should be possible to use `_analyzer` mapping on nested document level, same as it is now possible on root document.\n\nIn our particular case with eZ Publish CMS, we index Content (our main domain) fields in a nested document **per translation**. Content can have multiple translations -- we currently support 42 languages out of the box, but users are also free to add their own. The fields stored there are dynamic and not known upfront (we implement a kind of metabase).\n\nWe use custom `_all` field in translation's nested document, and our requirement here is to be able to configure analyzers per translation.\n\nI'm aware this is possible to achieve with [dynamic templates](http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/mapping-root-object-type.html#_dynamic_templates), and we did implement it through that feature, see https://github.com/ezsystems/ezpublish-kernel/pull/1065.\n\nShort snippet of our `content` document mapping with dynamic templates approach:\n\n``` json\n{\n    \"content\": {\n        \"dynamic\": false,\n        \"_all\" : { \"enabled\": false },\n        \"properties\": {\n            \"id\": { \"type\": \"integer\", \"index\": \"not_analyzed\" },\n            \"type_id\": { \"type\": \"string\", \"index\": \"not_analyzed\" },\n            ...\n            \"fields_doc\": {\n                \"type\": \"nested\",\n                \"dynamic\": true,\n                \"properties\": {\n                    \"meta_all_ara_SA\": { \"type\": \"string\", \"analyzer\": \"analyzer_ara_SA\" },\n                    \"meta_all_cat_ES\": { \"type\": \"string\", \"analyzer\": \"analyzer_cat_ES\" },\n                    \"meta_all_chi_CN\": { \"type\": \"string\", \"analyzer\": \"analyzer_chi_CN\" },\n                    ...\n                }\n            }\n        },\n        \"dynamic_templates\": [\n            { \"meta_all_ara_SA\": { \"path_match\": \"fields_doc.*_meta_all_ara_SA_*\", \"mapping\": { \"index\": \"no\", \"copy_to\": \"fields_doc.meta_all_ara_SA\" } } },\n            { \"meta_all_cat_ES\": { \"path_match\": \"fields_doc.*_meta_all_cat_ES_*\", \"mapping\": { \"index\": \"no\", \"copy_to\": \"fields_doc.meta_all_cat_ES\" } } },\n            { \"meta_all_chi_CN\": { \"path_match\": \"fields_doc.*_meta_all_chi_CN_*\", \"mapping\": { \"index\": \"no\", \"copy_to\": \"fields_doc.meta_all_chi_CN\" } } },\n            ...\n        ]\n    }\n}\n```\n\nThis obviously has several drawbacks:\n1. we now have 42 separate custom `_all` fields per nested document (one per language, and the number will only grow), but only single one is really used\n2. our mapping is now dependant on the languages used\n3. in fulltext search, we now need to query all custom `_all` fields, instead of a single one\n\nBeing able to use `_analyzer` mapping on a nested document our mapping could be made completely unaware of repository's language configuration. Also, we would be able to use only one custom `_all` field in translation document (`fields_doc.meta_all_*` in the snippet) in order to achieve analyzer configuration per translation. This also means single field to query for fulltext search, instead of using the wildcard to cover them all.\n\nOther CMS's implementing search on top of Elasticsearch using nested documents probably hit this same problem as well.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}