[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363212730","html_url":"https://github.com/elastic/elasticsearch/issues/28522#issuecomment-363212730","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28522","id":363212730,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MzIxMjczMA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-02-05T20:34:18Z","updated_at":"2018-02-05T20:34:18Z","author_association":"MEMBER","body":"The behavior here is by design. A 200 OK status code on a bulk response means that the coordinating node successfully parsed and executed the client request. You need to check the `errors` field to know if there were any errors handling the individual requests, and indeed parse the response body to know which documents failed and why.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363223264","html_url":"https://github.com/elastic/elasticsearch/issues/28522#issuecomment-363223264","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28522","id":363223264,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MzIyMzI2NA==","user":{"login":"MarcMagnin","id":725667,"node_id":"MDQ6VXNlcjcyNTY2Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/725667?v=4","gravatar_id":"","url":"https://api.github.com/users/MarcMagnin","html_url":"https://github.com/MarcMagnin","followers_url":"https://api.github.com/users/MarcMagnin/followers","following_url":"https://api.github.com/users/MarcMagnin/following{/other_user}","gists_url":"https://api.github.com/users/MarcMagnin/gists{/gist_id}","starred_url":"https://api.github.com/users/MarcMagnin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarcMagnin/subscriptions","organizations_url":"https://api.github.com/users/MarcMagnin/orgs","repos_url":"https://api.github.com/users/MarcMagnin/repos","events_url":"https://api.github.com/users/MarcMagnin/events{/privacy}","received_events_url":"https://api.github.com/users/MarcMagnin/received_events","type":"User","site_admin":false},"created_at":"2018-02-05T21:13:55Z","updated_at":"2018-02-05T21:14:20Z","author_association":"NONE","body":"Thanks for your quick reply.\r\nI understand this behavior is by design but knowing that the coordinating node successfully parsed and executed the client request is not very needed because regardless of the 200 we have to look into the details of the response. \r\n\r\nThe problem I want to emphasis on is `invalid_index_name_exception` is something that will be solve and will never be triggered again. The client needs to deserialize and examine the response that will never have this issue anymore so the client will just skip the deserialization to prevent wasting memory/CPU in write intensive scenarios.\r\nThen imagine there is an update in elasticsearch invalid characters list. This could silently break such client, hence client is regardless forced to always deserialize and examine the response for \"safety\".\r\nThat's why quickly checking the HTTP status make sense to tell if there is something to look at or just keep going and not bother.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363227158","html_url":"https://github.com/elastic/elasticsearch/issues/28522#issuecomment-363227158","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28522","id":363227158,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MzIyNzE1OA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-02-05T21:28:23Z","updated_at":"2018-02-05T21:28:23Z","author_association":"MEMBER","body":"Again, check the `errors` field in the response for a \"quick\" check as to whether or not there were any failures handling the individual requests.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363345144","html_url":"https://github.com/elastic/elasticsearch/issues/28522#issuecomment-363345144","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28522","id":363345144,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MzM0NTE0NA==","user":{"login":"MarcMagnin","id":725667,"node_id":"MDQ6VXNlcjcyNTY2Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/725667?v=4","gravatar_id":"","url":"https://api.github.com/users/MarcMagnin","html_url":"https://github.com/MarcMagnin","followers_url":"https://api.github.com/users/MarcMagnin/followers","following_url":"https://api.github.com/users/MarcMagnin/following{/other_user}","gists_url":"https://api.github.com/users/MarcMagnin/gists{/gist_id}","starred_url":"https://api.github.com/users/MarcMagnin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarcMagnin/subscriptions","organizations_url":"https://api.github.com/users/MarcMagnin/orgs","repos_url":"https://api.github.com/users/MarcMagnin/repos","events_url":"https://api.github.com/users/MarcMagnin/events{/privacy}","received_events_url":"https://api.github.com/users/MarcMagnin/received_events","type":"User","site_admin":false},"created_at":"2018-02-06T08:20:23Z","updated_at":"2018-02-06T08:26:21Z","author_association":"NONE","body":"Again, there is nothing \"quick\" in the deserialization of a large message to check an error field. The only in-between I can think of is a regex match a status!=200 in the body before actually deserializing. \r\nAnyway thanks for your time.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363355388","html_url":"https://github.com/elastic/elasticsearch/issues/28522#issuecomment-363355388","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28522","id":363355388,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MzM1NTM4OA==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2018-02-06T09:02:00Z","updated_at":"2018-02-06T09:02:00Z","author_association":"MEMBER","body":"@marcinpm in a healthy system, you *have* to check error message for things like rejections. What language are you using? We're developing assuming that when people are performance sensitive like that, they will use a forward only parser, making reading the error (which is the second field) light.\r\n\r\nRe status codes - sadly there's no status code that will correctly reflect that the bulk was successful executed but some of the inner requests failed.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363358307","html_url":"https://github.com/elastic/elasticsearch/issues/28522#issuecomment-363358307","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28522","id":363358307,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MzM1ODMwNw==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2018-02-06T09:13:38Z","updated_at":"2018-02-06T09:13:38Z","author_association":"MEMBER","body":"sorry, I meant @MarcMagnin ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363414451","html_url":"https://github.com/elastic/elasticsearch/issues/28522#issuecomment-363414451","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28522","id":363414451,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MzQxNDQ1MQ==","user":{"login":"MarcMagnin","id":725667,"node_id":"MDQ6VXNlcjcyNTY2Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/725667?v=4","gravatar_id":"","url":"https://api.github.com/users/MarcMagnin","html_url":"https://github.com/MarcMagnin","followers_url":"https://api.github.com/users/MarcMagnin/followers","following_url":"https://api.github.com/users/MarcMagnin/following{/other_user}","gists_url":"https://api.github.com/users/MarcMagnin/gists{/gist_id}","starred_url":"https://api.github.com/users/MarcMagnin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarcMagnin/subscriptions","organizations_url":"https://api.github.com/users/MarcMagnin/orgs","repos_url":"https://api.github.com/users/MarcMagnin/repos","events_url":"https://api.github.com/users/MarcMagnin/events{/privacy}","received_events_url":"https://api.github.com/users/MarcMagnin/received_events","type":"User","site_admin":false},"created_at":"2018-02-06T12:59:04Z","updated_at":"2018-02-06T12:59:04Z","author_association":"NONE","body":"@bleskes Thanks for your answer!\r\nSorry @jasontedor I didn't catch the fact that we have a global error at the beginning of the response, hence a forward only parser will do the job in an acceptable timing.\r\nCurrently I'm working with some Golang code so I may give a try with this one: https://github.com/buger/jsonparser\r\nKnowing that I'll probably just go with a very naive byte lookup at the beginning of the stream.\r\nThanks a lot guys!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363429200","html_url":"https://github.com/elastic/elasticsearch/issues/28522#issuecomment-363429200","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28522","id":363429200,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MzQyOTIwMA==","user":{"login":"MarcMagnin","id":725667,"node_id":"MDQ6VXNlcjcyNTY2Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/725667?v=4","gravatar_id":"","url":"https://api.github.com/users/MarcMagnin","html_url":"https://github.com/MarcMagnin","followers_url":"https://api.github.com/users/MarcMagnin/followers","following_url":"https://api.github.com/users/MarcMagnin/following{/other_user}","gists_url":"https://api.github.com/users/MarcMagnin/gists{/gist_id}","starred_url":"https://api.github.com/users/MarcMagnin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarcMagnin/subscriptions","organizations_url":"https://api.github.com/users/MarcMagnin/orgs","repos_url":"https://api.github.com/users/MarcMagnin/repos","events_url":"https://api.github.com/users/MarcMagnin/events{/privacy}","received_events_url":"https://api.github.com/users/MarcMagnin/received_events","type":"User","site_admin":false},"created_at":"2018-02-06T13:56:19Z","updated_at":"2018-02-06T13:56:19Z","author_association":"NONE","body":"I wrote this naive way to get it:\r\n```\r\nvar errorFlag bool\r\nvar took int\r\nfmt.Fscanf(resp.Body, \"{\\\"took\\\":%d,\\\"errors\\\":%t\", &took, &errorFlag)\r\nfmt.Printf(\"\\n %v %v\", took, errorFlag)\r\n```\r\n\r\nSounds to be an efficient way to get the error. Any suggestion regarding this?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363429950","html_url":"https://github.com/elastic/elasticsearch/issues/28522#issuecomment-363429950","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28522","id":363429950,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MzQyOTk1MA==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2018-02-06T13:59:11Z","updated_at":"2018-02-06T13:59:11Z","author_association":"MEMBER","body":"@MarcMagnin to answer your question will need to dig deeper into the go semantics and your uscases. I suggest you take this to the forums on http://discuss.elastic.co as this goes out of scope for github (we keep it for issues and features requests)","performed_via_github_app":null}]