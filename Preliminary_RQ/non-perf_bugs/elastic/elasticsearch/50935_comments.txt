[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/573885863","html_url":"https://github.com/elastic/elasticsearch/issues/50935#issuecomment-573885863","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50935","id":573885863,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Mzg4NTg2Mw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-01-13T21:44:59Z","updated_at":"2020-01-13T21:44:59Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search (:Search/Search)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/575805199","html_url":"https://github.com/elastic/elasticsearch/issues/50935#issuecomment-575805199","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50935","id":575805199,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTgwNTE5OQ==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2020-01-17T21:40:43Z","updated_at":"2020-01-17T21:40:43Z","author_association":"CONTRIBUTOR","body":"@dpkirchner  Thank you for submitting the issue. This is an expected behaviour. Your query consists of a single term that is turned into a prefix query and prefix queries only produce scores of 1.\r\n\r\nThe query you are using `bool_prefix` with an option of `multi_match` runs prefix query on the **last** query term using `_index_prefix` fields. In your case it is the only term, and only 1 field has a prefix field, so your query will be translated to  `ConstantScore(title._index_prefix:ab)`. (You can always check what your query translates to by adding an option `_search/explain=true`.) . Index prefix queries are always scored as 1  if a document field has this term, so all matched documents will have the same score and will be returned in the order of their internal document ids.\r\n\r\nIf your query consists of several terms, the behaviour will be different and will account for other fields as well.  \r\n\r\nIf you are looking for some custom scoring, consider also experimenting with boolean queries directly, like this:\r\n```js\r\nPOST /test_index/_search?pretty&explain=true\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"should\": [\r\n        {\"term\": {\"title\": \"abc\"}},\r\n        {\"term\": {\"title._2gram\": \"abc\"}},\r\n        {\"term\": {\"title._3gram\": \"abc\"}},\r\n        {\"prefix\": {\"title\": \"abc\"}}\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/575836426","html_url":"https://github.com/elastic/elasticsearch/issues/50935#issuecomment-575836426","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50935","id":575836426,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTgzNjQyNg==","user":{"login":"dpkirchner","id":165134,"node_id":"MDQ6VXNlcjE2NTEzNA==","avatar_url":"https://avatars1.githubusercontent.com/u/165134?v=4","gravatar_id":"","url":"https://api.github.com/users/dpkirchner","html_url":"https://github.com/dpkirchner","followers_url":"https://api.github.com/users/dpkirchner/followers","following_url":"https://api.github.com/users/dpkirchner/following{/other_user}","gists_url":"https://api.github.com/users/dpkirchner/gists{/gist_id}","starred_url":"https://api.github.com/users/dpkirchner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dpkirchner/subscriptions","organizations_url":"https://api.github.com/users/dpkirchner/orgs","repos_url":"https://api.github.com/users/dpkirchner/repos","events_url":"https://api.github.com/users/dpkirchner/events{/privacy}","received_events_url":"https://api.github.com/users/dpkirchner/received_events","type":"User","site_admin":false},"created_at":"2020-01-17T23:42:03Z","updated_at":"2020-01-17T23:42:03Z","author_association":"NONE","body":"@mayya-sharipova I've gotta say this is surprising behavior, although I'll admit it's possible I'm alone on that. I think it'd be worth updating the documentation to indicate that the sort order for `search_as_you_type` queries aren't (really) sorted when using the query suggested there:\r\n\r\nhttps://www.elastic.co/guide/en/elasticsearch/reference/7.5/search-as-you-type.html\r\n\r\nI'll try your suggestion -- that specific query has the same results, but I'll tinker with it to see if I can get it to score the results the way I need. `explain=true` is especially helpful.","performed_via_github_app":null}]