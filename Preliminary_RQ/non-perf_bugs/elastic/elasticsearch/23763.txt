{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/23763","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23763/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23763/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23763/events","html_url":"https://github.com/elastic/elasticsearch/issues/23763","id":217278242,"node_id":"MDU6SXNzdWUyMTcyNzgyNDI=","number":23763,"title":"Elements of a long array field have either int or long type depending on the value in painless script","user":{"login":"Tomassino","id":4801309,"node_id":"MDQ6VXNlcjQ4MDEzMDk=","avatar_url":"https://avatars3.githubusercontent.com/u/4801309?v=4","gravatar_id":"","url":"https://api.github.com/users/Tomassino","html_url":"https://github.com/Tomassino","followers_url":"https://api.github.com/users/Tomassino/followers","following_url":"https://api.github.com/users/Tomassino/following{/other_user}","gists_url":"https://api.github.com/users/Tomassino/gists{/gist_id}","starred_url":"https://api.github.com/users/Tomassino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tomassino/subscriptions","organizations_url":"https://api.github.com/users/Tomassino/orgs","repos_url":"https://api.github.com/users/Tomassino/repos","events_url":"https://api.github.com/users/Tomassino/events{/privacy}","received_events_url":"https://api.github.com/users/Tomassino/received_events","type":"User","site_admin":false},"labels":[{"id":146834791,"node_id":"MDU6TGFiZWwxNDY4MzQ3OTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Scripting","name":":Core/Infra/Scripting","color":"0e8a16","default":false,"description":"Scripting abstractions, Painless, and Mustache"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-03-27T15:10:16Z","updated_at":"2018-06-13T14:53:58Z","closed_at":"2018-03-13T19:21:40Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version**: 5.2.2\r\n\r\n**JVM version**: openjdk version \"1.8.0_121\"\r\n\r\n**OS version**: Ubuntu 16.04\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nI'm experiencing problems while writing a painless script to remove values from an array field of type long. When using `indexOf` to find the index of a value in the field, it only works if the value is \"big\", as it seems that elements from the field are returned as int or long depending on their value (i.e. they are only returned as long if they don't fit in an int)\r\n\r\n**Steps to reproduce**:\r\n 1. Create a mapping with a long field\r\n\r\n```\r\ncurl -XPUT localhost:9200/test_20170327 -d '{\r\n  \"mappings\": {\r\n    \"test\" : {\r\n      \"properties\" : { \"values\" : {\"type\": \"long\"} }\r\n    }\r\n  }\r\n}'\r\n```\r\n\r\n 2. Put a document\r\n\r\n```\r\ncurl -XPUT localhost:9200/test_20170327/test/1 -d'{\r\n  \"values\": [1, 2, 3, 999999999999999999]\r\n}'\r\n```\r\n\r\n 3. Update the document to remove some values using a script\r\n\r\n```\r\ncurl -XPOST localhost:9200/test_20170327/test/1/_update -d'{\r\n  \"script\": {\r\n    \"inline\": \"for (long v: params.values) { int idx = ctx._source.values.indexOf(v); if (idx != -1) {ctx._source.values.remove(idx)} }\",\r\n    \"lang\": \"painless\",\r\n    \"params\": { \"values\": [1, 7, 999999999999999999] }\r\n  }\r\n}'\r\n```\r\n\r\n 4. The result of a get on the document is now:\r\n\r\n```\r\n{\r\n  \"_index\" : \"test_20170327\",\r\n  \"_type\" : \"test\",\r\n  \"_id\" : \"1\",\r\n  \"_version\" : 2,\r\n  \"found\" : true,\r\n  \"_source\" : {\r\n    \"values\" : [\r\n      1,\r\n      2,\r\n      3\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nThe value 1 has not been removed. What is strange is that, before the update, using `Debug.explain(ctx._source.values[0])` (the element in the array is 1) gives `\"class\" : \"java.lang.Integer\"`, while `Debug.explain(ctx._source.values[3])` (the element in the array is 999999999999999999) gives `\"class\" : \"java.lang.Long\"`. Moreover if in the for loop I substitute `def` to `long` as the type of `v`, everything works as expected.\r\n\r\nI'm not sure whether this is a bug or not and whether the solution using `def` is the correct approach, but treating elements of a long field as either int or long depending on the value (and as a consequence not finding them in the array) doesn't sound \"right\" to me. Things are even worse considering that (as it seems) 1L != 1 (I have verified that the call to `indexOf` with 1L actually returns -1, even if the array actually contains a 1)\r\n","closed_by":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"performed_via_github_app":null}