[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/43881007","html_url":"https://github.com/elastic/elasticsearch/issues/6273#issuecomment-43881007","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6273","id":43881007,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODgxMDA3","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-05-22T12:26:03Z","updated_at":"2014-05-22T12:26:12Z","author_association":"CONTRIBUTOR","body":"You're looking for the [`missing` aggregation](http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-aggregations-bucket-missing-aggregation.html#search-aggregations-bucket-missing-aggregation).\n\nNote that there is an open issue (#5324) to add support for the `missing` bucket to all aggs \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/43889516","html_url":"https://github.com/elastic/elasticsearch/issues/6273#issuecomment-43889516","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6273","id":43889516,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODg5NTE2","user":{"login":"j0hnsmith","id":118963,"node_id":"MDQ6VXNlcjExODk2Mw==","avatar_url":"https://avatars1.githubusercontent.com/u/118963?v=4","gravatar_id":"","url":"https://api.github.com/users/j0hnsmith","html_url":"https://github.com/j0hnsmith","followers_url":"https://api.github.com/users/j0hnsmith/followers","following_url":"https://api.github.com/users/j0hnsmith/following{/other_user}","gists_url":"https://api.github.com/users/j0hnsmith/gists{/gist_id}","starred_url":"https://api.github.com/users/j0hnsmith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/j0hnsmith/subscriptions","organizations_url":"https://api.github.com/users/j0hnsmith/orgs","repos_url":"https://api.github.com/users/j0hnsmith/repos","events_url":"https://api.github.com/users/j0hnsmith/events{/privacy}","received_events_url":"https://api.github.com/users/j0hnsmith/received_events","type":"User","site_admin":false},"created_at":"2014-05-22T13:45:43Z","updated_at":"2014-05-22T13:46:31Z","author_association":"NONE","body":"I'm _not_ looking for the `missing` aggregation (although that's what I'm using as a fallback), I want to be able to do a single aggregation that contains `'male'`, `'female'` and `null` keys. Perhaps there should also be an additional `_missing_key` term that includes docs that don't have a `gender` key. As @roytmana says in #5324, it shouldn't be difficult to get the sum of the doc counts for each term to add up to the total number of docs being considered.\n\nWhat you're suggesting (I think) is to do two aggregations in the same search (my fallback solution), one `term` aggregation and one `missing` aggregation. This is sub optimal and nothing more than a workaround, `null` is a valid term if the key exists so should be included in the `terms` aggregation.\n\nThe reason why this is so important is when applying a filter to an aggregation, it has to be applied twice, then all the sub aggregations have to be be done twice etc etc which ends up in a confusing mess. Then the results have to be juggled to get the dataset that contains the complete picture.\n\nElasticSearch is an excellent tool and aggregations are very powerful however in this case jumping through hoops shouldn't be necessary.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/43890516","html_url":"https://github.com/elastic/elasticsearch/issues/6273#issuecomment-43890516","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6273","id":43890516,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODkwNTE2","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2014-05-22T13:53:11Z","updated_at":"2014-05-22T13:53:11Z","author_association":"NONE","body":"and I would love to see not just missing bucket but also _other bucket if requested. It is very important for many use cases to retain entire data set as stats get rolled up. With facets I did it buy using stats facet and subtracting sum of all buckets including _missing. It was not bad since facets do not allow sub-aggs and I had a nice API for it which hid all the complexities. but with  sub-aggs it will be very ugly\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/43890592","html_url":"https://github.com/elastic/elasticsearch/issues/6273#issuecomment-43890592","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6273","id":43890592,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODkwNTky","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-05-22T13:53:35Z","updated_at":"2014-05-22T13:53:35Z","author_association":"CONTRIBUTOR","body":"Actually, `null` is not a valid term. There is no way of storing the term `null` in Lucene.  Instead, that field has no value. Similarly, if you store: `[\"foo\",\"bar\",null]` then the field will have two values: `foo` and `bar`, not 3.\n\nIf you want to be able to distinguish a missing value from an explicit `null`, then you should use the `null_value` mapping on the field to substitute some real term when ES encounters a  `null`.\nSee [Dealing with null values](http://www.elasticsearch.org/guide/en/elasticsearch/guide/current/_dealing_with_null_values.html#_dealing_with_null_values) for more.\n\nBut yes, for convenience's sake and efficiency, the missing count should probably be included in the agg itself, as requested in #5324, so I'll close this issue in favour of that one.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/43891846","html_url":"https://github.com/elastic/elasticsearch/issues/6273#issuecomment-43891846","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6273","id":43891846,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODkxODQ2","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2014-05-22T14:02:32Z","updated_at":"2014-05-22T14:02:32Z","author_association":"NONE","body":"null_value mapping won't help much as null can be introduced at object level (say you agg on person's country but his/her entire address is missing. I do not believe ES can handle that. I tried to use null_value but it only works when the actual scalar value is null not one of its owning objects\n\nPlease not to consider it to be a convenience. lack of _missing and  _other buckets is a major limitation when implementing dynamic system with user ad-hoc defined analytic, pivot tables etc\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/43896137","html_url":"https://github.com/elastic/elasticsearch/issues/6273#issuecomment-43896137","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6273","id":43896137,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODk2MTM3","user":{"login":"j0hnsmith","id":118963,"node_id":"MDQ6VXNlcjExODk2Mw==","avatar_url":"https://avatars1.githubusercontent.com/u/118963?v=4","gravatar_id":"","url":"https://api.github.com/users/j0hnsmith","html_url":"https://github.com/j0hnsmith","followers_url":"https://api.github.com/users/j0hnsmith/followers","following_url":"https://api.github.com/users/j0hnsmith/following{/other_user}","gists_url":"https://api.github.com/users/j0hnsmith/gists{/gist_id}","starred_url":"https://api.github.com/users/j0hnsmith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/j0hnsmith/subscriptions","organizations_url":"https://api.github.com/users/j0hnsmith/orgs","repos_url":"https://api.github.com/users/j0hnsmith/repos","events_url":"https://api.github.com/users/j0hnsmith/events{/privacy}","received_events_url":"https://api.github.com/users/j0hnsmith/received_events","type":"User","site_admin":false},"created_at":"2014-05-22T14:34:14Z","updated_at":"2014-05-22T14:34:14Z","author_association":"NONE","body":"@clintongormley \"There is no way of storing the term null in Lucene.\"\n\nAha, now many things make sense to me, thanks for the explanation.\n\nGiven field values of `[\"foo\",\"bar\",null]`, even if Lucene only sees 2 values I'd like to see a configurable (but not default) way of ElasticSearch doing the work in the background to return the expected buckets then processing them accordingly. I understand that this may be far less performant that what currently exists however I believe it's a common enough case to be supported (and the performance difference is moot since if it's what a user wants they'll have to run the same queries anyway).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/43896650","html_url":"https://github.com/elastic/elasticsearch/issues/6273#issuecomment-43896650","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6273","id":43896650,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODk2NjUw","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-05-22T14:37:40Z","updated_at":"2014-05-22T14:37:40Z","author_association":"CONTRIBUTOR","body":"@j0hnsmith The only way to make `[\"foo\",\"bar\",null]` store three values in the inverted index is to use `null_value` to map `null` to a concrete term, eg `_null_value_`.\n\nThen it'll work just like all other terms and have its own bucket, and the `missing` agg will be just for those docs which have no value set for that field.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/43897863","html_url":"https://github.com/elastic/elasticsearch/issues/6273#issuecomment-43897863","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6273","id":43897863,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODk3ODYz","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2014-05-22T14:46:30Z","updated_at":"2014-05-22T14:47:11Z","author_association":"NONE","body":"but as I said not if field is missing because its entire containing object is missing!\nthat solution will not work.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/43898092","html_url":"https://github.com/elastic/elasticsearch/issues/6273#issuecomment-43898092","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6273","id":43898092,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODk4MDky","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-05-22T14:47:59Z","updated_at":"2014-05-22T14:47:59Z","author_association":"CONTRIBUTOR","body":"@roytmana yes, but then you couldn't aggregate on the top level object anyway, as the \"container\" doesn't have an associated inverted index.  But it's a reasonably easy workaround to have a \"null\" object be represented by an object with a concrete field which contains a `null` value.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/43904463","html_url":"https://github.com/elastic/elasticsearch/issues/6273#issuecomment-43904463","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6273","id":43904463,"node_id":"MDEyOklzc3VlQ29tbWVudDQzOTA0NDYz","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2014-05-22T15:34:52Z","updated_at":"2014-05-22T15:34:52Z","author_association":"NONE","body":"@clintongormley for a fairly deep graph (say three levels contract/party/address to compensate for party being null and still be able to aggregate on any party field including address fields (say party country) will require producing super ugly json for _source replacing blank party with party object with null substitution and every object type within party with its own null object with its own null values etc. And then people using _source will have to deal with it all in their application. I do it now in few cases but I would not want to do it all the time\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/102416550","html_url":"https://github.com/elastic/elasticsearch/issues/6273#issuecomment-102416550","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6273","id":102416550,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMjQxNjU1MA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-05-15T14:41:19Z","updated_at":"2015-05-15T14:41:19Z","author_association":"CONTRIBUTOR","body":"Closing: with https://github.com/elastic/elasticsearch/pull/11042 you can now configure arbitrary keys for documents that are missing a value.\n","performed_via_github_app":null}]