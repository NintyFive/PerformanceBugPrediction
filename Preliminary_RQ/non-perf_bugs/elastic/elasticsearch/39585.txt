{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/39585","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39585/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39585/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39585/events","html_url":"https://github.com/elastic/elasticsearch/issues/39585","id":416271698,"node_id":"MDU6SXNzdWU0MTYyNzE2OTg=","number":39585,"title":"CI failures due to file handle leaks","user":{"login":"gwbrown","id":1522844,"node_id":"MDQ6VXNlcjE1MjI4NDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1522844?v=4","gravatar_id":"","url":"https://api.github.com/users/gwbrown","html_url":"https://github.com/gwbrown","followers_url":"https://api.github.com/users/gwbrown/followers","following_url":"https://api.github.com/users/gwbrown/following{/other_user}","gists_url":"https://api.github.com/users/gwbrown/gists{/gist_id}","starred_url":"https://api.github.com/users/gwbrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gwbrown/subscriptions","organizations_url":"https://api.github.com/users/gwbrown/orgs","repos_url":"https://api.github.com/users/gwbrown/repos","events_url":"https://api.github.com/users/gwbrown/events{/privacy}","received_events_url":"https://api.github.com/users/gwbrown/received_events","type":"User","site_admin":false},"labels":[{"id":836542781,"node_id":"MDU6TGFiZWw4MzY1NDI3ODE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Engine","name":":Distributed/Engine","color":"0e8a16","default":false,"description":"Anything around managing Lucene and the Translog in an open shard."},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"assignees":[{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false}],"milestone":null,"comments":10,"created_at":"2019-03-01T20:43:03Z","updated_at":"2020-07-08T17:24:50Z","closed_at":"2020-07-08T17:24:50Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"CI link: https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+master+intake/2317/console\r\n\r\nThis has failed a few times with similar errors recently, the earliest being Jan. 7 2019. \r\n\r\nDoes not reproduce locally, reproduce line:\r\n```\r\n./gradlew :server:integTest \\\r\n  -Dtests.seed=F5F3A811C4C7323A \\\r\n  -Dtests.class=org.elasticsearch.action.admin.indices.create.SplitIndexIT \\\r\n  -Dtests.security.manager=true \\\r\n  -Dtests.locale=en-US \\\r\n  -Dtests.timezone=UTC \\\r\n  -Dcompiler.java=11 \\\r\n  -Druntime.java=8\r\n```\r\n\r\nStack Trace:\r\n```\r\njava.lang.RuntimeException: file handle leaks: [FileChannel(/var/lib/jenkins/workspace/elastic+elasticsearch+master+intake/server/build/testrun/integTest/J1/temp/org.elasticsearch.action.admin.indices.create.SplitIndexIT_F5F3A811C4C7323A-001/tempDir-002/custom/FmRRWOOIXe/2/wyqeqwxnS2a6pcZROod50w/1/index/_1.fdt), FileChannel(/var/lib/jenkins/workspace/elastic+elasticsearch+master+intake/server/build/testrun/integTest/J1/temp/org.elasticsearch.action.admin.indices.create.SplitIndexIT_F5F3A811C4C7323A-001/tempDir-002/custom/FmRRWOOIXe/2/wyqeqwxnS2a6pcZROod50w/1/index/_1_Asserting_0.pos), FileChannel(/var/lib/jenkins/workspace/elastic+elasticsearch+master+intake/server/build/testrun/integTest/J1/temp/org.elasticsearch.action.admin.indices.create.SplitIndexIT_F5F3A811C4C7323A-001/tempDir-002/custom/FmRRWOOIXe/2/wyqeqwxnS2a6pcZROod50w/1/index/_1_Asserting_0.doc), FileChannel(/var/lib/jenkins/workspace/elastic+elasticsearch+master+intake/server/build/testrun/integTest/J1/temp/org.elasticsearch.action.admin.indices.create.SplitIndexIT_F5F3A811C4C7323A-001/tempDir-002/custom/FmRRWOOIXe/2/wyqeqwxnS2a6pcZROod50w/1/index/_1_Asserting_0.tip), FileChannel(/var/lib/jenkins/workspace/elastic+elasticsearch+master+intake/server/build/testrun/integTest/J1/temp/org.elasticsearch.action.admin.indices.create.SplitIndexIT_F5F3A811C4C7323A-001/tempDir-002/custom/FmRRWOOIXe/2/wyqeqwxnS2a6pcZROod50w/1/index/_1.dim)]\r\n\tat __randomizedtesting.SeedInfo.seed([F5F3A811C4C7323A]:0)\r\n\tat org.apache.lucene.mockfile.LeakFS.onClose(LeakFS.java:63)\r\n\tat org.apache.lucene.mockfile.FilterFileSystem.close(FilterFileSystem.java:77)\r\n\tat org.apache.lucene.mockfile.FilterFileSystem.close(FilterFileSystem.java:78)\r\n\tat org.apache.lucene.util.TestRuleTemporaryFilesCleanup.afterAlways(TestRuleTemporaryFilesCleanup.java:228)\r\n\tat com.carrotsearch.randomizedtesting.rules.TestRuleAdapter$1.afterAlways(TestRuleAdapter.java:31)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:43)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.Exception\r\n\tat org.apache.lucene.mockfile.LeakFS.onOpen(LeakFS.java:46)\r\n\tat org.apache.lucene.mockfile.HandleTrackingFS.callOpenHook(HandleTrackingFS.java:81)\r\n\tat org.apache.lucene.mockfile.HandleTrackingFS.newFileChannel(HandleTrackingFS.java:197)\r\n\tat org.apache.lucene.mockfile.HandleTrackingFS.newFileChannel(HandleTrackingFS.java:166)\r\n\tat java.nio.channels.FileChannel.open(FileChannel.java:287)\r\n\tat java.nio.channels.FileChannel.open(FileChannel.java:335)\r\n\tat org.apache.lucene.store.NIOFSDirectory.openInput(NIOFSDirectory.java:81)\r\n\tat org.elasticsearch.index.store.FsDirectoryService$HybridDirectory.openInput(FsDirectoryService.java:157)\r\n\tat org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:100)\r\n\tat org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:100)\r\n\tat org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.<init>(CompressingStoredFieldsReader.java:150)\r\n\tat org.apache.lucene.codecs.compressing.CompressingStoredFieldsFormat.fieldsReader(CompressingStoredFieldsFormat.java:121)\r\n\tat org.apache.lucene.codecs.lucene50.Lucene50StoredFieldsFormat.fieldsReader(Lucene50StoredFieldsFormat.java:173)\r\n\tat org.apache.lucene.codecs.asserting.AssertingStoredFieldsFormat.fieldsReader(AssertingStoredFieldsFormat.java:43)\r\n\tat org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:126)\r\n\tat org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:83)\r\n\tat org.apache.lucene.index.ReadersAndUpdates.getReader(ReadersAndUpdates.java:172)\r\n\tat org.apache.lucene.index.BufferedUpdatesStream$SegmentState.<init>(BufferedUpdatesStream.java:271)\r\n\tat org.apache.lucene.index.FrozenBufferedUpdates.openSegmentStates(FrozenBufferedUpdates.java:329)\r\n\tat org.apache.lucene.index.FrozenBufferedUpdates.forceApply(FrozenBufferedUpdates.java:222)\r\n\tat org.apache.lucene.index.FrozenBufferedUpdates.tryApply(FrozenBufferedUpdates.java:160)\r\n\tat org.apache.lucene.index.IndexWriter.lambda$publishFrozenUpdates$3(IndexWriter.java:2589)\r\n\tat org.apache.lucene.index.IndexWriter.processEvents(IndexWriter.java:5112)\r\n\tat org.apache.lucene.index.IndexWriter.getReader(IndexWriter.java:507)\r\n\tat org.apache.lucene.index.StandardDirectoryReader.doOpenFromWriter(StandardDirectoryReader.java:294)\r\n\tat org.apache.lucene.index.StandardDirectoryReader.doOpenIfChanged(StandardDirectoryReader.java:269)\r\n\tat org.apache.lucene.index.StandardDirectoryReader.doOpenIfChanged(StandardDirectoryReader.java:259)\r\n\tat org.apache.lucene.index.FilterDirectoryReader.doOpenIfChanged(FilterDirectoryReader.java:112)\r\n\tat org.apache.lucene.index.DirectoryReader.openIfChanged(DirectoryReader.java:140)\r\n\tat org.apache.lucene.search.SearcherManager.refreshIfNeeded(SearcherManager.java:156)\r\n\tat org.apache.lucene.search.SearcherManager.refreshIfNeeded(SearcherManager.java:58)\r\n\tat org.apache.lucene.search.ReferenceManager.doMaybeRefresh(ReferenceManager.java:176)\r\n\tat org.apache.lucene.search.ReferenceManager.maybeRefreshBlocking(ReferenceManager.java:253)\r\n\tat org.elasticsearch.index.engine.InternalEngine$ExternalSearcherManager.refreshIfNeeded(InternalEngine.java:319)\r\n\tat org.elasticsearch.index.engine.InternalEngine$ExternalSearcherManager.refreshIfNeeded(InternalEngine.java:294)\r\n\tat org.apache.lucene.search.ReferenceManager.doMaybeRefresh(ReferenceManager.java:176)\r\n\tat org.apache.lucene.search.ReferenceManager.maybeRefresh(ReferenceManager.java:225)\r\n\tat org.elasticsearch.index.engine.InternalEngine.refresh(InternalEngine.java:1559)\r\n\tat org.elasticsearch.index.engine.InternalEngine.maybeRefresh(InternalEngine.java:1536)\r\n\tat org.elasticsearch.index.shard.IndexShard.scheduledRefresh(IndexShard.java:2936)\r\n\tat org.elasticsearch.index.IndexService.maybeRefreshEngine(IndexService.java:759)\r\n\tat org.elasticsearch.index.IndexService.access$200(IndexService.java:99)\r\n\tat org.elasticsearch.index.IndexService$AsyncRefreshTask.runInternal(IndexService.java:883)\r\n\tat org.elasticsearch.common.util.concurrent.AbstractAsyncTask.run(AbstractAsyncTask.java:141)\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:681)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t... 1 more\r\n```\r\n\r\nLogs: \r\n[consoleText.txt](https://github.com/elastic/elasticsearch/files/2921002/consoleText.txt)\r\n","closed_by":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"performed_via_github_app":null}