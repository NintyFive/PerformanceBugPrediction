{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/52168","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52168/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52168/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52168/events","html_url":"https://github.com/elastic/elasticsearch/issues/52168","id":562866059,"node_id":"MDU6SXNzdWU1NjI4NjYwNTk=","number":52168,"title":"EQL: Make (where <condition>) optional","user":{"login":"rw-access","id":31489089,"node_id":"MDQ6VXNlcjMxNDg5MDg5","avatar_url":"https://avatars1.githubusercontent.com/u/31489089?v=4","gravatar_id":"","url":"https://api.github.com/users/rw-access","html_url":"https://github.com/rw-access","followers_url":"https://api.github.com/users/rw-access/followers","following_url":"https://api.github.com/users/rw-access/following{/other_user}","gists_url":"https://api.github.com/users/rw-access/gists{/gist_id}","starred_url":"https://api.github.com/users/rw-access/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rw-access/subscriptions","organizations_url":"https://api.github.com/users/rw-access/orgs","repos_url":"https://api.github.com/users/rw-access/repos","events_url":"https://api.github.com/users/rw-access/events{/privacy}","received_events_url":"https://api.github.com/users/rw-access/received_events","type":"User","site_admin":false},"labels":[{"id":1690690117,"node_id":"MDU6TGFiZWwxNjkwNjkwMTE3","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Query%20Languages/EQL","name":":Query Languages/EQL","color":"0e8a16","default":false,"description":"EQL querying"},{"id":1967501040,"node_id":"MDU6TGFiZWwxOTY3NTAxMDQw","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:QL","name":"Team:QL","color":"fef2c0","default":false,"description":"Meta label for query languages team"}],"state":"closed","locked":false,"assignee":{"login":"rw-access","id":31489089,"node_id":"MDQ6VXNlcjMxNDg5MDg5","avatar_url":"https://avatars1.githubusercontent.com/u/31489089?v=4","gravatar_id":"","url":"https://api.github.com/users/rw-access","html_url":"https://github.com/rw-access","followers_url":"https://api.github.com/users/rw-access/followers","following_url":"https://api.github.com/users/rw-access/following{/other_user}","gists_url":"https://api.github.com/users/rw-access/gists{/gist_id}","starred_url":"https://api.github.com/users/rw-access/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rw-access/subscriptions","organizations_url":"https://api.github.com/users/rw-access/orgs","repos_url":"https://api.github.com/users/rw-access/repos","events_url":"https://api.github.com/users/rw-access/events{/privacy}","received_events_url":"https://api.github.com/users/rw-access/received_events","type":"User","site_admin":false},"assignees":[{"login":"rw-access","id":31489089,"node_id":"MDQ6VXNlcjMxNDg5MDg5","avatar_url":"https://avatars1.githubusercontent.com/u/31489089?v=4","gravatar_id":"","url":"https://api.github.com/users/rw-access","html_url":"https://github.com/rw-access","followers_url":"https://api.github.com/users/rw-access/followers","following_url":"https://api.github.com/users/rw-access/following{/other_user}","gists_url":"https://api.github.com/users/rw-access/gists{/gist_id}","starred_url":"https://api.github.com/users/rw-access/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rw-access/subscriptions","organizations_url":"https://api.github.com/users/rw-access/orgs","repos_url":"https://api.github.com/users/rw-access/repos","events_url":"https://api.github.com/users/rw-access/events{/privacy}","received_events_url":"https://api.github.com/users/rw-access/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2020-02-10T22:25:42Z","updated_at":"2020-08-13T14:10:49Z","closed_at":"2020-08-13T14:10:49Z","author_association":"MEMBER","active_lock_reason":null,"body":"As mentioned in #51853, not all queries or schemas match our format. Sometimes the \"eventType\" may not make sense to provide and the syntax could get in the way. There's also the current limitation that you can search one event type at a time.\r\n\r\nInstead of stretching our current approach, what if we just make parts of the query optional? It technically is within the EQL grammar, but has a visitor check depending on configuration settings when parsing, just set `implied_any=True` when calling the parser. Then the `any where ...` is assumed when `where` isn't provided.\r\nhttps://github.com/endgameinc/eql/blob/15cf87e2e1a4d34f5f655ce9ef0535b5d0f0b7e0/eql/etc/eql.g#L13\r\n\r\nWithin the Elastic Endpoint Security (Endgame) platform, the full query is usually required because our data does fall neatly into that. The other reason, is that if you make \"where\" no longer required, queries like `1` or `yes` become completely valid. That would've broken Artemis, where EQL was hacked on as an afterthought, so we dropped it.\r\n\r\nWe made this optional in one part of the platform, when filtering results for existing investigations.\r\n\r\nI think it's worth adding here. Then we don't the `event.type`/`event.category` hardcoded field isn't strictly required and we can be more flexible to more schemas and use cases.\r\n\r\n\r\n**Update: 2020/02/13**\r\nAfter bringing this up in a weekly sync, one major counterpoint is that EQL queries clearly look like EQL queries. That's a good thing. Making `eventType where` optional would remove some of that. Instead, we'll keep `any where`.\r\n\r\nInstead, we could consider making `where true` optional. This would mirror SQL better, and could give us more compact queries:\r\n```sql\r\nsequence by process.pid\r\n  [process where process.name == \"mshta.exe\"]\r\n  [network]\r\n  [file]\r\n```\r\nIn the future, when we no longer need support for the Elastic Endpoint Security (formerly Endgame) platform, we can reconsider this. Compatibility won't be an issue when there's one EQL implementation.\r\n","closed_by":{"login":"rw-access","id":31489089,"node_id":"MDQ6VXNlcjMxNDg5MDg5","avatar_url":"https://avatars1.githubusercontent.com/u/31489089?v=4","gravatar_id":"","url":"https://api.github.com/users/rw-access","html_url":"https://github.com/rw-access","followers_url":"https://api.github.com/users/rw-access/followers","following_url":"https://api.github.com/users/rw-access/following{/other_user}","gists_url":"https://api.github.com/users/rw-access/gists{/gist_id}","starred_url":"https://api.github.com/users/rw-access/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rw-access/subscriptions","organizations_url":"https://api.github.com/users/rw-access/orgs","repos_url":"https://api.github.com/users/rw-access/repos","events_url":"https://api.github.com/users/rw-access/events{/privacy}","received_events_url":"https://api.github.com/users/rw-access/received_events","type":"User","site_admin":false},"performed_via_github_app":null}