[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/183326218","html_url":"https://github.com/elastic/elasticsearch/issues/16631#issuecomment-183326218","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16631","id":183326218,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzMyNjIxOA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-02-12T13:22:37Z","updated_at":"2016-02-12T13:22:37Z","author_association":"CONTRIBUTOR","body":"> The scroll API is using a snapshot of the index, if the scroll takes a long time a lot of resources are consumed (and kept) just for the scroll.\n\nLosing the \"snapshot\" behavior in reindex would certainly be a change. It'd be really nice not to have to worry about the snapshot disappearing out from under you though.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/183335097","html_url":"https://github.com/elastic/elasticsearch/issues/16631#issuecomment-183335097","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16631","id":183335097,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzMzNTA5Nw==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-02-12T13:44:14Z","updated_at":"2016-02-12T13:44:14Z","author_association":"MEMBER","body":"There are some more things to consider here:\n- currently we guarantee a point in time snapshot, which also means we never return the same document twice. For arbitrary sort orders, you can even drop a document. That's something we can stop supporting, but at I don't see how we can do it without using lucene's snapshots. \n- the biggest user of the scroll API is the scan search type - there we by design have no order but the one on disk. If we change our merge policies to honor some ordering we could change that, but for now I would expect a big penalty hit to the scan search if we sort as well.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/183343964","html_url":"https://github.com/elastic/elasticsearch/issues/16631#issuecomment-183343964","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16631","id":183343964,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzM0Mzk2NA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-02-12T14:03:55Z","updated_at":"2016-02-12T14:03:55Z","author_association":"MEMBER","body":"Another aspect is in terms of usability, the snapshot makes sure that no changes will be returned in case indexing is happening while scrolling. Even sorting by `_uid` depending on the id of documents and where are with the scroll, new documents might be returned or not. Maybe that turns out not to be a big deal, but seems like a big change at first glance.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/183369868","html_url":"https://github.com/elastic/elasticsearch/issues/16631#issuecomment-183369868","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16631","id":183369868,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzM2OTg2OA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-02-12T15:17:01Z","updated_at":"2016-02-12T15:17:01Z","author_association":"MEMBER","body":"> the biggest user of the scroll API is the scan search type - there we by design have no order but the one on disk. If we change our merge policies to honor some ordering we could change that, but for now I would expect a big penalty hit to the scan search if we sort as well.\n\nYes and it's amplified now that the scroll is using a MinDocQuery and terminateAfter when sorting on Lucene docids only:\nhttps://github.com/elastic/elasticsearch/pull/12983\nSo yeah speed matters and `search_after` is not ready for this kind of speed. I ran some tests and the difference can be huge. \nI completely missed the MinDocQuery thing which is brilliant and hard to beat.\nI'll close it until we find a way to achieve the same speed without snapshot ;).\n","performed_via_github_app":null}]