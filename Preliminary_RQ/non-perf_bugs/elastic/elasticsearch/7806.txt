{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/7806","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7806/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7806/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7806/events","html_url":"https://github.com/elastic/elasticsearch/issues/7806","id":43309924,"node_id":"MDU6SXNzdWU0MzMwOTkyNA==","number":7806,"title":"Feature idea: moving windows for aggregation","user":{"login":"bakura10","id":1198915,"node_id":"MDQ6VXNlcjExOTg5MTU=","avatar_url":"https://avatars1.githubusercontent.com/u/1198915?v=4","gravatar_id":"","url":"https://api.github.com/users/bakura10","html_url":"https://github.com/bakura10","followers_url":"https://api.github.com/users/bakura10/followers","following_url":"https://api.github.com/users/bakura10/following{/other_user}","gists_url":"https://api.github.com/users/bakura10/gists{/gist_id}","starred_url":"https://api.github.com/users/bakura10/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bakura10/subscriptions","organizations_url":"https://api.github.com/users/bakura10/orgs","repos_url":"https://api.github.com/users/bakura10/repos","events_url":"https://api.github.com/users/bakura10/events{/privacy}","received_events_url":"https://api.github.com/users/bakura10/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-09-20T13:08:19Z","updated_at":"2014-09-25T20:38:25Z","closed_at":"2014-09-25T20:38:25Z","author_association":"NONE","active_lock_reason":null,"body":"Hi everyone,\n\nThis issue is a follow-up from this thread (https://groups.google.com/forum/#!msg/elasticsearch/BSWVafBefp8/tiBEomy7OAgJ).\n\nMoving window is a very handy analytics feature that can be found in Oracle and PostgreSQL, and it would be awesome to have something similar in Elasticsearch. The idea is to define a \"window\" that is moving (typically inside a specified time range) to perform various analytics operations. The implementation in Oracle is a bit complex and cover more uses that what I need, so I'd suggest you have a look at how it works there too :).\n\nMoving windows allow to answer that kind of questions: for each day inside a timeframe, give me the sum amount for the last 30 days, starting from the given day. For instance, with following data:\n\n``` json\n[\n    {\n        \"date\": \"2014-01-01\",\n        \"amount\": 10\n    },\n    {\n        \"date\": \"2014-01-01\",\n        \"amount\": 15\n    },\n    {\n        \"date\": \"2014-01-02\",\n        \"amount\": 5\n    },  \n    {\n        \"date\": \"2014-01-03\",\n        \"amount\": 25\n    },\n    {\n        \"date\": \"2014-01-05\",\n        \"amount\": 8\n    }\n] \n```\n\nIf we want the sum for the last 3 days at each point, the result would be:\n\n2014-01-01: 10+15 = 25\n2014-01-02: 10+15+5 = 30\n2014-01-03: 10+15+5+25 = 55\n2014-01-04: 5+25+0 = 30\n2014-01-05: 5+25+0+8 = 38\n\nAs you can see, some interesting optimizations could be done, so that Elasticsearch does not need to recompute the sum at each window, but rather reuse the result of the previous window.\n\nCurrently, the only way to do that in Elasticsearch is either to define one bucket for each couple (so \"now-60d\" to \"now-30d\", \"now-59d\" to \"now-29\"... and so on), but this is very inefficient. Or asking for more data and manually create the rolling sum/avg/... in client side.\n\nI don't have any idea about what the syntax could be:\n\n``` json\n{\n    \"query\": {\n        \"filtered\": {\n            \"filter\": {\n                \"range\": {\n                    \"my_date\": {\n                        \"from\": \"now-60d\",\n                        \"to\": \"now\"\n                    }\n                }\n            }\n        }\n    },\n\n    \"aggs\": {\n        \"by_date\": {\n            \"date_histogram\": {\n                \"field\": \"my_date\",\n                \"interval\": \"day\"\n            },\n\n            \"window\": {\n                \"period\": \"-30d\",\n                \"min\": \"now-30d\",\n\n                \"aggs\": {\n                    \"my_sum\": {\n                        \"sum\": \"amount\"\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\nThe idea would be to first filter data so that we have enough data to cover the \"-30d\" in the window. The window would then define a period (if positive, it would be \"all the records after\", or if negative \"all the records before\"). The \"min\" would allow to limit results (because we want 30 data points with each sum being the result of last 30 days BEFORE the given day, that's why we need to filter \"now-60d\" but we only want for the last 30 days).\n\nThe syntax here only cover date, while Oracle/PostgreSQL window functions can only be used for operations like \"return sum of last 30 records\".\n\nLet me know if you need any more details about the use case :).\n\nThanks!\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}