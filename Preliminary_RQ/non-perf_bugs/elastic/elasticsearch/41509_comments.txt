[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/486435197","html_url":"https://github.com/elastic/elasticsearch/issues/41509#issuecomment-486435197","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41509","id":486435197,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQzNTE5Nw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-04-24T21:32:16Z","updated_at":"2019-04-24T21:32:16Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/486681060","html_url":"https://github.com/elastic/elasticsearch/issues/41509#issuecomment-486681060","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41509","id":486681060,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjY4MTA2MA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2019-04-25T13:50:51Z","updated_at":"2019-04-25T13:50:51Z","author_association":"MEMBER","body":">Wouldn't it be more reasonable to prevent field_value_factor from returning negative values by returning 0 (=max(0, modified score)) in cases like the modifier function computing a negative value (example `ln(0.8)`)?\r\n\r\nYes it would be possible, but it's not consistent with our engineering philosophies. We prefer to be upfront with user when an expectation is violated, rather than silently swallowing these situations behind the user. For example, silently truncating to zero could actually be hiding a bug in the user's intended scoring.\r\n\r\nFor example, rather than use `x -> ln x` a common approach would be to use `x -> ln(1 + x)`.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/486824675","html_url":"https://github.com/elastic/elasticsearch/issues/41509#issuecomment-486824675","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41509","id":486824675,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjgyNDY3NQ==","user":{"login":"gwbrown","id":1522844,"node_id":"MDQ6VXNlcjE1MjI4NDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1522844?v=4","gravatar_id":"","url":"https://api.github.com/users/gwbrown","html_url":"https://github.com/gwbrown","followers_url":"https://api.github.com/users/gwbrown/followers","following_url":"https://api.github.com/users/gwbrown/following{/other_user}","gists_url":"https://api.github.com/users/gwbrown/gists{/gist_id}","starred_url":"https://api.github.com/users/gwbrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gwbrown/subscriptions","organizations_url":"https://api.github.com/users/gwbrown/orgs","repos_url":"https://api.github.com/users/gwbrown/repos","events_url":"https://api.github.com/users/gwbrown/events{/privacy}","received_events_url":"https://api.github.com/users/gwbrown/received_events","type":"User","site_admin":false},"created_at":"2019-04-25T20:24:29Z","updated_at":"2019-04-25T20:26:27Z","author_association":"CONTRIBUTOR","body":"We discussed this in FixItThursday and realized that we already have alternative functions to add to the field value (`ln1p` and `ln2p` to add 1 and 2 respectively) before taking the logarithm, and similar alternatives for the base-10 logarithm. Using these instead of just `ln` or `log` should avoid the issue of returning negative scores.\r\n\r\nBecause disallowing `ln`/`log` would be a breaking change (and thus not help in the 7.x series), and we don't want to start silently clamping negative values to 0 (as this would cause behavior to change in potentially unexpected ways), we've decided to look into two options:\r\n1) Add a note to the docs for the `ln` and `log` functions that the may return negative values and that `ln1p`, etc. should generally be preferred. (@gwbrown)\r\n2) Improve the error message in this case to recommend the use of those functions. (@jdconrad)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/489796870","html_url":"https://github.com/elastic/elasticsearch/issues/41509#issuecomment-489796870","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41509","id":489796870,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4OTc5Njg3MA==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2019-05-06T21:52:16Z","updated_at":"2019-05-06T21:52:16Z","author_association":"MEMBER","body":"Closing this out now that the two points in @gwbrown's comment  have been addressed (#41609 and #41610).","performed_via_github_app":null}]