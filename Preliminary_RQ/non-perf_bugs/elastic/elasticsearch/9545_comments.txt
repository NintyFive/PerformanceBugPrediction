[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/72699695","html_url":"https://github.com/elastic/elasticsearch/issues/9545#issuecomment-72699695","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9545","id":72699695,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNjk5Njk1","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2015-02-03T17:53:52Z","updated_at":"2015-02-03T17:53:52Z","author_association":"MEMBER","body":"@Hocdoc Are you passing your long values as json numbers? These have precision problems for large integers.  Instead, you can pass them as strings and Elasticsearch will coerce the string into the type (long in this case) of the field.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/72706546","html_url":"https://github.com/elastic/elasticsearch/issues/9545#issuecomment-72706546","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9545","id":72706546,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzA2NTQ2","user":{"login":"Hocdoc","id":3492813,"node_id":"MDQ6VXNlcjM0OTI4MTM=","avatar_url":"https://avatars0.githubusercontent.com/u/3492813?v=4","gravatar_id":"","url":"https://api.github.com/users/Hocdoc","html_url":"https://github.com/Hocdoc","followers_url":"https://api.github.com/users/Hocdoc/followers","following_url":"https://api.github.com/users/Hocdoc/following{/other_user}","gists_url":"https://api.github.com/users/Hocdoc/gists{/gist_id}","starred_url":"https://api.github.com/users/Hocdoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hocdoc/subscriptions","organizations_url":"https://api.github.com/users/Hocdoc/orgs","repos_url":"https://api.github.com/users/Hocdoc/repos","events_url":"https://api.github.com/users/Hocdoc/events{/privacy}","received_events_url":"https://api.github.com/users/Hocdoc/received_events","type":"User","site_admin":false},"created_at":"2015-02-03T18:31:26Z","updated_at":"2015-02-03T18:31:26Z","author_association":"NONE","body":"No, the values are stored correctly (but thanks for the JSON hint). \nI use the Java client, not a Javascript client. I think the problem is the [Max interface](https://github.com/elasticsearch/elasticsearch/blob/master/src/main/java/org/elasticsearch/search/aggregations/metrics/max/Max.java)  which only define the `getValue()` method with return type double instead of f.ex. `Number`.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/72719075","html_url":"https://github.com/elastic/elasticsearch/issues/9545#issuecomment-72719075","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9545","id":72719075,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzE5MDc1","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2015-02-03T19:39:22Z","updated_at":"2015-02-03T19:39:22Z","author_association":"MEMBER","body":"Thanks @Hocdoc, your findings look like the probable cause. @jpountz is going to take a look.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/81832865","html_url":"https://github.com/elastic/elasticsearch/issues/9545#issuecomment-81832865","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9545","id":81832865,"node_id":"MDEyOklzc3VlQ29tbWVudDgxODMyODY1","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-03-16T17:40:49Z","updated_at":"2015-03-16T17:40:49Z","author_association":"CONTRIBUTOR","body":"Not only the interface is an issue but also the internal implementation: for simplicity we handle everything as doubles. We could potentially fix the min and max aggs, but I don't think eg. the sum aggregation is fixable since you can easily overflow a long while a double gracefully loses accuracy as the sum increases.\n\nI don't know how many users are affected by this issue. It is only an issue in practice when values grow larger than 2^53 so maybe the right thing to do is just to document this limitation?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/100539037","html_url":"https://github.com/elastic/elasticsearch/issues/9545#issuecomment-100539037","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9545","id":100539037,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMDUzOTAzNw==","user":{"login":"Norelius","id":3646235,"node_id":"MDQ6VXNlcjM2NDYyMzU=","avatar_url":"https://avatars1.githubusercontent.com/u/3646235?v=4","gravatar_id":"","url":"https://api.github.com/users/Norelius","html_url":"https://github.com/Norelius","followers_url":"https://api.github.com/users/Norelius/followers","following_url":"https://api.github.com/users/Norelius/following{/other_user}","gists_url":"https://api.github.com/users/Norelius/gists{/gist_id}","starred_url":"https://api.github.com/users/Norelius/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Norelius/subscriptions","organizations_url":"https://api.github.com/users/Norelius/orgs","repos_url":"https://api.github.com/users/Norelius/repos","events_url":"https://api.github.com/users/Norelius/events{/privacy}","received_events_url":"https://api.github.com/users/Norelius/received_events","type":"User","site_admin":false},"created_at":"2015-05-09T19:59:29Z","updated_at":"2015-05-09T19:59:29Z","author_association":"NONE","body":"I think there would be value in implementing min and max aggregations for long fields even if the sum aggregation is left out. The reasoning being that you might want to store a unix timestamp as a long instead of using the date option and find min or max timestamps within a search result. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/100619581","html_url":"https://github.com/elastic/elasticsearch/issues/9545#issuecomment-100619581","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9545","id":100619581,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMDYxOTU4MQ==","user":{"login":"Noia","id":397736,"node_id":"MDQ6VXNlcjM5NzczNg==","avatar_url":"https://avatars2.githubusercontent.com/u/397736?v=4","gravatar_id":"","url":"https://api.github.com/users/Noia","html_url":"https://github.com/Noia","followers_url":"https://api.github.com/users/Noia/followers","following_url":"https://api.github.com/users/Noia/following{/other_user}","gists_url":"https://api.github.com/users/Noia/gists{/gist_id}","starred_url":"https://api.github.com/users/Noia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Noia/subscriptions","organizations_url":"https://api.github.com/users/Noia/orgs","repos_url":"https://api.github.com/users/Noia/repos","events_url":"https://api.github.com/users/Noia/events{/privacy}","received_events_url":"https://api.github.com/users/Noia/received_events","type":"User","site_admin":false},"created_at":"2015-05-10T10:36:11Z","updated_at":"2015-05-10T10:36:11Z","author_association":"NONE","body":"I'd suggest making the Max interface become generic <T extends Number> and then the Sum interface does the same but retains a doubleValue method with comments regarding precision. Alternatively you can add a tag to the Sum requests regarding how to handle overflow scenarios. Also, you can fit more in by using an unsigned long (from Guava) but that's probably beyond the scope of this.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263080012","html_url":"https://github.com/elastic/elasticsearch/issues/9545#issuecomment-263080012","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9545","id":263080012,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzA4MDAxMg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-11-26T19:03:05Z","updated_at":"2016-11-26T19:03:05Z","author_association":"CONTRIBUTOR","body":"@jpountz what's your feeling about this one after 18 months of reflection?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263222164","html_url":"https://github.com/elastic/elasticsearch/issues/9545#issuecomment-263222164","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9545","id":263222164,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzIyMjE2NA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-11-28T09:26:29Z","updated_at":"2016-11-28T09:26:29Z","author_association":"CONTRIBUTOR","body":"I think this is only really an issue for the `min` and `max` aggregations, which return a value from the dataset rather than an aggregate from multiple values. There would also be the `percentiles` aggregation in that case, but it is already documented as being approximate.\r\n\r\nI would like to fix it, but it is not straightforward and also looks impossible to do without breaking all users of the Java transport client. So I am tempted to close it and document the behaviour. Maybe we can reconsider when all clients talk to Elasticsearch using the REST layer.","performed_via_github_app":null}]