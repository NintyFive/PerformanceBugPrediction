[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/513670418","html_url":"https://github.com/elastic/elasticsearch/issues/44681#issuecomment-513670418","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44681","id":513670418,"node_id":"MDEyOklzc3VlQ29tbWVudDUxMzY3MDQxOA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-07-22T07:15:13Z","updated_at":"2019-07-22T07:15:13Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/513683567","html_url":"https://github.com/elastic/elasticsearch/issues/44681#issuecomment-513683567","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44681","id":513683567,"node_id":"MDEyOklzc3VlQ29tbWVudDUxMzY4MzU2Nw==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2019-07-22T07:57:32Z","updated_at":"2019-07-22T14:11:14Z","author_association":"MEMBER","body":"The problem that causes the index close to fail here is that we time out in `org.elasticsearch.index.shard.IndexShardOperationPermits#acquireAll` on one shard every now and then which fails `org.elasticsearch.cluster.metadata.MetaDataIndexStateService#closeRoutingTable`. \r\n\r\nThe deeper reason for that is that another thread on the generic pool is stuck on\r\n`org.elasticsearch.index.seqno.ReplicationTracker#waitForLocalCheckpointToAdvance` waiting for the wakeup via `org.elasticsearch.index.seqno.ReplicationTracker#notifyAllWaiters` that seems to never come => we can't get all the permits since that thread has one.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/513844929","html_url":"https://github.com/elastic/elasticsearch/issues/44681#issuecomment-513844929","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44681","id":513844929,"node_id":"MDEyOklzc3VlQ29tbWVudDUxMzg0NDkyOQ==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2019-07-22T15:38:25Z","updated_at":"2019-07-22T15:38:25Z","author_association":"MEMBER","body":"@ywelsch I talked about this with @DaveCTurner on another channel and he referred me to you on this one :)\r\n\r\nThe problem here is that we are trying to close an index while a primary relocation is ongoing.\r\nThe leads to us getting stuck in the following state:\r\n\r\n```\r\n\"elasticsearch[node_sd4][generic][T#2]@14309\" daemon prio=5 tid=0x69c nid=NA waiting\r\n  java.lang.Thread.State: WAITING\r\n\t  at java.lang.Object.wait(Object.java:-1)\r\n\t  at java.lang.Object.wait(Object.java:326)\r\n\t  at org.elasticsearch.index.seqno.ReplicationTracker.waitForLocalCheckpointToAdvance(ReplicationTracker.java:1108)\r\n\t  at org.elasticsearch.index.seqno.ReplicationTracker.markAllocationIdAsInSync(ReplicationTracker.java:876)\r\n\t  at org.elasticsearch.index.shard.IndexShard.markAllocationIdAsInSync(IndexShard.java:2140)\r\n\t  at org.elasticsearch.indices.recovery.RecoverySourceHandler.lambda$finalizeRecovery$30(RecoverySourceHandler.java:621)\r\n\t  at org.elasticsearch.indices.recovery.RecoverySourceHandler$$Lambda$2590.361577764.run(Unknown Source:-1)\r\n\t  at org.elasticsearch.indices.recovery.RecoverySourceHandler.lambda$runUnderPrimaryPermit$18(RecoverySourceHandler.java:294)\r\n\t  at org.elasticsearch.indices.recovery.RecoverySourceHandler$$Lambda$2415.417697003.run(Unknown Source:-1)\r\n\t  at org.elasticsearch.common.util.CancellableThreads.executeIO(CancellableThreads.java:108)\r\n\t  at org.elasticsearch.common.util.CancellableThreads.execute(CancellableThreads.java:89)\r\n\t  at org.elasticsearch.indices.recovery.RecoverySourceHandler.runUnderPrimaryPermit(RecoverySourceHandler.java:272)\r\n\t  at org.elasticsearch.indices.recovery.RecoverySourceHandler.finalizeRecovery(RecoverySourceHandler.java:621)\r\n\t  at org.elasticsearch.indices.recovery.RecoverySourceHandler.lambda$recoverToTarget$14(RecoverySourceHandler.java:243)\r\n\t  at org.elasticsearch.indices.recovery.RecoverySourceHandler$$Lambda$2497.1955717483.accept(Unknown Source:-1)\r\n\t  at org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:62)\r\n\t  at org.elasticsearch.common.util.concurrent.ListenableFuture$1.run(ListenableFuture.java:99)\r\n\t  at org.elasticsearch.common.util.concurrent.EsExecutors$DirectExecutorService.execute(EsExecutors.java:193)\r\n\t  at org.elasticsearch.common.util.concurrent.ListenableFuture.notifyListener(ListenableFuture.java:92)\r\n\t  at org.elasticsearch.common.util.concurrent.ListenableFuture.lambda$done$0(ListenableFuture.java:84)\r\n\t  at org.elasticsearch.common.util.concurrent.ListenableFuture$$Lambda$1986.951157525.accept(Unknown Source:-1)\r\n\t  at java.util.ArrayList.forEach(ArrayList.java:1540)\r\n\t  at org.elasticsearch.common.util.concurrent.ListenableFuture.done(ListenableFuture.java:84)\r\n\t  - locked <0x4078> (a org.elasticsearch.common.util.concurrent.ListenableFuture)\r\n\t  at org.elasticsearch.common.util.concurrent.BaseFuture.set(BaseFuture.java:144)\r\n\t  at org.elasticsearch.common.util.concurrent.ListenableFuture.onResponse(ListenableFuture.java:117)\r\n\t  at org.elasticsearch.action.StepListener.innerOnResponse(StepListener.java:62)\r\n\t  at org.elasticsearch.action.NotifyOnceListener.onResponse(NotifyOnceListener.java:40)\r\n\t  at org.elasticsearch.action.ActionListener.lambda$map$2(ActionListener.java:145)\r\n\t  at org.elasticsearch.action.ActionListener$$Lambda$1790.1175091330.accept(Unknown Source:-1)\r\n\t  at org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:62)\r\n\t  at org.elasticsearch.indices.recovery.RecoverySourceHandler.sendBatch(RecoverySourceHandler.java:604)\r\n\t  at org.elasticsearch.indices.recovery.RecoverySourceHandler.lambda$sendBatch$28(RecoverySourceHandler.java:589)\r\n\t  at org.elasticsearch.indices.recovery.RecoverySourceHandler$$Lambda$2554.936623647.accept(Unknown Source:-1)\r\n\t  at org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:62)\r\n\t  at org.elasticsearch.action.ActionListener.lambda$map$2(ActionListener.java:145)\r\n\t  at org.elasticsearch.action.ActionListener$$Lambda$1790.1175091330.accept(Unknown Source:-1)\r\n\t  at org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:62)\r\n\t  at org.elasticsearch.action.ActionListenerResponseHandler.handleResponse(ActionListenerResponseHandler.java:54)\r\n\t  at org.elasticsearch.transport.PlainTransportFuture.handleResponse(PlainTransportFuture.java:67)\r\n\t  at org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleResponse(TransportService.java:1103)\r\n\t  at org.elasticsearch.transport.InboundHandler$1.doRun(InboundHandler.java:224)\r\n\t  at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:769)\r\n\t  at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n\t  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\t  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\t  at java.lang.Thread.run(Thread.java:835)\r\n\r\n\r\n\"elasticsearch[node_sd4][generic][T#1]@14277\" daemon prio=5 tid=0x686 nid=NA runnable\r\n  java.lang.Thread.State: RUNNABLE\r\n\t  at org.elasticsearch.index.shard.IndexShardOperationPermits.acquireAll(IndexShardOperationPermits.java:177)\r\n\t  at org.elasticsearch.index.shard.IndexShardOperationPermits$1.doRun(IndexShardOperationPermits.java:141)\r\n\t  at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:769)\r\n\t  at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n\t  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\t  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\t  at java.lang.Thread.run(Thread.java:835)\r\n\r\n```\r\n\r\n=> the close index tries to get all the permits and finalizing the recovery is waiting for the checkpoint to get in sync.\r\n\r\nNeither of these can progress though, since the close index action has already invoked `org.elasticsearch.index.shard.IndexShardOperationPermits#delayOperations` so the operation that would make the checkpoint sync up is delayed.\r\nAny suggestions on what a fix could look like here? (or maybe no fix is needed even since the close timeout is much smaller than the timeout on the relocation operation so a user could just retry the close? .. and the test could just be fixed by waiting for the cluster to be in a quiet state before invoking close by the same logic)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/513861845","html_url":"https://github.com/elastic/elasticsearch/issues/44681#issuecomment-513861845","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44681","id":513861845,"node_id":"MDEyOklzc3VlQ29tbWVudDUxMzg2MTg0NQ==","user":{"login":"ebadyano","id":26631211,"node_id":"MDQ6VXNlcjI2NjMxMjEx","avatar_url":"https://avatars0.githubusercontent.com/u/26631211?v=4","gravatar_id":"","url":"https://api.github.com/users/ebadyano","html_url":"https://github.com/ebadyano","followers_url":"https://api.github.com/users/ebadyano/followers","following_url":"https://api.github.com/users/ebadyano/following{/other_user}","gists_url":"https://api.github.com/users/ebadyano/gists{/gist_id}","starred_url":"https://api.github.com/users/ebadyano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ebadyano/subscriptions","organizations_url":"https://api.github.com/users/ebadyano/orgs","repos_url":"https://api.github.com/users/ebadyano/repos","events_url":"https://api.github.com/users/ebadyano/events{/privacy}","received_events_url":"https://api.github.com/users/ebadyano/received_events","type":"User","site_admin":false},"created_at":"2019-07-22T16:44:01Z","updated_at":"2019-07-22T16:44:01Z","author_association":"CONTRIBUTOR","body":"another failure: https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+master+intake/839/console","performed_via_github_app":null}]