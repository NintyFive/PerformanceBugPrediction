[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244200133","html_url":"https://github.com/elastic/elasticsearch/issues/20289#issuecomment-244200133","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20289","id":244200133,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDIwMDEzMw==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2016-09-01T20:21:48Z","updated_at":"2016-09-01T20:21:48Z","author_association":"MEMBER","body":"Can you provide the documents this aggregation is running over so we can try to reproduce?\n\n> field1 has decimal n where 0<=n<=1 whereas field2 only has 0<=n<1\n\nThis doesn't really make sense to me, you said that the field is of type `long`, but you are only sending values between 0 and 1? This seems like something that should be a `double` or `float`?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244203427","html_url":"https://github.com/elastic/elasticsearch/issues/20289#issuecomment-244203427","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20289","id":244203427,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDIwMzQyNw==","user":{"login":"jgminer","id":5367814,"node_id":"MDQ6VXNlcjUzNjc4MTQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5367814?v=4","gravatar_id":"","url":"https://api.github.com/users/jgminer","html_url":"https://github.com/jgminer","followers_url":"https://api.github.com/users/jgminer/followers","following_url":"https://api.github.com/users/jgminer/following{/other_user}","gists_url":"https://api.github.com/users/jgminer/gists{/gist_id}","starred_url":"https://api.github.com/users/jgminer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgminer/subscriptions","organizations_url":"https://api.github.com/users/jgminer/orgs","repos_url":"https://api.github.com/users/jgminer/repos","events_url":"https://api.github.com/users/jgminer/events{/privacy}","received_events_url":"https://api.github.com/users/jgminer/received_events","type":"User","site_admin":false},"created_at":"2016-09-01T20:33:54Z","updated_at":"2016-09-01T20:33:54Z","author_association":"NONE","body":"I cannot provide the documents exactly as written, however I will try to explain better what I think happened.\n\nWhen these documents were first created, these fields each would have had the value '0', leading to Elasticsearch assigning the analyzed fields as `long`. However, later on the documents started seeing values that were decimals for the same index, but they were stuck with the old analyzed type. So I think it makes sense why both fields are of type `long`.\n\nWhat doesn't make sense is why the aggregation would return so differently on essentially the same values. I'm thinking our best bet may be to have Logstash (the source) assign a template for this index that assigns a new field as non-analyzed - we've done this in the past, but I'm trying to understand the typed-ness of Elasticsearch and avoid a hacky solution.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244376631","html_url":"https://github.com/elastic/elasticsearch/issues/20289#issuecomment-244376631","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20289","id":244376631,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDM3NjYzMQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-09-02T13:36:25Z","updated_at":"2016-09-02T13:36:25Z","author_association":"CONTRIBUTOR","body":"This is easily explained with the following example:\n\n```\nPUT t/t/1\n{\n  \"one\": 0,\n  \"two\": 0\n}\n\nPUT t/t/2\n{\n  \"one\": 1,\n  \"two\": 0.9\n}\n\nPUT t/t/3\n{\n  \"one\": 0.5,\n  \"two\": 0.5\n}\n\nGET t/_search\n{\n  \"docvalue_fields\": [\n    \"one\",\n    \"two\"\n  ],\n  \"aggs\": {\n    \"one\": {\n      \"avg\": {\n        \"field\": \"one\"\n      }\n    },\n    \"two\": {\n      \"avg\": {\n        \"field\": \"two\"\n      }\n    }\n  }\n}\n```\n\nwhich returns:\n\n```\n{\n  \"took\": 2,\n  \"timed_out\": false,\n  \"_shards\": {\n    \"total\": 5,\n    \"successful\": 5,\n    \"failed\": 0\n  },\n  \"hits\": {\n    \"total\": 3,\n    \"max_score\": 1,\n    \"hits\": [\n      {\n        \"_index\": \"t\",\n        \"_type\": \"t\",\n        \"_id\": \"2\",\n        \"_score\": 1,\n        \"_source\": {\n          \"one\": 1,\n          \"two\": 0.9\n        },\n        \"fields\": {\n          \"two\": [\n            0\n          ],\n          \"one\": [\n            1\n          ]\n        }\n      },\n      {\n        \"_index\": \"t\",\n        \"_type\": \"t\",\n        \"_id\": \"1\",\n        \"_score\": 1,\n        \"_source\": {\n          \"one\": 1,\n          \"two\": 0.9\n        },\n        \"fields\": {\n          \"two\": [\n            0\n          ],\n          \"one\": [\n            1\n          ]\n        }\n      },\n      {\n        \"_index\": \"t\",\n        \"_type\": \"t\",\n        \"_id\": \"3\",\n        \"_score\": 1,\n        \"_source\": {\n          \"one\": 0.5,\n          \"two\": 0.5\n        },\n        \"fields\": {\n          \"two\": [\n            0\n          ],\n          \"one\": [\n            0\n          ]\n        }\n      }\n    ]\n  },\n  \"aggregations\": {\n    \"one\": {\n      \"value\": 0.6666666666666666\n    },\n    \"two\": {\n      \"value\": 0\n    }\n  }\n}\n```\n\n`one` and `two` are both longs, so any decimal part is discarded. `one` contains values 0 <= n <= 1, which results in lots of zeroes and the occasional 1.  `two` contains values 0 <= n < 1, which results in all zeroes.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244383990","html_url":"https://github.com/elastic/elasticsearch/issues/20289#issuecomment-244383990","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20289","id":244383990,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDM4Mzk5MA==","user":{"login":"jgminer","id":5367814,"node_id":"MDQ6VXNlcjUzNjc4MTQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5367814?v=4","gravatar_id":"","url":"https://api.github.com/users/jgminer","html_url":"https://github.com/jgminer","followers_url":"https://api.github.com/users/jgminer/followers","following_url":"https://api.github.com/users/jgminer/following{/other_user}","gists_url":"https://api.github.com/users/jgminer/gists{/gist_id}","starred_url":"https://api.github.com/users/jgminer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgminer/subscriptions","organizations_url":"https://api.github.com/users/jgminer/orgs","repos_url":"https://api.github.com/users/jgminer/repos","events_url":"https://api.github.com/users/jgminer/events{/privacy}","received_events_url":"https://api.github.com/users/jgminer/received_events","type":"User","site_admin":false},"created_at":"2016-09-02T14:04:54Z","updated_at":"2016-09-02T14:04:54Z","author_association":"NONE","body":"@clintongormley Thanks for the clear, concise explanation and example. That makes sense given the type `long`.\n","performed_via_github_app":null}]