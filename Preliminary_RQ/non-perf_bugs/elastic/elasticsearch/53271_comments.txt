[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/596430805","html_url":"https://github.com/elastic/elasticsearch/issues/53271#issuecomment-596430805","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53271","id":596430805,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NjQzMDgwNQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-03-09T09:51:24Z","updated_at":"2020-03-09T09:51:24Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed (:Distributed/Cluster Coordination)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/596709677","html_url":"https://github.com/elastic/elasticsearch/issues/53271#issuecomment-596709677","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53271","id":596709677,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NjcwOTY3Nw==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2020-03-09T18:33:36Z","updated_at":"2020-03-09T18:33:36Z","author_association":"CONTRIBUTOR","body":"Ohh this is tricky.\r\n\r\nThe test fails in the first `stabilise()` method, before any disruptions took place. `node0` is rejecting publications from the leader (`node4`) because `node0` is in term 2 but `node4` is in term 1.\r\n\r\nThe trouble is that `node4` tried to trigger an election in term 2 and broadcasts a start-join request, but fails to process it locally due to a (simulated) IO exception, so it remains in term 1. Meanwhile `node0` receives and processes the start-join request successfully, votes for `node4` and enters term 2. Then `node4` becomes leader in term 1 anyway.\r\n\r\n`Publication#onMissingJoin` deals with the case where a publication was accepted by a node that voted for a different master in this term by triggering a term bump. However here `node0` is forced to reject the publication since it's in a stale term, so we do not trigger the term bump.","performed_via_github_app":null}]