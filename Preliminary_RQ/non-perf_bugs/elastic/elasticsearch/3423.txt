{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3423","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3423/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3423/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3423/events","html_url":"https://github.com/elastic/elasticsearch/issues/3423","id":17505472,"node_id":"MDU6SXNzdWUxNzUwNTQ3Mg==","number":3423,"title":"function score","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"labels":[{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":51048736,"node_id":"MDU6TGFiZWw1MTA0ODczNg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.90.4","name":"v0.90.4","color":"DDDDDD","default":false,"description":null},{"id":37906111,"node_id":"MDU6TGFiZWwzNzkwNjExMQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.0.0.Beta1","name":"v1.0.0.Beta1","color":"DDDDDD","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"assignees":[{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2013-08-01T12:54:17Z","updated_at":"2013-09-16T08:19:33Z","closed_at":"2013-08-06T16:54:57Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"# Function score\n\n<code>function_score</code> allows to modify the score of documents that are retrieved by a query. This can be useful if, for example, a score function is computationally expensive and it is sufficient to compute the score on a filtered set of documents.\n\n<code>function_score</code> provides the same functionality that <code>custom_boost_factor</code>, <code>custom_score</code> and <code>custom_filters_score</code> provided but furthermore adds the option to score a document depending on the distance of a numeric field value from a user given reference (see description below).\n## Using function score\n\n<code>function_score</code> can be used with only one function like this:\n\n```\n\"function_score\": {\n    \"(query|filter)\": {},\n    \"boost\": \"boost for the whole query\",\n    \"FUNCTION\": {}\n} \n```\n\nFurthermore, several functions can be combined. In this case one can optionally choose to apply the function only if a document matches a given filter:\n\n```\n\"function_score\": {\n    \"(query|filter)\": {},\n    \"boost\": \"boost for the whole query\",\n    \"functions\": [\n        {\n            \"filter\": {},\n            \"FUNCTION\": {}\n        },\n        {\n            \"FUNCTION\": {}\n        }\n    ],\n    \"score_mode\": \"(mult|max|...)\"\n}\n```\n\nIf no filter is given with a function this is equivalent to specifying <code>\"match_all\": {}</code>\n\n<code>score_mode</code> defines how functions are combined before multiplying to the score of the query:\n- \"multiply\":  all functions are multiplied \n-  \"total\":  functions are summed \n-  \"avg\":  average of functions is computed\n-  \"first\": the first function that has a matching filter with it is applied\n-  \"max\": the function yielding the maximum score is applied \n-   \"min\": the function yielding the minimum score is applied \n\nThe default is <code>\"multiply\"</code>.\n# Score functions\n\n<code>function_score</code> provides three types of score functions.\n## Script score\n\nThe <code>script_score</code> function allows to wrap another query and customize the scoring of it optionally with a computation derived from other field values in the doc (numeric ones) using script expression. Here is a simple sample:\n\n```\n\"script_score\" : {\n    \"script\" : \"_score * doc['my_numeric_field'].value\"\n}\n```\n\nOn top of the different scripting field values and expression, the <code>_score</code> script parameter can be used to retrieve the score based on the wrapped query.\n\nScripts are cached for faster execution. If the script has parameters that it needs to take into account, it is preferable to use the same script, and provide parameters to it:\n\n```\n\"script_score\": {\n    \"lang\": \"lang\",\n    \"params\": {\n        \"param1\": value1,\n        \"param2\": value2\n     },\n    \"script\": \"_score * doc['my_numeric_field'].value / pow(param1, param2)\"\n}\n```\n## Boost factor\n\nThe <code>boost_factor</code> score allows to multiply the score by the provided <code>boost_factor</code>. This can sometimes be desired since boost value set on specific queries gets normalized, while for this score function it does not.\n\n```\n\"boost_factor\" : number\n```\n## Decay functions\n\nDecay functions score a document with a function that decays depending on the distance of a numeric field value of the document from a user given reference. This is similar to a range query, but with smooth edges instead of boxes.\n\nTo use distance scoring on a query that has numerical fields, the user has to define \n1. a reference and\n2. a scale\n\nfor each field. A reference is needed to define a distance for the document and a scale to define the rate of decay. The decay function is specified by\n\n```\n\"DECAY_FUNCTION\": {\n    \"FIELD_NAME\": {\n          \"reference\": \"11, 12\",\n          \"scale\": \"2km\"\n    }\n}\n```\n\nwhere <code>DECAY_FUNCTION</code> can be \"linear\", \"exp\" and \"gauss\".\n### Normal decay, keyword \"gauss\"\n\nThe score is computed as\n\n<a href=\"http://www.codecogs.com/eqnedit.php?latex=\\exp(-\\frac{(fieldvalue_{doc}-reference)^2}{2scale^2})\" target=\"_blank\"><img src=\"http://latex.codecogs.com/gif.latex?\\mathcal{S}(doc)=\\exp(-\\frac{(fieldvalue_{doc}-reference)^2}{2scale^2})\" title=\"\\exp(-\\frac{x-\\mu}{2\\sigma^2}),\" /></a>\n### Exponential decay, keyword \"exp\"\n\nThe score is computed as\n\n<a href=\"http://www.codecogs.com/eqnedit.php?latex=\\exp(-\\frac{abs(x-\\mu)^2}{\\sigma})\" target=\"_blank\"><img src=\"http://latex.codecogs.com/gif.latex?\\mathcal{S}(doc)=\\exp(-\\frac{|fieldvalue_{doc}-reference|}{scale})\" title=\"\\exp(-\\frac{x-\\mu}{2\\sigma^2}),\" /></a>\n### 'Linear' decay, keyword \"linear\"\n\nThe score is computed as\n\n<a href=\"http://www.codecogs.com/eqnedit.php?latex=\\frac{abs(x-\\mu)^2}{\\sigma})\" target=\"_blank\"><img src=\"http://latex.codecogs.com/gif.latex?\\mathcal{S}(doc)=\\max(\\frac{scale-|fieldvalue_{doc}-reference|}{scale},0)\" title=\"\\exp(-\\frac{x-\\mu}{2\\sigma^2}),\" /></a>\n\nIn contrast to the normal and exponential decay, this function actually sets the score to 0 if the field value exceeds the user given scale value.\n### Choosing an appropriate scale\n\nFor all three functions, it might not always be easy to define an appropriate scale. Rather than defining the scale parameter directly, one can optionally define a distance at which the function should compute a particular factor.\n\nFor example, your documents might represents hotels and contain a geo location field. You want to compute a decay function depending on how far the hotel is from a given location. You might not immediately see what scale to choose for the gauss function, but you can say something like: \"At a distance of 2km from the desired location, the score should be reduced by half.\"\nYou can provide this parameter like this:\n\n```\n  \"DECAY_FUNCTION\": {\n    \"location\": {\n          \"reference\": \"11, 12\",\n          \"scale\": \"2km\",\n          \"scale_weight\" : 0.5\n    }\n}\n```\n\nThe parameter \"scale\" will then be adjusted automatically to assure that the score function computes a score of 0.5 for hotels that are 2km away from the desired location.\n### Detailed example\n\nSuppose you are searching for a hotel in a certain town. Your budget is limited. Also, you would like the hotel to be close to the town center, so the farther the hotel is from the desired location the less likely you are to check in.\nYou would like the query results that match your criterion (for example, \"hotel, Nancy, non-smoker\") to be scored with respect to distance to the town center and also the price. \n\nIntuitively, you would like to define the town center as the origin and maybe you are willing to walk 2km to the town center from the hotel.\nIn this case your _reference_ for the location field is the town center and the _scale_ is ~2km.\n\nIf your budget is low, you would probably prefer something cheap above something expensive. \nFor the price field, the _reference_ would be 0 Euros and the _scale_ depends on how much you are willing to pay, for example 20 Euros. \n\nIn this example, the fields might be called \"price\" for the price of the hotel and \"location\" for the coordinates of this hotel. \n\nThe function for \"price\" in this case would be \n\n```\n\"DECAY_FUNCTION\": {\n    \"price\": {\n          \"reference\": \"0\",\n          \"scale\": \"20\"\n    }\n}\n```\n\nand for \"location\"\n\n```\n\"DECAY_FUNCTION\": {\n    \"location\": {\n          \"reference\": \"11, 12\",\n          \"scale\": \"2km\"\n    }\n}\n```\n\nwhere <code>DECAY_FUNCTION</code> can be \"linear\", \"exp\" and \"gauss\".\n\nSuppose you want to multiply these two functions on the original score, the request would look like this:\n\n```\ncurl 'localhost:9200/hotels/_search/' -d '{\n\"query\": {\n    \"function_score\": {\n        \"functions\": [\n            {\n                \"DECAY_FUNCTION\": {\n                    \"price\": {\n                        \"reference\": \"0\",\n                        \"scale\": \"20\"\n                    }\n                }\n            },\n            {\n                \"DECAY_FUNCTION\": {\n                    \"location\": {\n                        \"reference\": \"11, 12\",\n                        \"scale\": \"2km\"\n                    }\n                }\n            }\n        ],\n        \"query\": {\n            \"match\": {\n                \"properties\": \"balcony\"\n            }\n        },\n        \"score_mode\": \"multiply\"\n    }\n}\n}'\n```\n\nNext, we show how the computed score looks like for each of the three possible decay functions.\n#### Normal decay, keyword \"gauss\"\n\nWhen choosing \"gauss\" as decay function in the above example, the multiplier to the original score is computed as\n\n<a href=\"http://www.codecogs.com/eqnedit.php?latex=\\mathcal{S}(doc)=\\exp(-\\frac{(location_{doc}-reference_{loc})^2}{2scale_{loc}})\\exp(-\\frac{(price_{doc}-reference_{price})^2}{2scale_{price}})\" target=\"_blank\"><img src=\"http://latex.codecogs.com/gif.latex?\\mathcal{S}(doc)=\\exp(-\\frac{(location_{doc}-reference_{loc})^2}{2scale_{loc}})\\exp(-\\frac{(price_{doc}-reference_{price})^2}{2scale_{price}}),\" title=\"\\exp(-\\frac{x-\\mu}{2\\sigma^2}),\" /></a>\n\nA contour and surface plot of the multiplier looks like this:\n\n![gausscontour](https://f.cloud.github.com/assets/4320215/768157/cd0e18a6-e898-11e2-9b3c-f0145078bd6f.png)\n![gausssurf](https://f.cloud.github.com/assets/4320215/768160/ec43c928-e898-11e2-8e0d-f3c4519dbd89.png)\n\nSuppose your original search results matches three hotels : \"Backback Nap\", \"Drink n Drive\" and \"BnB Bellevue\". \n\"Drink n Drive\" is pretty far from your defined location (nearly 2 km) and is not too cheap (about 13 Euros) so it gets a low factor a factor of 0.56. \"BnB Bellevue\" and \"Backback Nap\" are both pretty close to the defined location but \"BnB Bellevue\" is cheaper, so it gets a multiplier of 0.86 whereas \"Backpack Nap\" gets a value of 0.66.\"\n### Exponential decay, keyword \"exp\"\n\nWhen choosing \"exp\" as decay function in the above example, the multiplier to the original score is computed as\n\n<a href=\"http://www.codecogs.com/eqnedit.php?latex=\\exp(-\\frac{abs(x-\\mu)^2}{\\sigma})\" target=\"_blank\"><img src=\"http://latex.codecogs.com/gif.latex?\\mathcal{S}(doc)=\\exp(-\\frac{|location_{doc}-reference_{loc}|}{scale_{loc}})\\exp(-\\frac{|price_{doc}-reference_{price}|}{scale_{price}}),\" title=\"\\exp(-\\frac{x-\\mu}{2\\sigma^2}),\" /></a>\n\nA contour and surface plot of the multiplier looks like this:\n\n![expcontour](https://f.cloud.github.com/assets/4320215/768161/082975c0-e899-11e2-86f7-174c3a729d64.png)\n![expsurf](https://f.cloud.github.com/assets/4320215/768162/0b606884-e899-11e2-907b-aefc77eefef6.png)\n### 'Linear' decay, keyword \"linear\"\n\nWhen choosing \"exp\" as decay function in the above example, the multiplier to the original score is computed as\n<a href=\"http://www.codecogs.com/eqnedit.php?latex=\\frac{abs(x-\\mu)^2}{\\sigma})\" target=\"_blank\"><img src=\"http://latex.codecogs.com/gif.latex?\\mathcal{S}(doc)=\\max(\\frac{scale_{loc}-|location_{doc}-reference_{loc}|}{scale_{loc}},0)\\max(\\frac{scale_{price}-|price_{doc}-reference_{price}|}{scale_{price}},0),\" title=\"\\exp(-\\frac{x-\\mu}{2\\sigma^2}),\" /></a>\n\nA contour and surface plot of the multiplier looks like this:\n\n![lincontour](https://f.cloud.github.com/assets/4320215/768164/1775b0ca-e899-11e2-9f4a-776b406305c6.png)\n![linsurf](https://f.cloud.github.com/assets/4320215/768165/19d8b1aa-e899-11e2-91bc-6b0553e8d722.png)\n#### Supported fields for decay functions\n\nOnly single valued numeric fields, including time and geo locations, should be supported. \n#### What is a field is missing?\n\nIs the numeric field is missing in the document, the function will return 1.\n# Relation to custom_boost_factor, custom_score and custom_filters_score\n\nThe custom boost factor query \n\n```\n\"custom_boost_factor\" : {\n    \"query\" : {\n        ....\n    },\n    \"boost_factor\" : 5.2\n}\n```\n\nbecomes\n\n```\n\"function_score\" : {\n    \"query\" : {\n        ....\n    },\n    \"boost_factor\" : 5.2\n}\n```\n\nThe custom script score\n\n```\n\"custom_score\" : {\n    \"query\" : {\n        ....\n    },\n    \"params\" : {\n        \"param1\" : 2,\n        \"param2\" : 3.1\n    },\n    \"script\" : \"_score * doc['my_numeric_field'].value / pow(param1, param2)\"\n}\n```\n\n becomes\n\n```\n\"function_score\" : {\n    \"query\" : {\n        ....\n    },\n    \"script_score\" : {\n\n        \"params\" : {\n            \"param1\" : 2,\n            \"param2\" : 3.1\n        },\n        \"script\" : \"_score * doc['my_numeric_field'].value / pow(param1, param2)\"\n    }\n}\n```\n\nand the custom filters score query \n\n```\n\"custom_filters_score\" : {\n    \"query\" : {\n        …\n     },\n    \"filters\" : [\n        {\n            \"filter\" : { …},\n            \"boost\" : \"3\"\n        },\n        {\n            \"filter\" : {…},\n            \"script\" : \"_score * doc['my_numeric_field'].value / pow(param1, param2)\"\n        }\n    ],\n    \"params\" : {\n        \"param1\" : 2,\n        \"param2\" : 3.1\n    }\n    \"score_mode\" : \"first\"\n}       \n```\n\nbecomes:\n\n```\n\"function_score\" : {\n    \"query\" : {\n        …\n    },\n    \"functions\" : [\n        {\n            \"filter\" : {…},\n            \"boost\" : \"3\"\n        },\n        {\n            \"filter\" : { … },\n            \"script_score\" : { \n                \"script\" : \"_score * doc['my_numeric_field'].value / pow(param1, param2)\",\n                \"params\" : {\n                    \"param1\" : 2,\n                    \"param2\" : 3.1\n                }\n\n            }\n        }\n    ],\n    \"score_mode\" : \"first\",     \n}       \n```\n\nThis issue replaces Issues #3307 and #3407 \n","closed_by":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"performed_via_github_app":null}