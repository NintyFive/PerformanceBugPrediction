[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/352394010","html_url":"https://github.com/elastic/elasticsearch/issues/27862#issuecomment-352394010","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27862","id":352394010,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MjM5NDAxMA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-12-18T11:00:24Z","updated_at":"2017-12-18T11:00:24Z","author_association":"MEMBER","body":"For simple phrase query the gap introduced by stop words is handled internally by checking the number of filtered positions (number of filtered tokens before the next) so this query is not exposed. \r\n`span` queries are not analyzed in es so we don't apply any gaps to `span_near` queries but it could be added in the DSL in some way. I'll mark this issue with the discuss label in order to have more opinions and see if we can have a feature implemented.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/352414211","html_url":"https://github.com/elastic/elasticsearch/issues/27862#issuecomment-352414211","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27862","id":352414211,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MjQxNDIxMQ==","user":{"login":"Chandan83","id":1045928,"node_id":"MDQ6VXNlcjEwNDU5Mjg=","avatar_url":"https://avatars2.githubusercontent.com/u/1045928?v=4","gravatar_id":"","url":"https://api.github.com/users/Chandan83","html_url":"https://github.com/Chandan83","followers_url":"https://api.github.com/users/Chandan83/followers","following_url":"https://api.github.com/users/Chandan83/following{/other_user}","gists_url":"https://api.github.com/users/Chandan83/gists{/gist_id}","starred_url":"https://api.github.com/users/Chandan83/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Chandan83/subscriptions","organizations_url":"https://api.github.com/users/Chandan83/orgs","repos_url":"https://api.github.com/users/Chandan83/repos","events_url":"https://api.github.com/users/Chandan83/events{/privacy}","received_events_url":"https://api.github.com/users/Chandan83/received_events","type":"User","site_admin":false},"created_at":"2017-12-18T12:37:07Z","updated_at":"2017-12-18T12:37:07Z","author_association":"CONTRIBUTOR","body":"Neither ES nor lucene analyzes span terms and that is why we need to pre-analyze user input and introduce gaps in place of stop words. This is exactly what is done internally for phrase search. Phrase search is limited to simple terms and it can't be used within a SpanNearQuery. For phrase containing multi-term words, the only way is to use Span queries with gaps. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/352422274","html_url":"https://github.com/elastic/elasticsearch/issues/27862#issuecomment-352422274","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27862","id":352422274,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MjQyMjI3NA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-12-18T13:15:28Z","updated_at":"2017-12-18T13:15:28Z","author_association":"MEMBER","body":"> Neither ES nor lucene analyzes span terms and that is why we need to pre-analyze user input and introduce gaps in place of stop words\r\n\r\nThis is correct, gaps are needed to build valid span queries from a client. \r\n\r\n> Phrase search is limited to simple terms and it can't be used within a SpanNearQuery. For phrase containing multi-term words, the only way is to use Span queries with gaps\r\n\r\nMulti-term words like `prefix` or `wildcard` ? Is this why you need to use span queries instead of a `match_phrase` ? \r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/352423464","html_url":"https://github.com/elastic/elasticsearch/issues/27862#issuecomment-352423464","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27862","id":352423464,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MjQyMzQ2NA==","user":{"login":"Chandan83","id":1045928,"node_id":"MDQ6VXNlcjEwNDU5Mjg=","avatar_url":"https://avatars2.githubusercontent.com/u/1045928?v=4","gravatar_id":"","url":"https://api.github.com/users/Chandan83","html_url":"https://github.com/Chandan83","followers_url":"https://api.github.com/users/Chandan83/followers","following_url":"https://api.github.com/users/Chandan83/following{/other_user}","gists_url":"https://api.github.com/users/Chandan83/gists{/gist_id}","starred_url":"https://api.github.com/users/Chandan83/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Chandan83/subscriptions","organizations_url":"https://api.github.com/users/Chandan83/orgs","repos_url":"https://api.github.com/users/Chandan83/repos","events_url":"https://api.github.com/users/Chandan83/events{/privacy}","received_events_url":"https://api.github.com/users/Chandan83/received_events","type":"User","site_admin":false},"created_at":"2017-12-18T13:20:46Z","updated_at":"2017-12-18T13:20:46Z","author_association":"CONTRIBUTOR","body":"Yes. We allow users to search for a complex phrase (i.e. a phrase containing regex, wildcard etc besides simple terms). For such a phrase, we require SpanNearQuery along with a way to introduce gaps for removed stop words.  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/352491901","html_url":"https://github.com/elastic/elasticsearch/issues/27862#issuecomment-352491901","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27862","id":352491901,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MjQ5MTkwMQ==","user":{"login":"Chandan83","id":1045928,"node_id":"MDQ6VXNlcjEwNDU5Mjg=","avatar_url":"https://avatars2.githubusercontent.com/u/1045928?v=4","gravatar_id":"","url":"https://api.github.com/users/Chandan83","html_url":"https://github.com/Chandan83","followers_url":"https://api.github.com/users/Chandan83/followers","following_url":"https://api.github.com/users/Chandan83/following{/other_user}","gists_url":"https://api.github.com/users/Chandan83/gists{/gist_id}","starred_url":"https://api.github.com/users/Chandan83/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Chandan83/subscriptions","organizations_url":"https://api.github.com/users/Chandan83/orgs","repos_url":"https://api.github.com/users/Chandan83/repos","events_url":"https://api.github.com/users/Chandan83/events{/privacy}","received_events_url":"https://api.github.com/users/Chandan83/received_events","type":"User","site_admin":false},"created_at":"2017-12-18T17:12:33Z","updated_at":"2017-12-18T17:12:33Z","author_association":"CONTRIBUTOR","body":"For a POC hack, in place of a gap, I am using a SpanTermQuery with term text as \"A_GAP\" and then modified SpanNearQueryParser checks for such a SpanTermQuery and replaces it with lucene's SpanNearQuery.SpanGapQuery which had to be made public. The later could have been avoided but it required more changes to the parser. An ideal solution will be to introduce SpanGapQuery like SpanQuery to ES. If this seems alright to maintainers, I can submit a pull request.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/352540234","html_url":"https://github.com/elastic/elasticsearch/issues/27862#issuecomment-352540234","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27862","id":352540234,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MjU0MDIzNA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-12-18T19:56:11Z","updated_at":"2017-12-26T09:15:21Z","author_association":"MEMBER","body":"> An ideal solution will be to introduce SpanGapQuery like SpanQuery to ES. If this seems alright to maintainers, I can submit a pull request.\r\n\r\nThanks for offering you help, I'll be happy to review ;). Though it should only work within a `span_near` query since it's the only query that accepts this option. Do you have an idea of the format for this new query ? Something like:\r\n````\r\n\"span_near\": {\r\n  \"clauses\" : [\r\n                { \"span_term\" : { \"field\" : \"value1\" } },\r\n                { \"span_gap\": 2 },\r\n                { \"span_term\" : { \"field\" : \"value3\" } }\r\n    ]\r\n}\r\n````\r\n? ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/352684538","html_url":"https://github.com/elastic/elasticsearch/issues/27862#issuecomment-352684538","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27862","id":352684538,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MjY4NDUzOA==","user":{"login":"Chandan83","id":1045928,"node_id":"MDQ6VXNlcjEwNDU5Mjg=","avatar_url":"https://avatars2.githubusercontent.com/u/1045928?v=4","gravatar_id":"","url":"https://api.github.com/users/Chandan83","html_url":"https://github.com/Chandan83","followers_url":"https://api.github.com/users/Chandan83/followers","following_url":"https://api.github.com/users/Chandan83/following{/other_user}","gists_url":"https://api.github.com/users/Chandan83/gists{/gist_id}","starred_url":"https://api.github.com/users/Chandan83/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Chandan83/subscriptions","organizations_url":"https://api.github.com/users/Chandan83/orgs","repos_url":"https://api.github.com/users/Chandan83/repos","events_url":"https://api.github.com/users/Chandan83/events{/privacy}","received_events_url":"https://api.github.com/users/Chandan83/received_events","type":"User","site_admin":false},"created_at":"2017-12-19T09:17:11Z","updated_at":"2017-12-19T09:17:11Z","author_association":"CONTRIBUTOR","body":"Yes, the format will be exactly like that (except the typo with extra : and \" after span_gap). You are also correct that it should only work with span_near. Even Lucene has this option for SpanNearQuery only; in fact the SpanGapQuery class is private to SpanNearQuery. I will submit a change right after I am done making application changes required in my day job. I assume the changes are always expected over master branch.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/353201507","html_url":"https://github.com/elastic/elasticsearch/issues/27862#issuecomment-353201507","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27862","id":353201507,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzIwMTUwNw==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-12-20T22:29:17Z","updated_at":"2017-12-20T22:29:17Z","author_association":"MEMBER","body":"> I assume the changes are always expected over master branch.\r\n\r\nYes please.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/364955430","html_url":"https://github.com/elastic/elasticsearch/issues/27862#issuecomment-364955430","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27862","id":364955430,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NDk1NTQzMA==","user":{"login":"Chandan83","id":1045928,"node_id":"MDQ6VXNlcjEwNDU5Mjg=","avatar_url":"https://avatars2.githubusercontent.com/u/1045928?v=4","gravatar_id":"","url":"https://api.github.com/users/Chandan83","html_url":"https://github.com/Chandan83","followers_url":"https://api.github.com/users/Chandan83/followers","following_url":"https://api.github.com/users/Chandan83/following{/other_user}","gists_url":"https://api.github.com/users/Chandan83/gists{/gist_id}","starred_url":"https://api.github.com/users/Chandan83/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Chandan83/subscriptions","organizations_url":"https://api.github.com/users/Chandan83/orgs","repos_url":"https://api.github.com/users/Chandan83/repos","events_url":"https://api.github.com/users/Chandan83/events{/privacy}","received_events_url":"https://api.github.com/users/Chandan83/received_events","type":"User","site_admin":false},"created_at":"2018-02-12T15:24:04Z","updated_at":"2018-02-12T15:25:43Z","author_association":"CONTRIBUTOR","body":"@jimczi I could finally find get to contributing the span_near clause. The syntax, given below, is slightly different than previously proposed. I have created a pull request #28636 without writing new unit tests as I wanted some feedback on the approach.\r\n\r\n`{\"span_near\" : {\"field\" : 2}}`","performed_via_github_app":null}]