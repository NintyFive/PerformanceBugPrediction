{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/8017","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8017/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8017/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8017/events","html_url":"https://github.com/elastic/elasticsearch/issues/8017","id":45199799,"node_id":"MDU6SXNzdWU0NTE5OTc5OQ==","number":8017,"title":"Use Case for Aggregation Metrics Calculated based on Other Metrics","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"assignees":[{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2014-10-08T03:35:50Z","updated_at":"2014-10-16T13:42:26Z","closed_at":"2014-10-16T13:42:26Z","author_association":"NONE","active_lock_reason":null,"body":"Is I mentioned in #5608 it would be great to be able to define metrics as an expression against other metrics (ideally but not necessarily including other calculated metrics) on the same bucket level and if possible able to traverse to parent/child buckets. While this calculation could be done outside of ES, **sorting** of buckets (such as terms) on these calculated values can only be done as part of ES query\n\nHere is one example:\n\nFor health care providers I want to find top 10  providers with highest % of overcharge relative to allowed charges (another variation would be % of overcharge relative to average charge) given charge amount and allowed amount fields in my document.   \n\nI would like to be able to define aggregation `overchargePct`  as `(totalCharges - totalAllowes) * 100 / totalAllowes` and do descending sort on this calculated metric\n","closed_by":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"performed_via_github_app":null}