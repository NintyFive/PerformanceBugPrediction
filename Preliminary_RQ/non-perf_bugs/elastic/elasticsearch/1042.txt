{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/1042","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1042/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1042/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1042/events","html_url":"https://github.com/elastic/elasticsearch/issues/1042","id":1073963,"node_id":"MDU6SXNzdWUxMDczOTYz","number":1042,"title":"NPE with BooleanFilter(TermFilter(that matches nothing))","user":{"login":"ofavre","id":95129,"node_id":"MDQ6VXNlcjk1MTI5","avatar_url":"https://avatars3.githubusercontent.com/u/95129?v=4","gravatar_id":"","url":"https://api.github.com/users/ofavre","html_url":"https://github.com/ofavre","followers_url":"https://api.github.com/users/ofavre/followers","following_url":"https://api.github.com/users/ofavre/following{/other_user}","gists_url":"https://api.github.com/users/ofavre/gists{/gist_id}","starred_url":"https://api.github.com/users/ofavre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ofavre/subscriptions","organizations_url":"https://api.github.com/users/ofavre/orgs","repos_url":"https://api.github.com/users/ofavre/repos","events_url":"https://api.github.com/users/ofavre/events{/privacy}","received_events_url":"https://api.github.com/users/ofavre/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2011-06-17T14:51:27Z","updated_at":"2011-06-17T18:17:46Z","closed_at":"2011-06-17T18:17:46Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I have a written plugin that constructs a tree of BooleanFilters using TermFilters and have encountered a NPE while using an unexisting term at query time.\n\n**Here is the minimal plot:**\nTake TermFilterParser for an example. Using this inspiration, create a new filter parser following the following steps.\nCreate and register a FilterParser.\nIn parse() do:\n\n```\nBooleanFilter filter = new BooleanFilter();\nfilter.add(new FilterClause(new TermFilter(new Term(fieldName, value)), BooleanClause.Occur.MUST));\n```\n\nCompile, distribute the plugin and try it:\n\n```\n{\"query\":{\"filtered\":{\"query\":{\"match_all\":{}},\"filter\":{\"mynewfilter\":{\"thequeriesfield\":\"existing value\"}}}}}\n```\n\nIt works as excepted (ie like the corresponding simple \"term\" filter).\nThen try with an unexisting value (unknown from the index).\nYou should get the following error:\n\n```\n[2011-06-17 15:52:37,194][DEBUG][action.search.type       ] [Mimic] [geophy][0], node[YAVwPL5qSM6qaArHM6EqIw], [P], s[STARTED]: Failed to execute [org.elasticsearch.action.search.SearchRequest@74a60905]\norg.elasticsearch.search.query.QueryPhaseExecutionException: [mynewfilter][0]: query[ConstantScore(BooleanFilter( mynewfilter:z))],from[0],size[10]: Query Failed [Failed to execute main query]\n        at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:215)\n        at org.elasticsearch.search.SearchService.executeFetchPhase(SearchService.java:280)\n        at org.elasticsearch.search.action.SearchServiceTransportAction.sendExecuteFetch(SearchServiceTransportAction.java:224)\n        at org.elasticsearch.action.search.type.TransportSearchQueryAndFetchAction$AsyncAction.sendExecuteFirstPhase(TransportSearchQueryAndFetchAction.java:71)\n        at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.performFirstPhase(TransportSearchTypeAction.java:192)\n        at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.access$000(TransportSearchTypeAction.java:75)\n        at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction$1.run(TransportSearchTypeAction.java:151)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n        at java.lang.Thread.run(Thread.java:662)\nCaused by: java.lang.NullPointerException\n        at org.apache.lucene.search.BooleanFilter.getDISI(BooleanFilter.java:47)\n        at org.apache.lucene.search.BooleanFilter.getDocIdSet(BooleanFilter.java:62)\n        at org.apache.lucene.search.DeletionAwareConstantScoreQuery$DeletionConstantWeight.scorer(DeletionAwareConstantScoreQuery.java:53)\n        at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:517)\n        at org.elasticsearch.search.internal.ContextIndexSearcher.search(ContextIndexSearcher.java:177)\n        at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:384)\n        at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:291)\n        at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:279)\n        at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:211)\n        ... 9 more\n```\n\nThe error comes from BooleanFilter.java at line 47.\nLooking at Lucene 3.1.0 sources you find:\n\n```\n44      private DocIdSetIterator getDISI(ArrayList<Filter> filters, int index, IndexReader reader)\n45      throws IOException\n46      {\n47 =>     return filters.get(index).getDocIdSet(reader).iterator();\n48      }\n```\n\nThe NPE comes from filters.get(index).getDocIdSet(reader) returning null.\nIf you look at commit becf4baaa200c29903244a87fdd7c08c16ad4047 for file `modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/search/TermFilter.java` at line 49 (which is what is called by our line), you see that null is clearly returned.\n\nI think this optimization is either a mistake, or buggy.\nAt the end of the function, something like this might do the job:\n\n```\nif (result == null) return new OpenBitSet();\nreturn result;\n```\n","closed_by":{"login":"ofavre","id":95129,"node_id":"MDQ6VXNlcjk1MTI5","avatar_url":"https://avatars3.githubusercontent.com/u/95129?v=4","gravatar_id":"","url":"https://api.github.com/users/ofavre","html_url":"https://github.com/ofavre","followers_url":"https://api.github.com/users/ofavre/followers","following_url":"https://api.github.com/users/ofavre/following{/other_user}","gists_url":"https://api.github.com/users/ofavre/gists{/gist_id}","starred_url":"https://api.github.com/users/ofavre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ofavre/subscriptions","organizations_url":"https://api.github.com/users/ofavre/orgs","repos_url":"https://api.github.com/users/ofavre/repos","events_url":"https://api.github.com/users/ofavre/events{/privacy}","received_events_url":"https://api.github.com/users/ofavre/received_events","type":"User","site_admin":false},"performed_via_github_app":null}