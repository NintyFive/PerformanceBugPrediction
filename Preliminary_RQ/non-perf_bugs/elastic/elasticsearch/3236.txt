{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3236","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3236/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3236/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3236/events","html_url":"https://github.com/elastic/elasticsearch/issues/3236","id":15977435,"node_id":"MDU6SXNzdWUxNTk3NzQzNQ==","number":3236,"title":"Make caching of TermsLookup and normal Filter Caching Independent","user":{"login":"lmenezes","id":750074,"node_id":"MDQ6VXNlcjc1MDA3NA==","avatar_url":"https://avatars1.githubusercontent.com/u/750074?v=4","gravatar_id":"","url":"https://api.github.com/users/lmenezes","html_url":"https://github.com/lmenezes","followers_url":"https://api.github.com/users/lmenezes/followers","following_url":"https://api.github.com/users/lmenezes/following{/other_user}","gists_url":"https://api.github.com/users/lmenezes/gists{/gist_id}","starred_url":"https://api.github.com/users/lmenezes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lmenezes/subscriptions","organizations_url":"https://api.github.com/users/lmenezes/orgs","repos_url":"https://api.github.com/users/lmenezes/repos","events_url":"https://api.github.com/users/lmenezes/events{/privacy}","received_events_url":"https://api.github.com/users/lmenezes/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2013-06-25T13:20:53Z","updated_at":"2013-06-26T14:50:13Z","closed_at":"2013-06-26T14:50:13Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Following up on https://github.com/elasticsearch/elasticsearch/issues/3219,\nit would be nice controlling if the Terms Lookup should be cached or not, and also making the caching key of the resulting bitset based on the content of the lookup rather than its definition(or on a given key). \nCurrently you can only control if the resulting terms filter is cached or not. \n\nI imagine the situation where this could be useful:\n\nHaving a constantly changing index which is used as the source for a lookup. In this case, caching the lookup will lead to inconsistent results when the index changes(of course you can invalidate the cache entry, but that is just extra work for a possibly common use case).\n\nSo, here I would like to set something like _cache_lookup = false. This way, lets say that the lookup is not cached... But then, since the bit set cache key is based on the definition of the lookup(idx+type+path+id), it wont even get to execute the lookup... And of course, if the lookup result changed, you will still get an inconsistent result. \n\nYou could set _cache to false, and then this should work, but then you are always repeating the transformation from the result of the lookup to the resulting bit set, which is the most expensive part(on my tests, for terms lookup of 35K-60K terms, the lookup took on average less than 40ms. the actual execution of the filter, was around 700ms-1s).\n\nFinally, if the bitset cache key was based on the result of the lookup, you can not cache the lookup and still benefit of the global filter cache, even though you would have to execute the lookup(but, i guess the time spent on this phase is irrelevant comparing the benefit of having the global filter).\n\nOn the case where you want to cache the lookup, you can still use the lookup definition as the cache key for the global filter.\n\nSounds reasonable? And sorry if its not that clear the explanation, still the best I could get.\n","closed_by":{"login":"lmenezes","id":750074,"node_id":"MDQ6VXNlcjc1MDA3NA==","avatar_url":"https://avatars1.githubusercontent.com/u/750074?v=4","gravatar_id":"","url":"https://api.github.com/users/lmenezes","html_url":"https://github.com/lmenezes","followers_url":"https://api.github.com/users/lmenezes/followers","following_url":"https://api.github.com/users/lmenezes/following{/other_user}","gists_url":"https://api.github.com/users/lmenezes/gists{/gist_id}","starred_url":"https://api.github.com/users/lmenezes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lmenezes/subscriptions","organizations_url":"https://api.github.com/users/lmenezes/orgs","repos_url":"https://api.github.com/users/lmenezes/repos","events_url":"https://api.github.com/users/lmenezes/events{/privacy}","received_events_url":"https://api.github.com/users/lmenezes/received_events","type":"User","site_admin":false},"performed_via_github_app":null}