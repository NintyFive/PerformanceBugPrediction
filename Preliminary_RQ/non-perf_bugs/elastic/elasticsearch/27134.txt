{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/27134","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27134/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27134/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27134/events","html_url":"https://github.com/elastic/elasticsearch/issues/27134","id":268949538,"node_id":"MDU6SXNzdWUyNjg5NDk1Mzg=","number":27134,"title":"span_not's documentation is misleading and \"post\" may not work as expected","user":{"login":"gcampbell-epiq","id":7549112,"node_id":"MDQ6VXNlcjc1NDkxMTI=","avatar_url":"https://avatars2.githubusercontent.com/u/7549112?v=4","gravatar_id":"","url":"https://api.github.com/users/gcampbell-epiq","html_url":"https://github.com/gcampbell-epiq","followers_url":"https://api.github.com/users/gcampbell-epiq/followers","following_url":"https://api.github.com/users/gcampbell-epiq/following{/other_user}","gists_url":"https://api.github.com/users/gcampbell-epiq/gists{/gist_id}","starred_url":"https://api.github.com/users/gcampbell-epiq/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gcampbell-epiq/subscriptions","organizations_url":"https://api.github.com/users/gcampbell-epiq/orgs","repos_url":"https://api.github.com/users/gcampbell-epiq/repos","events_url":"https://api.github.com/users/gcampbell-epiq/events{/privacy}","received_events_url":"https://api.github.com/users/gcampbell-epiq/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23715,"node_id":"MDU6TGFiZWwyMzcxNQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Edocs","name":">docs","color":"db755e","default":false,"description":"General docs changes"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-10-27T00:09:55Z","updated_at":"2018-02-14T13:28:29Z","closed_at":"2017-10-30T10:29:40Z","author_association":"NONE","active_lock_reason":null,"body":"<!-- Bug report -->\r\n\r\n**Elasticsearch version** documentation 5.6, runtime 5.3.2\r\n**Plugins installed**: none\r\n**JVM version** 1.8.0_71\r\n**OS version** Windows Server 2008\r\n\r\n## span_not Documentation Issue\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nDocumentation on all span queries is very sparse, particularly for the span_not. Deviating _slightly_ from the example produces unexpected results. \r\n\r\n**Steps to reproduce**:\r\n\r\n 1. Create default index\r\n`PUT span-not-test`\r\n 2. Insert docs containing \"la hoya\" and \"la hoya hoya\"\r\n```\r\nPUT span-not-test/doc/1\r\n{\r\n    \"field1\": \"la hoya\"\r\n}\r\nPUT span-not-test/doc/2\r\n{\r\n    \"field1\": \"hoya la hoya\"\r\n}\r\nPUT span-not-test/doc/3\r\n{\r\n    \"field1\": \"la hoya hoya\"\r\n}\r\n```\r\n 3. Run example search modified slightly to increase slop and flip in_order to false\r\n```\r\nPOST span-not-test/_search\r\n{\r\n    \"query\": {\r\n        \"span_not\" : {\r\n            \"include\" : {\r\n                \"span_term\" : { \"field1\" : \"hoya\" } \r\n            },\r\n            \"exclude\" : {\r\n                \"span_near\" : {\r\n                    \"clauses\" : [\r\n                        { \"span_term\" : { \"field1\" : \"la\" } },\r\n                        { \"span_term\" : { \"field1\" : \"hoya\" } }\r\n                    ],\r\n                    \"slop\" : 50,\r\n                    \"in_order\" : false\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Expected results:**\r\nNo docs should be returned, because in the all test docs contain \"la\" and \"hoya\" within 100 tokens of eachother. \r\n\r\n**Actual results:**\r\nDoc 3 is returned.\r\n\r\nI assume the issue is that the \"included\" runs of tokens are not checked for \"exclusion\" if they overlap with another run of included tokens. \r\n\r\nWhatever the case, I understand that using dist/pre/post would yield correct results, but the documentation does not help me understand why this is the case. \r\n\r\n## SpanNotQuery post Issue\r\n\r\nI have some single-value fields, the length of which is unlimited. In order to avoid secretly imposing a length limit and always getting valid results from a span_not query, I attempted to use int.max (2^31) as the dist in a span_not query. The issue is that SpanNotQuery took that dist value and added to it the end position of an \"included\" token. That yielding ~-2B. That negative position was then compared against an \"excluded\" term's position to determine if the excluded term's position was less, i.e. within dist of the included term. So, even though my dist was high, my excluded term was not detected in a position within range of my included term.\r\n\r\nYou can see the relevant code here in the Lucene repo.\r\n~\\core\\src\\java\\org\\apache\\lucene\\search\\spans\\SpanNotQuery.java\r\nline 181\r\n","closed_by":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}