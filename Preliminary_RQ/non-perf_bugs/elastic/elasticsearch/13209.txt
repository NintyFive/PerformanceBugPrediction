{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/13209","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13209/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13209/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13209/events","html_url":"https://github.com/elastic/elasticsearch/issues/13209","id":104011016,"node_id":"MDU6SXNzdWUxMDQwMTEwMTY=","number":13209,"title":"Improvement of package/artifact deployment","user":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"labels":[{"id":106454670,"node_id":"MDU6TGFiZWwxMDY0NTQ2NzA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Delivery/Build","name":":Delivery/Build","color":"0e8a16","default":false,"description":"Build or test infrastructure"},{"id":114977275,"node_id":"MDU6TGFiZWwxMTQ5NzcyNzU=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Delivery/Packaging","name":":Delivery/Packaging","color":"0e8a16","default":false,"description":"RPM and deb packaging, tar and zip archives, shell and batch scripts"},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null},{"id":2495976472,"node_id":"MDU6TGFiZWwyNDk1OTc2NDcy","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Delivery","name":"Team:Delivery","color":"fef2c0","default":false,"description":"Meta label for Delivery team"},{"id":92913658,"node_id":"MDU6TGFiZWw5MjkxMzY1OA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/blocker","name":"blocker","color":"e11d21","default":false,"description":null},{"id":260270551,"node_id":"MDU6TGFiZWwyNjAyNzA1NTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v2.0.0-beta2","name":"v2.0.0-beta2","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2015-08-31T08:38:43Z","updated_at":"2020-11-11T21:44:15Z","closed_at":"2015-09-14T13:04:11Z","author_association":"MEMBER","active_lock_reason":null,"body":"We need to work on improving our artifact deployments. Collected several thoughts about this\n- Should the RPM be signed or not as part of our deployment. If the RPM is not signed, older RPM based distributions will not have a problem to install. As we do sign our artifacts now as part of the mvn deployment (which adds an .asc file), this should not be a problem in terms of integrity. @electrical might chime in here, if we can drop this approach. If we need two artifacts, I am personally fine with having the unsigned one in the sonatype repo (which is also the one linked on elastic.co) and sign the RPM before putting it in the rpm repository (using the tools mentioned in the next bullet point)\n- Smoothen out our RPM/DEB deployment process. There are tools like [deb-s3](https://github.com/krobertson/deb-s3) and [rpm-s3](https://github.com/crohr/rpm-s3), which dont require us to create all the additional meta files manually, but just push the package using that tool.\n- Verify staging repository (the sonatype one), that it includes all the files... maybe this can be done by comparing it to the local mvn repo via a small script, that just checks via HTTP HEAD if the file exists (no need to check checksums, we should assume so things work)\n- Verify signedness/unsignedness of artifacts on sonatype and the package repositories\n","closed_by":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"performed_via_github_app":null}