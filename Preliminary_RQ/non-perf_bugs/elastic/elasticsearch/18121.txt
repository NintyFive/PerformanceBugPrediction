{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/18121","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18121/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18121/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18121/events","html_url":"https://github.com/elastic/elasticsearch/issues/18121","id":152858217,"node_id":"MDU6SXNzdWUxNTI4NTgyMTc=","number":18121,"title":"Test Failure: org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"labels":[{"id":143077482,"node_id":"MDU6TGFiZWwxNDMwNzc0ODI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Snapshot/Restore","name":":Distributed/Snapshot/Restore","color":"0e8a16","default":false,"description":"Anything directly related to the `_snapshot/*` APIs"},{"id":60445228,"node_id":"MDU6TGFiZWw2MDQ0NTIyOA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest","name":">test","color":"5319e7","default":false,"description":"Issues or PRs that are addressing/adding tests"},{"id":364411189,"node_id":"MDU6TGFiZWwzNjQ0MTExODk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v5.0.0-alpha3","name":"v5.0.0-alpha3","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"assignees":[{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2016-05-03T19:43:57Z","updated_at":"2016-05-20T14:54:22Z","closed_at":"2016-05-20T14:54:22Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Reproduce:\ngradle :core:integTest -Dtests.seed=A46FAA84C4686F93 -Dtests.class=org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT -Dtests.method=\"testReadonlyRepository\" -Des.logger.level=WARN -Dtests.security.manager=true -Dtests.locale=en-MT -Dtests.timezone=Kwajalein\n\nBuild Failure:\n(https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+master+multijob-os-compatibility/os=sles/349/console)\n\nStack Trace:\nSuite: org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT\n  1> [2016-05-03 18:01:40,772][WARN ][org.elasticsearch.snapshots] [node_s0] failed to create snapshot [test-repo:test-snap]\n  1> SnapshotCreationException[[test-repo:test-snap] failed to create snapshot]; nested: IOException[Random IOException];\n  1>    at org.elasticsearch.repositories.blobstore.BlobStoreRepository.initializeSnapshot(BlobStoreRepository.java:284)\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository.initializeSnapshot(MockRepository.java:131)\n  1>    at org.elasticsearch.snapshots.SnapshotsService.beginSnapshot(SnapshotsService.java:310)\n  1>    at org.elasticsearch.snapshots.SnapshotsService.access$500(SnapshotsService.java:96)\n  1>    at org.elasticsearch.snapshots.SnapshotsService$1$1.run(SnapshotsService.java:232)\n  1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n  1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n  1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n  1>    at java.lang.Thread.run(Thread.java:745)\n  1> Caused by: java.io.IOException: Random IOException\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:275)\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:339)\n  1>    at org.elasticsearch.repositories.blobstore.ChecksumBlobStoreFormat.writeBlob(ChecksumBlobStoreFormat.java:182)\n  1>    at org.elasticsearch.repositories.blobstore.ChecksumBlobStoreFormat.write(ChecksumBlobStoreFormat.java:154)\n  1>    at org.elasticsearch.repositories.blobstore.BlobStoreRepository.initializeSnapshot(BlobStoreRepository.java:281)\n  1>    ... 8 more\n  1> [2016-05-03 18:01:42,679][WARN ][org.elasticsearch.snapshots] [node_s1] [[test-idx][7]] [test-repo:test-snap] failed to create snapshot\n  1> [test-idx/zAAHYkFOT92e-uEZhSVlZw][[test-idx][7]] IndexShardSnapshotFailedException[Failed to perform snapshot (index files)]; nested: IOException[Random IOException];\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:600)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.snapshot(BlobStoreIndexShardRepository.java:183)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService.snapshot(SnapshotShardsService.java:343)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService.access$200(SnapshotShardsService.java:79)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService$1.doRun(SnapshotShardsService.java:299)\n  1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:452)\n  1>    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n  1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n  1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n  1>    at java.lang.Thread.run(Thread.java:745)\n  1> Caused by: java.io.IOException: Random IOException\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:345)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshotFile(BlobStoreIndexShardRepository.java:652)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:598)\n  1>    ... 9 more\n  1> [2016-05-03 18:01:42,688][WARN ][org.elasticsearch.snapshots] [node_s0] [[test-idx][0]] [test-repo:test-snap] failed to create snapshot\n  1> [test-idx/zAAHYkFOT92e-uEZhSVlZw][[test-idx][0]] IndexShardSnapshotFailedException[Failed to perform snapshot (index files)]; nested: IOException[Random IOException];\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:600)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.snapshot(BlobStoreIndexShardRepository.java:183)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService.snapshot(SnapshotShardsService.java:343)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService.access$200(SnapshotShardsService.java:79)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService$1.doRun(SnapshotShardsService.java:299)\n  1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:452)\n  1>    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n  1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n  1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n  1>    at java.lang.Thread.run(Thread.java:745)\n  1> Caused by: java.io.IOException: Random IOException\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:345)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshotFile(BlobStoreIndexShardRepository.java:652)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:598)\n  1>    ... 9 more\n  1> [2016-05-03 18:01:42,692][WARN ][org.elasticsearch.snapshots] [node_s1] [[test-idx][1]] [test-repo:test-snap] failed to create snapshot\n  1> [test-idx/zAAHYkFOT92e-uEZhSVlZw][[test-idx][1]] IndexShardSnapshotFailedException[Failed to perform snapshot (index files)]; nested: IOException[Random IOException];\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:600)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.snapshot(BlobStoreIndexShardRepository.java:183)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService.snapshot(SnapshotShardsService.java:343)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService.access$200(SnapshotShardsService.java:79)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService$1.doRun(SnapshotShardsService.java:299)\n  1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:452)\n  1>    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n  1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n  1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n  1>    at java.lang.Thread.run(Thread.java:745)\n  1> Caused by: java.io.IOException: Random IOException\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:345)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshotFile(BlobStoreIndexShardRepository.java:652)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:598)\n  1>    ... 9 more\n  1> [2016-05-03 18:01:42,699][WARN ][org.elasticsearch.snapshots] [node_s1] [[test-idx][5]] [test-repo:test-snap] failed to create snapshot\n  1> [test-idx/zAAHYkFOT92e-uEZhSVlZw][[test-idx][5]] IndexShardSnapshotFailedException[Failed to perform snapshot (index files)]; nested: IOException[Random IOException];\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:600)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.snapshot(BlobStoreIndexShardRepository.java:183)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService.snapshot(SnapshotShardsService.java:343)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService.access$200(SnapshotShardsService.java:79)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService$1.doRun(SnapshotShardsService.java:299)\n  1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:452)\n  1>    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n  1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n  1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n  1>    at java.lang.Thread.run(Thread.java:745)\n  1> Caused by: java.io.IOException: Random IOException\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:345)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshotFile(BlobStoreIndexShardRepository.java:652)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:598)\n  1>    ... 9 more\n  1> [2016-05-03 18:01:42,704][WARN ][org.elasticsearch.snapshots] [node_s1] [[test-idx][3]] [test-repo:test-snap] failed to create snapshot\n  1> [test-idx/zAAHYkFOT92e-uEZhSVlZw][[test-idx][3]] IndexShardSnapshotFailedException[Failed to perform snapshot (index files)]; nested: IOException[Random IOException];\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:600)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.snapshot(BlobStoreIndexShardRepository.java:183)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService.snapshot(SnapshotShardsService.java:343)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService.access$200(SnapshotShardsService.java:79)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService$1.doRun(SnapshotShardsService.java:299)\n  1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:452)\n  1>    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n  1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n  1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n  1>    at java.lang.Thread.run(Thread.java:745)\n  1> Caused by: java.io.IOException: Random IOException\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:345)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshotFile(BlobStoreIndexShardRepository.java:652)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:598)\n  1>    ... 9 more\n  1> [2016-05-03 18:01:42,729][WARN ][org.elasticsearch.snapshots] [node_s0] [[test-idx][6]] [test-repo:test-snap] failed to create snapshot\n  1> [test-idx/zAAHYkFOT92e-uEZhSVlZw][[test-idx][6]] IndexShardSnapshotFailedException[Failed to perform snapshot (index files)]; nested: IOException[Random IOException];\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:600)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.snapshot(BlobStoreIndexShardRepository.java:183)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService.snapshot(SnapshotShardsService.java:343)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService.access$200(SnapshotShardsService.java:79)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService$1.doRun(SnapshotShardsService.java:299)\n  2> REPRODUCE WITH: gradle :core:integTest -Dtests.seed=A46FAA84C4686F93 -Dtests.class=org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT -Dtests.method=\"testReadonlyRepository\" -Des.logger.level=WARN -Dtests.security.manager=true -Dtests.locale=en-MT -Dtests.timezone=Kwajalein\n  1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:452)\n  1>    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n  1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n  1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n  1>    at java.lang.Thread.run(Thread.java:745)\n  1> Caused by: java.io.IOException: Random IOException\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:345)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshotFile(BlobStoreIndexShardRepository.java:652)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:598)\n  1>    ... 9 more\n  1> [2016-05-03 18:01:42,735][WARN ][org.elasticsearch.snapshots] [node_s0] [[test-idx][4]] [test-repo:test-snap] failed to create snapshot\n  1> [test-idx/zAAHYkFOT92e-uEZhSVlZw][[test-idx][4]] IndexShardSnapshotFailedException[Failed to perform snapshot (index files)]; nested: IOException[Random IOException];\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:600)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.snapshot(BlobStoreIndexShardRepository.java:183)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService.snapshot(SnapshotShardsService.java:343)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService.access$200(SnapshotShardsService.java:79)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService$1.doRun(SnapshotShardsService.java:299)\n  1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:452)\n  1>    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n  1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n  1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n  1>    at java.lang.Thread.run(Thread.java:745)\n  1> Caused by: java.io.IOException: Random IOException\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:345)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshotFile(BlobStoreIndexShardRepository.java:652)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:598)\n  1>    ... 9 more\n  1> [2016-05-03 18:01:42,739][WARN ][org.elasticsearch.snapshots] [node_s0] [[test-idx][2]] [test-repo:test-snap] failed to create snapshot\n  1> [test-idx/zAAHYkFOT92e-uEZhSVlZw][[test-idx][2]] IndexShardSnapshotFailedException[Failed to perform snapshot (index files)]; nested: IOException[Random IOException];\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:600)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.snapshot(BlobStoreIndexShardRepository.java:183)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService.snapshot(SnapshotShardsService.java:343)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService.access$200(SnapshotShardsService.java:79)\n  1>    at org.elasticsearch.snapshots.SnapshotShardsService$1.doRun(SnapshotShardsService.java:299)\n  1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:452)\n  1>    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n  1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n  1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n  1>    at java.lang.Thread.run(Thread.java:745)\n  1> Caused by: java.io.IOException: Random IOException\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n  1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:345)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshotFile(BlobStoreIndexShardRepository.java:652)\n  1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:598)\n  1>    ... 9 more\n  1> [2016-05-03 18:01:46,474][WARN ][org.elasticsearch.snapshots] [node_s0] failed to get snapshot [test-repo:test-snap-2]\n  1> java.lang.IllegalStateException: class org.apache.lucene.store.BufferedChecksumIndexInput cannot seek backwards (pos=-7 getFilePointer()=0)\n  1>    at org.apache.lucene.store.ChecksumIndexInput.seek(ChecksumIndexInput.java:50)\n  1>    at org.apache.lucene.codecs.CodecUtil.checksumEntireFile(CodecUtil.java:468)\n  1>    at org.elasticsearch.repositories.blobstore.ChecksumBlobStoreFormat.readBlob(ChecksumBlobStoreFormat.java:106)\n  1>    at org.elasticsearch.repositories.blobstore.BlobStoreFormat.read(BlobStoreFormat.java:86)\n  1>    at org.elasticsearch.repositories.blobstore.BlobStoreRepository.readSnapshot(BlobStoreRepository.java:438)\n  1>    at org.elasticsearch.snapshots.SnapshotsService.snapshots(SnapshotsService.java:154)\n  1>    at org.elasticsearch.action.admin.cluster.snapshots.get.TransportGetSnapshotsAction.masterOperation(TransportGetSnapshotsAction.java:80)\n  1>    at org.elasticsearch.action.admin.cluster.snapshots.get.TransportGetSnapshotsAction.masterOperation(TransportGetSnapshotsAction.java:49)\n  1>    at org.elasticsearch.action.support.master.TransportMasterNodeAction.masterOperation(TransportMasterNodeAction.java:77)\n  1>    at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction$3.doRun(TransportMasterNodeAction.java:161)\n  1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:452)\n  1>    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n  1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n  1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n  1>    at java.lang.Thread.run(Thread.java:745)\n  1> [2016-05-03 18:01:47,339][WARN ][org.elasticsearch.repositories] [node_s0] failed to create repository [test-repo]\n  1> java.lang.IllegalStateException: trying to modify or unregister repository that is currently used \n  1>    at org.elasticsearch.repositories.RepositoriesService.ensureRepositoryNotInUse(RepositoriesService.java:421)\n  1>    at org.elasticsearch.repositories.RepositoriesService.access$000(RepositoriesService.java:60)\n  1>    at org.elasticsearch.repositories.RepositoriesService$1.execute(RepositoriesService.java:113)\n  1>    at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)\n  1>    at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:513)\n  1>    at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:814)\n  1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n  1>    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237)\n  1>    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200)\n  1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n  1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n  1>    at java.lang.Thread.run(Thread.java:745)\n  1> [2016-05-03 18:01:51,728][WARN ][org.elasticsearch.snapshots] [node_s0] [test-repo:test-snap] failed to restore snapshot\n  1> SnapshotRestoreException[[test-repo:test-snap] cannot modify setting [index.number_of_shards] on restore]\n  1>    at org.elasticsearch.snapshots.RestoreService$1.updateIndexSettings(RestoreService.java:420)\n  1>    at org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:242)\n  1>    at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)\n  1>    at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:513)\n  1>    at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:814)\n  1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n  1>    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237)\n  1>    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200)\n  1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n  1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n  1>    at java.lang.Thread.run(Thread.java:745)\n  1> [2016-05-03 18:01:51,732][WARN ][org.elasticsearch.snapshots] [node_s0] [test-repo:test-snap] failed to restore snapshot\n  1> java.lang.IllegalArgumentException: must specify non-negative number of shards for index [test-idx]\n  1>    at org.elasticsearch.cluster.metadata.IndexMetaData$Builder.build(IndexMetaData.java:854)\n  1>    at org.elasticsearch.snapshots.RestoreService$1.updateIndexSettings(RestoreService.java:426)\n  1>    at org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:242)\n  1>    at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)\n  1>    at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:513)\n  1>    at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:814)\n  1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n  1>    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237)\n  1>    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200)\n  1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n  1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n  1>    at java.lang.Thread.run(Thread.java:745)\n  1> [2016-05-03 18:02:37,197][WARN ][org.elasticsearch.repositories.fs] [node_s0] cannot read snapshot file [test-repo:test-snap-1]\n  1> java.lang.IllegalStateException: class org.apache.lucene.store.BufferedChecksumIndexInput cannot seek backwards (pos=-14 getFilePointer()=0)\n  1>    at org.apache.lucene.store.ChecksumIndexInput.seek(ChecksumIndexInput.java:50)\n  1>    at org.apache.lucene.codecs.CodecUtil.checksumEntireFile(CodecUtil.java:468)\n  1>    at org.elasticsearch.repositories.blobstore.ChecksumBlobStoreFormat.readBlob(ChecksumBlobStoreFormat.java:106)\n  1>    at org.elasticsearch.repositories.blobstore.BlobStoreFormat.read(BlobStoreFormat.java:86)\n  1>    at org.elasticsearch.repositories.blobstore.BlobStoreRepository.readSnapshot(BlobStoreRepository.java:438)\n  1>    at org.elasticsearch.repositories.blobstore.BlobStoreRepository.deleteSnapshot(BlobStoreRepository.java:299)\n  1>    at org.elasticsearch.snapshots.SnapshotsService$8.run(SnapshotsService.java:1010)\n  1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n  1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n  1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n  1>    at java.lang.Thread.run(Thread.java:745)\n  1> [2016-05-03 18:02:40,923][WARN ][org.elasticsearch.snapshots] [node_s0] failed to create snapshot [readonly-repo:test-snap-2]\n  1> RepositoryException[[readonly-repo] cannot create snapshot in a readonly repository]\n  1>    at org.elasticsearch.repositories.blobstore.BlobStoreRepository.initializeSnapshot(BlobStoreRepository.java:268)\n  1>    at org.elasticsearch.snapshots.SnapshotsService.beginSnapshot(SnapshotsService.java:310)\n  1>    at org.elasticsearch.snapshots.SnapshotsService.access$500(SnapshotsService.java:96)\n  1>    at org.elasticsearch.snapshots.SnapshotsService$1$1.run(SnapshotsService.java:232)\n  1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n  1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n  1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n  1>    at java.lang.Thread.run(Thread.java:745)\nERROR   0.90s J2 | SharedClusterSnapshotRestoreIT.testReadonlyRepository <<< FAILURES!\n\n> Throwable #1: java.lang.IllegalArgumentException: Cannot delete indices that are being snapshotted: [[test-idx/XCtt1HdASBWhR200DDsvWg]]. Try again after snapshot finishes or cancel the currently running snapshot.\n>    at **randomizedtesting.SeedInfo.seed([A46FAA84C4686F93:F99ECF613C58E47B]:0)\n>    at org.elasticsearch.snapshots.SnapshotsService.checkIndexDeletion(SnapshotsService.java:1072)\n>    at org.elasticsearch.cluster.metadata.MetaDataDeleteIndexService$1.execute(MetaDataDeleteIndexService.java:90)\n>    at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)\n>    at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:513)\n>    at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:814)\n>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237)\n>    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200)\n>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>    at java.lang.Thread.run(Thread.java:745)\n>   1> [2016-05-03 18:02:41,531][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][0]] marking and sending shard failed due to [failed recovery]\n>   1> [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:98)\n>   1>    at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1115)\n>   1>    at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$3(IndicesClusterStateService.java:673)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$1(StoreRecovery.java:100)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:123)\n>   1>    ... 7 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:207)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:255)\n>   1>    ... 9 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:866)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:205)\n>   1>    ... 10 more\n>   1> Caused by: java.io.IOException: Random IOException\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:303)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:768)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:133)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:107)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:923)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:863)\n>   1>    ... 11 more\n>   1> [2016-05-03 18:02:41,533][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for target shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[0actTwozTcOFyQcVEeZUHg], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=_g39LpVlTgWx__Z-6AjY0w], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-05-03T18:02:41.462Z], details[restore_source[test-repo/test-snap]]]], source shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[0actTwozTcOFyQcVEeZUHg], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=_g39LpVlTgWx__Z-6AjY0w], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-05-03T18:02:41.462Z], details[restore_source[test-repo/test-snap]]]], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]\n>   1> [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:98)\n>   1>    at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1115)\n>   1>    at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$3(IndicesClusterStateService.java:673)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$1(StoreRecovery.java:100)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:123)\n>   1>    ... 7 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:207)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:255)\n>   1>    ... 9 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:866)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:205)\n>   1>    ... 10 more\n>   1> Caused by: java.io.IOException: Random IOException\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:303)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:768)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:133)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:107)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:923)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:863)\n>   1>    ... 11 more\n>   1> [2016-05-03 18:02:41,777][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][4]] marking and sending shard failed due to [failed recovery]\n>   1> [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:98)\n>   1>    at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1115)\n>   1>    at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$3(IndicesClusterStateService.java:673)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$1(StoreRecovery.java:100)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:123)\n>   1>    ... 7 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:207)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:255)\n>   1>    ... 9 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:866)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:205)\n>   1>    ... 10 more\n>   1> Caused by: java.io.IOException: Random IOException\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:303)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:768)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:133)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:107)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:923)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:863)\n>   1>    ... 11 more\n>   1> [2016-05-03 18:02:41,778][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for target shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][4], node[0actTwozTcOFyQcVEeZUHg], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Nz99tjKpQs6ewMbg-bfIiw], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-05-03T18:02:41.462Z], details[restore_source[test-repo/test-snap]]]], source shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][4], node[0actTwozTcOFyQcVEeZUHg], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Nz99tjKpQs6ewMbg-bfIiw], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-05-03T18:02:41.462Z], details[restore_source[test-repo/test-snap]]]], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]\n>   1> [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:98)\n>   1>    at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1115)\n>   1>    at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$3(IndicesClusterStateService.java:673)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$1(StoreRecovery.java:100)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:123)\n>   1>    ... 7 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:207)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:255)\n>   1>    ... 9 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:866)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:205)\n>   1>    ... 10 more\n>   1> Caused by: java.io.IOException: Random IOException\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:303)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:768)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:133)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:107)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:923)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:863)\n>   1>    ... 11 more\n>   1> [2016-05-03 18:02:41,780][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for target shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][4], node[0actTwozTcOFyQcVEeZUHg], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Nz99tjKpQs6ewMbg-bfIiw], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-05-03T18:02:41.462Z], details[restore_source[test-repo/test-snap]]]], source shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][4], node[0actTwozTcOFyQcVEeZUHg], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Nz99tjKpQs6ewMbg-bfIiw], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-05-03T18:02:41.462Z], details[restore_source[test-repo/test-snap]]]], message [master {node_s0}{0actTwozTcOFyQcVEeZUHg}{local}{local[54]} marked shard as initializing, but shard is marked as failed, resend shard failure]\n>   1> [2016-05-03 18:02:41,781][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for target shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[0actTwozTcOFyQcVEeZUHg], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=_g39LpVlTgWx__Z-6AjY0w], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-05-03T18:02:41.462Z], details[restore_source[test-repo/test-snap]]]], source shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[0actTwozTcOFyQcVEeZUHg], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=_g39LpVlTgWx__Z-6AjY0w], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-05-03T18:02:41.462Z], details[restore_source[test-repo/test-snap]]]], message [master {node_s0}{0actTwozTcOFyQcVEeZUHg}{local}{local[54]} marked shard as initializing, but shard is marked as failed, resend shard failure]\n>   1> [2016-05-03 18:02:41,787][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for target shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][4], node[0actTwozTcOFyQcVEeZUHg], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Nz99tjKpQs6ewMbg-bfIiw], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-05-03T18:02:41.462Z], details[restore_source[test-repo/test-snap]]]], source shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][4], node[0actTwozTcOFyQcVEeZUHg], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Nz99tjKpQs6ewMbg-bfIiw], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-05-03T18:02:41.462Z], details[restore_source[test-repo/test-snap]]]], message [master {node_s0}{0actTwozTcOFyQcVEeZUHg}{local}{local[54]} marked shard as initializing, but shard is marked as failed, resend shard failure]\n>   1> [2016-05-03 18:02:41,787][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for target shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[0actTwozTcOFyQcVEeZUHg], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=_g39LpVlTgWx__Z-6AjY0w], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-05-03T18:02:41.462Z], details[restore_source[test-repo/test-snap]]]], source shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[0actTwozTcOFyQcVEeZUHg], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=_g39LpVlTgWx__Z-6AjY0w], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-05-03T18:02:41.462Z], details[restore_source[test-repo/test-snap]]]], message [master {node_s0}{0actTwozTcOFyQcVEeZUHg}{local}{local[54]} marked shard as initializing, but shard is marked as failed, resend shard failure]\n>   1> [2016-05-03 18:02:41,822][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][0]] marking and sending shard failed due to [failed recovery]\n>   1> [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:98)\n>   1>    at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1115)\n>   1>    at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$3(IndicesClusterStateService.java:673)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$1(StoreRecovery.java:100)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:123)\n>   1>    ... 7 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:207)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:255)\n>   1>    ... 9 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:866)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:205)\n>   1>    ... 10 more\n>   1> Caused by: java.io.IOException: Random IOException\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:303)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:768)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:133)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:107)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:923)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:863)\n>   1>    ... 11 more\n>   1> [2016-05-03 18:02:41,857][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][4]] marking and sending shard failed due to [failed recovery]\n>   1> [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:98)\n>   1>    at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1115)\n>   1>    at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$3(IndicesClusterStateService.java:673)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$1(StoreRecovery.java:100)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:123)\n>   1>    ... 7 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:207)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:255)\n>   1>    ... 9 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:866)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:205)\n>   1>    ... 10 more\n>   1> Caused by: java.io.IOException: Random IOException\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:303)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:768)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:133)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:107)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:923)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:863)\n>   1>    ... 11 more\n>   1> [2016-05-03 18:02:41,862][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for target shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[SwMin9aMQZi6_RkwE9MWZw], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=y9U_fNTiR-6V3fUkbxH78Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.789Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], source shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[SwMin9aMQZi6_RkwE9MWZw], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=y9U_fNTiR-6V3fUkbxH78Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.789Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]\n>   1> [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:98)\n>   1>    at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1115)\n>   1>    at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$3(IndicesClusterStateService.java:673)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$1(StoreRecovery.java:100)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:123)\n>   1>    ... 7 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:207)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:255)\n>   1>    ... 9 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:866)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:205)\n>   1>    ... 10 more\n>   1> Caused by: java.io.IOException: Random IOException\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:303)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:768)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:133)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:107)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:923)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:863)\n>   1>    ... 11 more\n>   1> [2016-05-03 18:02:41,875][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for target shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][4], node[SwMin9aMQZi6_RkwE9MWZw], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=h5bJOlm7QmKILC4NEmp1gQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.789Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], source shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][4], node[SwMin9aMQZi6_RkwE9MWZw], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=h5bJOlm7QmKILC4NEmp1gQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.789Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], message [master {node_s0}{0actTwozTcOFyQcVEeZUHg}{local}{local[54]} marked shard as initializing, but shard is marked as failed, resend shard failure]\n>   1> [2016-05-03 18:02:41,878][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for target shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][4], node[SwMin9aMQZi6_RkwE9MWZw], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=h5bJOlm7QmKILC4NEmp1gQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.789Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], source shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][4], node[SwMin9aMQZi6_RkwE9MWZw], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=h5bJOlm7QmKILC4NEmp1gQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.789Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]\n>   1> [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:98)\n>   1>    at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1115)\n>   1>    at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$3(IndicesClusterStateService.java:673)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$1(StoreRecovery.java:100)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:123)\n>   1>    ... 7 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:207)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:255)\n>   1>    ... 9 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:866)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:205)\n>   1>    ... 10 more\n>   1> Caused by: java.io.IOException: Random IOException\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:303)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:768)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:133)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:107)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:923)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:863)\n>   1>    ... 11 more\n>   1> [2016-05-03 18:02:41,882][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for target shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[SwMin9aMQZi6_RkwE9MWZw], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=y9U_fNTiR-6V3fUkbxH78Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.789Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], source shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[SwMin9aMQZi6_RkwE9MWZw], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=y9U_fNTiR-6V3fUkbxH78Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.789Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], message [master {node_s0}{0actTwozTcOFyQcVEeZUHg}{local}{local[54]} marked shard as initializing, but shard is marked as failed, resend shard failure]\n>   1> [2016-05-03 18:02:41,903][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][0]] marking and sending shard failed due to [failed recovery]\n>   1> [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:98)\n>   1>    at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1115)\n>   1>    at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$3(IndicesClusterStateService.java:673)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$1(StoreRecovery.java:100)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:123)\n>   1>    ... 7 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:207)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:255)\n>   1>    ... 9 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:866)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:205)\n>   1>    ... 10 more\n>   1> Caused by: java.io.IOException: Random IOException\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:303)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:768)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:133)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:107)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:923)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:863)\n>   1>    ... 11 more\n>   1> [2016-05-03 18:02:41,907][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for target shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[0actTwozTcOFyQcVEeZUHg], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=f0CRd2TDRgyOyYPiAMgyUQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.880Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], source shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[0actTwozTcOFyQcVEeZUHg], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=f0CRd2TDRgyOyYPiAMgyUQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.880Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]\n>   1> [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:98)\n>   1>    at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1115)\n>   1>    at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$3(IndicesClusterStateService.java:673)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$1(StoreRecovery.java:100)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:123)\n>   1>    ... 7 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:207)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:255)\n>   1>    ... 9 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:866)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:205)\n>   1>    ... 10 more\n>   1> Caused by: java.io.IOException: Random IOException\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:303)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:768)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:133)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:107)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:923)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:863)\n>   1>    ... 11 more\n>   1> [2016-05-03 18:02:41,925][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][0]] marking and sending shard failed due to [failed recovery]\n>   1> [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:98)\n>   1>    at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1115)\n>   1>    at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$3(IndicesClusterStateService.java:673)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$1(StoreRecovery.java:100)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:123)\n>   1>    ... 7 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:207)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:255)\n>   1>    ... 9 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:866)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:205)\n>   1>    ... 10 more\n>   1> Caused by: java.io.IOException: Random IOException\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:303)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:768)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:133)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:107)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:923)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:863)\n>   1>    ... 11 more\n>   1> [2016-05-03 18:02:41,935][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for target shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[SwMin9aMQZi6_RkwE9MWZw], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=KXbgjCJhSHepoIl9XAcz4Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.912Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], source shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[SwMin9aMQZi6_RkwE9MWZw], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=KXbgjCJhSHepoIl9XAcz4Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.912Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]\n>   1> [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:98)\n>   1>    at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1115)\n>   1>    at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$3(IndicesClusterStateService.java:673)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$1(StoreRecovery.java:100)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:123)\n>   1>    ... 7 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:207)\n>   1>    at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:255)\n>   1>    ... 9 more\n>   1> Caused by: [test-idx/xndMMqOGRoScqfN18YskFQ][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:866)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:205)\n>   1>    ... 10 more\n>   1> Caused by: java.io.IOException: Random IOException\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:259)\n>   1>    at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:303)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:768)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:133)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)\n>   1>    at java.io.FilterInputStream.read(FilterInputStream.java:107)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:923)\n>   1>    at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:863)\n>   1>    ... 11 more\n>   1> [2016-05-03 18:02:41,947][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for target shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[SwMin9aMQZi6_RkwE9MWZw], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=KXbgjCJhSHepoIl9XAcz4Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.912Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], source shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[SwMin9aMQZi6_RkwE9MWZw], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=KXbgjCJhSHepoIl9XAcz4Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.912Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], message [master {node_s0}{0actTwozTcOFyQcVEeZUHg}{local}{local[54]} marked shard as initializing, but shard is marked as failed, resend shard failure]\n>   1> [2016-05-03 18:02:41,969][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for target shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[SwMin9aMQZi6_RkwE9MWZw], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=KXbgjCJhSHepoIl9XAcz4Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.912Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], source shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[SwMin9aMQZi6_RkwE9MWZw], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=KXbgjCJhSHepoIl9XAcz4Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.912Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], message [master {node_s0}{0actTwozTcOFyQcVEeZUHg}{local}{local[54]} marked shard as initializing, but shard is marked as failed, resend shard failure]\n>   1> [2016-05-03 18:02:41,979][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for target shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[SwMin9aMQZi6_RkwE9MWZw], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=KXbgjCJhSHepoIl9XAcz4Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.912Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], source shard [[[test-idx/xndMMqOGRoScqfN18YskFQ]][0], node[SwMin9aMQZi6_RkwE9MWZw], [P], restoring[test-repo:test-snap], s[INITIALIZING], a[id=KXbgjCJhSHepoIl9XAcz4Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-05-03T18:02:41.912Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]]], message [master {node_s0}{0actTwozTcOFyQcVEeZUHg}{local}{local[54]} marked shard as initializing, but shard is marked as failed, resend shard failure]\n>   1> [2016-05-03 18:02:46,885][WARN ][org.elasticsearch.snapshots] [node_s0] [test-repo][test-snap] failed to restore snapshot\n>   1> SnapshotRestoreException[[test-repo:test-snap] indices [test-idx-2] and [test-idx-1] are renamed into the same index [same-name]]\n>   1>    at org.elasticsearch.snapshots.RestoreService.renamedIndices(RestoreService.java:698)\n>   1>    at org.elasticsearch.snapshots.RestoreService.restoreSnapshot(RestoreService.java:210)\n>   1>    at org.elasticsearch.action.admin.cluster.snapshots.restore.TransportRestoreSnapshotAction.masterOperation(TransportRestoreSnapshotAction.java:82)\n>   1>    at org.elasticsearch.action.admin.cluster.snapshots.restore.TransportRestoreSnapshotAction.masterOperation(TransportRestoreSnapshotAction.java:41)\n>   1>    at org.elasticsearch.action.support.master.TransportMasterNodeAction.masterOperation(TransportMasterNodeAction.java:77)\n>   1>    at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction$3.doRun(TransportMasterNodeAction.java:161)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:452)\n>   1>    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> [2016-05-03 18:02:46,898][WARN ][org.elasticsearch.snapshots] [node_s0] [test-repo][test-snap] failed to restore snapshot\n>   1> SnapshotRestoreException[[test-repo:test-snap] indices [test-idx-2] and [test-idx-1] are renamed into the same index [test-idx-1]]\n>   1>    at org.elasticsearch.snapshots.RestoreService.renamedIndices(RestoreService.java:698)\n>   1>    at org.elasticsearch.snapshots.RestoreService.restoreSnapshot(RestoreService.java:210)\n>   1>    at org.elasticsearch.action.admin.cluster.snapshots.restore.TransportRestoreSnapshotAction.masterOperation(TransportRestoreSnapshotAction.java:82)\n>   1>    at org.elasticsearch.action.admin.cluster.snapshots.restore.TransportRestoreSnapshotAction.masterOperation(TransportRestoreSnapshotAction.java:41)\n>   1>    at org.elasticsearch.action.support.master.TransportMasterNodeAction.masterOperation(TransportMasterNodeAction.java:77)\n>   1>    at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction$3.doRun(TransportMasterNodeAction.java:161)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:452)\n>   1>    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> [2016-05-03 18:02:46,901][WARN ][org.elasticsearch.snapshots] [node_s0] [test-repo:test-snap] failed to restore snapshot\n>   1> [__WRONG**] InvalidIndexNameException[Invalid index name [**WRONG**], must not start with '_']\n>   1>    at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validateIndexName(MetaDataCreateIndexService.java:152)\n>   1>    at org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:255)\n>   1>    at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)\n>   1>    at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:513)\n>   1>    at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:814)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>   1>    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237)\n>   1>    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> [2016-05-03 18:02:46,920][WARN ][org.elasticsearch.snapshots] [node_s0] [test-repo:test-snap] failed to restore snapshot\n>   1> [alias-3] InvalidIndexNameException[Invalid index name [alias-3], already exists as alias]\n>   1>    at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validateIndexName(MetaDataCreateIndexService.java:170)\n>   1>    at org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:255)\n>   1>    at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)\n>   1>    at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:513)\n>   1>    at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:814)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>   1>    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237)\n>   1>    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   2> NOTE: leaving temporary files on disk at: /var/lib/jenkins/workspace/elastic+elasticsearch+master+multijob-os-compatibility/os/sles/core/build/testrun/integTest/J2/temp/org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT_A46FAA84C4686F93-001\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> [2016-05-03 18:02:46,923][WARN ][org.elasticsearch.snapshots] [node_s0] [test-repo:test-snap] failed to restore snapshot\n>   1> SnapshotRestoreException[[test-repo:test-snap] cannot rename index [test-idx-1] into [alias-1] because of conflict with an alias with the same name]\n>   1>    at org.elasticsearch.snapshots.RestoreService$1.checkAliasNameConflicts(RestoreService.java:340)\n>   1>    at org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:318)\n>   2> NOTE: test params are: codec=Asserting(Lucene60): {field1.keyword=PostingsFormat(name=Asserting), field1=PostingsFormat(name=Asserting), _field_names=PostingsFormat(name=Asserting), foo=PostingsFormat(name=Asserting), value.keyword=PostingsFormat(name=Asserting), _type=PostingsFormat(name=Asserting), _uid=PostingsFormat(name=Asserting), _timestamp=PostingsFormat(name=Asserting), value=PostingsFormat(name=Asserting), _all=PostingsFormat(name=Asserting), foo.keyword=PostingsFormat(name=Asserting)}, docValues:{field1.keyword=DocValuesFormat(name=Lucene54), value.keyword=DocValuesFormat(name=Lucene54), _type=DocValuesFormat(name=Lucene54), _version=DocValuesFormat(name=Asserting), _timestamp=DocValuesFormat(name=Asserting), foo.keyword=DocValuesFormat(name=Lucene54)}, maxPointsInLeafNode=101, maxMBSortInHeap=4.917083511936533, sim=ClassicSimilarity, locale=en-MT, timezone=Kwajalein\n>   2> NOTE: Linux 3.12.51-52.31-default amd64/Oracle Corporation 1.8.0_77 (64-bit)/cpus=4,threads=1,free=361959312,total=512753664\n>   2> NOTE: All tests run in this JVM: [NoMasterNodeIT, UpdateNumberOfReplicasIT, PendingTasksBlocksIT, GetTermVectorsCheckDocFreqIT, ExtendedStatsBucketIT, NestedIT, NettyTransportIT, NettyPipeliningDisabledIT, CircuitBreakerNoopIT, CumulativeSumIT, SharedClusterSnapshotRestoreIT]\n>   1>    at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)\n>   1>    at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:513)\n>   1>    at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:814)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>   1>    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237)\n>   1>    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> [2016-05-03 18:02:46,933][WARN ][org.elasticsearch.snapshots] [node_s0] [test-repo:test-snap] failed to restore snapshot\n>   1> SnapshotRestoreException[[test-repo:test-snap] cannot rename index [test-idx-1] into [alias-2] because of conflict with an alias with the same name]\n>   1>    at org.elasticsearch.snapshots.RestoreService$1.checkAliasNameConflicts(RestoreService.java:340)\n>   1>    at org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:318)\n>   1>    at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)\n>   1>    at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:513)\n>   1>    at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:814)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>   1>    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237)\n>   1>    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> [2016-05-03 18:02:47,842][WARN ][org.elasticsearch.repositories.fs] [node_s0] cannot read metadata for snapshot [test-repo:test-snap-1]\n>   1> SnapshotMissingException[[test-repo:test-snap-1] is missing]; nested: NoSuchFileException[/var/lib/jenkins/workspace/elastic+elasticsearch+master+multijob-os-compatibility/os/sles/core/build/testrun/integTest/J2/temp/org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT_A46FAA84C4686F93-001/tempDir-001/repos/AwWIiwkhuq/meta-test-snap-1.dat];\n>   1>    at org.elasticsearch.repositories.blobstore.BlobStoreRepository.readSnapshotMetaData(BlobStoreRepository.java:470)\n>   1>    at org.elasticsearch.repositories.blobstore.BlobStoreRepository.deleteSnapshot(BlobStoreRepository.java:309)\n>   1>    at org.elasticsearch.snapshots.SnapshotsService$8.run(SnapshotsService.java:1010)\n>   1>    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:392)\n>   1>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n>   1>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n>   1>    at java.lang.Thread.run(Thread.java:745)\n>   1> Caused by: java.nio.file.NoSuchFileException: /var/lib/jenkins/workspace/elastic+elasticsearch+master+multijob-os-compatibility/os/sles/core/build/testrun/integTest/J2/temp/org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT_A46FAA84C4686F93-001/tempDir-001/repos/AwWIiwkhuq/meta-test-snap-1.dat\n>   1>    at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86)\n>   1>    at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)\n>   1>    at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)\n>   1>    at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214)\n>   1>    at java.nio.file.Files.newByteChannel(Files.java:361)\n>   1>    at java.nio.file.Files.newByteChannel(Files.java:407)\n>   1>    at java.nio.file.spi.FileSystemProvider.newInputStream(FileSystemProvider.java:384)\n>   1>    at org.apache.lucene.mockfile.FilterFileSystemProvider.newInputStream(FilterFileSystemProvider.java:192)\n>   1>    at org.apache.lucene.mockfile.FilterFileSystemProvider.newInputStream(FilterFileSystemProvider.java:192)\n>   1>    at org.apache.lucene.mockfile.FilterFileSystemProvider.newInputStream(FilterFileSystemProvider.java:192)\n>   1>    at org.apache.lucene.mockfile.HandleTrackingFS.newInputStream(HandleTrackingFS.java:92)\n>   1>    at org.apache.lucene.mockfile.FilterFileSystemProvider.newInputStream(FilterFileSystemProvider.java:192)\n>   1>    at org.apache.lucene.mockfile.HandleTrackingFS.newInputStream(HandleTrackingFS.java:92)\n>   1>    at java.nio.file.Files.newInputStream(Files.java:152)\n>   1>    at org.elasticsearch.common.blobstore.fs.FsBlobContainer.readBlob(FsBlobContainer.java:93)\n>   1>    at org.elasticsearch.repositories.blobstore.ChecksumBlobStoreFormat.readBlob(ChecksumBlobStoreFormat.java:100)\n>   1>    at org.elasticsearch.repositories.blobstore.BlobStoreFormat.read(BlobStoreFormat.java:86)\n>   1>    at org.elasticsearch.repositories.blobstore.BlobStoreRepository.readSnapshotMetaData(BlobStoreRepository.java:468)\n>   1>    ... 6 more\n> Completed [66/286] on J2 in 73.05s, 36 tests, 1 error <<< FAILURES!\n","closed_by":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"performed_via_github_app":null}