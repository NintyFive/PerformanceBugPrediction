[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23001399","html_url":"https://github.com/elastic/elasticsearch/issues/3544#issuecomment-23001399","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3544","id":23001399,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMDAxMzk5","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2013-08-21T08:06:34Z","updated_at":"2013-08-21T08:06:34Z","author_association":"CONTRIBUTOR","body":"I think you should must not add `\"participants.*\"` as the pattern but simply use `\"*\"` instead since the template is already defined for a type see this gist: https://gist.github.com/s1monw/6291595 \ndoes this make sense?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23008269","html_url":"https://github.com/elastic/elasticsearch/issues/3544#issuecomment-23008269","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3544","id":23008269,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMDA4MjY5","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2013-08-21T10:31:53Z","updated_at":"2013-08-21T10:31:53Z","author_association":"CONTRIBUTOR","body":"I can still reproduce the behavior here, even with the modified mapping and a slightly simpler test. Looks like a bug to me.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23008477","html_url":"https://github.com/elastic/elasticsearch/issues/3544#issuecomment-23008477","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3544","id":23008477,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMDA4NDc3","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2013-08-21T10:35:42Z","updated_at":"2013-08-21T10:35:42Z","author_association":"MEMBER","body":"this might relate to a bug we fixed in put mapping, where it didn't always wait for all the relevant nodes to properly ack that the mapping have been applied. It should be fixed in master and 0.90 (upcoming 0.90.4).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23008827","html_url":"https://github.com/elastic/elasticsearch/issues/3544#issuecomment-23008827","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3544","id":23008827,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMDA4ODI3","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2013-08-21T10:44:49Z","updated_at":"2013-08-21T10:44:49Z","author_association":"CONTRIBUTOR","body":"@brwe can you attach the test you use to reproduce it here?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23016730","html_url":"https://github.com/elastic/elasticsearch/issues/3544#issuecomment-23016730","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3544","id":23016730,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMDE2NzMw","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2013-08-21T13:28:25Z","updated_at":"2013-08-21T13:28:25Z","author_association":"CONTRIBUTOR","body":"I prepared a (very crude) test on branch issue-3544-test in my repository.\n\nAdding an actionGet() after \n\n```\n    client.prepareIndex(INDEX_NAME, MAPPING_TYPE)\n            .setSource(source)\n            .setConsistencyLevel(WriteConsistencyLevel.QUORUM)\n            .execute();\n```\n\nseems to solve the problem, as you expected @s1monw .\nSo, probably not a bug after all.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23017431","html_url":"https://github.com/elastic/elasticsearch/issues/3544#issuecomment-23017431","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3544","id":23017431,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMDE3NDMx","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2013-08-21T13:39:02Z","updated_at":"2013-08-21T13:39:02Z","author_association":"CONTRIBUTOR","body":"@brwe thanks for clarifying! @pmclellan are you ok with closing this issue, does it work for you as well based on the examples?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23031008","html_url":"https://github.com/elastic/elasticsearch/issues/3544#issuecomment-23031008","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3544","id":23031008,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMDMxMDA4","user":{"login":"pmclellan","id":5272400,"node_id":"MDQ6VXNlcjUyNzI0MDA=","avatar_url":"https://avatars3.githubusercontent.com/u/5272400?v=4","gravatar_id":"","url":"https://api.github.com/users/pmclellan","html_url":"https://github.com/pmclellan","followers_url":"https://api.github.com/users/pmclellan/followers","following_url":"https://api.github.com/users/pmclellan/following{/other_user}","gists_url":"https://api.github.com/users/pmclellan/gists{/gist_id}","starred_url":"https://api.github.com/users/pmclellan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pmclellan/subscriptions","organizations_url":"https://api.github.com/users/pmclellan/orgs","repos_url":"https://api.github.com/users/pmclellan/repos","events_url":"https://api.github.com/users/pmclellan/events{/privacy}","received_events_url":"https://api.github.com/users/pmclellan/received_events","type":"User","site_admin":false},"created_at":"2013-08-21T16:39:16Z","updated_at":"2013-08-21T16:39:16Z","author_association":"NONE","body":"Thanks for the feedback. However, I still think this is a bug. Indexing all the documents synchronously, as @brwe suggested, does prevent the issue from happening, but I believe the problem should not occur when indexing asynchronously either.\n\nI'll try running my test against master to see if the issue has been resolved by the fix @kimchy mentioned.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23031141","html_url":"https://github.com/elastic/elasticsearch/issues/3544#issuecomment-23031141","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3544","id":23031141,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMDMxMTQx","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2013-08-21T16:41:03Z","updated_at":"2013-08-21T16:41:03Z","author_association":"CONTRIBUTOR","body":"@pmclellan you can index them async but you need to wait until they are all indexed on all replicas and then call refresh otherwise you might miss some docs depending on which shard / replica you go. I don't see the issue you are talking about sync/async here can you explain?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23034990","html_url":"https://github.com/elastic/elasticsearch/issues/3544#issuecomment-23034990","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3544","id":23034990,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMDM0OTkw","user":{"login":"pmclellan","id":5272400,"node_id":"MDQ6VXNlcjUyNzI0MDA=","avatar_url":"https://avatars3.githubusercontent.com/u/5272400?v=4","gravatar_id":"","url":"https://api.github.com/users/pmclellan","html_url":"https://github.com/pmclellan","followers_url":"https://api.github.com/users/pmclellan/followers","following_url":"https://api.github.com/users/pmclellan/following{/other_user}","gists_url":"https://api.github.com/users/pmclellan/gists{/gist_id}","starred_url":"https://api.github.com/users/pmclellan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pmclellan/subscriptions","organizations_url":"https://api.github.com/users/pmclellan/orgs","repos_url":"https://api.github.com/users/pmclellan/repos","events_url":"https://api.github.com/users/pmclellan/events{/privacy}","received_events_url":"https://api.github.com/users/pmclellan/received_events","type":"User","site_admin":false},"created_at":"2013-08-21T17:34:22Z","updated_at":"2013-08-21T17:34:22Z","author_association":"NONE","body":"Apologies for the confusion. I'll do my best to explain what I mean as it's possible I've got the wrong end of the stick here. \n\n@brwe suggested adding '.actionGet()' to the end of my indexing call. My understanding is that this would cause the test to wait until a response has been received from the Elasticsearch node before proceeding to index the next document. This is what I am terming as synchronous execution because each index request must be acknowledged before a subsequent one is issued. My understanding is that the 'execute()' method returns a ListenableActionFuture so that you can issue a series of requests without waiting for responses and then use the futures to determine when they've been acknowledged. This is what I'd consider to be asynchronous execution. In either case I'd expect the end result to be the same with all documents being indexed according to the type mapping. Is this a valid assumption or have I got things mixed up here?\n\nOne thing I can see that I'm not currently doing in my test is waiting for the result of all the indexing futures. I'll give this a try and see what happens.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23037737","html_url":"https://github.com/elastic/elasticsearch/issues/3544#issuecomment-23037737","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3544","id":23037737,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMDM3NzM3","user":{"login":"pmclellan","id":5272400,"node_id":"MDQ6VXNlcjUyNzI0MDA=","avatar_url":"https://avatars3.githubusercontent.com/u/5272400?v=4","gravatar_id":"","url":"https://api.github.com/users/pmclellan","html_url":"https://github.com/pmclellan","followers_url":"https://api.github.com/users/pmclellan/followers","following_url":"https://api.github.com/users/pmclellan/following{/other_user}","gists_url":"https://api.github.com/users/pmclellan/gists{/gist_id}","starred_url":"https://api.github.com/users/pmclellan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pmclellan/subscriptions","organizations_url":"https://api.github.com/users/pmclellan/orgs","repos_url":"https://api.github.com/users/pmclellan/repos","events_url":"https://api.github.com/users/pmclellan/events{/privacy}","received_events_url":"https://api.github.com/users/pmclellan/received_events","type":"User","site_admin":false},"created_at":"2013-08-21T18:11:46Z","updated_at":"2013-08-21T18:11:46Z","author_association":"NONE","body":"Modified test to wait for all indexing responses before sending refresh request and re-ran it using latest code from master. Unfortunately, neither change had any effect. However, if I group all the separate indexing actions into a single bulk request then the problem goes away. \n\nHope this info helps with further investigation.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23071715","html_url":"https://github.com/elastic/elasticsearch/issues/3544#issuecomment-23071715","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3544","id":23071715,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMDcxNzE1","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2013-08-22T06:51:31Z","updated_at":"2013-08-22T06:51:31Z","author_association":"CONTRIBUTOR","body":"I have to apologize... I looked into this closer and I can see the dynamic mapping being applied correctly even on master but somehow it pulls a default analyzer even if the field mapper has `whitespace` initialized. We will look deeper into this! It has certainly something todo with a race when we see the field the first time.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23558079","html_url":"https://github.com/elastic/elasticsearch/issues/3544#issuecomment-23558079","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3544","id":23558079,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNTU4MDc5","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2013-08-30T12:36:40Z","updated_at":"2013-08-30T12:36:40Z","author_association":"CONTRIBUTOR","body":"@pmclellan Just writing to let you know we are still on it. It is bug indeed and as @s1monw guessed a race condition. Thanks again for providing the test and being so persistent! @s1monw prepared a fix (see above) but we need to discuss this further before pulling it in. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23570206","html_url":"https://github.com/elastic/elasticsearch/issues/3544#issuecomment-23570206","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3544","id":23570206,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNTcwMjA2","user":{"login":"pmclellan","id":5272400,"node_id":"MDQ6VXNlcjUyNzI0MDA=","avatar_url":"https://avatars3.githubusercontent.com/u/5272400?v=4","gravatar_id":"","url":"https://api.github.com/users/pmclellan","html_url":"https://github.com/pmclellan","followers_url":"https://api.github.com/users/pmclellan/followers","following_url":"https://api.github.com/users/pmclellan/following{/other_user}","gists_url":"https://api.github.com/users/pmclellan/gists{/gist_id}","starred_url":"https://api.github.com/users/pmclellan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pmclellan/subscriptions","organizations_url":"https://api.github.com/users/pmclellan/orgs","repos_url":"https://api.github.com/users/pmclellan/repos","events_url":"https://api.github.com/users/pmclellan/events{/privacy}","received_events_url":"https://api.github.com/users/pmclellan/received_events","type":"User","site_admin":false},"created_at":"2013-08-30T15:45:18Z","updated_at":"2013-08-30T15:45:18Z","author_association":"NONE","body":"Hi @brwe, thanks for the update. It's a rare day when someone actually thanks me for my persistence. \n\nGood to hear that you've pinned down the cause of the problem. Keep me posted on the progress of the fix.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/23583712","html_url":"https://github.com/elastic/elasticsearch/issues/3544#issuecomment-23583712","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3544","id":23583712,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNTgzNzEy","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2013-08-30T19:21:10Z","updated_at":"2013-08-30T19:21:10Z","author_association":"CONTRIBUTOR","body":"@pmclellan I am glad you were persistent and I learned my part here as well :) thanks for this\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73203535","html_url":"https://github.com/elastic/elasticsearch/issues/3544#issuecomment-73203535","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3544","id":73203535,"node_id":"MDEyOklzc3VlQ29tbWVudDczMjAzNTM1","user":{"login":"sschuerz","id":9714324,"node_id":"MDQ6VXNlcjk3MTQzMjQ=","avatar_url":"https://avatars0.githubusercontent.com/u/9714324?v=4","gravatar_id":"","url":"https://api.github.com/users/sschuerz","html_url":"https://github.com/sschuerz","followers_url":"https://api.github.com/users/sschuerz/followers","following_url":"https://api.github.com/users/sschuerz/following{/other_user}","gists_url":"https://api.github.com/users/sschuerz/gists{/gist_id}","starred_url":"https://api.github.com/users/sschuerz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sschuerz/subscriptions","organizations_url":"https://api.github.com/users/sschuerz/orgs","repos_url":"https://api.github.com/users/sschuerz/repos","events_url":"https://api.github.com/users/sschuerz/events{/privacy}","received_events_url":"https://api.github.com/users/sschuerz/received_events","type":"User","site_admin":false},"created_at":"2015-02-06T08:37:54Z","updated_at":"2015-02-06T08:42:47Z","author_association":"NONE","body":"I still experience some wrong behavior of elasticsearch when selecting the index analyzer for a dynamic property. I have a \"_autocomplete_*\" property; the concrete fields \"_autocomplete_de\" or \"_autocomplete_en\" are filled by a transform script depending on the lanuage of the document. The index analyzer to use is equal to concrete name of the field. Look at this example:\n\n``` json\nPUT test_dynamic_template\n{\n  \"settings\": {\n    \"analysis\": {\n      \"analyzer\": {\n        \"nGram_analyzer\": {\n          \"alias\": \"default_index\",\n          \"tokenizer\": \"nGram_tokenizer\",\n          \"filter\": [\n            \"lowercase\",\n            \"asciifolding\"\n          ]\n        },\n        \"_autocomplete_de\": {\n          \"tokenizer\": \"standard\",\n          \"filter\": [\n            \"lowercase\",\n            \"stopwords_de_filter\"\n          ]\n        },\n        \"_autocomplete_en\": {\n          \"tokenizer\": \"standard\",\n          \"filter\": [\n            \"lowercase\",\n            \"stopwords_en_filter\"\n          ]\n        }\n      },\n      \"tokenizer\": {\n        \"nGram_tokenizer\": {\n          \"type\": \"nGram\",\n          \"min_gram\": 3,\n          \"max_gram\": 25,\n          \"token_chars\": [ \"letter\", \"digit\", \"symbol\", \"punctuation\" ]\n        }\n      },\n      \"filter\": {\n        \"stopwords_de_filter\": {\n          \"type\": \"stop\",\n          \"stopwords\": \"_german_\"\n        },\n        \"stopwords_en_filter\": {\n          \"type\": \"stop\",\n          \"stopwords\": \"_english_\"\n        }\n      }\n    }\n  }\n}\n\nPUT test_dynamic_template/_mapping/page\n{\n  \"page\": {\n    \"properties\": {\n      \"_lang\": {\n        \"type\": \"string\",\n        \"index\": \"not_analyzed\"\n      }\n    },\n    \"dynamic_templates\" : [\n      {\n        \"autocomplete_for_lang\" : {\n          \"match\" : \"_autocomplete_*\",\n          \"mapping\" : {\n            \"type\" : \"string\",\n            \"index_analyzer\" : \"{name}\",\n            \"search_analyzer\": \"standard\"\n          }\n        }\n      }\n    ],\n    \"transform\": {\n      \"script\": \"if(ctx._source._lang instanceof String) { ctx._source['_autocomplete_' + ctx._source._lang] = autocomplete_fields.collect{ ctx._source[it] }; }\",\n      \"params\": {\n        \"autocomplete_fields\": [\"title\", \"content\"]\n      }\n    }\n  }\n}\n\nPOST test_dynamic_template/page/\n{\n  \"_lang\": \"en\",\n  \"title\": \"elasticsearch dynamic template\",\n  \"content\": \"this is some content to reproduce the behavior\"\n}\n\nGET test_dynamic_template/_search?search_type=count\n{\n  \"query\": {\n    \"match_all\": { }\n  },\n  \"facets\" : {\n    \"all_autocomplete\" : {\n      \"terms\" : {\n        \"field\": \"_autocomplete_en\",\n        \"regex\": \"^s.*\", \n        \"size\": 5\n      }\n    }\n  }\n}\n```\n\nI've executed this commands multiple times, _sometimes_ I see the following behavior:\nDepending on the elasticsearch node where the facet query is executed, it returns only the word \"some\" (which is correct) or it returns \"sticsearch\", \"sticsearc\", \"sticsear\", \"sticsea\", \"sticse\" (in this case, a wrong analyzer seems to be used).\n\nelasticsearch version: 1.4.2\n\n**Update:** The wrong behavior only occurs if the name of the dynamic property starts with an underscore. I named it \"autocomplete_*\" now and it works fine. However, I would still consider this as a bug, since underscores are permitted in property names.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73252215","html_url":"https://github.com/elastic/elasticsearch/issues/3544#issuecomment-73252215","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3544","id":73252215,"node_id":"MDEyOklzc3VlQ29tbWVudDczMjUyMjE1","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2015-02-06T15:20:28Z","updated_at":"2015-02-06T15:20:28Z","author_association":"CONTRIBUTOR","body":"@sschuerz This is a different issue. Analyzer names may not start with an _, these names are reserved for special analyzers. But you are right, this is not documented anywhere and there is no check for this, the analyzer is just silently dropped. \nI opened a new issue for this: https://github.com/elasticsearch/elasticsearch/issues/9596\n\nThanks for reporting and especially the update that points to the _. This saved a lot of time.\n","performed_via_github_app":null}]