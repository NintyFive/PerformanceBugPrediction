[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/483527087","html_url":"https://github.com/elastic/elasticsearch/issues/41223#issuecomment-483527087","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41223","id":483527087,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzUyNzA4Nw==","user":{"login":"matriv","id":5058131,"node_id":"MDQ6VXNlcjUwNTgxMzE=","avatar_url":"https://avatars1.githubusercontent.com/u/5058131?v=4","gravatar_id":"","url":"https://api.github.com/users/matriv","html_url":"https://github.com/matriv","followers_url":"https://api.github.com/users/matriv/followers","following_url":"https://api.github.com/users/matriv/following{/other_user}","gists_url":"https://api.github.com/users/matriv/gists{/gist_id}","starred_url":"https://api.github.com/users/matriv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matriv/subscriptions","organizations_url":"https://api.github.com/users/matriv/orgs","repos_url":"https://api.github.com/users/matriv/repos","events_url":"https://api.github.com/users/matriv/events{/privacy}","received_events_url":"https://api.github.com/users/matriv/received_events","type":"User","site_admin":false},"created_at":"2019-04-16T06:22:13Z","updated_at":"2019-04-16T06:22:13Z","author_association":"CONTRIBUTOR","body":"Hello @danielsnider,\r\n\r\nThe default value for this param can also be said globally through a cluster setting: `search.default_allow_partial_results`. Please check the documentation [here](https://www.elastic.co/guide/en/elasticsearch/reference/6.7/search-request-body.html#_parameters_4).\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/483527420","html_url":"https://github.com/elastic/elasticsearch/issues/41223#issuecomment-483527420","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41223","id":483527420,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzUyNzQyMA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-04-16T06:23:41Z","updated_at":"2019-04-16T06:23:41Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/483712800","html_url":"https://github.com/elastic/elasticsearch/issues/41223#issuecomment-483712800","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41223","id":483712800,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzcxMjgwMA==","user":{"login":"danielsnider","id":1737560,"node_id":"MDQ6VXNlcjE3Mzc1NjA=","avatar_url":"https://avatars0.githubusercontent.com/u/1737560?v=4","gravatar_id":"","url":"https://api.github.com/users/danielsnider","html_url":"https://github.com/danielsnider","followers_url":"https://api.github.com/users/danielsnider/followers","following_url":"https://api.github.com/users/danielsnider/following{/other_user}","gists_url":"https://api.github.com/users/danielsnider/gists{/gist_id}","starred_url":"https://api.github.com/users/danielsnider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielsnider/subscriptions","organizations_url":"https://api.github.com/users/danielsnider/orgs","repos_url":"https://api.github.com/users/danielsnider/repos","events_url":"https://api.github.com/users/danielsnider/events{/privacy}","received_events_url":"https://api.github.com/users/danielsnider/received_events","type":"User","site_admin":false},"created_at":"2019-04-16T15:32:02Z","updated_at":"2019-04-16T15:32:02Z","author_association":"NONE","body":"@matriv Thanks so much! Do you know why it's not working?\r\n\r\nSetting is set:\r\n```\r\n$ curl -X PUT \"localhost:9200/_cluster/settings\" -H 'Content-Type: application/json' -d'\r\n{\r\n    \"persistent\" : {\r\n        \"search.default_allow_partial_results\" : \"false\"\r\n    }\r\n}\r\n'\r\n$ curl -X GET \"localhost:9200/_cluster/settings\"\r\n{\"persistent\":{\"search\":{\"default_allow_partial_results\":\"false\"}},\"transient\":{}}\r\n```\r\n\r\nThen I `GET` string query with intentional syntax error \"heart(\":\r\n```\r\n{\"query_string\":{\"fields\":[\"*\"],\"query\":\"heart(\"}}\r\n```\r\n\r\nBut I receive response `200` with even though the body is a clear error 😢:\r\n```\r\n{\r\n  \"responses\": [\r\n    {\r\n      \"error\": {\r\n        \"root_cause\": [\r\n          {\r\n            \"type\": \"query_shard_exception\",\r\n            \"reason\": \"Failed to parse query [heart(]\",\r\n            \"index_uuid\": \"QrWhvbq2RIWijCAoXfFKhw\",\r\n            \"index\": \"image\"\r\n          }\r\n        ],\r\n        \"type\": \"search_phase_execution_exception\",\r\n        \"reason\": \"all shards failed\",\r\n        \"phase\": \"query\",\r\n        \"grouped\": true,\r\n        \"failed_shards\": [\r\n          {\r\n            \"shard\": 0,\r\n...\r\n```\r\n\r\nHow can we make the `200` response be the `400` or `500` error that is should be?\r\nMany thanks! This is a major blocker for me.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/483718888","html_url":"https://github.com/elastic/elasticsearch/issues/41223#issuecomment-483718888","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41223","id":483718888,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzcxODg4OA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2019-04-16T15:47:04Z","updated_at":"2019-04-16T15:47:04Z","author_association":"MEMBER","body":"@danielsnider this looks like a bug but I cannot reproduce, can you post the entire response and the version that you're using ?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/483739766","html_url":"https://github.com/elastic/elasticsearch/issues/41223#issuecomment-483739766","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41223","id":483739766,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzczOTc2Ng==","user":{"login":"danielsnider","id":1737560,"node_id":"MDQ6VXNlcjE3Mzc1NjA=","avatar_url":"https://avatars0.githubusercontent.com/u/1737560?v=4","gravatar_id":"","url":"https://api.github.com/users/danielsnider","html_url":"https://github.com/danielsnider","followers_url":"https://api.github.com/users/danielsnider/followers","following_url":"https://api.github.com/users/danielsnider/following{/other_user}","gists_url":"https://api.github.com/users/danielsnider/gists{/gist_id}","starred_url":"https://api.github.com/users/danielsnider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielsnider/subscriptions","organizations_url":"https://api.github.com/users/danielsnider/orgs","repos_url":"https://api.github.com/users/danielsnider/repos","events_url":"https://api.github.com/users/danielsnider/events{/privacy}","received_events_url":"https://api.github.com/users/danielsnider/received_events","type":"User","site_admin":false},"created_at":"2019-04-16T16:42:35Z","updated_at":"2019-04-16T16:43:02Z","author_association":"NONE","body":"@jimczi Thanks for taking a look.\r\n\r\nI've tried ElasticSearch `6.7.1` and `6.6.0`. This is how I start elastic:\r\n```\r\nsudo docker run -d --name elasticsearch -p 9200:9200 -p 9300:9300 -e ES_JAVA_OPTS=\"-Xms16g -Xmx16g\" -v `pwd`/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v /home/ubuntu/esdata:/usr/share/elasticsearch/data docker.elastic.co/elasticsearch/elasticsearch:6.6.0\r\n```\r\n\r\nFull search request: \r\n```\r\nRequest URL: http://192.168.136.128:9200/image/_msearch?\r\nRequest Method: POST\r\nStatus Code: 200 OK\r\nRemote Address: 192.168.136.128:9200\r\nReferrer Policy: no-referrer-when-downgrade\r\naccept: application/json\r\ncontent-type: application/x-ndjson\r\nOrigin: http://192.168.136.128:3000\r\nReferer: http://192.168.136.128:3000/\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36\r\nx-requested-with: 771100\r\n\r\n{\"preference\":\"modality-list\"}\r\n{\"query\":{\"bool\":{\"must\":[{\"bool\":{\"must\":[{\"query_string\":{\"fields\":[\"*\"],\"query\":\"heart(\"}}]}}]}},\"highlight\":{\"pre_tags\":[\"<mark>\"],\"post_tags\":[\"</mark>\"],\"fields\":{}},\"size\":0,\"_source\":{\"includes\":[\"*\"],\"excludes\":[]},\"from\":0,\"aggs\":{\"Modality.raw\":{\"terms\":{\"field\":\"Modality.raw\",\"size\":20,\"order\":{\"_count\":\"desc\"}}}}}\r\n{\"preference\":\"bodypart-list\"}\r\n{\"query\":{\"bool\":{\"must\":[{\"bool\":{\"must\":[{\"query_string\":{\"fields\":[\"*\"],\"query\":\"heart(\"}}]}}]}},\"highlight\":{\"pre_tags\":[\"<mark>\"],\"post_tags\":[\"</mark>\"],\"fields\":{}},\"size\":0,\"_source\":{\"includes\":[\"*\"],\"excludes\":[]},\"from\":0,\"aggs\":{\"BodyPartExamined.raw\":{\"terms\":{\"field\":\"BodyPartExamined.raw\",\"size\":100,\"order\":{\"_count\":\"desc\"}}}}}\r\n{\"preference\":\"gender-list\"}\r\n{\"query\":{\"bool\":{\"must\":[{\"bool\":{\"must\":[{\"query_string\":{\"fields\":[\"*\"],\"query\":\"heart(\"}}]}}]}},\"highlight\":{\"pre_tags\":[\"<mark>\"],\"post_tags\":[\"</mark>\"],\"fields\":{}},\"size\":0,\"_source\":{\"includes\":[\"*\"],\"excludes\":[]},\"from\":0,\"aggs\":{\"PatientSex.raw\":{\"terms\":{\"field\":\"PatientSex.raw\",\"size\":20,\"order\":{\"_count\":\"desc\"}}}}}\r\n{\"preference\":\"tagCloud\"}\r\n{\"query\":{\"bool\":{\"must\":[{\"bool\":{\"must\":[{\"query_string\":{\"fields\":[\"*\"],\"query\":\"heart(\"}}]}}]}},\"highlight\":{\"pre_tags\":[\"<mark>\"],\"post_tags\":[\"</mark>\"],\"fields\":{}},\"size\":0,\"_source\":{\"includes\":[\"*\"],\"excludes\":[]},\"from\":0,\"aggs\":{\"descriptions.raw\":{\"terms\":{\"field\":\"descriptions.raw\",\"size\":200,\"order\":{\"_term\":\"asc\"}}}}}\r\n{\"preference\":\"results\"}\r\n{\"query\":{\"bool\":{\"must\":[{\"bool\":{\"must\":[{\"query_string\":{\"fields\":[\"*\"],\"query\":\"heart(\"}}]}}]}},\"highlight\":{\"pre_tags\":[\"<mark>\"],\"post_tags\":[\"</mark>\"],\"fields\":{}},\"size\":12,\"_source\":{\"includes\":[\"*\"],\"excludes\":[]},\"from\":0}\r\n```\r\n\r\nFull `200` response:\r\n```\r\naccess-control-allow-credentials: true\r\naccess-control-allow-origin: *\r\ncontent-encoding: gzip\r\ncontent-length: 538\r\ncontent-type: application/json; charset=UTF-8\r\nWarning: 299 Elasticsearch-6.7.1-2f32220 \"Deprecated aggregation order key [_term] used, replaced by [_key]\"\r\n\r\n{\"responses\":[{\"error\":{\"root_cause\":[{\"type\":\"query_shard_exception\",\"reason\":\"Failed to parse query [heart(]\",\"index_uuid\":\"FqZfR415QIuajKOY32gXYg\",\"index\":\"image\"}],\"type\":\"search_phase_execution_exception\",\"reason\":\"all shards failed\",\"phase\":\"query\",\"grouped\":true,\"failed_shards\":[{\"shard\":0,\"index\":\"image\",\"node\":\"X6uClAg5SimP2fxx3L872g\",\"reason\":{\"type\":\"query_shard_exception\",\"reason\":\"Failed to parse query [heart(]\",\"index_uuid\":\"FqZfR415QIuajKOY32gXYg\",\"index\":\"image\",\"caused_by\":{\"type\":\"parse_exception\",\"reason\":\"Cannot parse 'heart(': Encountered \\\"<EOF>\\\" at line 1, column 6.\\nWas expecting one of:\\n    <NOT> ...\\n    \\\"+\\\" ...\\n    \\\"-\\\" ...\\n    <BAREOPER> ...\\n    \\\"(\\\" ...\\n    \\\"*\\\" ...\\n    <QUOTED> ...\\n    <TERM> ...\\n    <PREFIXTERM> ...\\n    <WILDTERM> ...\\n    <REGEXPTERM> ...\\n    \\\"[\\\" ...\\n    \\\"{\\\" ...\\n    <NUMBER> ...\\n    <TERM> ...\\n    \",\"caused_by\":{\"type\":\"parse_exception\",\"reason\":\"Encountered \\\"<EOF>\\\" at line 1, column 6.\\nWas expecting one of:\\n    <NOT> ...\\n    \\\"+\\\" ...\\n    \\\"-\\\" ...\\n    <BAREOPER> ...\\n    \\\"(\\\" ...\\n    \\\"*\\\" ...\\n    <QUOTED> ...\\n    <TERM> ...\\n    <PREFIXTERM> ...\\n    <WILDTERM> ...\\n    <REGEXPTERM> ...\\n    \\\"[\\\" ...\\n    \\\"{\\\" ...\\n    <NUMBER> ...\\n    <TERM> ...\\n    \"}}}}]},\"status\":400},{\"error\":{\"root_cause\":[{\"type\":\"query_shard_exception\",\"reason\":\"Failed to parse query [heart(]\",\"index_uuid\":\"FqZfR415QIuajKOY32gXYg\",\"index\":\"image\"}],\"type\":\"search_phase_execution_exception\",\"reason\":\"all shards failed\",\"phase\":\"query\",\"grouped\":true,\"failed_shards\":[{\"shard\":0,\"index\":\"image\",\"node\":\"X6uClAg5SimP2fxx3L872g\",\"reason\":{\"type\":\"query_shard_exception\",\"reason\":\"Failed to parse query [heart(]\",\"index_uuid\":\"FqZfR415QIuajKOY32gXYg\",\"index\":\"image\",\"caused_by\":{\"type\":\"parse_exception\",\"reason\":\"Cannot parse 'heart(': Encountered \\\"<EOF>\\\" at line 1, column 6.\\nWas expecting one of:\\n    <NOT> ...\\n    \\\"+\\\" ...\\n    \\\"-\\\" ...\\n    <BAREOPER> ...\\n    \\\"(\\\" ...\\n    \\\"*\\\" ...\\n    <QUOTED> ...\\n    <TERM> ...\\n    <PREFIXTERM> ...\\n    <WILDTERM> ...\\n    <REGEXPTERM> ...\\n    \\\"[\\\" ...\\n    \\\"{\\\" ...\\n    <NUMBER> ...\\n    <TERM> ...\\n    \",\"caused_by\":{\"type\":\"parse_exception\",\"reason\":\"Encountered \\\"<EOF>\\\" at line 1, column 6.\\nWas expecting one of:\\n    <NOT> ...\\n    \\\"+\\\" ...\\n    \\\"-\\\" ...\\n    <BAREOPER> ...\\n    \\\"(\\\" ...\\n    \\\"*\\\" ...\\n    <QUOTED> ...\\n    <TERM> ...\\n    <PREFIXTERM> ...\\n    <WILDTERM> ...\\n    <REGEXPTERM> ...\\n    \\\"[\\\" ...\\n    \\\"{\\\" ...\\n    <NUMBER> ...\\n    <TERM> ...\\n    \"}}}}]},\"status\":400},{\"error\":{\"root_cause\":[{\"type\":\"query_shard_exception\",\"reason\":\"Failed to parse query [heart(]\",\"index_uuid\":\"FqZfR415QIuajKOY32gXYg\",\"index\":\"image\"}],\"type\":\"search_phase_execution_exception\",\"reason\":\"all shards failed\",\"phase\":\"query\",\"grouped\":true,\"failed_shards\":[{\"shard\":0,\"index\":\"image\",\"node\":\"X6uClAg5SimP2fxx3L872g\",\"reason\":{\"type\":\"query_shard_exception\",\"reason\":\"Failed to parse query [heart(]\",\"index_uuid\":\"FqZfR415QIuajKOY32gXYg\",\"index\":\"image\",\"caused_by\":{\"type\":\"parse_exception\",\"reason\":\"Cannot parse 'heart(': Encountered \\\"<EOF>\\\" at line 1, column 6.\\nWas expecting one of:\\n    <NOT> ...\\n    \\\"+\\\" ...\\n    \\\"-\\\" ...\\n    <BAREOPER> ...\\n    \\\"(\\\" ...\\n    \\\"*\\\" ...\\n    <QUOTED> ...\\n    <TERM> ...\\n    <PREFIXTERM> ...\\n    <WILDTERM> ...\\n    <REGEXPTERM> ...\\n    \\\"[\\\" ...\\n    \\\"{\\\" ...\\n    <NUMBER> ...\\n    <TERM> ...\\n    \",\"caused_by\":{\"type\":\"parse_exception\",\"reason\":\"Encountered \\\"<EOF>\\\" at line 1, column 6.\\nWas expecting one of:\\n    <NOT> ...\\n    \\\"+\\\" ...\\n    \\\"-\\\" ...\\n    <BAREOPER> ...\\n    \\\"(\\\" ...\\n    \\\"*\\\" ...\\n    <QUOTED> ...\\n    <TERM> ...\\n    <PREFIXTERM> ...\\n    <WILDTERM> ...\\n    <REGEXPTERM> ...\\n    \\\"[\\\" ...\\n    \\\"{\\\" ...\\n    <NUMBER> ...\\n    <TERM> ...\\n    \"}}}}]},\"status\":400},{\"error\":{\"root_cause\":[{\"type\":\"query_shard_exception\",\"reason\":\"Failed to parse query [heart(]\",\"index_uuid\":\"FqZfR415QIuajKOY32gXYg\",\"index\":\"image\"}],\"type\":\"search_phase_execution_exception\",\"reason\":\"all shards failed\",\"phase\":\"query\",\"grouped\":true,\"failed_shards\":[{\"shard\":0,\"index\":\"image\",\"node\":\"X6uClAg5SimP2fxx3L872g\",\"reason\":{\"type\":\"query_shard_exception\",\"reason\":\"Failed to parse query [heart(]\",\"index_uuid\":\"FqZfR415QIuajKOY32gXYg\",\"index\":\"image\",\"caused_by\":{\"type\":\"parse_exception\",\"reason\":\"Cannot parse 'heart(': Encountered \\\"<EOF>\\\" at line 1, column 6.\\nWas expecting one of:\\n    <NOT> ...\\n    \\\"+\\\" ...\\n    \\\"-\\\" ...\\n    <BAREOPER> ...\\n    \\\"(\\\" ...\\n    \\\"*\\\" ...\\n    <QUOTED> ...\\n    <TERM> ...\\n    <PREFIXTERM> ...\\n    <WILDTERM> ...\\n    <REGEXPTERM> ...\\n    \\\"[\\\" ...\\n    \\\"{\\\" ...\\n    <NUMBER> ...\\n    <TERM> ...\\n    \",\"caused_by\":{\"type\":\"parse_exception\",\"reason\":\"Encountered \\\"<EOF>\\\" at line 1, column 6.\\nWas expecting one of:\\n    <NOT> ...\\n    \\\"+\\\" ...\\n    \\\"-\\\" ...\\n    <BAREOPER> ...\\n    \\\"(\\\" ...\\n    \\\"*\\\" ...\\n    <QUOTED> ...\\n    <TERM> ...\\n    <PREFIXTERM> ...\\n    <WILDTERM> ...\\n    <REGEXPTERM> ...\\n    \\\"[\\\" ...\\n    \\\"{\\\" ...\\n    <NUMBER> ...\\n    <TERM> ...\\n    \"}}}}]},\"status\":400},{\"error\":{\"root_cause\":[{\"type\":\"query_shard_exception\",\"reason\":\"Failed to parse query [heart(]\",\"index_uuid\":\"FqZfR415QIuajKOY32gXYg\",\"index\":\"image\"}],\"type\":\"search_phase_execution_exception\",\"reason\":\"all shards failed\",\"phase\":\"query\",\"grouped\":true,\"failed_shards\":[{\"shard\":0,\"index\":\"image\",\"node\":\"X6uClAg5SimP2fxx3L872g\",\"reason\":{\"type\":\"query_shard_exception\",\"reason\":\"Failed to parse query [heart(]\",\"index_uuid\":\"FqZfR415QIuajKOY32gXYg\",\"index\":\"image\",\"caused_by\":{\"type\":\"parse_exception\",\"reason\":\"Cannot parse 'heart(': Encountered \\\"<EOF>\\\" at line 1, column 6.\\nWas expecting one of:\\n    <NOT> ...\\n    \\\"+\\\" ...\\n    \\\"-\\\" ...\\n    <BAREOPER> ...\\n    \\\"(\\\" ...\\n    \\\"*\\\" ...\\n    <QUOTED> ...\\n    <TERM> ...\\n    <PREFIXTERM> ...\\n    <WILDTERM> ...\\n    <REGEXPTERM> ...\\n    \\\"[\\\" ...\\n    \\\"{\\\" ...\\n    <NUMBER> ...\\n    <TERM> ...\\n    \",\"caused_by\":{\"type\":\"parse_exception\",\"reason\":\"Encountered \\\"<EOF>\\\" at line 1, column 6.\\nWas expecting one of:\\n    <NOT> ...\\n    \\\"+\\\" ...\\n    \\\"-\\\" ...\\n    <BAREOPER> ...\\n    \\\"(\\\" ...\\n    \\\"*\\\" ...\\n    <QUOTED> ...\\n    <TERM> ...\\n    <PREFIXTERM> ...\\n    <WILDTERM> ...\\n    <REGEXPTERM> ...\\n    \\\"[\\\" ...\\n    \\\"{\\\" ...\\n    <NUMBER> ...\\n    <TERM> ...\\n    \"}}}}]},\"status\":400}]}\r\n```\r\nAny ideas?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/483764666","html_url":"https://github.com/elastic/elasticsearch/issues/41223#issuecomment-483764666","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41223","id":483764666,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Mzc2NDY2Ng==","user":{"login":"danielsnider","id":1737560,"node_id":"MDQ6VXNlcjE3Mzc1NjA=","avatar_url":"https://avatars0.githubusercontent.com/u/1737560?v=4","gravatar_id":"","url":"https://api.github.com/users/danielsnider","html_url":"https://github.com/danielsnider","followers_url":"https://api.github.com/users/danielsnider/followers","following_url":"https://api.github.com/users/danielsnider/following{/other_user}","gists_url":"https://api.github.com/users/danielsnider/gists{/gist_id}","starred_url":"https://api.github.com/users/danielsnider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielsnider/subscriptions","organizations_url":"https://api.github.com/users/danielsnider/orgs","repos_url":"https://api.github.com/users/danielsnider/repos","events_url":"https://api.github.com/users/danielsnider/events{/privacy}","received_events_url":"https://api.github.com/users/danielsnider/received_events","type":"User","site_admin":false},"created_at":"2019-04-16T17:15:54Z","updated_at":"2019-04-16T17:16:23Z","author_association":"NONE","body":"Same problem on both my laptop and production server. I can see in the elasticsearch log that the setting is getting set, but it's still not working.\r\n```\r\n[2019-04-16T17:14:02,049][INFO ][o.e.c.s.ClusterSettings  ] [1D5Dwct] updating [search.default_allow_partial_results] from [true] to [false]\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/483767294","html_url":"https://github.com/elastic/elasticsearch/issues/41223#issuecomment-483767294","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41223","id":483767294,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Mzc2NzI5NA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2019-04-16T17:23:13Z","updated_at":"2019-04-16T17:23:13Z","author_association":"MEMBER","body":"Ok I understand now, this is because you look at the status of the `_msearch` response. As you can see in the response array, the statuses for the internal requests are all set to `400`. We discussed [here](https://github.com/elastic/elasticsearch/issues/29169#issuecomment-374781738) if we should convey the error status from the internal responses to the main `_msearch` response but agreed that we should keep the current behavior of returning an error only if the parsing of the `_msearch` fails and not if the actual parsing of the internal queries failed in shards. We have the mechanism for `_bulk` queries where it is required to check the status of the individual requests to find the errors.\r\n\r\n> This is a major blocker for me.\r\n\r\nCan you explain why ? The errors are correctly reported in the response. Also note that setting `search.default_allow_partial_results`  has nothing to do with this behavior. If query parsing fails on all shards, the response for the individual request will always be a `400`.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/483773976","html_url":"https://github.com/elastic/elasticsearch/issues/41223#issuecomment-483773976","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41223","id":483773976,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Mzc3Mzk3Ng==","user":{"login":"danielsnider","id":1737560,"node_id":"MDQ6VXNlcjE3Mzc1NjA=","avatar_url":"https://avatars0.githubusercontent.com/u/1737560?v=4","gravatar_id":"","url":"https://api.github.com/users/danielsnider","html_url":"https://github.com/danielsnider","followers_url":"https://api.github.com/users/danielsnider/followers","following_url":"https://api.github.com/users/danielsnider/following{/other_user}","gists_url":"https://api.github.com/users/danielsnider/gists{/gist_id}","starred_url":"https://api.github.com/users/danielsnider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielsnider/subscriptions","organizations_url":"https://api.github.com/users/danielsnider/orgs","repos_url":"https://api.github.com/users/danielsnider/repos","events_url":"https://api.github.com/users/danielsnider/events{/privacy}","received_events_url":"https://api.github.com/users/danielsnider/received_events","type":"User","site_admin":false},"created_at":"2019-04-16T17:42:20Z","updated_at":"2019-04-16T17:42:40Z","author_association":"NONE","body":"Crazy, so there's no way option to get an error HTTP status even when the response body is full of `400`? \r\nThis is a major blocker for me because these errors then do not bubble up to users, they see a loading screen forever. The tool I build on [ReactiveSearch](https://opensource.appbase.io/reactive-manual/getting-started/reactivesearch.html) doesn't know what to do when it gets a `200` HTTP response who's body is all errors and no data. Could there be another setting? Standards say that `200` means \"the response will contain an entity corresponding to the requested resource\" and ElasticSearch is not behaving that way.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/483781447","html_url":"https://github.com/elastic/elasticsearch/issues/41223#issuecomment-483781447","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41223","id":483781447,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Mzc4MTQ0Nw==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2019-04-16T18:02:26Z","updated_at":"2019-04-16T18:03:02Z","author_association":"MEMBER","body":"Well the arguments why we return a `200` are all in the issue I linked. Your example is simple because you have the same query repeated multiple times but what should be the behavior if you have different types of errors in the response ? The reasoning for returning a `200` is that the problem is not on the `_msearch` but on the individual requests, you'd get an error if the `_msearch` query is malformed or if the dispatching of the queries failed in some way.\r\nI hope you don't mind if I close this issue as a duplicate of https://github.com/elastic/elasticsearch/issues/29169 and don't hesitate to add your thoughts there if you have counter arguments to the ones already exposed. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/483786370","html_url":"https://github.com/elastic/elasticsearch/issues/41223#issuecomment-483786370","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41223","id":483786370,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Mzc4NjM3MA==","user":{"login":"danielsnider","id":1737560,"node_id":"MDQ6VXNlcjE3Mzc1NjA=","avatar_url":"https://avatars0.githubusercontent.com/u/1737560?v=4","gravatar_id":"","url":"https://api.github.com/users/danielsnider","html_url":"https://github.com/danielsnider","followers_url":"https://api.github.com/users/danielsnider/followers","following_url":"https://api.github.com/users/danielsnider/following{/other_user}","gists_url":"https://api.github.com/users/danielsnider/gists{/gist_id}","starred_url":"https://api.github.com/users/danielsnider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielsnider/subscriptions","organizations_url":"https://api.github.com/users/danielsnider/orgs","repos_url":"https://api.github.com/users/danielsnider/repos","events_url":"https://api.github.com/users/danielsnider/events{/privacy}","received_events_url":"https://api.github.com/users/danielsnider/received_events","type":"User","site_admin":false},"created_at":"2019-04-16T18:16:03Z","updated_at":"2019-04-16T18:16:03Z","author_association":"NONE","body":"Thanks for helping me!! ❤\r\n\r\nI agree with your explanation. I still think a new option would be very useful to enable an HTTP error status if any query had an error in a `_msearch`. ElasticSearch is breaking the HTTP standard! 🤮\r\n\r\n\r\n","performed_via_github_app":null}]