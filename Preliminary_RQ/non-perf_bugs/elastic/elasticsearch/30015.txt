{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/30015","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30015/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30015/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30015/events","html_url":"https://github.com/elastic/elasticsearch/issues/30015","id":317453901,"node_id":"MDU6SXNzdWUzMTc0NTM5MDE=","number":30015,"title":"[CI ] DeleteExpiredDataIT testDeleteExpiredData test failure","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"labels":[{"id":912833043,"node_id":"MDU6TGFiZWw5MTI4MzMwNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:ml","name":":ml","color":"0e8a16","default":false,"description":"Machine learning"},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-04-24T07:45:08Z","updated_at":"2018-07-12T13:46:35Z","closed_at":"2018-07-12T13:46:35Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"*Original comment by @jkakavas:*\n\nReproduce with \r\n```\r\ngradlew :x-pack-elasticsearch:qa:ml-native-tests:integTestRunner \\\r\n  -Dtests.seed=4DF11414AD08261F \\\r\n  -Dtests.class=org.elasticsearch.xpack.ml.integration.DeleteExpiredDataIT \\\r\n  -Dtests.method=\"testDeleteExpiredData\" \\\r\n  -Dtests.security.manager=true \\\r\n  -Dtests.locale=mk-MK \\\r\n  -Dtests.timezone=Pacific/Kwajalein\r\n```\r\n\r\nStacktrace\r\n```\r\n04:17:55 ERROR   22.7s | DeleteExpiredDataIT.testDeleteExpiredData <<< FAILURES!\r\n04:17:55    > Throwable LINK REDACTED: ElasticsearchStatusException[Cannot run forecast: Forecast cannot be executed as job requires data to have been processed and modeled]\r\n04:17:55    > \tat __randomizedtesting.SeedInfo.seed([4DF11414AD08261F:85BE39B8C4144B0D]:0)\r\n04:17:55    > \tat org.elasticsearch.xpack.core.ml.utils.ExceptionsHelper.badRequestException(ExceptionsHelper.java:59)\r\n04:17:55    > \tat org.elasticsearch.xpack.ml.action.TransportForecastJobAction.lambda$taskOperation$0(TransportForecastJobAction.java:99)\r\n04:17:55    > \tat org.elasticsearch.xpack.ml.job.persistence.JobProvider.lambda$getForecastRequestStats$34(JobProvider.java:1107)\r\n04:17:55    > \tat org.elasticsearch.xpack.ml.job.persistence.JobProvider.lambda$getResult$28(JobProvider.java:951)\r\n04:17:55    > \tat org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:60)\r\n04:17:55    > \tat org.elasticsearch.action.support.ContextPreservingActionListener.onResponse(ContextPreservingActionListener.java:43)\r\n04:17:55    > \tat org.elasticsearch.action.support.TransportAction$1.onResponse(TransportAction.java:85)\r\n04:17:55    > \tat org.elasticsearch.action.support.TransportAction$1.onResponse(TransportAction.java:81)\r\n04:17:55    > \tat org.elasticsearch.action.support.ContextPreservingActionListener.onResponse(ContextPreservingActionListener.java:43)\r\n04:17:55    > \tat org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction$2.handleResponse(TransportSingleShardAction.java:257)\r\n04:17:55    > \tat org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction$2.handleResponse(TransportSingleShardAction.java:243)\r\n04:17:55    > \tat org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleResponse(TransportService.java:1088)\r\n04:17:55    > \tat org.elasticsearch.transport.TransportService$DirectResponseChannel.processResponse(TransportService.java:1157)\r\n04:17:55    > \tat org.elasticsearch.transport.TransportService$DirectResponseChannel.sendResponse(TransportService.java:1147)\r\n04:17:55    > \tat org.elasticsearch.transport.TransportService$DirectResponseChannel.sendResponse(TransportService.java:1136)\r\n04:17:55    > \tat org.elasticsearch.transport.TaskTransportChannel.sendResponse(TaskTransportChannel.java:54)\r\n04:17:55    > \tat org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler$1.onResponse(TransportSingleShardAction.java:307)\r\n04:17:55    > \tat org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler$1.onResponse(TransportSingleShardAction.java:303)\r\n04:17:55    > \tat org.elasticsearch.action.get.TransportGetAction.asyncShardOperation(TransportGetAction.java:84)\r\n04:17:55    > \tat org.elasticsearch.action.get.TransportGetAction.asyncShardOperation(TransportGetAction.java:45)\r\n04:17:55    > \tat org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:303)\r\n04:17:55    > \tat org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:296)\r\n04:17:55    > \tat org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:30)\r\n04:17:55    > \tat org.elasticsearch.xpack.security.transport.SecurityServerTransportInterceptor$ProfileSecuredRequestHandler$1.doRun(SecurityServerTransportInterceptor.java:258)\r\n04:17:55    > \tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n04:17:55    > \tat org.elasticsearch.common.util.concurrent.EsExecutors$1.execute(EsExecutors.java:135)\r\n04:17:55    > \tat org.elasticsearch.xpack.security.transport.SecurityServerTransportInterceptor$ProfileSecuredRequestHandler.lambda$messageReceived$0(SecurityServerTransportInterceptor.java:307)\r\n04:17:55    > \tat org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:60)\r\n04:17:55    > \tat org.elasticsearch.xpack.security.transport.ServerTransportFilter$NodeProfile.lambda$inbound$2(ServerTransportFilter.java:160)\r\n04:17:55    > \tat org.elasticsearch.xpack.security.authz.AuthorizationUtils$AsyncAuthorizer.maybeRun(AuthorizationUtils.java:185)\r\n04:17:55    > \tat org.elasticsearch.xpack.security.authz.AuthorizationUtils$AsyncAuthorizer.setRunAsRoles(AuthorizationUtils.java:179)\r\n04:17:55    > \tat org.elasticsearch.xpack.security.authz.AuthorizationUtils$AsyncAuthorizer.authorize(AuthorizationUtils.java:167)\r\n04:17:55    > \tat org.elasticsearch.xpack.security.transport.ServerTransportFilter$NodeProfile.lambda$inbound$3(ServerTransportFilter.java:162)\r\n```","closed_by":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"performed_via_github_app":null}