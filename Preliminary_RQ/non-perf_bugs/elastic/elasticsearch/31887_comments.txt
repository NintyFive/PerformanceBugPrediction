[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/403380177","html_url":"https://github.com/elastic/elasticsearch/issues/31887#issuecomment-403380177","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31887","id":403380177,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMzM4MDE3Nw==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2018-07-09T07:04:20Z","updated_at":"2018-07-09T07:04:20Z","author_association":"MEMBER","body":"Here is a minimal reproduction for the scenario described above:\r\n\r\n```\r\ncurl -X PUT \"localhost:9200/products/_doc/1\" -H 'Content-Type: application/json' -d'\r\n{\r\n    \"product\" : \"Book\",\r\n    \"price\" : 1.0\r\n}\r\n'\r\n\r\ncurl -X GET \"localhost:9200/_search?pretty\" -H 'Content-Type: application/json' -d'\r\n{\r\n  \"query\": {\r\n    \"range\": {\r\n      \"price\": {\r\n        \"gt\": 2\r\n      }\r\n    }\r\n  },\r\n  \"size\": 0,\r\n  \"aggs\": {\r\n    \"prices\": {\r\n      \"terms\": {\r\n        \"field\": \"product.keyword\",\r\n        \"min_doc_count\": 0\r\n      },\r\n      \"aggs\": {\r\n        \"min_price\": {\r\n          \"min\": {\r\n            \"field\": \"price\"\r\n          }\r\n        },\r\n        \"sum_price\": {\r\n          \"sum\": {\r\n            \"field\": \"price\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n'\r\n```\r\n\r\nElasticsearch 6.3.0 produces (output shortened):\r\n\r\n```\r\n{\r\n  \"aggregations\" : {\r\n    \"prices\" : {\r\n      \"doc_count_error_upper_bound\" : 0,\r\n      \"sum_other_doc_count\" : 0,\r\n      \"buckets\" : [\r\n        {\r\n          \"key\" : \"Book\",\r\n          \"doc_count\" : 0,\r\n          \"min_price\" : {\r\n            \"value\" : null\r\n          },\r\n          \"sum_price\" : {\r\n            \"value\" : 0.0\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAs I am not sure whether this is intentional, can somebody in @elastic/es-search-aggs have a look and label it accordingly please?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/403465447","html_url":"https://github.com/elastic/elasticsearch/issues/31887#issuecomment-403465447","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31887","id":403465447,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMzQ2NTQ0Nw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-07-09T12:42:21Z","updated_at":"2018-07-09T12:42:21Z","author_association":"CONTRIBUTOR","body":"This is intentional: the sum of an empty set is well defined while the average is not (it is 0/0), likewise for min and max. I'd be curious to better understand what are the implications on the Kibana side.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/403467848","html_url":"https://github.com/elastic/elasticsearch/issues/31887#issuecomment-403467848","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31887","id":403467848,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMzQ2Nzg0OA==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2018-07-09T12:51:42Z","updated_at":"2018-07-09T12:51:42Z","author_association":"MEMBER","body":"Just a note for posterity, `value_count` and `cardinality` also return 0 for empty sets (zero values/distinct values in the set)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/403746823","html_url":"https://github.com/elastic/elasticsearch/issues/31887#issuecomment-403746823","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31887","id":403746823,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMzc0NjgyMw==","user":{"login":"guanghaofan","id":14012353,"node_id":"MDQ6VXNlcjE0MDEyMzUz","avatar_url":"https://avatars1.githubusercontent.com/u/14012353?v=4","gravatar_id":"","url":"https://api.github.com/users/guanghaofan","html_url":"https://github.com/guanghaofan","followers_url":"https://api.github.com/users/guanghaofan/followers","following_url":"https://api.github.com/users/guanghaofan/following{/other_user}","gists_url":"https://api.github.com/users/guanghaofan/gists{/gist_id}","starred_url":"https://api.github.com/users/guanghaofan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guanghaofan/subscriptions","organizations_url":"https://api.github.com/users/guanghaofan/orgs","repos_url":"https://api.github.com/users/guanghaofan/repos","events_url":"https://api.github.com/users/guanghaofan/events{/privacy}","received_events_url":"https://api.github.com/users/guanghaofan/received_events","type":"User","site_admin":false},"created_at":"2018-07-10T08:42:43Z","updated_at":"2018-07-10T08:42:43Z","author_association":"NONE","body":"@polyfractal \r\n**value_count** or **doc_count** is really different from Agg Type **sum**, sum can be 0, or positive and even a negative value. But **count** should be at least 0 and can not be null.\r\nPer my experience in Kibana, there's no any difference for the value '0' in the visualizations. that is, empty bucket data are mixed with valid data value '0' in the visualization. of course the Kibana developers can do somethings to differentiate the two kinds of value '0' since the filed 'doc_count' is always 0 in the empty bucket response, but still not yet. this is why I think you guys maybe need to discuss it with the **Kibana** developers!\r\n@jpountz \r\nthe sum agg is really easy to handle, but I think it's a special case if empty bucket. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/404839429","html_url":"https://github.com/elastic/elasticsearch/issues/31887#issuecomment-404839429","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31887","id":404839429,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNDgzOTQyOQ==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2018-07-13T13:50:46Z","updated_at":"2018-07-13T13:50:46Z","author_association":"MEMBER","body":"> value_count or doc_count is really different from Agg Type sum, sum can be 0, or positive and even a negative value. But count should be at least 0 and can not be null.\r\n\r\nThe main thing here is not the possible values that an agg can return, but rather how the agg handles the empty set / no document scenario.  `value_count`, `cardinality`, `doc_count` and `sum` are all similar in this regard: if the set is empty (no documents), their values are zero.  \r\n\r\n`avg` is different because the denominator is the number of values collected, so an empty set is `0 / 0` which is undefined.  As @jpountz mentioned, `min` and `max` are similar since you can't take the min/max of an empty set, so they are also undefined with no documents.\r\n\r\nThat's why Elasticsearch provides the values it does when the bucket is empty (`doc_count == 0`).  There's not much else we can do... we have to rely on the consumer (kibana, user applications, etc) to interpret the data correctly.\r\n\r\n> Per my experience in Kibana, there's no any difference for the value '0' in the visualizations. that is, empty bucket data are mixed with valid data value '0' in the visualization. of course the Kibana developers can do somethings to differentiate the two kinds of value '0' since the filed 'doc_count' is always 0 in the empty bucket response, but still not yet. \r\n\r\nYep, this is a known issue in Kibana (https://github.com/elastic/kibana/issues/13356).  It looks like the Kibana team just opened an issue independently to address this yesterday (https://github.com/elastic/kibana/issues/17717), so it appears there's a plan in motion.\r\n","performed_via_github_app":null}]