{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/29806","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29806/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29806/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29806/events","html_url":"https://github.com/elastic/elasticsearch/issues/29806","id":317448103,"node_id":"MDU6SXNzdWUzMTc0NDgxMDM=","number":29806,"title":"[CI] Failure in WatchBackwardsCompatibilityIT#testWatcherRestart ","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"labels":[{"id":912845062,"node_id":"MDU6TGFiZWw5MTI4NDUwNjI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Watcher","name":":Core/Features/Watcher","color":"0e8a16","default":false,"description":""},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"assignees":[{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2017-08-14T09:03:37Z","updated_at":"2018-06-08T10:42:17Z","closed_at":"2018-06-08T10:42:16Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"*Original comment by @cbuescher:*\n\nThere are several other open WatchBackwardsCompatibilityIT CI failures but this might be a different cause (at least thats what I think briefly looking at them). @spinscale can you confirm/mark as duplicate if this is already covered by one of the other open issues?\r\n\r\n* Build failure link: LINK REDACTED\r\n* Error message: \r\n```\r\n 1> [2017-08-14T15:25:46,553][INFO ][o.e.u.WatchBackwardsCompatibilityIT] [testWatcherRestart]: after test\r\nERROR   0.36s | WatchBackwardsCompatibilityIT.testWatcherRestart <<< FAILURES!\r\n   > Throwable LINK REDACTED: org.elasticsearch.client.ResponseException: POST http://127.0.0.1:35683_xpack/migration/upgrade/.watches?error_trace=true: HTTP/1.1 400 Bad Request\r\n   >  [copy_to] on mapping fields to create your own catch all field.\",\"stack_trace\":\"MapperParsingException[Failed to parse mapping [watch]: [_all] is disabled in 6.0. As a replacement, you can use an [copy_to] on mapping fields to create your own catch all field.]; nested: IllegalArgumentException[[_all] is disabled in 6.0. As a replacement, you can use an [copy_to] on mapping fields to create your own catch all field.];\\n\\tat org.elasticsearch.index.mapper.MapperService.internalMerge(MapperService.java:339)\\n\\tat org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:267)\\n\\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$1.execute(MetaDataCreateIndexService.java:402)\\n\\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)\\n\\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:640)\\n\\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:270)\\n\\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:195)\\n\\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:130)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:569)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:247)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:210)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\\n\\tat java.lang.Thread.run(Thread.java:748)\\nCaused by: java.lang.IllegalArgumentException: [_all] is disabled in 6.0. As a replacement, you can use an [copy_to] on mapping fields to create your own catch all field.\\n\\tat org.elasticsearch.index.mapper.AllFieldMapper$TypeParser.parse(AllFieldMapper.java:108)\\n\\tat org.elasticsearch.index.mapper.DocumentMapperParser.parse(DocumentMapperParser.java:126)\\n\\tat org.elasticsearch.index.mapper.DocumentMapperParser.parse(DocumentMapperParser.java:91)\\n\\tat org.elasticsearch.index.mapper.MapperService.internalMerge(MapperService.java:336)\\n\\t... 15 more\\n\"}],\"type\":\"mapper_parsing_exception\",\"reason\":\"Failed to parse mapping [watch]: [_all] is disabled in 6.0. As a replacement, you can use an [copy_to] on mapping fields to create your own catch all field.\",\"caused_by\":{\"type\":\"illegal_argument_exception\",\"reason\":\"[_all] is disabled in 6.0. As a replacement, you can use an [copy_to] on mapping fields to create your own catch all field.\",\"stack_trace\":\"java.lang.IllegalArgumentException: [_all] is disabled in 6.0. As a replacement, you can use an [copy_to] on mapping fields to create your own catch all field.\\n\\tat org.elasticsearch.index.mapper.AllFieldMapper$TypeParser.parse(AllFieldMapper.java:108)\\n\\tat org.elasticsearch.index.mapper.DocumentMapperParser.parse(DocumentMapperParser.java:126)\\n\\tat org.elasticsearch.index.mapper.DocumentMapperParser.parse(DocumentMapperParser.java:91)\\n\\tat org.elasticsearch.index.mapper.MapperService.internalMerge(MapperService.java:336)\\n\\tat org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:267)\\n\\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$1.execute(MetaDataCreateIndexService.java:402)\\n\\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdaetadata.MetaDataCreateIndexService$1.execute(MetaDataCreateIndexService.java:402)\\n\\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)\\n\\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:640)\\n\\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:270)\\n\\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:195)\\n\\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:130)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:569)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:247)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:210)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\"},\"stack_trace\":\"MapperParsingException[Failed to parse mapping [watch]: [_all] is disabled in 6.0. As a replacement, you can use an [copy_to] on mapping fields to create your own catch all field.]; nested: IllegalArgumentException[[_all] is disabled in 6.0. As a replacement, you can use an [copy_to] on mapping fields to create your own catch all field.];\\n\\tat org.elasticsearch.index.mapper.MapperService.internalMerge(MapperService.java:339)\\n\\tat org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:267)\\n\\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$1.execute(MetaDataCreateIndexService.java:402)\\n\\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)\\n\\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:640)\\n\\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:270)\\n\\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:195)\\n\\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:130)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:569)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:247)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:210)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\\n\\tat java.lang.Thread.run(Thread.java:748)\\nCaused by: java.lang.IllegalArgumentException: [_all] is disabled in 6.0. As a replacement, you can use an [copy_to] on mapping fields to create your own catch all field.\\n\\tat org.elasticsearch.index.mapper.AllFieldMapper$TypeParser.parse(AllFieldMapper.java:108)\\n\\tat org.elasticsearch.index.mapper.DocumentMapperParser.parse(DocumentMapperParser.java:126)\\n\\tat org.elasticsearch.index.mapper.DocumentMapperParser.parse(DocumentMapperParser.java:91)\\n\\tat org.elasticsearch.index.mapper.MapperService.internalMerge(MapperService.java:336)\\n\\t... 15 more\\n\"},\"status\":400}\r\n   > \tat __randomizedtesting.SeedInfo.seed([B5B0F6FF6F9D3101:20E8F8702481E858]:0)\r\n   > \tat org.elasticsearch.client.RestClient$1.completed(RestClient.java:354)\r\n   > \tat org.elasticsearch.client.RestClient$1.completed(RestClient.java:343)\r\n   > \tat org.elasticsearch.client.http.concurrent.BasicFuture.completed(BasicFuture.java:119)\r\n   > \tat org.elasticsearch.client.http.impl.nio.client.DefaultClientExchangeHandlerImpl.responseCompleted(DefaultClientExchangeHandlerImpl.java:177)\r\n   > \tat org.elasticsearch.client.http.nio.protocol.HttpAsyncRequestExecutor.processResponse(HttpAsyncRequestExecutor.java:436)\r\n   > \tat org.elasticsearch.client.http.nio.protocol.HttpAsyncRequestExecutor.inputReady(HttpAsyncRequestExecutor.java:326)\r\n   > \tat org.elasticsearch.client.http.impl.nio.DefaultNHttpClientConnection.consumeInput(DefaultNHttpClientConnection.java:265)\r\n   > \tat org.elasticsearch.client.http.impl.nio.client.InternalIODispatch.onInputReady(InternalIODispatch.java:81)\r\n   > \tat org.elasticsearch.client.http.impl.nio.client.InternalIODispatch.onInputReady(InternalIODispatch.java:39)\r\n   > \tat org.elasticsearch.client.http.impl.nio.reactor.AbstractIODispatch.inputReady(AbstractIODispatch.java:114)\r\n   > \tat org.elasticsearch.client.http.impl.nio.reactor.BaseIOReactor.readable(BaseIOReactor.java:162)\r\n   > \tat org.elasticsearch.client.http.impl.nio.reactor.AbstractIOReactor.processEvent(AbstractIOReactor.java:337)\r\n   > \tat org.elasticsearch.client.http.impl.nio.reactor.AbstractIOReactor.processEvents(AbstractIOReactor.java:315)\r\n   > \tat org.elasticsearch.client.http.impl.nio.reactor.AbstractIOReactor.execute(AbstractIOReactor.java:276)\r\n   > \tat org.elasticsearch.client.http.impl.nio.reactor.BaseIOReactor.execute(BaseIOReactor.java:104)\r\n   > \tat org.elasticsearch.client.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker.run(AbstractMultiworkerIOReactor.java:588)\r\n```\r\n\r\n* Reproduction line: \r\n  * gradle :x-pack-elasticsearch:qa:rolling-upgrade:with-system-key:v5.6.0-SNAPSHOT#upgradedClusterTestRunner -Dtests.seed=B5B0F6FF6F9D3101 -Dtests.class=org.elasticsearch.upgrades.WatchBackwardsCompatibilityIT -Dtests.method=\"testWatcherRestart\" -Dtests.security.manager=true -Dtests.locale=en-GB -Dtests.timezone=Asia/Ujung_Pandang (Could not reproduce locally)\r\n\r\n","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}