[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/275054745","html_url":"https://github.com/elastic/elasticsearch/issues/21135#issuecomment-275054745","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21135","id":275054745,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NTA1NDc0NQ==","user":{"login":"cyrilleverrier","id":16701739,"node_id":"MDQ6VXNlcjE2NzAxNzM5","avatar_url":"https://avatars2.githubusercontent.com/u/16701739?v=4","gravatar_id":"","url":"https://api.github.com/users/cyrilleverrier","html_url":"https://github.com/cyrilleverrier","followers_url":"https://api.github.com/users/cyrilleverrier/followers","following_url":"https://api.github.com/users/cyrilleverrier/following{/other_user}","gists_url":"https://api.github.com/users/cyrilleverrier/gists{/gist_id}","starred_url":"https://api.github.com/users/cyrilleverrier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cyrilleverrier/subscriptions","organizations_url":"https://api.github.com/users/cyrilleverrier/orgs","repos_url":"https://api.github.com/users/cyrilleverrier/repos","events_url":"https://api.github.com/users/cyrilleverrier/events{/privacy}","received_events_url":"https://api.github.com/users/cyrilleverrier/received_events","type":"User","site_admin":false},"created_at":"2017-01-25T09:06:18Z","updated_at":"2017-01-25T10:09:06Z","author_association":"NONE","body":"I am very interested in this feature.\r\n\r\nUse case: considering many sensors that send a numeric metric (@timestamp + key/value pair)\r\nI want to get a sorted list of the top 10 sensors based on their latest value by @timestamp\r\n\r\n```\r\nPOST mybeat/metrics/\r\n{\r\n  \"@timestamp\": \"2017-01-25T08:00:00.000Z\",\r\n  \"sensorID\": \"Sensor1\",\r\n  \"my_data\": 10\r\n}\r\n\r\nPOST mybeat/metrics/\r\n{\r\n  \"@timestamp\": \"2017-01-25T08:00:00.000Z\",\r\n  \"sensorID\": \"Sensor2\",\r\n  \"my_data\": 20\r\n}\r\n\r\nPOST mybeat/metrics/\r\n{\r\n  \"@timestamp\": \"2017-01-25T08:10:00.000Z\",\r\n  \"sensorID\": \"Sensor1\",\r\n  \"my_data\": 1\r\n}\r\n\r\nPOST mybeat/metrics/\r\n{\r\n  \"@timestamp\": \"2017-01-25T08:10:00.000Z\",\r\n  \"sensorID\": \"Sensor2\",\r\n  \"my_data\": 2\r\n}\r\n\r\nPOST mybeat/metrics/_search?filter_path=aggregations\r\n{\r\n  \"aggregations\": {\r\n    \"BY_SENSOR\": {\r\n      \"terms\": {\r\n        \"field\": \"sensorID.keyword\"\r\n      },\r\n      \"aggregations\": {\r\n        \"LATEST_TIMESTAMP\": {\r\n          \"terms\": {\r\n            \"field\": \"@timestamp\",\r\n            \"order\": {\r\n              \"_term\": \"desc\"\r\n            },\r\n            \"size\": 1\r\n          },\r\n          \"aggregations\": {\r\n            \"LATEST_VALUE\": {\r\n              \"avg\": {\r\n                \"field\": \"my_data\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\nThe search returns the following result:\r\n```\r\n{\r\n  \"aggregations\": {\r\n    \"BY_SENSOR\": {\r\n      \"doc_count_error_upper_bound\": 0,\r\n      \"sum_other_doc_count\": 0,\r\n      \"buckets\": [\r\n        {\r\n          \"key\": \"Sensor1\",\r\n          \"doc_count\": 2,\r\n          \"LATEST_TIMESTAMP\": {\r\n            \"doc_count_error_upper_bound\": 0,\r\n            \"sum_other_doc_count\": 1,\r\n            \"buckets\": [\r\n              {\r\n                \"key\": 1485331800000,\r\n                \"key_as_string\": \"2017-01-25T08:10:00.000Z\",\r\n                \"doc_count\": 1,\r\n                \"LATEST_VALUE\": {\r\n                  \"value\": 1\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        {\r\n          \"key\": \"Sensor2\",\r\n          \"doc_count\": 2,\r\n          \"LATEST_TIMESTAMP\": {\r\n            \"doc_count_error_upper_bound\": 0,\r\n            \"sum_other_doc_count\": 1,\r\n            \"buckets\": [\r\n              {\r\n                \"key\": 1485331800000,\r\n                \"key_as_string\": \"2017-01-25T08:10:00.000Z\",\r\n                \"doc_count\": 1,\r\n                \"LATEST_VALUE\": {\r\n                  \"value\": 2\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nI want to perform a \"top_hits\" aggregations on \"BY_SENSOR>LATEST_TIMESTAMP>LATEST_VALUE\".\r\n\r\nAny know solution but to do it in the application code?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/373318169","html_url":"https://github.com/elastic/elasticsearch/issues/21135#issuecomment-373318169","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21135","id":373318169,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MzMxODE2OQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2018-03-15T09:45:47Z","updated_at":"2018-03-15T09:45:47Z","author_association":"CONTRIBUTOR","body":"@cyrilleverrier that sounds like a question for the [discuss forums ](https://discuss.elastic.co/c/elasticsearch)  and not the same topic as the original question.\r\n\r\n@veesahni are you still in need of this feature? We haven't come across many people with this sort of requirement. I'm not sure what the 300 filters represent and who maintains them but obviously if they were instead applied on ingest e.g. defined as tagging rules in [percolator](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-percolate-query.html) then  you'd have tokens in your index which would be more efficient to aggregate on and you could use the `terms` aggregation with size 5 to prune the aggregation tree.\r\nThe \"filters-trimming\" feature sounds plausible but I'm just not sure how big the need is for this.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/373369631","html_url":"https://github.com/elastic/elasticsearch/issues/21135#issuecomment-373369631","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21135","id":373369631,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MzM2OTYzMQ==","user":{"login":"veesahni","id":705483,"node_id":"MDQ6VXNlcjcwNTQ4Mw==","avatar_url":"https://avatars0.githubusercontent.com/u/705483?v=4","gravatar_id":"","url":"https://api.github.com/users/veesahni","html_url":"https://github.com/veesahni","followers_url":"https://api.github.com/users/veesahni/followers","following_url":"https://api.github.com/users/veesahni/following{/other_user}","gists_url":"https://api.github.com/users/veesahni/gists{/gist_id}","starred_url":"https://api.github.com/users/veesahni/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/veesahni/subscriptions","organizations_url":"https://api.github.com/users/veesahni/orgs","repos_url":"https://api.github.com/users/veesahni/repos","events_url":"https://api.github.com/users/veesahni/events{/privacy}","received_events_url":"https://api.github.com/users/veesahni/received_events","type":"User","site_admin":false},"created_at":"2018-03-15T13:08:17Z","updated_at":"2018-03-15T13:08:17Z","author_association":"NONE","body":"@markharwood yes, still need this one.\r\n\r\nWe have a bayes classifier implemented on top of ES.  We index a bunch of documents that contain a large text body field (i.e. lots of tokens) and other metadata fields that are used for filtering.  Then, given N words (decided on the fly), the client retrieves the number of docs where the words appear in the body field (i.e. each turns into a separate term filter based agg and we extract the doc_count).  It then throws away all except the top M (i.e. those with the highest doc counts) for further calculations.\r\n\r\nA percolator would require every possible word to have a filter defined in advance (or on the fly) - don't think that would be practical.\r\n\r\nA top-N filter would minimize what ES needs to stream between nodes and to the client.  It would be a similar optimisation to how a top_hits works, but with a custom underlying calculation (i.e. agg).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/373646845","html_url":"https://github.com/elastic/elasticsearch/issues/21135#issuecomment-373646845","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21135","id":373646845,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MzY0Njg0NQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2018-03-16T09:00:17Z","updated_at":"2018-03-16T09:00:17Z","author_association":"CONTRIBUTOR","body":"If you're doing this sort of text analysis have you considered using the [significant text ](https://www.elastic.co/guide/en/elasticsearch/reference/master/search-aggregations-bucket-significanttext-aggregation.html)aggregation? Some of the features that can help:\r\n\r\n1) Works with the sampler aggregation to analyze only the highest-scored docs.\r\n2) Works with a diversified-sampler aggregation to avoid samples being skewed from any one source e.g. no more than N articles from any one news source\r\n3) Can [remove noise from duplicate sections of text ](https://youtu.be/zH7bizwjj20)from the statistical analysis \r\n4) Returns per-term stats for both result set and corpus-level doc frequencies.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/373804313","html_url":"https://github.com/elastic/elasticsearch/issues/21135#issuecomment-373804313","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21135","id":373804313,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MzgwNDMxMw==","user":{"login":"veesahni","id":705483,"node_id":"MDQ6VXNlcjcwNTQ4Mw==","avatar_url":"https://avatars0.githubusercontent.com/u/705483?v=4","gravatar_id":"","url":"https://api.github.com/users/veesahni","html_url":"https://github.com/veesahni","followers_url":"https://api.github.com/users/veesahni/followers","following_url":"https://api.github.com/users/veesahni/following{/other_user}","gists_url":"https://api.github.com/users/veesahni/gists{/gist_id}","starred_url":"https://api.github.com/users/veesahni/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/veesahni/subscriptions","organizations_url":"https://api.github.com/users/veesahni/orgs","repos_url":"https://api.github.com/users/veesahni/repos","events_url":"https://api.github.com/users/veesahni/events{/privacy}","received_events_url":"https://api.github.com/users/veesahni/received_events","type":"User","site_admin":false},"created_at":"2018-03-16T18:27:38Z","updated_at":"2018-03-16T18:27:38Z","author_association":"NONE","body":"A sampler of some kind could be used to speed things up at the cost of some accuracy.\r\n\r\nWe haven't experimented with the significant text aggregation.  Although it's not directly helpful in this case, it's application would be interesting in building a classifier.\r\n\r\nThanks for the tips!  Today, we keep things reasonably fast by limiting the docs that need to be queried.  Ultimately, it would be ideal to be able to further speed things up while retaining accuracy.  This is what the feature request would enable.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/374258835","html_url":"https://github.com/elastic/elasticsearch/issues/21135#issuecomment-374258835","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21135","id":374258835,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NDI1ODgzNQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2018-03-19T15:43:51Z","updated_at":"2018-03-19T15:44:11Z","author_association":"CONTRIBUTOR","body":"I guess what's unusual about this scenario is that ordinarily the need to \"trim\" results is related to aggregations that promote discovery e.g. a `terms` agg on a field may be used to discover previously unknown actors (e.g. find the top 50 customer accounts) and it is necessary to trim the potentially millions of candidates.\r\nIn the case of the `filters` agg, the client must provide known filter definitions up-front and these definitely do not measure in the millions which is why we've not seen a big demand for pruning of these filter results. I'm trying to gauge if this request is more about reducing network overheads (how big are the results under each bucket?) or just simplifying your client's code.\r\n\r\ncc @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/374304862","html_url":"https://github.com/elastic/elasticsearch/issues/21135#issuecomment-374304862","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21135","id":374304862,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NDMwNDg2Mg==","user":{"login":"veesahni","id":705483,"node_id":"MDQ6VXNlcjcwNTQ4Mw==","avatar_url":"https://avatars0.githubusercontent.com/u/705483?v=4","gravatar_id":"","url":"https://api.github.com/users/veesahni","html_url":"https://github.com/veesahni","followers_url":"https://api.github.com/users/veesahni/followers","following_url":"https://api.github.com/users/veesahni/following{/other_user}","gists_url":"https://api.github.com/users/veesahni/gists{/gist_id}","starred_url":"https://api.github.com/users/veesahni/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/veesahni/subscriptions","organizations_url":"https://api.github.com/users/veesahni/orgs","repos_url":"https://api.github.com/users/veesahni/repos","events_url":"https://api.github.com/users/veesahni/events{/privacy}","received_events_url":"https://api.github.com/users/veesahni/received_events","type":"User","site_admin":false},"created_at":"2018-03-19T17:50:11Z","updated_at":"2018-03-19T17:51:22Z","author_association":"NONE","body":"I agree with your assessment as to why you don't see this requested much.\r\n\r\nWe're leveraging ES's parallel querying capabilities to implement an algorithm.  The results under each bucket are minimal (we just need doc counts).  The client code to handle the filtering isn't that complex (in a modern language, it doesn't take much to sort and filter hundreds of buckets).  Accordingly, we implement the filtering in the client today.  The added cost is some network overhead to bring the data to the client and all the processing done at the client location.\r\n\r\nWith the requested feature implemented, each ES node would need to only send it's top results, which would furthered be filtered before sending to the client.  The computational effort of filtering would be spread across the physical nodes and network communication would also be minimised.  Thus, my expectation is to see an overall improvement in query times.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/374308920","html_url":"https://github.com/elastic/elasticsearch/issues/21135#issuecomment-374308920","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21135","id":374308920,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NDMwODkyMA==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2018-03-19T18:01:59Z","updated_at":"2018-03-19T18:01:59Z","author_association":"MEMBER","body":"This feature has been added in https://github.com/elastic/elasticsearch/pull/27152 and is available in version 6.1 onwards","performed_via_github_app":null}]