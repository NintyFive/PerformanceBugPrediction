[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/196232666","html_url":"https://github.com/elastic/elasticsearch/issues/17045#issuecomment-196232666","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17045","id":196232666,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NjIzMjY2Ng==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-03-14T09:57:06Z","updated_at":"2016-03-14T09:57:06Z","author_association":"CONTRIBUTOR","body":"Hi @basiclaser \n\nWhat you are suggesting looks easy, but when you are working with the full query DSL it soon becomes complex.  A fuzzy query might return thousands of terms. Which ones do you choose to return to the user?  How do you apply the logic of the bool query to what is returned.\n\nWhy do you say that the suggesters are limited here?  The phrase suggester seems like just the thing you need.  It handles fuzziness, but more importantly it finds the best **related** terms.  \n\nPerhaps what you're looking for instead is a form of query expansion, eg: do a query, get the top 5 matching docs, retrieve the most interesting terms from those docs then rerun the query with those terms?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/196989543","html_url":"https://github.com/elastic/elasticsearch/issues/17045#issuecomment-196989543","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17045","id":196989543,"node_id":"MDEyOklzc3VlQ29tbWVudDE5Njk4OTU0Mw==","user":{"login":"basiclaser","id":3663537,"node_id":"MDQ6VXNlcjM2NjM1Mzc=","avatar_url":"https://avatars1.githubusercontent.com/u/3663537?v=4","gravatar_id":"","url":"https://api.github.com/users/basiclaser","html_url":"https://github.com/basiclaser","followers_url":"https://api.github.com/users/basiclaser/followers","following_url":"https://api.github.com/users/basiclaser/following{/other_user}","gists_url":"https://api.github.com/users/basiclaser/gists{/gist_id}","starred_url":"https://api.github.com/users/basiclaser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/basiclaser/subscriptions","organizations_url":"https://api.github.com/users/basiclaser/orgs","repos_url":"https://api.github.com/users/basiclaser/repos","events_url":"https://api.github.com/users/basiclaser/events{/privacy}","received_events_url":"https://api.github.com/users/basiclaser/received_events","type":"User","site_admin":false},"created_at":"2016-03-15T19:40:27Z","updated_at":"2016-03-15T19:40:27Z","author_association":"NONE","body":"Hi clinton, thanks for your advice and ponderings. \nI can clarify that I definitely do want whichever terms match my query. I appreciate that this _could_ be achieved by extracting the relevant terms from the document but that feels a bit like climbing through a window to open a door. I'd rather just open the door. \n\nIn my particular use-case there is no fuzziness, though I feel that this feature should be an available feature for whatever type of query. \n\nElasticsearch is after all an analytics engine too, right? If somebody is looking to use ES as a means of analysing and returning terms, should that not simply be available? To not provide it, I think, limits the way people think about Elasticsearch.\nWould you happen to know if this functionality is available in Lucene? If there is some technical limitation preventing this feature I'd love to hear about it too. \n\nThanks again!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/354651485","html_url":"https://github.com/elastic/elasticsearch/issues/17045#issuecomment-354651485","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17045","id":354651485,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDY1MTQ4NQ==","user":{"login":"bkazez","id":64005,"node_id":"MDQ6VXNlcjY0MDA1","avatar_url":"https://avatars2.githubusercontent.com/u/64005?v=4","gravatar_id":"","url":"https://api.github.com/users/bkazez","html_url":"https://github.com/bkazez","followers_url":"https://api.github.com/users/bkazez/followers","following_url":"https://api.github.com/users/bkazez/following{/other_user}","gists_url":"https://api.github.com/users/bkazez/gists{/gist_id}","starred_url":"https://api.github.com/users/bkazez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bkazez/subscriptions","organizations_url":"https://api.github.com/users/bkazez/orgs","repos_url":"https://api.github.com/users/bkazez/repos","events_url":"https://api.github.com/users/bkazez/events{/privacy}","received_events_url":"https://api.github.com/users/bkazez/received_events","type":"User","site_admin":false},"created_at":"2018-01-01T12:42:46Z","updated_at":"2018-01-01T12:42:46Z","author_association":"NONE","body":"I'd find this very useful as well. It opens the door to all kinds of analysis to help with data quality.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/373682605","html_url":"https://github.com/elastic/elasticsearch/issues/17045#issuecomment-373682605","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17045","id":373682605,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MzY4MjYwNQ==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2018-03-16T11:12:39Z","updated_at":"2018-03-16T11:12:39Z","author_association":"MEMBER","body":"@elastic/es-search-aggs ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/425952912","html_url":"https://github.com/elastic/elasticsearch/issues/17045#issuecomment-425952912","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17045","id":425952912,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNTk1MjkxMg==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2018-10-01T15:34:34Z","updated_at":"2018-10-01T15:34:34Z","author_association":"MEMBER","body":"> I appreciate that this could be achieved by extracting the relevant terms from the document but that feels a bit like climbing through a window to open a door. I'd rather just open the door.\r\n\r\n@basiclaser unfortunately, there is no simple way to do it. Due to its distributed nature and potentially very large of results in a single search, elasticsearch performs searches in 2 phase: first in the QUERY phase we find top relevant results on each shard, during this phase we have information about why we found each individual record, but we immediately discard after determining if the result matches the query since it would be too cumbersome and expensive to keep this information around. After each shard sends their top records to the coordinating node, the coordinating node, determines the global top records and shards that these records came from and asks these shards to retrieve the records in the FETCH phase. Unfortunately, during the FETCH phase we no longer have the information that we discovered, used and discarded during the QUERY phase. \r\n\r\nSo, to figure out why a record was found we have to either 1) preserve this information from the QUERY phase or 2) rediscover this later one. The first option is currently implemented using [named queries](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-named-queries-and-filters.html) mechanism, that might work for you if you can represent each term you care about as an individual named querty. The second option is implemented using highlighting, which can work with the original query as well as arbitrary queries. The current highlighting functionality is pretty limited for this purpose at the moment but as you can see in the discussion in #29631 we have some plans to expand in the future. \r\n\r\nSince the most likely approach for this issue will be to follow the highlighting plugin path rather than a general search feature, I am going to close this issue.\r\n","performed_via_github_app":null}]