{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/16576","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16576/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16576/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16576/events","html_url":"https://github.com/elastic/elasticsearch/issues/16576","id":132686762,"node_id":"MDU6SXNzdWUxMzI2ODY3NjI=","number":16576,"title":"field mapping conflicts are critical errors?","user":{"login":"sysmonk","id":3297126,"node_id":"MDQ6VXNlcjMyOTcxMjY=","avatar_url":"https://avatars2.githubusercontent.com/u/3297126?v=4","gravatar_id":"","url":"https://api.github.com/users/sysmonk","html_url":"https://github.com/sysmonk","followers_url":"https://api.github.com/users/sysmonk/followers","following_url":"https://api.github.com/users/sysmonk/following{/other_user}","gists_url":"https://api.github.com/users/sysmonk/gists{/gist_id}","starred_url":"https://api.github.com/users/sysmonk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sysmonk/subscriptions","organizations_url":"https://api.github.com/users/sysmonk/orgs","repos_url":"https://api.github.com/users/sysmonk/repos","events_url":"https://api.github.com/users/sysmonk/events{/privacy}","received_events_url":"https://api.github.com/users/sysmonk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-02-10T12:28:12Z","updated_at":"2016-02-13T19:17:32Z","closed_at":"2016-02-13T19:17:32Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\n\nI've upgraded our ES cluster from 1.7.4 to 2.2 yesterday. Before updating, i've run the migration plugin to check for errors. It showed two BLUE alerts - one about boolean fields returning 0/1 rather than T/F, and the other one about mapping field conflicts. \nThe mapping field conflict warning was because i had a bug in my mapping with _source specified as a field. The migration plugin noted this as a BLUE warning and said it's ok to upgrade. From the plugin documentation https://github.com/elastic/elasticsearch-migration:\n\n> Blue\n> An advisory note that something has changed. No action needed.\n\nI've fixed the schema, and all new indices were created with proper schema (this is a logstash cluster with daily/weekly indices). \n\nAfter upgrading the cluster to 2.2, elasticsearch woud start, but then exit soon. The logs contained:\n\n```\n2016-02-09 08:14:34,146][INFO ][node                     ] [es1.logstash.example.com] version[2.2.0], pid[7960], build[8ff36d1/2016-01-27T13:32:39Z]\n[2016-02-09 08:14:34,147][INFO ][node                     ] [es1.logstash.example.com] initializing ...\n[2016-02-09 08:14:34,651][INFO ][plugins                  ] [es1.logstash.example.com] modules [lang-expression, lang-groovy], plugins [], sites []\n[2016-02-09 08:14:34,673][INFO ][env                      ] [es1.logstash.example.com] using [1] data paths, mounts [[/ (/dev/sda3)]], net usable_space [1.1tb], net total_space [1.4tb], spins? [possibl\ny], types [ext4]\n[2016-02-09 08:14:34,673][INFO ][env                      ] [es1.logstash.example.com] heap size [27.8gb], compressed ordinary object pointers [true]\n[2016-02-09 08:14:36,994][ERROR][gateway                  ] [es1.logstash.example.com] failed to read local state, exiting...\njava.lang.IllegalStateException: unable to upgrade the mappings for the index [flows-2016.01.06], reason: [Field [_source] is defined both as an object and a field in [netflow]]\n        at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:339)\n        at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.upgradeIndexMetaData(MetaDataIndexUpgradeService.java:116)\n        at org.elasticsearch.gateway.GatewayMetaState.pre20Upgrade(GatewayMetaState.java:228)\n        at org.elasticsearch.gateway.GatewayMetaState.<init>(GatewayMetaState.java:87)\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:422)\n        at org.elasticsearch.common.inject.DefaultConstructionProxyFactory$1.newInstance(DefaultConstructionProxyFactory.java:50)\n        at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:86)\n        at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:104)\n        at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:47)\n        at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:887)\n        at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:43)\n        at org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:59)\n        at org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:46)\n        at org.elasticsearch.common.inject.SingleParameterInjector.inject(SingleParameterInjector.java:42)\n        at org.elasticsearch.common.inject.SingleParameterInjector.getAll(SingleParameterInjector.java:66)\n        at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:85)\n        at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:104)\n        at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:47)\n        at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:887)\n        at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:43)\n        at org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:59)\n        at org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:46)\n        at org.elasticsearch.common.inject.SingleParameterInjector.inject(SingleParameterInjector.java:42)\n        at org.elasticsearch.common.inject.SingleParameterInjector.getAll(SingleParameterInjector.java:66)\n        at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:85)\n        at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:104)\n        at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:47)\n        at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:887)\n        at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:43)\n        at org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:59)\n        at org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:46)\n        at org.elasticsearch.common.inject.InjectorBuilder$1.call(InjectorBuilder.java:201)\n        at org.elasticsearch.common.inject.InjectorBuilder$1.call(InjectorBuilder.java:193)\n        at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:880)\n        at org.elasticsearch.common.inject.InjectorBuilder.loadEagerSingletons(InjectorBuilder.java:193)\n        at org.elasticsearch.common.inject.InjectorBuilder.injectDynamically(InjectorBuilder.java:175)\n        at org.elasticsearch.common.inject.InjectorBuilder.build(InjectorBuilder.java:110)\n        at org.elasticsearch.common.inject.Guice.createInjector(Guice.java:93)\n        at org.elasticsearch.common.inject.Guice.createInjector(Guice.java:70)\n        at org.elasticsearch.common.inject.ModulesBuilder.createInjector(ModulesBuilder.java:46)\n        at org.elasticsearch.node.Node.<init>(Node.java:200)\n        at org.elasticsearch.node.Node.<init>(Node.java:128)\n        at org.elasticsearch.node.NodeBuilder.build(NodeBuilder.java:145)\n        at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:178)\n        at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:285)\n        at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:35)\nCaused by: java.lang.IllegalArgumentException: Field [_source] is defined both as an object and a field in [netflow]\n        at org.elasticsearch.index.mapper.MapperService.checkFieldUniqueness(MapperService.java:375)\n        at org.elasticsearch.index.mapper.MapperService.checkMappersCompatibility(MapperService.java:385)\n        at org.elasticsearch.index.mapper.MapperService.checkMappersCompatibility(MapperService.java:411)\n        at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:314)\n        at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:272)\n        at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:333)\n        ... 48 more\n[2016-02-09 08:14:37,590][ERROR][bootstrap                ] Guice Exception: java.lang.IllegalStateException: unable to upgrade the mappings for the index [flows-2016.01.06], reason: [Field [_source] is defined both as an object and a field in [netflow]]\nLikely root cause: java.lang.IllegalArgumentException: Field [_source] is defined both as an object and a field in [netflow]\n        at org.elasticsearch.index.mapper.MapperService.checkFieldUniqueness(MapperService.java:375)\n        at org.elasticsearch.index.mapper.MapperService.checkMappersCompatibility(MapperService.java:385)\n        at org.elasticsearch.index.mapper.MapperService.checkMappersCompatibility(MapperService.java:411)\n        at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:314)\n        at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:272)\n        at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:333)\n        at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.upgradeIndexMetaData(MetaDataIndexUpgradeService.java:116)\n        at org.elasticsearch.gateway.GatewayMetaState.pre20Upgrade(GatewayMetaState.java:228)\n        at org.elasticsearch.gateway.GatewayMetaState.<init>(GatewayMetaState.java:87)\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:422)\n        at <<<guice>>>\n        at org.elasticsearch.node.Node.<init>(Node.java:200)\n        at org.elasticsearch.node.Node.<init>(Node.java:128)\n        at org.elasticsearch.node.NodeBuilder.build(NodeBuilder.java:145)\n        at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:178)\n        at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:285)\n        at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:35)\n```\n\nUnfortunately, it kept crashing like that all the time until i removed all the affected indices ( 1.5 months of netflow logs). I understand the conflicting mapping might not be supported, but the migration plugin should at least mark that as RED / Critical error. If it did, i could have waited a month before upgrading so that new indices use the proper, not broken schema.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}