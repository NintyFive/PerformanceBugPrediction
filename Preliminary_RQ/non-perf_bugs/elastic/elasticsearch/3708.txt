{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3708","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3708/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3708/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3708/events","html_url":"https://github.com/elastic/elasticsearch/issues/3708","id":19560683,"node_id":"MDU6SXNzdWUxOTU2MDY4Mw==","number":3708,"title":"Analyzer caching problem with QueryParserService? (0.90.4)","user":{"login":"synhershko","id":212252,"node_id":"MDQ6VXNlcjIxMjI1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/212252?v=4","gravatar_id":"","url":"https://api.github.com/users/synhershko","html_url":"https://github.com/synhershko","followers_url":"https://api.github.com/users/synhershko/followers","following_url":"https://api.github.com/users/synhershko/following{/other_user}","gists_url":"https://api.github.com/users/synhershko/gists{/gist_id}","starred_url":"https://api.github.com/users/synhershko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/synhershko/subscriptions","organizations_url":"https://api.github.com/users/synhershko/orgs","repos_url":"https://api.github.com/users/synhershko/repos","events_url":"https://api.github.com/users/synhershko/events{/privacy}","received_events_url":"https://api.github.com/users/synhershko/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"assignees":[{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false}],"milestone":null,"comments":9,"created_at":"2013-09-16T16:16:15Z","updated_at":"2014-07-01T12:39:54Z","closed_at":"2014-07-01T12:39:54Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I don't have a good explanation for the following issue we are seeing, but it's definitely there. I dug as deep as I could and it seems like an analyzer caching issue with the QueryParserService.\n\nHere's the setup:\n1. Index mapping defines several full-text fields, and then some non-analyzed fields The full-text fields don't have an analyzer set - we index them using the _analyzer field.\n2. We have a custom analyzer plugged in; it is a PerFieldAnalyzerWrapper where the default analyzer is KeywordAnalyzer and then a custom stemming analyzer is configured for the full-text fields. The analyzer is properly configured as verified to work correctly.\n3. We use QueryString query to executed searches (yes, I know). The following query works as expected - the full-text fields get analyzed using the correct analyzer, and the non full-text fields are just kept untouched and are used as a whole:\n\n```\n{\"filtered\":{\"query\":{\"bool\":{\"must\":[{\"query_string\":{\"query\":\"url:\\\"https://www.facebook.com/111111111111/\\\" url:\\\"https://www.facebook.com/111111111112/\\\"\",\"fields\":[\"title\",\"topic\",\"replies.text\"],\"use_dis_max\":false,\"analyzer\":\"custom_analyzer\"}},{\"query_string\":{\"query\":\"foo title:bar\",\"fields\":[\"title\",\"topic\",\"replies.text\"],\"use_dis_max\":false,\"analyzer\":\"custom_analyzer\"}}],\"must_not\":{\"query_string\":{\"query\":\"test\",\"fields\":[\"title\",\"topic\",\"replies.text\"],\"use_dis_max\":false,\"analyzer\":\"custom_analyzer\"}}}},\"filter\":{\"terms\":{\"lang\":[\"english\"]}}}}\n```\n1. But when I switch the order of the clauses, the url field (which is the not_analyzed one) is being tokenized and I can verify it is going through the stemmer defined in custom_analyzer for only 4 fields, by name:\n\n```\n{\"filtered\":{\"query\":{\"bool\":{\"must\":[{\"query_string\":{\"query\":\"foo title:bar\",\"fields\":[\"title\",\"topic\",\"replies.text\"],\"use_dis_max\":false,\"analyzer\":\"custom_analyzer\"}}, {\"query_string\":{\"query\":\"url:\\\"https://www.facebook.com/111111111111/\\\" url:\\\"https://www.facebook.com/111111111112/\\\"\",\"fields\":[\"title\",\"topic\",\"replies.text\"],\"use_dis_max\":false,\"analyzer\":\"custom_analyzer\"}}],\"must_not\":{\"query_string\":{\"query\":\"test\",\"fields\":[\"title\",\"topic\",\"replies.text\"],\"use_dis_max\":false,\"analyzer\":\"custom_analyzer\"}}}},\"filter\":{\"terms\":{\"lang\":[\"english\"]}}}}\n```\n\nThe must_not clause doesn't seem to have any effect.\n1. I debugged this as deep as Lucene's QueryParser, which apparently calls the correct analyzer object but still gets a tokenized stream.\n\nNot sure how to go about this any further - will be happy to help with nailing this down.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}