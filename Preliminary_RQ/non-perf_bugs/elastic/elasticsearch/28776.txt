{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/28776","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28776/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28776/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28776/events","html_url":"https://github.com/elastic/elasticsearch/issues/28776","id":299183010,"node_id":"MDU6SXNzdWUyOTkxODMwMTA=","number":28776,"title":"inconsistent Elastic score between kibana and Fetch API","user":{"login":"chakpongchung","id":8110904,"node_id":"MDQ6VXNlcjgxMTA5MDQ=","avatar_url":"https://avatars0.githubusercontent.com/u/8110904?v=4","gravatar_id":"","url":"https://api.github.com/users/chakpongchung","html_url":"https://github.com/chakpongchung","followers_url":"https://api.github.com/users/chakpongchung/followers","following_url":"https://api.github.com/users/chakpongchung/following{/other_user}","gists_url":"https://api.github.com/users/chakpongchung/gists{/gist_id}","starred_url":"https://api.github.com/users/chakpongchung/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chakpongchung/subscriptions","organizations_url":"https://api.github.com/users/chakpongchung/orgs","repos_url":"https://api.github.com/users/chakpongchung/repos","events_url":"https://api.github.com/users/chakpongchung/events{/privacy}","received_events_url":"https://api.github.com/users/chakpongchung/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-02-22T00:44:28Z","updated_at":"2018-02-22T07:39:20Z","closed_at":"2018-02-22T07:39:20Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n\r\n-->\r\n\r\n<!-- Bug report -->\r\n\r\ninconsistent _score between Kibana and restful call in Node.js\r\n**Elasticsearch version** (`bin/elasticsearch --version`):\r\n\r\nVersion: 6.1.2, Build: 5b1fea5/2018-01-10T02:35:59.208Z, JVM: 1.8.0_152\r\n\r\n**Plugins installed**: []\r\nXpack\r\n**JVM version** (`java -version`):\r\n\r\njava version \"9.0.1\"\r\nJava(TM) SE Runtime Environment (build 9.0.1+11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)\r\n\r\n\r\n**OS version** (`uname -a` if on a Unix-like system):\r\n\r\nDarwin FNG172165 16.7.0 Darwin Kernel Version 16.7.0: Mon Nov 13 21:56:25 PST 2017; root:xnu-3789.72.11~1/RELEASE_X86_64 x86_64\r\n\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\n1. \r\n\r\nI expect the following code using the fetch api show the same _score as the corresponding one from Kibana, but right now it is not.\r\n\r\n\r\n2.\r\n\r\nI tried to delete the index first before creating it. It would fail always. Instead, I delete separately, then \r\ncreate a mapping without creating the corresponding index first, it works .\r\n\r\n**Steps to reproduce**:\r\n\r\n#\r\n\r\nTo recreate the problem, save the following node.js code in index.js, then `node index.js`\r\n\r\nCompare the score with these requests in Kibana\r\n```\r\nDELETE fuzzy_products\r\n\r\n# Create the index\r\nPUT /fuzzy_products\r\n# Create the product mapping\r\nPUT /fuzzy_products/product/_mapping\r\n{\r\n  \"product\": {\r\n    \"properties\": {\r\n      \"name\": {\r\n        \"type\": \"text\",\r\n        \"analyzer\": \"simple\"\r\n      }\r\n    }\r\n  }\r\n}\r\n# Upload some documents\r\nPUT /fuzzy_products/product/1\r\n{\"name\": \"The Water Horse\"}\r\n\r\n# Perform a fuzzy search!\r\nPOST /fuzzy_products/product/_search\r\n{\r\n  \"query\": {\r\n    \"match\": {\r\n      \"name\": {\r\n        \"query\": \"The Water Horse\",\r\n        \"fuzziness\": 2,\r\n        \"prefix_length\": 1\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n```\r\n\r\n```\r\nconst fetch = require('node-fetch')\r\nlet url\r\n// create the index\r\nlet analyzer = 'simple'\r\nlet type = 'text'\r\n\r\nasync function myfunction () {\r\n  // // curl -XHEAD 'localhost:9200/twitter?pretty'\r\n\r\n  //   // curl - XDELETE 'localhost:9200/fuzzy_products?pretty'\r\n  // url = 'http://localhost:9200/fuzzy_products'\r\n  // await fetch(url, {\r\n  //   method: 'DELETE', // or 'PUT'\r\n  //   headers: {\r\n  //     'Content-Type': 'application/json'\r\n  //   }\r\n  // }).then(res => res.json())\r\n  //   .catch(error => console.error('Error:', error))\r\n  //   .then(response => console.log('Success delete?:', JSON.stringify(response, null, 2)))\r\n\r\n  // var sleep = require('sleep')\r\n  // await sleep.sleep(10) // sleep for ten seconds\r\n\r\n  // // create index\r\n  url = 'http://localhost:9200/fuzzy_products'\r\n  await fetch(url, {\r\n    method: 'PUT', // or 'PUT'\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n\r\n  })\r\n    .then(res => res.json())\r\n    .catch(error => console.error('Error:', error))\r\n    .then(response => console.log('index created?:', JSON.stringify(response, null, 2)))\r\n\r\n  // // create a mapping for the index\r\n  url = 'http://localhost:9200/fuzzy_products/product/_mapping'\r\n  await fetch(url, {\r\n    method: 'PUT', // or 'PUT'\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      'product': {\r\n        'properties': {\r\n          'name': {\r\n            'type': type,\r\n            'analyzer': analyzer\r\n          }\r\n        }\r\n      }\r\n    })\r\n  })\r\n    .then(res => res.json())\r\n    .catch(error => console.error('Error:', error))\r\n    .then(response => console.log('mapping created:', response))\r\n\r\n  // index a document\r\n  // url = 'http://localhost:9200/fuzzy_products/product/9-1-1?pretty'\r\n  let documentName = 'The Water Horse'\r\n  url = 'http://localhost:9200/fuzzy_products/product/' + documentName\r\n\r\n  await fetch(url, {\r\n    method: 'PUT', // or 'PUT'\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ 'name': documentName })\r\n\r\n  })\r\n    .then(res => res.json())\r\n    .catch(error => console.error('Error:', error))\r\n    .then(response => console.log('Indexed document?:', response))\r\n\r\n  // https://www.elastic.co/guide/en/elasticsearch/reference/current/search-explain.html#search-explain\r\n  url = 'http://localhost:9200/fuzzy_products/product/' + documentName + '/_explain'\r\n  await fetch(url, {\r\n    method: 'POST', // or 'PUT'\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      'query': {\r\n        'match': { 'name': documentName }\r\n      }\r\n    })\r\n  })\r\n    .then(res => res.json())\r\n    .catch(error => console.error('Error:', error))\r\n    .then(response => console.log('Expalin found?:', response))\r\n\r\n  // # Perform a fuzzy search!\r\n  url = 'http://localhost:9200/fuzzy_products/product/_search?pretty=true&search_type=dfs_query_then_fetch'\r\n  await fetch(url, {\r\n    method: 'POST', // or 'PUT'\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      'query': {\r\n        'match': {\r\n          'name': {\r\n            'query': documentName,\r\n            'fuzziness': 0,\r\n            'prefix_length': 1\r\n          }\r\n        }\r\n      }\r\n    })\r\n  })\r\n    .then(res => res.json())\r\n    .catch(error => console.error('Error:', error))\r\n    .then(response => console.log('Success found?:', response, response.hits))\r\n}\r\nmyfunction()\r\n\r\n```\r\n**Provide logs (if relevant)**:\r\n\r\n","closed_by":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"performed_via_github_app":null}