[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/282304856","html_url":"https://github.com/elastic/elasticsearch/issues/23343#issuecomment-282304856","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23343","id":282304856,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MjMwNDg1Ng==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-02-24T14:31:35Z","updated_at":"2017-02-24T14:31:35Z","author_association":"CONTRIBUTOR","body":"Your recreation does not cache the term query because we only cache on segments that both have more than 10k documents and account for more than 3% of the shard size.\r\n\r\nWhy do you want term queries to be cached? The term filter in your recreation should execute very quickly without any caching.\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/282310779","html_url":"https://github.com/elastic/elasticsearch/issues/23343#issuecomment-282310779","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23343","id":282310779,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MjMxMDc3OQ==","user":{"login":"sundarv85","id":11090193,"node_id":"MDQ6VXNlcjExMDkwMTkz","avatar_url":"https://avatars0.githubusercontent.com/u/11090193?v=4","gravatar_id":"","url":"https://api.github.com/users/sundarv85","html_url":"https://github.com/sundarv85","followers_url":"https://api.github.com/users/sundarv85/followers","following_url":"https://api.github.com/users/sundarv85/following{/other_user}","gists_url":"https://api.github.com/users/sundarv85/gists{/gist_id}","starred_url":"https://api.github.com/users/sundarv85/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sundarv85/subscriptions","organizations_url":"https://api.github.com/users/sundarv85/orgs","repos_url":"https://api.github.com/users/sundarv85/repos","events_url":"https://api.github.com/users/sundarv85/events{/privacy}","received_events_url":"https://api.github.com/users/sundarv85/received_events","type":"User","site_admin":false},"created_at":"2017-02-24T14:54:43Z","updated_at":"2017-02-24T14:55:18Z","author_association":"NONE","body":"Ah! Thanks for info `more than 10k documents and account for more than 3% of the shard size.`\r\n\r\nWe currently are facing an issue, where we have 12 indexes with each have 5 shards and in total this has 90 million documents. Each of these documents contains nested document of approx. 5 each. So in total this is around 206 million documents (the output from _stats).\r\n\r\nWhen we query all these 12 weeks with the range query, it takes somewhere between 4-60 seconds. We have in the query - a range, for the timeduration, then couple of term queries. Then we aggregate on all of them. I'm looking at ways to improve the performance.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/282313004","html_url":"https://github.com/elastic/elasticsearch/issues/23343#issuecomment-282313004","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23343","id":282313004,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MjMxMzAwNA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-02-24T15:03:25Z","updated_at":"2017-02-24T15:03:25Z","author_association":"CONTRIBUTOR","body":"Interesting, we have improvements to `nested` and `range` queries coming to Elasticsearch 5.4, which should yield sizable improvements: #23079 and #23119. In the meantime, the only workaround I can think of is to add the list of the types you are searching in to the URL, eg. `index/type1,type2/_search` rather than `index/_search`, which night improve the way nested docs are masked depending on your query. Other than that I am afraid there isn't much that can be done.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/282318270","html_url":"https://github.com/elastic/elasticsearch/issues/23343#issuecomment-282318270","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23343","id":282318270,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MjMxODI3MA==","user":{"login":"sundarv85","id":11090193,"node_id":"MDQ6VXNlcjExMDkwMTkz","avatar_url":"https://avatars0.githubusercontent.com/u/11090193?v=4","gravatar_id":"","url":"https://api.github.com/users/sundarv85","html_url":"https://github.com/sundarv85","followers_url":"https://api.github.com/users/sundarv85/followers","following_url":"https://api.github.com/users/sundarv85/following{/other_user}","gists_url":"https://api.github.com/users/sundarv85/gists{/gist_id}","starred_url":"https://api.github.com/users/sundarv85/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sundarv85/subscriptions","organizations_url":"https://api.github.com/users/sundarv85/orgs","repos_url":"https://api.github.com/users/sundarv85/repos","events_url":"https://api.github.com/users/sundarv85/events{/privacy}","received_events_url":"https://api.github.com/users/sundarv85/received_events","type":"User","site_admin":false},"created_at":"2017-02-24T15:24:10Z","updated_at":"2017-02-24T15:24:32Z","author_association":"NONE","body":"Thanks. We will upgrade to 5.4, when it is released. Meanwhile, what I hope would help us is to increase the request cache from 1% to 10% of the heap size, because as we use aggs so often, I expect the request cache to be a valuable fallback. For e.g. in one of the shards I see\r\n\r\n```\r\n          \"evictions\": 68562,\r\n          \"hit_count\": 13057,\r\n          \"miss_count\": 70268\r\n```\r\n\r\nSo increasing req cache should reduce the miss_count. I will test this setup and will update here, if that helps. \r\n\r\nOne more item that would be helpful is, If profile API can also show if the response is retrieved from the cache or not.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/282319866","html_url":"https://github.com/elastic/elasticsearch/issues/23343#issuecomment-282319866","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23343","id":282319866,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MjMxOTg2Ng==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-02-24T15:30:09Z","updated_at":"2017-02-24T15:30:09Z","author_association":"CONTRIBUTOR","body":"Actually the profile API disables caching entirely, it never goes to the cache. Maybe you should add a thumbs up to this issue if you are interested in figuring out what gets cached? #20108","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/288410614","html_url":"https://github.com/elastic/elasticsearch/issues/23343#issuecomment-288410614","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23343","id":288410614,"node_id":"MDEyOklzc3VlQ29tbWVudDI4ODQxMDYxNA==","user":{"login":"sundarv85","id":11090193,"node_id":"MDQ6VXNlcjExMDkwMTkz","avatar_url":"https://avatars0.githubusercontent.com/u/11090193?v=4","gravatar_id":"","url":"https://api.github.com/users/sundarv85","html_url":"https://github.com/sundarv85","followers_url":"https://api.github.com/users/sundarv85/followers","following_url":"https://api.github.com/users/sundarv85/following{/other_user}","gists_url":"https://api.github.com/users/sundarv85/gists{/gist_id}","starred_url":"https://api.github.com/users/sundarv85/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sundarv85/subscriptions","organizations_url":"https://api.github.com/users/sundarv85/orgs","repos_url":"https://api.github.com/users/sundarv85/repos","events_url":"https://api.github.com/users/sundarv85/events{/privacy}","received_events_url":"https://api.github.com/users/sundarv85/received_events","type":"User","site_admin":false},"created_at":"2017-03-22T14:12:03Z","updated_at":"2017-03-22T14:12:03Z","author_association":"NONE","body":"@jpountz Eventually we enabled term_queries cache in our production and have seen improvements in our network speed. It would be good if this can be exposed in documentation as well, as we do not want to lose this feature in upcoming elasticsearch versions.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/455785860","html_url":"https://github.com/elastic/elasticsearch/issues/23343#issuecomment-455785860","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23343","id":455785860,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NTc4NTg2MA==","user":{"login":"yitian134","id":8611425,"node_id":"MDQ6VXNlcjg2MTE0MjU=","avatar_url":"https://avatars0.githubusercontent.com/u/8611425?v=4","gravatar_id":"","url":"https://api.github.com/users/yitian134","html_url":"https://github.com/yitian134","followers_url":"https://api.github.com/users/yitian134/followers","following_url":"https://api.github.com/users/yitian134/following{/other_user}","gists_url":"https://api.github.com/users/yitian134/gists{/gist_id}","starred_url":"https://api.github.com/users/yitian134/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yitian134/subscriptions","organizations_url":"https://api.github.com/users/yitian134/orgs","repos_url":"https://api.github.com/users/yitian134/repos","events_url":"https://api.github.com/users/yitian134/events{/privacy}","received_events_url":"https://api.github.com/users/yitian134/received_events","type":"User","site_admin":false},"created_at":"2019-01-19T14:38:52Z","updated_at":"2019-01-19T14:38:52Z","author_association":"NONE","body":"> @jpountz Eventually we enabled term_queries cache in our production and have seen improvements in our network speed. It would be good if this can be exposed in documentation as well, as we do not want to lose this feature in upcoming elasticsearch versions.\r\n\r\n@sundarv85 hi, I encounter similar problems. I'am wonder how do you enable term_queries cache？By Increasing the cache size？Looking forward to your reply~","performed_via_github_app":null}]