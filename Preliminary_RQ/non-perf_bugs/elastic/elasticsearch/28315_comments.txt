[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/359350771","html_url":"https://github.com/elastic/elasticsearch/issues/28315#issuecomment-359350771","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28315","id":359350771,"node_id":"MDEyOklzc3VlQ29tbWVudDM1OTM1MDc3MQ==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2018-01-22T08:05:52Z","updated_at":"2018-01-22T08:05:52Z","author_association":"MEMBER","body":"Hey @suresk, I'm looking at the last 3 snippets here and in step 5 you're trying to store a percolator query with a `percolate` query. I'm not sure what you expect in step 6, but I don't expect that to match with the percolator query you stored in step 5. What would you expect in this case? A `percolate` query is used to matched stored percolator queries and not meant to be used inside a percolator query.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/359359486","html_url":"https://github.com/elastic/elasticsearch/issues/28315#issuecomment-359359486","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28315","id":359359486,"node_id":"MDEyOklzc3VlQ29tbWVudDM1OTM1OTQ4Ng==","user":{"login":"suresk","id":63801,"node_id":"MDQ6VXNlcjYzODAx","avatar_url":"https://avatars0.githubusercontent.com/u/63801?v=4","gravatar_id":"","url":"https://api.github.com/users/suresk","html_url":"https://github.com/suresk","followers_url":"https://api.github.com/users/suresk/followers","following_url":"https://api.github.com/users/suresk/following{/other_user}","gists_url":"https://api.github.com/users/suresk/gists{/gist_id}","starred_url":"https://api.github.com/users/suresk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/suresk/subscriptions","organizations_url":"https://api.github.com/users/suresk/orgs","repos_url":"https://api.github.com/users/suresk/repos","events_url":"https://api.github.com/users/suresk/events{/privacy}","received_events_url":"https://api.github.com/users/suresk/received_events","type":"User","site_admin":false},"created_at":"2018-01-22T08:51:38Z","updated_at":"2018-01-22T08:51:38Z","author_association":"NONE","body":"Hi @martijnvg - Sorry! It was just a copy/paste error. I had the right description for that step, but grabbed the wrong JSON block. I've updated my issue - does it make more sense now?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/359532352","html_url":"https://github.com/elastic/elasticsearch/issues/28315#issuecomment-359532352","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28315","id":359532352,"node_id":"MDEyOklzc3VlQ29tbWVudDM1OTUzMjM1Mg==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2018-01-22T19:13:03Z","updated_at":"2018-01-22T19:13:03Z","author_association":"MEMBER","body":"@suresk I see what you mean, but the percolator query in step 5 hasn't been updated yet. Just to be sure that percolator should look like:\r\n\r\n```\r\nPUT /tag-queries/tag/1\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"filter\": [\r\n        {\r\n          \"nested\": {\r\n            \"query\": {\r\n              \"terms\": {\r\n                \"affiliations.team.type\": [\r\n                  \"RETAIL\",\r\n                  \"MANUFACTURER\",\r\n                  \"PARTNER\"\r\n                ],\r\n                \"boost\": 1\r\n              }\r\n            },\r\n            \"path\": \"affiliations\",\r\n            \"ignore_unmapped\": false,\r\n            \"score_mode\": \"none\",\r\n            \"boost\": 1\r\n          }\r\n        },\r\n        {\r\n          \"nested\": {\r\n            \"query\": {\r\n              \"bool\": {\r\n                \"should\": [\r\n                  {\r\n                    \"bool\": {\r\n                      \"must_not\": [\r\n                        {\r\n                          \"exists\": {\r\n                            \"field\": \"affiliations.expirationDate\",\r\n                            \"boost\": 1\r\n                          }\r\n                        }\r\n                      ],\r\n                      \"disable_coord\": false,\r\n                      \"adjust_pure_negative\": true,\r\n                      \"boost\": 1\r\n                    }\r\n                  },\r\n                  {\r\n                    \"range\": {\r\n                      \"affiliations.expirationDate\": {\r\n                        \"from\": \"now\",\r\n                        \"to\": null,\r\n                        \"include_lower\": true,\r\n                        \"include_upper\": true,\r\n                        \"boost\": 1\r\n                      }\r\n                    }\r\n                  }\r\n                ],\r\n                \"disable_coord\": false,\r\n                \"adjust_pure_negative\": true,\r\n                \"boost\": 1\r\n              }\r\n            },\r\n            \"path\": \"affiliations\",\r\n            \"ignore_unmapped\": false,\r\n            \"score_mode\": \"none\",\r\n            \"boost\": 1\r\n          }\r\n        },\r\n        {\r\n          \"nested\": {\r\n            \"query\": {\r\n              \"terms\": {\r\n                \"affiliations.status\": [\r\n                  \"ACTIVE\"\r\n                ],\r\n                \"boost\": 1\r\n              }\r\n            },\r\n            \"path\": \"affiliations\",\r\n            \"ignore_unmapped\": false,\r\n            \"score_mode\": \"none\",\r\n            \"boost\": 1\r\n          }\r\n        },\r\n        {\r\n          \"nested\": {\r\n            \"query\": {\r\n              \"bool\": {\r\n                \"filter\": [\r\n                  {\r\n                    \"terms\": {\r\n                      \"affiliations.team.type\": [\r\n                        \"RETAIL\",\r\n                        \"MANUFACTURER\",\r\n                        \"PARTNER\"\r\n                      ],\r\n                      \"boost\": 1\r\n                    }\r\n                  }\r\n                ],\r\n                \"disable_coord\": false,\r\n                \"adjust_pure_negative\": true,\r\n                \"boost\": 1\r\n              }\r\n            },\r\n            \"path\": \"affiliations\",\r\n            \"ignore_unmapped\": false,\r\n            \"score_mode\": \"none\",\r\n            \"boost\": 1\r\n          }\r\n        },\r\n        {\r\n          \"bool\": {\r\n            \"should\": [\r\n              {\r\n                \"nested\": {\r\n                  \"query\": {\r\n                    \"terms\": {\r\n                      \"affiliations.location.countryId\": [\r\n                        232\r\n                      ],\r\n                      \"boost\": 1\r\n                    }\r\n                  },\r\n                  \"path\": \"affiliations\",\r\n                  \"ignore_unmapped\": false,\r\n                  \"score_mode\": \"none\",\r\n                  \"boost\": 1\r\n                }\r\n              }\r\n            ],\r\n            \"disable_coord\": false,\r\n            \"adjust_pure_negative\": true,\r\n            \"boost\": 1\r\n          }\r\n        },\r\n        {\r\n          \"bool\": {\r\n            \"should\": [\r\n              {\r\n                \"nested\": {\r\n                  \"query\": {\r\n                    \"terms\": {\r\n                      \"affiliations.location.verifiedBrands\": [\r\n                        55\r\n                      ],\r\n                      \"boost\": 1\r\n                    }\r\n                  },\r\n                  \"path\": \"affiliations\",\r\n                  \"ignore_unmapped\": false,\r\n                  \"score_mode\": \"none\",\r\n                  \"boost\": 1\r\n                }\r\n              },\r\n              {\r\n                \"nested\": {\r\n                  \"query\": {\r\n                    \"terms\": {\r\n                      \"affiliations.location.unverifiedBrands\": [\r\n                        55\r\n                      ],\r\n                      \"boost\": 1\r\n                    }\r\n                  },\r\n                  \"path\": \"affiliations\",\r\n                  \"ignore_unmapped\": false,\r\n                  \"score_mode\": \"none\",\r\n                  \"boost\": 1\r\n                }\r\n              }\r\n            ],\r\n            \"disable_coord\": false,\r\n            \"adjust_pure_negative\": true,\r\n            \"boost\": 1\r\n          }\r\n        }\r\n      ],\r\n      \"must_not\": [\r\n        {\r\n          \"nested\": {\r\n            \"query\": {\r\n              \"bool\": {\r\n                \"filter\": [\r\n                  {\r\n                    \"term\": {\r\n                      \"affiliations.team.manualBrandApproval\": {\r\n                        \"value\": true,\r\n                        \"boost\": 1\r\n                      }\r\n                    }\r\n                  },\r\n                  {\r\n                    \"bool\": {\r\n                      \"must_not\": [\r\n                        {\r\n                          \"terms\": {\r\n                            \"affiliations.team.approvedBrands\": [\r\n                              55\r\n                            ],\r\n                            \"boost\": 1\r\n                          }\r\n                        }\r\n                      ],\r\n                      \"disable_coord\": false,\r\n                      \"adjust_pure_negative\": true,\r\n                      \"boost\": 1\r\n                    }\r\n                  }\r\n                ],\r\n                \"disable_coord\": false,\r\n                \"adjust_pure_negative\": true,\r\n                \"boost\": 1\r\n              }\r\n            },\r\n            \"path\": \"affiliations\",\r\n            \"ignore_unmapped\": false,\r\n            \"score_mode\": \"none\",\r\n            \"boost\": 1\r\n          }\r\n        },\r\n        {\r\n          \"nested\": {\r\n            \"query\": {\r\n              \"term\": {\r\n                \"affiliations.team.blockedBrands\": {\r\n                  \"value\": 55,\r\n                  \"boost\": 1\r\n                }\r\n              }\r\n            },\r\n            \"path\": \"affiliations\",\r\n            \"ignore_unmapped\": false,\r\n            \"score_mode\": \"none\",\r\n            \"boost\": 1\r\n          }\r\n        },\r\n        {\r\n          \"nested\": {\r\n            \"query\": {\r\n              \"term\": {\r\n                \"affiliations.team.blockingBrands\": {\r\n                  \"value\": 55,\r\n                  \"boost\": 1\r\n                }\r\n              }\r\n            },\r\n            \"path\": \"affiliations\",\r\n            \"ignore_unmapped\": false,\r\n            \"score_mode\": \"none\",\r\n            \"boost\": 1\r\n          }\r\n        },\r\n        {\r\n          \"nested\": {\r\n            \"query\": {\r\n              \"term\": {\r\n                \"affiliations.location.blockingBrands\": {\r\n                  \"value\": 55,\r\n                  \"boost\": 1\r\n                }\r\n              }\r\n            },\r\n            \"path\": \"affiliations\",\r\n            \"ignore_unmapped\": false,\r\n            \"score_mode\": \"none\",\r\n            \"boost\": 1\r\n          }\r\n        }\r\n      ],\r\n      \"disable_coord\": false,\r\n      \"adjust_pure_negative\": true,\r\n      \"boost\": 1\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nIf that is the case then I can reproduce what you mean.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/359533967","html_url":"https://github.com/elastic/elasticsearch/issues/28315#issuecomment-359533967","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28315","id":359533967,"node_id":"MDEyOklzc3VlQ29tbWVudDM1OTUzMzk2Nw==","user":{"login":"suresk","id":63801,"node_id":"MDQ6VXNlcjYzODAx","avatar_url":"https://avatars0.githubusercontent.com/u/63801?v=4","gravatar_id":"","url":"https://api.github.com/users/suresk","html_url":"https://github.com/suresk","followers_url":"https://api.github.com/users/suresk/followers","following_url":"https://api.github.com/users/suresk/following{/other_user}","gists_url":"https://api.github.com/users/suresk/gists{/gist_id}","starred_url":"https://api.github.com/users/suresk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/suresk/subscriptions","organizations_url":"https://api.github.com/users/suresk/orgs","repos_url":"https://api.github.com/users/suresk/repos","events_url":"https://api.github.com/users/suresk/events{/privacy}","received_events_url":"https://api.github.com/users/suresk/received_events","type":"User","site_admin":false},"created_at":"2018-01-22T19:18:09Z","updated_at":"2018-01-22T19:18:09Z","author_association":"NONE","body":"Yes, that is what I mean.. I'm not sure why it didn't update before, but it looks like it is updated now.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/359749388","html_url":"https://github.com/elastic/elasticsearch/issues/28315#issuecomment-359749388","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28315","id":359749388,"node_id":"MDEyOklzc3VlQ29tbWVudDM1OTc0OTM4OA==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2018-01-23T10:36:23Z","updated_at":"2018-01-23T10:36:23Z","author_association":"MEMBER","body":"I investigated this bug and this caused by the fact that minimum should matches are extracted incorrectly from nested queries. I will work on a fix. @suresk thanks for reporting!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/360788254","html_url":"https://github.com/elastic/elasticsearch/issues/28315#issuecomment-360788254","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28315","id":360788254,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDc4ODI1NA==","user":{"login":"leonardocaldas","id":17347635,"node_id":"MDQ6VXNlcjE3MzQ3NjM1","avatar_url":"https://avatars2.githubusercontent.com/u/17347635?v=4","gravatar_id":"","url":"https://api.github.com/users/leonardocaldas","html_url":"https://github.com/leonardocaldas","followers_url":"https://api.github.com/users/leonardocaldas/followers","following_url":"https://api.github.com/users/leonardocaldas/following{/other_user}","gists_url":"https://api.github.com/users/leonardocaldas/gists{/gist_id}","starred_url":"https://api.github.com/users/leonardocaldas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leonardocaldas/subscriptions","organizations_url":"https://api.github.com/users/leonardocaldas/orgs","repos_url":"https://api.github.com/users/leonardocaldas/repos","events_url":"https://api.github.com/users/leonardocaldas/events{/privacy}","received_events_url":"https://api.github.com/users/leonardocaldas/received_events","type":"User","site_admin":false},"created_at":"2018-01-26T13:45:03Z","updated_at":"2018-01-26T13:45:03Z","author_association":"NONE","body":"Hey guys, I'm facing a similar problem with nested queries and percolator.\r\n\r\nJust to be clear, this problem happens with any nested query, right? Because I have a simple percolate nested query that when executed against the index, it finds the document, but when used with the percolate query, no query is found for the document.\r\n\r\nI'll leave my scenario here, so you guys can confirm it.\r\n\r\nElasticsearch version: 5.5.0\r\nDocker Image: docker.elastic.co/elasticsearch/elasticsearch:5.5.0\r\n\r\nCreating the index\r\n```\r\nPUT my_index\r\n{\r\n  \"mappings\": {\r\n    \"percolator\": {\r\n      \"properties\": {\r\n        \"query\": {\r\n          \"type\": \"percolator\"\r\n        }\r\n      }\r\n    },\r\n    \"my_type\": {\r\n      \"properties\": {\r\n        \"tags\": {\r\n          \"type\": \"nested\",\r\n          \"properties\": {\r\n            \"tag\": {\r\n              \"type\": \"keyword\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\nAdding a new document\r\n```\r\nPOST my_index/my_type/1\r\n{\r\n  \"tags\": [\r\n    {\"tag\": \"first_tag\"},\r\n    {\"tag\": \"second_tag\"}\r\n  ]\r\n}\r\n```\r\n\r\nTesting the query we're gonna save in the percolator type\r\n```\r\nGET my_index/my_type/_search\r\n{\r\n  \"query\": {\r\n    \"nested\": {\r\n      \"path\": \"tags\",\r\n      \"query\": {\r\n        \"bool\": {\r\n          \"must\": [\r\n            {\r\n              \"match\": {\r\n                \"tags.tag\": \"first_tag\"\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\nThe query works as expected.\r\n\r\nAdding the query to the percolator type\r\n```\r\nPUT my_index/percolator/1?refresh\r\n{\r\n  \"query\": {\r\n    \"nested\": {\r\n      \"path\": \"tags\",\r\n      \"query\": {\r\n        \"bool\": {\r\n          \"must\": [\r\n            {\r\n              \"match\": {\r\n                \"tags.tag\": \"first_tag\"\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\nPercolating the document\r\n```\r\nGET my_index/_search\r\n{\r\n  \"query\": {\r\n    \"percolate\": {\r\n      \"field\": \"query\",\r\n      \"document_type\": \"percolator\",\r\n      \"document\": {\r\n        \"tags\": [\r\n          {\r\n            \"tag\": \"first_tag\"\r\n          },\r\n          {\r\n            \"tag\": \"second_tag\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\nHere nothing is found!\r\n\r\nI really hope to be doing something wrong, because for me this is a very important feature and my app depends on it.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/361254382","html_url":"https://github.com/elastic/elasticsearch/issues/28315#issuecomment-361254382","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28315","id":361254382,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTI1NDM4Mg==","user":{"login":"leonardocaldas","id":17347635,"node_id":"MDQ6VXNlcjE3MzQ3NjM1","avatar_url":"https://avatars2.githubusercontent.com/u/17347635?v=4","gravatar_id":"","url":"https://api.github.com/users/leonardocaldas","html_url":"https://github.com/leonardocaldas","followers_url":"https://api.github.com/users/leonardocaldas/followers","following_url":"https://api.github.com/users/leonardocaldas/following{/other_user}","gists_url":"https://api.github.com/users/leonardocaldas/gists{/gist_id}","starred_url":"https://api.github.com/users/leonardocaldas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leonardocaldas/subscriptions","organizations_url":"https://api.github.com/users/leonardocaldas/orgs","repos_url":"https://api.github.com/users/leonardocaldas/repos","events_url":"https://api.github.com/users/leonardocaldas/events{/privacy}","received_events_url":"https://api.github.com/users/leonardocaldas/received_events","type":"User","site_admin":false},"created_at":"2018-01-29T14:03:41Z","updated_at":"2018-01-29T14:03:41Z","author_association":"NONE","body":"Hey guys!\r\n\r\nAfter running some more tests I realized what I was doing wrong. I confused the parameter \"document_type\" in the percolate query, thinking that I should inform the type which holds the queries, when in fact I should inform the type which holds the documents.\r\n\r\nSo please disregard my previous comment.\r\n\r\nThanks!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/361510290","html_url":"https://github.com/elastic/elasticsearch/issues/28315#issuecomment-361510290","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28315","id":361510290,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTUxMDI5MA==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2018-01-30T08:19:29Z","updated_at":"2018-01-30T08:19:29Z","author_association":"MEMBER","body":"@leonardocaldas Thanks for testing some more. You are right about the fact that this bug can occur  with other queries too. Basically if a percolator query contains duplicated clauses this error can occur. The fix in #28353 will prevent this bug from happening.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/370720871","html_url":"https://github.com/elastic/elasticsearch/issues/28315#issuecomment-370720871","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28315","id":370720871,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MDcyMDg3MQ==","user":{"login":"maricn","id":3995223,"node_id":"MDQ6VXNlcjM5OTUyMjM=","avatar_url":"https://avatars1.githubusercontent.com/u/3995223?v=4","gravatar_id":"","url":"https://api.github.com/users/maricn","html_url":"https://github.com/maricn","followers_url":"https://api.github.com/users/maricn/followers","following_url":"https://api.github.com/users/maricn/following{/other_user}","gists_url":"https://api.github.com/users/maricn/gists{/gist_id}","starred_url":"https://api.github.com/users/maricn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maricn/subscriptions","organizations_url":"https://api.github.com/users/maricn/orgs","repos_url":"https://api.github.com/users/maricn/repos","events_url":"https://api.github.com/users/maricn/events{/privacy}","received_events_url":"https://api.github.com/users/maricn/received_events","type":"User","site_admin":false},"created_at":"2018-03-06T09:37:02Z","updated_at":"2018-03-06T09:37:33Z","author_association":"NONE","body":"I've just noticed this bug with `must` condition. I'm executing the following query:\r\n```\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"must\": [\r\n        {\r\n          \"nested\": {\r\n            \"query\": {\r\n              \"bool\": {\r\n                \"must\": [\r\n                  {\r\n                    \"term\": {\r\n                      \"stories.storyId\": 2\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            \"path\": \"stories\"\r\n          }\r\n        },\r\n        {\r\n          \"nested\": {\r\n            \"query\": {\r\n              \"bool\": {\r\n                \"must\": [\r\n                  {\r\n                    \"term\": {\r\n                      \"stories.storyId\": 1\r\n                    }\r\n                  },\r\n                  {\r\n                    \"term\": {\r\n                      \"stories.storyName\": \"story1\"\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            \"path\": \"stories\"\r\n          }\r\n        },\r\n        {\r\n          \"nested\": {\r\n            \"query\": {\r\n              \"bool\": {\r\n                \"must\": [\r\n                  {\r\n                    \"range\": {\r\n                      \"stories.executedAt\": {\r\n                        \"gte\": \"now-1w\"\r\n                      }\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            \"path\": \"stories\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nI get back the document: \r\n```\r\n\r\n{\r\n  \"took\": 3,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 5,\r\n    \"successful\": 5,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": 1,\r\n    \"max_score\": 4.568616,\r\n    \"hits\": [\r\n      {\r\n        \"_index\": \"user-180306\",\r\n        \"_type\": \"user\",\r\n        \"_id\": \"kpF7-mEBH3oCPpbkErLB\",\r\n        \"_score\": 4.568616,\r\n        \"_source\": {\r\n          \"stories\": [\r\n            {\r\n              \"storyId\": 1,\r\n              \"storyName\": \"story1\",\r\n              \"executedAt\": \"2018-03-06T07:45:00.000+01:00\"\r\n            },\r\n            {\r\n              \"storyId\": 2,\r\n              \"storyName\": \"story2\",\r\n              \"executedAt\": \"2018-03-06T07:55:00.000+01:00\"\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nBut when i percolate that search, and run that document from result against the percolator, I don't get the percolated query in result list (i get other valid queries).","performed_via_github_app":null}]