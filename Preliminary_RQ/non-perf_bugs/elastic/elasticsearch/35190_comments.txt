[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/435239363","html_url":"https://github.com/elastic/elasticsearch/issues/35190#issuecomment-435239363","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35190","id":435239363,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTIzOTM2Mw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-11-02T01:13:40Z","updated_at":"2018-11-02T01:13:40Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/436381274","html_url":"https://github.com/elastic/elasticsearch/issues/35190#issuecomment-436381274","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35190","id":436381274,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNjM4MTI3NA==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2018-11-06T19:37:37Z","updated_at":"2018-11-06T19:37:37Z","author_association":"MEMBER","body":"CC @elastic/es-clients ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/437841294","html_url":"https://github.com/elastic/elasticsearch/issues/35190#issuecomment-437841294","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35190","id":437841294,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNzg0MTI5NA==","user":{"login":"Mpdreamz","id":245275,"node_id":"MDQ6VXNlcjI0NTI3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/245275?v=4","gravatar_id":"","url":"https://api.github.com/users/Mpdreamz","html_url":"https://github.com/Mpdreamz","followers_url":"https://api.github.com/users/Mpdreamz/followers","following_url":"https://api.github.com/users/Mpdreamz/following{/other_user}","gists_url":"https://api.github.com/users/Mpdreamz/gists{/gist_id}","starred_url":"https://api.github.com/users/Mpdreamz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mpdreamz/subscriptions","organizations_url":"https://api.github.com/users/Mpdreamz/orgs","repos_url":"https://api.github.com/users/Mpdreamz/repos","events_url":"https://api.github.com/users/Mpdreamz/events{/privacy}","received_events_url":"https://api.github.com/users/Mpdreamz/received_events","type":"User","site_admin":false},"created_at":"2018-11-12T11:07:20Z","updated_at":"2018-11-12T13:41:08Z","author_association":"MEMBER","body":"One last thing I want to raise which might be super contentious:\r\n\r\nRight now the default for `include_type_name` when not specified is `true` in `7.0`.  There are two downsides with this:\r\n\r\n* New installations will get deprecation warnings OOTB unless they specify `include_type_name=false` which they need to remove in `8.0`. \r\n* Someone who wants to go through all the type related changes in one major version can not do so. \r\n\r\nCan we remove some of the confusion of `include_type_name` defaulting to `true` by simply having it \r\ndefault to `false` in `7.0` already? \r\n\r\n* New installations will return the desired responses by default.\r\n* Someone who wants to go through all the changes in one major version can do so. \r\n\r\nUpgrades will have to account for the type removal whether the `include_type_name` defaults to `true` or `false`.\r\n\r\nAre we actually doing our users a disservice by holding on to a deprecation period? \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/439121696","html_url":"https://github.com/elastic/elasticsearch/issues/35190#issuecomment-439121696","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35190","id":439121696,"node_id":"MDEyOklzc3VlQ29tbWVudDQzOTEyMTY5Ng==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2018-11-15T17:25:49Z","updated_at":"2018-11-15T17:25:49Z","author_association":"CONTRIBUTOR","body":">Types may be present in saved search requests, including search templates and watches. We should think through the upgrade plan here.\r\n\r\nThe proposal is in 7.0 we will introduce deprecation warnings when saved queries with types are executed, but not do anything to proactively detect and upgrade them automatically. Some of the easier type removals would be in the structured metadata held around a saved search whereas other changes may be buried in clauses embedded in the saved search's choice of query DSL. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/439126681","html_url":"https://github.com/elastic/elasticsearch/issues/35190#issuecomment-439126681","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35190","id":439126681,"node_id":"MDEyOklzc3VlQ29tbWVudDQzOTEyNjY4MQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-11-15T17:38:35Z","updated_at":"2018-11-15T17:38:35Z","author_association":"CONTRIBUTOR","body":"@Mpdreamz I'm thinking that this could be an issue for mixed version clusters that have 6.latest and 7.0 nodes as the response format would depend on the version of the node that you are querying?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/439938756","html_url":"https://github.com/elastic/elasticsearch/issues/35190#issuecomment-439938756","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35190","id":439938756,"node_id":"MDEyOklzc3VlQ29tbWVudDQzOTkzODc1Ng==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2018-11-19T15:46:26Z","updated_at":"2018-11-19T15:46:26Z","author_association":"MEMBER","body":"> New installations will get deprecation warnings OOTB unless\r\n> @Mpdreamz I'm thinking that this could be an issue for mixed version clusters that have 6.latest and 7.0 nodes as the response format would depend on the version of the node that you are querying?\r\n\r\nThis is typically dealt with in the following fashion:\r\n1) Add a flag to enable new functionality in the old version, while defaulting to disable. Requests without that flag will emit deprecation warnings.\r\n2) New version only supports the flag in \"enabled mode\" and will omit deprecation logs when flag is used.\r\n\r\nThe suggestion above follows this pattern, which is good. The only difference with what we do normally is the duration of deprecation. Normally it will be scoped down to something like OLD_MAJOR.latest. With the above suggestion it's  NEW_MAJOR.x , which is a long time. I wonder if we should look at the costs of backporting the changes made to 6.x so we can follow our standard path.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/440221870","html_url":"https://github.com/elastic/elasticsearch/issues/35190#issuecomment-440221870","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35190","id":440221870,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MDIyMTg3MA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-11-20T10:24:28Z","updated_at":"2018-11-20T10:24:28Z","author_association":"CONTRIBUTOR","body":"In the beginning this flag was supposed to exist on most APIs including some of the most used like the document APIs. This made me view the long deprecation period as a feature. Now that it's only about the mappings APIs, I could change my mind. One subtlety with backporting to 6.x is that it might still have 5.x indices that have multiple types, so `include_type_name=false` would not make sense on such indices and we'd need to respond appropriately (error?).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/440761835","html_url":"https://github.com/elastic/elasticsearch/issues/35190#issuecomment-440761835","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35190","id":440761835,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MDc2MTgzNQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2018-11-21T18:11:29Z","updated_at":"2018-11-21T18:11:29Z","author_association":"CONTRIBUTOR","body":"I looked into auto-detecting PUTs of typeless mappings/templates to see if we can avoid the need for passing an `include_type_name` flag in the URL. It looks like this will be possible as we can check if the root object has a value called \"properties\". Originally I thought that real estate agents with a doc type called \"properties\" might be an edge case which would cause ambiguity. Fortunately 6.5 has a parsing bug that prevents you from creating doc types called \"properties\" (try it and see).\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/441096350","html_url":"https://github.com/elastic/elasticsearch/issues/35190#issuecomment-441096350","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35190","id":441096350,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MTA5NjM1MA==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2018-11-22T18:01:54Z","updated_at":"2018-11-22T18:01:54Z","author_association":"CONTRIBUTOR","body":">Fortunately 6.5 has a parsing bug that prevents you from creating doc types called \"properties\" \r\n\r\nTurns out there's more to auto-detecting no-types than checking for the presence of a top-level `properties` field. Legal mappings can have no `properties` but include other top-level attributes  e.g. `_source:{enabled:false}` or `dynamic_templates:{...}`.\r\n\r\nWhile it would have been nice to auto-detect typeless mappings and provide the 7.0 examples in reference docs without any types this would not be consistent with the results of `GET _mapping` calls which would return types by default (unless the `include_type_name=false` param is passed).\r\n\r\nDoes auto-detection still seem useful or shall we insist on documenting APIs with `include_type_name=false` params?  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/446396823","html_url":"https://github.com/elastic/elasticsearch/issues/35190#issuecomment-446396823","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35190","id":446396823,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NjM5NjgyMw==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2018-12-11T23:05:20Z","updated_at":"2018-12-11T23:05:20Z","author_association":"MEMBER","body":"> Are we actually doing our users a disservice by holding on to a deprecation period?\r\n\r\nWe had a few discussions internally, and decided to introduce `include_type_name` in 6.7, so we can default it to `false` in 7.0. I've updated the plan in the issue description accordingly.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/461869745","html_url":"https://github.com/elastic/elasticsearch/issues/35190#issuecomment-461869745","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35190","id":461869745,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTg2OTc0NQ==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2019-02-08T16:54:25Z","updated_at":"2019-02-08T16:54:25Z","author_association":"CONTRIBUTOR","body":">  When an index template is stored, the mappings are nested under the type name. We also need to consider how these will be accessed and upgraded.\r\n\r\nI logged https://github.com/elastic/elasticsearch/issues/38637 to further address this point. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/478917215","html_url":"https://github.com/elastic/elasticsearch/issues/35190#issuecomment-478917215","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35190","id":478917215,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODkxNzIxNQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2019-04-02T09:27:45Z","updated_at":"2019-04-02T09:27:45Z","author_association":"CONTRIBUTOR","body":"All items have been completed.","performed_via_github_app":null}]