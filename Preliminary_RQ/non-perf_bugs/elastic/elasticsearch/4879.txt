{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/4879","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4879/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4879/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4879/events","html_url":"https://github.com/elastic/elasticsearch/issues/4879","id":26234514,"node_id":"MDU6SXNzdWUyNjIzNDUxNA==","number":4879,"title":"Allow for executing queries based on pre-defined templates","user":{"login":"MaineC","id":70953,"node_id":"MDQ6VXNlcjcwOTUz","avatar_url":"https://avatars3.githubusercontent.com/u/70953?v=4","gravatar_id":"","url":"https://api.github.com/users/MaineC","html_url":"https://github.com/MaineC","followers_url":"https://api.github.com/users/MaineC/followers","following_url":"https://api.github.com/users/MaineC/following{/other_user}","gists_url":"https://api.github.com/users/MaineC/gists{/gist_id}","starred_url":"https://api.github.com/users/MaineC/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MaineC/subscriptions","organizations_url":"https://api.github.com/users/MaineC/orgs","repos_url":"https://api.github.com/users/MaineC/repos","events_url":"https://api.github.com/users/MaineC/events{/privacy}","received_events_url":"https://api.github.com/users/MaineC/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":75962075,"node_id":"MDU6TGFiZWw3NTk2MjA3NQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.1.0","name":"v1.1.0","color":"DDDDDD","default":false,"description":null},{"id":76184120,"node_id":"MDU6TGFiZWw3NjE4NDEyMA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v2.0.0-beta1","name":"v2.0.0-beta1","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2014-01-24T11:25:34Z","updated_at":"2018-02-14T13:31:34Z","closed_at":"2014-02-20T13:20:20Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"It would be nice to be able to store pre-defined query templates that can be referenced and filled with parameter values at query time. This can be in particular useful to be able to quickly replay queries with slightly different templates but identical parameter values e.g. in order to compare slightly different ways to formulate Elasticsearch queries wrt. runtime performance and actual results returned.\n\nFor developing and testing the template, both, template_string and template_vars can be submitted as part of the search request:\n\n``` json\nGET _search\n{\n    \"query\": {\n        \"template\": {\n            \"template_string\": \"{\\\"match_{{template}}\\\": {}}\\\"\",\n            \"template_vars\" : {\n                \"template\" : \"all\"\n            }\n        }\n    }\n}\n```\n\nYou register a template by storing it in the conf/scripts directory of\nelasticsearch. In order to execute the stored template reference it in the query parameters:\n\n``` json\nGET _search\n{\n    \"query\": {\n        \"template\": {\n            \"template_string\": \"storedTemplate\",\n            \"template_vars\" : {\n                \"template\" : \"all\"\n            }\n        }\n    }\n}\n```\n## Template language\n\nTemplating is based on Mustache. Substitution of tokens works as follows:\n\n``` json\n            \"template_string\": \"{\\\"match_{{template}}\\\": {}}\\\"\",\n            \"template_vars\" : {\n                \"template\" : \"all\"\n```\n","closed_by":{"login":"MaineC","id":70953,"node_id":"MDQ6VXNlcjcwOTUz","avatar_url":"https://avatars3.githubusercontent.com/u/70953?v=4","gravatar_id":"","url":"https://api.github.com/users/MaineC","html_url":"https://github.com/MaineC","followers_url":"https://api.github.com/users/MaineC/followers","following_url":"https://api.github.com/users/MaineC/following{/other_user}","gists_url":"https://api.github.com/users/MaineC/gists{/gist_id}","starred_url":"https://api.github.com/users/MaineC/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MaineC/subscriptions","organizations_url":"https://api.github.com/users/MaineC/orgs","repos_url":"https://api.github.com/users/MaineC/repos","events_url":"https://api.github.com/users/MaineC/events{/privacy}","received_events_url":"https://api.github.com/users/MaineC/received_events","type":"User","site_admin":false},"performed_via_github_app":null}