{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/4654","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4654/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4654/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4654/events","html_url":"https://github.com/elastic/elasticsearch/issues/4654","id":25239128,"node_id":"MDU6SXNzdWUyNTIzOTEyOA==","number":4654,"title":"multi_field on object","user":{"login":"obourgain","id":975826,"node_id":"MDQ6VXNlcjk3NTgyNg==","avatar_url":"https://avatars0.githubusercontent.com/u/975826?v=4","gravatar_id":"","url":"https://api.github.com/users/obourgain","html_url":"https://github.com/obourgain","followers_url":"https://api.github.com/users/obourgain/followers","following_url":"https://api.github.com/users/obourgain/following{/other_user}","gists_url":"https://api.github.com/users/obourgain/gists{/gist_id}","starred_url":"https://api.github.com/users/obourgain/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/obourgain/subscriptions","organizations_url":"https://api.github.com/users/obourgain/orgs","repos_url":"https://api.github.com/users/obourgain/repos","events_url":"https://api.github.com/users/obourgain/events{/privacy}","received_events_url":"https://api.github.com/users/obourgain/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-01-08T13:30:05Z","updated_at":"2014-12-24T18:04:57Z","closed_at":"2014-12-24T18:04:57Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Using a mapping containing a multi_field with no \"fields\" field allows to send documents containing a json object for this field's value. \nThe document is then stored but not indexed correctly, any query or filter made against a particular field will not work, but when using match_all or a direct get, the _source contains the field.\n\nThe documentation tells that a multi_field can only be used to map core types http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/mapping-multi-field-type.html#mapping-multi-field-type , so sending a document containing an object in the multi_field should not have succeeded.\n\nMaybe creating a multi_field mapping could also check that the \"field\" property of the multi_field is present, if there is no particular use case for creating a multi_field with no \"field\".\n\nSee the shell script below to reproduce : \n\n``` bash\n#!/bin/sh\n\nELASTICSEARCH=localhost:9200\nINDEX=index\n\nif [ -z \"$INDEX\" ]; then\n    echo the $INDEX var should be set in the script\n    exit 1\nfi\n\ncat <<EOF\n\ndelete existing index\nEOF\ncurl -XDELETE $ELASTICSEARCH/$INDEX\n\ncat <<EOF\n\ncreate index\nEOF\ncurl -XPUT $ELASTICSEARCH/$INDEX\n\ncat <<EOF\n\nput mapping with a multi_field with no \"fields\" declared\nEOF\ncurl -XPOST $ELASTICSEARCH/$INDEX/type/_mapping -d '{\n    \"type\": {\n        \"properties\": {\n            \"correct_field\": {\n                \"type\" : \"double\"\n            },\n            \"accessories\": {\n                \"type\" : \"multi_field\"\n            }\n        }\n    }\n}\n'\n\ncat <<EOF\n\ninsert a document with an object in the multi_field\nEOF\ncurl -XPUT $ELASTICSEARCH/$INDEX/type/1 -d '{\n  \"accessories\": {\n    \"bar\":\"baz\"\n  }\n}'\n\ncat <<EOF\n\nrefresh before search\nEOF\ncurl -XPOST $ELASTICSEARCH/$INDEX/_refresh\n\ncat <<EOF\n\nsearch all, take a look a the _source\nEOF\ncurl -XPOST $ELASTICSEARCH/$INDEX/type/_search?pretty=true -d '{\n  \"version\": true,\n  \"query\": {\n      \"filtered\": {\n         \"query\": {\n            \"match_all\": {}\n         }\n      }\n  }\n}'\n\ncat <<EOF\n\nsearch with an exists filter on \"accessories\" \nthe \"accessories\" field exists, see the _source in the previous response, \nwhy doesn t it pass through the exists filter ?\nEOF\ncurl -XPOST $ELASTICSEARCH/$INDEX/type/_search?pretty=true -d '{\n  \"version\": true,\n  \"query\": {\n      \"filtered\": {\n         \"query\": {\n            \"match_all\": {}\n         }, \"filter\": {\n             \"exists\": {\n                \"field\": \"accessories\"\n             }\n         }\n      }\n  }\n}'\n\ncat <<EOF\n\nupdate\nEOF\ncurl -XPOST $ELASTICSEARCH/$INDEX/type/1/_update -d '{\n    \"doc\": {\n        \"correct_field\": \"12\"\n    }\n}'\n\ncat <<EOF\n\nrefresh before search\nEOF\ncurl -XPOST $ELASTICSEARCH/$INDEX/_refresh\n\ncat <<EOF\n\nthe \"correct_field\" field is not missing, see the _source in the response, why does it pass through the missing filter ?\nit seems that the document is not correctly index on other fields\nEOF\ncurl -XPOST $ELASTICSEARCH/$INDEX/type/_search?pretty=true -d '{\n    \"version\": true,\n    \"query\": {\n      \"filtered\": {\n         \"query\": {\n            \"match_all\": {}\n         }, \"filter\": { \n             \"missing\": {\n                \"field\": \"correct_field\"\n             }\n         }\n      }\n  }\n}'\n\n\ncat <<EOF\n\nin get mapping we see that the accessories.bar field is at the root of the document, where we would expect it to be in accessories.bar\nEOF\ncurl -XGET $ELASTICSEARCH/$INDEX/_mapping?pretty\n```\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}