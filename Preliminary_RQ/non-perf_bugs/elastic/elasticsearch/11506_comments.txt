[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/109206256","html_url":"https://github.com/elastic/elasticsearch/issues/11506#issuecomment-109206256","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11506","id":109206256,"node_id":"MDEyOklzc3VlQ29tbWVudDEwOTIwNjI1Ng==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-06-05T08:53:06Z","updated_at":"2015-06-05T08:53:06Z","author_association":"CONTRIBUTOR","body":"I haven't tried to replicate this, but it sounds like it is trying to do an upsert, and not handling the conflict exception correctly.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/111515625","html_url":"https://github.com/elastic/elasticsearch/issues/11506#issuecomment-111515625","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11506","id":111515625,"node_id":"MDEyOklzc3VlQ29tbWVudDExMTUxNTYyNQ==","user":{"login":"vedil","id":2587405,"node_id":"MDQ6VXNlcjI1ODc0MDU=","avatar_url":"https://avatars0.githubusercontent.com/u/2587405?v=4","gravatar_id":"","url":"https://api.github.com/users/vedil","html_url":"https://github.com/vedil","followers_url":"https://api.github.com/users/vedil/followers","following_url":"https://api.github.com/users/vedil/following{/other_user}","gists_url":"https://api.github.com/users/vedil/gists{/gist_id}","starred_url":"https://api.github.com/users/vedil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vedil/subscriptions","organizations_url":"https://api.github.com/users/vedil/orgs","repos_url":"https://api.github.com/users/vedil/repos","events_url":"https://api.github.com/users/vedil/events{/privacy}","received_events_url":"https://api.github.com/users/vedil/received_events","type":"User","site_admin":false},"created_at":"2015-06-12T14:43:03Z","updated_at":"2015-06-12T14:43:03Z","author_association":"NONE","body":"i have made a pull request for fixing this, do i have to do any thing more? is the pull request fine?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/111561111","html_url":"https://github.com/elastic/elasticsearch/issues/11506#issuecomment-111561111","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11506","id":111561111,"node_id":"MDEyOklzc3VlQ29tbWVudDExMTU2MTExMQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-06-12T17:13:54Z","updated_at":"2015-06-12T17:13:54Z","author_association":"CONTRIBUTOR","body":"thanks for the pr @vedil - i've marked it for review. somebody should get to it shortly\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/119775651","html_url":"https://github.com/elastic/elasticsearch/issues/11506#issuecomment-119775651","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11506","id":119775651,"node_id":"MDEyOklzc3VlQ29tbWVudDExOTc3NTY1MQ==","user":{"login":"vedil","id":2587405,"node_id":"MDQ6VXNlcjI1ODc0MDU=","avatar_url":"https://avatars0.githubusercontent.com/u/2587405?v=4","gravatar_id":"","url":"https://api.github.com/users/vedil","html_url":"https://github.com/vedil","followers_url":"https://api.github.com/users/vedil/followers","following_url":"https://api.github.com/users/vedil/following{/other_user}","gists_url":"https://api.github.com/users/vedil/gists{/gist_id}","starred_url":"https://api.github.com/users/vedil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vedil/subscriptions","organizations_url":"https://api.github.com/users/vedil/orgs","repos_url":"https://api.github.com/users/vedil/repos","events_url":"https://api.github.com/users/vedil/events{/privacy}","received_events_url":"https://api.github.com/users/vedil/received_events","type":"User","site_admin":false},"created_at":"2015-07-09T01:11:13Z","updated_at":"2015-07-09T01:11:13Z","author_association":"NONE","body":"messed up previous pull request, so created another one https://github.com/elastic/elasticsearch/pull/12137\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/120202763","html_url":"https://github.com/elastic/elasticsearch/issues/11506#issuecomment-120202763","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11506","id":120202763,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMDIwMjc2Mw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2015-07-10T02:13:29Z","updated_at":"2015-07-10T02:27:38Z","author_association":"MEMBER","body":"Can you provide a test case that replicates the `DocumentAlreadyExistsException`?\n\nI agree that there is clearly potential for a race condition here and think that it's important that we get to the bottom of it. A test case that reproduces the exception would be helpful.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/121331165","html_url":"https://github.com/elastic/elasticsearch/issues/11506#issuecomment-121331165","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11506","id":121331165,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMTMzMTE2NQ==","user":{"login":"vedil","id":2587405,"node_id":"MDQ6VXNlcjI1ODc0MDU=","avatar_url":"https://avatars0.githubusercontent.com/u/2587405?v=4","gravatar_id":"","url":"https://api.github.com/users/vedil","html_url":"https://github.com/vedil","followers_url":"https://api.github.com/users/vedil/followers","following_url":"https://api.github.com/users/vedil/following{/other_user}","gists_url":"https://api.github.com/users/vedil/gists{/gist_id}","starred_url":"https://api.github.com/users/vedil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vedil/subscriptions","organizations_url":"https://api.github.com/users/vedil/orgs","repos_url":"https://api.github.com/users/vedil/repos","events_url":"https://api.github.com/users/vedil/events{/privacy}","received_events_url":"https://api.github.com/users/vedil/received_events","type":"User","site_admin":false},"created_at":"2015-07-14T18:28:06Z","updated_at":"2015-07-14T18:28:06Z","author_association":"NONE","body":"tried creating a test case after removing my changes, and modifying my test a bit\n @Test\n    public void testIndexNUpdateUpsert() {\n            //update action goes to the primary, index op gets executed locally, then replicated\n            String[] updateShardActions = new String[]{UpdateAction.NAME, IndexAction.NAME + \"[r]\"};\n            interceptTransportActions(updateShardActions);\n\n```\n        String indexOrAlias = randomIndexOrAlias();\n\n        String[] indexShardActions = new String[]{IndexAction.NAME, IndexAction.NAME + \"[r]\"};\n        interceptTransportActions(indexShardActions);\n\n        IndexRequest indexRequest = new IndexRequest(randomIndexOrAlias(), \"type\", \"id\").source(\"field\", \"value\");\n        IndexResponse indexResponse = internalCluster().clientNodeClient().index(indexRequest).actionGet();\n        clearInterceptedActions();\n        assertSameIndices(indexRequest, indexShardActions);\n        assertThat(1L, equalTo(indexResponse.getVersion()));\n\n        indexRequest = new IndexRequest(randomIndexOrAlias(), \"type\", \"id\").source(\"field\", \"value\");\n        indexResponse = internalCluster().clientNodeClient().index(indexRequest).actionGet();\n        clearInterceptedActions();\n        //assertSameIndices(indexRequest, indexShardActions);\n        assertThat(2L, equalTo(indexResponse.getVersion()));\n\n        UpdateRequest updateRequest = new UpdateRequest(indexOrAlias, \"type\", \"id\").upsert(\"field2\", \"value2\").doc(\"field1\", \"value1\");\n        UpdateResponse updateResponse = internalCluster().clientNodeClient().update(updateRequest).actionGet();\n        assertThat( updateResponse.getVersion(), greaterThan(indexResponse.getVersion()));\n\n        clearInterceptedActions();\n        System.out.println(\"updateRequest \"+updateRequest +\" updateShardActions = \"+updateShardActions );\n        assertSameIndicesOptionalRequests(updateRequest, updateShardActions);\n}\n```\n\nnow this is failing always by saying 1 is < 2, is my assert supposed to succeed?\ni am doing index, index, update and expecting a version > 2\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/121331430","html_url":"https://github.com/elastic/elasticsearch/issues/11506#issuecomment-121331430","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11506","id":121331430,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMTMzMTQzMA==","user":{"login":"vedil","id":2587405,"node_id":"MDQ6VXNlcjI1ODc0MDU=","avatar_url":"https://avatars0.githubusercontent.com/u/2587405?v=4","gravatar_id":"","url":"https://api.github.com/users/vedil","html_url":"https://github.com/vedil","followers_url":"https://api.github.com/users/vedil/followers","following_url":"https://api.github.com/users/vedil/following{/other_user}","gists_url":"https://api.github.com/users/vedil/gists{/gist_id}","starred_url":"https://api.github.com/users/vedil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vedil/subscriptions","organizations_url":"https://api.github.com/users/vedil/orgs","repos_url":"https://api.github.com/users/vedil/repos","events_url":"https://api.github.com/users/vedil/events{/privacy}","received_events_url":"https://api.github.com/users/vedil/received_events","type":"User","site_admin":false},"created_at":"2015-07-14T18:29:00Z","updated_at":"2015-07-14T18:29:00Z","author_association":"NONE","body":"i am running test case using these vm arguments in eclipse\n-ea -Dtests.seed=806B4E52F9B20C5B -Dtests.assertion.disabled=false -Dtests.heap.size=512m -Dtests.locale=no_NO_NY -Dtests.timezone=America/Miquelon -Des.logger.level=DEBUG\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/124578640","html_url":"https://github.com/elastic/elasticsearch/issues/11506#issuecomment-124578640","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11506","id":124578640,"node_id":"MDEyOklzc3VlQ29tbWVudDEyNDU3ODY0MA==","user":{"login":"vedil","id":2587405,"node_id":"MDQ6VXNlcjI1ODc0MDU=","avatar_url":"https://avatars0.githubusercontent.com/u/2587405?v=4","gravatar_id":"","url":"https://api.github.com/users/vedil","html_url":"https://github.com/vedil","followers_url":"https://api.github.com/users/vedil/followers","following_url":"https://api.github.com/users/vedil/following{/other_user}","gists_url":"https://api.github.com/users/vedil/gists{/gist_id}","starred_url":"https://api.github.com/users/vedil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vedil/subscriptions","organizations_url":"https://api.github.com/users/vedil/orgs","repos_url":"https://api.github.com/users/vedil/repos","events_url":"https://api.github.com/users/vedil/events{/privacy}","received_events_url":"https://api.github.com/users/vedil/received_events","type":"User","site_admin":false},"created_at":"2015-07-24T16:56:54Z","updated_at":"2015-07-24T16:56:54Z","author_association":"NONE","body":"```\n    @Test\n    public void testIndexNUpdateUpsert() {\n        //update action goes to the primary, index op gets executed locally, then replicated\n        //String[] updateShardActions = new String[]{UpdateAction.NAME, IndexAction.NAME + \"[r]\"};\n        //interceptTransportActions(updateShardActions);\n\n        final  String indexOrAlias = randomIndexOrAlias();\n        final int NUMBER_OF_THREADS = 10;\n        final int UPDATE_EVERY = 2;\n        final CountDownLatch latch = new CountDownLatch(NUMBER_OF_THREADS);\n        Thread[] threads = new Thread[NUMBER_OF_THREADS];\n        for (int i = 0; i < threads.length; i++) {\n            threads[i] = new Thread() {\n                @Override\n                public void run() {\n                    try {\n                        for (long i = 0; i < NUMBER_OF_THREADS; i++) {\n                            if ((i % UPDATE_EVERY) == 0) {\n                                UpdateRequest updateRequest = new UpdateRequest(indexOrAlias, \"type\", \"id\").upsert(\"field2\", \"value2\").doc(\"field1\", \"value1\");\n                                UpdateResponse updateResponse = internalCluster().clientNodeClient().update(updateRequest).actionGet();\n                                System.out.println(\"update response = \"+updateResponse);\n                            } else {\n                                IndexRequest indexRequest = new IndexRequest(indexOrAlias, \"type\", \"id\").source(\"field\", \"value\");\n                                IndexResponse indexResponse =  internalCluster().clientNodeClient().index(indexRequest).actionGet();\n                                System.out.println(\"index response = \"+indexResponse);\n                            }\n                        }\n                    } finally {\n                        latch.countDown();\n                    }\n                }\n            };\n        }\n\n        for (Thread thread : threads) {\n            thread.start();\n        }\n\n        try {\n            latch.await();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n            throw new RuntimeException();\n        }\n}\n```\n\nusing this test i am able to reproduce the \"document already exists\" also i see some exceptions whose message is like \"version conflict, current [3], provided [1]\" also\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/125604266","html_url":"https://github.com/elastic/elasticsearch/issues/11506#issuecomment-125604266","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11506","id":125604266,"node_id":"MDEyOklzc3VlQ29tbWVudDEyNTYwNDI2Ng==","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2015-07-28T13:21:01Z","updated_at":"2015-07-28T13:21:01Z","author_association":"CONTRIBUTOR","body":"I do not think this is an actual bug.\n\n@vedil  I believe the unit test you put [here](https://github.com/elastic/elasticsearch/issues/11506#issuecomment-121331165) fails because you use a new `randomIndexOrAlias()` for each request and so the requests might not all got to the same index. I you use the same index each time the test will pass.\n\nI agree that the `DocumentAlreadyExistsException` seems weird for the integration test but this is also expected I think. An update first retrieves the document via `get` and then issues an `index` request with the updated source. If a write sneaked in between `get` and issuing the `index` request we throw a `VersionConflictException` in case the document already existed before the update. However, in case the document did not exist when the `get` was executed we check that the document does still not exist when the `index` request is sent. If it does, we throw a `DocumentAlreadyExistsException`.\nTo circumvent this, you need to set the [retry on conflict parameter](https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update.html#_parameters_3) to a higher value.\nLet me know if my explanation makes sense.\n\nWe could potentially throw a `VersionConfictException` instead of a `DocumentAlreadyExistsException` to have consistent exceptions for updates or have a dedicated `UpdateFailedException` that explains what happened  or just document this better. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/125623153","html_url":"https://github.com/elastic/elasticsearch/issues/11506#issuecomment-125623153","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11506","id":125623153,"node_id":"MDEyOklzc3VlQ29tbWVudDEyNTYyMzE1Mw==","user":{"login":"vedil","id":2587405,"node_id":"MDQ6VXNlcjI1ODc0MDU=","avatar_url":"https://avatars0.githubusercontent.com/u/2587405?v=4","gravatar_id":"","url":"https://api.github.com/users/vedil","html_url":"https://github.com/vedil","followers_url":"https://api.github.com/users/vedil/followers","following_url":"https://api.github.com/users/vedil/following{/other_user}","gists_url":"https://api.github.com/users/vedil/gists{/gist_id}","starred_url":"https://api.github.com/users/vedil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vedil/subscriptions","organizations_url":"https://api.github.com/users/vedil/orgs","repos_url":"https://api.github.com/users/vedil/repos","events_url":"https://api.github.com/users/vedil/events{/privacy}","received_events_url":"https://api.github.com/users/vedil/received_events","type":"User","site_admin":false},"created_at":"2015-07-28T14:13:35Z","updated_at":"2015-07-28T14:13:35Z","author_association":"NONE","body":"regarding randomIndexOrAlias, i am calling it once and using it in all requests. so within a test it will use same index.\nyour other explanation makes sense, i feel VersionConfictException makes more sense.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/145970281","html_url":"https://github.com/elastic/elasticsearch/issues/11506#issuecomment-145970281","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11506","id":145970281,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTk3MDI4MQ==","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2015-10-06T19:18:17Z","updated_at":"2015-10-06T19:18:17Z","author_association":"CONTRIBUTOR","body":"After https://github.com/elastic/elasticsearch/pull/13955 is in we will get `VersionConfictException`.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/146226827","html_url":"https://github.com/elastic/elasticsearch/issues/11506#issuecomment-146226827","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11506","id":146226827,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjIyNjgyNw==","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2015-10-07T15:16:19Z","updated_at":"2015-10-07T15:16:19Z","author_association":"CONTRIBUTOR","body":"#13955 was merged, closing\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/374923554","html_url":"https://github.com/elastic/elasticsearch/issues/11506#issuecomment-374923554","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11506","id":374923554,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NDkyMzU1NA==","user":{"login":"xing00lian","id":4695431,"node_id":"MDQ6VXNlcjQ2OTU0MzE=","avatar_url":"https://avatars0.githubusercontent.com/u/4695431?v=4","gravatar_id":"","url":"https://api.github.com/users/xing00lian","html_url":"https://github.com/xing00lian","followers_url":"https://api.github.com/users/xing00lian/followers","following_url":"https://api.github.com/users/xing00lian/following{/other_user}","gists_url":"https://api.github.com/users/xing00lian/gists{/gist_id}","starred_url":"https://api.github.com/users/xing00lian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xing00lian/subscriptions","organizations_url":"https://api.github.com/users/xing00lian/orgs","repos_url":"https://api.github.com/users/xing00lian/repos","events_url":"https://api.github.com/users/xing00lian/events{/privacy}","received_events_url":"https://api.github.com/users/xing00lian/received_events","type":"User","site_admin":false},"created_at":"2018-03-21T12:42:33Z","updated_at":"2018-03-21T12:42:33Z","author_association":"NONE","body":"赞","performed_via_github_app":null}]