[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94012123","html_url":"https://github.com/elastic/elasticsearch/issues/10647#issuecomment-94012123","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10647","id":94012123,"node_id":"MDEyOklzc3VlQ29tbWVudDk0MDEyMTIz","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2015-04-17T15:42:40Z","updated_at":"2015-04-17T15:42:40Z","author_association":"MEMBER","body":"I guess you could use a `bool filter` with many `must` clauses to wrap all your filters? Would this work for you?\n\nI don't think it's an issue here but more a question.\nYou should prefer the mailing list for that kind of question.\n\nClosing but feel free to reopen if you think it's a bug.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94391098","html_url":"https://github.com/elastic/elasticsearch/issues/10647#issuecomment-94391098","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10647","id":94391098,"node_id":"MDEyOklzc3VlQ29tbWVudDk0MzkxMDk4","user":{"login":"gge-etudes","id":11996257,"node_id":"MDQ6VXNlcjExOTk2MjU3","avatar_url":"https://avatars3.githubusercontent.com/u/11996257?v=4","gravatar_id":"","url":"https://api.github.com/users/gge-etudes","html_url":"https://github.com/gge-etudes","followers_url":"https://api.github.com/users/gge-etudes/followers","following_url":"https://api.github.com/users/gge-etudes/following{/other_user}","gists_url":"https://api.github.com/users/gge-etudes/gists{/gist_id}","starred_url":"https://api.github.com/users/gge-etudes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gge-etudes/subscriptions","organizations_url":"https://api.github.com/users/gge-etudes/orgs","repos_url":"https://api.github.com/users/gge-etudes/repos","events_url":"https://api.github.com/users/gge-etudes/events{/privacy}","received_events_url":"https://api.github.com/users/gge-etudes/received_events","type":"User","site_admin":false},"created_at":"2015-04-20T08:24:32Z","updated_at":"2015-04-20T08:40:55Z","author_association":"NONE","body":"Hi, thanks for your reply.\n\nWell i think it's an issue because it used to work in previous releases.\nAnyhow, i had to apply those filters outside of the query because of caching and faceting issues.\n\nRight now it's ok as i only have one post_filter clause in this particular project.\nBut still, i'd like to know what are the guidelines to achieve the exact same result as before.\n\nI tried to use a bool filter inside a post_filter without success, but it might be a matter of syntax.\n\nBy the way, i am unable to re-open this issue.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94418256","html_url":"https://github.com/elastic/elasticsearch/issues/10647#issuecomment-94418256","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10647","id":94418256,"node_id":"MDEyOklzc3VlQ29tbWVudDk0NDE4MjU2","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2015-04-20T10:36:14Z","updated_at":"2015-04-20T10:36:14Z","author_association":"MEMBER","body":"I just tried this on 1.1.1:\n\n```\nDELETE index\nPUT index/type/1\n{\n  \"foo\": \"bar\"\n}\n\nGET index/type/_search\n{\n  \"post_filter\": [\n    \"term\": {\n      \"foo\": \"bar\"\n    }\n  ]\n}\n```\n\nIt fails as expected:\n\n```\n{\n   \"error\": \"SearchPhaseExecutionException[Failed to execute phase [query], all shards failed; shardFailures {[nKIQFEpFTQu0s_qXbmoNtg][index][1]: SearchParseException[[index][1]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\\n  \\\"post_filter\\\": [\\n    \\\"term\\\": {\\n      \\\"foo\\\": \\\"bar\\\"\\n    }\\n  ]\\n}\\n]]]; nested: QueryParsingException[[index] [_na] filter malformed, must start with start_object]; }{[nKIQFEpFTQu0s_qXbmoNtg][index][0]: SearchParseException[[index][0]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\\n  \\\"post_filter\\\": [\\n    \\\"term\\\": {\\n      \\\"foo\\\": \\\"bar\\\"\\n    }\\n  ]\\n}\\n]]]; nested: QueryParsingException[[index] [_na] filter malformed, must start with start_object]; }{[nKIQFEpFTQu0s_qXbmoNtg][index][4]: SearchParseException[[index][4]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\\n  \\\"post_filter\\\": [\\n    \\\"term\\\": {\\n      \\\"foo\\\": \\\"bar\\\"\\n    }\\n  ]\\n}\\n]]]; nested: QueryParsingException[[index] [_na] filter malformed, must start with start_object]; }{[nKIQFEpFTQu0s_qXbmoNtg][index][2]: SearchParseException[[index][2]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\\n  \\\"post_filter\\\": [\\n    \\\"term\\\": {\\n      \\\"foo\\\": \\\"bar\\\"\\n    }\\n  ]\\n}\\n]]]; nested: QueryParsingException[[index] [_na] filter malformed, must start with start_object]; }{[nKIQFEpFTQu0s_qXbmoNtg][index][3]: SearchParseException[[index][3]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\\n  \\\"post_filter\\\": [\\n    \\\"term\\\": {\\n      \\\"foo\\\": \\\"bar\\\"\\n    }\\n  ]\\n}\\n]]]; nested: QueryParsingException[[index] [_na] filter malformed, must start with start_object]; }]\",\n   \"status\": 400\n}\n```\n\nNote that the oldest doc don't mention you can use an array of filters: http://www.elastic.co/guide/en/elasticsearch/reference/0.90/search-request-post-filter.html\n\nSo you might hit something else here.\nCould you check on your end and create a full SENSE script as I wrote which runs in 1.1.1 and breaks in 1.5.1?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94435863","html_url":"https://github.com/elastic/elasticsearch/issues/10647#issuecomment-94435863","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10647","id":94435863,"node_id":"MDEyOklzc3VlQ29tbWVudDk0NDM1ODYz","user":{"login":"gge-etudes","id":11996257,"node_id":"MDQ6VXNlcjExOTk2MjU3","avatar_url":"https://avatars3.githubusercontent.com/u/11996257?v=4","gravatar_id":"","url":"https://api.github.com/users/gge-etudes","html_url":"https://github.com/gge-etudes","followers_url":"https://api.github.com/users/gge-etudes/followers","following_url":"https://api.github.com/users/gge-etudes/following{/other_user}","gists_url":"https://api.github.com/users/gge-etudes/gists{/gist_id}","starred_url":"https://api.github.com/users/gge-etudes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gge-etudes/subscriptions","organizations_url":"https://api.github.com/users/gge-etudes/orgs","repos_url":"https://api.github.com/users/gge-etudes/repos","events_url":"https://api.github.com/users/gge-etudes/events{/privacy}","received_events_url":"https://api.github.com/users/gge-etudes/received_events","type":"User","site_admin":false},"created_at":"2015-04-20T12:11:35Z","updated_at":"2015-04-20T12:18:12Z","author_association":"NONE","body":"OK, so your sample works in v1.1.1 (not in v1.5.1) if you add curly braces around the term filter :\n\n```\nPOST index/type/_search\n{\n   \"post_filter\":[\n      {\n         \"term\":{\n            \"foo\":\"bar\"\n         }\n      }\n   ]\n}\n```\n\nBut only with a sole filter, so this query fails in v1.1.1 (as in v1.5.1) :\n\n```\nPOST index/type/_search\n{\n   \"post_filter\":[\n      {\n         \"term\":{\n            \"foo\":\"bar\"\n         }\n      },\n      {\n         \"term\":{\n            \"foo\":\"bar\"\n         }\n      }\n   ]\n}\n```\n\nWhereas the bool filter approach works like a charmi n v1.1.1 (and in v1.5.1) :\n\n```\nPOST index/type/_search\n{\n   \"post_filter\":{\n      \"bool\":{\n         \"must\":[\n            {\n               \"term\":{\n                  \"foo\":\"bar\"\n               }\n            },\n            {\n               \"term\":{\n                  \"foo\":\"bar\"\n               }\n            }\n         ]\n      }\n   }\n}\n```\n\nStrange thing... you can express a post filter as an array made of a single item.\nSo I was assuming it could be an array populated by multiple items... but no.\nStill, there is a difference between v1.1.1 and  v1.5.1.\nThe bool filter way is fine to me.\n\nThank you very much.\n","performed_via_github_app":null}]