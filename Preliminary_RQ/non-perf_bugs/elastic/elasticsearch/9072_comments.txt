[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/69359259","html_url":"https://github.com/elastic/elasticsearch/issues/9072#issuecomment-69359259","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9072","id":69359259,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MzU5MjU5","user":{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false},"created_at":"2015-01-09T16:34:20Z","updated_at":"2015-01-09T16:41:48Z","author_association":"MEMBER","body":"Hi,\n\nFirst of all thanks for wanting to contribute.\n\nSecond, one can use HDFS right now as a storage for Elasticsearch/Lucene indices by mounting HDFS  through its official [NFS gateway](http://hadoop.apache.org/docs/r2.6.0/hadoop-project-dist/hadoop-hdfs/HdfsNfsGateway.html) as a local partition and exposing it to the local OS as just another partition/fs. NFS mounting has been around for quite some time, it is well understood and supported by Hadoop. Note that one needs to pay attention to HDFS missing `delete-on-close` semantic which is needed by Lucene. Some of the Hadoop vendors offers additional ways to expose HDFS transparently to the OS besides NFS so that applications can use it without having to depend on the (vanilla) Hadoop/HDFS API.\n\nThird, when it comes to HDFS (or any other storage for that matter), one needs to take into account the _performance_ characteristics of HDFS which is, by design, a big (aka plenty of space), distributed  file-system. Some might call it an archiving store based on its aim to store large volumes of data across multiple machines at the expense of performance. As each call to the file-system can easily translate to one or multiple calls across the network (where the content might be stored) and since random-access performance is _significantly_ slower (again due to remote calls) than a local storage, using HDFS as the backing storage for a real-time/fast engine is, to say the least, challenging. There are also some issues regarding the fs guarantees (think `fsync` and see HBase work/fork of HDFS) that bring in a lot of 'baggage' with little (if any) benefits: Elasticsearch already does replication and again, the performance and reliability of the local fs is significantly better (orders of magnitude if you consider the OS page cache) than HDFS. Again, there are ways to tweak the performance of HDFS (potentially by adding some caching in front, tweaking data locality, adjusting replication, etc...) and for those cases, NFS is a good candidate. \n\nThat's not to say this is impossible but rather there are some challenges that affect not only performance but also the consistency and durability of the data. And we always prefer to hold on a feature (even if it's really cool) unless we're positive it is reliable. \n\nHowever, that shouldn't prevent you from experimenting or extending/modifying Elasticsearch. As long as it offers you and others value, go for it! Whether it's part of Elasticsearch proper or not becomes secondary at that point. \n\nP.S. by Hadoop/HDFS I'm referring to vanilla Apache Hadoop.\nP.P.S. Elasticsearch supports HDFS as a snapshot/restore target through the [HDFS repository](https://github.com/elasticsearch/elasticsearch-hadoop/tree/master/repository-hdfs)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/69707588","html_url":"https://github.com/elastic/elasticsearch/issues/9072#issuecomment-69707588","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9072","id":69707588,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NzA3NTg4","user":{"login":"AndreasHoermandinger","id":1818798,"node_id":"MDQ6VXNlcjE4MTg3OTg=","avatar_url":"https://avatars2.githubusercontent.com/u/1818798?v=4","gravatar_id":"","url":"https://api.github.com/users/AndreasHoermandinger","html_url":"https://github.com/AndreasHoermandinger","followers_url":"https://api.github.com/users/AndreasHoermandinger/followers","following_url":"https://api.github.com/users/AndreasHoermandinger/following{/other_user}","gists_url":"https://api.github.com/users/AndreasHoermandinger/gists{/gist_id}","starred_url":"https://api.github.com/users/AndreasHoermandinger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndreasHoermandinger/subscriptions","organizations_url":"https://api.github.com/users/AndreasHoermandinger/orgs","repos_url":"https://api.github.com/users/AndreasHoermandinger/repos","events_url":"https://api.github.com/users/AndreasHoermandinger/events{/privacy}","received_events_url":"https://api.github.com/users/AndreasHoermandinger/received_events","type":"User","site_admin":false},"created_at":"2015-01-13T07:53:37Z","updated_at":"2015-01-13T07:53:37Z","author_association":"NONE","body":"Hi,\n\nThank you for your answer.\n\nI've tried NFS mounting, but it turned out to be quite unstable. (Especially when Elasticsearch started moving shards.)\n\nIn fact right now, I'm not trying to achieve a well performant (in terms of latency) storage for elasticsearch. More like an additional storage that can be used. By using a4e2230ebd5d424a78c266dc98f0521f897e580b for example, one could use Hdfs as a storage for cold indices, that are not frequently queried, but frequent enough that one does not want to index it everytime just to query it. So like you say, it would be used as an archive.\n\nConcerning replicas: theoretically elasticsearch does not need to move shards anymore, when they're on Hdfs. So it would be quite convenient to have shards (where Hdfs does all the replicas) lie on Hdfs and if they need to be moved, they just need to be released and then again found and locked by the new node.\n\nI've already tried around a bit with the existing directory implementation and achieved that indices were stored on Hdfs and could be queried from Hdfs. The only problem I have is to store/read translogs on Hdfs and that indices are deleted in NodeEnvironment and if I don't want to add long if elses with one branch just doing the normal (standard) execution and the other branch just for Hdfs I need to add an implementation on some other way (I've already implemented that one too though).\n\nThank you also for pointing out the problems with using Hdfs as a storage. Of course I will take care of them as soon as I get a properly running version. Also I never thought that it would be accepted without being stable and properly tested.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/70141471","html_url":"https://github.com/elastic/elasticsearch/issues/9072#issuecomment-70141471","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9072","id":70141471,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMTQxNDcx","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-01-15T19:03:31Z","updated_at":"2015-01-15T19:03:31Z","author_association":"CONTRIBUTOR","body":"> Concerning replicas: theoretically elasticsearch does not need to move shards anymore, when they're on Hdfs. So it would be quite convenient to have shards (where Hdfs does all the replicas) lie on Hdfs and if they need to be moved, they just need to be released and then again found and locked by the new node.\n\nYou may be interested in https://github.com/elasticsearch/elasticsearch/issues/8976 which is being designed for just such a purpose.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/70965990","html_url":"https://github.com/elastic/elasticsearch/issues/9072#issuecomment-70965990","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9072","id":70965990,"node_id":"MDEyOklzc3VlQ29tbWVudDcwOTY1OTkw","user":{"login":"AndreasHoermandinger","id":1818798,"node_id":"MDQ6VXNlcjE4MTg3OTg=","avatar_url":"https://avatars2.githubusercontent.com/u/1818798?v=4","gravatar_id":"","url":"https://api.github.com/users/AndreasHoermandinger","html_url":"https://github.com/AndreasHoermandinger","followers_url":"https://api.github.com/users/AndreasHoermandinger/followers","following_url":"https://api.github.com/users/AndreasHoermandinger/following{/other_user}","gists_url":"https://api.github.com/users/AndreasHoermandinger/gists{/gist_id}","starred_url":"https://api.github.com/users/AndreasHoermandinger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndreasHoermandinger/subscriptions","organizations_url":"https://api.github.com/users/AndreasHoermandinger/orgs","repos_url":"https://api.github.com/users/AndreasHoermandinger/repos","events_url":"https://api.github.com/users/AndreasHoermandinger/events{/privacy}","received_events_url":"https://api.github.com/users/AndreasHoermandinger/received_events","type":"User","site_admin":false},"created_at":"2015-01-22T03:25:08Z","updated_at":"2015-01-22T03:25:08Z","author_association":"NONE","body":"Oh, great\nThank you!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/135132125","html_url":"https://github.com/elastic/elasticsearch/issues/9072#issuecomment-135132125","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9072","id":135132125,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNTEzMjEyNQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-08-26T18:31:05Z","updated_at":"2015-08-26T18:31:05Z","author_association":"CONTRIBUTOR","body":"> So I also have a few questions: Is it possible to use Solr's implementation of HdfsDirectory (legally, technically,....) and why is this implemented in Solr, not in Lucene itself?\n\nThe way I see it is that if you want to have your indices stored in HDFS at all costs, then this is your only option. On the other hand, we are already seeing performance issues with some (supposedly) good network-attached storage, so I don't think having indices stored in HDFS would be a better story. From an elasticsearch perspective, the best you can do is to use a good local drive. If you use anything else then you need to be prepared for keeping wondering whether performance issues you might encounter are due to elasticsearch itself or to the storage.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/135368028","html_url":"https://github.com/elastic/elasticsearch/issues/9072#issuecomment-135368028","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9072","id":135368028,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNTM2ODAyOA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-08-27T09:52:23Z","updated_at":"2015-08-27T09:52:23Z","author_association":"CONTRIBUTOR","body":"@jpountz agreed - this issue seems to have lost momentum, and there's certainly no interest in supporting this from our side, so I'm going to close this issue.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/185096262","html_url":"https://github.com/elastic/elasticsearch/issues/9072#issuecomment-185096262","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9072","id":185096262,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTA5NjI2Mg==","user":{"login":"chenryn","id":1219655,"node_id":"MDQ6VXNlcjEyMTk2NTU=","avatar_url":"https://avatars3.githubusercontent.com/u/1219655?v=4","gravatar_id":"","url":"https://api.github.com/users/chenryn","html_url":"https://github.com/chenryn","followers_url":"https://api.github.com/users/chenryn/followers","following_url":"https://api.github.com/users/chenryn/following{/other_user}","gists_url":"https://api.github.com/users/chenryn/gists{/gist_id}","starred_url":"https://api.github.com/users/chenryn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chenryn/subscriptions","organizations_url":"https://api.github.com/users/chenryn/orgs","repos_url":"https://api.github.com/users/chenryn/repos","events_url":"https://api.github.com/users/chenryn/events{/privacy}","received_events_url":"https://api.github.com/users/chenryn/received_events","type":"User","site_admin":false},"created_at":"2016-02-17T08:41:29Z","updated_at":"2016-02-17T08:41:29Z","author_association":"NONE","body":"@AndreasHoermandinger Did you implement this already? I  just find a slide said that \"HDFS Directory in Solr only 25% slower than local SSD\": http://www.slideshare.net/lucidworks/webinar-solr-fusion-for-big-data-55059041 If so, performance wouldn't be a big problem as NFS mount...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/218174417","html_url":"https://github.com/elastic/elasticsearch/issues/9072#issuecomment-218174417","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9072","id":218174417,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODE3NDQxNw==","user":{"login":"trixpan","id":3108527,"node_id":"MDQ6VXNlcjMxMDg1Mjc=","avatar_url":"https://avatars1.githubusercontent.com/u/3108527?v=4","gravatar_id":"","url":"https://api.github.com/users/trixpan","html_url":"https://github.com/trixpan","followers_url":"https://api.github.com/users/trixpan/followers","following_url":"https://api.github.com/users/trixpan/following{/other_user}","gists_url":"https://api.github.com/users/trixpan/gists{/gist_id}","starred_url":"https://api.github.com/users/trixpan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/trixpan/subscriptions","organizations_url":"https://api.github.com/users/trixpan/orgs","repos_url":"https://api.github.com/users/trixpan/repos","events_url":"https://api.github.com/users/trixpan/events{/privacy}","received_events_url":"https://api.github.com/users/trixpan/received_events","type":"User","site_admin":false},"created_at":"2016-05-10T14:27:31Z","updated_at":"2016-05-10T14:27:31Z","author_association":"NONE","body":"@clintongormley \nIf I understand correctly this issue seems to be progressing well in here:\n\nhttps://www.elastic.co/guide/en/elasticsearch/plugins/master/repository-hdfs.html\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/218409816","html_url":"https://github.com/elastic/elasticsearch/issues/9072#issuecomment-218409816","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9072","id":218409816,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODQwOTgxNg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-05-11T09:35:46Z","updated_at":"2016-05-11T09:35:46Z","author_association":"CONTRIBUTOR","body":"@trixpan that is for snapshotting indices to hdfs, not running a live index on hdfs\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/223812605","html_url":"https://github.com/elastic/elasticsearch/issues/9072#issuecomment-223812605","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9072","id":223812605,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMzgxMjYwNQ==","user":{"login":"tdunning","id":250490,"node_id":"MDQ6VXNlcjI1MDQ5MA==","avatar_url":"https://avatars2.githubusercontent.com/u/250490?v=4","gravatar_id":"","url":"https://api.github.com/users/tdunning","html_url":"https://github.com/tdunning","followers_url":"https://api.github.com/users/tdunning/followers","following_url":"https://api.github.com/users/tdunning/following{/other_user}","gists_url":"https://api.github.com/users/tdunning/gists{/gist_id}","starred_url":"https://api.github.com/users/tdunning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tdunning/subscriptions","organizations_url":"https://api.github.com/users/tdunning/orgs","repos_url":"https://api.github.com/users/tdunning/repos","events_url":"https://api.github.com/users/tdunning/events{/privacy}","received_events_url":"https://api.github.com/users/tdunning/received_events","type":"User","site_admin":false},"created_at":"2016-06-05T13:17:28Z","updated_at":"2016-06-05T13:17:28Z","author_association":"NONE","body":"Relative to the use of NFS for storing indexes, this won't work well with NFS over HDFS, but it works great with NFS over MapR FS. The issue is that you have to have first class NFS support. The problem with NFS over HDFS is that it is really NFS over local file system with copy-back to HDFS after inactivity. This leads to some pretty bizarre semantics and seriously impairs performance. There are also serious issues for many applications with the immutability of files on HDFS. Since Lucene actually only writes files once anyway, this is less of an issue.\n\nThe HDFS repository that is available as of Lucene 4.7 and which is exposed in Solr from that time might work with Elastic, but the way that Elastic handles updates to indexes is significantly different than the way Solr handles things.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/223818673","html_url":"https://github.com/elastic/elasticsearch/issues/9072#issuecomment-223818673","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9072","id":223818673,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMzgxODY3Mw==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-05T15:14:40Z","updated_at":"2016-06-05T15:14:40Z","author_association":"CONTRIBUTOR","body":"> The HDFS repository that is available as of Lucene 4.7 and which is exposed in Solr from that time might work with Elastic, but the way that Elastic handles updates to indexes is significantly different than the way Solr handles things.\n\nif you alluding to indexing documents on all replicas, that applies only unless you are using [shadow replicas](https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-shadow-replicas.html). If shadow replicas are used writes only happening on the primary. Yet, the entire story of HDFS vs. some other filesystem underneath is pointless IMO - ES and lucene is designed to run on top of a local FS to perform well. ES adds a distribution layer to lucene and doesn't need another complex distributed component like HDFS. We have a way to snapshot into HDFS for backups etc. but running live index is expected to be local or behind a read/write FS local to the node.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/223820072","html_url":"https://github.com/elastic/elasticsearch/issues/9072#issuecomment-223820072","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9072","id":223820072,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMzgyMDA3Mg==","user":{"login":"tdunning","id":250490,"node_id":"MDQ6VXNlcjI1MDQ5MA==","avatar_url":"https://avatars2.githubusercontent.com/u/250490?v=4","gravatar_id":"","url":"https://api.github.com/users/tdunning","html_url":"https://github.com/tdunning","followers_url":"https://api.github.com/users/tdunning/followers","following_url":"https://api.github.com/users/tdunning/following{/other_user}","gists_url":"https://api.github.com/users/tdunning/gists{/gist_id}","starred_url":"https://api.github.com/users/tdunning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tdunning/subscriptions","organizations_url":"https://api.github.com/users/tdunning/orgs","repos_url":"https://api.github.com/users/tdunning/repos","events_url":"https://api.github.com/users/tdunning/events{/privacy}","received_events_url":"https://api.github.com/users/tdunning/received_events","type":"User","site_admin":false},"created_at":"2016-06-05T15:40:04Z","updated_at":"2016-06-05T15:41:57Z","author_association":"NONE","body":"I understand the bias towards local file systems, but the argument about performance being higher on a local file system is not factually correct. You are almost certainly correct about HDFS, but advanced file-systems like MapR FS can out-perform local file systems, surprisingly enough. That is why Vertica recommends running on MapR FS. That is why Sybase IQ and Hana are qualified by SAP to run on MapR.\n\nThe reason that this happens is largely due to the fact that the local filesystems are largely clones of various Unix filesystems that were largely designed in the late 80's when design parameters were very different. Only a very few file systems have actually been designed from zero in the last decade to take good advantage of modern memory, disk and networking systems. A secondary reason is that a good distributed file system will control the spindles directly and will schedule data motion and linearization in a globally optimized fashion. The multi-tenant nature of most Linux file systems prevents proper scheduling and data linearization.\n\nKeep in mind the fact that an advanced distributed file system can keep the data local if desired and that dual 10Gb/s networks will outrun the disks on many, if not most of the systems that you will see if you do decide to replicate the data non-locally.\n\nAside from performance, one key advantage of running on a distributed file system is the dramatically lowered risk data corruption due to disk-full errors. Local instances generally are relegated to a single partition of fixed and limited size.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/223855949","html_url":"https://github.com/elastic/elasticsearch/issues/9072#issuecomment-223855949","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9072","id":223855949,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMzg1NTk0OQ==","user":{"login":"chenryn","id":1219655,"node_id":"MDQ6VXNlcjEyMTk2NTU=","avatar_url":"https://avatars3.githubusercontent.com/u/1219655?v=4","gravatar_id":"","url":"https://api.github.com/users/chenryn","html_url":"https://github.com/chenryn","followers_url":"https://api.github.com/users/chenryn/followers","following_url":"https://api.github.com/users/chenryn/following{/other_user}","gists_url":"https://api.github.com/users/chenryn/gists{/gist_id}","starred_url":"https://api.github.com/users/chenryn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chenryn/subscriptions","organizations_url":"https://api.github.com/users/chenryn/orgs","repos_url":"https://api.github.com/users/chenryn/repos","events_url":"https://api.github.com/users/chenryn/events{/privacy}","received_events_url":"https://api.github.com/users/chenryn/received_events","type":"User","site_admin":false},"created_at":"2016-06-06T02:23:45Z","updated_at":"2016-06-06T02:23:45Z","author_association":"NONE","body":"is MapR-FS open source? Do you have a performance testing report for ES on MapR-FS vs HDFS vs Local FS? @tdunning \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/223857948","html_url":"https://github.com/elastic/elasticsearch/issues/9072#issuecomment-223857948","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9072","id":223857948,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMzg1Nzk0OA==","user":{"login":"trixpan","id":3108527,"node_id":"MDQ6VXNlcjMxMDg1Mjc=","avatar_url":"https://avatars1.githubusercontent.com/u/3108527?v=4","gravatar_id":"","url":"https://api.github.com/users/trixpan","html_url":"https://github.com/trixpan","followers_url":"https://api.github.com/users/trixpan/followers","following_url":"https://api.github.com/users/trixpan/following{/other_user}","gists_url":"https://api.github.com/users/trixpan/gists{/gist_id}","starred_url":"https://api.github.com/users/trixpan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/trixpan/subscriptions","organizations_url":"https://api.github.com/users/trixpan/orgs","repos_url":"https://api.github.com/users/trixpan/repos","events_url":"https://api.github.com/users/trixpan/events{/privacy}","received_events_url":"https://api.github.com/users/trixpan/received_events","type":"User","site_admin":false},"created_at":"2016-06-06T02:45:55Z","updated_at":"2016-06-06T02:45:55Z","author_association":"NONE","body":"@chenryn Mapr-FS is closed source and is part of MapR's offerings. There are multiple generic performance tests but it is known that at least one user had success using ES together with Mesos+Myriad and MapR-FS\n\nhttps://discuss.elastic.co/t/elasticsearch-and-yarn-my-experience-with-mesos/24724\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/223918971","html_url":"https://github.com/elastic/elasticsearch/issues/9072#issuecomment-223918971","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9072","id":223918971,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMzkxODk3MQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-06T10:10:21Z","updated_at":"2016-06-06T10:10:21Z","author_association":"CONTRIBUTOR","body":"> You are almost certainly correct about HDFS, but advanced file-systems like MapR FS can out-perform local file systems, surprisingly enough. \n\nOh man, this is great I was pretty sure we are all largely limited by the speed of light but apparently that is not true? Nobel price? :) Sorry ted, I think statements like this are only confusing people and are far from the the technical aspects we are discussion here. There is no FS that will be faster by fetching stuff over the wire and then going to disk than just reading it from local disks. You have to compare apples and apples so please don't put statements like this here, I would really appreciate that. \n\n> I understand the bias towards local file systems, but the argument about performance being higher on...\n\nspeaking of bias, I would have appreciated full disclosure on a public issue before advertising closed source software solutions. It's just not fair to others. \n\nA last word on distributed filesystem, it's a massive added complexity to all system that rely on it. Every installation of a distributed FS I have seen requires a dedicated team to keep it running and maintain it. The benefit is very limited compared to the added complexity and the potential sink of uncertainty when it gets to performance debugging I recommend to make your choices wisely.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/223930720","html_url":"https://github.com/elastic/elasticsearch/issues/9072#issuecomment-223930720","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9072","id":223930720,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMzkzMDcyMA==","user":{"login":"tdunning","id":250490,"node_id":"MDQ6VXNlcjI1MDQ5MA==","avatar_url":"https://avatars2.githubusercontent.com/u/250490?v=4","gravatar_id":"","url":"https://api.github.com/users/tdunning","html_url":"https://github.com/tdunning","followers_url":"https://api.github.com/users/tdunning/followers","following_url":"https://api.github.com/users/tdunning/following{/other_user}","gists_url":"https://api.github.com/users/tdunning/gists{/gist_id}","starred_url":"https://api.github.com/users/tdunning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tdunning/subscriptions","organizations_url":"https://api.github.com/users/tdunning/orgs","repos_url":"https://api.github.com/users/tdunning/repos","events_url":"https://api.github.com/users/tdunning/events{/privacy}","received_events_url":"https://api.github.com/users/tdunning/received_events","type":"User","site_admin":false},"created_at":"2016-06-06T11:13:44Z","updated_at":"2016-06-06T11:15:49Z","author_association":"NONE","body":"Sarcasm aside, I am happy to sit down over a beer and explain how to get the results I am talking about and why it works the way it does. My comments all stem from personal experience. No faster-than-light technology required to substantiate them. A more careful reading of what I wrote before you make a knee jerk response might help as well.\n\nBut you are correct that this is wandering from the point of the original enhancement request. If there are questions specifically about how and why HDFS API's might be useful for Elastic, here is a good place. Discussion about the generic capabilities and properties of modern file systems can continue by pinging me on twitter or by email. Both are easy to find.\n","performed_via_github_app":null}]