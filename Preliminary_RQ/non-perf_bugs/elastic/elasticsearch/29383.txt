{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/29383","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29383/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29383/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29383/events","html_url":"https://github.com/elastic/elasticsearch/issues/29383","id":311410057,"node_id":"MDU6SXNzdWUzMTE0MTAwNTc=","number":29383,"title":"Multi field primary key to lower overhead","user":{"login":"ddorian","id":1592898,"node_id":"MDQ6VXNlcjE1OTI4OTg=","avatar_url":"https://avatars3.githubusercontent.com/u/1592898?v=4","gravatar_id":"","url":"https://api.github.com/users/ddorian","html_url":"https://github.com/ddorian","followers_url":"https://api.github.com/users/ddorian/followers","following_url":"https://api.github.com/users/ddorian/following{/other_user}","gists_url":"https://api.github.com/users/ddorian/gists{/gist_id}","starred_url":"https://api.github.com/users/ddorian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddorian/subscriptions","organizations_url":"https://api.github.com/users/ddorian/orgs","repos_url":"https://api.github.com/users/ddorian/repos","events_url":"https://api.github.com/users/ddorian/events{/privacy}","received_events_url":"https://api.github.com/users/ddorian/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-04-04T22:16:48Z","updated_at":"2018-04-05T12:06:04Z","closed_at":"2018-04-05T10:56:45Z","author_association":"NONE","active_lock_reason":null,"body":"On cases where the documents are small, often times the \"_id\" is just a string of \"field1:field2:field3\", like you do in normal RDBMS with mutli column primary keys.\r\n\r\nBut currently you have to duplicate which will have 1 more inverted-index(each term 1 value) and another dictionary for the term which may or not be good compressible. \r\n\r\nIn this, you can store on translog a json_array(f1,f2,f3) while on lucene not storing an _id. Of course you'll have to store the fields to return them when querying to build the _id.\r\n\r\nMakes sense ?","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}