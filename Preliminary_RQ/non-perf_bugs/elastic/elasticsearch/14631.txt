{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/14631","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14631/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14631/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14631/events","html_url":"https://github.com/elastic/elasticsearch/issues/14631","id":115936358,"node_id":"MDU6SXNzdWUxMTU5MzYzNTg=","number":14631,"title":"1.7.X Reroutes seem really fragile","user":{"login":"jolynch","id":1420460,"node_id":"MDQ6VXNlcjE0MjA0NjA=","avatar_url":"https://avatars1.githubusercontent.com/u/1420460?v=4","gravatar_id":"","url":"https://api.github.com/users/jolynch","html_url":"https://github.com/jolynch","followers_url":"https://api.github.com/users/jolynch/followers","following_url":"https://api.github.com/users/jolynch/following{/other_user}","gists_url":"https://api.github.com/users/jolynch/gists{/gist_id}","starred_url":"https://api.github.com/users/jolynch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jolynch/subscriptions","organizations_url":"https://api.github.com/users/jolynch/orgs","repos_url":"https://api.github.com/users/jolynch/repos","events_url":"https://api.github.com/users/jolynch/events{/privacy}","received_events_url":"https://api.github.com/users/jolynch/received_events","type":"User","site_admin":false},"labels":[{"id":837246479,"node_id":"MDU6TGFiZWw4MzcyNDY0Nzk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Allocation","name":":Distributed/Allocation","color":"0e8a16","default":false,"description":"All issues relating to the decision making around placing a shard (both master logic & on the nodes)"},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-11-09T18:29:05Z","updated_at":"2018-02-14T14:05:06Z","closed_at":"2016-02-14T15:59:17Z","author_association":"NONE","active_lock_reason":null,"body":"I've been trying to get 1.7.3 into production, but I've been having difficulty getting reroutes to work quite right. Originally the issue was that our custom discovery plugin did not call reroute properly on node join and leave**, but even now it appears we run into tons of issues where nodes leave and their shards are never re-assigned until either another node joins or some other membership change that triggers a reroute.\n\nI started diving into it and noticed that 9223cebf6d removed periodic reroutes, which to me seems pretty strange. My understanding of the current design in the 1.7 branch is that when events happen that imply a reroute, the various subsystems trigger reroutes in the `RoutingService`, where the reroutes themselves are managed by one shot timer (because of shard delay) which means that if for whatever reason when that timer fires (e.g. clock skew, system load, or just a bug like #14445) the routing subsystem decides _not_ to do anything, that routing update will be lost forever until the next update.\n\nI am confused by this architecture choice. In my mind the correct implementation continues to reroute until the cluster state is out of yellow. From a correctness point of view it seems there really should be no one shot timers, it should just be a periodic \"are there unassigned shards, oh yes there are we should try to fix that\".\n\nI guess my question in this issue is: why remove periodic reroutes which are somewhat vital to the correctness of the datastore? It seems like this choice just opens up the system to failure (e.g. #12566, #14445, #14010, etc ...), and the much safer choice is to have the master call reroute until the unassigned shards are healthily allocated whenever a state change occurs that requires a reroute. I understand the desire to not always be calling reroute, but at the very least the [`doRun`](https://github.com/elastic/elasticsearch/blob/05d4530971ef0ea46d0f4fa6ee64dbc8df659682/src/main/java/org/elasticsearch/cluster/routing/RoutingService.java#L136) method in `clusterChanged` should check that the reroute caused the cluster to transition to green and if not schedule another reroute right?\n\n*\\* Why it is the responsibility of the discovery subsystem to inform the shard routing subsystem to reroute is confusing to me as it already publishes cluster state changes which is sufficient information; rerouting may be an optimization but why is it relied on for correctness ...?\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}