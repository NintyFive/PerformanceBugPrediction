{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/55420","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55420/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55420/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55420/events","html_url":"https://github.com/elastic/elasticsearch/issues/55420","id":602209444,"node_id":"MDU6SXNzdWU2MDIyMDk0NDQ=","number":55420,"title":"Some ML Test are failing with \"Accounting breaker not reset to\" errors","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"labels":[{"id":912833043,"node_id":"MDU6TGFiZWw5MTI4MzMwNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:ml","name":":ml","color":"0e8a16","default":false,"description":"Machine learning"},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false},"assignees":[{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false}],"milestone":null,"comments":11,"created_at":"2020-04-17T20:15:14Z","updated_at":"2020-04-21T09:45:18Z","closed_at":"2020-04-21T09:45:18Z","author_association":"MEMBER","active_lock_reason":null,"body":"A couple of latest examples:\r\n\r\n- https://gradle-enterprise.elastic.co/s/6yqnwfagbfup4/console-log?task=:x-pack:plugin:ml:qa:native-multi-node-tests:integTestRunner\r\n- https://gradle-enterprise.elastic.co/s/ne7zmjmk3xsh6/console-log?task=:x-pack:plugin:ml:qa:native-multi-node-tests:integTestRunner\r\n\r\nThe error looks like this:\r\n\r\n```\r\n\r\norg.elasticsearch.xpack.ml.integration.ClassificationEvaluationIT > testEvaluate_Recall_CardinalityTooHigh FAILED |  \r\n-- | --\r\n  | java.lang.AssertionError: Fielddata breaker not reset to 0 on node: {integTest-0}{M747rOuTSMqmMD6YA_WfEg}{3ej5FYKXTt6fWGrPL2LjoA}{127.0.0.1}{127.0.0.1:34535}{dilmrt}{testattr=test, ml.machine_memory=101370638336, ml.max_open_jobs=20, xpack.installed=true, transform.node=true} |  \r\n  | Expected: <0L> |  \r\n  | but: was <1888L> |  \r\n  | at __randomizedtesting.SeedInfo.seed([520EF9CC9245A36:6DE1D1D748961E23]:0) |  \r\n  | at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18) |  \r\n  | at org.junit.Assert.assertThat(Assert.java:956) |  \r\n  | at org.elasticsearch.test.ExternalTestCluster.ensureEstimatedStats(ExternalTestCluster.java:194) |  \r\n  | at org.elasticsearch.test.TestCluster.assertAfterTest(TestCluster.java:90) |  \r\n  | at org.elasticsearch.test.ESIntegTestCase.afterInternal(ESIntegTestCase.java:559) |  \r\n  | at org.elasticsearch.test.ESIntegTestCase.cleanUpCluster(ESIntegTestCase.java:2039) |  \r\n  | at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source) |  \r\n  | at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) |  \r\n  | at java.base/java.lang.reflect.Method.invoke(Method.java:566) |  \r\n  | at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1758) |  \r\n  | at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:1004) |  \r\n  | at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36) |  \r\n  | at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49) |  \r\n  | at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45) |  \r\n  | at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48) |  \r\n  | at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64) |  \r\n  | at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47) |  \r\n  | at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36) |  \r\n  | at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:375) |  \r\n  | at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:824) |  \r\n  | at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:475) |  \r\n  | at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:955) |  \r\n  | at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:840) |  \r\n  | at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:891) |  \r\n  | at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:902) |  \r\n  | at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45) |  \r\n  | at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36) |  \r\n  | at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41) |  \r\n  | at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40) |  \r\n  | at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40) |  \r\n  | at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36) |  \r\n  | at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36) |  \r\n  | at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53) |  \r\n  | at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47) |  \r\n  | at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64) |  \r\n  | at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54) |  \r\n  | at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36) |  \r\n  | at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:375) |  \r\n  | at com.carrotsearch.randomizedtesting.ThreadLeakControl.lambda$forkTimeoutingTask$0(ThreadLeakControl.java:831) |  \r\n  | at java.base/java.lang.Thread.run(Thread.java:834)\r\n\r\n\r\n```\r\n\r\nOne common part, is that logs are filled with the following errors:\r\n```\r\n1> [2020-04-17T12:35:18,158][WARN ][o.e.x.m.i.i.I.Factory    ] [external_22] failure parsing pipeline config [xpack_monitoring_6] |  \r\n  | 1> org.elasticsearch.ElasticsearchParseException: No processor type exists with name [script] |  \r\n  | 1> \tat org.elasticsearch.ingest.ConfigurationUtils.newConfigurationException(ConfigurationUtils.java:315) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \tat org.elasticsearch.ingest.ConfigurationUtils.readProcessor(ConfigurationUtils.java:444) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \tat org.elasticsearch.ingest.ConfigurationUtils.readProcessor(ConfigurationUtils.java:398) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \tat org.elasticsearch.ingest.ConfigurationUtils.readProcessorConfigs(ConfigurationUtils.java:336) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \tat org.elasticsearch.ingest.Pipeline.create(Pipeline.java:74) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \tat org.elasticsearch.xpack.ml.inference.ingest.InferenceProcessor$Factory.accept(InferenceProcessor.java:209) [x-pack-ml-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \tat org.elasticsearch.xpack.ml.inference.ingest.InferenceProcessor$Factory.accept(InferenceProcessor.java:166) [x-pack-ml-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \tat org.elasticsearch.ingest.IngestService.lambda$applyClusterState$5(IngestService.java:542) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \tat java.util.concurrent.CopyOnWriteArrayList.forEach(CopyOnWriteArrayList.java:803) [?:?] |  \r\n  | 1> \tat org.elasticsearch.ingest.IngestService.applyClusterState(IngestService.java:542) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \tat org.elasticsearch.cluster.service.ClusterApplierService.lambda$callClusterStateAppliers$5(ClusterApplierService.java:511) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \tat java.lang.Iterable.forEach(Iterable.java:75) [?:?] |  \r\n  | 1> \tat org.elasticsearch.cluster.service.ClusterApplierService.callClusterStateAppliers(ClusterApplierService.java:508) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \tat org.elasticsearch.cluster.service.ClusterApplierService.applyChanges(ClusterApplierService.java:485) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \tat org.elasticsearch.cluster.service.ClusterApplierService.runTask(ClusterApplierService.java:432) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \tat org.elasticsearch.cluster.service.ClusterApplierService$UpdateTask.run(ClusterApplierService.java:176) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:632) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?] |  \r\n  | 1> \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?] |  \r\n  | 1> \tat java.lang.Thread.run(Thread.java:834) [?:?] |  \r\n  | 1> \tSuppressed: org.elasticsearch.ElasticsearchParseException: No processor type exists with name [gsub] |  \r\n  | 1> \t\tat org.elasticsearch.ingest.ConfigurationUtils.newConfigurationException(ConfigurationUtils.java:315) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \t\tat org.elasticsearch.ingest.ConfigurationUtils.readProcessor(ConfigurationUtils.java:444) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \t\tat org.elasticsearch.ingest.ConfigurationUtils.readProcessor(ConfigurationUtils.java:398) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \t\tat org.elasticsearch.ingest.ConfigurationUtils.readProcessorConfigs(ConfigurationUtils.java:336) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \t\tat org.elasticsearch.ingest.Pipeline.create(Pipeline.java:74) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \t\tat org.elasticsearch.xpack.ml.inference.ingest.InferenceProcessor$Factory.accept(InferenceProcessor.java:209) [x-pack-ml-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \t\tat org.elasticsearch.xpack.ml.inference.ingest.InferenceProcessor$Factory.accept(InferenceProcessor.java:166) [x-pack-ml-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \t\tat org.elasticsearch.ingest.IngestService.lambda$applyClusterState$5(IngestService.java:542) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \t\tat java.util.concurrent.CopyOnWriteArrayList.forEach(CopyOnWriteArrayList.java:803) [?:?] |  \r\n  | 1> \t\tat org.elasticsearch.ingest.IngestService.applyClusterState(IngestService.java:542) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \t\tat org.elasticsearch.cluster.service.ClusterApplierService.lambda$callClusterStateAppliers$5(ClusterApplierService.java:511) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \t\tat java.lang.Iterable.forEach(Iterable.java:75) [?:?] |  \r\n  | 1> \t\tat org.elasticsearch.cluster.service.ClusterApplierService.callClusterStateAppliers(ClusterApplierService.java:508) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \t\tat org.elasticsearch.cluster.service.ClusterApplierService.applyChanges(ClusterApplierService.java:485) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \t\tat org.elasticsearch.cluster.service.ClusterApplierService.runTask(ClusterApplierService.java:432) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \t\tat org.elasticsearch.cluster.service.ClusterApplierService$UpdateTask.run(ClusterApplierService.java:176) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \t\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:632) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \t\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \t\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215) [elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] |  \r\n  | 1> \t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?] |  \r\n  | 1> \t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?] |  \r\n  | 1> \t\tat java.lang.Thread.run(Thread.java:834) [?:?] |  \r\n```\r\n\r\n@benwtrent pointed out that it could be caused by #54816 but we still need to verify that. These messages might be as well a red herring.  \r\n\r\n","closed_by":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"performed_via_github_app":null}