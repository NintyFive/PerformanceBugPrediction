[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/9456224","html_url":"https://github.com/elastic/elasticsearch/issues/2311#issuecomment-9456224","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2311","id":9456224,"node_id":"MDEyOklzc3VlQ29tbWVudDk0NTYyMjQ=","user":{"login":"wires","id":315734,"node_id":"MDQ6VXNlcjMxNTczNA==","avatar_url":"https://avatars3.githubusercontent.com/u/315734?v=4","gravatar_id":"","url":"https://api.github.com/users/wires","html_url":"https://github.com/wires","followers_url":"https://api.github.com/users/wires/followers","following_url":"https://api.github.com/users/wires/following{/other_user}","gists_url":"https://api.github.com/users/wires/gists{/gist_id}","starred_url":"https://api.github.com/users/wires/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wires/subscriptions","organizations_url":"https://api.github.com/users/wires/orgs","repos_url":"https://api.github.com/users/wires/repos","events_url":"https://api.github.com/users/wires/events{/privacy}","received_events_url":"https://api.github.com/users/wires/received_events","type":"User","site_admin":false},"created_at":"2012-10-15T18:33:40Z","updated_at":"2012-10-15T18:33:40Z","author_association":"NONE","body":"This can probably be fixed by adding a check to `ActionModule.registerAction(...)` in the ES source\n\n``` java\n        // don't override already existing actions\n        if(actions.containsKey(action.name()))\n            return;\n```\n\nbut I wonder if this is actually what you want;  thought I needed this, but then I found the `org.elasticsearch.index.indexing.IndexingOperationListener` that allows you to hook into indexing operations.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/9554064","html_url":"https://github.com/elastic/elasticsearch/issues/2311#issuecomment-9554064","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2311","id":9554064,"node_id":"MDEyOklzc3VlQ29tbWVudDk1NTQwNjQ=","user":{"login":"andreasch","id":2414055,"node_id":"MDQ6VXNlcjI0MTQwNTU=","avatar_url":"https://avatars2.githubusercontent.com/u/2414055?v=4","gravatar_id":"","url":"https://api.github.com/users/andreasch","html_url":"https://github.com/andreasch","followers_url":"https://api.github.com/users/andreasch/followers","following_url":"https://api.github.com/users/andreasch/following{/other_user}","gists_url":"https://api.github.com/users/andreasch/gists{/gist_id}","starred_url":"https://api.github.com/users/andreasch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andreasch/subscriptions","organizations_url":"https://api.github.com/users/andreasch/orgs","repos_url":"https://api.github.com/users/andreasch/repos","events_url":"https://api.github.com/users/andreasch/events{/privacy}","received_events_url":"https://api.github.com/users/andreasch/received_events","type":"User","site_admin":false},"created_at":"2012-10-18T05:58:57Z","updated_at":"2012-10-18T05:58:57Z","author_association":"NONE","body":"That was my solution. I introduced a property for allowing/disallowing standard action overrides. If overriding is enabled, the action is added only if it does not already exist. The IndexingOperationListener would get me most of what I needed but I also needed to override another action (PutMappingAction) and there is no listener for that one.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/9635992","html_url":"https://github.com/elastic/elasticsearch/issues/2311#issuecomment-9635992","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2311","id":9635992,"node_id":"MDEyOklzc3VlQ29tbWVudDk2MzU5OTI=","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2012-10-20T21:04:36Z","updated_at":"2012-10-20T21:04:36Z","author_association":"MEMBER","body":"The idea is not to allow one to override the default set of actions in elasticsearch, this is not what the extension aspect was meant to do.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/9636073","html_url":"https://github.com/elastic/elasticsearch/issues/2311#issuecomment-9636073","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2311","id":9636073,"node_id":"MDEyOklzc3VlQ29tbWVudDk2MzYwNzM=","user":{"login":"andreasch","id":2414055,"node_id":"MDQ6VXNlcjI0MTQwNTU=","avatar_url":"https://avatars2.githubusercontent.com/u/2414055?v=4","gravatar_id":"","url":"https://api.github.com/users/andreasch","html_url":"https://github.com/andreasch","followers_url":"https://api.github.com/users/andreasch/followers","following_url":"https://api.github.com/users/andreasch/following{/other_user}","gists_url":"https://api.github.com/users/andreasch/gists{/gist_id}","starred_url":"https://api.github.com/users/andreasch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andreasch/subscriptions","organizations_url":"https://api.github.com/users/andreasch/orgs","repos_url":"https://api.github.com/users/andreasch/repos","events_url":"https://api.github.com/users/andreasch/events{/privacy}","received_events_url":"https://api.github.com/users/andreasch/received_events","type":"User","site_admin":false},"created_at":"2012-10-20T21:14:43Z","updated_at":"2012-10-20T21:14:43Z","author_association":"NONE","body":"Is there any other way to intercept a request and change it or execute something else before executing the default action? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/9637375","html_url":"https://github.com/elastic/elasticsearch/issues/2311#issuecomment-9637375","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2311","id":9637375,"node_id":"MDEyOklzc3VlQ29tbWVudDk2MzczNzU=","user":{"login":"wires","id":315734,"node_id":"MDQ6VXNlcjMxNTczNA==","avatar_url":"https://avatars3.githubusercontent.com/u/315734?v=4","gravatar_id":"","url":"https://api.github.com/users/wires","html_url":"https://github.com/wires","followers_url":"https://api.github.com/users/wires/followers","following_url":"https://api.github.com/users/wires/following{/other_user}","gists_url":"https://api.github.com/users/wires/gists{/gist_id}","starred_url":"https://api.github.com/users/wires/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wires/subscriptions","organizations_url":"https://api.github.com/users/wires/orgs","repos_url":"https://api.github.com/users/wires/repos","events_url":"https://api.github.com/users/wires/events{/privacy}","received_events_url":"https://api.github.com/users/wires/received_events","type":"User","site_admin":false},"created_at":"2012-10-20T22:09:24Z","updated_at":"2012-10-20T22:09:24Z","author_association":"NONE","body":"I've intercepted the calls at shard level using a `IndexingOperationListener`, see [this](https://github.com/0x01/degraphmalizer/blob/030be1c7ae35759f1a6e4bbfbde0ea2684b06b37/src/main/java/org/elasticsearch/plugin/degraphmalizer/DegraphmalizerListener.java) commit. I'm not sure if the document can be modified here, but it seems so, Kimchy?\n\nFurthermore, Jörg commented on the [forum](https://groups.google.com/forum/?fromgroups=#!topic/elasticsearch/fsTVZg3Hyr8)\n\n> Thanks for sharing this. Afaik the indexing operation listener's job is to catch write/update events inside of a Lucene index within an ES shard (which is not the scope of a whole index, only a part of it), just as the translog works. Pretty much low-level stuff. I'm not sure if shard level operations are the best place for adding denormalized data to documents, I would prefer the node client level, where you have access to the field mapping and the cluster state.\n\nSo maybe he misunderstood me, because I don't want to add the attributes there, I just want to drop some attributes. I am interested in catching every document going into ES and then later, asynchronously, update the document using a regular get/put (and use MVCC to make sure it stays consistent).\n\nBut I would certainly be interested how to achieve what Jörg is talking about, having access to the field mappings, but still catch all documents (in particular ones that are pushed using rivers). Any hints?\n\nthnx,\nJelle\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/9646426","html_url":"https://github.com/elastic/elasticsearch/issues/2311#issuecomment-9646426","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2311","id":9646426,"node_id":"MDEyOklzc3VlQ29tbWVudDk2NDY0MjY=","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2012-10-21T19:23:34Z","updated_at":"2012-10-21T19:23:34Z","author_association":"MEMBER","body":"I am not a fan of extensions into elasticsearch that munges the data, or change \"default\" behavior outside of the features that are provided. You don't extend MySQL to drop some attributes, you do that on your application layer.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/9661014","html_url":"https://github.com/elastic/elasticsearch/issues/2311#issuecomment-9661014","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2311","id":9661014,"node_id":"MDEyOklzc3VlQ29tbWVudDk2NjEwMTQ=","user":{"login":"wires","id":315734,"node_id":"MDQ6VXNlcjMxNTczNA==","avatar_url":"https://avatars3.githubusercontent.com/u/315734?v=4","gravatar_id":"","url":"https://api.github.com/users/wires","html_url":"https://github.com/wires","followers_url":"https://api.github.com/users/wires/followers","following_url":"https://api.github.com/users/wires/following{/other_user}","gists_url":"https://api.github.com/users/wires/gists{/gist_id}","starred_url":"https://api.github.com/users/wires/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wires/subscriptions","organizations_url":"https://api.github.com/users/wires/orgs","repos_url":"https://api.github.com/users/wires/repos","events_url":"https://api.github.com/users/wires/events{/privacy}","received_events_url":"https://api.github.com/users/wires/received_events","type":"User","site_admin":false},"created_at":"2012-10-22T11:57:26Z","updated_at":"2012-10-22T11:57:26Z","author_association":"NONE","body":"I can certainly follow that reasoning, but unlike DBMS, in ES there are plugins like rivers which allow elasticsearch to \"autonomously\" fill itself (which is great!).\n\nYet is is not possible to place a function in-between a river and the indexing. Such processing is thus moved _into_ the river: the couch river, for instance, has script filters. But, at least from my perspective, it makes sense to use this by other rivers as well. Can this not be generalised into \"document modification\" plugins that sit just before the indexing?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/9684692","html_url":"https://github.com/elastic/elasticsearch/issues/2311#issuecomment-9684692","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2311","id":9684692,"node_id":"MDEyOklzc3VlQ29tbWVudDk2ODQ2OTI=","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2012-10-22T23:27:31Z","updated_at":"2012-10-22T23:27:31Z","author_association":"MEMBER","body":"@0x01 to be honest, if you end up needing to have additional functionality that the rivers does not produce, personally, I would write it outside of ES and just do what the river does. For example, with couch, its pretty simple to listen on the changes feed writing it in your favorite language, and munging the data however you want before indexing it to ES. I personally find this type of solution more manageable, then having to write a plugin \"into\" elasticsearch.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/9747636","html_url":"https://github.com/elastic/elasticsearch/issues/2311#issuecomment-9747636","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2311","id":9747636,"node_id":"MDEyOklzc3VlQ29tbWVudDk3NDc2MzY=","user":{"login":"wires","id":315734,"node_id":"MDQ6VXNlcjMxNTczNA==","avatar_url":"https://avatars3.githubusercontent.com/u/315734?v=4","gravatar_id":"","url":"https://api.github.com/users/wires","html_url":"https://github.com/wires","followers_url":"https://api.github.com/users/wires/followers","following_url":"https://api.github.com/users/wires/following{/other_user}","gists_url":"https://api.github.com/users/wires/gists{/gist_id}","starred_url":"https://api.github.com/users/wires/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wires/subscriptions","organizations_url":"https://api.github.com/users/wires/orgs","repos_url":"https://api.github.com/users/wires/repos","events_url":"https://api.github.com/users/wires/events{/privacy}","received_events_url":"https://api.github.com/users/wires/received_events","type":"User","site_admin":false},"created_at":"2012-10-24T17:09:03Z","updated_at":"2012-10-24T17:09:03Z","author_association":"NONE","body":"I see.\n\nWell, we get our data from various sources:\n- couchdb, activemq, rss\n- things pushing to solr (using solr-mock plugin)\n- things pushing to ES api\n\nFor us the rivers and the mock-solr plugin provide all the functionality we need, in terms of fetching/receiving the documents.\n\nBut what I'm looking for is a central place to process these documents.\n\nWhat we've already build comes down to two things:\n1. extract graph information from incoming documents, preferably dropping that information before it hits indexing\n2. define special \"denormalized\" fields, which are (asynchronously) added to the document, based on a traversal of the graph.\n\nAll configuration is pushed by the user, in a similar way as River configuration is send to /_river/, so there is little magic going on inside the plugin (it's all in de configuration).\n\nAs an alternative we could use something like the proposed changes feed (https://github.com/elasticsearch/elasticsearch/issues/1242) but then we cannot modify the documents. (We want to modify the documents to remove some fields that will be stored in the graph).\n\nSo at least for our situation it makes a lot of sense to run this \"inside\" ES, as we get a lot of functionality, essentially for free.\n\nSome others have also expressed interest in such a plugin (mrvisser, jprante), so maybe we should move this discussion to the mailing list?\n\nbye,\nJelle.\n","performed_via_github_app":null}]