[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/68300222","html_url":"https://github.com/elastic/elasticsearch/issues/9059#issuecomment-68300222","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9059","id":68300222,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MzAwMjIy","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2014-12-29T20:37:27Z","updated_at":"2014-12-29T20:37:27Z","author_association":"MEMBER","body":"> Forbid fieldnames beginning with an underscore - this is too stringent and will impact existing data\n\nWhy is this too stringent? I can't imagine there are a ton of people that have fields beginning with underscores, but even for those that it does, it doesn't seem like this solves the issue. How would these escaped field names show up in results: as unescaped or escaped? If unescaped, then you have the same problem, just on output instead of input.  If escaped, then the user still has to change their code to handle the escaped values, so why is it any different than changing to a name not beginning with an underscore?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/68347514","html_url":"https://github.com/elastic/elasticsearch/issues/9059#issuecomment-68347514","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9059","id":68347514,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MzQ3NTE0","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-12-30T10:56:18Z","updated_at":"2014-12-30T10:56:31Z","author_association":"CONTRIBUTOR","body":"> > Forbid fieldnames beginning with an underscore - this is too stringent and will impact existing data\n> \n> Why is this too stringent? \n\nWe're trying to avoid breaking existing applications, eg see https://github.com/elasticsearch/elasticsearch/issues/6736#issuecomment-61191156\n\n> I can't imagine there are a ton of people that have fields beginning with underscores, but even for those that it does, it doesn't seem like this solves the issue. How would these escaped field names show up in results: as unescaped or escaped? If unescaped, then you have the same problem, just on output instead of input. \n\nOn output, metadata fields are displayed at the same level as the `_source` field, which is why there is no conflict.  It is only when we refer to fields by name (eg in queries, aggs, sorting, scripts) that there is potential for conflict.\n\nThat said, I still don't know which of the four options I mentioned is the best solution.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/75221336","html_url":"https://github.com/elastic/elasticsearch/issues/9059#issuecomment-75221336","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9059","id":75221336,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MjIxMzM2","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2015-02-20T11:01:07Z","updated_at":"2015-02-20T11:01:07Z","author_association":"MEMBER","body":"As described in #8042 we should also consider aggregation names too\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/97330701","html_url":"https://github.com/elastic/elasticsearch/issues/9059#issuecomment-97330701","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9059","id":97330701,"node_id":"MDEyOklzc3VlQ29tbWVudDk3MzMwNzAx","user":{"login":"geekpete","id":2070843,"node_id":"MDQ6VXNlcjIwNzA4NDM=","avatar_url":"https://avatars2.githubusercontent.com/u/2070843?v=4","gravatar_id":"","url":"https://api.github.com/users/geekpete","html_url":"https://github.com/geekpete","followers_url":"https://api.github.com/users/geekpete/followers","following_url":"https://api.github.com/users/geekpete/following{/other_user}","gists_url":"https://api.github.com/users/geekpete/gists{/gist_id}","starred_url":"https://api.github.com/users/geekpete/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geekpete/subscriptions","organizations_url":"https://api.github.com/users/geekpete/orgs","repos_url":"https://api.github.com/users/geekpete/repos","events_url":"https://api.github.com/users/geekpete/events{/privacy}","received_events_url":"https://api.github.com/users/geekpete/received_events","type":"User","site_admin":false},"created_at":"2015-04-29T07:22:22Z","updated_at":"2015-04-29T07:28:59Z","author_association":"MEMBER","body":"As per my original ticket: https://github.com/elastic/elasticsearch/issues/6589\n\nCreating index names that are physically unwritable on the filesystem could be tested first with a simple write test to see if they're writeable, and if not, reject the index creation. This would save the awful scenario where an index creation is attempted by elasticsearch but is unable to allocate primary shards due to the base inability to even create the directory name. \n\nSo a simple test of file path validity first to avoid: \"java.io.IOException: Invalid file path\" and reject if it fails the test.\n\nThe result when this is not handled can be a cluster in red state until the user/admin can decipher what special encoding to use (in the example of an index name with bad chars like control codes) in order to delete the index and restore cluster to green state.\n\nAn example of an index with bad chars as described is:\n\n```\nwhatever\\u0000\\u0001whatever\n```\n\nwhich shows up this way under /_aliases?pretty and is only removed using a curl -XDELETE against:\n\n```\nlocalhost:9200/whatever%00%01whatever\n```\n\nThese characters are control codes that need to be properly escaped to be dealt with.\n\nhttp://www.fileformat.info/info/unicode/char/0001/index.htm\nhttp://www.fileformat.info/info/unicode/char/0000/index.htm\n\nSo my general point being, some really low level tests should be added first that validates if a given string is even usable all the way through and it can fail with a simple test to see if it would succeed or not before continuing on to the next step. Then the reason for it failing matters less as it just won't do it if it's not possible on whatever platform/combination. You can lay these sorts of tests down first before trying to guess all the scenarios where it _might_ fail in order to manually validate\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/105461876","html_url":"https://github.com/elastic/elasticsearch/issues/9059#issuecomment-105461876","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9059","id":105461876,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNTQ2MTg3Ng==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2015-05-26T09:25:00Z","updated_at":"2015-05-26T09:25:00Z","author_association":"MEMBER","body":"@clintongormley I think we should consider doing strict validation as a start, and adding support for crazy names as a follow up. I think it is more important to get validation into 2.0 than work out how to support crazy names.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/144513586","html_url":"https://github.com/elastic/elasticsearch/issues/9059#issuecomment-144513586","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9059","id":144513586,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NDUxMzU4Ng==","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","site_admin":false},"created_at":"2015-09-30T19:23:06Z","updated_at":"2015-09-30T19:23:06Z","author_association":"CONTRIBUTOR","body":"> @clintongormley I think we should consider doing strict validation as a start, and adding support for crazy names as a follow up. I think it is more important to get validation into 2.0 than work out how to support crazy names.\n\n+1 for simple, strict rules like were proposed in the original #6736 ... this would have prevented the horrible issues like #13858.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/144521214","html_url":"https://github.com/elastic/elasticsearch/issues/9059#issuecomment-144521214","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9059","id":144521214,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NDUyMTIxNA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-09-30T19:53:59Z","updated_at":"2015-09-30T19:53:59Z","author_association":"CONTRIBUTOR","body":"+1 for simple strict rules\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/372435857","html_url":"https://github.com/elastic/elasticsearch/issues/9059#issuecomment-372435857","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9059","id":372435857,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MjQzNTg1Nw==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2018-03-12T19:33:30Z","updated_at":"2018-03-12T19:33:30Z","author_association":"CONTRIBUTOR","body":"@clintongormley is there anything left to do from the original issue? Can we close it so long as we promise to live with its spirit in our hearts?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/372603642","html_url":"https://github.com/elastic/elasticsearch/issues/9059#issuecomment-372603642","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9059","id":372603642,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MjYwMzY0Mg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2018-03-13T09:38:00Z","updated_at":"2018-03-13T09:38:00Z","author_association":"CONTRIBUTOR","body":"@nik9000 this is so out of date that I don't think the thread is really relevant anymore.  It is probably still worth writing up rules for what is and is not allowed - these don't exist today, except in code.  And there are still places that you can name yourself into trouble, although users seldom get into trouble with these anymore.  Let's close.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/517302136","html_url":"https://github.com/elastic/elasticsearch/issues/9059#issuecomment-517302136","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9059","id":517302136,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNzMwMjEzNg==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2019-08-01T14:04:12Z","updated_at":"2019-08-01T14:04:12Z","author_association":"MEMBER","body":">  although users seldom get into trouble with these anymore. Let's close.\r\n\r\nIt seems to be still a problem, it still confuses users and I cannot find where it is documented at the moment https://discuss.elastic.co/t/legal-character-set-for-field-names/190796","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/517489171","html_url":"https://github.com/elastic/elasticsearch/issues/9059#issuecomment-517489171","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9059","id":517489171,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNzQ4OTE3MQ==","user":{"login":"geekpete","id":2070843,"node_id":"MDQ6VXNlcjIwNzA4NDM=","avatar_url":"https://avatars2.githubusercontent.com/u/2070843?v=4","gravatar_id":"","url":"https://api.github.com/users/geekpete","html_url":"https://github.com/geekpete","followers_url":"https://api.github.com/users/geekpete/followers","following_url":"https://api.github.com/users/geekpete/following{/other_user}","gists_url":"https://api.github.com/users/geekpete/gists{/gist_id}","starred_url":"https://api.github.com/users/geekpete/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geekpete/subscriptions","organizations_url":"https://api.github.com/users/geekpete/orgs","repos_url":"https://api.github.com/users/geekpete/repos","events_url":"https://api.github.com/users/geekpete/events{/privacy}","received_events_url":"https://api.github.com/users/geekpete/received_events","type":"User","site_admin":false},"created_at":"2019-08-01T23:08:38Z","updated_at":"2019-08-01T23:08:38Z","author_association":"MEMBER","body":"Should this be filed as a docs issue now then, it seems like quite a large scope though.\r\nOur current tests would be trying invalid characters and words in various places to ensure we don't regress, maybe we can more easily sift the collection of what's invalid from our tests?\r\nThis is a scenario where use of something like Swagger would allow much easier collection of such definitive lists for (automatic) documentation?","performed_via_github_app":null}]