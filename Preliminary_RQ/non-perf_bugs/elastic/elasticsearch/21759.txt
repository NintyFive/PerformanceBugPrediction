{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/21759","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21759/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21759/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21759/events","html_url":"https://github.com/elastic/elasticsearch/issues/21759","id":191328228,"node_id":"MDU6SXNzdWUxOTEzMjgyMjg=","number":21759,"title":"Use CancellableThreads to abort snapshots","user":{"login":"abeyad","id":1631297,"node_id":"MDQ6VXNlcjE2MzEyOTc=","avatar_url":"https://avatars2.githubusercontent.com/u/1631297?v=4","gravatar_id":"","url":"https://api.github.com/users/abeyad","html_url":"https://github.com/abeyad","followers_url":"https://api.github.com/users/abeyad/followers","following_url":"https://api.github.com/users/abeyad/following{/other_user}","gists_url":"https://api.github.com/users/abeyad/gists{/gist_id}","starred_url":"https://api.github.com/users/abeyad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abeyad/subscriptions","organizations_url":"https://api.github.com/users/abeyad/orgs","repos_url":"https://api.github.com/users/abeyad/repos","events_url":"https://api.github.com/users/abeyad/events{/privacy}","received_events_url":"https://api.github.com/users/abeyad/received_events","type":"User","site_admin":false},"labels":[{"id":143077482,"node_id":"MDU6TGFiZWwxNDMwNzc0ODI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Snapshot/Restore","name":":Distributed/Snapshot/Restore","color":"0e8a16","default":false,"description":"Anything directly related to the `_snapshot/*` APIs"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"assignees":[{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2016-11-23T16:57:11Z","updated_at":"2019-11-27T12:14:42Z","closed_at":"2019-11-27T12:14:41Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Right now, the way to abort a snapshot, for example when a node that holds a primary that is being snapshotted leaves the cluster, is to set the abort flag on the `IndexSnapshotShardStatus` for each relevant shard being snapshotted.  Each file being snapshotted has an `AbortableInputStream` wrapped around the actual `InputStream` that is reading shard data to write to the snapshot repository.  The `AbortableInputStream` checks the `IndexSnapshotShardStatus` before every `read(...)` call to ensure that the snapshot is not aborted.  If the abort flag is set, then the `read(...)` operation throws an `IOException`, effectively cancelling execution of the snapshot for that shard.\r\n\r\nThis works well when there is a steady stream of data to read for snapshotting, but it fails when `max_snapshot_bytes_per_sec` is set to a sufficiently low number such that we end up throttling a snapshot for a longer period of time.  During the throttling, no `read(...)` calls occur, so we do not abort in all that time.  \r\n\r\nSecondly, this method of aborting also breaks down when the transfer from reading bytes to writing them to the repository takes sufficiently long (e.g. writing to an S3 repository over a slow connection).  Between the time we write the bytes to the repository and the next `read(...)` call to get more bytes to write, the aborting does not take effect.  If this is a sufficiently long pause, we could end up with issues like holding onto the shard lock for too long leading to ripple effects such as not being able to create/allocate shards to the same node (see #21084).\r\n\r\nOne solution to this problem is to use `CancellableThreads` to execute the snapshotting of shard data, which provides a very convenient facility for cancelling the operation in a graceful manner.  This is the same mechanism recovery uses to cancel an on-going recovery.  Using `CancellableThreads` will enable us to not have to depend on the `read(...)` rates of `AbortableInputStream` and we could get rid of `AbortableInputStream` all together.","closed_by":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"performed_via_github_app":null}