{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/21","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21/events","html_url":"https://github.com/elastic/elasticsearch/issues/21","id":134137,"node_id":"MDU6SXNzdWUxMzQxMzc=","number":21,"title":"Terms API: Allow to get terms for one or more field","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"labels":[{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":23175,"node_id":"MDU6TGFiZWwyMzE3NQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.05.0","name":"v0.05.0","color":"DDDDDD","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2010-02-16T19:47:05Z","updated_at":"2014-02-12T01:34:19Z","closed_at":"2010-02-16T19:48:04Z","author_association":"MEMBER","active_lock_reason":null,"body":"Getting terms (from one or more indices) and their document frequency (the number of time those terms appear in a document) is very handy. For example, implementing tag clouds, or providing basic auto suggest search box.\n\nThere should be several options for this API, including sorting by term (lex) or doc freq, bounding size, from/to (inclusive or not), min/max freq, prefix and regexp filtering.\n\nThe rest api should be: /{index}/_terms\n","closed_by":null,"performed_via_github_app":null}