{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/26738","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26738/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26738/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26738/events","html_url":"https://github.com/elastic/elasticsearch/issues/26738","id":259534631,"node_id":"MDU6SXNzdWUyNTk1MzQ2MzE=","number":26738,"title":"[CI] TopHitsIT#testTopHitsInNestedSimple failure","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"labels":[{"id":60445228,"node_id":"MDU6TGFiZWw2MDQ0NTIyOA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest","name":">test","color":"5319e7","default":false,"description":"Issues or PRs that are addressing/adding tests"}],"state":"closed","locked":false,"assignee":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"assignees":[{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2017-09-21T15:20:27Z","updated_at":"2017-09-22T14:01:00Z","closed_at":"2017-09-22T14:01:00Z","author_association":"MEMBER","active_lock_reason":null,"body":"Reproduce line: `gradle :core:integTest -Dtests.seed=F4BA8811B299D761 -Dtests.class=org.elasticsearch.search.aggregations.metrics.TopHitsIT -Dtests.method=\"testTopHitsInNestedSimple\" -Dtests.security.manager=true -Dtests.locale=sk-SK -Dtests.timezone=Pacific/Pago_Pago`\r\n\r\nDoesn't reproduce consistently.\r\n\r\nActual error:\r\n\r\n```\r\n 2> WARNING: Uncaught exception in thread: Thread[elasticsearch[node_sd1][search][T#1],5,TGRP-TopHitsIT]\r\n  2> java.lang.AssertionError\r\n  2> \tat __randomizedtesting.SeedInfo.seed([F4BA8811B299D761]:0)\r\n  2> \tat org.apache.lucene.index.AssertingLeafReader$AssertingSortedNumericDocValues.advanceExact(AssertingLeafReader.java:730)\r\n  2> \tat org.apache.lucene.search.SortedNumericSelector$MinValue.advanceExact(SortedNumericSelector.java:136)\r\n  2> \tat org.apache.lucene.search.FieldComparator$LongComparator.getValueForDoc(FieldComparator.java:363)\r\n  2> \tat org.apache.lucene.search.FieldComparator$LongComparator.copy(FieldComparator.java:382)\r\n  2> \tat org.apache.lucene.search.TopFieldCollector$SimpleFieldCollector$1.collect(TopFieldCollector.java:141)\r\n  2> \tat org.elasticsearch.search.aggregations.metrics.tophits.TopHitsAggregator$1.collect(TopHitsAggregator.java:138)\r\n  2> \tat org.elasticsearch.search.aggregations.bucket.BestBucketsDeferringCollector.prepareSelectedBuckets(BestBucketsDeferringCollector.java:178)\r\n  2> \tat org.elasticsearch.search.aggregations.bucket.DeferringBucketCollector.replay(DeferringBucketCollector.java:44)\r\n  2> \tat org.elasticsearch.search.aggregations.bucket.DeferableBucketAggregator.runDeferredCollections(DeferableBucketAggregator.java:91)\r\n  2> \tat org.elasticsearch.search.aggregations.bucket.terms.GlobalOrdinalsStringTermsAggregator.buildAggregation(GlobalOrdinalsStringTermsAggregator.java:225)\r\n  2> \tat org.elasticsearch.search.aggregations.AggregatorFactory$MultiBucketAggregatorWrapper.buildAggregation(AggregatorFactory.java:147)\r\n  2> \tat org.elasticsearch.search.aggregations.bucket.BucketsAggregator.bucketAggregations(BucketsAggregator.java:113)\r\n  2> \tat org.elasticsearch.search.aggregations.bucket.nested.NestedAggregator.buildAggregation(NestedAggregator.java:116)\r\n  2> \tat org.elasticsearch.search.aggregations.AggregationPhase.execute(AggregationPhase.java:129)\r\n  2> \tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:116)\r\n  2> \tat org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:302)\r\n  2> \tat org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:335)\r\n  2> \tat org.elasticsearch.search.SearchService$2.onResponse(SearchService.java:311)\r\n  2> \tat org.elasticsearch.search.SearchService$2.onResponse(SearchService.java:307)\r\n  2> \tat org.elasticsearch.search.SearchService$3.doRun(SearchService.java:997)\r\n  2> \tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:638)\r\n  2> \tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n  2> \tat org.elasticsearch.common.util.concurrent.TimedRunnable.run(TimedRunnable.java:41)\r\n  2> \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n  2> \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n  2> \tat java.lang.Thread.run(Thread.java:745)\r\n```\r\n\r\nIs related to this change: #26683\r\nIf `top_hits` aggregation gets wrapped inside `nested` aggregation and execution mode is breath first then sometimes the leaf collectors don't get created properly in `TopHitsAggregator`. I'm thinking about how to best fix this.","closed_by":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"performed_via_github_app":null}