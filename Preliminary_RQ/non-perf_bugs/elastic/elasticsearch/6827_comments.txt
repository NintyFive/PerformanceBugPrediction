[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/48708129","html_url":"https://github.com/elastic/elasticsearch/issues/6827#issuecomment-48708129","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6827","id":48708129,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzA4MTI5","user":{"login":"mal","id":591257,"node_id":"MDQ6VXNlcjU5MTI1Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/591257?v=4","gravatar_id":"","url":"https://api.github.com/users/mal","html_url":"https://github.com/mal","followers_url":"https://api.github.com/users/mal/followers","following_url":"https://api.github.com/users/mal/following{/other_user}","gists_url":"https://api.github.com/users/mal/gists{/gist_id}","starred_url":"https://api.github.com/users/mal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mal/subscriptions","organizations_url":"https://api.github.com/users/mal/orgs","repos_url":"https://api.github.com/users/mal/repos","events_url":"https://api.github.com/users/mal/events{/privacy}","received_events_url":"https://api.github.com/users/mal/received_events","type":"User","site_admin":false},"created_at":"2014-07-11T08:52:02Z","updated_at":"2014-07-11T08:52:02Z","author_association":"NONE","body":"The query in quest was:\n\n``` json\n{\n  \"query\": {\n    \"match_all\": {}\n  },\n  \"script_fields\": {\n    \"lowest_seed\": {\n      \"script\": \"lowest\",\n      \"params\": {\n        \"field\": \"optional_seeds\"\n      }\n    }\n  },\n  \"size\": 50\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/48726420","html_url":"https://github.com/elastic/elasticsearch/issues/6827#issuecomment-48726420","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6827","id":48726420,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzI2NDIw","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-07-11T12:53:32Z","updated_at":"2014-07-11T12:53:46Z","author_association":"CONTRIBUTOR","body":"Hi @mal \n\nIs that the full script you were using? If I try it, I get an assertion error when it encounters a doc with an empty array or missing value:\n\n```\nDELETE /_all \n\nPUT /t\n{\n  \"settings\": {\n    \"number_of_shards\": 1\n  }\n}\n\nPUT /t/t/1\n{\n  \"vals\": []\n}\n\nPUT /t/t/2\n{\n  \"vals\": [0,2,1]\n}\n\nPUT /t/t/3\n{  \"vals\": []\n}\n\nGET /_search\n{\n  \"sort\": \"_uid\",\n  \"script_fields\": {\n    \"vals\": {\n      \"lang\": \"mvel\",\n      \"script\": \"set = doc['vals'].values; lowest = set[0]; for (candidate : set) { lowest = min(lowest, candidate); } return lowest;\"\n    }\n  }\n}\n```\n\nResults in:\n\n```\n{\n   \"error\": \"SearchPhaseExecutionException[Failed to execute phase [query_fetch], all shards failed; shardFailures {[7QebqBx6Sbmrh0fu5zPCrQ][t][0]: ElasticsearchException; nested: AssertionError; }]\",\n   \"status\": 500\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/48738360","html_url":"https://github.com/elastic/elasticsearch/issues/6827#issuecomment-48738360","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6827","id":48738360,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzM4MzYw","user":{"login":"mal","id":591257,"node_id":"MDQ6VXNlcjU5MTI1Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/591257?v=4","gravatar_id":"","url":"https://api.github.com/users/mal","html_url":"https://github.com/mal","followers_url":"https://api.github.com/users/mal/followers","following_url":"https://api.github.com/users/mal/following{/other_user}","gists_url":"https://api.github.com/users/mal/gists{/gist_id}","starred_url":"https://api.github.com/users/mal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mal/subscriptions","organizations_url":"https://api.github.com/users/mal/orgs","repos_url":"https://api.github.com/users/mal/repos","events_url":"https://api.github.com/users/mal/events{/privacy}","received_events_url":"https://api.github.com/users/mal/received_events","type":"User","site_admin":false},"created_at":"2014-07-11T14:39:31Z","updated_at":"2014-07-11T15:49:30Z","author_association":"NONE","body":"Thanks @clintongormley, I tried your example, and frustratingly got the same result. >_<\n\nI kept bashing away and have now created a script that recreates the issue consistently on my local machine, and our staging cluster (both v1.2.1).\n\n[https://gist.github.com/mal/2a36f5caa91e47fbcff7 (v1; integer mapping; see below)](https://gist.github.com/mal/2a36f5caa91e47fbcff7/b122e61b0debc6c420f9498d2a7e4b533076497d)\n\nThe final hit of the result for document 5 is:\n\n``` json\n{\n  \"_index\":\"t\",\n  \"_type\":\"t\",\n  \"_id\":\"5\",\n  \"_score\":null,\n  \"fields\":{\n    \"lowest_val\": [ 54 ]\n  },\n  \"sort\":[ \"t#5\" ]\n}\n```\n\nBut document 5 has nothing in it's `vals` property.\n\nAs an aside the weird string coercion I mentioned appears to come down to the mapping. If you change `vals` to be a `string` then you get `null`s and stringified leakage. The example as provided in the gist maps `vals` as an `integer` for simplicity, so rather than `null`s it defaults to `0` until the leak starts, at which point the leaked values are integers.\n\nI think that means there's two issues here potentially, the leak, and the fallback value. While `null` is a good fallback for strings, `0` is an odd fallback for numbers, as, at least in this case, a valid result of `0` and an invalid result are indistinguishable, using `null`s as the fallback for all types seems more sane.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/48746258","html_url":"https://github.com/elastic/elasticsearch/issues/6827#issuecomment-48746258","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6827","id":48746258,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzQ2MjU4","user":{"login":"mal","id":591257,"node_id":"MDQ6VXNlcjU5MTI1Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/591257?v=4","gravatar_id":"","url":"https://api.github.com/users/mal","html_url":"https://github.com/mal","followers_url":"https://api.github.com/users/mal/followers","following_url":"https://api.github.com/users/mal/following{/other_user}","gists_url":"https://api.github.com/users/mal/gists{/gist_id}","starred_url":"https://api.github.com/users/mal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mal/subscriptions","organizations_url":"https://api.github.com/users/mal/orgs","repos_url":"https://api.github.com/users/mal/repos","events_url":"https://api.github.com/users/mal/events{/privacy}","received_events_url":"https://api.github.com/users/mal/received_events","type":"User","site_admin":false},"created_at":"2014-07-11T15:39:54Z","updated_at":"2014-07-11T15:39:54Z","author_association":"NONE","body":"Here is the gist with a few more documents, and the string mapping, which shows the issue exactly as I first encountered it: https://gist.github.com/mal/2a36f5caa91e47fbcff7\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/48752496","html_url":"https://github.com/elastic/elasticsearch/issues/6827#issuecomment-48752496","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6827","id":48752496,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzUyNDk2","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-07-11T16:30:45Z","updated_at":"2014-07-11T16:30:45Z","author_association":"CONTRIBUTOR","body":"Hi @mal \n\nSo I managed to reproduce your findings in v1.2.1.  In the 1.x branch, the same code still throws an assertion error when it hits a null value.  Mvel is deprecated and will be replaced by Groovy, so I tried it with Groovy and it works correctly.\n\nBtw, your gist maps `vals` as a string, but I changed it to use `integer` and tried it again: groovy correctly returns null values instead of zeroes, another point in its favour.\n\nSo I think i'm going to close this as a won't fix and just recommend that you use groovy instead.  From 1.3 it'll be in core, but for 1.2.1 you can install it as a plugin: https://github.com/elasticsearch/elasticsearch-lang-groovy/tree/es-1.2\n\nNote: one odd thing I found with the groovy script is that there must be a newline character after the `for` loop, eg when passing it in as a dynamic script, I had to do:\n\n```\nPOST /t/t/_search\n{\n  \"_source\": true,\n  \"script_fields\": {\n    \"lowest_val\": {\n      \"lang\": \"groovy\",\n      \"script\": \"set = doc['vals'].values; lowest = set[0]; for (candidate in set) { if (lowest > candidate) { lowest = candidate}  }\\nreturn lowest\"\n    }\n  }\n}\n```\n\nthanks for reporting\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/48793773","html_url":"https://github.com/elastic/elasticsearch/issues/6827#issuecomment-48793773","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6827","id":48793773,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzkzNzcz","user":{"login":"mal","id":591257,"node_id":"MDQ6VXNlcjU5MTI1Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/591257?v=4","gravatar_id":"","url":"https://api.github.com/users/mal","html_url":"https://github.com/mal","followers_url":"https://api.github.com/users/mal/followers","following_url":"https://api.github.com/users/mal/following{/other_user}","gists_url":"https://api.github.com/users/mal/gists{/gist_id}","starred_url":"https://api.github.com/users/mal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mal/subscriptions","organizations_url":"https://api.github.com/users/mal/orgs","repos_url":"https://api.github.com/users/mal/repos","events_url":"https://api.github.com/users/mal/events{/privacy}","received_events_url":"https://api.github.com/users/mal/received_events","type":"User","site_admin":false},"created_at":"2014-07-11T23:20:30Z","updated_at":"2014-07-11T23:20:48Z","author_association":"NONE","body":"Fair enough, thanks for the suggestion :+1: \n\nFor the benefit of future readers, \"groovy\" has a built-in solution for getting the lowest value in a list, which can be used like so:\n\n``` json\n{\n  \"script_fields\": {\n    \"lowest_val\": {\n      \"lang\": \"groovy\",\n      \"script\": \"GroovyCollections.min(doc['vals'].values as Integer[])\"\n    }\n  }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/48807787","html_url":"https://github.com/elastic/elasticsearch/issues/6827#issuecomment-48807787","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6827","id":48807787,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4ODA3Nzg3","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-07-12T10:23:04Z","updated_at":"2014-07-12T10:23:04Z","author_association":"CONTRIBUTOR","body":"Ah nice - thanks for pointing that out.\n","performed_via_github_app":null}]