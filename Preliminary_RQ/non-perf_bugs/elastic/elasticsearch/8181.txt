{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/8181","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8181/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8181/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8181/events","html_url":"https://github.com/elastic/elasticsearch/issues/8181","id":46401903,"node_id":"MDU6SXNzdWU0NjQwMTkwMw==","number":8181,"title":"New to ElasticSearch, need help with memory allocation","user":{"login":"rolltide0","id":9337377,"node_id":"MDQ6VXNlcjkzMzczNzc=","avatar_url":"https://avatars0.githubusercontent.com/u/9337377?v=4","gravatar_id":"","url":"https://api.github.com/users/rolltide0","html_url":"https://github.com/rolltide0","followers_url":"https://api.github.com/users/rolltide0/followers","following_url":"https://api.github.com/users/rolltide0/following{/other_user}","gists_url":"https://api.github.com/users/rolltide0/gists{/gist_id}","starred_url":"https://api.github.com/users/rolltide0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rolltide0/subscriptions","organizations_url":"https://api.github.com/users/rolltide0/orgs","repos_url":"https://api.github.com/users/rolltide0/repos","events_url":"https://api.github.com/users/rolltide0/events{/privacy}","received_events_url":"https://api.github.com/users/rolltide0/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-10-21T14:45:48Z","updated_at":"2014-10-28T14:21:59Z","closed_at":"2014-10-28T14:21:59Z","author_association":"NONE","active_lock_reason":null,"body":"To start we are running ElasticSeach 1.1.2 in a SuSE Enterprise Server environment.\n\nWe have a new application that is designed to use ElasticSearch and installed it based on the requirements we were given. Based on the number records stored, we were told to use 16GB ram with an 8GB JVM. Well it blew through that quickly. \n\nWe ended up having to set it to 48GB of ram with an 8GB JVM just to get it loaded. 48GB with 24GB of ram failed as well because of the sheer amount of memory the native processes were using outside the JVM. \n\nAfter some testing, we discovered that there was almost a 1 to 1 ratio of data stored in the index and the amount of data ElasticSearch was holding into memory. After we loaded our data, the memory used settled at 23GB with it reserving 3GB for the JVM. Stopping the ElasticSearch process only freed up the memory used for the JVM (which was expected) but not the rest. However when we deleted the index, the amount of memory used went down by 20GB, which just so happens is the same about of drive space the index was using.\n\nIs this normal? Is there a way to limit the amount of non-JVM memory the process uses? I ask because it is a much bigger footprint than we were lead to believe. Thanks in advance for any help.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}