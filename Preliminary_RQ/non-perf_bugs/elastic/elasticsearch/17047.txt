{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/17047","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17047/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17047/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17047/events","html_url":"https://github.com/elastic/elasticsearch/issues/17047","id":139860237,"node_id":"MDU6SXNzdWUxMzk4NjAyMzc=","number":17047,"title":"Deprecate \"reverse\" option for sorting","user":{"login":"MaineC","id":70953,"node_id":"MDQ6VXNlcjcwOTUz","avatar_url":"https://avatars3.githubusercontent.com/u/70953?v=4","gravatar_id":"","url":"https://api.github.com/users/MaineC","html_url":"https://github.com/MaineC","followers_url":"https://api.github.com/users/MaineC/followers","following_url":"https://api.github.com/users/MaineC/following{/other_user}","gists_url":"https://api.github.com/users/MaineC/gists{/gist_id}","starred_url":"https://api.github.com/users/MaineC/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MaineC/subscriptions","organizations_url":"https://api.github.com/users/MaineC/orgs","repos_url":"https://api.github.com/users/MaineC/repos","events_url":"https://api.github.com/users/MaineC/events{/privacy}","received_events_url":"https://api.github.com/users/MaineC/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":189346177,"node_id":"MDU6TGFiZWwxODkzNDYxNzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Edeprecation","name":">deprecation","color":"ce18a7","default":false,"description":null},{"id":342561351,"node_id":"MDU6TGFiZWwzNDI1NjEzNTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v2.4.0","name":"v2.4.0","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"MaineC","id":70953,"node_id":"MDQ6VXNlcjcwOTUz","avatar_url":"https://avatars3.githubusercontent.com/u/70953?v=4","gravatar_id":"","url":"https://api.github.com/users/MaineC","html_url":"https://github.com/MaineC","followers_url":"https://api.github.com/users/MaineC/followers","following_url":"https://api.github.com/users/MaineC/following{/other_user}","gists_url":"https://api.github.com/users/MaineC/gists{/gist_id}","starred_url":"https://api.github.com/users/MaineC/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MaineC/subscriptions","organizations_url":"https://api.github.com/users/MaineC/orgs","repos_url":"https://api.github.com/users/MaineC/repos","events_url":"https://api.github.com/users/MaineC/events{/privacy}","received_events_url":"https://api.github.com/users/MaineC/received_events","type":"User","site_admin":false},"assignees":[{"login":"MaineC","id":70953,"node_id":"MDQ6VXNlcjcwOTUz","avatar_url":"https://avatars3.githubusercontent.com/u/70953?v=4","gravatar_id":"","url":"https://api.github.com/users/MaineC","html_url":"https://github.com/MaineC","followers_url":"https://api.github.com/users/MaineC/followers","following_url":"https://api.github.com/users/MaineC/following{/other_user}","gists_url":"https://api.github.com/users/MaineC/gists{/gist_id}","starred_url":"https://api.github.com/users/MaineC/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MaineC/subscriptions","organizations_url":"https://api.github.com/users/MaineC/orgs","repos_url":"https://api.github.com/users/MaineC/repos","events_url":"https://api.github.com/users/MaineC/events{/privacy}","received_events_url":"https://api.github.com/users/MaineC/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2016-03-10T11:25:14Z","updated_at":"2018-02-14T13:29:57Z","closed_at":"2016-04-28T07:54:21Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"There are three ways of specifying sort order in our REST API:\n\nImplicitly which uses the sort element specific default, like e.g.:\n\n```\n\"sort\": [\n   {\n      \"_score\": {    }}]\n```\n\nSemi-implicit by requesting to reverse sort order:\n\n```\n\"sort\": [\n   {\n      \"_score\": {  \"reverse\": \"true\"  }}]\n```\n\nExplicitly by setting sort order:\n\n```\n\"sort\": [\n   {\n      \"_score\": {  \"order\": \"asc\"  }}]\n```\n\nAfter reviewing #17035 and going over the docs here: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-sort.html which states that \"Each sort can be reversed as well.\" I was confused about what \"reverse\" actually does. If used in combination with order, what happens depends on the order (no pun intended) of the order and reverse parameters in the search request. Simple reproduction below tested on **_2.2.0**_:\n\n```\nPUT /twitter/tweet/1\n{\n    \"message\" : \"trying out Elasticsearch\"\n}\nPUT /twitter/tweet/2\n{\n    \"message\" : \"trying trying out Elasticsearch\"\n}\n```\n\nThen issue the following searches for illustration (score based searches, default ordering is descending):\n\n```\nGET /twitter/tweet/_search\n{\n    \"query\": {\"match\": {\n       \"message\": \"trying\"\n    }},\n    \"sort\": [\n       {\n          \"_score\": {\n              \"order\": \"desc\",\n              \"reverse\": \"false\"}}]}\n```\n\n... results in descending order.\n\n```\nGET /twitter/tweet/_search\n{\n    \"query\": {\"match\": {\n       \"message\": \"trying\"\n    }},\n    \"sort\": [\n       {\n          \"_score\": {\n              \"order\": \"desc\",\n              \"reverse\": \"true\"}}]}\n```\n\n... results in ascending order.\n\nAll good so far. Now lets switch the order of the parameters:\n\n```\nGET /twitter/tweet/_search\n{\n    \"query\": {\"match\": {\n       \"message\": \"trying\"\n    }},\n    \"sort\": [\n       {\n          \"_score\": {\n              \"reverse\": \"true\",\n              \"order\": \"desc\"}}]}\n```\n\n... results in descending order.\n\n```\nGET /twitter/tweet/_search\n{\n    \"query\": {\"match\": {\n       \"message\": \"trying\"\n    }},\n    \"sort\": [\n       {\n          \"_score\": {\n              \"reverse\": \"false\",\n              \"order\": \"desc\"}}]}\n```\n\n... results in descending order.\n\nI'd like to propose to deprecate \"reverse\" for 2.x and remove it in the next major release in favour of using the explicit \"order\" parameter only.\n\n@clintongormley maybe I've mis-understood something, any clarifications welcome.\n","closed_by":{"login":"MaineC","id":70953,"node_id":"MDQ6VXNlcjcwOTUz","avatar_url":"https://avatars3.githubusercontent.com/u/70953?v=4","gravatar_id":"","url":"https://api.github.com/users/MaineC","html_url":"https://github.com/MaineC","followers_url":"https://api.github.com/users/MaineC/followers","following_url":"https://api.github.com/users/MaineC/following{/other_user}","gists_url":"https://api.github.com/users/MaineC/gists{/gist_id}","starred_url":"https://api.github.com/users/MaineC/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MaineC/subscriptions","organizations_url":"https://api.github.com/users/MaineC/orgs","repos_url":"https://api.github.com/users/MaineC/repos","events_url":"https://api.github.com/users/MaineC/events{/privacy}","received_events_url":"https://api.github.com/users/MaineC/received_events","type":"User","site_admin":false},"performed_via_github_app":null}