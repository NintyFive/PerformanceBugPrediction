{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/707","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/707/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/707/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/707/events","html_url":"https://github.com/elastic/elasticsearch/issues/707","id":616065,"node_id":"MDU6SXNzdWU2MTYwNjU=","number":707,"title":"Search: Add search type `scan` allowing to efficiently scan large result set","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"labels":[{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":76649,"node_id":"MDU6TGFiZWw3NjY0OQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.16.0","name":"v0.16.0","color":"ededed","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2011-02-21T21:58:00Z","updated_at":"2011-03-24T20:45:08Z","closed_at":"2011-02-22T06:11:43Z","author_association":"MEMBER","active_lock_reason":null,"body":"The `scan` search type allows to efficiently scroll a large result set. Its used first by executing a search request with scrolling and a query:\n\n```\ncurl -XGET 'localhost:9200/_search?search_type=scan&scroll=10m&size=50' -d '\n{\n    \"query\" : {\n        \"match_all\" : {}\n    }\n}\n'\n```\n\nThe `scroll` parameter control the keep alive time of the scrolling request and initiates the scrolling process. The timeout applies per round trip (i.e. between the previous scan scroll request, to the next).\n\nThe response will include _no hits_, with two important results, the `total_hits` will include the total hits that match the query, and the `scroll_id` that allows to start the scroll process. From this stage, the `_search/scroll` endpoint should be used to scroll the hits, feeding the next scroll request with the previous search result `scroll_id`. For example:\n\n```\ncurl -XGET 'localhost:9200/_search/scroll?scroll=10m' -d 'c2NhbjsxOjBLMzdpWEtqU2IyZHlmVURPeFJOZnc7MzowSzM3aVhLalNiMmR5ZlVET3hSTmZ3OzU6MEszN2lYS2pTYjJkeWZVRE94Uk5mdzsyOjBLMzdpWEtqU2IyZHlmVURPeFJOZnc7NDowSzM3aVhLalNiMmR5ZlVET3hSTmZ3Ow=='\n```\n\nThe \"breaking\" condition out of a scroll is when no hits has been returned. The `total_hits` will be maintained between scroll requests.\n\nNote, `scan` search type does not support sorting (either on score or a field) or faceting.\n","closed_by":null,"performed_via_github_app":null}