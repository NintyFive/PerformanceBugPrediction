[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/425501085","html_url":"https://github.com/elastic/elasticsearch/issues/34142#issuecomment-425501085","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34142","id":425501085,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNTUwMTA4NQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-09-28T17:01:28Z","updated_at":"2018-09-28T17:01:28Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/441613092","html_url":"https://github.com/elastic/elasticsearch/issues/34142#issuecomment-441613092","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34142","id":441613092,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MTYxMzA5Mg==","user":{"login":"cbismuth","id":21545602,"node_id":"MDQ6VXNlcjIxNTQ1NjAy","avatar_url":"https://avatars1.githubusercontent.com/u/21545602?v=4","gravatar_id":"","url":"https://api.github.com/users/cbismuth","html_url":"https://github.com/cbismuth","followers_url":"https://api.github.com/users/cbismuth/followers","following_url":"https://api.github.com/users/cbismuth/following{/other_user}","gists_url":"https://api.github.com/users/cbismuth/gists{/gist_id}","starred_url":"https://api.github.com/users/cbismuth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbismuth/subscriptions","organizations_url":"https://api.github.com/users/cbismuth/orgs","repos_url":"https://api.github.com/users/cbismuth/repos","events_url":"https://api.github.com/users/cbismuth/events{/privacy}","received_events_url":"https://api.github.com/users/cbismuth/received_events","type":"User","site_admin":false},"created_at":"2018-11-26T11:52:00Z","updated_at":"2018-11-26T11:52:00Z","author_association":"CONTRIBUTOR","body":"I'll have a look at this one.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/441695689","html_url":"https://github.com/elastic/elasticsearch/issues/34142#issuecomment-441695689","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34142","id":441695689,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MTY5NTY4OQ==","user":{"login":"cbismuth","id":21545602,"node_id":"MDQ6VXNlcjIxNTQ1NjAy","avatar_url":"https://avatars1.githubusercontent.com/u/21545602?v=4","gravatar_id":"","url":"https://api.github.com/users/cbismuth","html_url":"https://github.com/cbismuth","followers_url":"https://api.github.com/users/cbismuth/followers","following_url":"https://api.github.com/users/cbismuth/following{/other_user}","gists_url":"https://api.github.com/users/cbismuth/gists{/gist_id}","starred_url":"https://api.github.com/users/cbismuth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbismuth/subscriptions","organizations_url":"https://api.github.com/users/cbismuth/orgs","repos_url":"https://api.github.com/users/cbismuth/repos","events_url":"https://api.github.com/users/cbismuth/events{/privacy}","received_events_url":"https://api.github.com/users/cbismuth/received_events","type":"User","site_admin":false},"created_at":"2018-11-26T16:07:48Z","updated_at":"2018-11-26T16:07:48Z","author_association":"CONTRIBUTOR","body":"I can reproduce the issue on `master` (see cURL recreation script [here](https://gist.github.com/cbismuth/2aa2ca441901f5eae24a1d0ddab2a27f) and output [there](https://gist.github.com/cbismuth/fb36ab915396c38a7f38cb6714c28c46)). I'll give it a debug shot soon.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/441709200","html_url":"https://github.com/elastic/elasticsearch/issues/34142#issuecomment-441709200","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34142","id":441709200,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MTcwOTIwMA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2018-11-26T16:42:59Z","updated_at":"2018-11-26T16:44:36Z","author_association":"MEMBER","body":"I don't think your recreation is correct. The `foo AND bar` and `foo OR bar` cases work as expected with and without `\"minimum_should_match\":\"100%\"`. The case that works differently is when you omit the operator and rely on the default operator set on the query (`foo bar`). Since the `query_string` doesn't split on whitespace anymore, we analyze `foo bar` entirely, create one query for each field and finally we merge the field queries into a single query. `minimum_should_match` is always applied on the final query so if you have two fields and use all default options you end up with a single query that is a disjunction over the two fields present in the query (below is an example with `text` and `title`):\r\n````\r\n((title:foo title:bar) | (text:foo text:bar))\r\n````\r\nSo that's not really a bug, just a side effect of the fact that we don't consider whitespaces as operators anymore. Here is the same query if you use an explicit `OR` between the terms (e.g.: `foo OR bar`):\r\n`````\r\n((title:foo | text:foo) (title:bar | text:bar))\r\n`````\r\n\r\nOne way to retrieve the old behavior is to add `\"type\": \"cross_fields\"` in the `query_string` to indicate that fields that have the same analyzer should be grouped together when we analyze the input. However If you use different analyzers then you have no other choice than adding explicit operators in the query to ensure that the `minimum_should_match` setting is applied to each term (e.g. `foo OR bar`). \r\nI don't think there's anything to fix here unfortunately but we could add a small section in the documentation to explain the behavior of `minimum_should_match` when no explicit operators are present ?\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/441763319","html_url":"https://github.com/elastic/elasticsearch/issues/34142#issuecomment-441763319","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34142","id":441763319,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MTc2MzMxOQ==","user":{"login":"cbismuth","id":21545602,"node_id":"MDQ6VXNlcjIxNTQ1NjAy","avatar_url":"https://avatars1.githubusercontent.com/u/21545602?v=4","gravatar_id":"","url":"https://api.github.com/users/cbismuth","html_url":"https://github.com/cbismuth","followers_url":"https://api.github.com/users/cbismuth/followers","following_url":"https://api.github.com/users/cbismuth/following{/other_user}","gists_url":"https://api.github.com/users/cbismuth/gists{/gist_id}","starred_url":"https://api.github.com/users/cbismuth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbismuth/subscriptions","organizations_url":"https://api.github.com/users/cbismuth/orgs","repos_url":"https://api.github.com/users/cbismuth/repos","events_url":"https://api.github.com/users/cbismuth/events{/privacy}","received_events_url":"https://api.github.com/users/cbismuth/received_events","type":"User","site_admin":false},"created_at":"2018-11-26T19:21:10Z","updated_at":"2018-11-26T19:21:10Z","author_association":"CONTRIBUTOR","body":"Thanks a lot for the very detailed explanation and examples @jimczi! That's a tricky area :sweat_smile:\r\n\r\nI need play a tiny bit more with the `minimum_should_match` parameter when no explicit operator is present. I'll suggest a documentation improvement as soon as I am comfortable with it. Thanks again.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/442511532","html_url":"https://github.com/elastic/elasticsearch/issues/34142#issuecomment-442511532","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34142","id":442511532,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MjUxMTUzMg==","user":{"login":"cbismuth","id":21545602,"node_id":"MDQ6VXNlcjIxNTQ1NjAy","avatar_url":"https://avatars1.githubusercontent.com/u/21545602?v=4","gravatar_id":"","url":"https://api.github.com/users/cbismuth","html_url":"https://github.com/cbismuth","followers_url":"https://api.github.com/users/cbismuth/followers","following_url":"https://api.github.com/users/cbismuth/following{/other_user}","gists_url":"https://api.github.com/users/cbismuth/gists{/gist_id}","starred_url":"https://api.github.com/users/cbismuth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbismuth/subscriptions","organizations_url":"https://api.github.com/users/cbismuth/orgs","repos_url":"https://api.github.com/users/cbismuth/repos","events_url":"https://api.github.com/users/cbismuth/events{/privacy}","received_events_url":"https://api.github.com/users/cbismuth/received_events","type":"User","site_admin":false},"created_at":"2018-11-28T16:29:57Z","updated_at":"2018-11-28T16:37:40Z","author_association":"CONTRIBUTOR","body":"Alright, I've played a tiny bit more with this query.\r\n\r\nYou've probably explained it before and I wasn't able to understand, but here it is with my own understanding of the issue: in the updated [recreation](https://gist.github.com/cbismuth/2aa2ca441901f5eae24a1d0ddab2a27f#file-elasticsearch-issue-34142-sh-L123-L125) script, the `minimum_should_match` parameter is taken into account only when there is only one single field in the `fields` array, anyone of them, otherwise the `minimum_should_match` parameter is ignored.\r\n\r\nIs it this side effect you talked about?\r\n\r\nIn the updated recreation query is made of terms `foo bar baz azerty qwerty elastic lucene`.\r\n\r\nExplain output with only one field (`attachment.content`) in query, no hit due to the `~4` operator:\r\n\r\n```json\r\n{\r\n  \"_shards\" : {\r\n    \"total\" : 1,\r\n    \"successful\" : 1,\r\n    \"failed\" : 0\r\n  },\r\n  \"valid\" : true,\r\n  \"explanations\" : [\r\n    {\r\n      \"index\" : \"index1\",\r\n      \"valid\" : true,\r\n      \"explanation\" : \"+title:title1 +((attachment.content:foo attachment.content:bar attachment.content:baz attachment.content:azerty attachment.content:qwerty attachment.content:elastic attachment.content:lucene)~4)\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nExplain output with all three fields in query, one hit because no `~4` operator:\r\n\r\n```json\r\n{\r\n  \"_shards\" : {\r\n    \"total\" : 1,\r\n    \"successful\" : 1,\r\n    \"failed\" : 0\r\n  },\r\n  \"valid\" : true,\r\n  \"explanations\" : [\r\n    {\r\n      \"index\" : \"index1\",\r\n      \"valid\" : true,\r\n      \"explanation\" : \"+title:title1 +((attachment.content:foo attachment.content:bar attachment.content:baz attachment.content:azerty attachment.content:qwerty attachment.content:elastic attachment.content:lucene) | (message:foo message:bar message:baz message:azerty message:qwerty message:elastic message:lucene) | (address:foo address:bar address:baz address:azerty address:qwerty address:elastic address:lucene))\"\r\n    }\r\n  ]\r\n}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/442518599","html_url":"https://github.com/elastic/elasticsearch/issues/34142#issuecomment-442518599","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34142","id":442518599,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MjUxODU5OQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2018-11-28T16:48:28Z","updated_at":"2018-11-28T16:48:28Z","author_association":"MEMBER","body":"> the minimum_should_match parameter is taken into account only when there is only one single field in the fields array, anyone of them, otherwise the minimum_should_match parameter is ignored.\r\n\r\nNo, it doesn't work in your recreation because you don't use explicit operator (`OR`, `AND`). Since whitespaces are not considered as operators we consider the whole text as a single clause and we build the query for each field using this input. The final boolean query has a single clause (the disjunction max query over the fields) so we don't apply the minimum should match. If you have a single field there is no ambiguity and we can apply the minimum should match even if there are no explicit operators. Operators when using multi fields are a way to separate the input into clauses, so `foo AND bar` is considered as two clauses no matter how many fields you have and `foo bar` is a single clause for each field.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/442540971","html_url":"https://github.com/elastic/elasticsearch/issues/34142#issuecomment-442540971","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34142","id":442540971,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MjU0MDk3MQ==","user":{"login":"cbismuth","id":21545602,"node_id":"MDQ6VXNlcjIxNTQ1NjAy","avatar_url":"https://avatars1.githubusercontent.com/u/21545602?v=4","gravatar_id":"","url":"https://api.github.com/users/cbismuth","html_url":"https://github.com/cbismuth","followers_url":"https://api.github.com/users/cbismuth/followers","following_url":"https://api.github.com/users/cbismuth/following{/other_user}","gists_url":"https://api.github.com/users/cbismuth/gists{/gist_id}","starred_url":"https://api.github.com/users/cbismuth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbismuth/subscriptions","organizations_url":"https://api.github.com/users/cbismuth/orgs","repos_url":"https://api.github.com/users/cbismuth/repos","events_url":"https://api.github.com/users/cbismuth/events{/privacy}","received_events_url":"https://api.github.com/users/cbismuth/received_events","type":"User","site_admin":false},"created_at":"2018-11-28T17:49:55Z","updated_at":"2018-11-28T17:49:55Z","author_association":"CONTRIBUTOR","body":"I've got it, thanks for the (very) quick and detailed answer @jimczi, I've played with explicit operators and it worked as I expected.\r\n\r\nI should now have everything I need to suggest a documentation improvement :+1:\r\n\r\nFor future readers of this issue, here is a short summary of these experiments.\r\n\r\n* Query `foo OR bar` and `minimum_should_match` set to `1` explained as `+(((message:foo | address:foo) (message:bar | address:bar))~1)`\r\n* Query `foo bar` and `minimum_should_match` set to `1` explained as  `+((message:foo message:bar) | (address:foo address:bar))`","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/443166444","html_url":"https://github.com/elastic/elasticsearch/issues/34142#issuecomment-443166444","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34142","id":443166444,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MzE2NjQ0NA==","user":{"login":"cbismuth","id":21545602,"node_id":"MDQ6VXNlcjIxNTQ1NjAy","avatar_url":"https://avatars1.githubusercontent.com/u/21545602?v=4","gravatar_id":"","url":"https://api.github.com/users/cbismuth","html_url":"https://github.com/cbismuth","followers_url":"https://api.github.com/users/cbismuth/followers","following_url":"https://api.github.com/users/cbismuth/following{/other_user}","gists_url":"https://api.github.com/users/cbismuth/gists{/gist_id}","starred_url":"https://api.github.com/users/cbismuth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbismuth/subscriptions","organizations_url":"https://api.github.com/users/cbismuth/orgs","repos_url":"https://api.github.com/users/cbismuth/repos","events_url":"https://api.github.com/users/cbismuth/events{/privacy}","received_events_url":"https://api.github.com/users/cbismuth/received_events","type":"User","site_admin":false},"created_at":"2018-11-30T10:50:39Z","updated_at":"2018-11-30T10:50:39Z","author_association":"CONTRIBUTOR","body":"Hi, here is a documentation improvement proposal in PR #36109.","performed_via_github_app":null}]