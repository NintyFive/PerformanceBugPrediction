[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/546350267","html_url":"https://github.com/elastic/elasticsearch/issues/48526#issuecomment-546350267","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48526","id":546350267,"node_id":"MDEyOklzc3VlQ29tbWVudDU0NjM1MDI2Nw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-10-25T13:18:28Z","updated_at":"2019-10-25T13:18:28Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed (:Distributed/Snapshot/Restore)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/546521058","html_url":"https://github.com/elastic/elasticsearch/issues/48526#issuecomment-546521058","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48526","id":546521058,"node_id":"MDEyOklzc3VlQ29tbWVudDU0NjUyMTA1OA==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2019-10-25T21:34:05Z","updated_at":"2019-10-25T21:34:05Z","author_association":"CONTRIBUTOR","body":"I worked out how to reproduce this:\r\n\r\n```diff\r\ndiff --git a/server/src/main/java/org/elasticsearch/cluster/service/ClusterApplierService.java b/server/src/main/java/org/elasticsearch/cluster/service/ClusterApplierService.java\r\nindex f5bbe2d420b..644a349b989 100644\r\n--- a/server/src/main/java/org/elasticsearch/cluster/service/ClusterApplierService.java\r\n+++ b/server/src/main/java/org/elasticsearch/cluster/service/ClusterApplierService.java\r\n@@ -466,6 +466,13 @@ public class ClusterApplierService extends AbstractLifecycleComponent implements\r\n                     summary, newClusterState.term(), newClusterState.version(), task.source);\r\n             }\r\n         }\r\n+        if (nodesDelta.removed()) {\r\n+            try {\r\n+                Thread.sleep(10000);\r\n+            } catch (InterruptedException e) {\r\n+                throw new AssertionError(\"unexpected\", e);\r\n+            }\r\n+        }\r\n\r\n         logger.trace(\"connecting to nodes of cluster state with version {}\", newClusterState.version());\r\n         try (Releasable ignored = stopWatch.timing(\"connecting to new nodes\")) {\r\n```\r\n\r\nWith a sufficiently long pause here, the master processes the `node-left` and `node-join` updates without processing any snapshot-related updates in between, and this means it skips the updates that would fail the shard snapshot.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/546523905","html_url":"https://github.com/elastic/elasticsearch/issues/48526#issuecomment-546523905","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48526","id":546523905,"node_id":"MDEyOklzc3VlQ29tbWVudDU0NjUyMzkwNQ==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2019-10-25T21:45:30Z","updated_at":"2019-10-25T21:46:48Z","author_association":"MEMBER","body":"@DaveCTurner jup that's how far I got today as well. Unfortunately, there's a number of related issues here because the node re-joining may start the snapshot again if it's still in `INIT` state etc. depending on the timing. Will be looking into how to clean this up tomorrow :)\r\nAlso, the snapshot status API is somehow broken in this scenario and fails to properly translate the failed shard in the CS to a response for a node that rejoined the cluster.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/546701597","html_url":"https://github.com/elastic/elasticsearch/issues/48526#issuecomment-546701597","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48526","id":546701597,"node_id":"MDEyOklzc3VlQ29tbWVudDU0NjcwMTU5Nw==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2019-10-27T14:48:48Z","updated_at":"2019-10-27T14:50:39Z","author_association":"MEMBER","body":"Status APIs struck again it turns out :) -> fix incoming in https://github.com/elastic/elasticsearch/pull/48556 \r\n\r\nThe fact that we were missing the node-left event is irrelevant it turns out since that build had a proper failure on the primary node still (from missing the index allocation after restart). I don't think we want to change the logic here to make sure we always catch the node-left somehow ... in practice if the node restarts and picks up the snapshot for its shards correctly that's fine and not something to fail on after all :)","performed_via_github_app":null}]