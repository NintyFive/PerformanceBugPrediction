{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/28378","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28378/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28378/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28378/events","html_url":"https://github.com/elastic/elasticsearch/issues/28378","id":291592592,"node_id":"MDU6SXNzdWUyOTE1OTI1OTI=","number":28378,"title":"Allow use of search_after within terms aggregation","user":{"login":"snowzach","id":7305473,"node_id":"MDQ6VXNlcjczMDU0NzM=","avatar_url":"https://avatars0.githubusercontent.com/u/7305473?v=4","gravatar_id":"","url":"https://api.github.com/users/snowzach","html_url":"https://github.com/snowzach","followers_url":"https://api.github.com/users/snowzach/followers","following_url":"https://api.github.com/users/snowzach/following{/other_user}","gists_url":"https://api.github.com/users/snowzach/gists{/gist_id}","starred_url":"https://api.github.com/users/snowzach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/snowzach/subscriptions","organizations_url":"https://api.github.com/users/snowzach/orgs","repos_url":"https://api.github.com/users/snowzach/repos","events_url":"https://api.github.com/users/snowzach/events{/privacy}","received_events_url":"https://api.github.com/users/snowzach/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-01-25T14:40:54Z","updated_at":"2018-01-25T20:13:44Z","closed_at":"2018-01-25T15:48:34Z","author_association":"NONE","active_lock_reason":null,"body":"I am using the terms aggregation to get unique values (nested terms aggregations actually) but with a very large number of unique terms it becomes problematic. \r\n\r\nIt would be great if one of the following would work:\r\n\r\n1. The search_after on the outer query applied to the inner aggregation. Seeing as you can retrieve the outer results, I could see how this might not be desirable.\r\n2. The terms aggregation supported the sort/search_after feature that queries support. \r\n\r\nEither if these would allow you to easily paginate through results. I understand the point of the current partition functionality but I do not believe this would work quite as well/fluid as the search_after functionality which is great for search functionality.\r\n\r\nIf there's another way to do this, it would be great.  (Can I do something like a range+term aggregation?)","closed_by":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}