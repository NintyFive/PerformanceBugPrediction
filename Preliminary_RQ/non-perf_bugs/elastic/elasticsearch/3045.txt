{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3045","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3045/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3045/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3045/events","html_url":"https://github.com/elastic/elasticsearch/issues/3045","id":14401962,"node_id":"MDU6SXNzdWUxNDQwMTk2Mg==","number":3045,"title":"API for retrieving information about a single alias (i.e., faster and transfer less data than _aliases)","user":{"login":"dbertram","id":864848,"node_id":"MDQ6VXNlcjg2NDg0OA==","avatar_url":"https://avatars3.githubusercontent.com/u/864848?v=4","gravatar_id":"","url":"https://api.github.com/users/dbertram","html_url":"https://github.com/dbertram","followers_url":"https://api.github.com/users/dbertram/followers","following_url":"https://api.github.com/users/dbertram/following{/other_user}","gists_url":"https://api.github.com/users/dbertram/gists{/gist_id}","starred_url":"https://api.github.com/users/dbertram/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbertram/subscriptions","organizations_url":"https://api.github.com/users/dbertram/orgs","repos_url":"https://api.github.com/users/dbertram/repos","events_url":"https://api.github.com/users/dbertram/events{/privacy}","received_events_url":"https://api.github.com/users/dbertram/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2013-05-16T11:45:08Z","updated_at":"2013-05-30T10:17:58Z","closed_at":"2013-05-30T10:17:58Z","author_association":"NONE","active_lock_reason":null,"body":"Scenario: we have ~20K aliases on a single index (one for each user). These aliases are used 1) to ensure no cross-talk between users (via a filter in the alias) and 2) to provide indirection so that we can seamlessly migrate users between backwards-incompatible type mappings by creating a new index, backfilling a user's data into the new index, and then atomically repointing their alias to the new index.\n\nWe routinely need to look up what underlying index a user's alias is pointing to.\n\nThe current API for querying alias information is via an index's _aliases endpoint. This is fine when you want to know \"what are all the aliases pointing to this index?\"\n\nWhat we want to know is \"what is the underlying index for this particular alias?\", which can _also_ be answered via the existing API, but becomes an expensive operation when a large number of aliases are in use.\n\nFor example, the _aliases response in our setup outlined above is ~160K and takes anywhere from 300-700ms.\n\nAll we're looking for is the alias information for a single alias, but querying `http://localhost:9200/alias/_aliases` is the same as requesting `http://localhost:9200/index/_aliases`, and returns a large payload with mostly data we're not interested in.\n\nMaking a HEAD request can tell us whether or not an alias or index exists, but we need to know the underlying index for the alias, not just whether or not it exists.\n\nIt would be great to have an API for querying individual aliases to avoid transferring all the extra data we're not interested in.\n\nSome ideas:\n1. Like some of the other info/stats APIs, make it possible to filter the _aliases response to only include the information you're interested in via the query string/path:\n\n`curl -XGET 'http://localhost:9200/[index or alias]/_aliases/alias_name_of_interest`\n1. Currently if you make a GET request to just an index or alias you get the following:\n\n`curl -XGET 'http://localhost:9200/[index or alias]'\nNo handler found for uri [/index_name] and method [GET]`\n\nWe could instead have this return some high-level information about the index/alias. For aliases, I would want the alias's definition (including filtering, routing, etc.) as a response.\n\nMostly, we need to make querying for information about a single alias faster and have less extraneous information in the response.\n","closed_by":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"performed_via_github_app":null}