{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/7007","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7007/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7007/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7007/events","html_url":"https://github.com/elastic/elasticsearch/issues/7007","id":38613933,"node_id":"MDU6SXNzdWUzODYxMzkzMw==","number":7007,"title":"PatternTokenizer RegEx not recognizing boundary matcher ^","user":{"login":"konradkonrad","id":3705643,"node_id":"MDQ6VXNlcjM3MDU2NDM=","avatar_url":"https://avatars3.githubusercontent.com/u/3705643?v=4","gravatar_id":"","url":"https://api.github.com/users/konradkonrad","html_url":"https://github.com/konradkonrad","followers_url":"https://api.github.com/users/konradkonrad/followers","following_url":"https://api.github.com/users/konradkonrad/following{/other_user}","gists_url":"https://api.github.com/users/konradkonrad/gists{/gist_id}","starred_url":"https://api.github.com/users/konradkonrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/konradkonrad/subscriptions","organizations_url":"https://api.github.com/users/konradkonrad/orgs","repos_url":"https://api.github.com/users/konradkonrad/repos","events_url":"https://api.github.com/users/konradkonrad/events{/privacy}","received_events_url":"https://api.github.com/users/konradkonrad/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-07-24T09:59:58Z","updated_at":"2014-07-24T12:53:22Z","closed_at":"2014-07-24T12:20:14Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"For me, the pattern-tokenizer does not play well with the beginning of line boundary matcher **'^'**\n(see http://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html#bounds)\n\nIn strings like `\"Lastname, Firstname/ Lastname2, Firstname2 Middlename\"`, or \n`\"Lastname1/Lastname2/Lastname3\"` I want to match the last names.\n\nIn order to achieve this, I define a regex, that takes the next word after the beginning of the line or after a forward slash, like this: `(/ *|^)([\\w]+)`\n\ntranslated: _(forward slash and maybe whitespace OR beginning of the line) FOLLOWED BY one or more word characters_.\n\nThis works fine for me in java, python, but not so in elasticsearch. See my elasticsearch/curl example versus the java testcode below:\n# curl example\n\n```\ncurl -XPUT \"http://localhost:9200/testidx\" -d '{\n  \"settings\": {\n    \"index\" : {\n      \"analysis\" : {\n        \"analyzer\" : {\n          \"lastname\" : {\n            \"filter\" : [\"lowercase\", \"trim\"],\n            \"tokenizer\" : \"lastname\"\n          }\n        },\n        \"tokenizer\" : {\n          \"lastname\" : {\n              \"pattern\" : \"(?:/ *|^)([\\\\w]+),*\",\n              \"group\": 1,\n              \"type\" : \"pattern\"\n          }\n        }\n      }\n    }\n  }\n}'\n```\n# Testing the analyzer:\n\n```\ncurl -XGET \"http://localhost:9200/testidx/_analyze?analyzer=lastname&pretty\" -d '{\n  \"Bach, Johann Sebastian/Haendel, Georg Friedrich\"\n}'\n\n# Expected tokens: 'bach' and 'haendel'\n# Actual outcome:\n\n#{\n#   \"tokens\": [\n#      {\n#         \"token\": \"haendel\",\n#         \"start_offset\": 28,\n#         \"end_offset\": 35,\n#         \"type\": \"word\",\n#         \"position\": 1\n#      }\n#   ]\n#}\n```\n\nI tried this with v1.1.2, v.1.3.1, v2.0.0-SNAPSHOT.\n# Java test code\n\nWhen using the same RegEx in java I do get the desired result:\n\n``` java\npackage com.konradkonrad;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class RegexAnchorTest {\n\n  public static void main(String[] args) {\n\n    String raw = \"Bach, Johann Sebastian/Haendel, Georg Friedrich\";\n    List<String> expected = Arrays.asList(\"Bach\", \"Haendel\");\n\n    Matcher last = Pattern.compile(\"(?:/ *|^)([\\\\w]+),*\").matcher(raw);\n\n    List<String> lastNames = new ArrayList<>();\n    while (last.find()) lastNames.add(last.group(1));\n\n    if (lastNames.size() != expected.size()) {\n      throw new AssertionError(\"wrong number of matches, is \" + lastNames.size() + \"should be \" + expected.size());\n    }\n\n    for (int i = 0; i < expected.size(); i++) {\n      if (! lastNames.get(i).equals(expected.get(i))) {\n        throw new AssertionError(\"results not equal: \" + lastNames + \"; expected: \" + expected);\n      }\n    }\n    System.out.println(\"Tokens are: \" + lastNames);\n  }\n}\n```\n\nThis outputs:\n\n```\nTokens are: [Bach, Haendel]\n```\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}