[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/69940890","html_url":"https://github.com/elastic/elasticsearch/issues/9298#issuecomment-69940890","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9298","id":69940890,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTQwODkw","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-01-14T16:12:38Z","updated_at":"2015-01-14T16:12:38Z","author_association":"CONTRIBUTOR","body":"They are currently supported only if the field is indexed (which defaults to false). Please note that fielddata for this field will require a lot of memory given that values are typically unique.\n\nPlease use the mailing-list for questions in the future, thanks!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/187246152","html_url":"https://github.com/elastic/elasticsearch/issues/9298#issuecomment-187246152","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9298","id":187246152,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NzI0NjE1Mg==","user":{"login":"lukens","id":686128,"node_id":"MDQ6VXNlcjY4NjEyOA==","avatar_url":"https://avatars1.githubusercontent.com/u/686128?v=4","gravatar_id":"","url":"https://api.github.com/users/lukens","html_url":"https://github.com/lukens","followers_url":"https://api.github.com/users/lukens/followers","following_url":"https://api.github.com/users/lukens/following{/other_user}","gists_url":"https://api.github.com/users/lukens/gists{/gist_id}","starred_url":"https://api.github.com/users/lukens/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lukens/subscriptions","organizations_url":"https://api.github.com/users/lukens/orgs","repos_url":"https://api.github.com/users/lukens/repos","events_url":"https://api.github.com/users/lukens/events{/privacy}","received_events_url":"https://api.github.com/users/lukens/received_events","type":"User","site_admin":false},"created_at":"2016-02-22T16:05:35Z","updated_at":"2016-02-22T16:05:35Z","author_association":"CONTRIBUTOR","body":"In case anyone ends up finding this answer when searching for whether you can use `_id` in a terms aggregation, it may be useful to note that if the `_id` isn't indexed, you can instead aggregate on `_uid` which may be sufficient for your needs (and includes the id in it, as it is of the form `<_type>#<_id>`).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/200898785","html_url":"https://github.com/elastic/elasticsearch/issues/9298#issuecomment-200898785","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9298","id":200898785,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMDg5ODc4NQ==","user":{"login":"dougmolineux","id":880444,"node_id":"MDQ6VXNlcjg4MDQ0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/880444?v=4","gravatar_id":"","url":"https://api.github.com/users/dougmolineux","html_url":"https://github.com/dougmolineux","followers_url":"https://api.github.com/users/dougmolineux/followers","following_url":"https://api.github.com/users/dougmolineux/following{/other_user}","gists_url":"https://api.github.com/users/dougmolineux/gists{/gist_id}","starred_url":"https://api.github.com/users/dougmolineux/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dougmolineux/subscriptions","organizations_url":"https://api.github.com/users/dougmolineux/orgs","repos_url":"https://api.github.com/users/dougmolineux/repos","events_url":"https://api.github.com/users/dougmolineux/events{/privacy}","received_events_url":"https://api.github.com/users/dougmolineux/received_events","type":"User","site_admin":false},"created_at":"2016-03-24T15:53:32Z","updated_at":"2016-03-24T15:53:32Z","author_association":"NONE","body":"@lukens Thank you, this helped me a ton! :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/223537944","html_url":"https://github.com/elastic/elasticsearch/issues/9298#issuecomment-223537944","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9298","id":223537944,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMzUzNzk0NA==","user":{"login":"davidrapin","id":605880,"node_id":"MDQ6VXNlcjYwNTg4MA==","avatar_url":"https://avatars2.githubusercontent.com/u/605880?v=4","gravatar_id":"","url":"https://api.github.com/users/davidrapin","html_url":"https://github.com/davidrapin","followers_url":"https://api.github.com/users/davidrapin/followers","following_url":"https://api.github.com/users/davidrapin/following{/other_user}","gists_url":"https://api.github.com/users/davidrapin/gists{/gist_id}","starred_url":"https://api.github.com/users/davidrapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidrapin/subscriptions","organizations_url":"https://api.github.com/users/davidrapin/orgs","repos_url":"https://api.github.com/users/davidrapin/repos","events_url":"https://api.github.com/users/davidrapin/events{/privacy}","received_events_url":"https://api.github.com/users/davidrapin/received_events","type":"User","site_admin":false},"created_at":"2016-06-03T09:49:15Z","updated_at":"2016-06-03T09:56:58Z","author_association":"NONE","body":"@lukens Looking for the same kind of solution, but there was a problem for me : this solution will **not** deduplicate documents with the same `_uid` that are from different types (my use-case). Surprisingly, this will deduplicate documents that are from different incides.\n\ne.g.: multi-index (indices: ` idx1` and ` idx2`) **AND** multi-type query (types: `t1` and `t2`)\n\n``` JS\nPOST idx*/t1,t2/_search?q=*\n{\n  \"size\": 0,\n  \"aggs\":{\n    \"dedup\" : {\n      \"terms\":{\n        \"field\": \"_uid\"\n       },\n       \"aggs\":{\n         \"dedup_docs\":{\n           \"top_hits\":{\n             \"size\":1\n           }\n         }\n       }    \n    }\n  }\n}\n```\n\nResponse (the type is included in the `_uid` aggregation key for some reason):\n\n``` JSON\n{\n   \"took\": 2,\n   \"timed_out\": false,\n   \"_shards\": {\n      \"total\": 2,\n      \"successful\": 2,\n      \"failed\": 0\n   },\n   \"hits\": {\n      \"total\": 4,\n      \"max_score\": 0,\n      \"hits\": []\n   },\n   \"aggregations\": {\n      \"dedup\": {\n         \"doc_count_error_upper_bound\": 0,\n         \"sum_other_doc_count\": 0,\n         \"buckets\": [\n            {\n               \"key\": \"t1#1\",\n               \"doc_count\": 2,\n               \"dedup_docs\": {\n                  \"hits\": {\n                     \"total\": 2,\n                     \"max_score\": 1,\n                     \"hits\": [\n                        {\n                           \"_index\": \"idx1\",\n                           \"_type\": \"t1\",\n                           \"_id\": \"1\",\n                           \"_score\": 1,\n                           \"_source\": {\n                              \"f1\": \"v1\"\n                           }\n                        }\n                     ]\n                  }\n               }\n            },\n            {\n               \"key\": \"t1#2\",\n               \"doc_count\": 1,\n               \"dedup_docs\": {\n                  \"hits\": {\n                     \"total\": 1,\n                     \"max_score\": 1,\n                     \"hits\": [\n                        {\n                           \"_index\": \"idx1\",\n                           \"_type\": \"t1\",\n                           \"_id\": \"2\",\n                           \"_score\": 1,\n                           \"_source\": {\n                              \"f1\": \"v1\"\n                           }\n                        }\n                     ]\n                  }\n               }\n            },\n            {\n               \"key\": \"t2#1\",\n               \"doc_count\": 1,\n               \"dedup_docs\": {\n                  \"hits\": {\n                     \"total\": 1,\n                     \"max_score\": 1,\n                     \"hits\": [\n                        {\n                           \"_index\": \"idx1\",\n                           \"_type\": \"t2\",\n                           \"_id\": \"1\",\n                           \"_score\": 1,\n                           \"_source\": {\n                              \"f1\": \"v1\"\n                           }\n                        }\n                     ]\n                  }\n               }\n            }\n         ]\n      }\n   }\n}\n```\n\nNote that the index `idx2` contains a documents with `\"id\": \"1\"` and `\"type\": \"t1\"` as well (which is matched by the query). This document gets aggregated correctly (see for `\"key\":\"t1#1\"`, total is 2).\n","performed_via_github_app":null}]