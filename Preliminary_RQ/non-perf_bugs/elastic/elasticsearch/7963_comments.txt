[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/58013788","html_url":"https://github.com/elastic/elasticsearch/issues/7963#issuecomment-58013788","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7963","id":58013788,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDEzNzg4","user":{"login":"nickminutello","id":298274,"node_id":"MDQ6VXNlcjI5ODI3NA==","avatar_url":"https://avatars1.githubusercontent.com/u/298274?v=4","gravatar_id":"","url":"https://api.github.com/users/nickminutello","html_url":"https://github.com/nickminutello","followers_url":"https://api.github.com/users/nickminutello/followers","following_url":"https://api.github.com/users/nickminutello/following{/other_user}","gists_url":"https://api.github.com/users/nickminutello/gists{/gist_id}","starred_url":"https://api.github.com/users/nickminutello/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickminutello/subscriptions","organizations_url":"https://api.github.com/users/nickminutello/orgs","repos_url":"https://api.github.com/users/nickminutello/repos","events_url":"https://api.github.com/users/nickminutello/events{/privacy}","received_events_url":"https://api.github.com/users/nickminutello/received_events","type":"User","site_admin":false},"created_at":"2014-10-06T13:06:34Z","updated_at":"2014-10-06T13:06:34Z","author_association":"NONE","body":"Still getting to the core of the problem, but it looks like it is matching on integer fields is what is misbehaving...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/58034599","html_url":"https://github.com/elastic/elasticsearch/issues/7963#issuecomment-58034599","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7963","id":58034599,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDM0NTk5","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2014-10-06T15:28:49Z","updated_at":"2014-10-06T15:28:49Z","author_association":"MEMBER","body":"Which version of elasticsearch is it? How do you index documents (using bulk or individual index requests)? Can you create a script that reproduces the issue on an empty cluster?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/58038567","html_url":"https://github.com/elastic/elasticsearch/issues/7963#issuecomment-58038567","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7963","id":58038567,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDM4NTY3","user":{"login":"nickminutello","id":298274,"node_id":"MDQ6VXNlcjI5ODI3NA==","avatar_url":"https://avatars1.githubusercontent.com/u/298274?v=4","gravatar_id":"","url":"https://api.github.com/users/nickminutello","html_url":"https://github.com/nickminutello","followers_url":"https://api.github.com/users/nickminutello/followers","following_url":"https://api.github.com/users/nickminutello/following{/other_user}","gists_url":"https://api.github.com/users/nickminutello/gists{/gist_id}","starred_url":"https://api.github.com/users/nickminutello/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickminutello/subscriptions","organizations_url":"https://api.github.com/users/nickminutello/orgs","repos_url":"https://api.github.com/users/nickminutello/repos","events_url":"https://api.github.com/users/nickminutello/events{/privacy}","received_events_url":"https://api.github.com/users/nickminutello/received_events","type":"User","site_admin":false},"created_at":"2014-10-06T15:52:43Z","updated_at":"2014-10-06T15:52:43Z","author_association":"NONE","body":"Oops. \nElastic v1.3.2\nOn Windows (AMD64) (so far thats all I have tested on)\nOn Java 1.7 (1.7.0_60) (so far thats all I have tested on)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/58043929","html_url":"https://github.com/elastic/elasticsearch/issues/7963#issuecomment-58043929","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7963","id":58043929,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDQzOTI5","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2014-10-06T16:23:58Z","updated_at":"2014-10-06T16:23:58Z","author_association":"MEMBER","body":"@nickminutello I tried to reproduce the issue using information that you provided but everything seem to work. I used fresh installation of v1.3.2 and the following script: https://gist.github.com/imotov/60f0c8f00819eb2d0004 I am getting this record back before and after the restart.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/58049500","html_url":"https://github.com/elastic/elasticsearch/issues/7963#issuecomment-58049500","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7963","id":58049500,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDQ5NTAw","user":{"login":"nickminutello","id":298274,"node_id":"MDQ6VXNlcjI5ODI3NA==","avatar_url":"https://avatars1.githubusercontent.com/u/298274?v=4","gravatar_id":"","url":"https://api.github.com/users/nickminutello","html_url":"https://github.com/nickminutello","followers_url":"https://api.github.com/users/nickminutello/followers","following_url":"https://api.github.com/users/nickminutello/following{/other_user}","gists_url":"https://api.github.com/users/nickminutello/gists{/gist_id}","starred_url":"https://api.github.com/users/nickminutello/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickminutello/subscriptions","organizations_url":"https://api.github.com/users/nickminutello/orgs","repos_url":"https://api.github.com/users/nickminutello/repos","events_url":"https://api.github.com/users/nickminutello/events{/privacy}","received_events_url":"https://api.github.com/users/nickminutello/received_events","type":"User","site_admin":false},"created_at":"2014-10-06T16:58:26Z","updated_at":"2014-10-06T16:58:26Z","author_association":"NONE","body":"Ok. Let me see if I can create a test case to reproduce it. It might be something peculiar to our mapping...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/58065553","html_url":"https://github.com/elastic/elasticsearch/issues/7963#issuecomment-58065553","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7963","id":58065553,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDY1NTUz","user":{"login":"nickminutello","id":298274,"node_id":"MDQ6VXNlcjI5ODI3NA==","avatar_url":"https://avatars1.githubusercontent.com/u/298274?v=4","gravatar_id":"","url":"https://api.github.com/users/nickminutello","html_url":"https://github.com/nickminutello","followers_url":"https://api.github.com/users/nickminutello/followers","following_url":"https://api.github.com/users/nickminutello/following{/other_user}","gists_url":"https://api.github.com/users/nickminutello/gists{/gist_id}","starred_url":"https://api.github.com/users/nickminutello/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickminutello/subscriptions","organizations_url":"https://api.github.com/users/nickminutello/orgs","repos_url":"https://api.github.com/users/nickminutello/repos","events_url":"https://api.github.com/users/nickminutello/events{/privacy}","received_events_url":"https://api.github.com/users/nickminutello/received_events","type":"User","site_admin":false},"created_at":"2014-10-06T18:21:24Z","updated_at":"2014-10-06T18:21:24Z","author_association":"NONE","body":"Its definitely something related to the index creation/config or mapping.\nIf the server is restarted between steps (3) and (4) the problem is exhibited.\n\nI will see if I can reproduce it in a simple stand-alone test case and post it tomorrow.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/58171632","html_url":"https://github.com/elastic/elasticsearch/issues/7963#issuecomment-58171632","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7963","id":58171632,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MTcxNjMy","user":{"login":"nickminutello","id":298274,"node_id":"MDQ6VXNlcjI5ODI3NA==","avatar_url":"https://avatars1.githubusercontent.com/u/298274?v=4","gravatar_id":"","url":"https://api.github.com/users/nickminutello","html_url":"https://github.com/nickminutello","followers_url":"https://api.github.com/users/nickminutello/followers","following_url":"https://api.github.com/users/nickminutello/following{/other_user}","gists_url":"https://api.github.com/users/nickminutello/gists{/gist_id}","starred_url":"https://api.github.com/users/nickminutello/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickminutello/subscriptions","organizations_url":"https://api.github.com/users/nickminutello/orgs","repos_url":"https://api.github.com/users/nickminutello/repos","events_url":"https://api.github.com/users/nickminutello/events{/privacy}","received_events_url":"https://api.github.com/users/nickminutello/received_events","type":"User","site_admin":false},"created_at":"2014-10-07T11:41:48Z","updated_at":"2014-10-07T12:03:00Z","author_association":"NONE","body":"In narrowing it down, I think there is a bit more indication what the problem is -  a clash of mappings...\n\nHere is the code.\nTo reproduce the bug, nuke data directory & run twice.\nThe first run will exit cleanly (ie find the inventory item).\nThe second will fail.\n\n``` java\n\npackage elastic.bug;\n\nimport java.io.IOException;\nimport java.util.Map;\n\nimport org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsResponse;\nimport org.elasticsearch.action.admin.indices.refresh.RefreshResponse;\nimport org.elasticsearch.action.index.IndexResponse;\nimport org.elasticsearch.action.search.SearchResponse;\nimport org.elasticsearch.client.AdminClient;\nimport org.elasticsearch.client.Client;\nimport org.elasticsearch.common.settings.ImmutableSettings;\nimport org.elasticsearch.node.Node;\n\nimport com.fasterxml.jackson.core.JsonGenerator;\nimport com.fasterxml.jackson.databind.DeserializationFeature;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.SerializationFeature;\nimport com.fasterxml.jackson.datatype.joda.JodaModule;\n\nimport static org.elasticsearch.common.settings.ImmutableSettings.settingsBuilder;\nimport static org.elasticsearch.node.NodeBuilder.nodeBuilder;\nimport static org.junit.Assert.assertEquals;\n\npublic class SearchByIdFailure\n{\n    private static final String INDEX = \"bugindex\";\n    private static final ObjectMapper json = new ObjectMapper();\n    static {\n        json.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);\n        json.configure(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN, true);\n        json.configure(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS, true);\n        json.configure(JsonGenerator.Feature.ESCAPE_NON_ASCII, true);\n        json.registerModule(new JodaModule());\n    }\n\n    private static Node node;\n\n    public static void main(String[] args) throws IOException\n    {\n        String elasticHome = \"target\";\n        ImmutableSettings.Builder settings = settingsBuilder()\n            .put(\"cluster.name\", \"Meow\")\n            .put(\"path.data\", elasticHome + \"/data\")\n            .put(\"transport.tcp.port\", 9000)\n            .put(\"http.port\", 9001)\n            .put(\"http.enabled\", true);\n\n        node = nodeBuilder()\n            .loadConfigSettings(false)\n            .client(false)\n            .local(true)\n            .settings(settings)\n            .build();\n\n        node.start();\n\n\n        if (!indexExists())\n        {\n            createIndex(\n                \"{\\\"analysis\\\":{\\\"analyzer\\\":{\\\"logistics_index\\\":{\\\"tokenizer\\\":\\\"whitespace\\\",\\\"filter\\\":[\\\"lowercase\\\"]},\\\"logistics_search\\\":{\\\"tokenizer\\\":\\\"whitespace\\\",\\\"filter\\\":[\\\"lowercase\\\"]},\\\"default_index\\\":{\\\"type\\\":\\\"combo\\\",\\\"deduplication\\\":\\\"true\\\",\\\"sub_analyzers\\\":[\\\"logistics_index\\\",\\\"standard\\\"]},\\\"default_search\\\":{\\\"type\\\":\\\"combo\\\",\\\"deduplication\\\":\\\"true\\\",\\\"sub_analyzers\\\":[\\\"logistics_search\\\",\\\"standard\\\"]}}},\\\"number_of_replicas\\\":0}\");\n        }\n\n        mapping(\"inventory\", \"{\" +\n            \"  \\\"properties\\\" : {\" +\n            \"    \\\"groupCompanyId\\\" : {\" +\n            \"      \\\"include_in_all\\\" : false,\" +\n            \"      \\\"index\\\" : \\\"not_analyzed\\\",\" +\n            \"      \\\"type\\\" : \\\"string\\\"\" +\n            \"    },\" +\n            \"    \\\"id\\\" : {\" +\n            \"      \\\"include_in_all\\\" : false,\" +\n            \"      \\\"type\\\" : \\\"long\\\"\" +\n            \"    }\" +\n            \"  }\" +\n            \"}\");\n\n        mapping(\"task\", \"{\" +\n            \"  \\\"properties\\\" : {\" +\n            \"    \\\"id\\\" : {\" +\n            \"      \\\"include_in_all\\\" : false,\" +\n            \"      \\\"index\\\" : \\\"not_analyzed\\\",\" +\n            \"      \\\"type\\\" : \\\"string\\\"\" +\n            \"    }\" +\n            \"  }\" +\n            \"}\");\n\n        index(\"7774\", \"inventory\", \"{\\\"groupCompanyId\\\":\\\"9FB2FFDC0FF5797FE04014AC6F0616B6\\\",\\\"id\\\":7774,\\\"moo\\\":\\\"cow\\\"\\n}\");\n        System.out.println(\"inventory = \" + prettyPrint(shortInvSource));\n\n        refresh();\n        String searchSource = \"{\\\"from\\\":0,\\\"size\\\":20,\\\"query\\\":{\\\"filtered\\\":{\\\"query\\\":{\\\"match_all\\\":{}},\\\"filter\\\":{\\\"and\\\":{\\\"filters\\\":[{\\\"type\\\":{\\\"value\\\":\\\"inventory\\\"}},{\\\"terms\\\":{\\\"groupCompanyId\\\":[\\\"0D13EF2D0E114D43BFE362F5024D8873\\\",\\\"0D593DE0CFBE49BEA3BF5AD7CD965782\\\",\\\"1E9C36CC45C64FCAACDEE0AF4FB91FBA\\\",\\\"33A946DC2B0E494EB371993D345F52E4\\\",\\\"6471AA50DFCF4192B8DD1C2E72A032C7\\\",\\\"9FB2FFDC0FF0797FE04014AC6F0616B6\\\",\\\"9FB2FFDC0FF1797FE04014AC6F0616B6\\\",\\\"9FB2FFDC0FF2797FE04014AC6F0616B6\\\",\\\"9FB2FFDC0FF3797FE04014AC6F0616B6\\\",\\\"9FB2FFDC0FF5797FE04014AC6F0616B6\\\",\\\"9FB2FFDC0FF6797FE04014AC6F0616B6\\\",\\\"AFE0FED33F06AFB6E04015AC5E060AA3\\\",\\\"NO_GROUP_COMPANY\\\"]}},{\\\"term\\\":{\\\"id\\\":\\\"7774\\\"}}]}}}},\\\"aggregations\\\":{\\\"aggregated_quantity\\\":{\\\"sum\\\":{\\\"field\\\":\\\"quantityNormalised\\\"}}}}\";\n        System.out.println(\"search = \" + prettyPrint(searchSource));\n\n\n        SearchResponse response = client()\n            .prepareSearch(INDEX)\n            .setSource(searchSource)\n            .execute()\n            .actionGet();\n\n        assertEquals(1, response.getHits().getTotalHits());\n\n        node.stop().close();\n    }\n\n    private static void mapping(String inventory, String propertiesSource)\n    {\n        admin()\n            .indices()\n            .preparePutMapping(INDEX)\n            .setType(inventory)\n            .setSource(propertiesSource)\n            .execute()\n            .actionGet();\n    }\n\n    private static void createIndex(String settingsSource)\n    {\n        admin()\n            .indices()\n            .prepareCreate(INDEX)\n            .setSettings(settingsSource)\n            .execute()\n            .actionGet();\n    }\n\n    public static boolean indexExists()\n    {\n        IndicesExistsResponse indicesExistsResponse = admin()\n            .indices()\n            .prepareExists(INDEX)\n            .execute().actionGet();\n        return indicesExistsResponse.isExists();\n    }\n\n    private static void index(String id, String type, String content) throws IOException\n    {\n        //noinspection unchecked\n        index(INDEX, type, id, json.readValue(content, Map.class));\n    }\n\n    private static String prettyPrint(String aggregationSource) throws IOException\n    {\n        return json.writerWithDefaultPrettyPrinter().writeValueAsString(json.readValue(aggregationSource, Map.class));\n    }\n\n    private static RefreshResponse refresh() {\n        return admin().indices().prepareRefresh().execute().actionGet();\n    }\n\n    private static  IndexResponse index(String index, String type, String id, Map<String, Object> source) {\n        return client().prepareIndex(index, type, id).setSource(source).execute().actionGet();\n    }\n\n    private static AdminClient admin() {\n        return client().admin();\n    }\n\n    private static Client client()\n    {\n        return node.client();\n    }\n}\n\n\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/58354307","html_url":"https://github.com/elastic/elasticsearch/issues/7963#issuecomment-58354307","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7963","id":58354307,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MzU0MzA3","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2014-10-08T13:08:50Z","updated_at":"2014-10-08T13:08:50Z","author_association":"MEMBER","body":"@nickminutello how is shortInvSource defined?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/58377547","html_url":"https://github.com/elastic/elasticsearch/issues/7963#issuecomment-58377547","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7963","id":58377547,"node_id":"MDEyOklzc3VlQ29tbWVudDU4Mzc3NTQ3","user":{"login":"nickminutello","id":298274,"node_id":"MDQ6VXNlcjI5ODI3NA==","avatar_url":"https://avatars1.githubusercontent.com/u/298274?v=4","gravatar_id":"","url":"https://api.github.com/users/nickminutello","html_url":"https://github.com/nickminutello","followers_url":"https://api.github.com/users/nickminutello/followers","following_url":"https://api.github.com/users/nickminutello/following{/other_user}","gists_url":"https://api.github.com/users/nickminutello/gists{/gist_id}","starred_url":"https://api.github.com/users/nickminutello/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickminutello/subscriptions","organizations_url":"https://api.github.com/users/nickminutello/orgs","repos_url":"https://api.github.com/users/nickminutello/repos","events_url":"https://api.github.com/users/nickminutello/events{/privacy}","received_events_url":"https://api.github.com/users/nickminutello/received_events","type":"User","site_admin":false},"created_at":"2014-10-08T15:37:17Z","updated_at":"2014-10-08T15:37:17Z","author_association":"NONE","body":"Gah. Sorry. (Thats the risk of making a last-moment edit in code in the github comment box - I should have left it alone). shortInvSource is just the source that has been passed to index. Either extract a variable - or nuke the line that prints out the json.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/58377734","html_url":"https://github.com/elastic/elasticsearch/issues/7963#issuecomment-58377734","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7963","id":58377734,"node_id":"MDEyOklzc3VlQ29tbWVudDU4Mzc3NzM0","user":{"login":"nickminutello","id":298274,"node_id":"MDQ6VXNlcjI5ODI3NA==","avatar_url":"https://avatars1.githubusercontent.com/u/298274?v=4","gravatar_id":"","url":"https://api.github.com/users/nickminutello","html_url":"https://github.com/nickminutello","followers_url":"https://api.github.com/users/nickminutello/followers","following_url":"https://api.github.com/users/nickminutello/following{/other_user}","gists_url":"https://api.github.com/users/nickminutello/gists{/gist_id}","starred_url":"https://api.github.com/users/nickminutello/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickminutello/subscriptions","organizations_url":"https://api.github.com/users/nickminutello/orgs","repos_url":"https://api.github.com/users/nickminutello/repos","events_url":"https://api.github.com/users/nickminutello/events{/privacy}","received_events_url":"https://api.github.com/users/nickminutello/received_events","type":"User","site_admin":false},"created_at":"2014-10-08T15:38:21Z","updated_at":"2014-10-08T15:38:21Z","author_association":"NONE","body":"Here is the edited version...\n\n``` java\n\npackage elastic.bug;\n\nimport java.io.IOException;\nimport java.util.Map;\n\nimport org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsResponse;\nimport org.elasticsearch.action.admin.indices.refresh.RefreshResponse;\nimport org.elasticsearch.action.index.IndexResponse;\nimport org.elasticsearch.action.search.SearchResponse;\nimport org.elasticsearch.client.AdminClient;\nimport org.elasticsearch.client.Client;\nimport org.elasticsearch.common.settings.ImmutableSettings;\nimport org.elasticsearch.node.Node;\n\nimport com.fasterxml.jackson.core.JsonGenerator;\nimport com.fasterxml.jackson.databind.DeserializationFeature;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.SerializationFeature;\nimport com.fasterxml.jackson.datatype.joda.JodaModule;\n\nimport static org.elasticsearch.common.settings.ImmutableSettings.settingsBuilder;\nimport static org.elasticsearch.node.NodeBuilder.nodeBuilder;\nimport static org.junit.Assert.assertEquals;\n\npublic class SearchByIdFailure\n{\n    private static final String INDEX = \"bugindex\";\n    private static final ObjectMapper json = new ObjectMapper();\n    static {\n        json.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);\n        json.configure(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN, true);\n        json.configure(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS, true);\n        json.configure(JsonGenerator.Feature.ESCAPE_NON_ASCII, true);\n        json.registerModule(new JodaModule());\n    }\n\n    private static Node node;\n\n    public static void main(String[] args) throws IOException\n    {\n        String elasticHome = \"target\";\n        ImmutableSettings.Builder settings = settingsBuilder()\n            .put(\"cluster.name\", \"Meow\")\n            .put(\"path.data\", elasticHome + \"/data\")\n            .put(\"transport.tcp.port\", 9000)\n            .put(\"http.port\", 9001)\n            .put(\"http.enabled\", true);\n\n        node = nodeBuilder()\n            .loadConfigSettings(false)\n            .client(false)\n            .local(true)\n            .settings(settings)\n            .build();\n\n        node.start();\n\n\n        if (!indexExists())\n        {\n            createIndex(\n                \"{\\\"analysis\\\":{\\\"analyzer\\\":{\\\"logistics_index\\\":{\\\"tokenizer\\\":\\\"whitespace\\\",\\\"filter\\\":[\\\"lowercase\\\"]},\\\"logistics_search\\\":{\\\"tokenizer\\\":\\\"whitespace\\\",\\\"filter\\\":[\\\"lowercase\\\"]},\\\"default_index\\\":{\\\"type\\\":\\\"combo\\\",\\\"deduplication\\\":\\\"true\\\",\\\"sub_analyzers\\\":[\\\"logistics_index\\\",\\\"standard\\\"]},\\\"default_search\\\":{\\\"type\\\":\\\"combo\\\",\\\"deduplication\\\":\\\"true\\\",\\\"sub_analyzers\\\":[\\\"logistics_search\\\",\\\"standard\\\"]}}},\\\"number_of_replicas\\\":0}\");\n        }\n\n        mapping(\"inventory\", \"{\" +\n            \"  \\\"properties\\\" : {\" +\n            \"    \\\"groupCompanyId\\\" : {\" +\n            \"      \\\"include_in_all\\\" : false,\" +\n            \"      \\\"index\\\" : \\\"not_analyzed\\\",\" +\n            \"      \\\"type\\\" : \\\"string\\\"\" +\n            \"    },\" +\n            \"    \\\"id\\\" : {\" +\n            \"      \\\"include_in_all\\\" : false,\" +\n            \"      \\\"type\\\" : \\\"long\\\"\" +\n            \"    }\" +\n            \"  }\" +\n            \"}\");\n\n        mapping(\"task\", \"{\" +\n            \"  \\\"properties\\\" : {\" +\n            \"    \\\"id\\\" : {\" +\n            \"      \\\"include_in_all\\\" : false,\" +\n            \"      \\\"index\\\" : \\\"not_analyzed\\\",\" +\n            \"      \\\"type\\\" : \\\"string\\\"\" +\n            \"    }\" +\n            \"  }\" +\n            \"}\");\n\n        index(\"7774\", \"inventory\", \"{\\\"groupCompanyId\\\":\\\"9FB2FFDC0FF5797FE04014AC6F0616B6\\\",\\\"id\\\":7774,\\\"moo\\\":\\\"cow\\\"\\n}\");\n\n        refresh();\n        String searchSource = \"{\\\"from\\\":0,\\\"size\\\":20,\\\"query\\\":{\\\"filtered\\\":{\\\"query\\\":{\\\"match_all\\\":{}},\\\"filter\\\":{\\\"and\\\":{\\\"filters\\\":[{\\\"type\\\":{\\\"value\\\":\\\"inventory\\\"}},{\\\"terms\\\":{\\\"groupCompanyId\\\":[\\\"0D13EF2D0E114D43BFE362F5024D8873\\\",\\\"0D593DE0CFBE49BEA3BF5AD7CD965782\\\",\\\"1E9C36CC45C64FCAACDEE0AF4FB91FBA\\\",\\\"33A946DC2B0E494EB371993D345F52E4\\\",\\\"6471AA50DFCF4192B8DD1C2E72A032C7\\\",\\\"9FB2FFDC0FF0797FE04014AC6F0616B6\\\",\\\"9FB2FFDC0FF1797FE04014AC6F0616B6\\\",\\\"9FB2FFDC0FF2797FE04014AC6F0616B6\\\",\\\"9FB2FFDC0FF3797FE04014AC6F0616B6\\\",\\\"9FB2FFDC0FF5797FE04014AC6F0616B6\\\",\\\"9FB2FFDC0FF6797FE04014AC6F0616B6\\\",\\\"AFE0FED33F06AFB6E04015AC5E060AA3\\\",\\\"NO_GROUP_COMPANY\\\"]}},{\\\"term\\\":{\\\"id\\\":\\\"7774\\\"}}]}}}},\\\"aggregations\\\":{\\\"aggregated_quantity\\\":{\\\"sum\\\":{\\\"field\\\":\\\"quantityNormalised\\\"}}}}\";\n        System.out.println(\"search = \" + prettyPrint(searchSource));\n\n\n        SearchResponse response = client()\n            .prepareSearch(INDEX)\n            .setSource(searchSource)\n            .execute()\n            .actionGet();\n\n        assertEquals(1, response.getHits().getTotalHits());\n\n        node.stop().close();\n    }\n\n    private static void mapping(String inventory, String propertiesSource)\n    {\n        admin()\n            .indices()\n            .preparePutMapping(INDEX)\n            .setType(inventory)\n            .setSource(propertiesSource)\n            .execute()\n            .actionGet();\n    }\n\n    private static void createIndex(String settingsSource)\n    {\n        admin()\n            .indices()\n            .prepareCreate(INDEX)\n            .setSettings(settingsSource)\n            .execute()\n            .actionGet();\n    }\n\n    public static boolean indexExists()\n    {\n        IndicesExistsResponse indicesExistsResponse = admin()\n            .indices()\n            .prepareExists(INDEX)\n            .execute().actionGet();\n        return indicesExistsResponse.isExists();\n    }\n\n    private static void index(String id, String type, String content) throws IOException\n    {\n        //noinspection unchecked\n        index(INDEX, type, id, json.readValue(content, Map.class));\n    }\n\n    private static String prettyPrint(String aggregationSource) throws IOException\n    {\n        return json.writerWithDefaultPrettyPrinter().writeValueAsString(json.readValue(aggregationSource, Map.class));\n    }\n\n    private static RefreshResponse refresh() {\n        return admin().indices().prepareRefresh().execute().actionGet();\n    }\n\n    private static  IndexResponse index(String index, String type, String id, Map<String, Object> source) {\n        return client().prepareIndex(index, type, id).setSource(source).execute().actionGet();\n    }\n\n    private static AdminClient admin() {\n        return client().admin();\n    }\n\n    private static Client client()\n    {\n        return node.client();\n    }\n}\n\n\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/58644565","html_url":"https://github.com/elastic/elasticsearch/issues/7963#issuecomment-58644565","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7963","id":58644565,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NjQ0NTY1","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2014-10-10T11:42:20Z","updated_at":"2014-10-10T11:42:20Z","author_association":"MEMBER","body":"Yes, this is a version of #5851. A quick workaround is to use \n\n```\n\"term\": {\n    \"inventory.id\": \"7774\"\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/58757065","html_url":"https://github.com/elastic/elasticsearch/issues/7963#issuecomment-58757065","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7963","id":58757065,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NzU3MDY1","user":{"login":"nickminutello","id":298274,"node_id":"MDQ6VXNlcjI5ODI3NA==","avatar_url":"https://avatars1.githubusercontent.com/u/298274?v=4","gravatar_id":"","url":"https://api.github.com/users/nickminutello","html_url":"https://github.com/nickminutello","followers_url":"https://api.github.com/users/nickminutello/followers","following_url":"https://api.github.com/users/nickminutello/following{/other_user}","gists_url":"https://api.github.com/users/nickminutello/gists{/gist_id}","starred_url":"https://api.github.com/users/nickminutello/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickminutello/subscriptions","organizations_url":"https://api.github.com/users/nickminutello/orgs","repos_url":"https://api.github.com/users/nickminutello/repos","events_url":"https://api.github.com/users/nickminutello/events{/privacy}","received_events_url":"https://api.github.com/users/nickminutello/received_events","type":"User","site_admin":false},"created_at":"2014-10-11T17:17:58Z","updated_at":"2014-10-11T17:17:58Z","author_association":"NONE","body":"We still have the issue of it working until there is a restart \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/58973543","html_url":"https://github.com/elastic/elasticsearch/issues/7963#issuecomment-58973543","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7963","id":58973543,"node_id":"MDEyOklzc3VlQ29tbWVudDU4OTczNTQz","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2014-10-14T00:18:57Z","updated_at":"2014-10-14T00:18:57Z","author_association":"MEMBER","body":"@nickminutello what most likely happening here is before restart `id` is getting resolved into `inventory.id`, after restart when mapping is reloaded, it's getting resolved as `task.id`.\n","performed_via_github_app":null}]