{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/7381","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7381/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7381/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7381/events","html_url":"https://github.com/elastic/elasticsearch/issues/7381","id":40821353,"node_id":"MDU6SXNzdWU0MDgyMTM1Mw==","number":7381,"title":"query_string can't find token that _analyze shows is generated, but term query can","user":{"login":"billumina","id":3442016,"node_id":"MDQ6VXNlcjM0NDIwMTY=","avatar_url":"https://avatars0.githubusercontent.com/u/3442016?v=4","gravatar_id":"","url":"https://api.github.com/users/billumina","html_url":"https://github.com/billumina","followers_url":"https://api.github.com/users/billumina/followers","following_url":"https://api.github.com/users/billumina/following{/other_user}","gists_url":"https://api.github.com/users/billumina/gists{/gist_id}","starred_url":"https://api.github.com/users/billumina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/billumina/subscriptions","organizations_url":"https://api.github.com/users/billumina/orgs","repos_url":"https://api.github.com/users/billumina/repos","events_url":"https://api.github.com/users/billumina/events{/privacy}","received_events_url":"https://api.github.com/users/billumina/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-08-21T16:15:40Z","updated_at":"2014-08-22T14:40:31Z","closed_at":"2014-08-22T14:37:05Z","author_association":"NONE","active_lock_reason":null,"body":"I have attached a short bash script to recreate the situation. I have a fairly simple custom analyzer that I want to break on camel case so lowercase is last. Using the _analyze endpoint I can see the token I am searching for is generated by the analyzer, however searching for it with query_string yields a different result that a term query. I put comments in the script to explain in more detail.\n\nThanks for any help!\n# !/bin/sh\n\nurl=\"http://localhost:9200\"\ndefaultIndex=\"example\"\n\necho \"Start over...this will fail the first time the script is run since the index will not exist\"\ncurl -XDELETE \"$url/$defaultIndex?refresh=true\"\n\necho \"Create index with custom analyzer\"\ncurl -XPUT \"$url/$defaultIndex\" -d '{\n \"index\": {\n            \"analysis\": {\n                    \"filter\": {\n                        \"my_worddelim\": {\n                            \"type\": \"word_delimiter\",\n                            \"split_on_case_change\": true,\n                            \"preserve_original\": true\n                        }\n                    },\n                    \"analyzer\": {\n                            \"my_analyzer\": {\n                                    \"type\":         \"custom\",\n                                    \"char_filter\":  [ \"html_strip\" ],\n                                    \"tokenizer\":    \"keyword\",\n                                    \"filter\":       [ \"stop\", \"my_worddelim\", \"lowercase\" ]\n                            }\n                    }\n            }\n    }\n}'\n\necho\n\ncurl -XPUT \"$url/$defaultIndex/example/_mapping\" -d '{\n    \"example\" : {\n        \"properties\" : {\n            \"name\": {\n                \"type\" : \"multi_field\",\n                \"path\": \"just_name\",\n                \"fields\" : {\n                    \"name\": { \"type\": \"string\", \"analyzer\": \"my_analyzer\" },\n            \"sample\" : {\"type\" : \"string\", \"index\" : \"not_analyzed\" },\n                    \"sample_name\" : {\"type\" : \"string\", \"analyzer\": \"my_analyzer\" }\n                }\n            }\n    }\n    }\n}'\n\necho \"Shows the lowercase token exampleofbug is generated\"\ncurl -XGET \"$url/$defaultIndex/_analyze?analyzer=my_analyzer&pretty=true\" -d 'ExampleOf Bug'\n\necho \"Post the document (haven't tried with non-bulk request)\"\ncurl -XPOST \"$url/$defaultIndex/example/_bulk?refresh=true\" -d '\n{ \"index\" :  {\"_index\":\"example\",\"_type\":\"example\",\"_id\":\"2169167\",\"_version_type\":\"internal\",\"_timestamp\":0} }\n{\"name\":\"ExampleOf Bug\"}\n'\n\necho\n\necho \"query_string query is unable to find token in the name field even though the path is just_name\"\necho \"Escaping the space throws exception\"\ncurl -XPOST \"$url/$defaultIndex/example/_search?pretty=true\" -d '\n{\n  \"query\": {\n    \"query_string\": {\n      \"query\": \"name:\\\"exampleof bug\\\"\"\n    }\n  }\n}\n'\n\necho\n\necho \"Can successfully find token in name field that I was unable to find with query_string\"\ncurl -XPOST \"$url/$defaultIndex/example/_search?pretty=true\" -d '\n{\n  \"query\": {\n    \"term\": {\n      \"name\": \"exampleof bug\"\n    }\n  }\n}\n'\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}