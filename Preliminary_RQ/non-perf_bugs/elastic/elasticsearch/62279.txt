{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/62279","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/62279/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/62279/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/62279/events","html_url":"https://github.com/elastic/elasticsearch/issues/62279","id":700277812,"node_id":"MDU6SXNzdWU3MDAyNzc4MTI=","number":62279,"title":"Circuit breaker enhancements","user":{"login":"lanerjo","id":20589998,"node_id":"MDQ6VXNlcjIwNTg5OTk4","avatar_url":"https://avatars2.githubusercontent.com/u/20589998?v=4","gravatar_id":"","url":"https://api.github.com/users/lanerjo","html_url":"https://github.com/lanerjo","followers_url":"https://api.github.com/users/lanerjo/followers","following_url":"https://api.github.com/users/lanerjo/following{/other_user}","gists_url":"https://api.github.com/users/lanerjo/gists{/gist_id}","starred_url":"https://api.github.com/users/lanerjo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lanerjo/subscriptions","organizations_url":"https://api.github.com/users/lanerjo/orgs","repos_url":"https://api.github.com/users/lanerjo/repos","events_url":"https://api.github.com/users/lanerjo/events{/privacy}","received_events_url":"https://api.github.com/users/lanerjo/received_events","type":"User","site_admin":false},"labels":[{"id":166507771,"node_id":"MDU6TGFiZWwxNjY1MDc3NzE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Circuit%20Breakers","name":":Core/Infra/Circuit Breakers","color":"0e8a16","default":false,"description":"Track estimates of memory consumption to prevent overload"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":1967495446,"node_id":"MDU6TGFiZWwxOTY3NDk1NDQ2","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Core/Infra","name":"Team:Core/Infra","color":"fef2c0","default":false,"description":"Meta label for core/infra team"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-09-12T15:36:29Z","updated_at":"2020-09-16T13:27:17Z","closed_at":"2020-09-15T19:58:54Z","author_association":"NONE","active_lock_reason":null,"body":"Circuit breaker adjustments:\r\n1. Add additional circuit breakers and clarify existing circuit breakers.\r\n2. Logs should state the exact circuit breaker that was tripped.\r\n3. Circuit breakers should not account for recovery of a shard.\r\n4. More narrowly tailor circuit breakers to allow admins better tuning.\r\n5. Setting for Search requests that break circuit breakers should be cancelled. (ie. breaker.search.cancel_request: true|false)\r\n6. Ensure cluster state requests are never touched by circuit breakers\r\n7. Upon tripping of a circuit breaker, used memory from that request is immediately GC'd (would require the use of explicit gc)\r\n8. Ability to specify different circuit breakers on a per node, per node role, or all basis \r\n9. More accurate descriptions of circuit breakers in DOCs\r\n\r\nExisting circuit breakers should be more appropriately named. eg.\r\nindices.breaker.total.use_real_memory -> breaker.parent.total.use_real_memory\r\nindices.breaker.total.limit -> breaker.parent.total.limit\r\nindices.breaker.request.limit -> breaker.request.limit (unless this is truly a per index breaker)\r\nindices.breaker.request.overhead -> breaker.request.overhead\r\nindices.breaker.accounting.limit -> breaker.memory.accounting.limit (unless this is per index)\r\nindices.breaker.accounting.overhead -> breaker.memory.accounting.overhead\r\n\r\nShould add additional/more narrow circuit breakers for: \r\n1. Aggregation memory used (This should work better than max_buckets, as this would be more dynamic)\r\n2. Calculations memory used (ie. unique counts)\r\n3. Total size of response from search request (should apply at the coordinating node, should also cancel the rest of the request)\r\n4. Recovery circuit breaker (this should only affect the recovery of shards on a node)\r\n5. Ingest circuit breaker (ability to limit the incoming size of bulk or write requests separately from other network requests)\r\n6. Nested aggregations circuit breaker... So instead of allowing a user to nest aggregations 10+ levels, this could be tunable, and shut down before the request ever hits a shard.\r\n\r\n\r\n\r\n","closed_by":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"performed_via_github_app":null}