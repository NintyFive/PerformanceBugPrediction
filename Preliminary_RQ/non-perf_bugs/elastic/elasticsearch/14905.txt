{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/14905","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14905/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14905/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14905/events","html_url":"https://github.com/elastic/elasticsearch/issues/14905","id":118119003,"node_id":"MDU6SXNzdWUxMTgxMTkwMDM=","number":14905,"title":"Require root-cause exception to ESLogger methods","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","site_admin":false},"labels":[{"id":144797810,"node_id":"MDU6TGFiZWwxNDQ3OTc4MTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Core","name":":Core/Infra/Core","color":"0e8a16","default":false,"description":"Core issues without another label"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2015-11-20T20:21:27Z","updated_at":"2018-02-13T19:37:17Z","closed_at":"2016-09-27T16:11:12Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"This is a spinoff of #14867 where we failed to log the root cause exception in a catch clause that could have shed light on #14866.\n\nI think we should require root cause exceptions to our logger methods to 1) fix the remaining places that swallow exceptions (I've hit maybe 2 dozen or so), and 2) reduce the chances of swallowing exceptions in new code going forward.\n\nIt means that those times when there is no exception, we'd have to pass null, but I think that's a fair tradeoff so we don't repeat #14866.\n\nI had started to work on this for all except `trace`, but then came across at least one place that was trace-logging an exception (and I'm pretty sure we `debug` and `info` exceptions in quite a few places) so I decided to just make this a required argument for all `ESLogger` methods, but this is apparently controversial so let's discuss it here.\n\nI could only do this for `error` and `warn` but I'm not sure how many places we are swallowing exceptions are using the other levels ...\n\nJust to get a sense of the things I'm finding ... some are wrong-order-of-arguments, e.g.:\n\n```\ntry {\n  failReplicaIfNeeded(request.internalShardId.getIndex(), request.internalShardId.id(), t);\n} catch (Throwable unexpected) {\n  logger.error(\"{} unexpected error while failing replica\", request.internalShardId.id(), unexpected);\n} finally {\n  responseWithFailure(t);\n}\n```\n\nothers do a catch but then do nothing with the exception:\n\n```\n} catch (Throwable t) {\n  logger.warn(\"[{}] failed to refresh-mapping in cluster state, types [{}]\", index, refreshTask.types);\n}\n```\n\nOthers only include `getMessage` from the exception but should (usually?) include the full exception ... the message by itself can be ... tantalizing:\n\n```\nif (cause instanceof ConnectTransportException) {\n  logger.debug(\"delaying recovery of {} for [{}] due to networking error [{}]\", recoveryStatus.shardId(), recoverySettings.retryDelayNetwork(), cause.getMessage());\n```\n","closed_by":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"performed_via_github_app":null}