[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/496205833","html_url":"https://github.com/elastic/elasticsearch/issues/42587#issuecomment-496205833","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42587","id":496205833,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NjIwNTgzMw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-05-27T13:03:12Z","updated_at":"2019-05-27T13:03:12Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/497619916","html_url":"https://github.com/elastic/elasticsearch/issues/42587#issuecomment-497619916","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42587","id":497619916,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzYxOTkxNg==","user":{"login":"romseygeek","id":1347065,"node_id":"MDQ6VXNlcjEzNDcwNjU=","avatar_url":"https://avatars0.githubusercontent.com/u/1347065?v=4","gravatar_id":"","url":"https://api.github.com/users/romseygeek","html_url":"https://github.com/romseygeek","followers_url":"https://api.github.com/users/romseygeek/followers","following_url":"https://api.github.com/users/romseygeek/following{/other_user}","gists_url":"https://api.github.com/users/romseygeek/gists{/gist_id}","starred_url":"https://api.github.com/users/romseygeek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/romseygeek/subscriptions","organizations_url":"https://api.github.com/users/romseygeek/orgs","repos_url":"https://api.github.com/users/romseygeek/repos","events_url":"https://api.github.com/users/romseygeek/events{/privacy}","received_events_url":"https://api.github.com/users/romseygeek/received_events","type":"User","site_admin":false},"created_at":"2019-05-31T08:13:27Z","updated_at":"2019-05-31T08:13:27Z","author_association":"CONTRIBUTOR","body":"This is a bug in `IntervalBuilder#analyzeText`, which is returning `null` instead of `NO_INTERVALS`.  I'm not quite sure if `NO_INTERVALS` is the correct thing to return here though, as this may lead to some unexpected behaviour - for example, the query in the issue description would end up returning no documents, but an equivalent query asking for a match on `the pioneer` *would* return docs, as the stopword gap gets reworked into a widening of the non-stopword interval.  Maybe the best response is actually to throw an exception if a match query ends up with no tokens after analysis?  What do you think @jimczi?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/497632320","html_url":"https://github.com/elastic/elasticsearch/issues/42587#issuecomment-497632320","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42587","id":497632320,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzYzMjMyMA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2019-05-31T08:54:07Z","updated_at":"2019-05-31T08:54:07Z","author_association":"MEMBER","body":"I think it's ok if the query in the issue description ends up returning no documents. We have the same problematic with the normal `match` query which returns a MatchNoDocsQuery by default when all terms are removed from the analysis. However we also have an option to ignore the query completely:\r\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query.html#query-dsl-match-query-zero \r\nWould it be difficult to add this option in the match interval query ? I also wonder if we could improve the documentation to ensure that users don't split their `match` queries like in the issue description. I guess that this is the legacy of the non-analyzed span queries so we should make it clear (if it's not already the case) that block of texts that must appear together should not be splitted.   ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/497641639","html_url":"https://github.com/elastic/elasticsearch/issues/42587#issuecomment-497641639","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42587","id":497641639,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzY0MTYzOQ==","user":{"login":"romseygeek","id":1347065,"node_id":"MDQ6VXNlcjEzNDcwNjU=","avatar_url":"https://avatars0.githubusercontent.com/u/1347065?v=4","gravatar_id":"","url":"https://api.github.com/users/romseygeek","html_url":"https://github.com/romseygeek","followers_url":"https://api.github.com/users/romseygeek/followers","following_url":"https://api.github.com/users/romseygeek/following{/other_user}","gists_url":"https://api.github.com/users/romseygeek/gists{/gist_id}","starred_url":"https://api.github.com/users/romseygeek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/romseygeek/subscriptions","organizations_url":"https://api.github.com/users/romseygeek/orgs","repos_url":"https://api.github.com/users/romseygeek/repos","events_url":"https://api.github.com/users/romseygeek/events{/privacy}","received_events_url":"https://api.github.com/users/romseygeek/received_events","type":"User","site_admin":false},"created_at":"2019-05-31T09:23:55Z","updated_at":"2019-05-31T09:23:55Z","author_association":"CONTRIBUTOR","body":"> Would it be difficult to add this option in the match interval query ?\r\n\r\nWe could add something like `ignore_empty` to the `all_of` interval builder, but I think documentation is probably the way to go.  I'll open a PR to fix the immediate bug, and work on the docs as well.","performed_via_github_app":null}]