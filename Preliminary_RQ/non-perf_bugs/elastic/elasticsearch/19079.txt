{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/19079","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19079/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19079/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19079/events","html_url":"https://github.com/elastic/elasticsearch/issues/19079","id":162316600,"node_id":"MDU6SXNzdWUxNjIzMTY2MDA=","number":19079,"title":"An incredibly arcane missing header in response to a POST","user":{"login":"jeffsilverm","id":549255,"node_id":"MDQ6VXNlcjU0OTI1NQ==","avatar_url":"https://avatars2.githubusercontent.com/u/549255?v=4","gravatar_id":"","url":"https://api.github.com/users/jeffsilverm","html_url":"https://github.com/jeffsilverm","followers_url":"https://api.github.com/users/jeffsilverm/followers","following_url":"https://api.github.com/users/jeffsilverm/following{/other_user}","gists_url":"https://api.github.com/users/jeffsilverm/gists{/gist_id}","starred_url":"https://api.github.com/users/jeffsilverm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeffsilverm/subscriptions","organizations_url":"https://api.github.com/users/jeffsilverm/orgs","repos_url":"https://api.github.com/users/jeffsilverm/repos","events_url":"https://api.github.com/users/jeffsilverm/events{/privacy}","received_events_url":"https://api.github.com/users/jeffsilverm/received_events","type":"User","site_admin":false},"labels":[{"id":152517143,"node_id":"MDU6TGFiZWwxNTI1MTcxNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/REST%20API","name":":Core/Infra/REST API","color":"0e8a16","default":false,"description":"REST infrastructure and utilities"},{"id":92913858,"node_id":"MDU6TGFiZWw5MjkxMzg1OA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/good%20first%20issue","name":"good first issue","color":"07569b","default":true,"description":"low hanging fruit"}],"state":"closed","locked":false,"assignee":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"assignees":[{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2016-06-26T07:39:47Z","updated_at":"2018-01-09T15:13:16Z","closed_at":"2016-07-25T21:57:37Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version**: 2.3.3\n\n**JVM version**: \nopenjdk version \"1.8.0_91\"\nOpenJDK Runtime Environment (build 1.8.0_91-8u91-b14-0ubuntu4~16.04.1-b14)\nOpenJDK 64-Bit Server VM (build 25.91-b14, mixed mode)\n\n**OS version**:\nLinux jeff-desktop 4.4.0-24-generic #43-Ubuntu SMP Wed Jun 8 19:27:37 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n(Ubuntu 16.04)\n\n**Description of the problem including expected versus actual behavior**:\nThis is going to sound incredibly arcane.  There is a missing header in the response to a successful PUT.  The following curl commands work exactly as they are supposed to, there is no problem there.\n\n```\njeffs@jeff-desktop:~$ curl -i -XPOST 'jeffsilverm.ddns.net:9200/customer/external?pretty' -d '\n{\n  \"name\": \"Jane Eerickson\"\n}'\nHTTP/1.1 201 Created\nContent-Type: application/json; charset=UTF-8\nContent-Length: 201\n\n{\n  \"_index\" : \"customer\",\n  \"_type\" : \"external\",\n  \"_id\" : \"AVWLfkcV0A40HdQsPZ72\",\n  \"_version\" : 1,\n  \"_shards\" : {\n    \"total\" : 2,\n    \"successful\" : 1,\n    \"failed\" : 0\n  },\n  \"created\" : true\n}\n\njeffs@jeff-desktop:~$ curl -i -XGET 'jeffsilverm.ddns.net:9200/customer/external/AVWLfkcV0A40HdQsPZ72?pretty'\nHTTP/1.1 200 OK\nContent-Type: application/json; charset=UTF-8\nContent-Length: 173\n\n{\n  \"_index\" : \"customer\",\n  \"_type\" : \"external\",\n  \"_id\" : \"AVWLfkcV0A40HdQsPZ72\",\n  \"_version\" : 1,\n  \"found\" : true,\n  \"_source\" : {\n    \"name\" : \"Jane Eerickson\"\n  }\n}jeffs@jeff-desktop:~$ curl -i -XGET 'jeffsilverm.ddns.net:9200/customer/external/AVWLn7k00A40HdQsPZ78?pretty'\nHTTP/1.1 200 OK\nContent-Type: application/json; charset=UTF-8\nContent-Length: 162\n\n{\n  \"_index\" : \"customer\",\n  \"_type\" : \"external\",\n  \"_id\" : \"AVWLn7k00A40HdQsPZ78\",\n  \"_version\" : 1,\n  \"found\" : true,\n  \"_source\" : {\n    \"name\" : \"Bob\"\n  }\n}\njeffs@jeff-desktop:~$ \njeffs@jeff-desktop:~$ \n```\n\nThe problem is that, according to  RFC 2616 section 10.2.2, (https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html) the Location header should be included in the 201 response:\n\n> 10.2.2 201 Created\n> \n> The request has been fulfilled and resulted in a new resource being created. The newly created resource can be referenced by the URI(s) returned in the entity of the response, with the most specific URI for the resource given by a **Location** header field. The response SHOULD include an entity containing a list of resource characteristics and location(s) from which the user or user agent can choose the one most appropriate. The entity format is specified by the media type given in the Content-Type header field. The origin server MUST create the resource before returning the 201 status code. If the action cannot be carried out immediately, the server SHOULD respond with 202 (Accepted) response instead.\n> \n> A 201 response MAY contain an ETag response header field indicating the current value of the entity tag for the requested variant just created, see section 14.19.\n\n**Steps to reproduce**:\n 1.`curl -i -XPOST 'jeffsilverm.ddns.net:9200/customer/external?pretty' -d ' {   \"name\": \"Bob\" }' | fgrep -i Location`\n returns nothing.\n 3.\n\n**Describe the feature**:\nThere should be a Location header.  In the example above, the URL 'jeffsilverm.ddns.net:9200/customer/external/AVWLn7k00A40HdQsPZ78?pretty' works flawlessly.\n\n```\njeffs@jeff-desktop:~$ curl -i -XGET 'jeffsilverm.ddns.net:9200/customer/external/AVWLn7k00A40HdQsPZ78?pretty'\nHTTP/1.1 200 OK\nContent-Type: application/json; charset=UTF-8\nContent-Length: 162\n\n{jeffs@jeff-desktop:~$ curl -i -XGET 'jeffsilverm.ddns.net:9200/customer/external/AVWLn7k00A40HdQsPZ78?pretty'\nHTTP/1.1 200 OK\nContent-Type: application/json; charset=UTF-8\nContent-Length: 162\n\n{\n  \"_index\" : \"customer\",\n  \"_type\" : \"external\",\n  \"_id\" : \"AVWLn7k00A40HdQsPZ78\",\n  \"_version\" : 1,\n  \"found\" : true,\n  \"_source\" : {\n    \"name\" : \"Bob\"\n  }\n}\njeffs@jeff-desktop:~$ \n  \"_index\" : \"customer\",\n  \"_type\" : \"external\",\n  \"_id\" : \"AVWLn7k00A40HdQsPZ78\",\n  \"_version\" : 1,\n  \"found\" : true,\n  \"_source\" : {\n    \"name\" : \"Bob\"\n  }\n}\njeffs@jeff-desktop:~$ \n```\n\nThe only problem is the missing Location field in the returned HTTP header when doing the POST.  Note that since the GET returns status code 200 (correctly), no Location header is required by RFC 2616.  The POST returns status code 201 (correctly), and that is where the Location header is required.\n\nThe work around is to parse the response and look for the _id field, which can be done using jq or the python json.loads method.  So I believe that this is a very low priority issue.\n","closed_by":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"performed_via_github_app":null}