[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/596563270","html_url":"https://github.com/elastic/elasticsearch/issues/53281#issuecomment-596563270","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53281","id":596563270,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NjU2MzI3MA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-03-09T14:24:21Z","updated_at":"2020-03-09T14:24:21Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed (:Distributed/Task Management)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/596574816","html_url":"https://github.com/elastic/elasticsearch/issues/53281#issuecomment-596574816","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53281","id":596574816,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NjU3NDgxNg==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2020-03-09T14:43:19Z","updated_at":"2020-03-09T14:43:19Z","author_association":"CONTRIBUTOR","body":"I don't understand the change you're proposing @hendrikmuhs. If `request.getNodes()` is empty then we operate on all nodes: for instance, `GET _tasks` returns tasks from all nodes. I don't think we should change that.\r\n\r\nCan you explain the context of this in a bit more detail?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/596587722","html_url":"https://github.com/elastic/elasticsearch/issues/53281#issuecomment-596587722","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53281","id":596587722,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NjU4NzcyMg==","user":{"login":"hendrikmuhs","id":7126422,"node_id":"MDQ6VXNlcjcxMjY0MjI=","avatar_url":"https://avatars3.githubusercontent.com/u/7126422?v=4","gravatar_id":"","url":"https://api.github.com/users/hendrikmuhs","html_url":"https://github.com/hendrikmuhs","followers_url":"https://api.github.com/users/hendrikmuhs/followers","following_url":"https://api.github.com/users/hendrikmuhs/following{/other_user}","gists_url":"https://api.github.com/users/hendrikmuhs/gists{/gist_id}","starred_url":"https://api.github.com/users/hendrikmuhs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hendrikmuhs/subscriptions","organizations_url":"https://api.github.com/users/hendrikmuhs/orgs","repos_url":"https://api.github.com/users/hendrikmuhs/repos","events_url":"https://api.github.com/users/hendrikmuhs/events{/privacy}","received_events_url":"https://api.github.com/users/hendrikmuhs/received_events","type":"User","site_admin":false},"created_at":"2020-03-09T15:06:15Z","updated_at":"2020-03-09T15:06:15Z","author_association":"CONTRIBUTOR","body":"> I don't understand the change you're proposing @hendrikmuhs. If `request.getNodes()` is empty then we operate on all nodes: for instance, `GET _tasks` returns tasks from all nodes. I don't think we should change that.\r\n> \r\n\r\nIf you are not setting the nodes, the default is used, the default is defined in `BaseTasksRequest` like this:\r\n\r\n```\r\nprivate String[] nodes = ALL_NODES;\r\n```\r\n\r\nBut if you set the nodes to an empty list - which means you explicitly override `ALL_NODES` -  in `BaseTasksRequest` this is not respected, because it calls a resolver that resolves the empty list back to `ALL_NODES`.\r\n\r\n**Context:** Tasks are used in transform, a transform can have a running task or not, depending on whether the transform is active or not. For `_transform/_stats`\r\ntransform collects the nodes where tasks are running to avoid unnecessary network calls. This list might be empty.\r\n\r\nNote, that I can fix the problem directly in the implementation of transform, however I think it would be cleaner to fix the API. Its counter-intuitive to say: do not call anyone and it does quite the opposite.\r\n\r\nThe same problem exists in the ML plugin.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/596600161","html_url":"https://github.com/elastic/elasticsearch/issues/53281#issuecomment-596600161","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53281","id":596600161,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NjYwMDE2MQ==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2020-03-09T15:28:35Z","updated_at":"2020-03-09T15:28:35Z","author_association":"CONTRIBUTOR","body":"Thanks for the clarification. In your case, I guess the whole resolution process is inappropriate since you already know exactly which nodes you want to query so you're looking for a way to provide a list of (potentially zero) node IDs? Using `resolveNodes()` in that situation seems a little risky for other reasons too: we don't distinguish node IDs from node names and hostnames in this API, and users could in theory set a node's name to the ID of a different node.\r\n\r\nI wonder if we should extend this behaviour to allow things to bypass the resolver and interpret the node IDs as IDs alone. That's roughly the direction that #50836 is taking, and I'm sure I've seen other such cases.\r\n\r\nFWIW `ALL_NODES` is defined as an empty list of node filters:\r\n\r\nhttps://github.com/elastic/elasticsearch/blob/30221d20ffeec90d904015e239852aceb663ebab/server/src/main/java/org/elasticsearch/action/support/tasks/BaseTasksRequest.java#L43\r\n\r\n(this could of course be changed, but there are BWC implications that make such a change nontrivial)\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/596614699","html_url":"https://github.com/elastic/elasticsearch/issues/53281#issuecomment-596614699","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53281","id":596614699,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NjYxNDY5OQ==","user":{"login":"hendrikmuhs","id":7126422,"node_id":"MDQ6VXNlcjcxMjY0MjI=","avatar_url":"https://avatars3.githubusercontent.com/u/7126422?v=4","gravatar_id":"","url":"https://api.github.com/users/hendrikmuhs","html_url":"https://github.com/hendrikmuhs","followers_url":"https://api.github.com/users/hendrikmuhs/followers","following_url":"https://api.github.com/users/hendrikmuhs/following{/other_user}","gists_url":"https://api.github.com/users/hendrikmuhs/gists{/gist_id}","starred_url":"https://api.github.com/users/hendrikmuhs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hendrikmuhs/subscriptions","organizations_url":"https://api.github.com/users/hendrikmuhs/orgs","repos_url":"https://api.github.com/users/hendrikmuhs/repos","events_url":"https://api.github.com/users/hendrikmuhs/events{/privacy}","received_events_url":"https://api.github.com/users/hendrikmuhs/received_events","type":"User","site_admin":false},"created_at":"2020-03-09T15:53:50Z","updated_at":"2020-03-09T15:53:50Z","author_association":"CONTRIBUTOR","body":"ok, thanks for the feedback. Changing the request object (from the transform code) is probably not clean either as it should be considered immutable.\r\n\r\nWill dig a bit deeper and propose something better if I find it. \r\n\r\nFWIW the original case was a cluster with nodes that had some plugins disabled (this is a problem on its own) and as nodes could not answer, the user got errors in the response although those nodes should not have been called in the 1st place.\r\n","performed_via_github_app":null}]