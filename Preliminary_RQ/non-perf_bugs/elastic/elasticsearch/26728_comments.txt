[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/331831212","html_url":"https://github.com/elastic/elasticsearch/issues/26728#issuecomment-331831212","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26728","id":331831212,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMTgzMTIxMg==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2017-09-25T09:45:09Z","updated_at":"2017-09-25T09:45:09Z","author_association":"MEMBER","body":"@tdoman I'm pretty sure this is because your terms aggregation works on the tags.raw field, which uses icu_normalizer and icu_folding token filters that change some Japanese signs.\r\n\r\nIn recent version of Elasticsearch, the ` tags.raw` field could be mapped to a `type: keyword` and no `normalizer` (normalizer are analyzer but for keyword typed fields) and you should get the behavior you're expecting.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/331945339","html_url":"https://github.com/elastic/elasticsearch/issues/26728#issuecomment-331945339","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26728","id":331945339,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMTk0NTMzOQ==","user":{"login":"tdoman","id":11098266,"node_id":"MDQ6VXNlcjExMDk4MjY2","avatar_url":"https://avatars1.githubusercontent.com/u/11098266?v=4","gravatar_id":"","url":"https://api.github.com/users/tdoman","html_url":"https://github.com/tdoman","followers_url":"https://api.github.com/users/tdoman/followers","following_url":"https://api.github.com/users/tdoman/following{/other_user}","gists_url":"https://api.github.com/users/tdoman/gists{/gist_id}","starred_url":"https://api.github.com/users/tdoman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tdoman/subscriptions","organizations_url":"https://api.github.com/users/tdoman/orgs","repos_url":"https://api.github.com/users/tdoman/repos","events_url":"https://api.github.com/users/tdoman/events{/privacy}","received_events_url":"https://api.github.com/users/tdoman/received_events","type":"User","site_admin":false},"created_at":"2017-09-25T16:59:00Z","updated_at":"2017-09-25T16:59:00Z","author_association":"NONE","body":"@tlrx Thanks, is there a way to emulate the \"keyword\" type in 1.7.x?  That's essentially what we were trying to do long before the \"keyword\" type was introduced.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/331948094","html_url":"https://github.com/elastic/elasticsearch/issues/26728#issuecomment-331948094","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26728","id":331948094,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMTk0ODA5NA==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2017-09-25T17:09:14Z","updated_at":"2017-09-25T17:09:14Z","author_association":"MEMBER","body":"In 1.7 there's the Keyword Analyzer (https://www.elastic.co/guide/en/elasticsearch/reference/1.7/analysis-keyword-analyzer.html). If you still need to filter some chars you can combine the keyword tokenizer (https://www.elastic.co/guide/en/elasticsearch/reference/1.7/analysis-keyword-tokenizer.html) with char_filter.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/332941147","html_url":"https://github.com/elastic/elasticsearch/issues/26728#issuecomment-332941147","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26728","id":332941147,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMjk0MTE0Nw==","user":{"login":"tdoman","id":11098266,"node_id":"MDQ6VXNlcjExMDk4MjY2","avatar_url":"https://avatars1.githubusercontent.com/u/11098266?v=4","gravatar_id":"","url":"https://api.github.com/users/tdoman","html_url":"https://github.com/tdoman","followers_url":"https://api.github.com/users/tdoman/followers","following_url":"https://api.github.com/users/tdoman/following{/other_user}","gists_url":"https://api.github.com/users/tdoman/gists{/gist_id}","starred_url":"https://api.github.com/users/tdoman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tdoman/subscriptions","organizations_url":"https://api.github.com/users/tdoman/orgs","repos_url":"https://api.github.com/users/tdoman/repos","events_url":"https://api.github.com/users/tdoman/events{/privacy}","received_events_url":"https://api.github.com/users/tdoman/received_events","type":"User","site_admin":false},"created_at":"2017-09-28T19:34:17Z","updated_at":"2017-09-28T19:34:17Z","author_association":"NONE","body":"@tlrx So the problem w/ the Keyword Analyzer is that I need case insensitivity.  Upon further review, I've discovered that the \"icu_normalizer\" we're using achieves exactly what we need with regard to case but that the \"icu_folding\" filter is what impacts the Japanese characters.  I'm running tests now but it looks like simply removing the \"icu_folding\" filter from the custom `tag_analyzer` will accomplish the desired result and will be required for us as we move forward to any version of ES.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/333083641","html_url":"https://github.com/elastic/elasticsearch/issues/26728#issuecomment-333083641","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26728","id":333083641,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMzA4MzY0MQ==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2017-09-29T09:50:23Z","updated_at":"2017-09-29T09:50:23Z","author_association":"MEMBER","body":"> but that the \"icu_folding\" filter is what impacts the Japanese characters.\r\n\r\nYes, that's what I suspected, maybe I should have suggested to remove this one first. ICU or Ascii folding converts some chars to their \"simplified\" version. In Latin languages, \"Ã¤\" is changed to \"a\" for example.\r\n\r\nNote that starting from 5.6, it's possible to use normalizers with `keyword` analyzers. They can be used to lowercase tokens (see https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-normalizers.html)\r\n","performed_via_github_app":null}]