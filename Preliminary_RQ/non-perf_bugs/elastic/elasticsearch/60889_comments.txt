[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/671353781","html_url":"https://github.com/elastic/elasticsearch/issues/60889#issuecomment-671353781","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60889","id":671353781,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTM1Mzc4MQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-08-10T13:27:48Z","updated_at":"2020-08-10T13:27:48Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-features (:Core/Features/Indices APIs)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/672848364","html_url":"https://github.com/elastic/elasticsearch/issues/60889#issuecomment-672848364","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60889","id":672848364,"node_id":"MDEyOklzc3VlQ29tbWVudDY3Mjg0ODM2NA==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2020-08-12T12:44:43Z","updated_at":"2020-08-12T12:44:43Z","author_association":"MEMBER","body":"@skombijohn Looks like this error occurs in the hlrc library in your application, right?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/672967896","html_url":"https://github.com/elastic/elasticsearch/issues/60889#issuecomment-672967896","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60889","id":672967896,"node_id":"MDEyOklzc3VlQ29tbWVudDY3Mjk2Nzg5Ng==","user":{"login":"skombijohn","id":4631128,"node_id":"MDQ6VXNlcjQ2MzExMjg=","avatar_url":"https://avatars3.githubusercontent.com/u/4631128?v=4","gravatar_id":"","url":"https://api.github.com/users/skombijohn","html_url":"https://github.com/skombijohn","followers_url":"https://api.github.com/users/skombijohn/followers","following_url":"https://api.github.com/users/skombijohn/following{/other_user}","gists_url":"https://api.github.com/users/skombijohn/gists{/gist_id}","starred_url":"https://api.github.com/users/skombijohn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/skombijohn/subscriptions","organizations_url":"https://api.github.com/users/skombijohn/orgs","repos_url":"https://api.github.com/users/skombijohn/repos","events_url":"https://api.github.com/users/skombijohn/events{/privacy}","received_events_url":"https://api.github.com/users/skombijohn/received_events","type":"User","site_admin":false},"created_at":"2020-08-12T16:08:34Z","updated_at":"2020-08-12T16:08:34Z","author_association":"NONE","body":"@martijnvg \r\nYes! Sorry, forgot to mention that.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/673412206","html_url":"https://github.com/elastic/elasticsearch/issues/60889#issuecomment-673412206","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60889","id":673412206,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MzQxMjIwNg==","user":{"login":"andreidan","id":1217601,"node_id":"MDQ6VXNlcjEyMTc2MDE=","avatar_url":"https://avatars2.githubusercontent.com/u/1217601?v=4","gravatar_id":"","url":"https://api.github.com/users/andreidan","html_url":"https://github.com/andreidan","followers_url":"https://api.github.com/users/andreidan/followers","following_url":"https://api.github.com/users/andreidan/following{/other_user}","gists_url":"https://api.github.com/users/andreidan/gists{/gist_id}","starred_url":"https://api.github.com/users/andreidan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andreidan/subscriptions","organizations_url":"https://api.github.com/users/andreidan/orgs","repos_url":"https://api.github.com/users/andreidan/repos","events_url":"https://api.github.com/users/andreidan/events{/privacy}","received_events_url":"https://api.github.com/users/andreidan/received_events","type":"User","site_admin":false},"created_at":"2020-08-13T11:03:55Z","updated_at":"2020-08-13T11:04:09Z","author_association":"CONTRIBUTOR","body":"I wasn't able to reproduce this (here's the test I used https://gist.github.com/andreidan/cb71c1d1bad04d34242fd2497de8c577 )\r\n\r\nEqually we use this regex to extract the warning message: \r\n```\r\n299 Elasticsearch-\\d+\\.\\d+\\.\\d+(?:-(?:alpha|beta|rc)\\d+)?(?:-SNAPSHOT)?-(?:[a-f0-9]{7}(?:[a-f0-9]{33})?|unknown) \"((?:\t| |!|[\\x23-\\x5B]|[\\x5D-\\x7E]|[\\x80-\\xFF]|\\\\|\\\\\")*)\"( \"(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} GMT\")?\r\n```\r\nand it correctly extracts the warning message from the one you got: \r\n```\r\n299 Elasticsearch-7.8.0-757314695644ea9a1dc2fecd26d1a43856725e65 \"legacy template [default] has index patterns [*] matching patterns from existing composable templates [templateA, templateB, ...] with patterns (templateA=> [templateA*],templateB=> [templateB*],... => [...*],...); this template [default] may be ignored in favor of a composable template at index creation time\"\r\n```\r\n\r\n@skombijohn are there more steps you're executing in `RemoveLegacyTemplatesIT` to reproduce this? is this something that you can reproduce consistently? ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/673418344","html_url":"https://github.com/elastic/elasticsearch/issues/60889#issuecomment-673418344","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60889","id":673418344,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MzQxODM0NA==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2020-08-13T11:18:51Z","updated_at":"2020-08-13T11:18:51Z","author_association":"MEMBER","body":"@skombijohn Would also be helpful if you share the jvm arguments used by your application (for example by running `jps -lvm` when running your app).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/674718191","html_url":"https://github.com/elastic/elasticsearch/issues/60889#issuecomment-674718191","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60889","id":674718191,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NDcxODE5MQ==","user":{"login":"skombijohn","id":4631128,"node_id":"MDQ6VXNlcjQ2MzExMjg=","avatar_url":"https://avatars3.githubusercontent.com/u/4631128?v=4","gravatar_id":"","url":"https://api.github.com/users/skombijohn","html_url":"https://github.com/skombijohn","followers_url":"https://api.github.com/users/skombijohn/followers","following_url":"https://api.github.com/users/skombijohn/following{/other_user}","gists_url":"https://api.github.com/users/skombijohn/gists{/gist_id}","starred_url":"https://api.github.com/users/skombijohn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/skombijohn/subscriptions","organizations_url":"https://api.github.com/users/skombijohn/orgs","repos_url":"https://api.github.com/users/skombijohn/repos","events_url":"https://api.github.com/users/skombijohn/events{/privacy}","received_events_url":"https://api.github.com/users/skombijohn/received_events","type":"User","site_admin":false},"created_at":"2020-08-17T07:41:44Z","updated_at":"2020-08-17T07:41:44Z","author_association":"NONE","body":"@martijnvg \r\nHi,\r\ni kind of obfuscated the actual message to remove \"company internal\" stuff from it, but probably it does influence the outcome. Here is the actual message:\r\n\r\n`299 Elasticsearch-7.8.0-757314695644ea9a1dc2fecd26d1a43856725e65 \"legacy template [default] has index patterns [*] matching patterns from existing composable templates [peerstate,systemevents,configuration,processresults,meterreplacements,telegramprocessingtasks,tours,analyses,notificationevents,analysisdata,datapackages,pluginregistry,tourevents,rawdata,geolayers,tasks,processlog,sessions,processes,devices,peercontacts,jobs,datareductionsettings,groups,zones,users,tempfiles,additionalinfo,extensions,nodes,dictionary,virtualmeters,usergroups,meteringdatasources,analysistemplates,timeline,notifications,contacts] with patterns (peerstate => [peerstate*],systemevents => [systemevents*],configuration => [configuration*],processresults => [processresults*],meterreplacements => [meterreplacements*],telegramprocessingtasks => [telegramprocessingtasks*],tours => [tours*],analyses => [analyses*],notificationevents => [notificationevents*],analysisdata => [analysisdata*],datapackages => [datapackages*],pluginregistry => [pluginregistry*],tourevents => [tourevents*],rawdata => [rawdata*],geolayers => [geolayers*],tasks => [tasks*],processlog => [processlog*],sessions => [sessions*],processes => [processes*],devices => [devices*],peercontacts => [peercontacts*],jobs => [jobs*],datareductionsettings => [datareductionsettings*],groups => [groups*],zones => [zones*],users => [users*],tempfiles => [tempfile*],additionalinfo => [additionalinfo*],extensions => [extensions*],nodes => [nodes*],dictionary => [dictionary*],virtualmeters => [virtualmeters*],usergroups => [usergroups*],meteringdatasources => [meteringdatasources*],analysistemplates => [analysistemplates*],timeline => [timeline*],notifications => [notifications*],contacts => [contacts*]); this template [default] may be ignored in favor of a composable template at index creation time\"`\r\n\r\n\r\nSo, with that minimal example, I can reproduce the stackoverflow:\r\n\r\n```\r\npublic static void main(String[] args){\r\n        Pattern pattern = Pattern.compile(\"299 Elasticsearch-\\\\d+\\\\.\\\\d+\\\\.\\\\d+(?:-(?:alpha|beta|rc)\\\\d+)?(?:-SNAPSHOT)?-(?:[a-f0-9]{7}(?:[a-f0-9]{33})?|unknown) \\\"((?:\\t| |!|[\\\\x23-\\\\x5B]|[\\\\x5D-\\\\x7E]|[\\\\x80-\\\\xFF]|\\\\\\\\|\\\\\\\\\\\")*)\\\"( \\\"(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\\\d{2} (?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\\\d{4} \\\\d{2}:\\\\d{2}:\\\\d{2} GMT\\\")?\");\r\n        String s = \"299 Elasticsearch-7.8.0-757314695644ea9a1dc2fecd26d1a43856725e65 \\\"legacy template [default] has index patterns [*] matching patterns from existing composable templates [peerstate,systemevents,configuration,processresults,meterreplacements,telegramprocessingtasks,tours,analyses,notificationevents,analysisdata,datapackages,pluginregistry,tourevents,rawdata,geolayers,tasks,processlog,sessions,processes,devices,peercontacts,jobs,datareductionsettings,groups,zones,users,tempfiles,additionalinfo,extensions,nodes,dictionary,virtualmeters,usergroups,meteringdatasources,analysistemplates,timeline,notifications,contacts] with patterns (peerstate => [peerstate*],systemevents => [systemevents*],configuration => [configuration*],processresults => [processresults*],meterreplacements => [meterreplacements*],telegramprocessingtasks => [telegramprocessingtasks*],tours => [tours*],analyses => [analyses*],notificationevents => [notificationevents*],analysisdata => [analysisdata*],datapackages => [datapackages*],pluginregistry => [pluginregistry*],tourevents => [tourevents*],rawdata => [rawdata*],geolayers => [geolayers*],tasks => [tasks*],processlog => [processlog*],sessions => [sessions*],processes => [processes*],devices => [devices*],peercontacts => [peercontacts*],jobs => [jobs*],datareductionsettings => [datareductionsettings*],groups => [groups*],zones => [zones*],users => [users*],tempfiles => [tempfile*],additionalinfo => [additionalinfo*],extensions => [extensions*],nodes => [nodes*],dictionary => [dictionary*],virtualmeters => [virtualmeters*],usergroups => [usergroups*],meteringdatasources => [meteringdatasources*],analysistemplates => [analysistemplates*],timeline => [timeline*],notifications => [notifications*],contacts => [contacts*]); this template [default] may be ignored in favor of a composable template at index creation time\\\"\";\r\n        Matcher matcher = pattern.matcher(s);\r\n        boolean matches = matcher.matches();\r\n        // stackoverflow \r\n        System.out.println(matches);\r\n    }\r\n```\r\n\r\n\r\n\r\n\r\n\r\nHowever, the setup for LegacyTemplateRemovalIT is quite big. In general here are some short steps:\r\n- An actual forked elasticsearch 7.8 process is started (as a basic IT setup)\r\n- The basic IT setup will utilize an actual HighLevelRestClient, to setup the cluster as the actual application will setup the cluster\r\n- This means create index templates (now composable templates), some initial data insertion etc.\r\n- The LegacyTemplateRemovalIT then will insert some legacy templates, as the IT will assert the application's logic to now remove the legacy stuff. \r\n- The above mentioned \"default\" template will cause the stackoverflow while the response is parsed.\r\n\r\nI extracted the minimal example. I guess the RegExp is prone to \"ReDoS\" as it is relying on loads of grouping.\r\n\r\nFor reference see here:\r\nhttps://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/674868013","html_url":"https://github.com/elastic/elasticsearch/issues/60889#issuecomment-674868013","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60889","id":674868013,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NDg2ODAxMw==","user":{"login":"andreidan","id":1217601,"node_id":"MDQ6VXNlcjEyMTc2MDE=","avatar_url":"https://avatars2.githubusercontent.com/u/1217601?v=4","gravatar_id":"","url":"https://api.github.com/users/andreidan","html_url":"https://github.com/andreidan","followers_url":"https://api.github.com/users/andreidan/followers","following_url":"https://api.github.com/users/andreidan/following{/other_user}","gists_url":"https://api.github.com/users/andreidan/gists{/gist_id}","starred_url":"https://api.github.com/users/andreidan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andreidan/subscriptions","organizations_url":"https://api.github.com/users/andreidan/orgs","repos_url":"https://api.github.com/users/andreidan/repos","events_url":"https://api.github.com/users/andreidan/events{/privacy}","received_events_url":"https://api.github.com/users/andreidan/received_events","type":"User","site_admin":false},"created_at":"2020-08-17T13:03:16Z","updated_at":"2020-08-17T13:03:16Z","author_association":"CONTRIBUTOR","body":"@skombijohn Thanks for giving us more details. I'm now able to reproduce this.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/677582121","html_url":"https://github.com/elastic/elasticsearch/issues/60889#issuecomment-677582121","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60889","id":677582121,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NzU4MjEyMQ==","user":{"login":"andreidan","id":1217601,"node_id":"MDQ6VXNlcjEyMTc2MDE=","avatar_url":"https://avatars2.githubusercontent.com/u/1217601?v=4","gravatar_id":"","url":"https://api.github.com/users/andreidan","html_url":"https://github.com/andreidan","followers_url":"https://api.github.com/users/andreidan/followers","following_url":"https://api.github.com/users/andreidan/following{/other_user}","gists_url":"https://api.github.com/users/andreidan/gists{/gist_id}","starred_url":"https://api.github.com/users/andreidan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andreidan/subscriptions","organizations_url":"https://api.github.com/users/andreidan/orgs","repos_url":"https://api.github.com/users/andreidan/repos","events_url":"https://api.github.com/users/andreidan/events{/privacy}","received_events_url":"https://api.github.com/users/andreidan/received_events","type":"User","site_admin":false},"created_at":"2020-08-20T11:45:39Z","updated_at":"2020-08-20T11:45:39Z","author_association":"CONTRIBUTOR","body":"Reopening as #61259 didn't fix it.","performed_via_github_app":null}]