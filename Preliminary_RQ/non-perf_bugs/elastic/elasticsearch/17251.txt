{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/17251","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17251/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17251/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17251/events","html_url":"https://github.com/elastic/elasticsearch/issues/17251","id":142736736,"node_id":"MDU6SXNzdWUxNDI3MzY3MzY=","number":17251,"title":"Feature request: ability to tell which \"should\" clauses in a bool query matched","user":{"login":"simonw","id":9599,"node_id":"MDQ6VXNlcjk1OTk=","avatar_url":"https://avatars0.githubusercontent.com/u/9599?v=4","gravatar_id":"","url":"https://api.github.com/users/simonw","html_url":"https://github.com/simonw","followers_url":"https://api.github.com/users/simonw/followers","following_url":"https://api.github.com/users/simonw/following{/other_user}","gists_url":"https://api.github.com/users/simonw/gists{/gist_id}","starred_url":"https://api.github.com/users/simonw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonw/subscriptions","organizations_url":"https://api.github.com/users/simonw/orgs","repos_url":"https://api.github.com/users/simonw/repos","events_url":"https://api.github.com/users/simonw/events{/privacy}","received_events_url":"https://api.github.com/users/simonw/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-03-22T18:20:59Z","updated_at":"2016-03-23T14:57:18Z","closed_at":"2016-03-22T18:57:29Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the feature**:\n\nWhen building complex bool queries, it can be important to know which ones of the \"should\" clauses in the query caused a match.\n\nExample use-case: building a simple recommendation feature, which recommends documents to users based on different criteria e.g. \"matches a tag you are subscribed to\" or \"one of your friends has saved this document\" or \"similar to documents you have saved in the past\" or \"geolocation in the document matches your polygon-saved-search\".\n\nThis feature can be constructed using a bool query, with each of the criteria provided as a separate should clause. This allows efficient retrieval and pagination. There's just one catch: if we want to tell the user \"returned this document because your friend saved it and it's in your polygon-saved-search\" we need to do a bunch of additional processing outside of Elasticsearch to figure out which of the clauses matched.\n\nAs far as I can tell, there is no way to get Elasticsearch to indicate which of the terms in a bool query matched the returned documents. This would be an extremely useful additional feature.\n\nHere's one suggestion for how the syntax might work:\n\n```\n{\n    \"bool\": {\n        \"must\": {\n            \"term\": {\n                \"user\": \"kimchy\"\n            }\n        },\n        \"should\": [\n            {\n                \"term\": {\n                    \"tag\": \"wow\"\n                },\n                \"label\": \"wow\"\n            },\n            {\n                \"term\": {\n                    \"tag\": \"elasticsearch\"\n                },\n                \"label\": \"elasticsearch\"\n            },\n            {\n                \"range\": {\n                    \"age\": {\n                        \"from\": 10,\n                        \"to\": 20\n                    }\n                },\n                \"label\": \"agerange\"\n            }\n        ],\n        \"minimum_should_match\": 1,\n    }\n}\n```\n\nThen the hits returned could look something like this:\n\n```\n{\n    \"hits\": [\n        {\n            \"_index\": \"my-index\",\n            \"_type\": \"doc\",\n            \"_id\": \"9314\",\n            \"_score\": null,\n            \"_matched_labels\": [\"agerange\", \"wow\"]\n        }\n    ]\n}\n```\n","closed_by":{"login":"simonw","id":9599,"node_id":"MDQ6VXNlcjk1OTk=","avatar_url":"https://avatars0.githubusercontent.com/u/9599?v=4","gravatar_id":"","url":"https://api.github.com/users/simonw","html_url":"https://github.com/simonw","followers_url":"https://api.github.com/users/simonw/followers","following_url":"https://api.github.com/users/simonw/following{/other_user}","gists_url":"https://api.github.com/users/simonw/gists{/gist_id}","starred_url":"https://api.github.com/users/simonw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonw/subscriptions","organizations_url":"https://api.github.com/users/simonw/orgs","repos_url":"https://api.github.com/users/simonw/repos","events_url":"https://api.github.com/users/simonw/events{/privacy}","received_events_url":"https://api.github.com/users/simonw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}