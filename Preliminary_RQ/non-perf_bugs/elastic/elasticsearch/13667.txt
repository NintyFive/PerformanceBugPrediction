{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/13667","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13667/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13667/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13667/events","html_url":"https://github.com/elastic/elasticsearch/issues/13667","id":107409708,"node_id":"MDU6SXNzdWUxMDc0MDk3MDg=","number":13667,"title":"Forced awareness fails to balance shards","user":{"login":"klahnakoski","id":2334429,"node_id":"MDQ6VXNlcjIzMzQ0Mjk=","avatar_url":"https://avatars3.githubusercontent.com/u/2334429?v=4","gravatar_id":"","url":"https://api.github.com/users/klahnakoski","html_url":"https://github.com/klahnakoski","followers_url":"https://api.github.com/users/klahnakoski/followers","following_url":"https://api.github.com/users/klahnakoski/following{/other_user}","gists_url":"https://api.github.com/users/klahnakoski/gists{/gist_id}","starred_url":"https://api.github.com/users/klahnakoski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/klahnakoski/subscriptions","organizations_url":"https://api.github.com/users/klahnakoski/orgs","repos_url":"https://api.github.com/users/klahnakoski/repos","events_url":"https://api.github.com/users/klahnakoski/events{/privacy}","received_events_url":"https://api.github.com/users/klahnakoski/received_events","type":"User","site_admin":false},"labels":[{"id":837246479,"node_id":"MDU6TGFiZWw4MzcyNDY0Nzk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Allocation","name":":Distributed/Allocation","color":"0e8a16","default":false,"description":"All issues relating to the decision making around placing a shard (both master logic & on the nodes)"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2015-09-20T18:35:57Z","updated_at":"2018-03-20T09:59:08Z","closed_at":"2018-03-20T09:59:08Z","author_association":"NONE","active_lock_reason":null,"body":"I have installed ES 1.7.1 on all nodes.  I have three zones:\n- A single node in `primary` zone\n- A single node in `secondary` zone\n- Four nodes in `spot` zone\n\nIndexes with `\"number_of_replicas\": 2` will not place one shard per zone, rather place a couple of replicas (?even primary?) in the `spot` zone.   The spot zone is very unstable, but very cheap, and since a quorum of the replicas can end up in the spot zone, the cluster is mostly unusable.\n\nHere is the config for the primary node:\n\n```\ncluster.name: active-data\nnode.zone: primary\nnode.name: primary\nnode.master: false\nnode.data: true\n\ncluster.routing.allocation.awareness.force.zone.values: primary,secondary,spot\ncluster.routing.allocation.awareness.attributes: zone\n```\n\nHere is a sample of my config file for the secondary node:\n\n```\ncluster.name: active-data\nnode.zone: secondary    \nnode.name: secondary\nnode.master: false\nnode.data: true\n\ncluster.routing.allocation.awareness.force.zone.values: primary,secondary,spot\ncluster.routing.allocation.awareness.attributes: zone\n```\n\n..and here are the configs for nodes in the spot zone:\n\n```\nnode.zone: spot\nnode.name: spot_{{id}}\nnode.master: false\nnode.data: true\n\ncluster.name: active-data\ncluster.routing.allocation.awareness.force.zone.values: primary,secondary,spot\ncluster.routing.allocation.awareness.attributes: zone\n```\n\n`{{id}}` is replaced with a unique hex UID for each node.\n\nThere is one more node, in the `spot` zone, which is master (but has no shards):\n\n```\ncluster.name: active-data\nnode.zone: spot\nnode.name: coordinator\nnode.master: true\nnode.data: false\n\ncluster.routing.allocation.awareness.force.zone.values: primary,secondary,spot\ncluster.routing.allocation.awareness.attributes: zone\n```\n\nWhen I have two zones (`primary` and `spot`), with one replica, the cluster is stable; the primary zone always has a copy of every shard, and loss of spot nodes does not cause loss of quorum.\n","closed_by":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"performed_via_github_app":null}