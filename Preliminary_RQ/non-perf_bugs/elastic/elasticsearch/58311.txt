{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/58311","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/58311/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/58311/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/58311/events","html_url":"https://github.com/elastic/elasticsearch/issues/58311","id":641038409,"node_id":"MDU6SXNzdWU2NDEwMzg0MDk=","number":58311,"title":"Unable to get progress in _async_search forever","user":{"login":"easyice","id":23521001,"node_id":"MDQ6VXNlcjIzNTIxMDAx","avatar_url":"https://avatars2.githubusercontent.com/u/23521001?v=4","gravatar_id":"","url":"https://api.github.com/users/easyice","html_url":"https://github.com/easyice","followers_url":"https://api.github.com/users/easyice/followers","following_url":"https://api.github.com/users/easyice/following{/other_user}","gists_url":"https://api.github.com/users/easyice/gists{/gist_id}","starred_url":"https://api.github.com/users/easyice/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/easyice/subscriptions","organizations_url":"https://api.github.com/users/easyice/orgs","repos_url":"https://api.github.com/users/easyice/repos","events_url":"https://api.github.com/users/easyice/events{/privacy}","received_events_url":"https://api.github.com/users/easyice/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":1967498216,"node_id":"MDU6TGFiZWwxOTY3NDk4MjE2","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Search","name":"Team:Search","color":"fef2c0","default":false,"description":"Meta label for search team"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-06-18T09:04:03Z","updated_at":"2020-06-18T15:58:24Z","closed_at":"2020-06-18T15:58:24Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\nGitHub is reserved for bug reports and feature requests; it is not the place\r\nfor general questions. If you have a question or an unconfirmed bug , please\r\nvisit the [forums](https://discuss.elastic.co/c/elasticsearch).  Please also\r\ncheck your OS is [supported](https://www.elastic.co/support/matrix#show_os).\r\nIf it is not, the issue is likely to be closed.\r\n\r\nFor security vulnerabilities please only send reports to security@elastic.co.\r\nSee https://www.elastic.co/community/security for more information.\r\n\r\nPlease fill in the following details to help us reproduce the bug:\r\n-->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):7.7.0\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`):1.8\r\n\r\n**OS version** (`uname -a` if on a Unix-like system):centos7.2\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nThe environment：\r\n1.two nodes in the cluster:node1,node2\r\n2.only single shard,sales[0] on node1\r\n\r\n**Steps to reproduce**:\r\n\r\n1. submit a _async_search on node1,the request need  took A long time，10 second for instance.\r\n2. when the  async search is running,move shard sales[0] to node2\r\n3. after the async search is done, get the result: GET /_async_search/{id}\r\n\r\nthe get progress request will return error forever like this:\r\n```\r\n\"is_partial\" : true,\r\n\"is_running\" : true,\r\n\"failures\" : [\r\n        {\r\n          \"shard\" : 0,\r\n          \"index\" : \"sales\",\r\n          \"node\" : \"xh5OKPitTMiArexFDzhT-w\",\r\n          \"reason\" : {\r\n            \"type\" : \"index_not_found_exception\",\r\n            \"reason\" : \"no such index [sales]\",\r\n            \"index_uuid\" : \"Fx1mX5_pS6WwpWerjFPNPw\",\r\n            \"index\" : \"sales\"\r\n          }\r\n        }\r\n      ]\r\n```\r\n**Provide logs (if relevant)**:\r\n\r\n[2020-06-18T16:52:49,138][ERROR][o.e.t.TransportService   ] [node-idea] failed to handle exception for action [indices:data/read/search[phase/query]], handler [org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler/org.elasticsearch.action.search.SearchTransportService$ConnectionCountingHandler@2c182b7e/org.elasticsearch.action.search.SearchExecutionStatsCollector@783b1305]\r\n**java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0**\r\n\tat org.elasticsearch.xpack.search.MutableSearchResponse.updateWithFailure(MutableSearchResponse.java:135) ~[?:?]\r\n\tat org.elasticsearch.xpack.search.AsyncSearchTask$Listener.onFailure(AsyncSearchTask.java:398) ~[?:?]\r\n\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.raisePhaseFailure(AbstractSearchAsyncAction.java:571) ~[classes/:?]\r\n\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseFailure(AbstractSearchAsyncAction.java:551) ~[classes/:?]\r\n\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.executeNextPhase(AbstractSearchAsyncAction.java:309) ~[classes/:?]\r\n\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseDone(AbstractSearchAsyncAction.java:580) ~[classes/:?]\r\n\tat \r\n**Code Bug**:\r\n\r\nin: org.elasticsearch.action.search.SearchPhaseExecutionException#guessRootCauses\r\nthe shardFailures array size is 0,so ,guessRootCauses funcation will return  ElasticsearchException array with size 0 \r\n\r\nbut,org.elasticsearch.xpack.search.MutableSearchResponse#updateWithFailure funcation will use the index 0 of the array:\r\n````\r\nthis.failure = ElasticsearchException.guessRootCauses(exc)[0];\r\n````\r\nan exception happed on updateWithFailure() ，then,the executeCompletionListeners() funcation will not be call,then will not unregister from the taskManager\r\n\r\n````\r\n public void onFailure(Exception exc) {\r\n            if (searchResponse.get() == null) {\r\n                // if the failure occurred before calling onListShards\r\n                searchResponse.compareAndSet(null,\r\n                    new MutableSearchResponse(-1, -1, null,\r\n                        aggReduceContextSupplier, threadPool.getThreadContext()));\r\n            }\r\n            searchResponse.get().updateWithFailure(exc);\r\n            executeInitListeners();\r\n            executeCompletionListeners();\r\n        }\r\n````\r\nwhen get asyc search progress，it still found the task in the taskmanager,and return the error response.\r\n\r\nCan this just add a judgment when guessRootCauses return size 0?\r\n","closed_by":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}