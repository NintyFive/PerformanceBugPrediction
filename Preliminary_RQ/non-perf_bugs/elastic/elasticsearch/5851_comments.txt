[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/40717479","html_url":"https://github.com/elastic/elasticsearch/issues/5851#issuecomment-40717479","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5851","id":40717479,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzE3NDc5","user":{"login":"synhershko","id":212252,"node_id":"MDQ6VXNlcjIxMjI1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/212252?v=4","gravatar_id":"","url":"https://api.github.com/users/synhershko","html_url":"https://github.com/synhershko","followers_url":"https://api.github.com/users/synhershko/followers","following_url":"https://api.github.com/users/synhershko/following{/other_user}","gists_url":"https://api.github.com/users/synhershko/gists{/gist_id}","starred_url":"https://api.github.com/users/synhershko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/synhershko/subscriptions","organizations_url":"https://api.github.com/users/synhershko/orgs","repos_url":"https://api.github.com/users/synhershko/repos","events_url":"https://api.github.com/users/synhershko/events{/privacy}","received_events_url":"https://api.github.com/users/synhershko/received_events","type":"User","site_admin":false},"created_at":"2014-04-17T14:07:23Z","updated_at":"2014-04-17T14:07:23Z","author_association":"CONTRIBUTOR","body":"I actually wasn't aware this was happening too, and this change is important in order to preserve relevance quality.\n\nIn that respect, I don't think losing field-data sharing is a disadvantage. Just like it would lead to more memory usage when the 2 are split, it could lead to less memory usage if once they are split only one is being used for sorting / faceting.\n\nAlso does this mean aggregations were broken in such scenarios?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/40722841","html_url":"https://github.com/elastic/elasticsearch/issues/5851#issuecomment-40722841","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5851","id":40722841,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzIyODQx","user":{"login":"benjismith","id":458075,"node_id":"MDQ6VXNlcjQ1ODA3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/458075?v=4","gravatar_id":"","url":"https://api.github.com/users/benjismith","html_url":"https://github.com/benjismith","followers_url":"https://api.github.com/users/benjismith/followers","following_url":"https://api.github.com/users/benjismith/following{/other_user}","gists_url":"https://api.github.com/users/benjismith/gists{/gist_id}","starred_url":"https://api.github.com/users/benjismith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benjismith/subscriptions","organizations_url":"https://api.github.com/users/benjismith/orgs","repos_url":"https://api.github.com/users/benjismith/repos","events_url":"https://api.github.com/users/benjismith/events{/privacy}","received_events_url":"https://api.github.com/users/benjismith/received_events","type":"User","site_admin":false},"created_at":"2014-04-17T14:53:53Z","updated_at":"2014-04-17T14:57:17Z","author_association":"NONE","body":"Thanks for creating this issue, @clintongormley!\n\nI'd like to just point out the particular problems this behavior has caused us...\n\nWe're not using Elasticsearch as a canonical datastore, but rather as a search engine for data that's canonically stored in a SQL or NoSQL database, so our ES mappings are usually just mechanical translations of our other database schemas. Likewise, our indexing pipeline uses mechanical transformers to denormalize our SQL records into JSON documents for Elasticsearch.\n\nAs part of that process, our ES mappings often look something like this (with all the irrelevant fields omitted for brevity):\n\n``` json\n{\n  \"user\" : {\n    \"_id\" : { \"type\" : \"string\", \"path\" : \"id\" },\n    \"properties\" : {\n      \"id\" : { \"type\" : \"string\", \"index\" : \"not_analyzed\" },\n      \"address\" : { \"type\" : \"nested\", \"properties\" : {\n        \"id\" : { \"type\" : \"integer\" }\n      }}\n    }\n  }\n}\n```\n\n...where there are multiple different ID fields, some of which are integers or longs, and others are strings.\n\nOn the query side, we **always** refer to these with fully qualified field names (in this case, \"id\" and \"address.id\"), so it can be disorienting when our queries or facets against an \"id\" end up matching against an \"address.id\".\n\nMore importantly, though, we've experienced lots of hair-pulling trying to debug shard failures at query-time, caused by requests that sort hits by ID:\n\n```\njava.lang.NumberFormatException:\nInvalid shift value (64) in prefixCoded bytes (is encoded value really an INT?)]\n```\n\nI probably spent 30 hours investigating that bug and implementing workarounds, eventually asking this question on the mailing list a few months ago at the height of my frustration:\n\n[NumberFormatException when sorting by numeric document ID](https://groups.google.com/forum/#!msg/elasticsearch/74URnf4q69Y/)\n\nNow that we understand the bug, we've implemented workarounds by mandating that all our **other** SQL and NoSQL schemas conform to the rule: no two fields (in any column of any table) may have the same name if they have different low-level types. That way, if we use mechanical tools to generate ES mappings from SQL schemas, the automatically-generated field names will be conflict-free. But it makes our schemas a lot more awkward than they ought to be.\n\nThis is a big big deal for us, and it's the only issue blocking us from adopting Elasticsearch as a canonical datastore.\n\nAnyhow, thanks again for opening this issue. I really appreciate it!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/45282923","html_url":"https://github.com/elastic/elasticsearch/issues/5851#issuecomment-45282923","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5851","id":45282923,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjgyOTIz","user":{"login":"benjismith","id":458075,"node_id":"MDQ6VXNlcjQ1ODA3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/458075?v=4","gravatar_id":"","url":"https://api.github.com/users/benjismith","html_url":"https://github.com/benjismith","followers_url":"https://api.github.com/users/benjismith/followers","following_url":"https://api.github.com/users/benjismith/following{/other_user}","gists_url":"https://api.github.com/users/benjismith/gists{/gist_id}","starred_url":"https://api.github.com/users/benjismith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benjismith/subscriptions","organizations_url":"https://api.github.com/users/benjismith/orgs","repos_url":"https://api.github.com/users/benjismith/repos","events_url":"https://api.github.com/users/benjismith/events{/privacy}","received_events_url":"https://api.github.com/users/benjismith/received_events","type":"User","site_admin":false},"created_at":"2014-06-05T22:24:01Z","updated_at":"2014-06-05T22:24:19Z","author_association":"NONE","body":"@clintongormley It's been a few months since this issue was created, and I wanted to check back in to see if you or any of the other core members could chime in. This continues to be a big issue for us (and, I'd venture to say, for anyone else using Elasticsearch like a database).\n\nWhenever I discuss Elasticsearch with other engineers, this is always their #2 concern (second only to consistency guarantees).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/45291203","html_url":"https://github.com/elastic/elasticsearch/issues/5851#issuecomment-45291203","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5851","id":45291203,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjkxMjAz","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-06-06T00:25:09Z","updated_at":"2014-06-06T00:25:09Z","author_association":"CONTRIBUTOR","body":"> different mappings would not clash\n\nI think this is a very important point. There are several bugs that we have that are due to the fact that different mappings can go to the same index field name: downgraded index options, wrong analyzer picked at search time when the type is not specified, parsing issues when loading field data, etc. So I don't think we have many choices but either storing the mappings on the index level or using different field names for each type.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/45322863","html_url":"https://github.com/elastic/elasticsearch/issues/5851#issuecomment-45322863","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5851","id":45322863,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzIyODYz","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-06-06T10:24:57Z","updated_at":"2014-06-06T10:24:57Z","author_association":"CONTRIBUTOR","body":"@jpountz what do you mean by:\n\n>  but either storing the mappings on the index level or using different field names for each type.\n\nAre you saying you would be in favour of prepending the type name to the inverted index name?  Agreed that this would solve a number of issues, but what negative effects could it have.\n\nWould (eg) aggregating on the `foo` field across multiple types be much slower than it is today, because it has to access many more inverted indices? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/45322992","html_url":"https://github.com/elastic/elasticsearch/issues/5851#issuecomment-45322992","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5851","id":45322992,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzIyOTky","user":{"login":"synhershko","id":212252,"node_id":"MDQ6VXNlcjIxMjI1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/212252?v=4","gravatar_id":"","url":"https://api.github.com/users/synhershko","html_url":"https://github.com/synhershko","followers_url":"https://api.github.com/users/synhershko/followers","following_url":"https://api.github.com/users/synhershko/following{/other_user}","gists_url":"https://api.github.com/users/synhershko/gists{/gist_id}","starred_url":"https://api.github.com/users/synhershko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/synhershko/subscriptions","organizations_url":"https://api.github.com/users/synhershko/orgs","repos_url":"https://api.github.com/users/synhershko/repos","events_url":"https://api.github.com/users/synhershko/events{/privacy}","received_events_url":"https://api.github.com/users/synhershko/received_events","type":"User","site_admin":false},"created_at":"2014-06-06T10:27:02Z","updated_at":"2014-06-06T10:27:02Z","author_association":"CONTRIBUTOR","body":"@clintongormley slower maybe, but (finally) accurate\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/45325380","html_url":"https://github.com/elastic/elasticsearch/issues/5851#issuecomment-45325380","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5851","id":45325380,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzI1Mzgw","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-06-06T11:03:35Z","updated_at":"2014-06-06T11:03:35Z","author_association":"CONTRIBUTOR","body":"> Are you saying you would be in favour of prepending the type name to the inverted index name?\n\nEither that, or enforcing that field mappings that have the same index name are exactly the same (that's what I meant by storing mappings on the index level). I guess the first option would have negative effects around compression (more sparse postings lists and terms dictionaries), memory usage and speed while the 2nd option would remove flexibility since fields would need to have the same type, index options, doc values options, etc. across types.\n\nHaving different index names per type for search is ok I think, it's mostly a matter of building a disjunction query on the queried types. For everything that works on field data however (aggs, field data ranges, etc.) this would be more tricky since we would need to wrap several field data instances into a single one, which would be very costly since field data expects values to be unique and sorted. Or we would need to treat each type as a filtered index and query them like we query indices today, but this would mean ${num_types} queries per index as opposed to one today.\n\nSo maybe just enforcing that field mappings are the same on all types would be more practical. We already have the limitation today anyway (cf. field data loading issues with numeric fields, or positional queries if one of the types has `DOCS_ONLY` has index options). This makes the update mappings API look weird however: either you would need to refuse any mapping update as soon as a field is defined on two types so that they cannot diverge, or updating the mapping on one type would also update the mapping on other types, which feels wrong as well. Maybe the mapping create/update operations could be made index-wide (not per-type anymore) and then each type would not store mappings but only the list of fields that it contains?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/45326570","html_url":"https://github.com/elastic/elasticsearch/issues/5851#issuecomment-45326570","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5851","id":45326570,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzI2NTcw","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-06-06T11:22:11Z","updated_at":"2014-06-06T11:22:26Z","author_association":"CONTRIBUTOR","body":"@jpountz good explanation.  I think that defaulting to a separate inverted index per field/type adds a lot of overhead, especially when there is a simple workaround: use a different field name.\n\n> So maybe just enforcing that field mappings are the same on all types would be more practical.\n\nI'm in favour of this.  Currently it is a hidden gotcha which can surprise users. It'd be much better to let them know up front at mapping create/update time. That, at least, would be a fairly simple change.\n\nOf course, there are some things which ARE type level, eg whether the `_all` field is enabled is per-type, not per-index. So I think that changing the mappings to be index-level instead of type-level would overcomplicate things as well. Better to leave it as it is, which works well for the majority of cases, but to let the user know when they try to do something which is not supported.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/58339895","html_url":"https://github.com/elastic/elasticsearch/issues/5851#issuecomment-58339895","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5851","id":58339895,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MzM5ODk1","user":{"login":"nickminutello","id":298274,"node_id":"MDQ6VXNlcjI5ODI3NA==","avatar_url":"https://avatars1.githubusercontent.com/u/298274?v=4","gravatar_id":"","url":"https://api.github.com/users/nickminutello","html_url":"https://github.com/nickminutello","followers_url":"https://api.github.com/users/nickminutello/followers","following_url":"https://api.github.com/users/nickminutello/following{/other_user}","gists_url":"https://api.github.com/users/nickminutello/gists{/gist_id}","starred_url":"https://api.github.com/users/nickminutello/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickminutello/subscriptions","organizations_url":"https://api.github.com/users/nickminutello/orgs","repos_url":"https://api.github.com/users/nickminutello/repos","events_url":"https://api.github.com/users/nickminutello/events{/privacy}","received_events_url":"https://api.github.com/users/nickminutello/received_events","type":"User","site_admin":false},"created_at":"2014-10-08T10:43:45Z","updated_at":"2014-10-08T10:43:45Z","author_association":"NONE","body":"> I'm in favour of this. Currently it is a hidden gotcha which can surprise users. \n> It'd be much better to let them know up front at mapping create/update time\n\nHm. Is that the root cause of my issue here? https://github.com/elasticsearch/elasticsearch/issues/7963\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/58644656","html_url":"https://github.com/elastic/elasticsearch/issues/5851#issuecomment-58644656","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5851","id":58644656,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NjQ0NjU2","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2014-10-10T11:43:19Z","updated_at":"2014-10-10T11:43:19Z","author_association":"MEMBER","body":"@nickminutello yes, it is.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/64392121","html_url":"https://github.com/elastic/elasticsearch/issues/5851#issuecomment-64392121","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5851","id":64392121,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzkyMTIx","user":{"login":"rore","id":571498,"node_id":"MDQ6VXNlcjU3MTQ5OA==","avatar_url":"https://avatars2.githubusercontent.com/u/571498?v=4","gravatar_id":"","url":"https://api.github.com/users/rore","html_url":"https://github.com/rore","followers_url":"https://api.github.com/users/rore/followers","following_url":"https://api.github.com/users/rore/following{/other_user}","gists_url":"https://api.github.com/users/rore/gists{/gist_id}","starred_url":"https://api.github.com/users/rore/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rore/subscriptions","organizations_url":"https://api.github.com/users/rore/orgs","repos_url":"https://api.github.com/users/rore/repos","events_url":"https://api.github.com/users/rore/events{/privacy}","received_events_url":"https://api.github.com/users/rore/received_events","type":"User","site_admin":false},"created_at":"2014-11-25T12:25:00Z","updated_at":"2014-11-25T12:25:00Z","author_association":"NONE","body":"I want to raise our objection to this proposed solution (as I did also on thread #8614 ).\n\nEnforcing the same mapping for fields with the same name under different types break the concept of type as a \"table\". This is the way types have been perceived **and used**, by us and by many others.\n\nWe, for instance, are counting on the type separation, and have **a lot** of cases of fields with different mapping under different types. This breaking change will be a huge issue for us with enormous implications. And I'm sure many others are in the same situation. \n\nI think you need to keep the type separation as it was always **presented by you** and understood by most of your users (just yesterday at the Elasticsearch meetup here Boaz referenced types as being \"equivalent to DB tables\").\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/64395686","html_url":"https://github.com/elastic/elasticsearch/issues/5851#issuecomment-64395686","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5851","id":64395686,"node_id":"MDEyOklzc3VlQ29tbWVudDY0Mzk1Njg2","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-11-25T12:58:43Z","updated_at":"2014-11-25T12:58:43Z","author_association":"CONTRIBUTOR","body":"@rore The problem is that this design currently doesn't work, and there are two main options: having types map their fields to a unique field name in the lucene index (eg. by prepending the name of the type), or enforcing that types have consistent mappings. The first option would make postings lists sparser (which means slower less compressed) and cross-type search slower (a single field term query on two types would need to internally become a disjunction on two fields), while the 2nd option would only require that fields that have the same name have consistent mappings. While I agree that there could be some exceptions, a field called `name` would usually be a string and a field called `age` a number? I only mentionned efficiency issues here, but handling inconsistent mappings across types correctly would also increase complexity quite significantly (again because there are decisions that need to be made at an index level).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/64404470","html_url":"https://github.com/elastic/elasticsearch/issues/5851#issuecomment-64404470","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5851","id":64404470,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NDA0NDcw","user":{"login":"rore","id":571498,"node_id":"MDQ6VXNlcjU3MTQ5OA==","avatar_url":"https://avatars2.githubusercontent.com/u/571498?v=4","gravatar_id":"","url":"https://api.github.com/users/rore","html_url":"https://github.com/rore","followers_url":"https://api.github.com/users/rore/followers","following_url":"https://api.github.com/users/rore/following{/other_user}","gists_url":"https://api.github.com/users/rore/gists{/gist_id}","starred_url":"https://api.github.com/users/rore/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rore/subscriptions","organizations_url":"https://api.github.com/users/rore/orgs","repos_url":"https://api.github.com/users/rore/repos","events_url":"https://api.github.com/users/rore/events{/privacy}","received_events_url":"https://api.github.com/users/rore/received_events","type":"User","site_admin":false},"created_at":"2014-11-25T14:11:50Z","updated_at":"2014-11-25T14:11:50Z","author_association":"NONE","body":"@jpountz Lets take a not too unreasonable scenario. An index that holds data that is stored in another system. You have a type per table, say t1, t2 and t3. Each type (\"table\") has a field called externalID that denotes an id on another system. For t1, the externalID is an int. For t2, it's a string. For t3, it's a compound index so it's an object with 2 fields. \nNow what you're saying is that ES will no longer allow me to do this, all my current data is gone kaput, and if I want to hold this data I need to either change the names of my fields or prefix them with the type myself.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/64406094","html_url":"https://github.com/elastic/elasticsearch/issues/5851#issuecomment-64406094","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5851","id":64406094,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NDA2MDk0","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-11-25T14:23:27Z","updated_at":"2014-11-25T14:23:27Z","author_association":"CONTRIBUTOR","body":"> Now what you're saying is that ES will no longer allow me to do this, all my current data is gone kaput, and if I want to hold this data I need to either change the names of my fields or prefix them with the type myself.\n\nWe usually only enforce new rules on newly-created indices so all your current data are not going to be lost, you will have time to migrate.\n\nFor your use-case, you could either partition your data into several indices based on the system that your `externalID` field points to, or keep using a single index but make sure to use different field names depending on the system? Or if you only care about storing these data (no searching, no aggs, no sorting, only retrieval), you could just put them under an object field with `dynamic` configured to `false` so that elasticsearch does not even generate mappings for them.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/64407109","html_url":"https://github.com/elastic/elasticsearch/issues/5851#issuecomment-64407109","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5851","id":64407109,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NDA3MTA5","user":{"login":"rore","id":571498,"node_id":"MDQ6VXNlcjU3MTQ5OA==","avatar_url":"https://avatars2.githubusercontent.com/u/571498?v=4","gravatar_id":"","url":"https://api.github.com/users/rore","html_url":"https://github.com/rore","followers_url":"https://api.github.com/users/rore/followers","following_url":"https://api.github.com/users/rore/following{/other_user}","gists_url":"https://api.github.com/users/rore/gists{/gist_id}","starred_url":"https://api.github.com/users/rore/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rore/subscriptions","organizations_url":"https://api.github.com/users/rore/orgs","repos_url":"https://api.github.com/users/rore/repos","events_url":"https://api.github.com/users/rore/events{/privacy}","received_events_url":"https://api.github.com/users/rore/received_events","type":"User","site_admin":false},"created_at":"2014-11-25T14:30:32Z","updated_at":"2014-11-25T14:30:32Z","author_association":"NONE","body":"This was only one example. We have a lot of indexes, a lot of types and a lot of places where this happens or might happen. Dealing with all the possible ways it could impact us is a complex issue. \n\nAnd again, on a general level, it breaks the concept of a type and why you should use it. I understand your considerations but I think you're choosing the path that will cause more damage than good, at least for existing users. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/68367716","html_url":"https://github.com/elastic/elasticsearch/issues/5851#issuecomment-68367716","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5851","id":68367716,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MzY3NzE2","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-12-30T15:53:45Z","updated_at":"2014-12-30T15:53:45Z","author_association":"CONTRIBUTOR","body":"Closing in favour of #8870\n","performed_via_github_app":null}]