[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/465012238","html_url":"https://github.com/elastic/elasticsearch/issues/39090#issuecomment-465012238","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39090","id":465012238,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NTAxMjIzOA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-02-19T07:09:02Z","updated_at":"2019-02-19T07:09:02Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/465416385","html_url":"https://github.com/elastic/elasticsearch/issues/39090#issuecomment-465416385","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39090","id":465416385,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NTQxNjM4NQ==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2019-02-20T04:17:09Z","updated_at":"2019-02-20T04:17:09Z","author_association":"MEMBER","body":"Over the years it would be that we have tried to greatly simplify our packaging. When we had `N > 1` ways of doing things, we tried to make it one. Where we had great flexibility to serve use cases at the edge, we removed them. We have done this effort all in the name of removing the surface area of bugs, and focusing on the most common uses of our software. This had pervaded the evolution of our packaging for several years now. This philosophy is important because packaging is very hard, and even harder to test the myriad of configurations and systems out there that the packaging has to interact with. Our `jvm.options` file is starting to get complex. It started as a simple text file where we merely appended all the non-comments into the command line flags for the JVM. We had to add support for multiple versions, otherwise we would be left unable to support JDK 9+ out of the box, or we would have to ship more than one configuration file; neither of those are palatable options (especially with more JDKs coming faster than ever). We had to add support for `ES_TMPDIR` because Linux can not get `/tmp` right for its life (it's not private by default); we needed a way to ensure we always use a private temporary directory, but how to tell `jvm.options` this since it has to set `-Djava.io.tmpdir`? When we add complexity, we try to confine it, and it is to solve real needs. We have been down the path of infinite flexibility before and there be dragons here.\r\n\r\nI am not sure what enabling `jvm.options` to handle environment variables in general provides for us? It just moves some of the configuration to another file (well, how else are the environment variables going to get set?). And now we have a layer of indirection which is hard on everyone, when for the most part, we don't even think users should be messing much with `jvm.options`. Other than heap size, we try to ship defaults that are good for production use cases, and it should otherwise mostly be hands off.\r\n\r\nI would prefer that we not do this.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/465654289","html_url":"https://github.com/elastic/elasticsearch/issues/39090#issuecomment-465654289","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39090","id":465654289,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NTY1NDI4OQ==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2019-02-20T16:33:52Z","updated_at":"2019-02-20T16:33:52Z","author_association":"MEMBER","body":"We discussed this in this week's core/infra sync and we share the general sentiment of the comment above but we're definitely happy to hear more feedback about this.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/467730443","html_url":"https://github.com/elastic/elasticsearch/issues/39090#issuecomment-467730443","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39090","id":467730443,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NzczMDQ0Mw==","user":{"login":"codebrain","id":148974,"node_id":"MDQ6VXNlcjE0ODk3NA==","avatar_url":"https://avatars3.githubusercontent.com/u/148974?v=4","gravatar_id":"","url":"https://api.github.com/users/codebrain","html_url":"https://github.com/codebrain","followers_url":"https://api.github.com/users/codebrain/followers","following_url":"https://api.github.com/users/codebrain/following{/other_user}","gists_url":"https://api.github.com/users/codebrain/gists{/gist_id}","starred_url":"https://api.github.com/users/codebrain/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codebrain/subscriptions","organizations_url":"https://api.github.com/users/codebrain/orgs","repos_url":"https://api.github.com/users/codebrain/repos","events_url":"https://api.github.com/users/codebrain/events{/privacy}","received_events_url":"https://api.github.com/users/codebrain/received_events","type":"User","site_admin":false},"created_at":"2019-02-27T05:34:18Z","updated_at":"2019-02-27T05:34:18Z","author_association":"CONTRIBUTOR","body":"The batch file already performs the substitution, I was simply suggesting this is done in the `JvmOptionsParser` instead as it would simplify the MSI for us.","performed_via_github_app":null}]