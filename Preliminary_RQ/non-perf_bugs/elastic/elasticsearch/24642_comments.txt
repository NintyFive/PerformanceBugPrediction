[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/301055154","html_url":"https://github.com/elastic/elasticsearch/issues/24642#issuecomment-301055154","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24642","id":301055154,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTA1NTE1NA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-05-12T11:42:38Z","updated_at":"2017-05-12T11:42:38Z","author_association":"MEMBER","body":"Isn't the whole point of the `preference` to query the same shard copy all the time when the value is the same?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/301058871","html_url":"https://github.com/elastic/elasticsearch/issues/24642#issuecomment-301058871","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24642","id":301058871,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTA1ODg3MQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2017-05-12T12:04:16Z","updated_at":"2017-05-12T12:04:16Z","author_association":"CONTRIBUTOR","body":"Yes. This change proposes that for each shardID we deterministically pick the same replica given the same session key _but not using the same policy across all shardIDs_ which leads to uneven loads.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/301066948","html_url":"https://github.com/elastic/elasticsearch/issues/24642#issuecomment-301066948","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24642","id":301066948,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTA2Njk0OA==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2017-05-12T12:46:24Z","updated_at":"2017-05-12T12:46:24Z","author_association":"CONTRIBUTOR","body":"We discussed this on FixItFriday and decided to adopt the proposed change of including shard_id in the hash of the preference key but with appropriate check for backwards-compatibility.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/301067113","html_url":"https://github.com/elastic/elasticsearch/issues/24642#issuecomment-301067113","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24642","id":301067113,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTA2NzExMw==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2017-05-12T12:47:12Z","updated_at":"2017-05-12T12:47:12Z","author_association":"CONTRIBUTOR","body":"@markharwood I am +1 on this but we need to make sure that we preserve BWC. It should be rather simple here like in `OperationRouting` you can do this:\r\n\r\n```Java\r\nprivate ShardIterator preferenceActiveShardIterator(IndexShardRoutingTable indexShard, String localNodeId, DiscoveryNodes nodes, @Nullable String preference) {\r\n  // ...\r\n  if (nodes.getMinNodeVersion().onOrAfter(Version.V_6_0_0_alpha1_UNRELEASED)) {\r\n    // use new method\r\n  } else {\r\n    // use old method\r\n  }\r\n}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/313717029","html_url":"https://github.com/elastic/elasticsearch/issues/24642#issuecomment-313717029","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24642","id":313717029,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMzcxNzAyOQ==","user":{"login":"ruria","id":7545053,"node_id":"MDQ6VXNlcjc1NDUwNTM=","avatar_url":"https://avatars3.githubusercontent.com/u/7545053?v=4","gravatar_id":"","url":"https://api.github.com/users/ruria","html_url":"https://github.com/ruria","followers_url":"https://api.github.com/users/ruria/followers","following_url":"https://api.github.com/users/ruria/following{/other_user}","gists_url":"https://api.github.com/users/ruria/gists{/gist_id}","starred_url":"https://api.github.com/users/ruria/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruria/subscriptions","organizations_url":"https://api.github.com/users/ruria/orgs","repos_url":"https://api.github.com/users/ruria/repos","events_url":"https://api.github.com/users/ruria/events{/privacy}","received_events_url":"https://api.github.com/users/ruria/received_events","type":"User","site_admin":false},"created_at":"2017-07-07T15:39:00Z","updated_at":"2017-07-07T15:39:00Z","author_association":"NONE","body":"Sorry, but I don´t get the point. Why is so important to preserve BWC? \"eventually\" primary and replica can diverge, so hitting same shards in a \"real time\" scenario along the (say) session is fine. But if you update your cluster, restart nodes, and so on... to install this \"patch\" What´s the problem to hit another shards? They should be synced and almost sure your session is changed.\r\n","performed_via_github_app":null}]