{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/11017","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11017/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11017/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11017/events","html_url":"https://github.com/elastic/elasticsearch/issues/11017","id":73665222,"node_id":"MDU6SXNzdWU3MzY2NTIyMg==","number":11017,"title":"Partial shard failures rendered as non-structured exceptions","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"labels":[{"id":152517143,"node_id":"MDU6TGFiZWwxNTI1MTcxNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/REST%20API","name":":Core/Infra/REST API","color":"0e8a16","default":false,"description":"REST infrastructure and utilities"}],"state":"closed","locked":false,"assignee":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"assignees":[{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2015-05-06T16:05:33Z","updated_at":"2015-05-18T08:02:23Z","closed_at":"2015-05-18T08:02:22Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"```\nDELETE * \n\nPUT test/test/1\n{\n  \"foz\": \"bar\"\n}\n\nGET _search?sort=foo\n```\n\nRendered as a structured exception:\n\n```\n{\n   \"error\": {\n      \"root_cause\": [\n         {\n            \"type\": \"search_parse_exception\",\n            \"reason\": \"No mapping found for [foo] in order to sort on\"\n         }\n      ],\n      \"type\": \"search_phase_execution_exception\",\n      \"reason\": \"all shards failed\",\n      \"phase\": \"query\",\n      \"grouped\": true,\n      \"failed_shards\": [\n         {\n            \"shard\": 0,\n            \"index\": \"test\",\n            \"node\": \"v04p8T35S1ySNdsF9GTl7w\",\n            \"reason\": {\n               \"type\": \"search_parse_exception\",\n               \"reason\": \"Failed to parse source [{\\\"sort\\\":[{\\\"foo\\\":{}}]}]\",\n               \"caused_by\": {\n                  \"type\": \"search_parse_exception\",\n                  \"reason\": \"No mapping found for [foo] in order to sort on\"\n               }\n            }\n         }\n      ]\n   },\n   \"status\": 400\n}\n```\n\nHowever, if one shard succeeds, then exceptions are no longer structured:\n\n```\nPUT test2/test/1\n{\n  \"foo\": \"bar\"\n}\n\nGET _search?sort=foo\n```\n\nRenders as:\n\n```\n{\n   \"took\": 3,\n   \"timed_out\": false,\n   \"_shards\": {\n      \"total\": 10,\n      \"successful\": 5,\n      \"failed\": 5,\n      \"failures\": [\n         {\n            \"index\": \"test\",\n            \"shard\": 0,\n            \"status\": 400,\n            \"reason\": \"RemoteTransportException[[Frigga][inet[/192.168.2.183:9300]][indices:data/read/search[phase/query]]]; nested: SearchParseException[Failed to parse source [{\\\"sort\\\":[{\\\"foo\\\":{}}]}]]; nested: SearchParseException[No mapping found for [foo] in order to sort on]; \"\n         },\n         {\n            \"index\": \"test\",\n            \"shard\": 1,\n            \"status\": 400,\n            \"reason\": \"RemoteTransportException[[Frigga][inet[/192.168.2.183:9300]][indices:data/read/search[phase/query]]]; nested: SearchParseException[Failed to parse source [{\\\"sort\\\":[{\\\"foo\\\":{}}]}]]; nested: SearchParseException[No mapping found for [foo] in order to sort on]; \"\n         },\n         {\n            \"index\": \"test\",\n            \"shard\": 2,\n            \"status\": 400,\n            \"reason\": \"RemoteTransportException[[Frigga][inet[/192.168.2.183:9300]][indices:data/read/search[phase/query]]]; nested: SearchParseException[Failed to parse source [{\\\"sort\\\":[{\\\"foo\\\":{}}]}]]; nested: SearchParseException[No mapping found for [foo] in order to sort on]; \"\n         },\n         {\n            \"index\": \"test\",\n            \"shard\": 3,\n            \"status\": 400,\n            \"reason\": \"RemoteTransportException[[Frigga][inet[/192.168.2.183:9300]][indices:data/read/search[phase/query]]]; nested: SearchParseException[Failed to parse source [{\\\"sort\\\":[{\\\"foo\\\":{}}]}]]; nested: SearchParseException[No mapping found for [foo] in order to sort on]; \"\n         },\n         {\n            \"index\": \"test\",\n            \"shard\": 4,\n            \"status\": 400,\n            \"reason\": \"RemoteTransportException[[Frigga][inet[/192.168.2.183:9300]][indices:data/read/search[phase/query]]]; nested: SearchParseException[Failed to parse source [{\\\"sort\\\":[{\\\"foo\\\":{}}]}]]; nested: SearchParseException[No mapping found for [foo] in order to sort on]; \"\n         }\n      ]\n   },\n   \"hits\": {\n      \"total\": 1,\n      \"max_score\": null,\n      \"hits\": [\n         {\n            \"_index\": \"test2\",\n            \"_type\": \"test\",\n            \"_id\": \"1\",\n            \"_score\": null,\n            \"_source\": {\n               \"foo\": \"bar\"\n            },\n            \"sort\": [\n               \"bar\"\n            ]\n         }\n      ]\n   }\n}\n```\n\nSimilarly, errors in bulk APIs are not structured:\n\n```\nPUT test/test/_bulk\n{\"index\": {\"_id\": 1 }}\n{}\n{\"index\": {\"_id\": 1 ,\"_version\": 2}}\n{}\n```\n\nReturns:\n\n```\n{\n   \"took\": 60,\n   \"errors\": true,\n   \"items\": [\n      {\n         \"index\": {\n            \"_index\": \"test\",\n            \"_type\": \"test\",\n            \"_id\": \"1\",\n            \"_version\": 1,\n            \"_shards\": {\n               \"total\": 2,\n               \"successful\": 1,\n               \"failed\": 0\n            },\n            \"status\": 201\n         }\n      },\n      {\n         \"index\": {\n            \"_index\": \"test\",\n            \"_type\": \"test\",\n            \"_id\": \"1\",\n            \"status\": 409,\n            \"error\": \"[test][3][test][1]: version conflict, current [1], provided [2]\"\n         }\n      }\n   ]\n}\n```\n\nCuriously, `_msearch` doesn't return the reason if all shards failed:\n\n```\nGET _msearch\n{\"index\": \"test\"}\n{\"sort\": \"foo\"}\n{\"index\": \"_all\"}\n{\"sort\": \"foo\"}\n```\n\nReturns:\n\n```\n{\n   \"responses\": [\n      {\n         \"error\": \"SearchPhaseExecutionException[all shards failed]\"\n      },\n      {\n         \"took\": 6,\n         \"timed_out\": false,\n         \"_shards\": {\n            \"total\": 10,\n            \"successful\": 5,\n            \"failed\": 5,\n            \"failures\": [\n               {\n                  \"index\": \"test\",\n                  \"shard\": 0,\n                  \"status\": 400,\n                  \"reason\": \"RemoteTransportException[[Frigga][inet[/192.168.2.183:9300]][indices:data/read/search[phase/query]]]; nested: SearchParseException[Failed to parse source [{\\\"sort\\\": \\\"foo\\\"}]]; nested: SearchParseException[No mapping found for [foo] in order to sort on]; \"\n               },\n               {\n                  \"index\": \"test\",\n                  \"shard\": 1,\n                  \"status\": 400,\n                  \"reason\": \"RemoteTransportException[[Frigga][inet[/192.168.2.183:9300]][indices:data/read/search[phase/query]]]; nested: SearchParseException[Failed to parse source [{\\\"sort\\\": \\\"foo\\\"}]]; nested: SearchParseException[No mapping found for [foo] in order to sort on]; \"\n               },\n               {\n                  \"index\": \"test\",\n                  \"shard\": 2,\n                  \"status\": 400,\n                  \"reason\": \"RemoteTransportException[[Frigga][inet[/192.168.2.183:9300]][indices:data/read/search[phase/query]]]; nested: SearchParseException[Failed to parse source [{\\\"sort\\\": \\\"foo\\\"}]]; nested: SearchParseException[No mapping found for [foo] in order to sort on]; \"\n               },\n               {\n                  \"index\": \"test\",\n                  \"shard\": 3,\n                  \"status\": 400,\n                  \"reason\": \"RemoteTransportException[[Frigga][inet[/192.168.2.183:9300]][indices:data/read/search[phase/query]]]; nested: SearchParseException[Failed to parse source [{\\\"sort\\\": \\\"foo\\\"}]]; nested: SearchParseException[No mapping found for [foo] in order to sort on]; \"\n               },\n               {\n                  \"index\": \"test\",\n                  \"shard\": 4,\n                  \"status\": 400,\n                  \"reason\": \"RemoteTransportException[[Frigga][inet[/192.168.2.183:9300]][indices:data/read/search[phase/query]]]; nested: SearchParseException[Failed to parse source [{\\\"sort\\\": \\\"foo\\\"}]]; nested: SearchParseException[No mapping found for [foo] in order to sort on]; \"\n               }\n            ]\n         },\n         \"hits\": {\n            \"total\": 1,\n            \"max_score\": null,\n            \"hits\": [\n               {\n                  \"_index\": \"test2\",\n                  \"_type\": \"test\",\n                  \"_id\": \"1\",\n                  \"_score\": null,\n                  \"_source\": {\n                     \"foo\": \"bar\"\n                  },\n                  \"sort\": [\n                     \"bar\"\n                  ]\n               }\n            ]\n         }\n      }\n   ]\n}\n```\n","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}