[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/332173758","html_url":"https://github.com/elastic/elasticsearch/issues/26787#issuecomment-332173758","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26787","id":332173758,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMjE3Mzc1OA==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2017-09-26T11:48:53Z","updated_at":"2017-09-26T11:48:53Z","author_association":"MEMBER","body":"This should be fixed in 6.0 by https://github.com/elastic/elasticsearch/pull/25826 which ensures that out of range, infinite and NaN values are rejected at index time.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/332248066","html_url":"https://github.com/elastic/elasticsearch/issues/26787#issuecomment-332248066","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26787","id":332248066,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMjI0ODA2Ng==","user":{"login":"thomas11","id":12074,"node_id":"MDQ6VXNlcjEyMDc0","avatar_url":"https://avatars0.githubusercontent.com/u/12074?v=4","gravatar_id":"","url":"https://api.github.com/users/thomas11","html_url":"https://github.com/thomas11","followers_url":"https://api.github.com/users/thomas11/followers","following_url":"https://api.github.com/users/thomas11/following{/other_user}","gists_url":"https://api.github.com/users/thomas11/gists{/gist_id}","starred_url":"https://api.github.com/users/thomas11/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomas11/subscriptions","organizations_url":"https://api.github.com/users/thomas11/orgs","repos_url":"https://api.github.com/users/thomas11/repos","events_url":"https://api.github.com/users/thomas11/events{/privacy}","received_events_url":"https://api.github.com/users/thomas11/received_events","type":"User","site_admin":false},"created_at":"2017-09-26T16:04:15Z","updated_at":"2017-09-26T16:04:15Z","author_association":"CONTRIBUTOR","body":"And what about the invalid values that are already indexed? The fix for this can't be to re-index all data.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/332645567","html_url":"https://github.com/elastic/elasticsearch/issues/26787#issuecomment-332645567","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26787","id":332645567,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMjY0NTU2Nw==","user":{"login":"thomas11","id":12074,"node_id":"MDQ6VXNlcjEyMDc0","avatar_url":"https://avatars0.githubusercontent.com/u/12074?v=4","gravatar_id":"","url":"https://api.github.com/users/thomas11","html_url":"https://github.com/thomas11","followers_url":"https://api.github.com/users/thomas11/followers","following_url":"https://api.github.com/users/thomas11/following{/other_user}","gists_url":"https://api.github.com/users/thomas11/gists{/gist_id}","starred_url":"https://api.github.com/users/thomas11/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomas11/subscriptions","organizations_url":"https://api.github.com/users/thomas11/orgs","repos_url":"https://api.github.com/users/thomas11/repos","events_url":"https://api.github.com/users/thomas11/events{/privacy}","received_events_url":"https://api.github.com/users/thomas11/received_events","type":"User","site_admin":false},"created_at":"2017-09-27T20:29:39Z","updated_at":"2017-09-27T20:29:39Z","author_association":"CONTRIBUTOR","body":"Seems like changing from `==` to `Double.compare(double a, double b) == 0` would do the trick.\r\n\r\n> There are two ways in which comparisons performed by this method differ from those performed by the Java language numerical comparison operators (<, <=, ==, >=, >) when applied to primitive double values: \r\n> - Double.NaN is considered by this method to be equal to itself and greater than all other double values (including Double.POSITIVE_INFINITY). \r\n> - 0.0d is considered by this method to be greater than -0.0d. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/332800108","html_url":"https://github.com/elastic/elasticsearch/issues/26787#issuecomment-332800108","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26787","id":332800108,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMjgwMDEwOA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-09-28T10:49:51Z","updated_at":"2017-09-28T10:49:51Z","author_association":"CONTRIBUTOR","body":"> And what about the invalid values that are already indexed? \r\n\r\nThis is unfortunate that we had this leniency in the past indeed. I'm afraid this histogram issue is only one of the issues you could hit with NaNs in your index. Using a `range` query with both bounds open should work in order to filter out nans in case you need it.\r\n\r\nI see the switch to `Double.compare` as a good move regardless of this issue. Would you like to open a PR?\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/333919742","html_url":"https://github.com/elastic/elasticsearch/issues/26787#issuecomment-333919742","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26787","id":333919742,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMzkxOTc0Mg==","user":{"login":"thomas11","id":12074,"node_id":"MDQ6VXNlcjEyMDc0","avatar_url":"https://avatars0.githubusercontent.com/u/12074?v=4","gravatar_id":"","url":"https://api.github.com/users/thomas11","html_url":"https://github.com/thomas11","followers_url":"https://api.github.com/users/thomas11/followers","following_url":"https://api.github.com/users/thomas11/following{/other_user}","gists_url":"https://api.github.com/users/thomas11/gists{/gist_id}","starred_url":"https://api.github.com/users/thomas11/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomas11/subscriptions","organizations_url":"https://api.github.com/users/thomas11/orgs","repos_url":"https://api.github.com/users/thomas11/repos","events_url":"https://api.github.com/users/thomas11/events{/privacy}","received_events_url":"https://api.github.com/users/thomas11/received_events","type":"User","site_admin":false},"created_at":"2017-10-03T17:32:02Z","updated_at":"2017-10-03T17:32:02Z","author_association":"CONTRIBUTOR","body":"Not sure if you're automatically notified @jpountz, I submitted PR 26856. Thanks!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/334796910","html_url":"https://github.com/elastic/elasticsearch/issues/26787#issuecomment-334796910","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26787","id":334796910,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNDc5NjkxMA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-10-06T15:58:31Z","updated_at":"2017-10-06T15:58:31Z","author_association":"CONTRIBUTOR","body":"Fixed by #26856","performed_via_github_app":null}]