{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/8510","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8510/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8510/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8510/events","html_url":"https://github.com/elastic/elasticsearch/issues/8510","id":49119675,"node_id":"MDU6SXNzdWU0OTExOTY3NQ==","number":8510,"title":"Aggregations: SingleBucketAggregation should create a single bucket ","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null},{"id":110557212,"node_id":"MDU6TGFiZWwxMTA1NTcyMTI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/high%20hanging%20fruit","name":"high hanging fruit","color":"fc6149","default":false,"description":null},{"id":113234020,"node_id":"MDU6TGFiZWwxMTMyMzQwMjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/stalled","name":"stalled","color":"fef2c0","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2014-11-17T17:26:40Z","updated_at":"2018-02-23T14:56:45Z","closed_at":"2018-02-23T14:54:45Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"`SingleBucketAggregations` (like filter aggregation) have no method `getBuckets()` and also the json response contains no buckets array. This saves some space but also makes it harder to traverse the aggregation tree because when looking at the result one always has to know if the aggregation that produced the current level was a `SingleBucketAggregation` or a `MultiBucketAggregation` (like terms agg).\n\nExample for json:\n\nRequest with top level multi bucket agg:\n\n```\nPOST testidx/_search?size=0\n{\n  \"aggs\": {\n    \"terms\": {\n      \"terms\": {\n        \"field\": \"label\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"histogram\": {\n          \"histogram\": {\n            \"field\": \"num\",\n            \"interval\": 1\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nRequest with top level single bucket agg:\n\n```\nPOST testidx/_search?size=0\n{\n  \"aggs\": {\n    \"terms\": {\n      \"filter\": {\n        \"term\": {\n          \"label\": \"label_a\"\n        }\n      },\n      \"aggs\": {\n        \"histogram\": {\n          \"histogram\": {\n            \"field\": \"num\",\n            \"interval\": 1\n          }\n        }\n      }\n    }\n  }\n}\n\n```\n\nmulti bucket yields:\n\n```\n\"aggregations\": {\n      \"terms\": {\n         \"doc_count_error_upper_bound\": 0,\n         \"sum_other_doc_count\": 0,\n         \"buckets\": [\n            {\n               \"key\": \"label_a\",\n               \"doc_count\": 3,\n               \"histogram\": {\n                  \"buckets\": [\n                     {\n                        \"key\": 1,\n                        \"doc_count\": 1\n                     },\n                    ...\n\n```\n\nsingle bucket yields:\n\n```\n\n\"aggregations\": {\n      \"terms\": {\n         \"doc_count\": 3,\n         \"histogram\": {\n            \"buckets\": [\n               {\n                  \"key\": 1,\n                  \"doc_count\": 1\n               },\n               ...\n\n```\n\nalthough the two requests have the same level of \"nestedness\". If I was to post process the result I would have to change whichever application is consuming it when I change the top level aggregation from single to multibucket or the other way round.\n\nThe following would be more convenient for the second request:\n\n```\n\"aggregations\": {\n    \"terms\": {\n      \"doc_count\": 3,\n      \"buckets\": [\n        {\n          \"key\": \"some_key_that_makes_sense\",\n          \"histogram\": {\n            \"buckets\": [\n              {\n                \"key\": 1,\n                \"doc_count\": 1\n              },\n            ...\n\n```\n\nThis also affects the coming soon `getProperty` method for aggregations which is currently implemented to be consistent with the different behavior of single and multi buckets: https://github.com/elasticsearch/elasticsearch/pull/8421#discussion_r20424480\n","closed_by":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"performed_via_github_app":null}