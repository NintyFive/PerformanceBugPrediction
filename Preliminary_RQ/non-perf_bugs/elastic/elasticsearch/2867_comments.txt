[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/16013137","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-16013137","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":16013137,"node_id":"MDEyOklzc3VlQ29tbWVudDE2MDEzMTM3","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2013-04-07T11:02:11Z","updated_at":"2013-04-07T11:02:11Z","author_association":"CONTRIBUTOR","body":"I don't know how sphinx score here in detail but I'd like to look into something like [this](http://stefan.buettcher.org/papers/buettcher_2006_term_proximity.pdf)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/16013493","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-16013493","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":16013493,"node_id":"MDEyOklzc3VlQ29tbWVudDE2MDEzNDkz","user":{"login":"kshnurov","id":498185,"node_id":"MDQ6VXNlcjQ5ODE4NQ==","avatar_url":"https://avatars2.githubusercontent.com/u/498185?v=4","gravatar_id":"","url":"https://api.github.com/users/kshnurov","html_url":"https://github.com/kshnurov","followers_url":"https://api.github.com/users/kshnurov/followers","following_url":"https://api.github.com/users/kshnurov/following{/other_user}","gists_url":"https://api.github.com/users/kshnurov/gists{/gist_id}","starred_url":"https://api.github.com/users/kshnurov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kshnurov/subscriptions","organizations_url":"https://api.github.com/users/kshnurov/orgs","repos_url":"https://api.github.com/users/kshnurov/repos","events_url":"https://api.github.com/users/kshnurov/events{/privacy}","received_events_url":"https://api.github.com/users/kshnurov/received_events","type":"User","site_admin":false},"created_at":"2013-04-07T11:29:48Z","updated_at":"2013-04-07T11:29:48Z","author_association":"NONE","body":"Sphinx algorithm is described [here](http://sphinxsearch.com/blog/2010/08/17/how-sphinx-relevance-ranking-works/). Here it is:\n\n```\n1) query = one two three, field = one and two three\nfield_phrase_weight = 2 (because 2-keyword long \"two three\" subphrase matched)\n\n2) query = one two three, field = one and two and three\nfield_phrase_weight = 1 (because single keywords matched but no subphrase did)\n\n3) query = one two three, field = nothing matches at all\nfield_phrase_weight = 0\n\ndoc_phrase_weight = 0\nforeach ( field in matching_fields )\n{\n   field_phrase_weight = max_common_subsequence_length ( query, field )\n   doc_phrase_weight += user_weight ( field ) * field_phrase_weight\n}\n\nweight = doc_phrase_weight*1000 + integer(doc_bm25*999)\n```\n\nSo, how can we implement this in ES?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/113278097","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-113278097","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":113278097,"node_id":"MDEyOklzc3VlQ29tbWVudDExMzI3ODA5Nw==","user":{"login":"vineelyalamarthy","id":515877,"node_id":"MDQ6VXNlcjUxNTg3Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/515877?v=4","gravatar_id":"","url":"https://api.github.com/users/vineelyalamarthy","html_url":"https://github.com/vineelyalamarthy","followers_url":"https://api.github.com/users/vineelyalamarthy/followers","following_url":"https://api.github.com/users/vineelyalamarthy/following{/other_user}","gists_url":"https://api.github.com/users/vineelyalamarthy/gists{/gist_id}","starred_url":"https://api.github.com/users/vineelyalamarthy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vineelyalamarthy/subscriptions","organizations_url":"https://api.github.com/users/vineelyalamarthy/orgs","repos_url":"https://api.github.com/users/vineelyalamarthy/repos","events_url":"https://api.github.com/users/vineelyalamarthy/events{/privacy}","received_events_url":"https://api.github.com/users/vineelyalamarthy/received_events","type":"User","site_admin":false},"created_at":"2015-06-18T20:18:35Z","updated_at":"2015-06-18T20:18:35Z","author_association":"NONE","body":"@clintongormley   is this some thing to be fixed?  How can I assign this bug to myself ? I m extremely interested in this.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/113305871","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-113305871","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":113305871,"node_id":"MDEyOklzc3VlQ29tbWVudDExMzMwNTg3MQ==","user":{"login":"kshnurov","id":498185,"node_id":"MDQ6VXNlcjQ5ODE4NQ==","avatar_url":"https://avatars2.githubusercontent.com/u/498185?v=4","gravatar_id":"","url":"https://api.github.com/users/kshnurov","html_url":"https://github.com/kshnurov","followers_url":"https://api.github.com/users/kshnurov/followers","following_url":"https://api.github.com/users/kshnurov/following{/other_user}","gists_url":"https://api.github.com/users/kshnurov/gists{/gist_id}","starred_url":"https://api.github.com/users/kshnurov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kshnurov/subscriptions","organizations_url":"https://api.github.com/users/kshnurov/orgs","repos_url":"https://api.github.com/users/kshnurov/repos","events_url":"https://api.github.com/users/kshnurov/events{/privacy}","received_events_url":"https://api.github.com/users/kshnurov/received_events","type":"User","site_admin":false},"created_at":"2015-06-18T22:31:23Z","updated_at":"2015-06-19T01:42:52Z","author_association":"NONE","body":"@kimchy, @s1monw, please add (Phrase proximity + BM25) ranking!\nWhile ES is very good at search, it is very bad at text search **ranking**.\n\nLet's say we have 2 documents:\n1. `(2000 words) ... child elephant from America was ... (2000 words)`\n2. `Egyptian child ... (2000 words) ... american coffee with elephant ... (2000 words) ... toy elephant`\n\nWe've heard something interesting about child elephant from America and now we want to find it: `\"match\": { \"text\": \"child elephant america\"}`. Guess what? 2nd document will be ranked higher(!) because it has 2 'elephants' vs 1 and this is how TF/IDF and current algorithm works.\n\nThings get even worse when you're trying to find a restaurant called \"China Street\", since you have words \"china\" and \"street\" found in hundreds of restaurants. You can add a boost for name field, but then you won't be able to find \"roosevelt street restaurants\", since restaurants \"Roosevelt\" and \"Lonely Street\" will be ranked higher because of the boost. You'll add a boost for address and bang! - now you can't find a restaurant with words \"good china restaurant, previously located at roosevelt street\" in description. It will be ranked much, much lower than you expect (second page at least) because of the boosts and restaurants \"China Street\" and \"Roosevelt\", all china restaurants at Roosevelt st. and etc. This is where phrase proximity is needed to make ranking a lot better.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/113306471","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-113306471","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":113306471,"node_id":"MDEyOklzc3VlQ29tbWVudDExMzMwNjQ3MQ==","user":{"login":"vineelyalamarthy","id":515877,"node_id":"MDQ6VXNlcjUxNTg3Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/515877?v=4","gravatar_id":"","url":"https://api.github.com/users/vineelyalamarthy","html_url":"https://github.com/vineelyalamarthy","followers_url":"https://api.github.com/users/vineelyalamarthy/followers","following_url":"https://api.github.com/users/vineelyalamarthy/following{/other_user}","gists_url":"https://api.github.com/users/vineelyalamarthy/gists{/gist_id}","starred_url":"https://api.github.com/users/vineelyalamarthy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vineelyalamarthy/subscriptions","organizations_url":"https://api.github.com/users/vineelyalamarthy/orgs","repos_url":"https://api.github.com/users/vineelyalamarthy/repos","events_url":"https://api.github.com/users/vineelyalamarthy/events{/privacy}","received_events_url":"https://api.github.com/users/vineelyalamarthy/received_events","type":"User","site_admin":false},"created_at":"2015-06-18T22:35:58Z","updated_at":"2015-06-18T22:35:58Z","author_association":"NONE","body":"@kimchy @kshnurov  can I work on this bug or some one already took it ? I would like to know where to get started.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/113314935","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-113314935","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":113314935,"node_id":"MDEyOklzc3VlQ29tbWVudDExMzMxNDkzNQ==","user":{"login":"vineelyalamarthy","id":515877,"node_id":"MDQ6VXNlcjUxNTg3Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/515877?v=4","gravatar_id":"","url":"https://api.github.com/users/vineelyalamarthy","html_url":"https://github.com/vineelyalamarthy","followers_url":"https://api.github.com/users/vineelyalamarthy/followers","following_url":"https://api.github.com/users/vineelyalamarthy/following{/other_user}","gists_url":"https://api.github.com/users/vineelyalamarthy/gists{/gist_id}","starred_url":"https://api.github.com/users/vineelyalamarthy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vineelyalamarthy/subscriptions","organizations_url":"https://api.github.com/users/vineelyalamarthy/orgs","repos_url":"https://api.github.com/users/vineelyalamarthy/repos","events_url":"https://api.github.com/users/vineelyalamarthy/events{/privacy}","received_events_url":"https://api.github.com/users/vineelyalamarthy/received_events","type":"User","site_admin":false},"created_at":"2015-06-18T23:13:07Z","updated_at":"2015-06-18T23:13:07Z","author_association":"NONE","body":"@kimchy @kshnurov @kshnurov @clintongormley @rmuir This bug sounds very interesting, I want to work on it,you can review my code before check-in , But could you please tell me, how to get started. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/113322081","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-113322081","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":113322081,"node_id":"MDEyOklzc3VlQ29tbWVudDExMzMyMjA4MQ==","user":{"login":"brusic","id":354105,"node_id":"MDQ6VXNlcjM1NDEwNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/354105?v=4","gravatar_id":"","url":"https://api.github.com/users/brusic","html_url":"https://github.com/brusic","followers_url":"https://api.github.com/users/brusic/followers","following_url":"https://api.github.com/users/brusic/following{/other_user}","gists_url":"https://api.github.com/users/brusic/gists{/gist_id}","starred_url":"https://api.github.com/users/brusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brusic/subscriptions","organizations_url":"https://api.github.com/users/brusic/orgs","repos_url":"https://api.github.com/users/brusic/repos","events_url":"https://api.github.com/users/brusic/events{/privacy}","received_events_url":"https://api.github.com/users/brusic/received_events","type":"User","site_admin":false},"created_at":"2015-06-19T00:00:14Z","updated_at":"2015-06-19T00:00:14Z","author_association":"CONTRIBUTOR","body":"You still have phrase matching with slop at your disposal, so there is\nnothing that is preventing from rolling your own. You can also disable term\nfrequencies, use bigrams, or all of the above. Many of us have tuned\nrelevancy with the current tool set. Your queries will get complicated and\nthe tuning process might take a bit.\n\nIsn't BM25 about document length normalization? Need to look at the sphinx\nalgorithm to see why proximity is used only there.\n\nAs far as contributing to the code, got can find guides online on how to\ncontribute to a github project. Create a new branch, check in the code and\nissue a pull request.  Beware that elasticsearch is notoroius for not\naccepting external pull requests. Perhaps that has changed lately (I gave\nup).\nOn Jun 19, 2015 6:32 AM, \"Kirill Shnurov\" notifications@github.com wrote:\n\n> @kimchy https://github.com/kimchy, @s1monw https://github.com/s1monw,\n> please add (Phrase proximity + BM25) ranking!\n> While ES is very good at search, it is very bad at text search _ranking_.\n> \n> Let's say we have 2 documents:\n> 1. (2000 words) ... child elephant from America was ... (2000 words)\n> 2. Egyptian child ... (2000 words) ... american coffee with elephant ...\n> (2000 words) ... toy elephant\n> \n> We're heard something interesting about child elephant from America and\n> now we want to find it: \"match\": { \"text\": \"child elephant america\"}.\n> Guess what? 2nd document will be ranked higher(!) because it has 2\n> 'elephants' vs 1 and this is how TF/IDF and current algorithm works.\n> \n> Things get even worse when you're trying to find a restaurant called\n> \"China Street\", since you have words \"china\" and \"street\" found in hundreds\n> of restaurants. You can add a boost for name field, but then you won't be\n> able to find \"roosevelt street restaurants\", since restaurants \"Roosevelt\"\n> and \"Lonely Street\" will be ranked higher because of the boost. You'll add\n> a boost for address and bang! - now you can't find a restaurant with words\n> \"good china restaurant, previously located at roosevelt street\" in\n> description. It will be ranked much, much lower than you expect (second\n> page at least) because of the boosts and restaurants \"China Street\" and\n> \"Roosevelt\", all china restaurants at Roosevelt st. and etc. This is where\n> phrase proximity is needed to make ranking a lot better.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/elastic/elasticsearch/issues/2867#issuecomment-113305871\n> .\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/113337207","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-113337207","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":113337207,"node_id":"MDEyOklzc3VlQ29tbWVudDExMzMzNzIwNw==","user":{"login":"kshnurov","id":498185,"node_id":"MDQ6VXNlcjQ5ODE4NQ==","avatar_url":"https://avatars2.githubusercontent.com/u/498185?v=4","gravatar_id":"","url":"https://api.github.com/users/kshnurov","html_url":"https://github.com/kshnurov","followers_url":"https://api.github.com/users/kshnurov/followers","following_url":"https://api.github.com/users/kshnurov/following{/other_user}","gists_url":"https://api.github.com/users/kshnurov/gists{/gist_id}","starred_url":"https://api.github.com/users/kshnurov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kshnurov/subscriptions","organizations_url":"https://api.github.com/users/kshnurov/orgs","repos_url":"https://api.github.com/users/kshnurov/repos","events_url":"https://api.github.com/users/kshnurov/events{/privacy}","received_events_url":"https://api.github.com/users/kshnurov/received_events","type":"User","site_admin":false},"created_at":"2015-06-19T01:40:06Z","updated_at":"2015-06-19T01:41:27Z","author_association":"NONE","body":"@vineelyalamarthy this IS NOT a bug, it's just [how default ES ranking works](https://www.elastic.co/guide/en/elasticsearch/guide/current/scoring-theory.html). In most cases this is more than enough.\n@brusic phrase matching is a query type, not a ranking method. Ranking will be the same for the example I've posted. For now ES has [only 2 ranking methods](https://www.elastic.co/guide/en/elasticsearch/guide/current/pluggable-similarites.html) - default one and BM25.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/113342004","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-113342004","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":113342004,"node_id":"MDEyOklzc3VlQ29tbWVudDExMzM0MjAwNA==","user":{"login":"brusic","id":354105,"node_id":"MDQ6VXNlcjM1NDEwNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/354105?v=4","gravatar_id":"","url":"https://api.github.com/users/brusic","html_url":"https://github.com/brusic","followers_url":"https://api.github.com/users/brusic/followers","following_url":"https://api.github.com/users/brusic/following{/other_user}","gists_url":"https://api.github.com/users/brusic/gists{/gist_id}","starred_url":"https://api.github.com/users/brusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brusic/subscriptions","organizations_url":"https://api.github.com/users/brusic/orgs","repos_url":"https://api.github.com/users/brusic/repos","events_url":"https://api.github.com/users/brusic/events{/privacy}","received_events_url":"https://api.github.com/users/brusic/received_events","type":"User","site_admin":false},"created_at":"2015-06-19T02:08:54Z","updated_at":"2015-06-19T02:08:54Z","author_association":"CONTRIBUTOR","body":"All queries contribute to the score, so they implicitly form part of the\nranking method.\n\nI use a complicated set of queries which includes phrase queries to provide\na boost to the score if there is a match. It would be nice to issue a\nsingle query, but alas that is not possible if you want to fine tune\nrelevancy.\n\nBM25 deals with field length normalization, so it still is TFIDF under the\nhood. If your corpus has large variances in the length of a field and term\nfrequencies are still important, BM25 might be a good approach. It has\nnothing to do with proximity.\n\nAgree that this is not a bug, but a feature request. Since there is a\npublished algorithm, it would be great to incorporate into elasticsearch. I\nwould give it a try, but I do not have time.\nOn Jun 19, 2015 9:40 AM, \"Kirill Shnurov\" notifications@github.com wrote:\n\n> @vineelyalamarthy https://github.com/vineelyalamarthy this IS NOT a\n> bug, it's just how default ES ranking works\n> https://www.elastic.co/guide/en/elasticsearch/guide/current/scoring-theory.html.\n> In most cases this is more than enough.\n> @brusic https://github.com/brusic phrase matching is a query type, not\n> a ranking method. Ranking will be the same for the example I've posted. For\n> now ES have only 2 ranking methods\n> https://www.elastic.co/guide/en/elasticsearch/guide/current/pluggable-similarites.html\n> - default one and BM25.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/elastic/elasticsearch/issues/2867#issuecomment-113337207\n> .\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/113342613","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-113342613","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":113342613,"node_id":"MDEyOklzc3VlQ29tbWVudDExMzM0MjYxMw==","user":{"login":"vineelyalamarthy","id":515877,"node_id":"MDQ6VXNlcjUxNTg3Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/515877?v=4","gravatar_id":"","url":"https://api.github.com/users/vineelyalamarthy","html_url":"https://github.com/vineelyalamarthy","followers_url":"https://api.github.com/users/vineelyalamarthy/followers","following_url":"https://api.github.com/users/vineelyalamarthy/following{/other_user}","gists_url":"https://api.github.com/users/vineelyalamarthy/gists{/gist_id}","starred_url":"https://api.github.com/users/vineelyalamarthy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vineelyalamarthy/subscriptions","organizations_url":"https://api.github.com/users/vineelyalamarthy/orgs","repos_url":"https://api.github.com/users/vineelyalamarthy/repos","events_url":"https://api.github.com/users/vineelyalamarthy/events{/privacy}","received_events_url":"https://api.github.com/users/vineelyalamarthy/received_events","type":"User","site_admin":false},"created_at":"2015-06-19T02:14:06Z","updated_at":"2015-06-19T02:14:06Z","author_association":"NONE","body":"@brusic  This will be my first contribution to Elastic Search code base. I would like to work on this , if its approved as a feature request.I have the code set-up in Eclipse. Are there any other steps required to get started.If you know, how to start on this particular task, please let me know.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/113356413","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-113356413","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":113356413,"node_id":"MDEyOklzc3VlQ29tbWVudDExMzM1NjQxMw==","user":{"login":"brusic","id":354105,"node_id":"MDQ6VXNlcjM1NDEwNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/354105?v=4","gravatar_id":"","url":"https://api.github.com/users/brusic","html_url":"https://github.com/brusic","followers_url":"https://api.github.com/users/brusic/followers","following_url":"https://api.github.com/users/brusic/following{/other_user}","gists_url":"https://api.github.com/users/brusic/gists{/gist_id}","starred_url":"https://api.github.com/users/brusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brusic/subscriptions","organizations_url":"https://api.github.com/users/brusic/orgs","repos_url":"https://api.github.com/users/brusic/repos","events_url":"https://api.github.com/users/brusic/events{/privacy}","received_events_url":"https://api.github.com/users/brusic/received_events","type":"User","site_admin":false},"created_at":"2015-06-19T03:22:00Z","updated_at":"2015-06-19T03:22:00Z","author_association":"CONTRIBUTOR","body":"Venkata, it is no different than any other git open source project. Clone\nthe repo, create a new branch, commit your changes (make sure you squash\nyour commits into a single one), and then issue a pull request. Add many\ntests.\n\nBefriend elastic devs on irc and the mailing list so that you can give some\nvisibility to your change.\n\nThis feature would be great to have. It feels like most do not use\nelasticsearch for searching! Tuning is a skill.\n On Jun 19, 2015 10:15 AM, \"Venkata Vineel\" notifications@github.com\nwrote:\n\n> @brusic https://github.com/brusic This will be my first contribution to\n> Elastic Search code base. I would like to work on this , if its approved as\n> a feature request.I have the code set-up in Eclipse. Are there any other\n> steps required to get started.If you know, how to start on this particular\n> task, please let me know.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/elastic/elasticsearch/issues/2867#issuecomment-113342613\n> .\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/113472958","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-113472958","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":113472958,"node_id":"MDEyOklzc3VlQ29tbWVudDExMzQ3Mjk1OA==","user":{"login":"brusic","id":354105,"node_id":"MDQ6VXNlcjM1NDEwNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/354105?v=4","gravatar_id":"","url":"https://api.github.com/users/brusic","html_url":"https://github.com/brusic","followers_url":"https://api.github.com/users/brusic/followers","following_url":"https://api.github.com/users/brusic/following{/other_user}","gists_url":"https://api.github.com/users/brusic/gists{/gist_id}","starred_url":"https://api.github.com/users/brusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brusic/subscriptions","organizations_url":"https://api.github.com/users/brusic/orgs","repos_url":"https://api.github.com/users/brusic/repos","events_url":"https://api.github.com/users/brusic/events{/privacy}","received_events_url":"https://api.github.com/users/brusic/received_events","type":"User","site_admin":false},"created_at":"2015-06-19T10:57:10Z","updated_at":"2015-06-19T10:57:10Z","author_association":"CONTRIBUTOR","body":"I should have added that Elasticsearch does not have different scoring\nmodels itself, but simply exposes those found in the Lucene library.\nChances are that any changes you may want to add really belong at the\nLucene layer.\n\nThat said, there are many smart people that are committers in Lucene, many\nof them are now employed by Elastic. If they have not already implemented\nsomething similar already, there might be a reason. Perhaps someone like\n@mikemccand can chime in.\n\nThere are other similarity models in Lucene/Elasticsearch, but none of them\nwill help with this issue.\nOn Jun 19, 2015 10:21 AM, \"Ivan Brusic\" ivan@brusic.com wrote:\n\n> Venkata, it is no different than any other git open source project. Clone\n> the repo, create a new branch, commit your changes (make sure you squash\n> your commits into a single one), and then issue a pull request. Add many\n> tests.\n> \n> Befriend elastic devs on irc and the mailing list so that you can give\n> some visibility to your change.\n> \n> This feature would be great to have. It feels like most do not use\n> elasticsearch for searching! Tuning is a skill.\n>  On Jun 19, 2015 10:15 AM, \"Venkata Vineel\" notifications@github.com\n> wrote:\n> \n> > @brusic https://github.com/brusic This will be my first contribution\n> > to Elastic Search code base. I would like to work on this , if its approved\n> > as a feature request.I have the code set-up in Eclipse. Are there any other\n> > steps required to get started.If you know, how to start on this particular\n> > task, please let me know.\n> > \n> > —\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/elastic/elasticsearch/issues/2867#issuecomment-113342613\n> > .\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115093452","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115093452","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115093452,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTA5MzQ1Mg==","user":{"login":"brusic","id":354105,"node_id":"MDQ6VXNlcjM1NDEwNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/354105?v=4","gravatar_id":"","url":"https://api.github.com/users/brusic","html_url":"https://github.com/brusic","followers_url":"https://api.github.com/users/brusic/followers","following_url":"https://api.github.com/users/brusic/following{/other_user}","gists_url":"https://api.github.com/users/brusic/gists{/gist_id}","starred_url":"https://api.github.com/users/brusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brusic/subscriptions","organizations_url":"https://api.github.com/users/brusic/orgs","repos_url":"https://api.github.com/users/brusic/repos","events_url":"https://api.github.com/users/brusic/events{/privacy}","received_events_url":"https://api.github.com/users/brusic/received_events","type":"User","site_admin":false},"created_at":"2015-06-25T03:52:53Z","updated_at":"2015-06-25T03:52:53Z","author_association":"CONTRIBUTOR","body":"Finally read the Sphinx website and it seems like it does not do anything special. SPH_RANK_PROXIMITY_BM25 is just a scored phrase query while using the scaled TF values calculated by BM25. The two concepts are orthogonal.\n\nAlso judging by my quick read, Lucene's sloppy phrase freq scoring is more detailed and granular than Sphinx's longest common sub-sequence (LCS).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115182134","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115182134","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115182134,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTE4MjEzNA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-06-25T09:26:17Z","updated_at":"2015-06-25T09:26:17Z","author_association":"CONTRIBUTOR","body":"thanks for investigating @brusic - I'm going to close this one\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115217399","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115217399","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115217399,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTIxNzM5OQ==","user":{"login":"brusic","id":354105,"node_id":"MDQ6VXNlcjM1NDEwNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/354105?v=4","gravatar_id":"","url":"https://api.github.com/users/brusic","html_url":"https://github.com/brusic","followers_url":"https://api.github.com/users/brusic/followers","following_url":"https://api.github.com/users/brusic/following{/other_user}","gists_url":"https://api.github.com/users/brusic/gists{/gist_id}","starred_url":"https://api.github.com/users/brusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brusic/subscriptions","organizations_url":"https://api.github.com/users/brusic/orgs","repos_url":"https://api.github.com/users/brusic/repos","events_url":"https://api.github.com/users/brusic/events{/privacy}","received_events_url":"https://api.github.com/users/brusic/received_events","type":"User","site_admin":false},"created_at":"2015-06-25T11:39:59Z","updated_at":"2015-06-25T11:39:59Z","author_association":"CONTRIBUTOR","body":"Someone please correct me if I am wrong. I haven't even installed Sphinx, but that is my take on things.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115234762","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115234762","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115234762,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTIzNDc2Mg==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-06-25T12:30:59Z","updated_at":"2015-06-25T12:30:59Z","author_association":"CONTRIBUTOR","body":"Yes, in general here such hacks to BM25 are usually defined as only working on the highest portion of the top-N results[1][2].\n\nSo I think any work around this should be done as a rescorer, not a lucene similarity. Today you can already use a `query` rescorer with a sloppy phrase query to do this, see the examples in the documentation[3]. \n\nI do think it would be good to have rescorer implementations with maybe a better formula than sloppy phrase query, but that is also not obvious since there are still so many varying approaches out there, and all seem kinda ad-hoc. Personally, I don't see any winners, especially since BM25 has term independence assumptions baked in...\n1. http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.174.8359\n2. http://research.microsoft.com/pubs/144542/ppm.pdf\n3. https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-rescore.html\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115434664","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115434664","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115434664,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTQzNDY2NA==","user":{"login":"kshnurov","id":498185,"node_id":"MDQ6VXNlcjQ5ODE4NQ==","avatar_url":"https://avatars2.githubusercontent.com/u/498185?v=4","gravatar_id":"","url":"https://api.github.com/users/kshnurov","html_url":"https://github.com/kshnurov","followers_url":"https://api.github.com/users/kshnurov/followers","following_url":"https://api.github.com/users/kshnurov/following{/other_user}","gists_url":"https://api.github.com/users/kshnurov/gists{/gist_id}","starred_url":"https://api.github.com/users/kshnurov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kshnurov/subscriptions","organizations_url":"https://api.github.com/users/kshnurov/orgs","repos_url":"https://api.github.com/users/kshnurov/repos","events_url":"https://api.github.com/users/kshnurov/events{/privacy}","received_events_url":"https://api.github.com/users/kshnurov/received_events","type":"User","site_admin":false},"created_at":"2015-06-26T00:05:11Z","updated_at":"2015-06-26T00:05:11Z","author_association":"NONE","body":"@brusic you're wrong, Lucene's sloppy phrase freq scoring works _only_ for sloppy phrase and span queries. Scoring we're talking about would require putting `n! (n = words count)` or ever more different phrase queries into 1 request.\n\n@clintongormley please reopen this issue. What we need is a rescorer, as @rmuir said, that will add LCS or any similar algorithm on top of the default ranking. It's very simple and probably could be done with scripting, but script won't be fast at all.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115435076","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115435076","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115435076,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTQzNTA3Ng==","user":{"login":"kshnurov","id":498185,"node_id":"MDQ6VXNlcjQ5ODE4NQ==","avatar_url":"https://avatars2.githubusercontent.com/u/498185?v=4","gravatar_id":"","url":"https://api.github.com/users/kshnurov","html_url":"https://github.com/kshnurov","followers_url":"https://api.github.com/users/kshnurov/followers","following_url":"https://api.github.com/users/kshnurov/following{/other_user}","gists_url":"https://api.github.com/users/kshnurov/gists{/gist_id}","starred_url":"https://api.github.com/users/kshnurov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kshnurov/subscriptions","organizations_url":"https://api.github.com/users/kshnurov/orgs","repos_url":"https://api.github.com/users/kshnurov/repos","events_url":"https://api.github.com/users/kshnurov/events{/privacy}","received_events_url":"https://api.github.com/users/kshnurov/received_events","type":"User","site_admin":false},"created_at":"2015-06-26T00:07:30Z","updated_at":"2015-06-26T00:07:30Z","author_association":"NONE","body":"Once again, here's the algorithm. We already have `doc_bm25` value in ES, all we need is to calculate and add `doc_phrase_weight`.\n\n```\ndoc_phrase_weight = 0\nforeach ( field in matching_fields )\n{\n   field_phrase_weight = max_common_subsequence_length ( query, field )\n   doc_phrase_weight += user_weight ( field ) * field_phrase_weight\n}\n\nweight = doc_phrase_weight*1000 + integer(doc_bm25*999)\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115435393","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115435393","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115435393,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTQzNTM5Mw==","user":{"login":"kshnurov","id":498185,"node_id":"MDQ6VXNlcjQ5ODE4NQ==","avatar_url":"https://avatars2.githubusercontent.com/u/498185?v=4","gravatar_id":"","url":"https://api.github.com/users/kshnurov","html_url":"https://github.com/kshnurov","followers_url":"https://api.github.com/users/kshnurov/followers","following_url":"https://api.github.com/users/kshnurov/following{/other_user}","gists_url":"https://api.github.com/users/kshnurov/gists{/gist_id}","starred_url":"https://api.github.com/users/kshnurov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kshnurov/subscriptions","organizations_url":"https://api.github.com/users/kshnurov/orgs","repos_url":"https://api.github.com/users/kshnurov/repos","events_url":"https://api.github.com/users/kshnurov/events{/privacy}","received_events_url":"https://api.github.com/users/kshnurov/received_events","type":"User","site_admin":false},"created_at":"2015-06-26T00:10:36Z","updated_at":"2015-06-26T00:10:36Z","author_association":"NONE","body":"And the LCS algorithm could be found here, it's also quite simple, you just need to add it into ES: https://en.wikibooks.org/wiki/Algorithm_Implementation/Strings/Longest_common_subsequence#Java\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115670292","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115670292","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115670292,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTY3MDI5Mg==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-06-26T12:54:24Z","updated_at":"2015-06-26T12:54:24Z","author_association":"CONTRIBUTOR","body":"> Once again, here's the algorithm.\n\nHold your horses, where are IR tests for \"your algorithm\". By default, I'm telling you this algorithm sucks, unless you can prove otherwise. Don't be offended: this is how it works. You have to defend it with some results, otherwise we should not waste our time.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115720272","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115720272","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115720272,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTcyMDI3Mg==","user":{"login":"kshnurov","id":498185,"node_id":"MDQ6VXNlcjQ5ODE4NQ==","avatar_url":"https://avatars2.githubusercontent.com/u/498185?v=4","gravatar_id":"","url":"https://api.github.com/users/kshnurov","html_url":"https://github.com/kshnurov","followers_url":"https://api.github.com/users/kshnurov/followers","following_url":"https://api.github.com/users/kshnurov/following{/other_user}","gists_url":"https://api.github.com/users/kshnurov/gists{/gist_id}","starred_url":"https://api.github.com/users/kshnurov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kshnurov/subscriptions","organizations_url":"https://api.github.com/users/kshnurov/orgs","repos_url":"https://api.github.com/users/kshnurov/repos","events_url":"https://api.github.com/users/kshnurov/events{/privacy}","received_events_url":"https://api.github.com/users/kshnurov/received_events","type":"User","site_admin":false},"created_at":"2015-06-26T15:03:09Z","updated_at":"2015-06-26T15:03:09Z","author_association":"NONE","body":"@rmuir have you at all read this issue before coming and saying 'it sucks'? There's a link to a solid report and tests in [2nd comment](https://github.com/elastic/elasticsearch/issues/2867#issuecomment-16013137): http://stefan.buettcher.org/papers/buettcher_2006_term_proximity.pdf\n\nYou can find a lot more in 10 seconds, if all of this serious reports from well-known companies and universities (and the fact that it's been a default ranking method in Sphinx for years) isn't enough for you:\nhttp://www.researchgate.net/publication/225174089_Term_Proximity_Scoring_for_Keyword-Based_Retrieval_Systems\nhttp://research.microsoft.com/pubs/144542/ppm.pdf\nhttp://sifaka.cs.uiuc.edu/czhai/pub/sigir07-prox.pdf\nhttp://ir.dcs.gla.ac.uk/~ronanc/papers/cumminsSIGIR09.pdf\nhttp://people.mpi-inf.mpg.de/~mtb/pub/proximity-spire07.pdf\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115734278","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115734278","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115734278,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTczNDI3OA==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-06-26T15:36:47Z","updated_at":"2015-06-26T15:36:47Z","author_association":"CONTRIBUTOR","body":"None of that is good enough for me, its a bogus argument: you link to a bunch of completely different algorithms, different than what you propose.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115741184","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115741184","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115741184,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTc0MTE4NA==","user":{"login":"kshnurov","id":498185,"node_id":"MDQ6VXNlcjQ5ODE4NQ==","avatar_url":"https://avatars2.githubusercontent.com/u/498185?v=4","gravatar_id":"","url":"https://api.github.com/users/kshnurov","html_url":"https://github.com/kshnurov","followers_url":"https://api.github.com/users/kshnurov/followers","following_url":"https://api.github.com/users/kshnurov/following{/other_user}","gists_url":"https://api.github.com/users/kshnurov/gists{/gist_id}","starred_url":"https://api.github.com/users/kshnurov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kshnurov/subscriptions","organizations_url":"https://api.github.com/users/kshnurov/orgs","repos_url":"https://api.github.com/users/kshnurov/repos","events_url":"https://api.github.com/users/kshnurov/events{/privacy}","received_events_url":"https://api.github.com/users/kshnurov/received_events","type":"User","site_admin":false},"created_at":"2015-06-26T16:01:31Z","updated_at":"2015-06-26T16:01:31Z","author_association":"NONE","body":"@rmuir saying \"it sucks\" and \"is not good enough for me\" without saying what is enough and doesn't sucks won't make it move. These links provide more than enough info about why term proximity is important and a lot of algorithms to choose from (with proof and tests, as you requested). \n\nSounds like you just don't wanna do anything, since you didn't even spent enough time on reading this links. Saying about Sphinx being a 'bogus argument' is completely weird. @s1monw @clintongormley could you please join and make this conversation constructive, not a \"I'm a pro, everything sucks\" performance?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115742493","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115742493","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115742493,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTc0MjQ5Mw==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-06-26T16:06:54Z","updated_at":"2015-06-26T16:06:54Z","author_association":"CONTRIBUTOR","body":"Again, the onus is not on me to prove that your proposed algorithm sucks. thats not how it works.\n\nYou have to prove that its better.\n\nWe don't need to try to copy what sphinx does. In general, its probably best to do the exact opposite. They do stupid things like removing length normalization completely.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115743445","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115743445","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115743445,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTc0MzQ0NQ==","user":{"login":"brusic","id":354105,"node_id":"MDQ6VXNlcjM1NDEwNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/354105?v=4","gravatar_id":"","url":"https://api.github.com/users/brusic","html_url":"https://github.com/brusic","followers_url":"https://api.github.com/users/brusic/followers","following_url":"https://api.github.com/users/brusic/following{/other_user}","gists_url":"https://api.github.com/users/brusic/gists{/gist_id}","starred_url":"https://api.github.com/users/brusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brusic/subscriptions","organizations_url":"https://api.github.com/users/brusic/orgs","repos_url":"https://api.github.com/users/brusic/repos","events_url":"https://api.github.com/users/brusic/events{/privacy}","received_events_url":"https://api.github.com/users/brusic/received_events","type":"User","site_admin":false},"created_at":"2015-06-26T16:11:39Z","updated_at":"2015-06-26T16:29:17Z","author_association":"CONTRIBUTOR","body":"You keep avoiding the fact that Lucene already has proximity scoring. IMHO, a far better one.\n\nSphinx uses LCS, which is a variation of simple edit distance. Lucene uses an exponential function for the decay as the the slop between words increases. Which do you think will be more precise? Look at the second example in the Sphinx documentation. Do you think 1 is the best answer? \n\nThat said, no edit distance method is perfect for every scenario. A query rescorer would be a good place for other methods. \n\nEDIT: do not want to link to the source, but I was able to find a recent blog post about proximity scoring in Lucene. \n\nhttp://sujitpal.blogspot.com/2015/04/scoring-token-distance-in-lucene-sloppy.html\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115747326","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115747326","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115747326,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTc0NzMyNg==","user":{"login":"kshnurov","id":498185,"node_id":"MDQ6VXNlcjQ5ODE4NQ==","avatar_url":"https://avatars2.githubusercontent.com/u/498185?v=4","gravatar_id":"","url":"https://api.github.com/users/kshnurov","html_url":"https://github.com/kshnurov","followers_url":"https://api.github.com/users/kshnurov/followers","following_url":"https://api.github.com/users/kshnurov/following{/other_user}","gists_url":"https://api.github.com/users/kshnurov/gists{/gist_id}","starred_url":"https://api.github.com/users/kshnurov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kshnurov/subscriptions","organizations_url":"https://api.github.com/users/kshnurov/orgs","repos_url":"https://api.github.com/users/kshnurov/repos","events_url":"https://api.github.com/users/kshnurov/events{/privacy}","received_events_url":"https://api.github.com/users/kshnurov/received_events","type":"User","site_admin":false},"created_at":"2015-06-26T16:30:43Z","updated_at":"2015-06-26T16:30:43Z","author_association":"NONE","body":"@rmuir what will make proof for you if not all of this reports saying and proving that term proximity scoring will dramatically improve text search ranking? Basically you're saying \"all of this professors and experts are stupid, I know better - we shouldn't do anything\".\n\n@brusic yes, Lucene's proximity scoring is even better than LCS, but we can't use it for match queries, as I said above. If we can find a way to use it in conjunction with BM25 without making N! queries - this issue will be solved.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115748873","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115748873","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115748873,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTc0ODg3Mw==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-06-26T16:38:47Z","updated_at":"2015-06-26T16:38:47Z","author_association":"CONTRIBUTOR","body":"> @rmuir what will make proof for you if not all of this reports saying and proving that term proximity scoring will dramatically improve text search ranking? Basically you're saying \"all of this professors and experts are stupid, I know better - we shouldn't do anything\"\n\nI don't see dramatic improvements yet anywhere. And the underlying math is still broken and not yet figured out. So yeah, if that's calling people stupid, then i am calling people stupid. Trust me, I am ok with that.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115788181","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115788181","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115788181,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTc4ODE4MQ==","user":{"login":"kshnurov","id":498185,"node_id":"MDQ6VXNlcjQ5ODE4NQ==","avatar_url":"https://avatars2.githubusercontent.com/u/498185?v=4","gravatar_id":"","url":"https://api.github.com/users/kshnurov","html_url":"https://github.com/kshnurov","followers_url":"https://api.github.com/users/kshnurov/followers","following_url":"https://api.github.com/users/kshnurov/following{/other_user}","gists_url":"https://api.github.com/users/kshnurov/gists{/gist_id}","starred_url":"https://api.github.com/users/kshnurov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kshnurov/subscriptions","organizations_url":"https://api.github.com/users/kshnurov/orgs","repos_url":"https://api.github.com/users/kshnurov/repos","events_url":"https://api.github.com/users/kshnurov/events{/privacy}","received_events_url":"https://api.github.com/users/kshnurov/received_events","type":"User","site_admin":false},"created_at":"2015-06-26T17:25:09Z","updated_at":"2015-06-26T17:25:09Z","author_association":"NONE","body":"@rmuir check out this case: https://github.com/elastic/elasticsearch/issues/2867#issuecomment-113305871 Yes, sloppy phrase scoring would make a deal, but isn't it stupid to manually generate N! queries for that?\n\nCan you tell **exactly** what is broken or wrong? You're just making unreasonable statements.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115790449","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115790449","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115790449,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTc5MDQ0OQ==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-06-26T17:26:57Z","updated_at":"2015-06-26T17:26:57Z","author_association":"CONTRIBUTOR","body":"> Can you tell exactly what is broken or wrong?\n\nBM25 formula is based on the assumption that terms are independent. Its as simple as that. We are done here.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115796710","html_url":"https://github.com/elastic/elasticsearch/issues/2867#issuecomment-115796710","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2867","id":115796710,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTc5NjcxMA==","user":{"login":"kshnurov","id":498185,"node_id":"MDQ6VXNlcjQ5ODE4NQ==","avatar_url":"https://avatars2.githubusercontent.com/u/498185?v=4","gravatar_id":"","url":"https://api.github.com/users/kshnurov","html_url":"https://github.com/kshnurov","followers_url":"https://api.github.com/users/kshnurov/followers","following_url":"https://api.github.com/users/kshnurov/following{/other_user}","gists_url":"https://api.github.com/users/kshnurov/gists{/gist_id}","starred_url":"https://api.github.com/users/kshnurov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kshnurov/subscriptions","organizations_url":"https://api.github.com/users/kshnurov/orgs","repos_url":"https://api.github.com/users/kshnurov/repos","events_url":"https://api.github.com/users/kshnurov/events{/privacy}","received_events_url":"https://api.github.com/users/kshnurov/received_events","type":"User","site_admin":false},"created_at":"2015-06-26T17:31:56Z","updated_at":"2015-06-26T17:31:56Z","author_association":"NONE","body":"@rmuir what the hell, have you read anything at all? This is **not about BM25**, it's about taking **term proximity** into account! If you don't like BM25, you can use TF/IDF + term proximity.\n","performed_via_github_app":null}]