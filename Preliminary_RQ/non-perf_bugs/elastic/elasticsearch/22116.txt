{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/22116","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22116/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22116/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22116/events","html_url":"https://github.com/elastic/elasticsearch/issues/22116","id":194978791,"node_id":"MDU6SXNzdWUxOTQ5Nzg3OTE=","number":22116,"title":"Only grant `connect,accept` permissions to `transport-netty4`","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"labels":[{"id":146854632,"node_id":"MDU6TGFiZWwxNDY4NTQ2MzI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Network","name":":Distributed/Network","color":"0e8a16","default":false,"description":"Http and internode communication implementations"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null},{"id":111053151,"node_id":"MDU6TGFiZWwxMTEwNTMxNTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/resiliency","name":"resiliency","color":"009800","default":false,"description":null},{"id":334286612,"node_id":"MDU6TGFiZWwzMzQyODY2MTI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v6.0.0-alpha1","name":"v6.0.0-alpha1","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"tbrooks8","id":862472,"node_id":"MDQ6VXNlcjg2MjQ3Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/862472?v=4","gravatar_id":"","url":"https://api.github.com/users/tbrooks8","html_url":"https://github.com/tbrooks8","followers_url":"https://api.github.com/users/tbrooks8/followers","following_url":"https://api.github.com/users/tbrooks8/following{/other_user}","gists_url":"https://api.github.com/users/tbrooks8/gists{/gist_id}","starred_url":"https://api.github.com/users/tbrooks8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbrooks8/subscriptions","organizations_url":"https://api.github.com/users/tbrooks8/orgs","repos_url":"https://api.github.com/users/tbrooks8/repos","events_url":"https://api.github.com/users/tbrooks8/events{/privacy}","received_events_url":"https://api.github.com/users/tbrooks8/received_events","type":"User","site_admin":false},"assignees":[{"login":"tbrooks8","id":862472,"node_id":"MDQ6VXNlcjg2MjQ3Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/862472?v=4","gravatar_id":"","url":"https://api.github.com/users/tbrooks8","html_url":"https://github.com/tbrooks8","followers_url":"https://api.github.com/users/tbrooks8/followers","following_url":"https://api.github.com/users/tbrooks8/following{/other_user}","gists_url":"https://api.github.com/users/tbrooks8/gists{/gist_id}","starred_url":"https://api.github.com/users/tbrooks8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbrooks8/subscriptions","organizations_url":"https://api.github.com/users/tbrooks8/orgs","repos_url":"https://api.github.com/users/tbrooks8/repos","events_url":"https://api.github.com/users/tbrooks8/events{/privacy}","received_events_url":"https://api.github.com/users/tbrooks8/received_events","type":"User","site_admin":false}],"milestone":null,"comments":35,"created_at":"2016-12-12T13:50:01Z","updated_at":"2017-02-09T22:13:53Z","closed_at":"2017-02-09T22:13:53Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Today we still grant a quite scary permission to [core](https://github.com/elastic/elasticsearch/blob/master/core/src/main/resources/org/elasticsearch/bootstrap/security.policy#L58):\r\n\r\n```\r\n  // Allow connecting to the internet anywhere\r\n  permission java.net.SocketPermission \"*\", \"accept,connect,resolve\";\r\n```\r\n\r\nBut since we now have netty4 moved to a module we can potentially move this to into the modules [security policy](https://github.com/elastic/elasticsearch/blob/master/modules/transport-netty4/src/main/plugin-metadata/plugin-security.policy). Yet, there are a bunch of things that needs fixing until we can do that:\r\n\r\n- [x] since we use [MockTcpTransport](https://github.com/elastic/elasticsearch/blob/master/test/framework/src/main/java/org/elasticsearch/transport/MockTcpTransport.java) from our test framework this needs to have the same permissions granted. Yet, if we just go ahead and grant `accept,connect` to the test-framework we might run into trouble since our tests will just inherit that permission ie. if unit and pseudo integ-tests are run since we don't grant this to a codebase. We might want to add some kind of `MockSocket` project just like [SecureMock](https://github.com/elastic/securemock) that we can grant this permission to and where we can depend on for testing. \r\n- [x] netty-4 still has issues with missing `doPrivileged` blocks that needs fixing\r\n- [x] move URLRepository somewhere else since it uses _connect_ and core shouldn't establish any kind of connection. (this can be a second step, we can first start removing `accept` from the list.\r\n- [x] some other plugins like ec2 / gce etc. might need extra permission to connect to their endpoints which needs manual testing\r\n\r\n\r\nhere is an example of a missing `doPrivileged` block  ie here: \r\n``` \r\n> Throwable #1: java.security.AccessControlException: access denied (\"java.net.SocketPermission\" \"[fe80:0:0:0:0:0:0:1%1]:52661\" \"connect,resolve\")\r\n   > \tat __randomizedtesting.SeedInfo.seed([8FDA867CA1C20E0D:47AB82401EC3F2C5]:0)\r\n   > \tat java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)\r\n   > \tat java.security.AccessController.checkPermission(AccessController.java:884)\r\n   > \tat java.lang.SecurityManager.checkPermission(SecurityManager.java:549)\r\n   > \tat java.lang.SecurityManager.checkConnect(SecurityManager.java:1051)\r\n   > \tat sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:625)\r\n   > \tat io.netty.channel.socket.nio.NioSocketChannel.doConnect(NioSocketChannel.java:331)\r\n   > \tat io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.connect(AbstractNioChannel.java:254)\r\n   > \tat io.netty.channel.DefaultChannelPipeline$HeadContext.connect(DefaultChannelPipeline.java:1266)\r\n   > \tat io.netty.channel.AbstractChannelHandlerContext.invokeConnect(AbstractChannelHandlerContext.java:556)\r\n   > \tat io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:541)\r\n   > \tat io.netty.channel.ChannelOutboundHandlerAdapter.connect(ChannelOutboundHandlerAdapter.java:47)\r\n   > \tat io.netty.channel.AbstractChannelHandlerContext.invokeConnect(AbstractChannelHandlerContext.java:556)\r\n   > \tat io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:541)\r\n   > \tat io.netty.channel.AbstractChannelHandlerContext.connect(AbstractChannelHandlerContext.java:523)\r\n   > \tat io.netty.channel.DefaultChannelPipeline.connect(DefaultChannelPipeline.java:985)\r\n   > \tat io.netty.channel.AbstractChannel.connect(AbstractChannel.java:255)\r\n   > \tat io.netty.bootstrap.Bootstrap$3.run(Bootstrap.java:252)\r\n   > \tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n   > \tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:418)\r\n   > \tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:454)\r\n   > \tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)\r\n   > \tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\r\n   > \tat java.lang.Thread.run(Thread.java:745)\r\n```","closed_by":{"login":"tbrooks8","id":862472,"node_id":"MDQ6VXNlcjg2MjQ3Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/862472?v=4","gravatar_id":"","url":"https://api.github.com/users/tbrooks8","html_url":"https://github.com/tbrooks8","followers_url":"https://api.github.com/users/tbrooks8/followers","following_url":"https://api.github.com/users/tbrooks8/following{/other_user}","gists_url":"https://api.github.com/users/tbrooks8/gists{/gist_id}","starred_url":"https://api.github.com/users/tbrooks8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbrooks8/subscriptions","organizations_url":"https://api.github.com/users/tbrooks8/orgs","repos_url":"https://api.github.com/users/tbrooks8/repos","events_url":"https://api.github.com/users/tbrooks8/events{/privacy}","received_events_url":"https://api.github.com/users/tbrooks8/received_events","type":"User","site_admin":false},"performed_via_github_app":null}