[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/487655004","html_url":"https://github.com/elastic/elasticsearch/issues/41647#issuecomment-487655004","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41647","id":487655004,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzY1NTAwNA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-04-29T16:46:17Z","updated_at":"2019-04-29T16:46:17Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-features","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/488248497","html_url":"https://github.com/elastic/elasticsearch/issues/41647#issuecomment-488248497","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41647","id":488248497,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4ODI0ODQ5Nw==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2019-05-01T10:03:35Z","updated_at":"2019-05-01T10:03:35Z","author_association":"MEMBER","body":"Agreed with your analysis, the high-level REST client should not use new parameters added to existing API in a minor version as that breaks backwards compatibility. The underlying low-level client is not aware of the version of the nodes. Maybe a version based node selector could be used when newly added parameters are used, yet the 6.7 client could potentially be used against a cluster with no 6.7 nodes, in which case such calls won't work. I wonder if the parameter can be removed from these calls.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/488259703","html_url":"https://github.com/elastic/elasticsearch/issues/41647#issuecomment-488259703","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41647","id":488259703,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4ODI1OTcwMw==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2019-05-01T11:19:35Z","updated_at":"2019-05-01T11:19:35Z","author_association":"MEMBER","body":"I think we should default this parameter to null (using a Boolean instead of a boolean).\r\nThat way, unless it's explicitly set, it would not be sent over the wire.\r\n\r\nMy 2 cents.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/489523606","html_url":"https://github.com/elastic/elasticsearch/issues/41647#issuecomment-489523606","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41647","id":489523606,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4OTUyMzYwNg==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2019-05-06T07:25:24Z","updated_at":"2019-05-06T07:25:24Z","author_association":"MEMBER","body":"The rest client is supposed to be forward compatible, we have a note in the documentation regarding this behavior so I would not call this a bug: https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-compatibility.html#java-rest-high-compatibility\r\nThere are a lot of scenarios that can break the compatibility of the client when talking to an older node  and we don't have [rest versioning](https://github.com/elastic/elasticsearch/issues/11184) yet so we could turn the note into a warning in the doc ?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/489537745","html_url":"https://github.com/elastic/elasticsearch/issues/41647#issuecomment-489537745","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41647","id":489537745,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4OTUzNzc0NQ==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2019-05-06T07:59:16Z","updated_at":"2019-05-06T07:59:16Z","author_association":"MEMBER","body":"Thanks @jimczi. So the right way to upgrade an application in production would be:\r\n\r\n* Do the elasticsearch server rolling upgrade to 6.7.x\r\n* Then upgrade the application to the 6.7 client\r\n\r\nYou're right that this is documented. But it looks counter intuitive to me.\r\n\r\nThe problem I have is that I'm building a 3rd party tool which is used by end users. I can't know in advance which elasticsearch server the end user will be using but I'm always trying to use the latest Elasticsearch REST Client version to benefit from all recent changes/fixes.\r\n\r\nWhen I switched to 6.7 client, that broke the compatibility for any user using an older version of elasticsearch.\r\nAs we are not using any rest versioning, I'm already packaging my project [with 3 different artifacts](https://fscrawler.readthedocs.io/en/latest/installation.html):\r\n\r\n* ES 5\r\n* ES 6\r\n* ES 7\r\n\r\nI don't wish having to package all elasticsearch minor versions TBH. \r\n\r\nSo my options are for now:\r\n\r\n* build one version per minor release.\r\n* document that my newest \"ES 6\" version is only compatible with 6.7+ clusters.\r\n* implement again (as I was doing previously) my own HLRestClient based on the LLClient.\r\n\r\nI chose to [document this breaking change](https://fscrawler.readthedocs.io/en/latest/installation.html#upgrade-to-2-7). Unless we decide to provide a more flexible client.\r\n\r\nAnyway as this is documented, I guess I can just close this issue.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/489552577","html_url":"https://github.com/elastic/elasticsearch/issues/41647#issuecomment-489552577","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41647","id":489552577,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4OTU1MjU3Nw==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2019-05-06T08:56:35Z","updated_at":"2019-05-06T08:56:35Z","author_association":"MEMBER","body":"It is true that the most important compatibility aspect for the high level REST client is forward compatibility and that, as we document, it should be the last component to be upgraded. It is expected that e.g. the 6.7 client does not work fine against previous 6.x versions for what concerns APIs that have only been added in 6.7. I think it becomes more annoying if the client starts using in a minor version a new parameter that only 6.7 understands, especially for fundamental APIs like create index. I wonder how the other language clients handled this situation. Also, a different problem to keep in mind for the future: if we have bugfixes in the 6.7 client, we are forcing users to upgrade their cluster to 6.7 before they can upgrade their clients, which is odd. cc @hub-cap ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/489553382","html_url":"https://github.com/elastic/elasticsearch/issues/41647#issuecomment-489553382","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41647","id":489553382,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4OTU1MzM4Mg==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2019-05-06T08:59:40Z","updated_at":"2019-05-06T08:59:40Z","author_association":"MEMBER","body":"> I wonder how the other language clients handled this situation.\r\n\r\nI believe that optional parameters are not passed to the REST interface. Here `include_type_name` should be set only if the user explicitly set it IMO.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/519702585","html_url":"https://github.com/elastic/elasticsearch/issues/41647#issuecomment-519702585","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41647","id":519702585,"node_id":"MDEyOklzc3VlQ29tbWVudDUxOTcwMjU4NQ==","user":{"login":"linker-c","id":13143624,"node_id":"MDQ6VXNlcjEzMTQzNjI0","avatar_url":"https://avatars2.githubusercontent.com/u/13143624?v=4","gravatar_id":"","url":"https://api.github.com/users/linker-c","html_url":"https://github.com/linker-c","followers_url":"https://api.github.com/users/linker-c/followers","following_url":"https://api.github.com/users/linker-c/following{/other_user}","gists_url":"https://api.github.com/users/linker-c/gists{/gist_id}","starred_url":"https://api.github.com/users/linker-c/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/linker-c/subscriptions","organizations_url":"https://api.github.com/users/linker-c/orgs","repos_url":"https://api.github.com/users/linker-c/repos","events_url":"https://api.github.com/users/linker-c/events{/privacy}","received_events_url":"https://api.github.com/users/linker-c/received_events","type":"User","site_admin":false},"created_at":"2019-08-08T21:57:52Z","updated_at":"2019-08-08T21:57:52Z","author_association":"NONE","body":"How do I upgrade from 6.1.1. to 7.3.0 then?\r\nJust a reminder that 6.1.1 has the bug where \"_doc\" cannot be used as type; therefore, I am using \"doc\" which needs to be replaced to \"_doc\".  \r\nThe rolling upgrade is 5.6 -> 6.8.  And 6.8 -> 7.3.\r\nSo I have to upgrade in the following procedure:\r\n1) Upgrade my ES clusters to 6.8.2 first while using older REST.\r\n2) Wait for code to replace \"doc\" to \"_doc\" with new index (monthly index).  \r\n3) Upgrade HLClient to 6.8.2\r\n4) Then upgrade ES cluster from 6.8.2 to 7.3.0\r\n5) Upgrade HLClient to 7.3.0\r\n\r\nIs this the correct procedure?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/620423948","html_url":"https://github.com/elastic/elasticsearch/issues/41647#issuecomment-620423948","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41647","id":620423948,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMDQyMzk0OA==","user":{"login":"Tasselmi","id":12438278,"node_id":"MDQ6VXNlcjEyNDM4Mjc4","avatar_url":"https://avatars0.githubusercontent.com/u/12438278?v=4","gravatar_id":"","url":"https://api.github.com/users/Tasselmi","html_url":"https://github.com/Tasselmi","followers_url":"https://api.github.com/users/Tasselmi/followers","following_url":"https://api.github.com/users/Tasselmi/following{/other_user}","gists_url":"https://api.github.com/users/Tasselmi/gists{/gist_id}","starred_url":"https://api.github.com/users/Tasselmi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tasselmi/subscriptions","organizations_url":"https://api.github.com/users/Tasselmi/orgs","repos_url":"https://api.github.com/users/Tasselmi/repos","events_url":"https://api.github.com/users/Tasselmi/events{/privacy}","received_events_url":"https://api.github.com/users/Tasselmi/received_events","type":"User","site_admin":false},"created_at":"2020-04-28T07:10:06Z","updated_at":"2020-04-28T07:10:06Z","author_association":"NONE","body":"> The rest client is supposed to be forward compatible, we have a note in the documentation regarding this behavior so I would not call this a bug: https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-compatibility.html#java-rest-high-compatibility\r\n> There are a lot of scenarios that can break the compatibility of the client when talking to an older node and we don't have [rest versioning](https://github.com/elastic/elasticsearch/issues/11184) yet so we could turn the note into a warning in the doc ?\r\n\r\nwhat sucks is your forward compatibility but not backward compatibility, what do you think ?\r\nwhen I use ES java client API, there are so many compatibility problems by users.  \r\nIt is never easy to upgrade the server, but  it is easy to upgrade the client. \r\nforward compatibility is totally nonsense and foolish.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/620687860","html_url":"https://github.com/elastic/elasticsearch/issues/41647#issuecomment-620687860","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41647","id":620687860,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMDY4Nzg2MA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2020-04-28T15:44:32Z","updated_at":"2020-04-28T15:44:32Z","author_association":"MEMBER","body":"@Tasselmi Please use more constructive language. You can communicate without being dismissive and insulting.","performed_via_github_app":null}]