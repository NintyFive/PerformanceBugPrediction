{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/15728","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15728/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15728/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15728/events","html_url":"https://github.com/elastic/elasticsearch/issues/15728","id":124473567,"node_id":"MDU6SXNzdWUxMjQ0NzM1Njc=","number":15728,"title":"Return an aggregated view of all mappings/properties of all types","user":{"login":"Mogztter","id":333276,"node_id":"MDQ6VXNlcjMzMzI3Ng==","avatar_url":"https://avatars3.githubusercontent.com/u/333276?v=4","gravatar_id":"","url":"https://api.github.com/users/Mogztter","html_url":"https://github.com/Mogztter","followers_url":"https://api.github.com/users/Mogztter/followers","following_url":"https://api.github.com/users/Mogztter/following{/other_user}","gists_url":"https://api.github.com/users/Mogztter/gists{/gist_id}","starred_url":"https://api.github.com/users/Mogztter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mogztter/subscriptions","organizations_url":"https://api.github.com/users/Mogztter/orgs","repos_url":"https://api.github.com/users/Mogztter/repos","events_url":"https://api.github.com/users/Mogztter/events{/privacy}","received_events_url":"https://api.github.com/users/Mogztter/received_events","type":"User","site_admin":false},"labels":[{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2015-12-31T14:04:34Z","updated_at":"2016-04-14T09:49:59Z","closed_at":"2016-04-14T09:49:59Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Currently we can retrieve all mappings and properties of all types with `_cluster/state` but the response size is proportional to the number of indices.\n\nMost of the time (and I think this is mandatory in Elastcicsearch 2.x) field mappings are consistent between types, so we should be able to create an aggregated view that way the response size will be proportional to the number of properties and types (but not to the number of indices).\n\n.API proposal to retrieve an aggregated view of all mappings\n\n```\nhttp://localhost:9200/_cluster/state/metadata?level=mappings\n```\n\n``` json\n{\n  \"cluster_name\": \"superheroes\",\n  \"metadata\": {\n    \"mappings\": {\n      \"hadoop-hdfs\": {\n        \"_source\": {},\n        \"dynamic_templates\": [],\n        \"_size\": {},\n        \"properties\": {},\n        \"_all\": {}\n      },\n      \"jboss-boot\": {\n        \"_source\": {},\n        \"dynamic_templates\": [],\n        \"_size\": {},\n        \"properties\": {},\n        \"_all\": {}\n      },\n      \"haproxy-error\": {\n        \"_source\": {},\n        \"dynamic_templates\": [],\n        \"_size\": {},\n        \"properties\": {},\n        \"_all\": {}\n      },\n      \"haproxy-info\": {\n        \"_source\": {},\n        \"dynamic_templates\": [],\n        \"_size\": {},\n        \"properties\": {},\n        \"_all\": {}\n      }\n    }\n  }\n}\n```\n\nFollowing the same principle, here is the query to create an aggregated view of all properties:\n\n.API proposal to retrieve an aggregated view of all properties\n\n```\nhttp://localhost:9200/_cluster/state/metadata?level=properties\n```\n\n``` json\n{\n  \"cluster_name\": \"superheroes\",\n  \"metadata\": {\n    \"properties\": {\n      \"tags\": {\n        \"type\": \"string\",\n        \"copy_to\": [\n          \"tag\"\n        ]\n      },\n      \"application\": {\n        \"analyzer\": \"application_analyzer\",\n        \"type\": \"string\"\n      },\n      \"class\": {\n        \"index\": \"not_analyzed\",\n        \"type\": \"string\"\n      },\n      \"@version\": {\n        \"index\": \"no\",\n        \"type\": \"string\"\n      },\n      \"message\": {\n        \"analyzer\": \"log_analyzer\",\n        \"type\": \"string\"\n      },\n      \"@timestamp\": {\n        \"format\": \"date_time\",\n        \"doc_values\": true,\n        \"type\": \"date\"\n      }\n    }\n  }\n}\n```\n\nIf it's necessary we could also report fields/properties conflicts between types (or even indices):\n\n.Conflict on `application` property between two types\n\n``` json\n\"conflicts\": [\n  {\n    \"property\": \"application\",\n    \"first_type\": \"hadoop-hdfs\",\n    \"other_type\": \"jboss-boot\",\n    \"parameter\": [\"analyzer\"]\n  }\n]\n```\n\nI think this will greatly improve the performance of administration/data visualization tool like Kibana or Head plugin when the cluster have many indices (> 100).\n\nWhat do you think ?\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}