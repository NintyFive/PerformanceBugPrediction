{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/30807","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30807/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30807/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30807/events","html_url":"https://github.com/elastic/elasticsearch/issues/30807","id":325642735,"node_id":"MDU6SXNzdWUzMjU2NDI3MzU=","number":30807,"title":"REST test `p0=snapshot.get_repository/10_basic/Verify created repository` fails mixed cluster tests","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"labels":[{"id":143077482,"node_id":"MDU6TGFiZWwxNDMwNzc0ODI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Snapshot/Restore","name":":Distributed/Snapshot/Restore","color":"0e8a16","default":false,"description":"Anything directly related to the `_snapshot/*` APIs"},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":{"login":"hub-cap","id":613352,"node_id":"MDQ6VXNlcjYxMzM1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/613352?v=4","gravatar_id":"","url":"https://api.github.com/users/hub-cap","html_url":"https://github.com/hub-cap","followers_url":"https://api.github.com/users/hub-cap/followers","following_url":"https://api.github.com/users/hub-cap/following{/other_user}","gists_url":"https://api.github.com/users/hub-cap/gists{/gist_id}","starred_url":"https://api.github.com/users/hub-cap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hub-cap/subscriptions","organizations_url":"https://api.github.com/users/hub-cap/orgs","repos_url":"https://api.github.com/users/hub-cap/repos","events_url":"https://api.github.com/users/hub-cap/events{/privacy}","received_events_url":"https://api.github.com/users/hub-cap/received_events","type":"User","site_admin":false},"assignees":[{"login":"hub-cap","id":613352,"node_id":"MDQ6VXNlcjYxMzM1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/613352?v=4","gravatar_id":"","url":"https://api.github.com/users/hub-cap","html_url":"https://github.com/hub-cap","followers_url":"https://api.github.com/users/hub-cap/followers","following_url":"https://api.github.com/users/hub-cap/following{/other_user}","gists_url":"https://api.github.com/users/hub-cap/gists{/gist_id}","starred_url":"https://api.github.com/users/hub-cap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hub-cap/subscriptions","organizations_url":"https://api.github.com/users/hub-cap/orgs","repos_url":"https://api.github.com/users/hub-cap/repos","events_url":"https://api.github.com/users/hub-cap/events{/privacy}","received_events_url":"https://api.github.com/users/hub-cap/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2018-05-23T10:23:23Z","updated_at":"2018-05-31T17:10:02Z","closed_at":"2018-05-31T17:10:02Z","author_association":"MEMBER","active_lock_reason":null,"body":"build URL: https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+master+intake/1956/consoleFull\r\n\r\nThis test is failing regularly on the master branch.\r\n\r\nReproduce command:\r\n```\r\n./gradlew :qa:mixed-cluster:v6.4.0-SNAPSHOT#mixedClusterTestRunner -Dtests.seed=73CB2113C56667F8 -Dtests.class=org.elasticsearch.backwards.MixedClusterClientYamlTestSuiteIT -Dtests.method=\"test {p0=snapshot.get_repository/10_basic/Verify created repository}\" -Dtests.security.manager=true -Dtests.locale=ar-SA -Dtests.timezone=America/Goose_Bay\r\n```\r\n\r\nThis looks like a bwc serialisation issue as it seems that the stream is not being fully read. Possibly due to https://github.com/elastic/elasticsearch/commit/a8cea90e1084983b2d045edae84187fe8708399d ?\r\n\r\n\r\nFailure stack trace:\r\n```\r\n07:52:38   1> [2018-05-23T04:51:16,260][INFO ][o.e.b.MixedClusterClientYamlTestSuiteIT] Stash dump on test failure [{\r\n07:52:38   1>   \"stash\" : {\r\n07:52:38   1>     \"body\" : {\r\n07:52:38   1>       \"error\" : {\r\n07:52:38   1>         \"root_cause\" : [\r\n07:52:38   1>           {\r\n07:52:38   1>             \"type\" : \"transport_serialization_exception\",\r\n07:52:38   1>             \"reason\" : \"Failed to deserialize response from handler [org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler]\",\r\n07:52:38   1>             \"stack_trace\" : \"TransportSerializationException[Failed to deserialize response from handler [org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler]]; nested: EOFException[tried to read: 101 bytes but only 62 remaining];\r\n07:52:38   1> \tat org.elasticsearch.transport.TcpTransport.handleResponse(TcpTransport.java:1430)\r\n07:52:38   1> \tat org.elasticsearch.transport.TcpTransport.messageReceived(TcpTransport.java:1389)\r\n07:52:38   1> \tat org.elasticsearch.transport.netty4.Netty4MessageChannelHandler.channelRead(Netty4MessageChannelHandler.java:64)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n07:52:38   1> \tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\r\n07:52:38   1> \tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:297)\r\n07:52:38   1> \tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:413)\r\n07:52:38   1> \tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n07:52:38   1> \tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:241)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n07:52:38   1> \tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n07:52:38   1> \tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)\r\n07:52:38   1> \tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n07:52:38   1> \tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\n07:52:38   1> \tat io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:545)\r\n07:52:38   1> \tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)\r\n07:52:38   1> \tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\n07:52:38   1> \tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n07:52:38   1> \tat java.base/java.lang.Thread.run(Thread.java:844)\r\n07:52:38   1> Caused by: java.io.EOFException: tried to read: 101 bytes but only 62 remaining\r\n07:52:38   1> \tat org.elasticsearch.transport.netty4.ByteBufStreamInput.ensureCanReadBytes(ByteBufStreamInput.java:75)\r\n07:52:38   1> \tat org.elasticsearch.common.io.stream.FilterStreamInput.ensureCanReadBytes(FilterStreamInput.java:80)\r\n07:52:38   1> \tat org.elasticsearch.common.io.stream.StreamInput.readArraySize(StreamInput.java:1010)\r\n07:52:38   1> \tat org.elasticsearch.common.io.stream.StreamInput.readString(StreamInput.java:373)\r\n07:52:38   1> \tat org.elasticsearch.cluster.node.DiscoveryNode.<init>(DiscoveryNode.java:221)\r\n07:52:38   1> \tat org.elasticsearch.action.admin.cluster.repositories.verify.VerifyRepositoryResponse.readFrom(VerifyRepositoryResponse.java:57)\r\n07:52:38   1> \tat org.elasticsearch.transport.TransportResponseHandler.read(TransportResponseHandler.java:47)\r\n07:52:38   1> \tat org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.read(TransportService.java:1082)\r\n07:52:38   1> \tat org.elasticsearch.transport.TcpTransport.handleResponse(TcpTransport.java:1426)\r\n07:52:38   1> \t... 27 more\r\n07:52:38   1> \"\r\n07:52:38   1>           }\r\n07:52:38   1>         ],\r\n07:52:38   1>         \"type\" : \"transport_serialization_exception\",\r\n07:52:38   1>         \"reason\" : \"Failed to deserialize response from handler [org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler]\",\r\n07:52:38   1>         \"caused_by\" : {\r\n07:52:38   1>           \"type\" : \"e_o_f_exception\",\r\n07:52:38   1>           \"reason\" : \"tried to read: 101 bytes but only 62 remaining\",\r\n07:52:38   1>           \"stack_trace\" : \"java.io.EOFException: tried to read: 101 bytes but only 62 remaining\r\n07:52:38   1> \tat org.elasticsearch.transport.netty4.ByteBufStreamInput.ensureCanReadBytes(ByteBufStreamInput.java:75)\r\n07:52:38   1> \tat org.elasticsearch.common.io.stream.FilterStreamInput.ensureCanReadBytes(FilterStreamInput.java:80)\r\n07:52:38   1> \tat org.elasticsearch.common.io.stream.StreamInput.readArraySize(StreamInput.java:1010)\r\n07:52:38   1> \tat org.elasticsearch.common.io.stream.StreamInput.readString(StreamInput.java:373)\r\n07:52:38   1> \tat org.elasticsearch.cluster.node.DiscoveryNode.<init>(DiscoveryNode.java:221)\r\n07:52:38   1> \tat org.elasticsearch.action.admin.cluster.repositories.verify.VerifyRepositoryResponse.readFrom(VerifyRepositoryResponse.java:57)\r\n07:52:38   1> \tat org.elasticsearch.transport.TransportResponseHandler.read(TransportResponseHandler.java:47)\r\n07:52:38   1> \tat org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.read(TransportService.java:1082)\r\n07:52:38   1> \tat org.elasticsearch.transport.TcpTransport.handleResponse(TcpTransport.java:1426)\r\n07:52:38   1> \tat org.elasticsearch.transport.TcpTransport.messageReceived(TcpTransport.java:1389)\r\n07:52:38   1> \tat org.elasticsearch.transport.netty4.Netty4MessageChannelHandler.channelRead(Netty4MessageChannelHandler.java:64)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n07:52:38   1> \tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\r\n07:52:38   1> \tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:297)\r\n07:52:38   1> \tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:413)\r\n07:52:38   1> \tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n07:52:38   1> \tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:241)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n07:52:38   1> \tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n07:52:38   1> \tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)\r\n07:52:38   1> \tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n07:52:38   1> \tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\n07:52:38   1> \tat io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:545)\r\n07:52:38   1> \tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)\r\n07:52:38   1> \tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\n07:52:38   1> \tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n07:52:38   1> \tat java.base/java.lang.Thread.run(Thread.java:844)\r\n07:52:38   1> \"\r\n07:52:38   1>         },\r\n07:52:38   1>         \"stack_trace\" : \"TransportSerializationException[Failed to deserialize response from handler [org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler]]; nested: EOFException[tried to read: 101 bytes but only 62 remaining];\r\n07:52:38   1> \tat org.elasticsearch.transport.TcpTransport.handleResponse(TcpTransport.java:1430)\r\n07:52:38   1> \tat org.elasticsearch.transport.TcpTransport.messageReceived(TcpTransport.java:1389)\r\n07:52:38   1> \tat org.elasticsearch.transport.netty4.Netty4MessageChannelHandler.channelRead(Netty4MessageChannelHandler.java:64)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n07:52:38   1> \tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\r\n07:52:38   1> \tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:297)\r\n07:52:38   1> \tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:413)\r\n07:52:38   1> \tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n07:52:38   1> \tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:241)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n07:52:38   1> \tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n07:52:38   1> \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n07:52:38   1> \tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)\r\n07:52:38   1> \tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n07:52:38   1> \tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\n07:52:38   1> \tat io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:545)\r\n07:52:38   1> \tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)\r\n07:52:38   1> \tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\n07:52:38   1> \tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n07:52:38   1> \tat java.base/java.lang.Thread.run(Thread.java:844)\r\n07:52:38   1> Caused by: java.io.EOFException: tried to read: 101 bytes but only 62 remaining\r\n07:52:38   1> \tat org.elasticsearch.transport.netty4.ByteBufStreamInput.ensureCanReadBytes(ByteBufStreamInput.java:75)\r\n07:52:38   1> \tat org.elasticsearch.common.io.stream.FilterStreamInput.ensureCanReadBytes(FilterStreamInput.java:80)\r\n07:52:38   1> \tat org.elasticsearch.common.io.stream.StreamInput.readArraySize(StreamInput.java:1010)\r\n07:52:38   1> \tat org.elasticsearch.common.io.stream.StreamInput.readString(StreamInput.java:373)\r\n07:52:38   1> \tat org.elasticsearch.cluster.node.DiscoveryNode.<init>(DiscoveryNode.java:221)\r\n07:52:38   1> \tat org.elasticsearch.action.admin.cluster.repositories.verify.VerifyRepositoryResponse.readFrom(VerifyRepositoryResponse.java:57)\r\n07:52:38   1> \tat org.elasticsearch.transport.TransportResponseHandler.read(TransportResponseHandler.java:47)\r\n07:52:38   1> \tat org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.read(TransportService.java:1082)\r\n07:52:38   1> \tat org.elasticsearch.transport.TcpTransport.handleResponse(TcpTransport.java:1426)\r\n07:52:38   1> \t... 27 more\r\n07:52:38   1> \"\r\n07:52:38   1>       },\r\n07:52:38   1>       \"status\" : 500\r\n07:52:38   1>     }\r\n07:52:38   1>   }\r\n07:52:38   1> }]\r\n```","closed_by":{"login":"hub-cap","id":613352,"node_id":"MDQ6VXNlcjYxMzM1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/613352?v=4","gravatar_id":"","url":"https://api.github.com/users/hub-cap","html_url":"https://github.com/hub-cap","followers_url":"https://api.github.com/users/hub-cap/followers","following_url":"https://api.github.com/users/hub-cap/following{/other_user}","gists_url":"https://api.github.com/users/hub-cap/gists{/gist_id}","starred_url":"https://api.github.com/users/hub-cap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hub-cap/subscriptions","organizations_url":"https://api.github.com/users/hub-cap/orgs","repos_url":"https://api.github.com/users/hub-cap/repos","events_url":"https://api.github.com/users/hub-cap/events{/privacy}","received_events_url":"https://api.github.com/users/hub-cap/received_events","type":"User","site_admin":false},"performed_via_github_app":null}