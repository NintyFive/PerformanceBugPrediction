[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/145669195","html_url":"https://github.com/elastic/elasticsearch/issues/13951#issuecomment-145669195","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13951","id":145669195,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTY2OTE5NQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2015-10-05T21:09:36Z","updated_at":"2015-10-05T21:09:36Z","author_association":"MEMBER","body":"The values are mostly already compressed in lucene. For example, if your values range from -1 to 253, only a single byte should be used (depends on what features you have enabled for the field eg indexed, stored, doc values).\n\nI don't think we should complicate the api with more types. Other than input validation (which the user can do on their end), the different types for long/int/short/byte don't matter to lucene. They are simply numeric and we will represent them according to the values seen. I would rather see the ability to set the valid range of values in the mapping, and limit to just \"integral\" and \"floating point\" field types. (Granted the types do matter for fielddata, but with doc values by default for 2.0 this doesn't really matter anymore).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/145861177","html_url":"https://github.com/elastic/elasticsearch/issues/13951#issuecomment-145861177","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13951","id":145861177,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTg2MTE3Nw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-10-06T13:47:54Z","updated_at":"2015-10-06T13:47:54Z","author_association":"CONTRIBUTOR","body":"> Granted the types do matter for fielddata\n\nActually they don't, so even on 1.x things are just fine.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/145942705","html_url":"https://github.com/elastic/elasticsearch/issues/13951#issuecomment-145942705","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13951","id":145942705,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTk0MjcwNQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-10-06T17:45:22Z","updated_at":"2015-10-06T17:45:22Z","author_association":"CONTRIBUTOR","body":"I think the only time that type may be relevant is when you want to use an unsigned long that doesn't fit into the range of a signed long?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/145945987","html_url":"https://github.com/elastic/elasticsearch/issues/13951#issuecomment-145945987","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13951","id":145945987,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTk0NTk4Nw==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2015-10-06T17:55:04Z","updated_at":"2015-10-06T17:55:04Z","author_association":"MEMBER","body":"Once we get BigDecimal support it becomes irrelevant I think? I would rather wait for that (hopefully not too long now with BKD going into lucene core soon) than add something the the api right now that would require complex internal changes (how do you represent an unsigned long without BigDecimal in java?).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/145947257","html_url":"https://github.com/elastic/elasticsearch/issues/13951#issuecomment-145947257","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13951","id":145947257,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTk0NzI1Nw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-10-06T18:00:22Z","updated_at":"2015-10-06T18:00:22Z","author_association":"CONTRIBUTOR","body":"++\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/145954972","html_url":"https://github.com/elastic/elasticsearch/issues/13951#issuecomment-145954972","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13951","id":145954972,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTk1NDk3Mg==","user":{"login":"bra-fsn","id":820331,"node_id":"MDQ6VXNlcjgyMDMzMQ==","avatar_url":"https://avatars2.githubusercontent.com/u/820331?v=4","gravatar_id":"","url":"https://api.github.com/users/bra-fsn","html_url":"https://github.com/bra-fsn","followers_url":"https://api.github.com/users/bra-fsn/followers","following_url":"https://api.github.com/users/bra-fsn/following{/other_user}","gists_url":"https://api.github.com/users/bra-fsn/gists{/gist_id}","starred_url":"https://api.github.com/users/bra-fsn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bra-fsn/subscriptions","organizations_url":"https://api.github.com/users/bra-fsn/orgs","repos_url":"https://api.github.com/users/bra-fsn/repos","events_url":"https://api.github.com/users/bra-fsn/events{/privacy}","received_events_url":"https://api.github.com/users/bra-fsn/received_events","type":"User","site_admin":false},"created_at":"2015-10-06T18:25:20Z","updated_at":"2015-10-06T18:25:20Z","author_association":"NONE","body":"@clintongormley: Currently, I have to use cases:\n1. I have several unsigned int fields, which I can't express with signed integer. If I set them to long, the \"binding\" part of the ES schema (mapping) disappears, the devs think that it's a long and handle it accordingly. Apps break if anybody writes a value which can't be expressed in unsigned int space.\n2. Yes, unsigned long is another (big :) problem. I have to do math or express them as strings, but I lose the arithmetic operators then (search for ranges etc)\nAnd third (which I couldn't think ES will ever support): arbitrary size numbers. For example I store several 128, 256, 384 and 512 bit hash values.\nNow I can only do this with:\n1. split numbers (into 64 bits and I have to do unsigned-signed-unsigned conversions)\n2. num to string encoding\n3. hex storage as string\n4. binary storage (base64)\nInstead of writing a 512 bit number...\n\nAs far as I can remember, 1 and 2 was the most space efficient (storing several billions, so space matters), but having an arbitrary sized integer would be the best.\n\nSo my point is:\n1. having different (unsigned/signed) types helps in keeping consistency (value range enforcement) across different users - sometimes there are just too much devs hanging around\n2. having a bigdecimal would also be a big advantage\n\nThanks,\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/145956721","html_url":"https://github.com/elastic/elasticsearch/issues/13951#issuecomment-145956721","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13951","id":145956721,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTk1NjcyMQ==","user":{"login":"bra-fsn","id":820331,"node_id":"MDQ6VXNlcjgyMDMzMQ==","avatar_url":"https://avatars2.githubusercontent.com/u/820331?v=4","gravatar_id":"","url":"https://api.github.com/users/bra-fsn","html_url":"https://github.com/bra-fsn","followers_url":"https://api.github.com/users/bra-fsn/followers","following_url":"https://api.github.com/users/bra-fsn/following{/other_user}","gists_url":"https://api.github.com/users/bra-fsn/gists{/gist_id}","starred_url":"https://api.github.com/users/bra-fsn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bra-fsn/subscriptions","organizations_url":"https://api.github.com/users/bra-fsn/orgs","repos_url":"https://api.github.com/users/bra-fsn/repos","events_url":"https://api.github.com/users/bra-fsn/events{/privacy}","received_events_url":"https://api.github.com/users/bra-fsn/received_events","type":"User","site_admin":false},"created_at":"2015-10-06T18:30:26Z","updated_at":"2015-10-06T18:30:26Z","author_association":"NONE","body":"@rjernst: \"(how do you represent an unsigned long without BigDecimal in java?)\"\nWith BigInteger? :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/145958076","html_url":"https://github.com/elastic/elasticsearch/issues/13951#issuecomment-145958076","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13951","id":145958076,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTk1ODA3Ng==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2015-10-06T18:34:51Z","updated_at":"2015-10-06T18:34:51Z","author_association":"MEMBER","body":"> 1. having different (unsigned/signed) types helps in keeping consistency (value range enforcement) across different users - sometimes there are just too much devs hanging around\n\nSee my comments before. Would the problem you have with storing an unsigned int in a long be handled by allowing you to set the minimum and maximum value allowed on numeric types? This way it could be a long, but you set 0 as the min and max unsigned int as the max. The only limitation (for now, until we have bigint/decimal support) would be you still could not represent anything outside of min/max signed long.\n\n> 1. having a bigdecimal would also be a big advantage\n\nSee the issue #5683, and the latest lucene issue to support this, https://issues.apache.org/jira/browse/LUCENE-6825\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/145960259","html_url":"https://github.com/elastic/elasticsearch/issues/13951#issuecomment-145960259","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13951","id":145960259,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTk2MDI1OQ==","user":{"login":"bra-fsn","id":820331,"node_id":"MDQ6VXNlcjgyMDMzMQ==","avatar_url":"https://avatars2.githubusercontent.com/u/820331?v=4","gravatar_id":"","url":"https://api.github.com/users/bra-fsn","html_url":"https://github.com/bra-fsn","followers_url":"https://api.github.com/users/bra-fsn/followers","following_url":"https://api.github.com/users/bra-fsn/following{/other_user}","gists_url":"https://api.github.com/users/bra-fsn/gists{/gist_id}","starred_url":"https://api.github.com/users/bra-fsn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bra-fsn/subscriptions","organizations_url":"https://api.github.com/users/bra-fsn/orgs","repos_url":"https://api.github.com/users/bra-fsn/repos","events_url":"https://api.github.com/users/bra-fsn/events{/privacy}","received_events_url":"https://api.github.com/users/bra-fsn/received_events","type":"User","site_admin":false},"created_at":"2015-10-06T18:43:44Z","updated_at":"2015-10-06T18:43:44Z","author_association":"NONE","body":"@rjernst: yes, for me having a min/max (and an arbitrary precision integer :) would be enough, given that it won't explode the storage space needs.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148671702","html_url":"https://github.com/elastic/elasticsearch/issues/13951#issuecomment-148671702","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13951","id":148671702,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODY3MTcwMg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-10-16T09:56:46Z","updated_at":"2015-10-16T09:56:46Z","author_association":"CONTRIBUTOR","body":"We just discussed this issue in FixitFriday: we like specifying types using byte,short,int,long better than min and max values.\n\nAnd given that doc values compute dynamically how many bits per value are required, space requirements would be pretty similar between an unsigned int field and a long, so implementing support for unsigned numeric types would not help.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/271897936","html_url":"https://github.com/elastic/elasticsearch/issues/13951#issuecomment-271897936","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13951","id":271897936,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MTg5NzkzNg==","user":{"login":"pjcard","id":8281121,"node_id":"MDQ6VXNlcjgyODExMjE=","avatar_url":"https://avatars2.githubusercontent.com/u/8281121?v=4","gravatar_id":"","url":"https://api.github.com/users/pjcard","html_url":"https://github.com/pjcard","followers_url":"https://api.github.com/users/pjcard/followers","following_url":"https://api.github.com/users/pjcard/following{/other_user}","gists_url":"https://api.github.com/users/pjcard/gists{/gist_id}","starred_url":"https://api.github.com/users/pjcard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjcard/subscriptions","organizations_url":"https://api.github.com/users/pjcard/orgs","repos_url":"https://api.github.com/users/pjcard/repos","events_url":"https://api.github.com/users/pjcard/events{/privacy}","received_events_url":"https://api.github.com/users/pjcard/received_events","type":"User","site_admin":false},"created_at":"2017-01-11T15:26:59Z","updated_at":"2017-01-11T15:26:59Z","author_association":"NONE","body":"@rjernst Thanks for your suggestion, however it won't help us or anyone else indexing 64-bit hashes, our workaround for those at the moment is to store them as a string.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/525849542","html_url":"https://github.com/elastic/elasticsearch/issues/13951#issuecomment-525849542","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13951","id":525849542,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNTg0OTU0Mg==","user":{"login":"bluikko","id":14869000,"node_id":"MDQ6VXNlcjE0ODY5MDAw","avatar_url":"https://avatars0.githubusercontent.com/u/14869000?v=4","gravatar_id":"","url":"https://api.github.com/users/bluikko","html_url":"https://github.com/bluikko","followers_url":"https://api.github.com/users/bluikko/followers","following_url":"https://api.github.com/users/bluikko/following{/other_user}","gists_url":"https://api.github.com/users/bluikko/gists{/gist_id}","starred_url":"https://api.github.com/users/bluikko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bluikko/subscriptions","organizations_url":"https://api.github.com/users/bluikko/orgs","repos_url":"https://api.github.com/users/bluikko/repos","events_url":"https://api.github.com/users/bluikko/events{/privacy}","received_events_url":"https://api.github.com/users/bluikko/received_events","type":"User","site_admin":false},"created_at":"2019-08-28T17:44:25Z","updated_at":"2019-08-28T17:44:25Z","author_association":"NONE","body":"This is a seriously disappointing limitation. 64-bit numbers cannot be stored (since `long` is signed) -- years after this issue was opened.","performed_via_github_app":null}]