[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/76288063","html_url":"https://github.com/elastic/elasticsearch/issues/9910#issuecomment-76288063","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9910","id":76288063,"node_id":"MDEyOklzc3VlQ29tbWVudDc2Mjg4MDYz","user":{"login":"cooniur","id":3030052,"node_id":"MDQ6VXNlcjMwMzAwNTI=","avatar_url":"https://avatars0.githubusercontent.com/u/3030052?v=4","gravatar_id":"","url":"https://api.github.com/users/cooniur","html_url":"https://github.com/cooniur","followers_url":"https://api.github.com/users/cooniur/followers","following_url":"https://api.github.com/users/cooniur/following{/other_user}","gists_url":"https://api.github.com/users/cooniur/gists{/gist_id}","starred_url":"https://api.github.com/users/cooniur/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cooniur/subscriptions","organizations_url":"https://api.github.com/users/cooniur/orgs","repos_url":"https://api.github.com/users/cooniur/repos","events_url":"https://api.github.com/users/cooniur/events{/privacy}","received_events_url":"https://api.github.com/users/cooniur/received_events","type":"User","site_admin":false},"created_at":"2015-02-26T22:25:26Z","updated_at":"2015-02-26T22:42:13Z","author_association":"NONE","body":"Hi, @dadoonet \nThis is another issue happened yesterday at the same time as the other one.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/76362553","html_url":"https://github.com/elastic/elasticsearch/issues/9910#issuecomment-76362553","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9910","id":76362553,"node_id":"MDEyOklzc3VlQ29tbWVudDc2MzYyNTUz","user":{"login":"jprante","id":635745,"node_id":"MDQ6VXNlcjYzNTc0NQ==","avatar_url":"https://avatars1.githubusercontent.com/u/635745?v=4","gravatar_id":"","url":"https://api.github.com/users/jprante","html_url":"https://github.com/jprante","followers_url":"https://api.github.com/users/jprante/followers","following_url":"https://api.github.com/users/jprante/following{/other_user}","gists_url":"https://api.github.com/users/jprante/gists{/gist_id}","starred_url":"https://api.github.com/users/jprante/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jprante/subscriptions","organizations_url":"https://api.github.com/users/jprante/orgs","repos_url":"https://api.github.com/users/jprante/repos","events_url":"https://api.github.com/users/jprante/events{/privacy}","received_events_url":"https://api.github.com/users/jprante/received_events","type":"User","site_admin":false},"created_at":"2015-02-27T09:31:41Z","updated_at":"2015-02-27T09:31:41Z","author_association":"CONTRIBUTOR","body":"I can not reproduce. This script works for me:\n\n```\n@GrabResolver(name='maven', root='http://repo1.maven.org/maven2/')\n@Grab(group='org.elasticsearch', module='elasticsearch', version='1.4.4')\nimport org.elasticsearch.common.settings.Settings\nimport org.elasticsearch.common.settings.ImmutableSettings\nimport org.elasticsearch.common.transport.InetSocketTransportAddress\nimport org.elasticsearch.client.Client\nimport org.elasticsearch.client.transport.TransportClient\nimport org.elasticsearch.action.index.IndexRequestBuilder\nimport org.elasticsearch.action.index.IndexResponse\nimport org.elasticsearch.action.search.SearchRequestBuilder\nimport org.elasticsearch.action.search.SearchResponse\n\nSettings settings = ImmutableSettings.settingsBuilder().put(\"cluster.name\", \"elasticsearch\").build();\nClient client = new TransportClient(settings).addTransportAddress(new InetSocketTransportAddress(\"localhost\", 9300));\n\nString body = \"\"\"{\"name\":\"Hello world\"}\"\"\"\nIndexRequestBuilder indexRequestBuilder = new IndexRequestBuilder(client, \"twitter\")\n            .setType(\"data\")\n            .setId(\"1\")\n            .setSource(body)\n            .setRefresh(true)\nIndexResponse indexResponse = indexRequestBuilder.execute().actionGet()\n\nString jsonQuery = \"\"\"{\"query\":{\"filtered\":{\"filter\":{\"term\":{\"_id\":\"1\"}}}}}\"\"\"\nSearchRequestBuilder requestBuilder = client.prepareSearch(\"twitter\")\n            .setTypes(\"data\")\n            .setSource(jsonQuery)\n\nSearchResponse response = requestBuilder.execute().actionGet() \n\nprintln response.toString()\n```\n\nJVM / Groovy version\n\n```\n[joerg@localhost ~]$ groovy --version\nGroovy Version: 2.4.1 JVM: 1.8.0_31 Vendor: Oracle Corporation OS: Linux\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/76366462","html_url":"https://github.com/elastic/elasticsearch/issues/9910#issuecomment-76366462","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9910","id":76366462,"node_id":"MDEyOklzc3VlQ29tbWVudDc2MzY2NDYy","user":{"login":"cooniur","id":3030052,"node_id":"MDQ6VXNlcjMwMzAwNTI=","avatar_url":"https://avatars0.githubusercontent.com/u/3030052?v=4","gravatar_id":"","url":"https://api.github.com/users/cooniur","html_url":"https://github.com/cooniur","followers_url":"https://api.github.com/users/cooniur/followers","following_url":"https://api.github.com/users/cooniur/following{/other_user}","gists_url":"https://api.github.com/users/cooniur/gists{/gist_id}","starred_url":"https://api.github.com/users/cooniur/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cooniur/subscriptions","organizations_url":"https://api.github.com/users/cooniur/orgs","repos_url":"https://api.github.com/users/cooniur/repos","events_url":"https://api.github.com/users/cooniur/events{/privacy}","received_events_url":"https://api.github.com/users/cooniur/received_events","type":"User","site_admin":false},"created_at":"2015-02-27T09:54:57Z","updated_at":"2015-02-27T09:54:57Z","author_association":"NONE","body":"@jprante \nThank you for the reproduce try!\n\nActually, could you index a few another documents with different ids (say `id=2, 3, 4, ...`), and do the filtered query (`_id=1`) again to see whether the response is the only one document with `id=1` or all the other documents?\n\nIn my case, I got all the documents back instead of the one that I filtered.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/76467214","html_url":"https://github.com/elastic/elasticsearch/issues/9910#issuecomment-76467214","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9910","id":76467214,"node_id":"MDEyOklzc3VlQ29tbWVudDc2NDY3MjE0","user":{"login":"jprante","id":635745,"node_id":"MDQ6VXNlcjYzNTc0NQ==","avatar_url":"https://avatars1.githubusercontent.com/u/635745?v=4","gravatar_id":"","url":"https://api.github.com/users/jprante","html_url":"https://github.com/jprante","followers_url":"https://api.github.com/users/jprante/followers","following_url":"https://api.github.com/users/jprante/following{/other_user}","gists_url":"https://api.github.com/users/jprante/gists{/gist_id}","starred_url":"https://api.github.com/users/jprante/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jprante/subscriptions","organizations_url":"https://api.github.com/users/jprante/orgs","repos_url":"https://api.github.com/users/jprante/repos","events_url":"https://api.github.com/users/jprante/events{/privacy}","received_events_url":"https://api.github.com/users/jprante/received_events","type":"User","site_admin":false},"created_at":"2015-02-27T20:36:55Z","updated_at":"2015-02-27T20:36:55Z","author_association":"CONTRIBUTOR","body":"@coonuir it makes no difference, works as expected here.\n\n```\n@GrabResolver(name='maven', root='http://repo1.maven.org/maven2/')\n@Grab(group='org.elasticsearch', module='elasticsearch', version='1.4.4')\nimport org.elasticsearch.common.settings.Settings\nimport org.elasticsearch.common.settings.ImmutableSettings\nimport org.elasticsearch.common.transport.InetSocketTransportAddress\nimport org.elasticsearch.client.Client\nimport org.elasticsearch.client.transport.TransportClient\nimport org.elasticsearch.action.index.IndexRequestBuilder\nimport org.elasticsearch.action.index.IndexResponse\nimport org.elasticsearch.action.search.SearchRequestBuilder\nimport org.elasticsearch.action.search.SearchResponse\n\nSettings settings = ImmutableSettings.settingsBuilder().put(\"cluster.name\", \"elasticsearch\").build();\nClient client = new TransportClient(settings).addTransportAddress(new InetSocketTransportAddress(\"localhost\", 9300));\n\n[1,2,3,4].each() {\n    String body = \"\"\"{\"name\":\"Hello world ${it}\"}\"\"\"\n    IndexRequestBuilder indexRequestBuilder = new IndexRequestBuilder(client, \"twitter\")\n            .setType(\"data\")\n            .setId(it.toString())\n            .setSource(body)\n            .setRefresh(true)\n    IndexResponse indexResponse = indexRequestBuilder.execute().actionGet()\n}\n\nString jsonQuery = \"\"\"{\"query\":{\"filtered\":{\"filter\":{\"term\":{\"_id\":\"1\"}}}}}\"\"\"\nSearchRequestBuilder requestBuilder = client.prepareSearch(\"twitter\")\n            .setTypes(\"data\")\n            .setSource(jsonQuery)\n\nSearchResponse response = requestBuilder.execute().actionGet()\n\nprintln response.toString()\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/76470779","html_url":"https://github.com/elastic/elasticsearch/issues/9910#issuecomment-76470779","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9910","id":76470779,"node_id":"MDEyOklzc3VlQ29tbWVudDc2NDcwNzc5","user":{"login":"cooniur","id":3030052,"node_id":"MDQ6VXNlcjMwMzAwNTI=","avatar_url":"https://avatars0.githubusercontent.com/u/3030052?v=4","gravatar_id":"","url":"https://api.github.com/users/cooniur","html_url":"https://github.com/cooniur","followers_url":"https://api.github.com/users/cooniur/followers","following_url":"https://api.github.com/users/cooniur/following{/other_user}","gists_url":"https://api.github.com/users/cooniur/gists{/gist_id}","starred_url":"https://api.github.com/users/cooniur/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cooniur/subscriptions","organizations_url":"https://api.github.com/users/cooniur/orgs","repos_url":"https://api.github.com/users/cooniur/repos","events_url":"https://api.github.com/users/cooniur/events{/privacy}","received_events_url":"https://api.github.com/users/cooniur/received_events","type":"User","site_admin":false},"created_at":"2015-02-27T21:00:19Z","updated_at":"2015-02-27T21:17:11Z","author_association":"NONE","body":"@jprante \nI found one tiny difference between your code and mine:\n\nif you add `println requestBuilder` before you execute it, the response would be incorrect.\n\nTry the following and let me know whether you can get the document you filtered (i.e. `id=1`):\n\n```\nSearchRequestBuilder requestBuilder = client.prepareSearch(\"twitter\")\n          .setTypes(\"data\")\n          .setSource(jsonQuery)\n\n// == Add this line ====\nprintln requestBuilder.toString()\n\nSearchResponse response = requestBuilder.execute().actionGet()\nprintln response.toString()\n```\n\n# \n\nMore details:\nThe `toString()` method in `SearchRequestBuilder` is like this:\n\n```\n@Override\npublic String toString() {\n    return internalBuilder().toString();\n}\n```\n\n`internalBuilder()` is:\n\n```\n/**\n * Returns the internal search source builder used to construct the request.\n */\npublic SearchSourceBuilder internalBuilder() {\n    return sourceBuilder();\n}\n```\n\n`sourceBuilder()` is:\n\n```\nprivate SearchSourceBuilder sourceBuilder() {\n    if (sourceBuilder == null) {\n        sourceBuilder = new SearchSourceBuilder();\n    }\n    return sourceBuilder;\n}\n```\n\nSo, the most likely reason is that the JSON string set by `setSource()` gets overridden by the `sourceBuilder`, because calling `setSource()` doesn't initialize the internal `sourceBuilder` object.\n\nI think this is a bug, which is hard to debug and should be fixed. Imagine you use `logger.debug(\"Request is {}\", request)` and it actually erases your query! One would never expect that calling `toString()` method would get the JSON query string erased.\n","performed_via_github_app":null}]