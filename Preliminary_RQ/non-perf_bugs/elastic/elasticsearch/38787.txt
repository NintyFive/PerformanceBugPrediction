{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/38787","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38787/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38787/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38787/events","html_url":"https://github.com/elastic/elasticsearch/issues/38787","id":409350420,"node_id":"MDU6SXNzdWU0MDkzNTA0MjA=","number":38787,"title":"Bug: percentiles aggregation does not behave as expected","user":{"login":"redlus","id":7827282,"node_id":"MDQ6VXNlcjc4MjcyODI=","avatar_url":"https://avatars3.githubusercontent.com/u/7827282?v=4","gravatar_id":"","url":"https://api.github.com/users/redlus","html_url":"https://github.com/redlus","followers_url":"https://api.github.com/users/redlus/followers","following_url":"https://api.github.com/users/redlus/following{/other_user}","gists_url":"https://api.github.com/users/redlus/gists{/gist_id}","starred_url":"https://api.github.com/users/redlus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redlus/subscriptions","organizations_url":"https://api.github.com/users/redlus/orgs","repos_url":"https://api.github.com/users/redlus/repos","events_url":"https://api.github.com/users/redlus/events{/privacy}","received_events_url":"https://api.github.com/users/redlus/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":23715,"node_id":"MDU6TGFiZWwyMzcxNQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Edocs","name":">docs","color":"db755e","default":false,"description":"General docs changes"},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2019-02-12T15:15:51Z","updated_at":"2019-03-27T15:52:07Z","closed_at":"2019-03-27T15:52:07Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nAs [discussed in the forums](https://discuss.elastic.co/t/percentiles-aggregation-does-not-behave-as-expected/164962), we're seeing odd behavior when using the percentiles aggregations, the exact opposite of what is written in the documentation.\r\n\r\n**Elasticsearch version**:\r\n6.3.2\r\n\r\n**Plugins installed**:\r\ningest-geoip\r\ningest-user-agent\r\nmapper-murmur3\r\nmapper-size\r\nrepository-azure\r\nrepository-gcs\r\nrepository-s3\r\n\r\n**JVM version**:\r\nopenjdk 10.0.2 2018-07-17\r\nOpenJDK Runtime Environment 18.3 (build 10.0.2+13)\r\nOpenJDK 64-Bit Server VM 18.3 (build 10.0.2+13, mixed mode)\r\n\r\n**OS version**:\r\nLinux 4.9.0-6-amd64 #1 SMP Debian 4.9.82-1+deb9u3 (2018-03-02) x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nI've been experimenting with percentile aggregations on some dataset after receiving some odd results in elasticsearch 6.3.2.\r\n\r\nMy dataset consists of 467 floating point numbers, which can be found [here](https://pastebin.com/vJxrcq5u). Just to rule out different implementations of the analyzed values, I've ingested this dataset (each value as a single document) into two indices - one which defines the field as a `float`, and one which defines the field as a `scaled_float` with `\"scaling_factor\": 1000`. The percentiles requested are `\"percents\": [50, 90, 95, 99, 99.99]`. In both cases, the results are very similar (between `float` and `scaled_float`) and are very different from the percentiles expected (vs. Python's NumPy):\r\n![image](https://user-images.githubusercontent.com/7827282/52645589-ba568200-2ee9-11e9-823a-ab2e720add6b.png)\r\n\r\nIn both cases, the ingestion was into an index with a single shard and different settings of the [compression parameter](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-percentile-aggregation.html#search-aggregations-metrics-percentile-aggregation-compression) were tested (up to 2,000) - without affecting the end result.\r\n\r\nAs documented, I know [percentiles are approximated](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-percentile-aggregation.html#search-aggregations-metrics-percentile-aggregation-approximation). However, it seems that the approximation behaves exactly opposite to what is written in the documentation:\r\n\r\n> - Accuracy is proportional to `q(1-q)` . This means that extreme percentiles (e.g. 99%) are more accurate than less extreme percentiles, such as the median\r\n> - For small sets of values, percentiles are highly accurate (and potentially 100% accurate if the data is small enough).\r\n\r\nMy dataset is pretty small (only 467 samples), and the accuracy increases as we approach the median. How can this be explained?\r\n\r\nThanks.","closed_by":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"performed_via_github_app":null}