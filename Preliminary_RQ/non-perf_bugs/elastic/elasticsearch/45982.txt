{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/45982","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45982/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45982/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45982/events","html_url":"https://github.com/elastic/elasticsearch/issues/45982","id":485319953,"node_id":"MDU6SXNzdWU0ODUzMTk5NTM=","number":45982,"title":"ElasticSearch `geo_centroid` metric doesn't calculate expected result for individual records","user":{"login":"maihde","id":229922,"node_id":"MDQ6VXNlcjIyOTkyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/229922?v=4","gravatar_id":"","url":"https://api.github.com/users/maihde","html_url":"https://github.com/maihde","followers_url":"https://api.github.com/users/maihde/followers","following_url":"https://api.github.com/users/maihde/following{/other_user}","gists_url":"https://api.github.com/users/maihde/gists{/gist_id}","starred_url":"https://api.github.com/users/maihde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maihde/subscriptions","organizations_url":"https://api.github.com/users/maihde/orgs","repos_url":"https://api.github.com/users/maihde/repos","events_url":"https://api.github.com/users/maihde/events{/privacy}","received_events_url":"https://api.github.com/users/maihde/received_events","type":"User","site_admin":false},"labels":[{"id":141079527,"node_id":"MDU6TGFiZWwxNDEwNzk1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Geo","name":":Analytics/Geo","color":"0e8a16","default":false,"description":"Indexing, search aggregations of geo points and shapes"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2019-08-26T16:17:54Z","updated_at":"2019-08-28T17:41:56Z","closed_at":"2019-08-28T17:41:56Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version** : 7.2.0\r\n\r\n**Plugins installed**: [ x-pack]\r\n\r\n**JVM version**: Open JDK 1.8.0.222.b10-0\r\n\r\n**OS version**: CentOS Linux 7.6.1810\r\n\r\n**Description of the problem including expected versus actual behavior**: When an aggregation uses `geo_centroid` to calculate a metric for a single point, the expected behavior is that the returned value be the actual lat/lon of the point.\r\n\r\n**Steps to reproduce**:\r\n\r\n```\r\ncurl -X PUT \"localhost:9200/test\"\r\n\r\ncurl -X PUT \"localhost:9200/test/_mapping?pretty\" -H 'Content-Type: application/json' -d'\r\n{\r\n    \"properties\": {\r\n        \"location\": {\r\n            \"type\": \"geo_point\"\r\n        }\r\n    }\r\n}'\r\n\r\ncurl -X POST \"localhost:9200/test/_doc?pretty\" -H 'Content-Type: application/json' -d'\r\n{\r\n    \"location\": [-73.9916158657479,40.742467032043805]\r\n}'\r\n\r\ncurl -X GET 'localhost:9200/test/_search?size=10' -H 'Content-Type: application/json' -d'\r\n{\r\n    \"query\": {\r\n        \"match_all\": {}\r\n    },\r\n    \"aggs\": {\r\n        \"grid\": {\r\n            \"geotile_grid\": {\r\n                \"field\": \"location\",\r\n            },\r\n            \"aggs\": {\r\n                \"center\":  {\r\n                    \"geo_centroid\": {\r\n                        \"field\": \"location\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}'\r\n```\r\n\r\nThe returned values are:\r\n\r\n```\r\n{\"lat\":40.74246701784432,\"lon\":-73.9916159491986}\r\n```\r\n\r\nWhich is close, but not identical to the expected value.  I thought this might be due to loss of precision converting a 64-bit float to a 32-bit float, but a quick audit of the code indicated that most of the GeoCentroid calculation was doing with double-precision.  In addition, the returned values didn't match the expected 32-bit values either.\r\n\r\nAlthough this example used only one point, the problem can easily be observed if a map is created with both a document and grid layer.  You can see multiple situations where the centroid and the single document are in disagreement, and a few cases there the centroid is in expected agreement.\r\n\r\n![image](https://user-images.githubusercontent.com/229922/63705551-67944600-c7fb-11e9-8768-a01a1e84ef57.png)\r\n\r\n   \r\n\r\n\r\n","closed_by":{"login":"maihde","id":229922,"node_id":"MDQ6VXNlcjIyOTkyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/229922?v=4","gravatar_id":"","url":"https://api.github.com/users/maihde","html_url":"https://github.com/maihde","followers_url":"https://api.github.com/users/maihde/followers","following_url":"https://api.github.com/users/maihde/following{/other_user}","gists_url":"https://api.github.com/users/maihde/gists{/gist_id}","starred_url":"https://api.github.com/users/maihde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maihde/subscriptions","organizations_url":"https://api.github.com/users/maihde/orgs","repos_url":"https://api.github.com/users/maihde/repos","events_url":"https://api.github.com/users/maihde/events{/privacy}","received_events_url":"https://api.github.com/users/maihde/received_events","type":"User","site_admin":false},"performed_via_github_app":null}