[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/322307804","html_url":"https://github.com/elastic/elasticsearch/issues/26208#issuecomment-322307804","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26208","id":322307804,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMjMwNzgwNA==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2017-08-14T20:58:08Z","updated_at":"2017-08-14T20:58:08Z","author_association":"MEMBER","body":"> Our score function computes a minimum score threshold by looking at the TopDocs from the first pass and decides whether to rescore a doc or not based on whether its first pass score is above this threshold\r\n\r\nIt is still unclear to me why this is not just a function score on the original query with a min score specified? I had thought you needed to use the previous score to calculate the rescore, not simply omit docs based on their original score.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/322309803","html_url":"https://github.com/elastic/elasticsearch/issues/26208#issuecomment-322309803","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26208","id":322309803,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMjMwOTgwMw==","user":{"login":"ethteck","id":2985314,"node_id":"MDQ6VXNlcjI5ODUzMTQ=","avatar_url":"https://avatars0.githubusercontent.com/u/2985314?v=4","gravatar_id":"","url":"https://api.github.com/users/ethteck","html_url":"https://github.com/ethteck","followers_url":"https://api.github.com/users/ethteck/followers","following_url":"https://api.github.com/users/ethteck/following{/other_user}","gists_url":"https://api.github.com/users/ethteck/gists{/gist_id}","starred_url":"https://api.github.com/users/ethteck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ethteck/subscriptions","organizations_url":"https://api.github.com/users/ethteck/orgs","repos_url":"https://api.github.com/users/ethteck/repos","events_url":"https://api.github.com/users/ethteck/events{/privacy}","received_events_url":"https://api.github.com/users/ethteck/received_events","type":"User","site_admin":false},"created_at":"2017-08-14T21:06:19Z","updated_at":"2017-08-14T21:06:19Z","author_association":"NONE","body":"> It is still unclear to me why this is not just a function score on the original query with a min score specified? \r\n\r\nWe need to calculate this min score dynamically - it's not a static value we can specify. Or am I misunderstanding you?\r\n\r\n> I had thought you needed to use the previous score to calculate the rescore, not simply omit docs based on their original score.\r\n\r\nThis is not the case. We only need the previous score to be able to compare it to our threshold.\r\n\r\nThere seems to be a lot of confusion around this issue and the surrounding requests I have. @jimczi requested that I open up another issue in [this message](https://discuss.elastic.co/t/accessing-topdocs-from-a-leafscorefunction/96336/12?u=ethanroseman), so maybe he'd be better at explaining my request from an internal standpoint.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/322325683","html_url":"https://github.com/elastic/elasticsearch/issues/26208#issuecomment-322325683","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26208","id":322325683,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMjMyNTY4Mw==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2017-08-14T22:19:34Z","updated_at":"2017-08-14T22:19:34Z","author_association":"MEMBER","body":"> We need to calculate this min score dynamically\r\n\r\nThank you. That is what I was missing. Does finding the threshold require a complex computation, or is it that you are trying to have a fluid value that, if there are not enough docs with a sufficient score, you include some more, less relevant docs?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/322408969","html_url":"https://github.com/elastic/elasticsearch/issues/26208#issuecomment-322408969","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26208","id":322408969,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMjQwODk2OQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-08-15T08:25:07Z","updated_at":"2017-08-15T08:25:07Z","author_association":"MEMBER","body":"> There seems to be a lot of confusion around this issue and the surrounding requests I have. @jimczi requested that I open up another issue in this message, so maybe he'd be better at explaining my request from an internal standpoint.\r\n\r\nThe surrounding requests are all specific to how you wrote your plugin in the first place. The main thing you need to do at this point is to think how your requirements could be achieved with the current plugin infrastructure without hacking the `SearchContext` accesses. \r\nThe `ScoreFunctions` are available for queries and I don't think we can make a special case only for when they are used in a rescore context. \r\nIf you need to rescore only documents that are beyond a threshold computed from the original scores then we could discuss how this feature could be added to rescorers. Can you explain how this threshold is computed like @rjernst requested ?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/322536822","html_url":"https://github.com/elastic/elasticsearch/issues/26208#issuecomment-322536822","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26208","id":322536822,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMjUzNjgyMg==","user":{"login":"ethteck","id":2985314,"node_id":"MDQ6VXNlcjI5ODUzMTQ=","avatar_url":"https://avatars0.githubusercontent.com/u/2985314?v=4","gravatar_id":"","url":"https://api.github.com/users/ethteck","html_url":"https://github.com/ethteck","followers_url":"https://api.github.com/users/ethteck/followers","following_url":"https://api.github.com/users/ethteck/following{/other_user}","gists_url":"https://api.github.com/users/ethteck/gists{/gist_id}","starred_url":"https://api.github.com/users/ethteck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ethteck/subscriptions","organizations_url":"https://api.github.com/users/ethteck/orgs","repos_url":"https://api.github.com/users/ethteck/repos","events_url":"https://api.github.com/users/ethteck/events{/privacy}","received_events_url":"https://api.github.com/users/ethteck/received_events","type":"User","site_admin":false},"created_at":"2017-08-15T17:42:22Z","updated_at":"2017-08-15T17:42:22Z","author_association":"NONE","body":"Sure, I'm happy to explain a little more. We look at all the scores in the list and compute statistics through which we derive our threshold. We do this by iterating through the list, so we do need access to all of the individual scores.\r\n \r\nIn essence, we're trying to find a \"tail\" where scores trail off. We assume that the documents in this \"tail\" are not good matches, so we do not run our expensive rescore function on them. This has worked pretty well for us in Solr, Lucene, and (historically) ES as a way to improve performance with minimal accuracy loss.\r\n \r\nAlso, I think I should mention that when we find documents that are below our threshold, we don't outright ignore them. Instead, we rescore score them as 0.0 so that they are guaranteed to fall below our actually rescored documents, which we always score between 0 and 1.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/323724175","html_url":"https://github.com/elastic/elasticsearch/issues/26208#issuecomment-323724175","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26208","id":323724175,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMzcyNDE3NQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-08-21T11:50:46Z","updated_at":"2017-08-21T11:50:46Z","author_association":"MEMBER","body":"Thanks @ethteck and sorry for the late reply.\r\nI understand your requirements now. As is the `rescorer` in es does not seem to be a good fit. I tried to come up with a solution that would require small changes to the code but your use case is more than just a rescoring query. The `rescorer` in es is **just** a query rescorer, it's simple and precise but cannot be customized. We've discussed some time ago the ability to open the door for custom rescorers but decided to not allow it for multiple reasons. The main one is that rescoring requires expert knowledge on how it works otherwise it is very easy to create custom rescorers with unexpected behavior. Though your use case is valid because it creates consistent scores at the shard level but also very specific. We've discussed again last week if we could allow custom rescorers but the conclusion was the same than before. Custom rescorers are tricky and we don't want to let people shoot themselves in the foot with them just because they seem to be powerful. \r\nI'll leave this issue open to let others comment if they want but IMO the solution for now is to lower the expectations for your plugin and rely solely on what is available in es rescorers (a custom query that rescores the top N). \r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/323756271","html_url":"https://github.com/elastic/elasticsearch/issues/26208#issuecomment-323756271","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26208","id":323756271,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMzc1NjI3MQ==","user":{"login":"ethteck","id":2985314,"node_id":"MDQ6VXNlcjI5ODUzMTQ=","avatar_url":"https://avatars0.githubusercontent.com/u/2985314?v=4","gravatar_id":"","url":"https://api.github.com/users/ethteck","html_url":"https://github.com/ethteck","followers_url":"https://api.github.com/users/ethteck/followers","following_url":"https://api.github.com/users/ethteck/following{/other_user}","gists_url":"https://api.github.com/users/ethteck/gists{/gist_id}","starred_url":"https://api.github.com/users/ethteck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ethteck/subscriptions","organizations_url":"https://api.github.com/users/ethteck/orgs","repos_url":"https://api.github.com/users/ethteck/repos","events_url":"https://api.github.com/users/ethteck/events{/privacy}","received_events_url":"https://api.github.com/users/ethteck/received_events","type":"User","site_admin":false},"created_at":"2017-08-21T14:26:42Z","updated_at":"2017-08-21T14:26:42Z","author_association":"NONE","body":"Not a problem - thank you for the reply.\r\n\r\nThat's a fair viewpoint. I guess the frustration from our point of view is that while this functionality may have never officially been supported, we were able to very easily solve our problem when we could access the `SearchContext` via `SearchContext.current`. Obviously as a normal Elasticsearch user, the [removal](https://github.com/elastic/elasticsearch/pull/20778) of `SearchContext.current` doesn't affect anything, but as a third party plugin developer, this change totally broke our plugin. If there was some way to get this functionality back, it would probably be sufficient for our plugin.\r\n\r\nWe can rethink the features we support and the way we support them, but it's a little frustrating to have to do this when everything we needed was so easily accessible before. Still, I appreciate the thought you and your colleagues have put into this issue, and I hope that maybe at some point this can be revisited.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/323767938","html_url":"https://github.com/elastic/elasticsearch/issues/26208#issuecomment-323767938","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26208","id":323767938,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMzc2NzkzOA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2017-08-21T15:04:35Z","updated_at":"2017-08-21T15:04:35Z","author_association":"CONTRIBUTOR","body":"so today plugins can install a `RescoreBuilder` that can be used to customize the rescorer. I wonder if that would be enough? From a my perspective we can pass down more information to the `build` method of the rescore builder like a `TopDocsStats` object that contains relevant information. I would love to make this rescorer infrastructure more flexible to support other usecases and we can extend these interfaces if there is more information needed?!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/323787408","html_url":"https://github.com/elastic/elasticsearch/issues/26208#issuecomment-323787408","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26208","id":323787408,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMzc4NzQwOA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2017-08-21T16:10:56Z","updated_at":"2017-08-21T16:10:56Z","author_association":"CONTRIBUTOR","body":"> so today plugins can install a RescoreBuilder that can be used to customize the rescorer.\r\n\r\nAlmost. I'm going to take this issue and make sure that it works. Right now it'd work in the Transport client API but not in the REST API because we do not have an extension point for the parsing.\r\n\r\n@ethteck, do you need anything to implement your rescores other than the `Searcher` and the `TopDocs`? I'm going to open a PR to make rescorers a \"real\" extension point. In doing that I'm going to tighten up what we pass to the extension so we don't accidentally break things in the future.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/323805837","html_url":"https://github.com/elastic/elasticsearch/issues/26208#issuecomment-323805837","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26208","id":323805837,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMzgwNTgzNw==","user":{"login":"ethteck","id":2985314,"node_id":"MDQ6VXNlcjI5ODUzMTQ=","avatar_url":"https://avatars0.githubusercontent.com/u/2985314?v=4","gravatar_id":"","url":"https://api.github.com/users/ethteck","html_url":"https://github.com/ethteck","followers_url":"https://api.github.com/users/ethteck/followers","following_url":"https://api.github.com/users/ethteck/following{/other_user}","gists_url":"https://api.github.com/users/ethteck/gists{/gist_id}","starred_url":"https://api.github.com/users/ethteck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ethteck/subscriptions","organizations_url":"https://api.github.com/users/ethteck/orgs","repos_url":"https://api.github.com/users/ethteck/repos","events_url":"https://api.github.com/users/ethteck/events{/privacy}","received_events_url":"https://api.github.com/users/ethteck/received_events","type":"User","site_admin":false},"created_at":"2017-08-21T17:35:44Z","updated_at":"2017-08-21T17:35:44Z","author_association":"NONE","body":"Oh great! Thank you so much.\r\n\r\nIdeally, we also would have access to the rescore window size if available. ","performed_via_github_app":null}]