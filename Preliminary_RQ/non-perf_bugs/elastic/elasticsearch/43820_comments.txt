[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/507246011","html_url":"https://github.com/elastic/elasticsearch/issues/43820#issuecomment-507246011","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43820","id":507246011,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNzI0NjAxMQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-07-01T12:35:06Z","updated_at":"2019-07-01T12:35:06Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-features","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/525514774","html_url":"https://github.com/elastic/elasticsearch/issues/43820#issuecomment-525514774","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43820","id":525514774,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNTUxNDc3NA==","user":{"login":"SivagurunathanV","id":9652470,"node_id":"MDQ6VXNlcjk2NTI0NzA=","avatar_url":"https://avatars0.githubusercontent.com/u/9652470?v=4","gravatar_id":"","url":"https://api.github.com/users/SivagurunathanV","html_url":"https://github.com/SivagurunathanV","followers_url":"https://api.github.com/users/SivagurunathanV/followers","following_url":"https://api.github.com/users/SivagurunathanV/following{/other_user}","gists_url":"https://api.github.com/users/SivagurunathanV/gists{/gist_id}","starred_url":"https://api.github.com/users/SivagurunathanV/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SivagurunathanV/subscriptions","organizations_url":"https://api.github.com/users/SivagurunathanV/orgs","repos_url":"https://api.github.com/users/SivagurunathanV/repos","events_url":"https://api.github.com/users/SivagurunathanV/events{/privacy}","received_events_url":"https://api.github.com/users/SivagurunathanV/received_events","type":"User","site_admin":false},"created_at":"2019-08-27T22:56:41Z","updated_at":"2019-08-27T22:56:41Z","author_association":"CONTRIBUTOR","body":"I would like to work on this issue. \r\n@ahubmann  @markharwood  @hub-cap what is expected, in both the cases we need to return Double.POSITIVE_INFINITY?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/525914030","html_url":"https://github.com/elastic/elasticsearch/issues/43820#issuecomment-525914030","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43820","id":525914030,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNTkxNDAzMA==","user":{"login":"hub-cap","id":613352,"node_id":"MDQ6VXNlcjYxMzM1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/613352?v=4","gravatar_id":"","url":"https://api.github.com/users/hub-cap","html_url":"https://github.com/hub-cap","followers_url":"https://api.github.com/users/hub-cap/followers","following_url":"https://api.github.com/users/hub-cap/following{/other_user}","gists_url":"https://api.github.com/users/hub-cap/gists{/gist_id}","starred_url":"https://api.github.com/users/hub-cap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hub-cap/subscriptions","organizations_url":"https://api.github.com/users/hub-cap/orgs","repos_url":"https://api.github.com/users/hub-cap/repos","events_url":"https://api.github.com/users/hub-cap/events{/privacy}","received_events_url":"https://api.github.com/users/hub-cap/received_events","type":"User","site_admin":false},"created_at":"2019-08-28T20:41:53Z","updated_at":"2019-08-28T20:41:53Z","author_association":"CONTRIBUTOR","body":"Our general consensus is to replicate what the transport client returns. But I dont know these classes well enough to know what the \"correct\" answer is here. I will notify some team members to see if they can answer. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/525914889","html_url":"https://github.com/elastic/elasticsearch/issues/43820#issuecomment-525914889","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43820","id":525914889,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNTkxNDg4OQ==","user":{"login":"hub-cap","id":613352,"node_id":"MDQ6VXNlcjYxMzM1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/613352?v=4","gravatar_id":"","url":"https://api.github.com/users/hub-cap","html_url":"https://github.com/hub-cap","followers_url":"https://api.github.com/users/hub-cap/followers","following_url":"https://api.github.com/users/hub-cap/following{/other_user}","gists_url":"https://api.github.com/users/hub-cap/gists{/gist_id}","starred_url":"https://api.github.com/users/hub-cap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hub-cap/subscriptions","organizations_url":"https://api.github.com/users/hub-cap/orgs","repos_url":"https://api.github.com/users/hub-cap/repos","events_url":"https://api.github.com/users/hub-cap/events{/privacy}","received_events_url":"https://api.github.com/users/hub-cap/received_events","type":"User","site_admin":false},"created_at":"2019-08-28T20:44:12Z","updated_at":"2019-08-28T20:44:12Z","author_association":"CONTRIBUTOR","body":"based on #24162, it would probably make sense for @cbuescher to comment on what the value should be, and whether he intended on the difference here. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/526351595","html_url":"https://github.com/elastic/elasticsearch/issues/43820#issuecomment-526351595","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43820","id":526351595,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjM1MTU5NQ==","user":{"login":"9deniz","id":1963048,"node_id":"MDQ6VXNlcjE5NjMwNDg=","avatar_url":"https://avatars3.githubusercontent.com/u/1963048?v=4","gravatar_id":"","url":"https://api.github.com/users/9deniz","html_url":"https://github.com/9deniz","followers_url":"https://api.github.com/users/9deniz/followers","following_url":"https://api.github.com/users/9deniz/following{/other_user}","gists_url":"https://api.github.com/users/9deniz/gists{/gist_id}","starred_url":"https://api.github.com/users/9deniz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/9deniz/subscriptions","organizations_url":"https://api.github.com/users/9deniz/orgs","repos_url":"https://api.github.com/users/9deniz/repos","events_url":"https://api.github.com/users/9deniz/events{/privacy}","received_events_url":"https://api.github.com/users/9deniz/received_events","type":"User","site_admin":false},"created_at":"2019-08-29T20:37:38Z","updated_at":"2019-08-29T20:37:38Z","author_association":"CONTRIBUTOR","body":"@hub-cap does it make sense to use TransportClient as a reference taking into account that\r\n> Deprecated in 7.0.0. The TransportClient is deprecated in favour of the Java High Level REST Client and will be removed in Elasticsearch 8.0.\r\n\r\nIn master branch there is no such class as TransportClient already. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/527845775","html_url":"https://github.com/elastic/elasticsearch/issues/43820#issuecomment-527845775","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43820","id":527845775,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzg0NTc3NQ==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2019-09-04T10:39:51Z","updated_at":"2019-09-05T09:24:48Z","author_association":"MEMBER","body":"> based on #24162, it would probably make sense for @cbuescher to comment on what the value should be, and whether he intended on the difference here.\r\n\r\nThe problem in replicating the exact NaN/+/-Inf values as in the transport client the we encountered when writing the new REST client classes was that on the client side we can only use what we can parse from the REST response. In case of the Avg agg this e.g. means we no longer know what `sum` and `count` where on the server side, since we don't write those values to the response (XContent, most of the time JSON), but only the calculated value. This works for finite values but not for NaN/+/-Inf where we loose that information \"over the wire\", so we needed to pick one on the receiving side. \r\nI don't see a simple way to fix this that doesn't involve changing the xContent serialization which comes with a lot of backward compatibility complications. As far as I remember there were also issues around our different xContent formats (Json, CBOR etc...) not handling NaN/+-Inf the same way across the board. I will see if I can dig up more info around that point.\r\nI agree it would be nice to have the exact same behaviour in transport and rest client (which we generally aimed for), but I see no quick and easy fix here. I'd be interested in which cases NaN/+-Inf need to be distiguishable on the client side though.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/528379200","html_url":"https://github.com/elastic/elasticsearch/issues/43820#issuecomment-528379200","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43820","id":528379200,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODM3OTIwMA==","user":{"login":"hub-cap","id":613352,"node_id":"MDQ6VXNlcjYxMzM1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/613352?v=4","gravatar_id":"","url":"https://api.github.com/users/hub-cap","html_url":"https://github.com/hub-cap","followers_url":"https://api.github.com/users/hub-cap/followers","following_url":"https://api.github.com/users/hub-cap/following{/other_user}","gists_url":"https://api.github.com/users/hub-cap/gists{/gist_id}","starred_url":"https://api.github.com/users/hub-cap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hub-cap/subscriptions","organizations_url":"https://api.github.com/users/hub-cap/orgs","repos_url":"https://api.github.com/users/hub-cap/repos","events_url":"https://api.github.com/users/hub-cap/events{/privacy}","received_events_url":"https://api.github.com/users/hub-cap/received_events","type":"User","site_admin":false},"created_at":"2019-09-05T14:01:30Z","updated_at":"2019-09-05T14:01:30Z","author_association":"CONTRIBUTOR","body":"@9deniz you are correct! This effort we did to get the HLRC up to speed was for 7, which is where the transport client code still lives. We tried to reach API parity w/ the transport client so users could migrate and not see weird things. \r\n\r\nThat being said, we can change APIs in 8 to what we want, its just a breaking (potentially) change. But I still think that it is worth reiterating what @cbuescher \tmentioned which is to know what the difference is between NaN/+-inf values, to know if it matters if we return a different value here in the HLRC.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/542354644","html_url":"https://github.com/elastic/elasticsearch/issues/43820#issuecomment-542354644","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43820","id":542354644,"node_id":"MDEyOklzc3VlQ29tbWVudDU0MjM1NDY0NA==","user":{"login":"hub-cap","id":613352,"node_id":"MDQ6VXNlcjYxMzM1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/613352?v=4","gravatar_id":"","url":"https://api.github.com/users/hub-cap","html_url":"https://github.com/hub-cap","followers_url":"https://api.github.com/users/hub-cap/followers","following_url":"https://api.github.com/users/hub-cap/following{/other_user}","gists_url":"https://api.github.com/users/hub-cap/gists{/gist_id}","starred_url":"https://api.github.com/users/hub-cap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hub-cap/subscriptions","organizations_url":"https://api.github.com/users/hub-cap/orgs","repos_url":"https://api.github.com/users/hub-cap/repos","events_url":"https://api.github.com/users/hub-cap/events{/privacy}","received_events_url":"https://api.github.com/users/hub-cap/received_events","type":"User","site_admin":false},"created_at":"2019-10-15T18:53:10Z","updated_at":"2019-10-15T18:53:10Z","author_association":"CONTRIBUTOR","body":"Im closing this issue as something we wont fix. Simply knowing that the value is not real in any way should be sufficient, regardless of the NAN/POSITIVE_INFINTY status.","performed_via_github_app":null}]