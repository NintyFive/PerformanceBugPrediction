{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/7447","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7447/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7447/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7447/events","html_url":"https://github.com/elastic/elasticsearch/issues/7447","id":41122732,"node_id":"MDU6SXNzdWU0MTEyMjczMg==","number":7447,"title":"nonlocal binding","user":{"login":"drewr","id":6202,"node_id":"MDQ6VXNlcjYyMDI=","avatar_url":"https://avatars3.githubusercontent.com/u/6202?v=4","gravatar_id":"","url":"https://api.github.com/users/drewr","html_url":"https://github.com/drewr","followers_url":"https://api.github.com/users/drewr/followers","following_url":"https://api.github.com/users/drewr/following{/other_user}","gists_url":"https://api.github.com/users/drewr/gists{/gist_id}","starred_url":"https://api.github.com/users/drewr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drewr/subscriptions","organizations_url":"https://api.github.com/users/drewr/orgs","repos_url":"https://api.github.com/users/drewr/repos","events_url":"https://api.github.com/users/drewr/events{/privacy}","received_events_url":"https://api.github.com/users/drewr/received_events","type":"User","site_admin":false},"labels":[{"id":146854632,"node_id":"MDU6TGFiZWwxNDY4NTQ2MzI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Network","name":":Distributed/Network","color":"0e8a16","default":false,"description":"Http and internode communication implementations"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-08-25T23:55:39Z","updated_at":"2016-11-25T18:36:07Z","closed_at":"2016-11-25T18:36:07Z","author_association":"MEMBER","active_lock_reason":null,"body":"Currently when setting the transport host to an interface that doesn't yet exist (using Linux's `ip_nonlocal_bind`, eg), ES will start fine, but then complain often about not being able to make connections internally to itself:\n\n```\n2014-08-25 23:26:28.802763500 [2014-08-25 23:26:28,799][WARN ][cluster.service          ] [foo] failed to reconnect to node [foo][eEex7V1LRGOV6SNBw-UZmg][monitor][inet[/192.168.56.200:9300]]\n2014-08-25 23:26:28.802764500 org.elasticsearch.transport.ConnectTransportException: [foo][inet[/192.168.56.200:9300]] connect_timeout[30s]\n2014-08-25 23:26:28.802766500   at org.elasticsearch.transport.netty.NettyTransport.connectToChannels(NettyTransport.java:677)\n2014-08-25 23:26:28.803108500   at org.elasticsearch.transport.netty.NettyTransport.connectToNode(NettyTransport.java:611)Â \n```\n\nClearly, the transport not having a working interface that it _expects_ to be working is exceptional and should be reported as such.  I'm wondering how we can support when you don't expect it.  I thought about a `network.allow_nonlocal_bind` or somesuch flag.  Or maybe added syntax to the interface definition, like `~_eth0_`.  Thoughts?\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}