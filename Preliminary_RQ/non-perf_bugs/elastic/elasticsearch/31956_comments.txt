[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/404209164","html_url":"https://github.com/elastic/elasticsearch/issues/31956#issuecomment-404209164","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31956","id":404209164,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNDIwOTE2NA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-07-11T15:21:39Z","updated_at":"2018-07-11T15:21:39Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/404209966","html_url":"https://github.com/elastic/elasticsearch/issues/31956#issuecomment-404209966","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31956","id":404209966,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNDIwOTk2Ng==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2018-07-11T15:23:54Z","updated_at":"2018-07-11T15:23:54Z","author_association":"CONTRIBUTOR","body":"@rjernst , you are our expert in ServiceLoader. Could you have a look at this?\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/404254191","html_url":"https://github.com/elastic/elasticsearch/issues/31956#issuecomment-404254191","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31956","id":404254191,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNDI1NDE5MQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2018-07-11T17:44:59Z","updated_at":"2018-07-11T17:44:59Z","author_association":"MEMBER","body":"@dvivarelli Can you describe in more detail the hierarchy of classloaders you have? The assumption we make is that all of the elastic jars eg the rest client + module jars like matrix agg would been in the same classloader.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/404428892","html_url":"https://github.com/elastic/elasticsearch/issues/31956#issuecomment-404428892","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31956","id":404428892,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNDQyODg5Mg==","user":{"login":"dvivarelli","id":7543391,"node_id":"MDQ6VXNlcjc1NDMzOTE=","avatar_url":"https://avatars2.githubusercontent.com/u/7543391?v=4","gravatar_id":"","url":"https://api.github.com/users/dvivarelli","html_url":"https://github.com/dvivarelli","followers_url":"https://api.github.com/users/dvivarelli/followers","following_url":"https://api.github.com/users/dvivarelli/following{/other_user}","gists_url":"https://api.github.com/users/dvivarelli/gists{/gist_id}","starred_url":"https://api.github.com/users/dvivarelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dvivarelli/subscriptions","organizations_url":"https://api.github.com/users/dvivarelli/orgs","repos_url":"https://api.github.com/users/dvivarelli/repos","events_url":"https://api.github.com/users/dvivarelli/events{/privacy}","received_events_url":"https://api.github.com/users/dvivarelli/received_events","type":"User","site_admin":false},"created_at":"2018-07-12T08:14:33Z","updated_at":"2018-07-12T08:14:33Z","author_association":"NONE","body":"We have a web app on tomcat 8, so the main class loader is a webapp classloader. \r\nOn the main app we need some plugins to add functionalities. Every plugin works its own plugin classloader (our custom classloader).\r\nThat custom classloader resolve classes inside the plugin jar (a fat jar) except for some jar that must be in common.\r\nBecause some jar could be \"duplicated\" between plugin and main app (some dipendencies could be the same),  the plugin classloader is not a child of webapp classloader, but plugin classloader has a reference on the webapp classloader.\r\n\r\nSo the structure is:\r\n\r\nclass PluginClassloader:\r\n    private Classloader delegate;  //it is the webapp classloader injected in the costructor\r\n\r\n      - this classloader has SystemClassloader has parent. \r\n      - try to resolve the class on the jar\r\n           - if class already loaded by SystemClassLoader, found\r\n           - else search on the fat jar\r\n     -  if found return, \r\n      - else try to resolve with delegate classloader  \r\n\r\n\r\nWe want to use rest high level client in a plugin (and the elastic jars and its dependencies inside the jar).\r\nSo we have a class loaded by plugin classloader with  new RestHightLevelClient( .... ), the RestHightLevelClient is loaded by PluginClassLoader but, when the ServiceLoader.load() is called (in the protected costructor) it use the webapp classloader because in the SystemLoader,load() there this instruction:\r\nClassLoader cl = Thread.currentThread().getContextClassLoader();   // in our case this return webapp classloader\r\nSo we have a class cast exception.\r\n\r\n\r\nA possible workaround is set the Thread.currentThread().setContextClassloader(<pluginclassloader>) before the new RestHightLevelClient( ... ) and evetrhing works.  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/409759719","html_url":"https://github.com/elastic/elasticsearch/issues/31956#issuecomment-409759719","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31956","id":409759719,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTc1OTcxOQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2018-08-01T23:40:34Z","updated_at":"2018-08-01T23:40:34Z","author_association":"MEMBER","body":"@dvivarelli Sorry for the long delay in replying here. I think setting the context class loader in this case is exactly what we want. You have an expert case (your own classloader hierarchy) and java's ServiceLoader defaults to the context classloader for this exact reason: to allow selecting which classloader is looked at, without having to plumb through a ClassLoader all the way down to where ServiceLoader is called. I'm going to close this issue as I don't see a need to add this plumbing (an optional constructor arg to RestHighLevelClient) when there is already a viable solution. ","performed_via_github_app":null}]