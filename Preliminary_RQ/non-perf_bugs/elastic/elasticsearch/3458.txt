{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3458","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3458/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3458/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3458/events","html_url":"https://github.com/elastic/elasticsearch/issues/3458","id":17751500,"node_id":"MDU6SXNzdWUxNzc1MTUwMA==","number":3458,"title":"Allow Ids query to score documents by ids order","user":{"login":"damienalexandre","id":225704,"node_id":"MDQ6VXNlcjIyNTcwNA==","avatar_url":"https://avatars2.githubusercontent.com/u/225704?v=4","gravatar_id":"","url":"https://api.github.com/users/damienalexandre","html_url":"https://github.com/damienalexandre","followers_url":"https://api.github.com/users/damienalexandre/followers","following_url":"https://api.github.com/users/damienalexandre/following{/other_user}","gists_url":"https://api.github.com/users/damienalexandre/gists{/gist_id}","starred_url":"https://api.github.com/users/damienalexandre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/damienalexandre/subscriptions","organizations_url":"https://api.github.com/users/damienalexandre/orgs","repos_url":"https://api.github.com/users/damienalexandre/repos","events_url":"https://api.github.com/users/damienalexandre/events{/privacy}","received_events_url":"https://api.github.com/users/damienalexandre/received_events","type":"User","site_admin":false},"labels":[{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2013-08-07T14:38:04Z","updated_at":"2020-01-09T04:58:57Z","closed_at":"2014-08-08T13:57:28Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"_This is more a feature suggestion than an issue._\n\n[Id's query](http://www.elasticsearch.org/guide/reference/query-dsl/ids-query/) are great and allow to use ES as a great searchable datastore.\n\nI have some use cases where I want to restrict user search to a limited set of documents - so I use Ids query with some match queries.\n\nBut sometime, I don't have query, I just want my N documents, without sorting on a field: and in this case, all my documents get a score of 1. \n\nIf I run this query multiple times, I get different order almost everytime, as score are equals.\n\n``` json\n{\n    \"query\": {\n            \"ids\": {\n                \"values\": [\n                   \"1221\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"\n                ]\n            }\n    }\n}\n```\n\nThis is not great for users (as they get a random feeling), and I may also want to use the id values order as document order. So I created a custom script query for this case:\n\n``` json\n{\n  \"query\": {\n    \"custom_score\": {\n      \"query\": {\n        \"ids\": {\n          \"type\": \"pony\",\n          \"values\": [\n            \"1337\",\n            \"1664\",\n            \"8888\",\n            \"1111\"\n          ]\n        }\n      },\n      \"script\": \"\n        count = ids.size();\n        id    = org.elasticsearch.index.mapper.Uid.idFromUid(doc['_uid'].value);\n        for (i = 0; i < count; i++) {\n          if (id == ids[i]) { return count - i; }\n        }\"\n      \"params\": {\n        \"ids\": [\n          \"1337\",\n          \"1664\",\n          \"8888\",\n          \"1111\"\n        ]\n      },\n      \"lang\": \"mvel\"\n    }\n  }\n}\n```\n\nAs you can see, I inject the ids to the script as a param, and give them a custom score based on the position of the current document ID in the list.\n\nThis fix consistency and ordering issues, but this is **slow** when dealing with lots of ID's (started noticing when hitting 3k ids).\n\nWhat I was thinking about is some kind of option we can add to IdsQuery to score docs based on the Id position.\n\n``` json\n{\n    \"query\": {\n            \"ids\": {\n                \"values\": [\n                   \"1221\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"\n                ],\n                \"score_by_order\": true\n            }\n    }\n}\n```\n\nWith this value to \"true\", the IdsQuery could give a score to each document, removing the random effect and the need of a custom script to sort by id's.\n\nWhat do you think?!\nThanks!\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}