{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3768","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3768/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3768/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3768/events","html_url":"https://github.com/elastic/elasticsearch/issues/3768","id":19961927,"node_id":"MDU6SXNzdWUxOTk2MTkyNw==","number":3768,"title":"Transport client log when cluster is down","user":{"login":"gquintana","id":755587,"node_id":"MDQ6VXNlcjc1NTU4Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/755587?v=4","gravatar_id":"","url":"https://api.github.com/users/gquintana","html_url":"https://github.com/gquintana","followers_url":"https://api.github.com/users/gquintana/followers","following_url":"https://api.github.com/users/gquintana/following{/other_user}","gists_url":"https://api.github.com/users/gquintana/gists{/gist_id}","starred_url":"https://api.github.com/users/gquintana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gquintana/subscriptions","organizations_url":"https://api.github.com/users/gquintana/orgs","repos_url":"https://api.github.com/users/gquintana/repos","events_url":"https://api.github.com/users/gquintana/events{/privacy}","received_events_url":"https://api.github.com/users/gquintana/received_events","type":"User","site_admin":false},"labels":[{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2013-09-24T08:05:47Z","updated_at":"2014-08-25T14:43:41Z","closed_at":"2014-08-25T14:43:41Z","author_association":"NONE","active_lock_reason":null,"body":"When the ElasticSearch cluster is stopped (let's say restarted), the Transport Client logs every 5s the same error message (see below), even if ElasticSearch is not used (no request sent).\n\nSome ideas to avoid log flooding:\n- use backoff multiplier when trying to reconnect\n- log only when the connection state changes (up or down)\n- don't log the stacktrace here \"IndexOutOfBoundsException: Readable byte limit exceeded: 60\" is not relevant\n\nAt the moment, the workaround is to turn \"org.elasticsearch.client.transport\" log level to Warn on each client.\n\n```\n20130924-00:00:02.752|INFO|org.elasticsearch.client.transport||[Condor] failed to get node info for [#transport#-1][inet[myserver/192.168.131.228:9300]], disconnecting...|org.elasticsearch.transport.RemoteTransportException: [projet-myserver][inet[/192.168.131.228:9300]][cluster/nodes/info]\nCaused by: java.lang.IndexOutOfBoundsException: Readable byte limit exceeded: 60\n        at org.elasticsearch.common.netty.buffer.AbstractChannelBuffer.readByte(AbstractChannelBuffer.java:236)\n        at org.elasticsearch.transport.netty.ChannelBufferStreamInput.readByte(ChannelBufferStreamInput.java:132)\n        at org.elasticsearch.common.io.stream.AdapterStreamInput.readByte(AdapterStreamInput.java:35)\n        at org.elasticsearch.common.io.stream.StreamInput.readBoolean(StreamInput.java:267)\n        at org.elasticsearch.action.admin.cluster.node.info.NodesInfoRequest.readFrom(NodesInfoRequest.java:234)\n        at org.elasticsearch.transport.netty.MessageChannelHandler.handleRequest(MessageChannelHandler.java:208)\n        at org.elasticsearch.transport.netty.MessageChannelHandler.messageReceived(MessageChannelHandler.java:108)\n        at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n        at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n        at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n        at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:296)\n        at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:462)\n        at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.callDecode(FrameDecoder.java:443)\n        at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.messageReceived(FrameDecoder.java:303)\n        at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n        at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n        at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n        at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:74)\n        at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n        at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)\n        at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:268)\n        at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:255)\n        at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)\n        at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:109)\n        at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:312)\n        at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:90)\n        at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)\n        at org.elasticsearch.common.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\n        at org.elasticsearch.common.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n        at java.lang.Thread.run(Thread.java:662)|\n```\n","closed_by":{"login":"gquintana","id":755587,"node_id":"MDQ6VXNlcjc1NTU4Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/755587?v=4","gravatar_id":"","url":"https://api.github.com/users/gquintana","html_url":"https://github.com/gquintana","followers_url":"https://api.github.com/users/gquintana/followers","following_url":"https://api.github.com/users/gquintana/following{/other_user}","gists_url":"https://api.github.com/users/gquintana/gists{/gist_id}","starred_url":"https://api.github.com/users/gquintana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gquintana/subscriptions","organizations_url":"https://api.github.com/users/gquintana/orgs","repos_url":"https://api.github.com/users/gquintana/repos","events_url":"https://api.github.com/users/gquintana/events{/privacy}","received_events_url":"https://api.github.com/users/gquintana/received_events","type":"User","site_admin":false},"performed_via_github_app":null}