{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/27205","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27205/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27205/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27205/events","html_url":"https://github.com/elastic/elasticsearch/issues/27205","id":270280403,"node_id":"MDU6SXNzdWUyNzAyODA0MDM=","number":27205,"title":"Java high-level REST client completeness","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"labels":[{"id":493198109,"node_id":"MDU6TGFiZWw0OTMxOTgxMDk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Java%20High%20Level%20REST%20Client","name":":Core/Features/Java High Level REST Client","color":"0e8a16","default":false,"description":"Expressive Java Client for Elasticsearch"},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null},{"id":442465389,"node_id":"MDU6TGFiZWw0NDI0NjUzODk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Pretty%20Bloody%20Important","name":"Pretty Bloody Important","color":"d93f0b","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":72,"created_at":"2017-11-01T11:34:08Z","updated_at":"2019-10-07T17:46:29Z","closed_at":"2019-10-07T17:17:22Z","author_association":"MEMBER","active_lock_reason":null,"body":"This is a meta issue to track completeness of the Java REST high-level Client in terms of supported API. The following list includes all the REST API that Elasticsearch exposes to date, and that are also exposed by the Transport Client. The ones marked as done are already supported by the high-level REST client, while the others need to be added. Every group is sorted based on an estimation around how important the API is, from more important to less important. Each API is also assigned a rank (easy, medium, hard) that expresses how difficult adding support for it is expected to be.\r\n\r\nThe API listed as \"Not Required\" won't need to be supported before the transport client is removed from the master branch (next major version). Such API are mainly administrative API that are not likely to be used from a Java application. They generally return heavy responses and make it hard to reuse response objects from the transport client as they expose internal objects that in some cases cannot even be parsed back entirely based on the information returned at REST. We considered returning those as maps of maps but thatâ€™s also easy to achieve using the low-level REST client hence we decided to not implement them for the time being.\r\n\r\n### Top-level APIs\r\n\r\n- [x] ping (*easy*)\r\n- [x] info (*easy*)\r\n- [x] index (*medium*)\r\n- [x] update (*medium*)\r\n- [x] delete (*medium*)\r\n- [x] bulk (*hard*)\r\n- [x] get (*medium*)\r\n- [x] exists (*easy*)\r\n- [x] multi get (*medium*) #27337\r\n- [x] search (*very hard*)\r\n- [x] search scroll (*easy*)\r\n- [x] clear scroll (*easy*)\r\n- [x] multi search (*hard*) #27274\r\n- [x] update by query (*medium*) @sohaibiftikhar \r\n- [x] delete by query (*medium*) @sohaibiftikhar \r\n- [x] reindex (*medium*) @sohaibiftikhar \r\n- [] reindex with wait_for_completion=false creates task @pgomulka \r\n- [x] rethrottle (reindex, update by query, delete by query) https://github.com/elastic/elasticsearch/pull/33951\r\n- [x] search template (*medium*) https://github.com/elastic/elasticsearch/pull/30473\r\n- [x] render search template (*easy*) (included in search template API) #30473\r\n- [x] multi search templates (*medium*) #30836\r\n- [x] term vectors (*hard*) #33447\r\n- [x] multi term vectors (*hard*) @mayya-sharipova  #35266\r\n- [x] explain (*medium*) #31387\r\n- [x] field caps (*easy*) #29664 \r\n- [x] put stored script (*easy*) #31323\r\n- [x] delete stored script (*easy*) #31355 \r\n- [x] get stored script (*medium*) #31355 \r\n\r\n### Indices API\r\n\r\n- [x] create index (*easy*)\r\n- [x] delete index (*easy*)\r\n- [x] indices exist (*easy*) #27384\r\n- [x] update alias (*medium*) #27876\r\n- [x] exists alias (*easy*) #28332\r\n- [x] get alias (*medium*) #28799\r\n- ~~[ ] types exist (*easy*)~~\r\n- [x] put mapping (*easy*) #27869\r\n- [x] open index (*easy*)\r\n- [x] close index (*easy*)\r\n- [x] refresh (*easy*) #27799\r\n- [x] flush (*easy*) #28852\r\n- [x] update index settings (*easy*) #28892\r\n- [x] get index settings (*easy*) #29229\r\n- [x] clear cache (*easy*) #28866\r\n- [x] force merge (*easy*) #28896\r\n- [x] shrink (*easy*) #28425\r\n- [x] split (*easy*) #28425\r\n- [x] rollover (*easy*) #28698\r\n- [x] synced flush (*medium*) (exposes ShardRouting, hard to reconstruct the whole response from info returned via REST) #30650 \r\n- [x] get index (*medium*) #31703\r\n- [x] get mappings (*easy*) #30889\r\n- [x] get field mappings (*medium*) #31423 \r\n- [x] put index template (*medium*) #30400\r\n- [x] delete index template (*easy*) #36320\r\n- [x] get index templates (*medium*) #31161\r\n- [x] validate query (*medium*) #31077\r\n- [x] analyze (*hard*) #31577\r\n\r\n**Not required**\r\n\r\n- shard stores (*medium*)\r\n- upgrade (*easy*) (to be removed?)\r\n- upgrade status (*easy*) (to be removed?)\r\n- segments (*hard*) (exposes ShardRouting)\r\n- recoveries (*hard*) (exposes ShardRouting, DiscoveryNode)\r\n- indices stats (*hard*) (exposes ShardRouting and a lot of other objects)\r\n\r\n### Snapshot API\r\n\r\n- [x] get repositories #30362\r\n- [x] create repository #30501\r\n- [x] verify repository #30934\r\n- [x] delete repository #30666\r\n- [x] create snapshot (*medium*) #31215\r\n- [x] snapshots status (*medium*) #31515\r\n- [x] get snapshots (*medium*) #31537\r\n- [x] delete snapshot (*easy*) #31393\r\n- [x] restore snapshot (*medium*) #32155 \r\n\r\n### Ingest API\r\n\r\n- [x] put ingest pipeline (*easy*) #30793 \r\n- [x] delete ingest pipeline (*easy*) #30865\r\n- [x] get ingest pipeline (*easy*) #30847\r\n- [x] simulate ingest pipeline (*medium*) #31158\r\n\r\n### Tasks API\r\n\r\n- [x] list tasks (*medium*) #29546\r\n- [x] get task (*medium*) #35166 \r\n- [x] cancel task (*easy*) #30745\r\n\r\n### Cluster API\r\n\r\n- [x] cluster health (*medium*) #29331\r\n- [x] update cluster settings (*easy*) #28633\r\n- [x] get cluster settings (*medium*) #31706 (doesn't have its own Response object, exposed at REST only)\r\n\r\n**Not required**\r\n\r\n- search shards (*medium*) (exposes ShardRouting, DiscoveryNode and requires parsing back QueryBuilder)\r\n- pending cluster tasks (*easy*)\r\n- allocation explain (*hard*) (exposes ShardRouting)\r\n- cluster state (*hard*) (exposes ClusterState)\r\n- reroute (*easy* if done after cluster state API, returns the entire cluster state)\r\n- nodes info (*hard*) (exposes DiscoveryNode and a lot of other objects)\r\n- nodes stats (*hard*) (exposes ShardRouting and a lot of other objects)\r\n- cluster stats (*hard*) (exposes DiscoveryNode, requires nodes info and nodes stats)\r\n- hot threads (*easy*) (exposes DiscoveryNode)\r\n- nodes usage (*medium*) (exposes DiscoveryNode)\r\n\r\n### REST only API\r\n\r\nThere are a number of API that are exposed via REST but not via the Transport Client. They don't necessarily have to be implemented if the goal is feature parity with the Transport Client, yet we should probably have a look at why they were not added to the Transport Client and whether it makes sense to add their support to the high-level REST Client or not. I don't think it makes sense to add support for cat API and ingest processor grok, hence I took them out already.\r\n\r\n- [ ] cluster remote info\r\n- [x] count #31868\r\n- [ ] get source\r\n- [x] source exists https://github.com/elastic/elasticsearch/pull/34519\r\n- [ ] delete alias\r\n- [x] indices template exist @andyb-elastic (#36132)\r\n- [ ] get upgrade\r\n- ~~ingest processor grok~~\r\n- ~~cat API: aliases, allocation, count, fielddata, health, help, indices, master, nodeattrs, nodes, pending tasks, plugins, recovery, repositories, segments, shards, snapshots, tasks, templates, threadpool~~\r\n\r\n## How to add support for a new API\r\n\r\nLook at some of the already supported API and existing PRs that have been merged:\r\n\r\n* Add Index API to High Level Rest Client (#23040)\r\n* Add BulkRequest support to High Level Rest client (#23312)\r\n* Add delete API to the High Level Rest Client (#23187)\r\n* Add UpdateRequest support to High Level Rest client (#23266)\r\n* Added Delete Index support to high-level REST client (#27019)\r\n\r\nThe common tasks in each of the above PRs are:\r\n* add `fromXContent` method to existing response class currently used by transport client and corresponding unit tests that make use of fields shuffling as well as random fields insertion (in order to test forward compatibility). That usually means adding a test for the response object that extends `AbstractXContentTestCase` where `supportsUnknownFields()` returns true as well as `assertToXContentEquivalence`. There are cases where we can't insert random fields everywhere, which then require to also override the `getRandomFieldsExcludeFilter()` method which returns path that should be excluded when injecting random fields. Given the randomizations applied, it makes sense to run this type of test locally with `-Dtests.iters=50` argument just to make sure that it is consistently green.\r\n* add new method to `Request` class which translates the input request into the internal REST request representation that holds method, url, endpoint, params etc. and add corresponding tests to `RequestTests`\r\n* add new method to `RestHighLevelClient`, possibly also its async variant when it makes sense, we may not want to add async variants to every single method, so we decide case by case. The name of the new method must match what is defined in our [REST spec](https://github.com/elastic/elasticsearch/tree/master/rest-api-spec/src/main/resources/rest-api-spec/api) including the namespace.\r\n* add integration test that extends `ESRestHighLevelClientTestCase` that tests the new method end-to-end by sending REST requests to an external cluster.\r\n* add docs page. To check how docs are rendered and whether the links between docs pages and docs snippets work ok, run the following command from the root of your local checkout of the Elasticsearch repository: `/path/to/elastic/docs/build_docs.pl --doc docs/java-rest/index.asciidoc --chunk 1 --out ~/temp/asciidoc  --open` . This requires also a local checkout of the [docs](https://github.com/elastic/docs/) repository, where the perl script is located.\r\n\r\nRelates #29827\r\n","closed_by":{"login":"hub-cap","id":613352,"node_id":"MDQ6VXNlcjYxMzM1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/613352?v=4","gravatar_id":"","url":"https://api.github.com/users/hub-cap","html_url":"https://github.com/hub-cap","followers_url":"https://api.github.com/users/hub-cap/followers","following_url":"https://api.github.com/users/hub-cap/following{/other_user}","gists_url":"https://api.github.com/users/hub-cap/gists{/gist_id}","starred_url":"https://api.github.com/users/hub-cap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hub-cap/subscriptions","organizations_url":"https://api.github.com/users/hub-cap/orgs","repos_url":"https://api.github.com/users/hub-cap/repos","events_url":"https://api.github.com/users/hub-cap/events{/privacy}","received_events_url":"https://api.github.com/users/hub-cap/received_events","type":"User","site_admin":false},"performed_via_github_app":null}