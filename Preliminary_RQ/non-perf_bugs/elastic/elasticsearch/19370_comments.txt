[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/236556589","html_url":"https://github.com/elastic/elasticsearch/issues/19370#issuecomment-236556589","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19370","id":236556589,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNjU1NjU4OQ==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2016-08-01T11:31:50Z","updated_at":"2016-08-01T11:31:50Z","author_association":"MEMBER","body":"@escheie Thanks for reporting! I reproduced it and will come back with a potential fix.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/237724350","html_url":"https://github.com/elastic/elasticsearch/issues/19370#issuecomment-237724350","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19370","id":237724350,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNzcyNDM1MA==","user":{"login":"escheie","id":1410311,"node_id":"MDQ6VXNlcjE0MTAzMTE=","avatar_url":"https://avatars2.githubusercontent.com/u/1410311?v=4","gravatar_id":"","url":"https://api.github.com/users/escheie","html_url":"https://github.com/escheie","followers_url":"https://api.github.com/users/escheie/followers","following_url":"https://api.github.com/users/escheie/following{/other_user}","gists_url":"https://api.github.com/users/escheie/gists{/gist_id}","starred_url":"https://api.github.com/users/escheie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/escheie/subscriptions","organizations_url":"https://api.github.com/users/escheie/orgs","repos_url":"https://api.github.com/users/escheie/repos","events_url":"https://api.github.com/users/escheie/events{/privacy}","received_events_url":"https://api.github.com/users/escheie/received_events","type":"User","site_admin":false},"created_at":"2016-08-05T00:23:25Z","updated_at":"2016-08-05T00:23:25Z","author_association":"NONE","body":"Thanks tlrx for looking into the issue.   I've found that setting  `discovery.zen.ping.unicast.concurrent_connects` to 1 (default value is 10) limits the number of threads that pile up as the lock gets released to the threads waiting on disconnect every 30s between connection timeouts.   When it was 10, the connect threads could theoretically hold the lock forever, preventing the disconnect threads from ever getting a chance to complete.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/237774021","html_url":"https://github.com/elastic/elasticsearch/issues/19370#issuecomment-237774021","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19370","id":237774021,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNzc3NDAyMQ==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2016-08-05T07:14:44Z","updated_at":"2016-08-05T07:14:44Z","author_association":"MEMBER","body":"@escheie True. But I think the comment made is the #19719 makes sense and changing the connection timeout for pings will help. But I still need to think about it again.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/237916865","html_url":"https://github.com/elastic/elasticsearch/issues/19370#issuecomment-237916865","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19370","id":237916865,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNzkxNjg2NQ==","user":{"login":"escheie","id":1410311,"node_id":"MDQ6VXNlcjE0MTAzMTE=","avatar_url":"https://avatars2.githubusercontent.com/u/1410311?v=4","gravatar_id":"","url":"https://api.github.com/users/escheie","html_url":"https://github.com/escheie","followers_url":"https://api.github.com/users/escheie/followers","following_url":"https://api.github.com/users/escheie/following{/other_user}","gists_url":"https://api.github.com/users/escheie/gists{/gist_id}","starred_url":"https://api.github.com/users/escheie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/escheie/subscriptions","organizations_url":"https://api.github.com/users/escheie/orgs","repos_url":"https://api.github.com/users/escheie/repos","events_url":"https://api.github.com/users/escheie/events{/privacy}","received_events_url":"https://api.github.com/users/escheie/received_events","type":"User","site_admin":false},"created_at":"2016-08-05T17:49:02Z","updated_at":"2016-08-05T17:49:02Z","author_association":"NONE","body":"With more testing overnight, I found that setting the \"discovery.zen.ping.unicast.concurrent_connects\" to 1 only works if TRACE logging is enabled for discovery.   Seems that little extra time the connect thread spends logging gives the other threads performing the disconnect a chance to get the lock.  Would a shorter connect timeout help if it is still more than the interval that connects are attempted which appear to be every 1.5 seconds? \n\nLooks like the KeyedLock used by NettyTransport in 2.x and TcpTransport in 5.x supports a fair option so that threads are able to acquire the lock in the order they request it.  This fair option is currently set to false.  If threads are able to obtain the lock in they order they request it, then that should ensure the disconnect threads get a chance to run between connection attempts.  I suppose enabling the fair option though would result in a significant performance penalty, so probably not an option.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/237939292","html_url":"https://github.com/elastic/elasticsearch/issues/19370#issuecomment-237939292","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19370","id":237939292,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNzkzOTI5Mg==","user":{"login":"escheie","id":1410311,"node_id":"MDQ6VXNlcjE0MTAzMTE=","avatar_url":"https://avatars2.githubusercontent.com/u/1410311?v=4","gravatar_id":"","url":"https://api.github.com/users/escheie","html_url":"https://github.com/escheie","followers_url":"https://api.github.com/users/escheie/followers","following_url":"https://api.github.com/users/escheie/following{/other_user}","gists_url":"https://api.github.com/users/escheie/gists{/gist_id}","starred_url":"https://api.github.com/users/escheie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/escheie/subscriptions","organizations_url":"https://api.github.com/users/escheie/orgs","repos_url":"https://api.github.com/users/escheie/repos","events_url":"https://api.github.com/users/escheie/events{/privacy}","received_events_url":"https://api.github.com/users/escheie/received_events","type":"User","site_admin":false},"created_at":"2016-08-05T19:18:24Z","updated_at":"2016-08-05T19:18:24Z","author_association":"NONE","body":"I've confirmed that enabling the \"fair\" flag in the KeyedLock does prevent the number of threads from growing unbounded.   The maximum number of threads that pile up equals (discovery.zen.ping.unicast.concurrent_connects \\* connect_timeout)/(disconnect frequency) = 10*30/3 = 100.   This number can be reduced by lowering discovery.zen.ping.unicast.concurrent_connects in the configuration or if the connect_timeout is also lowered as proposed.  \n\nSince it looks like the KeyedLock is only used during connect and disconnect and not for connection lookup, enabling the fair flag may not impact performance as I previously feared.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/242021791","html_url":"https://github.com/elastic/elasticsearch/issues/19370#issuecomment-242021791","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19370","id":242021791,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MjAyMTc5MQ==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2016-08-24T10:34:27Z","updated_at":"2016-08-24T10:34:27Z","author_association":"MEMBER","body":"Thanks @escheie ! Your effort and investigation are great.\n\nI do feel like the issue happens because we try to disconnect from nodes even if we never succeed to connect to them, and `UnicastZenPing` blindly piles up thread for disconnecting them (and these threads try to acquire a lock and slow dows ping threads too).\n\nI proposed a new fix #19719, I'm wondering if it works for you too.\n","performed_via_github_app":null}]