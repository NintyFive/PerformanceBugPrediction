[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/98108014","html_url":"https://github.com/elastic/elasticsearch/issues/10899#issuecomment-98108014","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10899","id":98108014,"node_id":"MDEyOklzc3VlQ29tbWVudDk4MTA4MDE0","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2015-05-01T11:30:12Z","updated_at":"2015-05-01T11:30:12Z","author_association":"MEMBER","body":"@stuartjk1606 you could do this with the script option on the terms aggregation. You can use the script to get the value of a particular field and extract a portion of it to be used as the key for the terms bucket as in this example: \n\n``` javascript\nDELETE test\n\nPOST test/doc/1\n{\n  \"my_field\": \"string_of_multiple_parts_1\"\n}\nPOST test/doc/2\n{\n  \"my_field\": \"string_of_multiple_parts_2\"\n}\nPOST test/doc/3\n{\n  \"my_field\": \"other1_of_multiple_parts_3\"\n}\nPOST test/doc/4\n{\n  \"my_field\": \"other1_of_multiple_parts_4\"\n}\n\n# Normal terms agg will return a bucket for each unique term\nGET test/_search\n{\n  \"size\": 0, \n  \"aggs\": {\n    \"my_terms\": {\n      \"terms\": {\n        \"field\": \"my_field\",\n        \"size\": 10\n      }\n    }\n  }\n}\n\n# Scripted terms aggregation will return buckets where the key is defined by the output of the script run on each document\nGET test/_search\n{\n  \"size\": 0, \n  \"aggs\": {\n    \"my_terms\": {\n      \"terms\": {\n        \"script\": \"doc['my_field'].getValue().substring(0,6)\", \n        \"size\": 10\n      }\n    }\n  }\n}\n```\n\nsee this section of the docs for more information on useing scripts with the terms aggregation: http://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html#search-aggregations-bucket-terms-aggregation-script\n\nand this section for more information about scripting in general with Elasticsearch: http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-scripting.html\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/98144941","html_url":"https://github.com/elastic/elasticsearch/issues/10899#issuecomment-98144941","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10899","id":98144941,"node_id":"MDEyOklzc3VlQ29tbWVudDk4MTQ0OTQx","user":{"login":"stuartjk1606","id":12169851,"node_id":"MDQ6VXNlcjEyMTY5ODUx","avatar_url":"https://avatars1.githubusercontent.com/u/12169851?v=4","gravatar_id":"","url":"https://api.github.com/users/stuartjk1606","html_url":"https://github.com/stuartjk1606","followers_url":"https://api.github.com/users/stuartjk1606/followers","following_url":"https://api.github.com/users/stuartjk1606/following{/other_user}","gists_url":"https://api.github.com/users/stuartjk1606/gists{/gist_id}","starred_url":"https://api.github.com/users/stuartjk1606/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stuartjk1606/subscriptions","organizations_url":"https://api.github.com/users/stuartjk1606/orgs","repos_url":"https://api.github.com/users/stuartjk1606/repos","events_url":"https://api.github.com/users/stuartjk1606/events{/privacy}","received_events_url":"https://api.github.com/users/stuartjk1606/received_events","type":"User","site_admin":false},"created_at":"2015-05-01T14:30:05Z","updated_at":"2015-05-01T14:30:05Z","author_association":"NONE","body":"Just to clarify, I am trying to return these in the Kibana front end which does not allow for aggregation via direct scripting that I can see, which I am dissapointed with anyway.\n\nI tried to add this directly to the JSON input in Kibana on the terms \"Process\" aggregation (no option for \"scripted\")\n\n> { \"script\": \"doc['Process'].getValue().substring(0,6)\" }\n\nWhich returns\n\n\"\n\n> > Query Failed [Failed to execute main query]\n> > ...\n> > Caused by: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Number\n> > ...\n> > \"\n\nI have also added a partial.groovy script in %elasticsearch%/config/scripts containing both the below lines\n\n> doc[field_name].getValue().substring(partial_start,partial_for)\n> doc[Process].getValue().substring(0,6)\n\nAdd then again added it to the aggregation json input box while setting Terms to Process\n\n> { \"script_file\": \"partial\",\n> \"params\": {\n>    \"field_name\": \"'Process'\",\n>    \"partial_start\": 0,\n>    \"partial_for\": 6 }}\n\nBoth instances of partial.groovy return GroovyScriptExecutionException[ArrayIndexOutOfBoundsException[null]]\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/98154602","html_url":"https://github.com/elastic/elasticsearch/issues/10899#issuecomment-98154602","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10899","id":98154602,"node_id":"MDEyOklzc3VlQ29tbWVudDk4MTU0NjAy","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2015-05-01T15:14:36Z","updated_at":"2015-05-01T15:14:36Z","author_association":"MEMBER","body":"@stuartjk1606 I didn't realise you were doing this in Kibana. The first way you described won't work because Kibana only allows Lucene expressions by (for security reasons) which don't support strings, only numeric values. It looks like the script_file approach is working in that it is finding the script and attempting to execute it (hence the GroovyScriptExecutionException) but its erroring during execution, possibly due to getting an empty string back from the `getValue()` method and so throwing an ArrayIndexOutOfBoundsException. Maybe add a check for empty string to your script and also ensure the string length is greater than or equal to 6 before you substring it?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/98683963","html_url":"https://github.com/elastic/elasticsearch/issues/10899#issuecomment-98683963","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10899","id":98683963,"node_id":"MDEyOklzc3VlQ29tbWVudDk4NjgzOTYz","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-05-04T11:38:07Z","updated_at":"2015-05-04T11:38:07Z","author_association":"CONTRIBUTOR","body":"Be aware that, while scripting allows you to do these kinds of aggregations with data you already have indexed, the query performance will be nowhere near as good as having your data indexed properly.  For instance you could use the `pattern` tokenizer to extract the relevant bits of the string into separate fields:\n\n```\nDELETE test\nPUT test\n{\n  \"settings\": {\n    \"analysis\": {\n      \"analyzer\": {\n        \"first_part\": {\n          \"tokenizer\": \"first_part\"\n        },\n        \"second_part\": {\n          \"tokenizer\": \"second_part\"\n        }\n      },\n      \"tokenizer\": {\n        \"first_part\": {\n          \"type\": \"pattern\",\n          \"pattern\": \"^([^_]+)\",\n          \"group\": 1\n        },\n        \"second_part\": {\n          \"type\": \"pattern\",\n          \"pattern\": \"^[^_]+_([^_]+)\",\n          \"group\": 1\n        }\n      }\n    }\n  }\n}\n\nPUT test/_mapping/test\n{\n  \"properties\": {\n    \"code\": {\n      \"type\": \"string\",\n      \"index\": \"not_analyzed\",\n      \"fields\": {\n        \"first\": {\n          \"type\": \"string\",\n          \"analyzer\": \"first_part\"\n        },\n        \"second\": {\n          \"type\": \"string\",\n          \"analyzer\": \"second_part\"\n        }\n      }\n    }\n  }\n}\n\nPOST test/test/_bulk\n{\"index\":{}}\n{\"code\":\"foo_abc\"}\n{\"index\":{}}\n{\"code\":\"Foo_abc\"}\n{\"index\":{}}\n{\"code\":\"foo_def\"}\n{\"index\":{}}\n{\"code\":\"Foo_def\"}\n\nGET /test/_search?size=0\n{\n  \"aggs\": {\n    \"first\": {\n      \"terms\": {\n        \"field\": \"code.first\"\n      },\n      \"aggs\": {\n        \"second\": {\n          \"terms\": {\n            \"field\": \"code.second\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/349617852","html_url":"https://github.com/elastic/elasticsearch/issues/10899#issuecomment-349617852","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10899","id":349617852,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTYxNzg1Mg==","user":{"login":"jilinhao","id":16301882,"node_id":"MDQ6VXNlcjE2MzAxODgy","avatar_url":"https://avatars3.githubusercontent.com/u/16301882?v=4","gravatar_id":"","url":"https://api.github.com/users/jilinhao","html_url":"https://github.com/jilinhao","followers_url":"https://api.github.com/users/jilinhao/followers","following_url":"https://api.github.com/users/jilinhao/following{/other_user}","gists_url":"https://api.github.com/users/jilinhao/gists{/gist_id}","starred_url":"https://api.github.com/users/jilinhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jilinhao/subscriptions","organizations_url":"https://api.github.com/users/jilinhao/orgs","repos_url":"https://api.github.com/users/jilinhao/repos","events_url":"https://api.github.com/users/jilinhao/events{/privacy}","received_events_url":"https://api.github.com/users/jilinhao/received_events","type":"User","site_admin":false},"created_at":"2017-12-06T11:54:50Z","updated_at":"2017-12-06T11:54:50Z","author_association":"NONE","body":"GET logstash-i-2017.11.30/_search?pretty\r\n{\r\n    \"aggs\" : {\r\n        \"destid\" : {\r\n            \"terms\" : {\r\n                \"script\" : {\r\n                    \"source\": \"doc['destid'].value\",\r\n                    \"lang\": \"painless\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nwhy?\r\n{\r\n  \"error\": {\r\n    \"root_cause\": [\r\n      {\r\n        \"type\": \"parsing_exception\",\r\n        \"reason\": \"Unexpected token VALUE_STRING [script] in [destid].\",\r\n        \"line\": 5,\r\n        \"col\": 29\r\n      }\r\n    ],\r\n    \"type\": \"parsing_exception\",\r\n    \"reason\": \"Unexpected token VALUE_STRING [script] in [destid].\",\r\n    \"line\": 5,\r\n    \"col\": 29\r\n  },\r\n  \"status\": 400\r\n}","performed_via_github_app":null}]