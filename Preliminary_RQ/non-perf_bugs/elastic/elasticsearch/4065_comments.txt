[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/27678491","html_url":"https://github.com/elastic/elasticsearch/issues/4065#issuecomment-27678491","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4065","id":27678491,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Njc4NDkx","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2013-11-04T11:20:34Z","updated_at":"2013-11-04T11:20:34Z","author_association":"MEMBER","body":"I think it will better (and more consistent with other apis) to have `/_cluster/state/{metrics}/{indices}` where metrics can be `all` for people that want to get all info for specific indices.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31449577","html_url":"https://github.com/elastic/elasticsearch/issues/4065#issuecomment-31449577","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4065","id":31449577,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNDQ5NTc3","user":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"created_at":"2014-01-02T12:19:04Z","updated_at":"2014-01-02T12:19:04Z","author_association":"MEMBER","body":"Going with boaz suggestion sounds good, makes it more consistent.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31453190","html_url":"https://github.com/elastic/elasticsearch/issues/4065#issuecomment-31453190","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4065","id":31453190,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNDUzMTkw","user":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"created_at":"2014-01-02T13:46:11Z","updated_at":"2014-01-02T13:46:11Z","author_association":"MEMBER","body":"I think we can remove the `index_templates` metric (is it is part of the `metadata` structure being returned), but add a  parameter `index_templates`, which contains the templates to be returned\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31455725","html_url":"https://github.com/elastic/elasticsearch/issues/4065#issuecomment-31455725","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4065","id":31455725,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNDU1NzI1","user":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"created_at":"2014-01-02T14:32:57Z","updated_at":"2014-01-02T14:32:57Z","author_association":"MEMBER","body":"After spending a bit more time with this, the following issue needs to be solved in a useful manner:\n\nRight now, all the filtering capabilities for the indices are only applied for the metadata being returned, either getting certain index_templates or getting back data for specific indices only. However the latter one would be as important in the routing table as well (as the routing table can get pretty big when the data for all indices is being returned and there are lots of shards).\n\nPossible solution would be to either apply the filtering logic everywhere in the cluster state response where index data is being returned, as I think it would be confusing for users to filter by index the see more data being returned in the routing table data.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31460426","html_url":"https://github.com/elastic/elasticsearch/issues/4065#issuecomment-31460426","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4065","id":31460426,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNDYwNDI2","user":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"created_at":"2014-01-02T15:43:34Z","updated_at":"2014-01-02T15:43:34Z","author_association":"MEMBER","body":"Going to enhance the transport cluster state action logic to filter out indices everywhere it is needed... including the routing table\n","performed_via_github_app":null}]