{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/6931","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6931/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6931/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6931/events","html_url":"https://github.com/elastic/elasticsearch/issues/6931","id":38233051,"node_id":"MDU6SXNzdWUzODIzMzA1MQ==","number":6931,"title":"Unassigned replica shards after node startup","user":{"login":"binoyaf","id":8208687,"node_id":"MDQ6VXNlcjgyMDg2ODc=","avatar_url":"https://avatars1.githubusercontent.com/u/8208687?v=4","gravatar_id":"","url":"https://api.github.com/users/binoyaf","html_url":"https://github.com/binoyaf","followers_url":"https://api.github.com/users/binoyaf/followers","following_url":"https://api.github.com/users/binoyaf/following{/other_user}","gists_url":"https://api.github.com/users/binoyaf/gists{/gist_id}","starred_url":"https://api.github.com/users/binoyaf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/binoyaf/subscriptions","organizations_url":"https://api.github.com/users/binoyaf/orgs","repos_url":"https://api.github.com/users/binoyaf/repos","events_url":"https://api.github.com/users/binoyaf/events{/privacy}","received_events_url":"https://api.github.com/users/binoyaf/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-07-19T13:07:23Z","updated_at":"2015-11-21T16:15:17Z","closed_at":"2015-11-21T16:15:17Z","author_association":"NONE","active_lock_reason":null,"body":"I've had an issue during recovery of shards after node startup in a two node cluster. Both nodes are defined as master, data, and the cluster has 4 indexes with 1 shard and 1 replica each.\n\nI get the issue with these steps-\n1. Bring node-1 up (master)\n2. Bring node-2 up. At this point, both primary and replicas are allocated.\n3. Bring node-1 down. Node-2 gets elected as the master. The 4 replica shards (of each index) is now unassigned.\n4. Bring node-1 up. At this point, a couple of the replica shards (randomly belonging to any of the 4 indexes) remain unassigned.\n\nBoth servers are running elasticsearch-1.0.0 embedded and use Oracle JRE 1.6.0_26. I have a custom analyzer plugin defined.\n\n```\nNode-2 JVM\nRecoverySource.recover(StartRecoveryRequest)\n- throws DelayRecoveryException(\"source node does not have the shard listed in its state as allocated on the node\")\n\nMessageChannelHandler\n- transportChannel.sendResponse(e)\n```\n\n```\nNode-1 JVM\nIn response to the sendResponse call on Node-VM,\n- Message not fully read (response) for [23] handler future(org.elasticsearch.indices.recovery.RecoveryTarget$4@59df9cf4), error [true], resetting\nand then from RecoveryTarget.doRecovery\n- java.util.concurrent.ExecutionException: org.elasticsearch.transport.RemoteTransportException: Failed to deserialize exception response from stream\n```\n\nNow, without the analyzer plugin it works fine- even though the plugin itself did not throw any exceptions. The issue was because I had a custom classloader set in Settings on node initialization, but this was later overwritten to null by PluginService.updatedSettings during plugin initialization. I have changed the code in PluginService.updatedSettings to-\n\n```\n    public Settings updatedSettings() {\n        ImmutableSettings.Builder builder = ImmutableSettings.settingsBuilder()\n                .put(this.settings);\n        for (Tuple<PluginInfo, Plugin> plugin : plugins) {\n            builder.put(plugin.v2().additionalSettings().getAsMap());\n        }\n        return builder.build();\n    }\n```\n\nThis overloaded version does not set the classloader variable (assuming that plugin's don't need to set classloader on Settings).\n\nAll tests ran fine with the change. I couldn't find a similar fix in the latest version, do let me know if I should submit a pull request.\n\nException trace for reference:\n\n```\n[2763cc060c8d75d85dbb357f5e220d8c] Message not fully read (response) for [80] handler future(org.elasticsearch.indices.recovery.RecoveryTarget$4@5445c50d), error [true], resetting\n[2763cc060c8d75d85dbb357f5e220d8c] [data][0] failed to start shard\n\norg.elasticsearch.indices.recovery.RecoveryFailedException: [data][0]: Recovery failed from [ca6450277735991d8085f84de36d6ecd][wfO9NNewTHuFdNRPhiE7og][MYHOST][inet[/10.225.115.166:9301]]{master=true} into [2763cc060c8d75d85dbb357f5e220d8c][agXTk8sKQKeMnHtspaWBNw][MYHOST][inet[/10.225.115.166:9300]]{master=true}\n    at org.elasticsearch.indices.recovery.RecoveryTarget.doRecovery(RecoveryTarget.java:303)\n    at org.elasticsearch.indices.recovery.RecoveryTarget.access$300(RecoveryTarget.java:65)\n    at org.elasticsearch.indices.recovery.RecoveryTarget$2.run(RecoveryTarget.java:171)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n    at java.lang.Thread.run(Thread.java:662)\nCaused by: org.elasticsearch.transport.TransportSerializationException: Failed to deserialize exception response from stream\n    at org.elasticsearch.transport.netty.MessageChannelHandler.handlerResponseError(MessageChannelHandler.java:169)\n    at org.elasticsearch.transport.netty.MessageChannelHandler.messageReceived(MessageChannelHandler.java:123)\n    at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:296)\n    at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:462)\n    at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.callDecode(FrameDecoder.java:443)\n    at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.messageReceived(FrameDecoder.java:303)\n    at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:268)\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:255)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)\n    at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)\n    at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:318)\n    at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)\n    at org.elasticsearch.common.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\n    at org.elasticsearch.common.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n    at java.lang.Thread.run(Thread.java:662)\nCaused by: java.io.InvalidClassException: failed to read class descriptor\n    at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1566)\n    at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1495)\n    at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1731)\n    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328)\n    at java.io.ObjectInputStream.readObject(ObjectInputStream.java:350)\n    at org.elasticsearch.transport.netty.MessageChannelHandler.handlerResponseError(MessageChannelHandler.java:167)\n    ... 23 more\nCaused by: java.lang.ClassNotFoundException: org.elasticsearch.transport.RemoteTransportException\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1680)\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1526)\n    at org.elasticsearch.common.io.ThrowableObjectInputStream.loadClass(ThrowableObjectInputStream.java:93)\n    at org.elasticsearch.common.io.ThrowableObjectInputStream.readClassDescriptor(ThrowableObjectInputStream.java:67)\n    at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1564)\n    ... 28 more\n[2763cc060c8d75d85dbb357f5e220d8c] [data][0] state: [RECOVERING]->[CLOSED], reason [recovery failure [RecoveryFailedException[[data][0]: Recovery failed from [ca6450277735991d8085f84de36d6ecd][wfO9NNewTHuFdNRPhiE7og][MYHOST][inet[/10.225.115.166:9301]]{master=true} into [2763cc060c8d75d85dbb357f5e220d8c][agXTk8sKQKeMnHtspaWBNw][MYHOST][inet[/10.225.115.166:9300]]{master=true}]; nested: RemoteTransportException[Failed to deserialize exception response from stream]; nested: TransportSerializationException[Failed to deserialize exception response from stream]; nested: InvalidClassException[failed to read class descriptor]; nested: ClassNotFoundException[org.elasticsearch.transport.RemoteTransportException]; ]]\n```\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}