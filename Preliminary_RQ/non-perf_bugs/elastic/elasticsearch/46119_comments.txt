[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/526131442","html_url":"https://github.com/elastic/elasticsearch/issues/46119#issuecomment-526131442","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46119","id":526131442,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjEzMTQ0Mg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-08-29T10:45:13Z","updated_at":"2019-08-29T10:45:13Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/528292620","html_url":"https://github.com/elastic/elasticsearch/issues/46119#issuecomment-528292620","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46119","id":528292620,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODI5MjYyMA==","user":{"login":"pgomulka","id":11137008,"node_id":"MDQ6VXNlcjExMTM3MDA4","avatar_url":"https://avatars0.githubusercontent.com/u/11137008?v=4","gravatar_id":"","url":"https://api.github.com/users/pgomulka","html_url":"https://github.com/pgomulka","followers_url":"https://api.github.com/users/pgomulka/followers","following_url":"https://api.github.com/users/pgomulka/following{/other_user}","gists_url":"https://api.github.com/users/pgomulka/gists{/gist_id}","starred_url":"https://api.github.com/users/pgomulka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgomulka/subscriptions","organizations_url":"https://api.github.com/users/pgomulka/orgs","repos_url":"https://api.github.com/users/pgomulka/repos","events_url":"https://api.github.com/users/pgomulka/events{/privacy}","received_events_url":"https://api.github.com/users/pgomulka/received_events","type":"User","site_admin":false},"created_at":"2019-09-05T10:00:09Z","updated_at":"2019-09-20T10:59:57Z","author_association":"CONTRIBUTOR","body":"changes between current format and ECS\r\n`timestamp` -> `@timestamp`\r\n`level` -> `log.level`\r\n`component` -> `log.logger` also have a different format `org.elasticsearch.xpack.ilm.action.TransportPutLifecycleAction` vs previously `o.e.d.r.a.a.i.RestCreateIndexAction`\r\n\r\n\r\nAdditional fields from ES are not a problem, but could be migrated. \r\nThese could be be part of `service.` set? so for instance `service.node.name`\r\n`node.name` \r\n`node.id`\r\n`cluster.name`\r\n`cluster.uuid`\r\n\r\nwe would map these to the custom fields. The changes from the fields above would apply\r\nSearch Slow logs\r\nIndex Slow logs\r\nDeprecation logs \r\n\r\nwhat other fields should we add to our logs to make it more functional once parsed?\r\n\r\nadditional fields added by ECSLayout\r\nservice.name -> would be cluster name?\r\nprocess.thread.name -> elasticsearch[node-0][masterService#updateTask][T#1]\r\n\r\nECSLayout defines exceptions these way.\r\n\"error.code\": \"java.lang.IllegalArgumentException\",\r\n\"error.message\": \"persistent setting [cluster.routing.allocation.e5nable], not recognized\",\r\n\"error.stack_trace\": array of strings (lines of stactrace\r\n\r\n\r\nconsidering moving markers to json fields","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/528764846","html_url":"https://github.com/elastic/elasticsearch/issues/46119#issuecomment-528764846","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46119","id":528764846,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODc2NDg0Ng==","user":{"login":"cachedout","id":111616,"node_id":"MDQ6VXNlcjExMTYxNg==","avatar_url":"https://avatars3.githubusercontent.com/u/111616?v=4","gravatar_id":"","url":"https://api.github.com/users/cachedout","html_url":"https://github.com/cachedout","followers_url":"https://api.github.com/users/cachedout/followers","following_url":"https://api.github.com/users/cachedout/following{/other_user}","gists_url":"https://api.github.com/users/cachedout/gists{/gist_id}","starred_url":"https://api.github.com/users/cachedout/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cachedout/subscriptions","organizations_url":"https://api.github.com/users/cachedout/orgs","repos_url":"https://api.github.com/users/cachedout/repos","events_url":"https://api.github.com/users/cachedout/events{/privacy}","received_events_url":"https://api.github.com/users/cachedout/received_events","type":"User","site_admin":false},"created_at":"2019-09-06T08:32:00Z","updated_at":"2019-09-06T08:32:00Z","author_association":"CONTRIBUTOR","body":"cc: @elastic/stack-monitoring for visibility ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/529492545","html_url":"https://github.com/elastic/elasticsearch/issues/46119#issuecomment-529492545","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46119","id":529492545,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTQ5MjU0NQ==","user":{"login":"felixbarny","id":2163464,"node_id":"MDQ6VXNlcjIxNjM0NjQ=","avatar_url":"https://avatars3.githubusercontent.com/u/2163464?v=4","gravatar_id":"","url":"https://api.github.com/users/felixbarny","html_url":"https://github.com/felixbarny","followers_url":"https://api.github.com/users/felixbarny/followers","following_url":"https://api.github.com/users/felixbarny/following{/other_user}","gists_url":"https://api.github.com/users/felixbarny/gists{/gist_id}","starred_url":"https://api.github.com/users/felixbarny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/felixbarny/subscriptions","organizations_url":"https://api.github.com/users/felixbarny/orgs","repos_url":"https://api.github.com/users/felixbarny/repos","events_url":"https://api.github.com/users/felixbarny/events{/privacy}","received_events_url":"https://api.github.com/users/felixbarny/received_events","type":"User","site_admin":false},"created_at":"2019-09-09T14:08:27Z","updated_at":"2019-09-09T14:08:27Z","author_association":"NONE","body":"ECS specifies [`service.name`](https://www.elastic.co/guide/en/ecs/current/ecs-service.html) and `service.id`. In the docs, it says this:\r\n\r\n> In the case of Elasticsearch the service.name could contain the cluster name. For Beats the service.name is by default a copy of the service.type field if no name is specified.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/533508844","html_url":"https://github.com/elastic/elasticsearch/issues/46119#issuecomment-533508844","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46119","id":533508844,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMzUwODg0NA==","user":{"login":"pgomulka","id":11137008,"node_id":"MDQ6VXNlcjExMTM3MDA4","avatar_url":"https://avatars0.githubusercontent.com/u/11137008?v=4","gravatar_id":"","url":"https://api.github.com/users/pgomulka","html_url":"https://github.com/pgomulka","followers_url":"https://api.github.com/users/pgomulka/followers","following_url":"https://api.github.com/users/pgomulka/following{/other_user}","gists_url":"https://api.github.com/users/pgomulka/gists{/gist_id}","starred_url":"https://api.github.com/users/pgomulka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgomulka/subscriptions","organizations_url":"https://api.github.com/users/pgomulka/orgs","repos_url":"https://api.github.com/users/pgomulka/repos","events_url":"https://api.github.com/users/pgomulka/events{/privacy}","received_events_url":"https://api.github.com/users/pgomulka/received_events","type":"User","site_admin":false},"created_at":"2019-09-20T11:02:18Z","updated_at":"2019-09-20T11:02:18Z","author_association":"CONTRIBUTOR","body":"sample ECS json log line\r\n```\r\n{\"@timestamp\":\"2019-09-20T10:54:39.539Z\", \"log.level\": \"INFO\", \"message\":\"adding index lifecycle policy [watch-history-ilm-policy]\", \"service.name\":\"ES_ECS\",\"process.thread.name\":\"elasticsearch[node-0][masterService#updateTask][T#1]\",\"log.logger\":\"org.elasticsearch.xpack.ilm.action.TransportPutLifecycleAction\",\"type\":\"console\",\"node.id\":\"suUibtbUTW6fkc5IyaGpNg\",\"node.name\":\"node-0\",\"cluster.uuid\":\"4GbuHHtrR4Klf_u8Hmdsng\"}\r\n```\r\n\r\nwith exception\r\n```\r\n{\"@timestamp\":\"2019-09-20T11:01:09.040Z\", \"log.level\": \"WARN\", \"message\":\"path: /_cluster/settings, params: {}\", \"service.name\":\"ES_ECS\",\"process.thread.name\":\"elasticsearch[node-0][http_server_worker][T#3]\",\"log.logger\":\"rest.suppressed\",\"type\":\"console\",\"node.id\":\"_oWcocLVQCOe8ExcWMwZMg\",\"node.name\":\"node-0\",\"cluster.uuid\":\"Wz-9LsTlS2mgpEL2yaxhLA\",\"error.code\":\"com.fasterxml.jackson.core.JsonParseException\",\"error.message\":\"Illegal unquoted character ((CTRL-CHAR, code 10)): has to be escaped using backslash to be included in name\\n at [Source: org.elasticsearch.transport.netty4.ByteBufStreamInput@f835b9d; line: 3, column: 36]\",\"error.stack_trace\":[\r\n \"com.fasterxml.jackson.core.JsonParseException: Illegal unquoted character ((CTRL-CHAR, code 10)): has to be escaped using backslash to be included in name\\n at [Source: org.elasticsearch.transport.netty4.ByteBufStreamInput@f835b9d; line: 3, column: 36]\",\r\n \"\\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)\",\r\n \"\\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)\",\r\n \"\\tat com.fasterxml.jackson.core.base.ParserMinimalBase._throwUnquotedSpace(ParserMinimalBase.java:522)\",\r\n \"\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedName(UTF8StreamJsonParser.java:1963)\",\r\n \"\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseLongName(UTF8StreamJsonParser.java:1860)\",\r\n \"\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumName2(UTF8StreamJsonParser.java:1840)\",\r\n \"\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumName(UTF8StreamJsonParser.java:1797)\",\r\n \"\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseName(UTF8StreamJsonParser.java:1732)\",\r\n \"\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:776)\",\r\n \"\\tat org.elasticsearch.common.xcontent.json.JsonXContentParser.nextToken(JsonXContentParser.java:52)\",\r\n \"\\tat org.elasticsearch.common.xcontent.support.AbstractXContentParser.readGenericMap(AbstractXContentParser.java:335)\",\r\n \"\\tat org.elasticsearch.common.xcontent.support.AbstractXContentParser.readMap(AbstractXContentParser.java:322)\",\r\n \"\\tat org.elasticsearch.common.xcontent.support.AbstractXContentParser.readValue(AbstractXContentParser.java:375)\",\r\n \"\\tat org.elasticsearch.common.xcontent.support.AbstractXContentParser.lambda$readMap$0(AbstractXContentParser.java:322)\",\r\n \"\\tat org.elasticsearch.common.xcontent.support.AbstractXContentParser.readGenericMap(AbstractXContentParser.java:342)\",\r\n \"\\tat org.elasticsearch.common.xcontent.support.AbstractXContentParser.readMap(AbstractXContentParser.java:322)\",\r\n \"\\tat org.elasticsearch.common.xcontent.support.AbstractXContentParser.readMap(AbstractXContentParser.java:302)\",\r\n \"\\tat org.elasticsearch.common.xcontent.support.AbstractXContentParser.map(AbstractXContentParser.java:266)\",\r\n \"\\tat org.elasticsearch.rest.action.admin.cluster.RestClusterUpdateSettingsAction.prepareRequest(RestClusterUpdateSettingsAction.java:58)\",\r\n \"\\tat org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:87)\",\r\n \"\\tat org.elasticsearch.xpack.security.rest.SecurityRestFilter.lambda$handleRequest$0(SecurityRestFilter.java:58)\",\r\n \"\\tat org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:63)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.lambda$writeAuthToContext$24(AuthenticationService.java:570)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.writeAuthToContext(AuthenticationService.java:579)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.finishAuthentication(AuthenticationService.java:560)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.consumeUser(AuthenticationService.java:510)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.lambda$consumeToken$16(AuthenticationService.java:404)\",\r\n \"\\tat org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:63)\",\r\n \"\\tat org.elasticsearch.action.support.ContextPreservingActionListener.onResponse(ContextPreservingActionListener.java:43)\",\r\n \"\\tat org.elasticsearch.xpack.core.common.IteratingActionListener.onResponse(IteratingActionListener.java:120)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.lambda$consumeToken$13(AuthenticationService.java:374)\",\r\n \"\\tat org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:63)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.support.CachingUsernamePasswordRealm.lambda$authenticateWithCache$3(CachingUsernamePasswordRealm.java:175)\",\r\n \"\\tat org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:63)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.esnative.ReservedRealm.lambda$doAuthenticate$0(ReservedRealm.java:110)\",\r\n \"\\tat org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:63)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.esnative.ReservedRealm.getUserInfo(ReservedRealm.java:202)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.esnative.ReservedRealm.doAuthenticate(ReservedRealm.java:88)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.support.CachingUsernamePasswordRealm.authenticateWithCache(CachingUsernamePasswordRealm.java:166)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.support.CachingUsernamePasswordRealm.authenticate(CachingUsernamePasswordRealm.java:103)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.lambda$consumeToken$15(AuthenticationService.java:365)\",\r\n \"\\tat org.elasticsearch.xpack.core.common.IteratingActionListener.run(IteratingActionListener.java:102)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.consumeToken(AuthenticationService.java:408)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.lambda$extractToken$11(AuthenticationService.java:335)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.extractToken(AuthenticationService.java:345)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.lambda$checkForApiKey$3(AuthenticationService.java:288)\",\r\n \"\\tat org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:63)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.ApiKeyService.authenticateWithApiKeyIfPresent(ApiKeyService.java:359)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.checkForApiKey(AuthenticationService.java:269)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.lambda$authenticateAsync$0(AuthenticationService.java:252)\",\r\n \"\\tat org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:63)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.TokenService.getAndValidateToken(TokenService.java:390)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.lambda$authenticateAsync$2(AuthenticationService.java:248)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.lambda$lookForExistingAuthentication$6(AuthenticationService.java:306)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.lookForExistingAuthentication(AuthenticationService.java:317)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService$Authenticator.authenticateAsync(AuthenticationService.java:244)\",\r\n \"\\tat org.elasticsearch.xpack.security.authc.AuthenticationService.authenticate(AuthenticationService.java:122)\",\r\n \"\\tat org.elasticsearch.xpack.security.rest.SecurityRestFilter.handleRequest(SecurityRestFilter.java:55)\",\r\n \"\\tat org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:220)\",\r\n \"\\tat org.elasticsearch.rest.RestController.tryAllHandlers(RestController.java:293)\",\r\n \"\\tat org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:164)\",\r\n \"\\tat org.elasticsearch.http.AbstractHttpServerTransport.dispatchRequest(AbstractHttpServerTransport.java:322)\",\r\n \"\\tat org.elasticsearch.http.AbstractHttpServerTransport.handleIncomingRequest(AbstractHttpServerTransport.java:372)\",\r\n \"\\tat org.elasticsearch.http.AbstractHttpServerTransport.incomingRequest(AbstractHttpServerTransport.java:301)\",\r\n \"\\tat org.elasticsearch.http.netty4.Netty4HttpRequestHandler.channelRead0(Netty4HttpRequestHandler.java:69)\",\r\n \"\\tat org.elasticsearch.http.netty4.Netty4HttpRequestHandler.channelRead0(Netty4HttpRequestHandler.java:31)\",\r\n \"\\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)\",\r\n \"\\tat org.elasticsearch.http.netty4.Netty4HttpPipeliningHandler.channelRead(Netty4HttpPipeliningHandler.java:58)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)\",\r\n \"\\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\",\r\n \"\\tat io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)\",\r\n \"\\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)\",\r\n \"\\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)\",\r\n \"\\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:328)\",\r\n \"\\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:302)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)\",\r\n \"\\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:287)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)\",\r\n \"\\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1421)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)\",\r\n \"\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)\",\r\n \"\\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)\",\r\n \"\\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\",\r\n \"\\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:697)\",\r\n \"\\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:597)\",\r\n \"\\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:551)\",\r\n \"\\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:511)\",\r\n \"\\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:918)\",\r\n \"\\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\",\r\n \"\\tat java.base/java.lang.Thread.run(Thread.java:835)\"]}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/616627132","html_url":"https://github.com/elastic/elasticsearch/issues/46119#issuecomment-616627132","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46119","id":616627132,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNjYyNzEzMg==","user":{"login":"pgomulka","id":11137008,"node_id":"MDQ6VXNlcjExMTM3MDA4","avatar_url":"https://avatars0.githubusercontent.com/u/11137008?v=4","gravatar_id":"","url":"https://api.github.com/users/pgomulka","html_url":"https://github.com/pgomulka","followers_url":"https://api.github.com/users/pgomulka/followers","following_url":"https://api.github.com/users/pgomulka/following{/other_user}","gists_url":"https://api.github.com/users/pgomulka/gists{/gist_id}","starred_url":"https://api.github.com/users/pgomulka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgomulka/subscriptions","organizations_url":"https://api.github.com/users/pgomulka/orgs","repos_url":"https://api.github.com/users/pgomulka/repos","events_url":"https://api.github.com/users/pgomulka/events{/privacy}","received_events_url":"https://api.github.com/users/pgomulka/received_events","type":"User","site_admin":false},"created_at":"2020-04-20T15:27:25Z","updated_at":"2020-04-20T15:28:18Z","author_association":"CONTRIBUTOR","body":"closed by #47105","performed_via_github_app":null}]