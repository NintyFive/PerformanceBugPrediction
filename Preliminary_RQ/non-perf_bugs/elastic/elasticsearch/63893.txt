{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/63893","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63893/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63893/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63893/events","html_url":"https://github.com/elastic/elasticsearch/issues/63893","id":724788856,"node_id":"MDU6SXNzdWU3MjQ3ODg4NTY=","number":63893,"title":"Update semantics or definition of `case_insensitive` in term queries","user":{"login":"swallez","id":213730,"node_id":"MDQ6VXNlcjIxMzczMA==","avatar_url":"https://avatars2.githubusercontent.com/u/213730?v=4","gravatar_id":"","url":"https://api.github.com/users/swallez","html_url":"https://github.com/swallez","followers_url":"https://api.github.com/users/swallez/followers","following_url":"https://api.github.com/users/swallez/following{/other_user}","gists_url":"https://api.github.com/users/swallez/gists{/gist_id}","starred_url":"https://api.github.com/users/swallez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/swallez/subscriptions","organizations_url":"https://api.github.com/users/swallez/orgs","repos_url":"https://api.github.com/users/swallez/repos","events_url":"https://api.github.com/users/swallez/events{/privacy}","received_events_url":"https://api.github.com/users/swallez/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":1967498216,"node_id":"MDU6TGFiZWwxOTY3NDk4MjE2","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Search","name":"Team:Search","color":"fef2c0","default":false,"description":"Meta label for search team"},{"id":929267538,"node_id":"MDU6TGFiZWw5MjkyNjc1Mzg=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/team-discuss","name":"team-discuss","color":"fbca04","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-10-19T16:41:40Z","updated_at":"2020-10-21T09:51:22Z","closed_at":"2020-10-21T09:51:22Z","author_association":"MEMBER","active_lock_reason":null,"body":"PR https://github.com/elastic/elasticsearch/pull/61596 added a new `case_insensitive` boolean flag to term queries. This is a boolean flag that can only be set to `true`, which is rather unusual.\r\n\r\nAfter talking to @markharwood it turns out the semantics of this flag is as follows:\r\n- not set: uses the field's definition (which may or not include lowercase normalization)\r\n- set to `true`: case insensitive\r\n- set to `false`: not supported as we can't enforce case sensitivity if the field has been normalized with a lowercase normalizer.\r\n\r\nFrom a Clients perspective, this makes this flag very much a snowflake. We can represent it as an optional boolean, but users will still have to be aware that this boolean, when set, can only be set to `true`. If the value for this flag comes from an application variable like a checkbox in a search dialog, users will have to add some logic to only set it if `true` and not if `false`.\r\n\r\nSo I suggest that we either change the semantics of this flag (and update the docs accordingly) or change its definition.\r\n\r\nChange semantics:\r\n* `true`: case insensitive\r\n* `false`: use the field's definition\r\n\r\nChange definition: rename it to `case_sensitivity` with values\r\n* `field_default` - use the field's setting\r\n* `insensitive` - case insensitive\r\n* and this leaves a door open to a future addition of `sensitive` if that make sense.\r\n\r\nChanging the semantics can be enough if we're sure that `sensitive` doesn't (and will never) make sense, and will just be about updating the doc and removing some validation checks.\r\n\r\nThe enumeration will still require some custom logic in applications, but won't be surprising as it will be a type conversion from a boolean (checkbox) to an enum.\r\n\r\n/cc @markharwood @jimczi ","closed_by":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"performed_via_github_app":null}