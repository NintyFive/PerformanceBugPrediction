[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/89434350","html_url":"https://github.com/elastic/elasticsearch/issues/10408#issuecomment-89434350","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10408","id":89434350,"node_id":"MDEyOklzc3VlQ29tbWVudDg5NDM0MzUw","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-04-03T22:05:05Z","updated_at":"2015-04-03T22:05:05Z","author_association":"CONTRIBUTOR","body":"Can you give more information about your use-case? I would be interested to know more about the big picture to see how we can improve elasticsearch to address your needs.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/89528011","html_url":"https://github.com/elastic/elasticsearch/issues/10408#issuecomment-89528011","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10408","id":89528011,"node_id":"MDEyOklzc3VlQ29tbWVudDg5NTI4MDEx","user":{"login":"JanJakes","id":141436,"node_id":"MDQ6VXNlcjE0MTQzNg==","avatar_url":"https://avatars2.githubusercontent.com/u/141436?v=4","gravatar_id":"","url":"https://api.github.com/users/JanJakes","html_url":"https://github.com/JanJakes","followers_url":"https://api.github.com/users/JanJakes/followers","following_url":"https://api.github.com/users/JanJakes/following{/other_user}","gists_url":"https://api.github.com/users/JanJakes/gists{/gist_id}","starred_url":"https://api.github.com/users/JanJakes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JanJakes/subscriptions","organizations_url":"https://api.github.com/users/JanJakes/orgs","repos_url":"https://api.github.com/users/JanJakes/repos","events_url":"https://api.github.com/users/JanJakes/events{/privacy}","received_events_url":"https://api.github.com/users/JanJakes/received_events","type":"User","site_admin":false},"created_at":"2015-04-04T08:29:54Z","updated_at":"2015-04-04T08:29:54Z","author_association":"NONE","body":"Our use case might be a little bit special - we use it to store quadkeys (GeoHash is not suitable for us) and to spread items evenly on map tiles by Prefix Aggregation (currently simulated by filters). However, aggregating items by a prefix of certain length seems to be quite a legit and general use case - one might want to group items to buckets by their prefixes (see http://stackoverflow.com/questions/23067983/term-aggregation-consider-only-the-prefix-to-aggregate) which can be quite useful for any string codes or hashes that have some defined structure. A more general way to look at it is that one could use strings as any type of tree structures (binary 0110..., quadtree 01032..., etc.) and aggregate items in subtrees by their prefix. GeoHash Aggregation is a special case of a more general \"string prefix aggregation\".\n\n**Some more details about our use case:**\nWe use custom quadkeys instead of GeoHash since it allows as to query items on a map per-tile (as they are really displayed on the map). A simple query to get top items for a particular tile would be something like \"_get N items with quadkey prefix P sorted by rating R with limit L_\".\n\nHowever, this could return many items in one particular region of the tile (they have all high rating) an we would not be able to display them all anyway because they would overlap (while other regions would be empty). To spread the items on a tile we want to group them by a prefix longer than the quadkey of the tile and get some Top Hits from each of the groups (each tile is thus partitioned in 4, 16, 64, etc. subregions depending on the prefix length). This is equivalent to GeoHash Aggregation, but it is much more general.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/90570455","html_url":"https://github.com/elastic/elasticsearch/issues/10408#issuecomment-90570455","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10408","id":90570455,"node_id":"MDEyOklzc3VlQ29tbWVudDkwNTcwNDU1","user":{"login":"sciphilo","id":10801841,"node_id":"MDQ6VXNlcjEwODAxODQx","avatar_url":"https://avatars0.githubusercontent.com/u/10801841?v=4","gravatar_id":"","url":"https://api.github.com/users/sciphilo","html_url":"https://github.com/sciphilo","followers_url":"https://api.github.com/users/sciphilo/followers","following_url":"https://api.github.com/users/sciphilo/following{/other_user}","gists_url":"https://api.github.com/users/sciphilo/gists{/gist_id}","starred_url":"https://api.github.com/users/sciphilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sciphilo/subscriptions","organizations_url":"https://api.github.com/users/sciphilo/orgs","repos_url":"https://api.github.com/users/sciphilo/repos","events_url":"https://api.github.com/users/sciphilo/events{/privacy}","received_events_url":"https://api.github.com/users/sciphilo/received_events","type":"User","site_admin":false},"created_at":"2015-04-07T14:04:52Z","updated_at":"2015-04-07T14:04:52Z","author_association":"NONE","body":"I'd find this very useful too.  Right now I'd like to be able to aggregate on hierarchical paths such as /1/2/3 by specifying a prefix or a depth (for example a depth of 2 would be /1/2).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/112441264","html_url":"https://github.com/elastic/elasticsearch/issues/10408#issuecomment-112441264","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10408","id":112441264,"node_id":"MDEyOklzc3VlQ29tbWVudDExMjQ0MTI2NA==","user":{"login":"JanJakes","id":141436,"node_id":"MDQ6VXNlcjE0MTQzNg==","avatar_url":"https://avatars2.githubusercontent.com/u/141436?v=4","gravatar_id":"","url":"https://api.github.com/users/JanJakes","html_url":"https://github.com/JanJakes","followers_url":"https://api.github.com/users/JanJakes/followers","following_url":"https://api.github.com/users/JanJakes/following{/other_user}","gists_url":"https://api.github.com/users/JanJakes/gists{/gist_id}","starred_url":"https://api.github.com/users/JanJakes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JanJakes/subscriptions","organizations_url":"https://api.github.com/users/JanJakes/orgs","repos_url":"https://api.github.com/users/JanJakes/repos","events_url":"https://api.github.com/users/JanJakes/events{/privacy}","received_events_url":"https://api.github.com/users/JanJakes/received_events","type":"User","site_admin":false},"created_at":"2015-06-16T13:56:26Z","updated_at":"2015-06-16T13:56:26Z","author_association":"NONE","body":"Any updates/ideas on this feature?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/118267640","html_url":"https://github.com/elastic/elasticsearch/issues/10408#issuecomment-118267640","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10408","id":118267640,"node_id":"MDEyOklzc3VlQ29tbWVudDExODI2NzY0MA==","user":{"login":"costasovo","id":1082140,"node_id":"MDQ6VXNlcjEwODIxNDA=","avatar_url":"https://avatars0.githubusercontent.com/u/1082140?v=4","gravatar_id":"","url":"https://api.github.com/users/costasovo","html_url":"https://github.com/costasovo","followers_url":"https://api.github.com/users/costasovo/followers","following_url":"https://api.github.com/users/costasovo/following{/other_user}","gists_url":"https://api.github.com/users/costasovo/gists{/gist_id}","starred_url":"https://api.github.com/users/costasovo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costasovo/subscriptions","organizations_url":"https://api.github.com/users/costasovo/orgs","repos_url":"https://api.github.com/users/costasovo/repos","events_url":"https://api.github.com/users/costasovo/events{/privacy}","received_events_url":"https://api.github.com/users/costasovo/received_events","type":"User","site_admin":false},"created_at":"2015-07-03T07:52:34Z","updated_at":"2015-07-03T07:52:34Z","author_association":"NONE","body":"This would be useful. +1\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/122250904","html_url":"https://github.com/elastic/elasticsearch/issues/10408#issuecomment-122250904","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10408","id":122250904,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMjI1MDkwNA==","user":{"login":"wuranbo","id":10477132,"node_id":"MDQ6VXNlcjEwNDc3MTMy","avatar_url":"https://avatars3.githubusercontent.com/u/10477132?v=4","gravatar_id":"","url":"https://api.github.com/users/wuranbo","html_url":"https://github.com/wuranbo","followers_url":"https://api.github.com/users/wuranbo/followers","following_url":"https://api.github.com/users/wuranbo/following{/other_user}","gists_url":"https://api.github.com/users/wuranbo/gists{/gist_id}","starred_url":"https://api.github.com/users/wuranbo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wuranbo/subscriptions","organizations_url":"https://api.github.com/users/wuranbo/orgs","repos_url":"https://api.github.com/users/wuranbo/repos","events_url":"https://api.github.com/users/wuranbo/events{/privacy}","received_events_url":"https://api.github.com/users/wuranbo/received_events","type":"User","site_admin":false},"created_at":"2015-07-17T11:28:41Z","updated_at":"2015-07-18T08:55:35Z","author_association":"NONE","body":"badly need. \nNow the RESTful url always contain the resource id, so the analyse of a kind of user action become impossible.\n\nConsidering most people [recommending best practices of url](http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api#restful) which has been widely deployed in many projects. For example:\n\n```\n/api/v0/user/456/setting\n/user/458\n/blog/7788\n/commit/4578\n```\n\n@JanJakes @jpountz \nWhen we want to a term-agg by path.The result should looks like \n\n```\n{\n     buckets: [\n    {\n       \"key\": \"/blog\",\n       \"doc_count\": 1000\n    } ,\n    {\n       \"key\": \"/user\",\n       \"doc_count\": 100\n    }\n  ]\n}\n```\n\n We only find out to use a complex script do this without additional index now.\n\nFuture more,  `/album/3434/track/2324` this kind of url is more harder..... \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/122477240","html_url":"https://github.com/elastic/elasticsearch/issues/10408#issuecomment-122477240","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10408","id":122477240,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMjQ3NzI0MA==","user":{"login":"wuranbo","id":10477132,"node_id":"MDQ6VXNlcjEwNDc3MTMy","avatar_url":"https://avatars3.githubusercontent.com/u/10477132?v=4","gravatar_id":"","url":"https://api.github.com/users/wuranbo","html_url":"https://github.com/wuranbo","followers_url":"https://api.github.com/users/wuranbo/followers","following_url":"https://api.github.com/users/wuranbo/following{/other_user}","gists_url":"https://api.github.com/users/wuranbo/gists{/gist_id}","starred_url":"https://api.github.com/users/wuranbo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wuranbo/subscriptions","organizations_url":"https://api.github.com/users/wuranbo/orgs","repos_url":"https://api.github.com/users/wuranbo/repos","events_url":"https://api.github.com/users/wuranbo/events{/privacy}","received_events_url":"https://api.github.com/users/wuranbo/received_events","type":"User","site_admin":false},"created_at":"2015-07-18T03:06:51Z","updated_at":"2015-07-18T06:35:31Z","author_association":"NONE","body":"@sciphilo \nHow to specifying a depth? I did not find.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/122514477","html_url":"https://github.com/elastic/elasticsearch/issues/10408#issuecomment-122514477","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10408","id":122514477,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMjUxNDQ3Nw==","user":{"login":"sciphilo","id":10801841,"node_id":"MDQ6VXNlcjEwODAxODQx","avatar_url":"https://avatars0.githubusercontent.com/u/10801841?v=4","gravatar_id":"","url":"https://api.github.com/users/sciphilo","html_url":"https://github.com/sciphilo","followers_url":"https://api.github.com/users/sciphilo/followers","following_url":"https://api.github.com/users/sciphilo/following{/other_user}","gists_url":"https://api.github.com/users/sciphilo/gists{/gist_id}","starred_url":"https://api.github.com/users/sciphilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sciphilo/subscriptions","organizations_url":"https://api.github.com/users/sciphilo/orgs","repos_url":"https://api.github.com/users/sciphilo/repos","events_url":"https://api.github.com/users/sciphilo/events{/privacy}","received_events_url":"https://api.github.com/users/sciphilo/received_events","type":"User","site_admin":false},"created_at":"2015-07-18T08:46:50Z","updated_at":"2015-07-18T08:46:50Z","author_association":"NONE","body":"@wuranbo Depth was a theoretical suggestion , that functionality doesn't exist yet in his context afaik. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/122514623","html_url":"https://github.com/elastic/elasticsearch/issues/10408#issuecomment-122514623","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10408","id":122514623,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMjUxNDYyMw==","user":{"login":"sciphilo","id":10801841,"node_id":"MDQ6VXNlcjEwODAxODQx","avatar_url":"https://avatars0.githubusercontent.com/u/10801841?v=4","gravatar_id":"","url":"https://api.github.com/users/sciphilo","html_url":"https://github.com/sciphilo","followers_url":"https://api.github.com/users/sciphilo/followers","following_url":"https://api.github.com/users/sciphilo/following{/other_user}","gists_url":"https://api.github.com/users/sciphilo/gists{/gist_id}","starred_url":"https://api.github.com/users/sciphilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sciphilo/subscriptions","organizations_url":"https://api.github.com/users/sciphilo/orgs","repos_url":"https://api.github.com/users/sciphilo/repos","events_url":"https://api.github.com/users/sciphilo/events{/privacy}","received_events_url":"https://api.github.com/users/sciphilo/received_events","type":"User","site_admin":false},"created_at":"2015-07-18T08:48:40Z","updated_at":"2015-07-18T08:48:40Z","author_association":"NONE","body":"@wuranbo in the end I just loaded each path segment (path to root) flat into the index. Then my aggregation counts worked nicely. So for 1/2/3 I loaded 1/, 1/2/,1/2/3/\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/141919242","html_url":"https://github.com/elastic/elasticsearch/issues/10408#issuecomment-141919242","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10408","id":141919242,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MTkxOTI0Mg==","user":{"login":"whythecode","id":723414,"node_id":"MDQ6VXNlcjcyMzQxNA==","avatar_url":"https://avatars1.githubusercontent.com/u/723414?v=4","gravatar_id":"","url":"https://api.github.com/users/whythecode","html_url":"https://github.com/whythecode","followers_url":"https://api.github.com/users/whythecode/followers","following_url":"https://api.github.com/users/whythecode/following{/other_user}","gists_url":"https://api.github.com/users/whythecode/gists{/gist_id}","starred_url":"https://api.github.com/users/whythecode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/whythecode/subscriptions","organizations_url":"https://api.github.com/users/whythecode/orgs","repos_url":"https://api.github.com/users/whythecode/repos","events_url":"https://api.github.com/users/whythecode/events{/privacy}","received_events_url":"https://api.github.com/users/whythecode/received_events","type":"User","site_admin":false},"created_at":"2015-09-21T09:10:03Z","updated_at":"2015-09-21T09:10:03Z","author_association":"NONE","body":"+1\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172053873","html_url":"https://github.com/elastic/elasticsearch/issues/10408#issuecomment-172053873","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10408","id":172053873,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjA1Mzg3Mw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-01-15T18:59:34Z","updated_at":"2016-01-15T18:59:34Z","author_association":"CONTRIBUTOR","body":"As with most things in Elasticsearch, it is better to use an index time solution instead of a query time solution.  The `terms`  aggregation is more efficient because it uses global ordinals rather than the raw string term, while a runtime `prefix` agg would need to work with raw strings.\n\nPreparing your data at index time can be done with the right analysis chain, eg for paths like `/foo/bar/baz` you could use a path-hierarchy tokenizer.  For instance:\n\n```\nPUT my_index\n{\n  \"settings\": {\n    \"analysis\": {\n      \"analyzer\": {\n        \"paths\": {\n          \"tokenizer\": \"path_hierarchy\"\n        }\n      }\n    }\n  },\n  \"mappings\": {\n    \"my_type\": {\n      \"properties\": {\n        \"path\": {\n          \"type\": \"string\",\n          \"analyzer\": \"paths\",\n          \"search_analyzer\": \"keyword\"\n        },\n        \"depth\": {\n          \"type\": \"integer\"\n        }\n      }\n    }\n  }\n}\n```\n\nThe `path` field will tokenize `/foo/bar/baz` as `[/foo, /foo/bar /foo/bar/baz]`.  The `depth` field is easy to precalculate and can be used for various filters if needed (see below).  Index some data:\n\n```\nPOST my_index/my_type/_bulk\n{\"index\":{\"_id\":1}}\n{\"path\":\"/foo\",\"depth\":1}\n{\"index\":{\"_id\":2}}\n{\"path\":\"/foo/bar\",\"depth\":2}\n{\"index\":{\"_id\":3}}\n{\"path\":\"/foo/baz\",\"depth\":2}\n{\"index\":{\"_id\":4}}\n{\"path\":\"/foo/bar/one\",\"depth\":3}\n{\"index\":{\"_id\":5}}\n{\"path\":\"/foo/bar/two\",\"depth\":3}\n```\n\nGet all documents anywhere in the tree beginning with `/foo`:\n\n```\nGET _search\n{\n  \"query\": {\n    \"match\": {\n      \"path\": \"/foo\"\n    }\n  }\n}\n```\n\nGet direct children of `/foo` only:\n\n```\nGET _search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"path\": \"/foo\"\n          }\n        },\n        {\n          \"term\": {\n            \"depth\": 2\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\nReturn the 10 paths under `/foo` with the most descendants:\n\n```\nGET _search?size=0\n{\n  \"query\": {\n    \"match\": {\n      \"path\": \"/foo\"\n    }\n  },\n  \"aggs\": {\n    \"popular_descendants\": {\n      \"terms\": {\n        \"field\": \"path\"\n      }\n    }\n  }\n}\n```\n\nReturn the 10 direct children of `foo`with counts of all their descendants:\n\n```\nGET _search?size=0\n{\n  \"query\": {\n    \"match\": {\n      \"path\": \"/foo\"\n    }\n  },\n  \"aggs\": {\n    \"popular_children\": {\n      \"terms\": {\n        \"field\": \"path\",\n        \"include\": \"(/[^/]+){2}\"\n      }\n    }\n  }\n}\n```\n\nReturn the 10 direct children of `foo`with counts of all their descendants AND counts of their direct children (ie grandchildren):\n\n```\nGET _search?size=0\n{\n  \"query\": {\n    \"match\": {\n      \"path\": \"/foo\"\n    }\n  },\n  \"aggs\": {\n    \"popular_children\": {\n      \"terms\": {\n        \"field\": \"path\",\n        \"include\": \"(/[^/]+){2}\"\n      },\n      \"aggs\": {\n        \"grandchildren_counts\": {\n          \"filter\": {\n            \"term\": {\n              \"depth\": 3\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nNote: the `include` parameter still requires some raw text crunching.  It would be more efficient still if you know the maximum number of levels you can have in your tree, and could index these docs as:\n\n```\n{\n  \"level_1\": \"/foo\",\n  \"level_2\": \"/foo/bar\",\n  \"level_3\": \"/foo/bar/baz\"\n}\n```\n\nIn the Elasticsearch API, we try to direct users towards the most efficient way to do things.  I'm against adding an arbitrary `prefix` aggregation because it hides the complexity of the search operation, in other words it makes it seem like the search operation should be light when really it is doing a lot of manual work behind the scenes, which could be done more efficiently at index time.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/300784339","html_url":"https://github.com/elastic/elasticsearch/issues/10408#issuecomment-300784339","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10408","id":300784339,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMDc4NDMzOQ==","user":{"login":"yavuzmester","id":1267704,"node_id":"MDQ6VXNlcjEyNjc3MDQ=","avatar_url":"https://avatars3.githubusercontent.com/u/1267704?v=4","gravatar_id":"","url":"https://api.github.com/users/yavuzmester","html_url":"https://github.com/yavuzmester","followers_url":"https://api.github.com/users/yavuzmester/followers","following_url":"https://api.github.com/users/yavuzmester/following{/other_user}","gists_url":"https://api.github.com/users/yavuzmester/gists{/gist_id}","starred_url":"https://api.github.com/users/yavuzmester/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yavuzmester/subscriptions","organizations_url":"https://api.github.com/users/yavuzmester/orgs","repos_url":"https://api.github.com/users/yavuzmester/repos","events_url":"https://api.github.com/users/yavuzmester/events{/privacy}","received_events_url":"https://api.github.com/users/yavuzmester/received_events","type":"User","site_admin":false},"created_at":"2017-05-11T13:10:53Z","updated_at":"2017-05-11T13:15:35Z","author_association":"NONE","body":"@clintongormley how to do this for quadtrees and isn't it better to provide a quadtree_grid aggregation like geohash_grid aggregation?\r\n\r\nExample use case is drawing heatmaps with Leaflet:\r\n\r\n- For each visible tile (256 px):\r\n     - I convert the tile to its path equivalent in the quadtree\r\n     - I dive to the path with 8 levels to get an aggregated result pixel by pixel (where in the response the \"key\"s will be the paths to those pixels)\r\n     - Then I assign colors for each pixel value and draw the tile canvas.\r\n\r\n- I also have a configuration parameter to adjust resolution so that i may decrease resolution by 1 level and that means I have to dive 7 levels instead of 8. Then the squares will be 4 times big (2 px by 2 px instead of a single pixel). I can decrease resolution one by one until I dive 0 levels and the squares will get bigger the same way. Geohash aggregation is not that predictable, i.e. sometimes the aggregation units are squares sometimes rectangles.\r\n\r\nThanks","performed_via_github_app":null}]