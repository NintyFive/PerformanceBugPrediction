{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/287","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/287/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/287/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/287/events","html_url":"https://github.com/elastic/elasticsearch/issues/287","id":265857,"node_id":"MDU6SXNzdWUyNjU4NTc=","number":287,"title":"Search Facets: Range Facet","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"labels":[{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":41149,"node_id":"MDU6TGFiZWw0MTE0OQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.10.0","name":"v0.10.0","color":"DDDDDD","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2010-08-01T17:07:48Z","updated_at":"2013-02-23T10:45:33Z","closed_at":"2010-08-02T00:08:37Z","author_association":"MEMBER","active_lock_reason":null,"body":"`range` facet allow to specify a set of ranges and get both the number of docs (count) that fall within each range, and aggregated data either based on the field, or using another field. Here is a simple example:\n\n```\n{\n    \"query\" : {\n        \"match_all\" : {}\n    },\n    \"facets\" : {\n        \"range1\" : {\n            \"range\" : {\n                \"field\" : \"field_name\",\n                \"ranges\" : [\n                    { \"to\" : 50 },\n                    { \"from\" : 20, \"to\" : 70 }\n                    { \"from\" : 70, \"to\" : 120 }\n                    { \"from\" : 150 }\n                ]\n            }\n        }\n    }\n}\n```\n\nAnother option which is a bit more DSL enabled is to provide the ranges on the actual field name, for example:\n\n```\n{\n    \"query\" : {\n        \"match_all\" : {}\n    },\n    \"facets\" : {\n        \"range1\" : {\n            \"range\" : {\n                \"my_field\" : [\n                    { \"to\" : 50 },\n                    { \"from\" : 20, \"to\" : 70 }\n                    { \"from\" : 70, \"to\" : 120 }\n                    { \"from\" : 150 }\n                ]\n            }\n        }\n    }\n}\n```\n## Key and Value\n\nThe `range` facet allow to use a different field to check if it doc falls within a range, and another field to compute aggregated data per range (like total). For example:\n\n```\n{\n    \"query\" : {\n        \"match_all\" : {}\n    },\n    \"facets\" : {\n        \"range1\" : {\n            \"range\" : {\n                \"key_field\" : \"field_name\",\n                \"value_field\" : \"another_field_name\",\n                \"ranges\" : [\n                    { \"to\" : 50 },\n                    { \"from\" : 20, \"to\" : 70 }\n                    { \"from\" : 70, \"to\" : 120 }\n                    { \"from\" : 150 }\n                ]\n            }\n        }\n    }\n}\n```\n## Script Key and Value\n\nSometimes, some munging of both the key and the value are needed. In the key case, before it is checked if it falls within a range, and for the value, when the statistical data is computed per range scripts can be used. Here is an example:\n\n```\n{\n    \"query\" : {\n        \"match_all\" : {}\n    },\n    \"facets\" : {\n        \"range1\" : {\n            \"range\" : {\n                \"key_script\" : \"doc['date'].date.minuteOfHour\",\n                \"value_script\" : \"doc['num1'].value\",\n                \"ranges\" : [\n                    { \"to\" : 50 },\n                    { \"from\" : 20, \"to\" : 70 }\n                    { \"from\" : 70, \"to\" : 120 }\n                    { \"from\" : 150 }\n                ]\n            }\n        }\n    }\n}\n```\n## Date Ranges\n\nThe range facet support also providing the range as string formatted dates.\n","closed_by":null,"performed_via_github_app":null}