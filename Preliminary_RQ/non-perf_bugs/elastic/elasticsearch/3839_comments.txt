[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/25974696","html_url":"https://github.com/elastic/elasticsearch/issues/3839#issuecomment-25974696","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3839","id":25974696,"node_id":"MDEyOklzc3VlQ29tbWVudDI1OTc0Njk2","user":{"login":"ccw-morris","id":4938858,"node_id":"MDQ6VXNlcjQ5Mzg4NTg=","avatar_url":"https://avatars2.githubusercontent.com/u/4938858?v=4","gravatar_id":"","url":"https://api.github.com/users/ccw-morris","html_url":"https://github.com/ccw-morris","followers_url":"https://api.github.com/users/ccw-morris/followers","following_url":"https://api.github.com/users/ccw-morris/following{/other_user}","gists_url":"https://api.github.com/users/ccw-morris/gists{/gist_id}","starred_url":"https://api.github.com/users/ccw-morris/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ccw-morris/subscriptions","organizations_url":"https://api.github.com/users/ccw-morris/orgs","repos_url":"https://api.github.com/users/ccw-morris/repos","events_url":"https://api.github.com/users/ccw-morris/events{/privacy}","received_events_url":"https://api.github.com/users/ccw-morris/received_events","type":"User","site_admin":false},"created_at":"2013-10-09T14:20:15Z","updated_at":"2013-10-09T14:20:15Z","author_association":"NONE","body":"There's a related issue.\n\nI'm looking at implementing an authorization model by appending a list of indexes or aliases that the user shouldn't see to the user request. So, if the user requests an index that they shouldn't then the logic strips it out again. Alternate solutions are welcome.\n\nWithin that context, a request for http://example.com/foo,-foo/_search makes sense. Unfortunately, this doesn't work.\n\nWhen MetaData.convertFromWildcards() encounters a -foo, it will either:\na) remove it from the list of fields iff a previous term has caused an expansion\nb) add all other fields iff it is the first term\nc) add it as is, including the minus sign\n\nSo, foo,-foo returns an exception saying that it can't find an index called -foo.\n\nInstead, I would propose that a non-first minus term will populate the results set with all previous entries encountered. This logic is also used when processing a wildcard expression to resolve the expression \"foo,ba*\".\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/51635091","html_url":"https://github.com/elastic/elasticsearch/issues/3839#issuecomment-51635091","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3839","id":51635091,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNjM1MDkx","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-08-08T17:49:41Z","updated_at":"2014-08-08T17:49:41Z","author_association":"CONTRIBUTOR","body":"The first issue has been fixed, the issue from the second comment is still valid:\n\n```\nGET  /foo,-foo/_search\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/142074256","html_url":"https://github.com/elastic/elasticsearch/issues/3839#issuecomment-142074256","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3839","id":142074256,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MjA3NDI1Ng==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-09-21T18:52:05Z","updated_at":"2015-09-21T18:52:05Z","author_association":"CONTRIBUTOR","body":"And, this searches all indices including bar and baz:\n\n```\nGET *,-bar,-baz/_search\n```\n\nWhile this search all indices except bar and baz:\n\n```\nGET -bar,-baz/_search\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/242869321","html_url":"https://github.com/elastic/elasticsearch/issues/3839#issuecomment-242869321","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3839","id":242869321,"node_id":"MDEyOklzc3VlQ29tbWVudDI0Mjg2OTMyMQ==","user":{"login":"qwerty4030","id":874677,"node_id":"MDQ6VXNlcjg3NDY3Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/874677?v=4","gravatar_id":"","url":"https://api.github.com/users/qwerty4030","html_url":"https://github.com/qwerty4030","followers_url":"https://api.github.com/users/qwerty4030/followers","following_url":"https://api.github.com/users/qwerty4030/following{/other_user}","gists_url":"https://api.github.com/users/qwerty4030/gists{/gist_id}","starred_url":"https://api.github.com/users/qwerty4030/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qwerty4030/subscriptions","organizations_url":"https://api.github.com/users/qwerty4030/orgs","repos_url":"https://api.github.com/users/qwerty4030/repos","events_url":"https://api.github.com/users/qwerty4030/events{/privacy}","received_events_url":"https://api.github.com/users/qwerty4030/received_events","type":"User","site_admin":false},"created_at":"2016-08-26T22:43:25Z","updated_at":"2016-08-26T22:59:45Z","author_association":"CONTRIBUTOR","body":"I was able to reproduce this on latest master with the following:\n\n```\nPUT foo/foo-type/foo-doc\n{}\nPUT bar/bar-type/bar-doc\n{}\nPUT baz/baz-type/baz-doc\n{}\nGET  foo,-foo/_search\n\nresponse:\n{\n  \"error\": {\n    \"root_cause\": [\n      {\n        \"type\": \"index_not_found_exception\",\n        \"reason\": \"no such index\",\n        \"resource.type\": \"index_expression\",\n        \"resource.id\": \"-foo\",\n        \"index_uuid\": \"_na_\",\n        \"index\": \"-foo\"\n      }\n    ],\n    \"type\": \"index_not_found_exception\",\n    \"reason\": \"no such index\",\n    \"resource.type\": \"index_expression\",\n    \"resource.id\": \"-foo\",\n    \"index_uuid\": \"_na_\",\n    \"index\": \"-foo\"\n  },\n  \"status\": 404\n}\n```\n\nTook a quick look at the code... l'll make a PR shortly with the fix.\nUnable to reproduce bug with `GET *,-bar,-baz/_search` and `GET -bar,-baz/_search`.\n\n@clintongormley While I was investigating this I noticed the following request resulted in a similar error:\n\n```\nGET  foo,+foo/_search\n\nresponse:\n{\n  \"error\": {\n    \"root_cause\": [\n      {\n        \"type\": \"index_not_found_exception\",\n        \"reason\": \"no such index\",\n        \"resource.type\": \"index_or_alias\",\n        \"resource.id\": \" foo\",\n        \"index_uuid\": \"_na_\",\n        \"index\": \" foo\"\n      }\n    ],\n    \"type\": \"index_not_found_exception\",\n    \"reason\": \"no such index\",\n    \"resource.type\": \"index_or_alias\",\n    \"resource.id\": \" foo\",\n    \"index_uuid\": \"_na_\",\n    \"index\": \" foo\"\n  },\n  \"status\": 404\n}\n```\n\nHowever this error is slightly different than with `GET  foo,-foo/_search`: it has `\"resource.type\": \"index_or_alias\"` instead of `\"resource.type\": \"index_expression\"`. Also notice `\"index\": \" foo\"` has a space before `foo`. I guessed this might be something to do with URL encoding and tried the following:\n\n```\nGET  foo,%2Bfoo/_search\n\nresponse:\n{\n  \"error\": {\n    \"root_cause\": [\n      {\n        \"type\": \"index_not_found_exception\",\n        \"reason\": \"no such index\",\n        \"resource.type\": \"index_expression\",\n        \"resource.id\": \"+foo\",\n        \"index_uuid\": \"_na_\",\n        \"index\": \"+foo\"\n      }\n    ],\n    \"type\": \"index_not_found_exception\",\n    \"reason\": \"no such index\",\n    \"resource.type\": \"index_expression\",\n    \"resource.id\": \"+foo\",\n    \"index_uuid\": \"_na_\",\n    \"index\": \"+foo\"\n  },\n  \"status\": 404\n}\n```\n\nThis is the same error as with `GET  foo,-foo/_search` so that confirmed my suspicion. Is this a bug with ES or kibana/sense? Got the same behavior when I tried this with curl and an ES 2.3 cluster.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/242870656","html_url":"https://github.com/elastic/elasticsearch/issues/3839#issuecomment-242870656","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3839","id":242870656,"node_id":"MDEyOklzc3VlQ29tbWVudDI0Mjg3MDY1Ng==","user":{"login":"qwerty4030","id":874677,"node_id":"MDQ6VXNlcjg3NDY3Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/874677?v=4","gravatar_id":"","url":"https://api.github.com/users/qwerty4030","html_url":"https://github.com/qwerty4030","followers_url":"https://api.github.com/users/qwerty4030/followers","following_url":"https://api.github.com/users/qwerty4030/following{/other_user}","gists_url":"https://api.github.com/users/qwerty4030/gists{/gist_id}","starred_url":"https://api.github.com/users/qwerty4030/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qwerty4030/subscriptions","organizations_url":"https://api.github.com/users/qwerty4030/orgs","repos_url":"https://api.github.com/users/qwerty4030/repos","events_url":"https://api.github.com/users/qwerty4030/events{/privacy}","received_events_url":"https://api.github.com/users/qwerty4030/received_events","type":"User","site_admin":false},"created_at":"2016-08-26T22:51:39Z","updated_at":"2016-08-27T00:22:31Z","author_association":"CONTRIBUTOR","body":"Would the indices be resolved differently if the `+` was removed? If not what is the purpose of it?\n`GET  foo,+foo/_search` vs `GET  foo,foo/_search`\n`GET  foo,+ba*/_search` vs `GET  foo,ba*/_search`\n`GET  +foo/_search` vs `GET  foo/_search`\n`GET  ba*,+f*,-foo/_search` vs `GET  ba*,f*,-foo/_search`\n\nI tried removing all the `+`s from `WildcardExpressionResolverTests` and the tests still pass so I guess its not needed?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265542999","html_url":"https://github.com/elastic/elasticsearch/issues/3839#issuecomment-265542999","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3839","id":265542999,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTU0Mjk5OQ==","user":{"login":"gerits","id":943117,"node_id":"MDQ6VXNlcjk0MzExNw==","avatar_url":"https://avatars3.githubusercontent.com/u/943117?v=4","gravatar_id":"","url":"https://api.github.com/users/gerits","html_url":"https://github.com/gerits","followers_url":"https://api.github.com/users/gerits/followers","following_url":"https://api.github.com/users/gerits/following{/other_user}","gists_url":"https://api.github.com/users/gerits/gists{/gist_id}","starred_url":"https://api.github.com/users/gerits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerits/subscriptions","organizations_url":"https://api.github.com/users/gerits/orgs","repos_url":"https://api.github.com/users/gerits/repos","events_url":"https://api.github.com/users/gerits/events{/privacy}","received_events_url":"https://api.github.com/users/gerits/received_events","type":"User","site_admin":false},"created_at":"2016-12-07T19:13:39Z","updated_at":"2016-12-07T19:14:25Z","author_association":"NONE","body":"There still seems to be a problem here. When I run the following query it won't work. But if I switch the position of the indices it works. \r\nnon working: `GET /-foo,*/_search`\r\nworking: `GET /*,-foo/_search`\r\n\r\nIt seems the - sign is not interpreted correctly as in following example.\r\nNot working: `GET /-foo,+bar/_search`\r\nworking: `GET /-*foo,+bar/_search`\r\n\r\nThis is for version 5.0.2","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265553697","html_url":"https://github.com/elastic/elasticsearch/issues/3839#issuecomment-265553697","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3839","id":265553697,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTU1MzY5Nw==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-12-07T19:50:14Z","updated_at":"2016-12-07T19:50:14Z","author_association":"MEMBER","body":"Hi @gerits yes that is correct. It's a feature, not a bug, see #20898. The negation has an effect only if there is a preceding wildcard expression. The implicit negation that we had before led to unexpected results, especially when e.g. deleting indices.","performed_via_github_app":null}]