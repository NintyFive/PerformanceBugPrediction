{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/2078","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2078/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2078/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2078/events","html_url":"https://github.com/elastic/elasticsearch/issues/2078","id":5382048,"node_id":"MDU6SXNzdWU1MzgyMDQ4","number":2078,"title":"Terms Facet Ordering","user":{"login":"dawi","id":129870,"node_id":"MDQ6VXNlcjEyOTg3MA==","avatar_url":"https://avatars3.githubusercontent.com/u/129870?v=4","gravatar_id":"","url":"https://api.github.com/users/dawi","html_url":"https://github.com/dawi","followers_url":"https://api.github.com/users/dawi/followers","following_url":"https://api.github.com/users/dawi/following{/other_user}","gists_url":"https://api.github.com/users/dawi/gists{/gist_id}","starred_url":"https://api.github.com/users/dawi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dawi/subscriptions","organizations_url":"https://api.github.com/users/dawi/orgs","repos_url":"https://api.github.com/users/dawi/repos","events_url":"https://api.github.com/users/dawi/events{/privacy}","received_events_url":"https://api.github.com/users/dawi/received_events","type":"User","site_admin":false},"labels":[{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2012-07-02T08:53:06Z","updated_at":"2014-07-18T09:40:21Z","closed_at":"2014-07-18T09:40:21Z","author_association":"NONE","active_lock_reason":null,"body":"It would be great if ES would support more TermsFacet.ComparatorTypes as well as using them in a compound manner.\n\nExample:\n\n```\ntermsFacetBuilder.order(TermsFacet.ComparatorType.COUNT, \n                        TermsFacet.ComparatorType.TERM_LOWERCASE, \n                        TermsFacet.ComparatorType.TERM)\n```\n\nExplanation:\n\nI have the following terms:\n- a\n- aa\n- aa\n- aA\n- aA\n- ab\n- ab\n- aB\n- aB\n\nThe following facet search\n\n```\ntermsFacetBuilder.size(4).order(TermsFacet.ComparatorType.COUNT)\n```\n\nreturns \n- ab (2)\n- aa (2)\n- aB (2)\n- aA (2)\n\nWhat I want to achieve is a result like this:\n- aA (2)\n- aa (2)\n- aB (2)\n- ab (2)\n\nAnd I think the only way to achieve this result is to have more ComparatorTypes and the possibility to chain them.\n\nManual sorting is not really an option, because if I use the size(x) method, I already get results that I don't really want.\n","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}