[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/733215632","html_url":"https://github.com/elastic/elasticsearch/issues/65465#issuecomment-733215632","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/65465","id":733215632,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzIxNTYzMg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-11-24T20:27:58Z","updated_at":"2020-11-24T20:27:58Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed (Team:Distributed)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/733221059","html_url":"https://github.com/elastic/elasticsearch/issues/65465#issuecomment-733221059","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/65465","id":733221059,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzIyMTA1OQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2020-11-24T20:39:38Z","updated_at":"2020-11-24T20:39:38Z","author_association":"CONTRIBUTOR","body":"> This actually did reproduce locally for me, but with a slightly different error.\r\n> https://gradle-enterprise.elastic.co/s/yheut5dwzyx4y/tests/:qa:rolling-upgrade:v7.11.0%23oneThirdUpgradedTest/org.elasticsearch.upgrades.RecoveryIT/testRelocationWithConcurrentIndexing#1\r\n\r\nThe reproduction lines for rolling upgrade tests are garbage. I think a more appropriate reproduction for this would be:\r\n```\r\n./gradlew ':qa:rolling-upgrade:v7.11.0#bwcTest' -Dtests.class=\"org.elasticsearch.upgrades.RecoveryIT\" -Dtests.seed=418251B2617A62C9\r\n```\r\n\r\nI'll look more.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/733223871","html_url":"https://github.com/elastic/elasticsearch/issues/65465#issuecomment-733223871","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/65465","id":733223871,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzIyMzg3MQ==","user":{"login":"mark-vieira","id":4106672,"node_id":"MDQ6VXNlcjQxMDY2NzI=","avatar_url":"https://avatars2.githubusercontent.com/u/4106672?v=4","gravatar_id":"","url":"https://api.github.com/users/mark-vieira","html_url":"https://github.com/mark-vieira","followers_url":"https://api.github.com/users/mark-vieira/followers","following_url":"https://api.github.com/users/mark-vieira/following{/other_user}","gists_url":"https://api.github.com/users/mark-vieira/gists{/gist_id}","starred_url":"https://api.github.com/users/mark-vieira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mark-vieira/subscriptions","organizations_url":"https://api.github.com/users/mark-vieira/orgs","repos_url":"https://api.github.com/users/mark-vieira/repos","events_url":"https://api.github.com/users/mark-vieira/events{/privacy}","received_events_url":"https://api.github.com/users/mark-vieira/received_events","type":"User","site_admin":false},"created_at":"2020-11-24T20:45:52Z","updated_at":"2020-11-24T20:45:52Z","author_association":"CONTRIBUTOR","body":":+1: we should revert to the \"old\" convention for bwc tests. I'll take a look at that.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/733227092","html_url":"https://github.com/elastic/elasticsearch/issues/65465#issuecomment-733227092","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/65465","id":733227092,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzIyNzA5Mg==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2020-11-24T20:53:04Z","updated_at":"2020-11-24T20:53:04Z","author_association":"CONTRIBUTOR","body":"You can't really even output the test name - or the task name. It has to be `bwcTest` and it has to be just the class name. Without that you might not end up with the right state.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/733239187","html_url":"https://github.com/elastic/elasticsearch/issues/65465#issuecomment-733239187","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/65465","id":733239187,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzIzOTE4Nw==","user":{"login":"mark-vieira","id":4106672,"node_id":"MDQ6VXNlcjQxMDY2NzI=","avatar_url":"https://avatars2.githubusercontent.com/u/4106672?v=4","gravatar_id":"","url":"https://api.github.com/users/mark-vieira","html_url":"https://github.com/mark-vieira","followers_url":"https://api.github.com/users/mark-vieira/followers","following_url":"https://api.github.com/users/mark-vieira/following{/other_user}","gists_url":"https://api.github.com/users/mark-vieira/gists{/gist_id}","starred_url":"https://api.github.com/users/mark-vieira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mark-vieira/subscriptions","organizations_url":"https://api.github.com/users/mark-vieira/orgs","repos_url":"https://api.github.com/users/mark-vieira/repos","events_url":"https://api.github.com/users/mark-vieira/events{/privacy}","received_events_url":"https://api.github.com/users/mark-vieira/received_events","type":"User","site_admin":false},"created_at":"2020-11-24T21:18:32Z","updated_at":"2020-11-24T21:18:32Z","author_association":"CONTRIBUTOR","body":"You can do the task name, as the build will ensure the upstream dependencies run. It just won't do the later stages w/ shouldn't matter if we expect it to below up at this particular step. I'm, testing a local fix now.\r\n\r\nThe only scenario in which this won't work is if the BWC tests depend on some other tests also doing setup work in the upstream steps. There's no way to know and you can always remove the filter. Probably better to default to the optimal case for reproductions and make this scenario less annoying by default.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/733239974","html_url":"https://github.com/elastic/elasticsearch/issues/65465#issuecomment-733239974","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/65465","id":733239974,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzIzOTk3NA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2020-11-24T21:20:11Z","updated_at":"2020-11-24T21:20:11Z","author_association":"CONTRIBUTOR","body":"> You can do the task name, as the build will ensure the upstream dependencies run.\r\n\r\nI think I used to know that and then forgot. Thanks!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/733241797","html_url":"https://github.com/elastic/elasticsearch/issues/65465#issuecomment-733241797","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/65465","id":733241797,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzI0MTc5Nw==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2020-11-24T21:24:07Z","updated_at":"2020-11-24T21:24:07Z","author_association":"CONTRIBUTOR","body":"This looks to be an problem forming the cluster. The console log has such wonders as:\r\n```\r\n» WARN ][o.e.t.InboundHandler     ] [v7.11.0-1] Failed to deserialize response from [127.0.0.1/127.0.0.1:33831]\r\n»  org.elasticsearch.transport.TransportSerializationException: Failed to deserialize response from handler [org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler/org.elasticsearch.transport.TransportService$6/[cluster:monitor/nodes/info[n]]:org.elasticsearch.action.support.nodes.TransportNodesAction$AsyncAction$1@7b9b7121]\r\n»  \tat org.elasticsearch.transport.InboundHandler.handleResponse(InboundHandler.java:237) [elasticsearch-7.11.0-SNAPSHOT.jar:7.11.0-SNAPSHOT]\r\n»  \tat org.elasticsearch.transport.InboundHandler.messageReceived(InboundHandler.java:133) [elasticsearch-7.11.0-SNAPSHOT.jar:7.11.0-SNAPSHOT]\r\n»  \tat org.elasticsearch.transport.InboundHandler.inboundMessage(InboundHandler.java:89) [elasticsearch-7.11.0-SNAPSHOT.jar:7.11.0-SNAPSHOT]\r\n»  \tat org.elasticsearch.transport.TcpTransport.inboundMessage(TcpTransport.java:700) [elasticsearch-7.11.0-SNAPSHOT.jar:7.11.0-SNAPSHOT]\r\n»  \tat org.elasticsearch.transport.InboundPipeline.forwardFragments(InboundPipeline.java:142) [elasticsearch-7.11.0-SNAPSHOT.jar:7.11.0-SNAPSHOT]\r\n»  \tat org.elasticsearch.transport.InboundPipeline.doHandleBytes(InboundPipeline.java:117) [elasticsearch-7.11.0-SNAPSHOT.jar:7.11.0-SNAPSHOT]\r\n»  \tat org.elasticsearch.transport.InboundPipeline.handleBytes(InboundPipeline.java:82) [elasticsearch-7.11.0-SNAPSHOT.jar:7.11.0-SNAPSHOT]\r\n»  \tat org.elasticsearch.transport.netty4.Netty4MessageChannelHandler.channelRead(Netty4MessageChannelHandler.java:74) [transport-netty4-client-7.11.0-SNAPSHOT.jar:7.11.0-SNAPSHOT]\r\n»  \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:271) [netty-handler-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:615) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:578) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.49.Final.jar:4.1.49.Final]\r\n»  \tat java.lang.Thread.run(Thread.java:832) [?:?]\r\n»  Caused by: java.lang.IllegalStateException: unexpected byte [0x0e]\r\n»  \tat org.elasticsearch.common.io.stream.StreamInput.readBoolean(StreamInput.java:578) ~[elasticsearch-7.11.0-SNAPSHOT.jar:7.11.0-SNAPSHOT]\r\n»  \tat org.elasticsearch.common.io.stream.StreamInput.readBoolean(StreamInput.java:568) ~[elasticsearch-7.11.0-SNAPSHOT.jar:7.11.0-SNAPSHOT]\r\n»  \tat org.elasticsearch.plugins.PluginInfo.<init>(PluginInfo.java:134) ~[elasticsearch-7.11.0-SNAPSHOT.jar:7.11.0-SNAPSHOT]\r\n»  \tat org.elasticsearch.common.io.stream.StreamInput.readCollection(StreamInput.java:1230) ~[elasticsearch-7.11.0-SNAPSHOT.jar:7.11.0-SNAPSHOT]\r\n»  \tat org.elasticsearch.common.io.stream.StreamInput.readList(StreamInput.java:1180) ~[elasticsearch-7.11.0-SNAPSHOT.jar:7.11.0-SNAPSHOT]\r\n»  \tat org.elasticsearch.action.admin.cluster.node.info.PluginsAndModules.<init>(PluginsAndModules.java:48) ~[elasticsearch-7.11.0-SNAPSHOT.jar:7.11.0-SNAPSHOT]\r\n»  \tat org.elasticsearch.common.io.stream.StreamInput.readOptionalWriteable(StreamInput.java:1013) ~[elasticsearch-7.11.0-SNAPSHOT.jar:7.11.0-SNAPSHOT]\r\n»  \tat org.elasticsearch.action.admin.cluster.node.info.NodeInfo.<init>(NodeInfo.java:84) ~[elasticsearch-7.11.0-SNAPSHOT.jar:7.11.0-SNAPSHOT]\r\n```\r\n\r\nThat hints to me that there was a wire incompatibility. I had a look around PluginInfo.java and found a7863808d9492b1ab129ba82b6861519f0be3941 which makes me think that we were building a snapshot that didn't have the commit that this was accounting for. Which explains why I can't reproduce it locally.","performed_via_github_app":null}]