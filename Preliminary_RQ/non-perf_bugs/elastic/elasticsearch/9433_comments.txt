[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/71757723","html_url":"https://github.com/elastic/elasticsearch/issues/9433#issuecomment-71757723","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9433","id":71757723,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNzU3NzIz","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2015-01-28T00:21:38Z","updated_at":"2015-01-28T00:21:38Z","author_association":"MEMBER","body":"Currently we don't differentiate between retryable and non-retryable errors and instead retrying to restore the index until the restore is successful or index is deleted. The two main reasons for this behavior is that 1) identifying if an error is retryable or not can be really tricky and 2) up until #5924 there was no simple way to fail a recovery. Now that we have this mechanism, we can make retry logic to be responsibility of repositories and fail shard instead of trying to recover from it. This way the index will remain closed and if a replica is available it will be still possible to fall back to the previous state of the index by recovering from the non-corrupted replicas. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263079642","html_url":"https://github.com/elastic/elasticsearch/issues/9433#issuecomment-263079642","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9433","id":263079642,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzA3OTY0Mg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-11-26T18:55:07Z","updated_at":"2016-11-26T18:55:07Z","author_association":"CONTRIBUTOR","body":"@abeyad has this already been improved or do we still need to do something more?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263139992","html_url":"https://github.com/elastic/elasticsearch/issues/9433#issuecomment-263139992","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9433","id":263139992,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzEzOTk5Mg==","user":{"login":"abeyad","id":1631297,"node_id":"MDQ6VXNlcjE2MzEyOTc=","avatar_url":"https://avatars2.githubusercontent.com/u/1631297?v=4","gravatar_id":"","url":"https://api.github.com/users/abeyad","html_url":"https://github.com/abeyad","followers_url":"https://api.github.com/users/abeyad/followers","following_url":"https://api.github.com/users/abeyad/following{/other_user}","gists_url":"https://api.github.com/users/abeyad/gists{/gist_id}","starred_url":"https://api.github.com/users/abeyad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abeyad/subscriptions","organizations_url":"https://api.github.com/users/abeyad/orgs","repos_url":"https://api.github.com/users/abeyad/repos","events_url":"https://api.github.com/users/abeyad/events{/privacy}","received_events_url":"https://api.github.com/users/abeyad/received_events","type":"User","site_admin":false},"created_at":"2016-11-27T19:00:57Z","updated_at":"2016-11-27T19:00:57Z","author_association":"CONTRIBUTOR","body":"@clintongormley This has not been improved.  I wrote this simple test that proves we do not gracefully terminate the restore process in the case of lost/missing snapshot data: https://github.com/elastic/elasticsearch/compare/master...abeyad:handle_restore_missing_files_gracefully?expand=1.  Removing the AwaitsFix and running the test causes the test to run indefinitely.\r\n\r\nI will put it on my list of things to work on for snapshot/restore and brainstorm with @imotov and @s1monw the best approaches for solving it.  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263169004","html_url":"https://github.com/elastic/elasticsearch/issues/9433#issuecomment-263169004","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9433","id":263169004,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzE2OTAwNA==","user":{"login":"S-Callier","id":10719800,"node_id":"MDQ6VXNlcjEwNzE5ODAw","avatar_url":"https://avatars1.githubusercontent.com/u/10719800?v=4","gravatar_id":"","url":"https://api.github.com/users/S-Callier","html_url":"https://github.com/S-Callier","followers_url":"https://api.github.com/users/S-Callier/followers","following_url":"https://api.github.com/users/S-Callier/following{/other_user}","gists_url":"https://api.github.com/users/S-Callier/gists{/gist_id}","starred_url":"https://api.github.com/users/S-Callier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/S-Callier/subscriptions","organizations_url":"https://api.github.com/users/S-Callier/orgs","repos_url":"https://api.github.com/users/S-Callier/repos","events_url":"https://api.github.com/users/S-Callier/events{/privacy}","received_events_url":"https://api.github.com/users/S-Callier/received_events","type":"User","site_admin":false},"created_at":"2016-11-28T02:21:43Z","updated_at":"2016-11-28T02:21:43Z","author_association":"NONE","body":"Just as abeyad mentionned this issue is still present in our code too.\r\nThis not really a critical issue for us, but thank you for having a look at it!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/356287083","html_url":"https://github.com/elastic/elasticsearch/issues/9433#issuecomment-356287083","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9433","id":356287083,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NjI4NzA4Mw==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2018-01-09T13:42:56Z","updated_at":"2018-01-09T13:42:56Z","author_association":"MEMBER","body":"I'm happy to say that the situation is now improved for both situations explained in this issue. \r\n\r\nThe restore process does not hang anymore and now returns the number of failed shards (should be greater than 0 in the situations described here). And when a shard file is missing in the snapshot the shard will fail to be allocated. The Cluster Allocation Explain API can then be used to retrieve details on why the shard failed to be restored.\r\n\r\nSee #27493 and #27476 for more details.","performed_via_github_app":null}]