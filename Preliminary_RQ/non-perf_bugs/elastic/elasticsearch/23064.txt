{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/23064","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23064/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23064/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23064/events","html_url":"https://github.com/elastic/elasticsearch/issues/23064","id":206422830,"node_id":"MDU6SXNzdWUyMDY0MjI4MzA=","number":23064,"title":"`copy_to` cannot be used on `object` mappings","user":{"login":"InfinitiesLoop","id":202632,"node_id":"MDQ6VXNlcjIwMjYzMg==","avatar_url":"https://avatars3.githubusercontent.com/u/202632?v=4","gravatar_id":"","url":"https://api.github.com/users/InfinitiesLoop","html_url":"https://github.com/InfinitiesLoop","followers_url":"https://api.github.com/users/InfinitiesLoop/followers","following_url":"https://api.github.com/users/InfinitiesLoop/following{/other_user}","gists_url":"https://api.github.com/users/InfinitiesLoop/gists{/gist_id}","starred_url":"https://api.github.com/users/InfinitiesLoop/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/InfinitiesLoop/subscriptions","organizations_url":"https://api.github.com/users/InfinitiesLoop/orgs","repos_url":"https://api.github.com/users/InfinitiesLoop/repos","events_url":"https://api.github.com/users/InfinitiesLoop/events{/privacy}","received_events_url":"https://api.github.com/users/InfinitiesLoop/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-02-09T07:06:49Z","updated_at":"2017-02-10T08:09:07Z","closed_at":"2017-02-09T19:53:51Z","author_association":"NONE","active_lock_reason":null,"body":"Elasticsearch version: 2.4\r\n\r\nI am not sure if this is a feature request or a bug, but the docs are definitely not clear on the expected behavior. I assumed this would work from what I read.\r\n\r\nI am trying to use `copy_to` in a mapping to move fields from one part of the document to another, with respect to searching in ES. I do not want to actually modify the source document, I just want users to be able to find the documents using a different field path.\r\n\r\nThe reason for this is that I have varying types of a documents that are mostly independent from one another, but have a few fields in common. I am dynamically generating mappings for these documents from a protocol buffer schema. The type of the message is the first part of the object, with its fields define within. Each of these messages can have a hierarchy of fields of their own.\r\n\r\nAs an oversimplified example, two messages might look like:\r\n\r\n```json\r\n{\r\n  \"type_a\": {\r\n    \"foo\": { \"bar\": 1 },\r\n    \"fieldA\": \"abc\"\r\n  }\r\n}\r\n\r\n{\r\n  \"type_b\": {\r\n    \"foo\": { \"bar\": 2 },\r\n    \"fieldB\": \"abc\"\r\n  }\r\n}\r\n```\r\n\r\nBoth types have a \"foo.bar\" field, but they differ otherwise. In reality, `foo` contains numerous fields and even more nesting.\r\n\r\nThe problem is with this hierarchy, each `foo.bar` field is different: `type_a.foo.bar` and `type_b.foo.bar`. This makes searching for them and aggregating on them _together_ really difficult, or impossible (in kibana, anyway).\r\n\r\nI cannot simply drop the outer 'type' portion of the hierarchy, because it's entirely possible that `type_a` and `type_b` have field names in common but of different types -- they live in the same index, so they have to have different mappings defined, which means they have to have a different field path.\r\n\r\nSo instead, I'm trying to use `copy_to` to effectively give the fields I need a new location with regard to search and aggregations. \r\n\r\nIt actually works beautifully on simple field types. But it fails on `object` mappings. I could workaround this by defining a `copy_to` mapping on every single field within the object instead, but as I said, there can be a lot of them and have their own levels of nesting, and they'd all just be there so they could have a copy_to and index:no parameter. That is going to complicate how I generate these mappings quite a bit. \r\n\r\nHere's an example mapping that reproduces it:\r\n\r\n```\r\ncurl -v -XPUT http://localhost:9200/copy_test -d '\r\n{\r\n  \"mappings\": {\r\n    \"mytype\": {\r\n      \"properties\": {\r\n        \"foo\": {\r\n          \"properties\": {\r\n            \"bar\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"move_field\": {\r\n          \"type\": \"object\",\r\n          \"copy_to\": \"foo\",\r\n          \"index\": \"no\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}'\r\n```\r\nThis results in an error:\r\n\r\n```\r\n{\r\n  \"error\": {\r\n    \"root_cause\": [\r\n      {\r\n        \"type\": \"mapper_parsing_exception\",\r\n        \"reason\": \"Mapping definition for [move_field] has unsupported parameters:  [copy_to : foo] [index : no]\"\r\n      }\r\n    ],\r\n    \"type\": \"mapper_parsing_exception\",\r\n    \"reason\": \"Failed to parse mapping [mytype]: Mapping definition for [move_field] has unsupported parameters:  [copy_to : foo] [index : no]\",\r\n    \"caused_by\": {\r\n      \"type\": \"mapper_parsing_exception\",\r\n      \"reason\": \"Mapping definition for [move_field] has unsupported parameters:  [copy_to : foo] [index : no]\"\r\n    }\r\n  },\r\n  \"status\": 400\r\n}\r\n```\r\n\r\nI have tried a few variations, such as specifying `properties` instead of `type: object` and what-not. But nothing works.\r\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}