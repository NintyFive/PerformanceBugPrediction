{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/15725","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15725/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15725/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15725/events","html_url":"https://github.com/elastic/elasticsearch/issues/15725","id":124455700,"node_id":"MDU6SXNzdWUxMjQ0NTU3MDA=","number":15725,"title":"Allow to filter out subsections from metadata in cluster state API","user":{"login":"Mogztter","id":333276,"node_id":"MDQ6VXNlcjMzMzI3Ng==","avatar_url":"https://avatars3.githubusercontent.com/u/333276?v=4","gravatar_id":"","url":"https://api.github.com/users/Mogztter","html_url":"https://github.com/Mogztter","followers_url":"https://api.github.com/users/Mogztter/followers","following_url":"https://api.github.com/users/Mogztter/following{/other_user}","gists_url":"https://api.github.com/users/Mogztter/gists{/gist_id}","starred_url":"https://api.github.com/users/Mogztter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mogztter/subscriptions","organizations_url":"https://api.github.com/users/Mogztter/orgs","repos_url":"https://api.github.com/users/Mogztter/repos","events_url":"https://api.github.com/users/Mogztter/events{/privacy}","received_events_url":"https://api.github.com/users/Mogztter/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-12-31T10:20:20Z","updated_at":"2015-12-31T11:18:36Z","closed_at":"2015-12-31T11:18:36Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Cluster state API can be really verbose even when `metadata` response filter is used.\nIt would be great if we could filter out subsections from `metadata`. For instance:\n\n```\nhttp://localhost:9200/_cluster/state/metadata.indices.settings,metadata.indices.state\n```\n\nThis will filter out `metadata.templates`, `metadata.indices.mappings` and `metadata.indices.aliases`:\n\n```\nhttp://localhost:9200/_cluster/state/metadata.indices.settings,metadata.indices.state/twitter\n```\n\n``` json\n{\n  \"cluster_name\": \"social-network\",\n  \"metadata\": {\n    \"indices\": {\n      \"twitter\": {\n        \"state\": \"open\",\n        \"settings\": {\n          \"index\": {\n            \"creation_date\": \"1448705217713\",\n            \"uuid\": \"gLEtWQ21RGC2D8PKeI-SgQ\",\n            \"number_of_replicas\": \"1\",\n            \"analysis\": {\n              \"char_filter\": {},\n              \"filter\": {},\n              \"analyzer\": {}\n            },\n            \"number_of_shards\": \"3\",\n            \"query\": {\n              \"default_field\": \"message\"\n            },\n            \"refresh_interval\": \"5s\",\n            \"version\": {\n              \"created\": \"1070399\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nAnother option is to provide or extend an existing API to make `state` attribute available. AFAIK `\"state:\" \"open|close\"` is only available on the cluster state API. This information is missing from the \"legacy\" index status API but also from the new index stats API and index recovery API.\n\nWith `state` information available on the get settings API, the following query is (almost) equivalent with my proposal:\n\n```\nhttp://localhost:9200/twitter/_settings\n```\n\n``` json\n{\n  \"twitter\": {\n    \"state\": \"open\",\n    \"settings\": {\n      \"index\": {\n        \"creation_date\": \"1448705217713\",\n        \"uuid\": \"gLEtWQ21RGC2D8PKeI-SgQ\",\n        \"number_of_replicas\": \"1\",\n        \"analysis\": {\n          \"char_filter\": {},\n          \"filter\": {},\n          \"analyzer\": {}\n        },\n        \"number_of_shards\": \"3\",\n        \"query\": {\n          \"default_field\": \"message\"\n        },\n        \"refresh_interval\": \"5s\",\n        \"version\": {\n          \"created\": \"1070399\"\n        }\n      }\n    }\n  }\n}\n```\n","closed_by":{"login":"Mogztter","id":333276,"node_id":"MDQ6VXNlcjMzMzI3Ng==","avatar_url":"https://avatars3.githubusercontent.com/u/333276?v=4","gravatar_id":"","url":"https://api.github.com/users/Mogztter","html_url":"https://github.com/Mogztter","followers_url":"https://api.github.com/users/Mogztter/followers","following_url":"https://api.github.com/users/Mogztter/following{/other_user}","gists_url":"https://api.github.com/users/Mogztter/gists{/gist_id}","starred_url":"https://api.github.com/users/Mogztter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mogztter/subscriptions","organizations_url":"https://api.github.com/users/Mogztter/orgs","repos_url":"https://api.github.com/users/Mogztter/repos","events_url":"https://api.github.com/users/Mogztter/events{/privacy}","received_events_url":"https://api.github.com/users/Mogztter/received_events","type":"User","site_admin":false},"performed_via_github_app":null}