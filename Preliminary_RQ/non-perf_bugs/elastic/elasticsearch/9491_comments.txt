[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73801695","html_url":"https://github.com/elastic/elasticsearch/issues/9491#issuecomment-73801695","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9491","id":73801695,"node_id":"MDEyOklzc3VlQ29tbWVudDczODAxNjk1","user":{"login":"orenash","id":10764324,"node_id":"MDQ6VXNlcjEwNzY0MzI0","avatar_url":"https://avatars0.githubusercontent.com/u/10764324?v=4","gravatar_id":"","url":"https://api.github.com/users/orenash","html_url":"https://github.com/orenash","followers_url":"https://api.github.com/users/orenash/followers","following_url":"https://api.github.com/users/orenash/following{/other_user}","gists_url":"https://api.github.com/users/orenash/gists{/gist_id}","starred_url":"https://api.github.com/users/orenash/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/orenash/subscriptions","organizations_url":"https://api.github.com/users/orenash/orgs","repos_url":"https://api.github.com/users/orenash/repos","events_url":"https://api.github.com/users/orenash/events{/privacy}","received_events_url":"https://api.github.com/users/orenash/received_events","type":"User","site_admin":false},"created_at":"2015-02-10T22:51:49Z","updated_at":"2015-02-11T02:15:04Z","author_association":"CONTRIBUTOR","body":"I had the time to look into this issue and figure out the exact reasons for this to happen and how it might be fixed.\n\nThe issue is with the `TimeTimeZoneRoundingFloor` strategy in `TimeZoneRounding` (used when `pre_zone` is not UTC, `interval<=hour` or `pre_zone_adjust_large_interval=true`).\nRounding the key in this strategy is done as follows: shifting the key from UTC to local time in `pre_zone`, rounding the key, then shifting it back to UTC.\n\nThe problem is to determine the offset to subtract from the rounded key in order to take it back to the correct UTC time. The desired offset might be different from the original added offset due to DST switch (either the original shift or the rounding resulted in a timestamp that occurs in different DST configuration).\n\nPrior to fix #8655, the offset used to shift back was the offset at the rounded key. This worked well in most cases for large intervals, but not for hour intervals around the DST switch.\nAfter the fix, the offset used to shift back is always same offset used to switch from UTC to local time. This always gives a correct result for hour intervals (assuming DST switch always occurs in round hours).\n\nBut as we saw there is a problem with large intervals now - if the timezone offset at the original key is different than what it is at rounded key (which points to midnight), then we'll end up with a rounded key one hour away from midnight. For example `2014-08-08T00:00:00Z` has +3 offset in `Asia/Jerusalem` and after shifting and rounding  we get `2014-01-01T00:00:00Z`. Subtracting 3 hours from that results in `2013-12-31T21:00:00Z` which is not the expected result (which is `2013-12-31T22:00:00Z` because the offset is +2 in winter). Moreover, if two timestamps occur in same month/year but with different DST, they are mapped into different keys (one is correct and one is not), and that's why we get the double buckets.\n\nI figured out that in order to solve this, we can use [getOffsetFromLocal](http://joda-time.sourceforge.net/apidocs/org/joda/time/DateTimeZone.html#getOffsetFromLocal%28long%29) method of the timezone class. This method is the opposite of `getOffset` and it always gives the correct offset we need to subtract in order to get back from shifted time to UTC.\n\nI changed the code to use this method and all the tests pass, including tests I added for that issue (that fail on the latest code).\n\nBut then, I found another rare case that fails when using `getOffsetFromLocal` (but succeeds with latest code). This is the case immediately after switching DST on->off, the two hours before and after the switch are \"ambiguous\" in local time. If `interval>=day`, this is irrelevant because rounding takes us to midnight anyway. Nevertheless, if `interval=hour`, there is no way for `getOffsetFromLocal` to distinguish between them so this means they both go into the same bucket. That's probably OK for most applications, because hour histogram around DST switch is confusing to display whatsoever. But since I am pedantic, I want to solve this case as well... ^_^\n\nAfter looking at the work done on `TimeZoneRounding` in #9637 (planned for 2.0), I saw the use of the methods `convertUTCToLocal` and `convertLocalToUTC` which basically do the same as adding/subtracting the offset returned by `getOffset`/`getOffsetFromLocal`. Except that `convertLocalToUTC` can get the original UTC timestamp as an optional parameter and it uses it to solve this exact issue (the original UTC time helps to solve the ambiguity). I tried using these methods and it seems to work well in all cases (all tests pass).\n\nI will post a pull request with my fix and my additional tests as soon as I figure out if anything should also be changed in the strategies that deal with intervals such as \"2d\" (I think this problem is irrelevant there).\n\nHere are the tests I added in order to cover `pre_zone_adjust_large_interval` functionality and the double buckets bug:\n\n``` java\n    @Test\n    public void testAdjustPreTimeZone() {\n        Rounding tzRounding;\n\n        // Day interval\n        tzRounding = TimeZoneRounding.builder(DateTimeUnit.DAY_OF_MONTH).preZone(DateTimeZone.forID(\"Asia/Jerusalem\")).preZoneAdjustLargeInterval(true).build();\n        assertThat(tzRounding.round(time(\"2014-11-11T17:00:00\", DateTimeZone.forID(\"Asia/Jerusalem\"))), equalTo(time(\"2014-11-11T00:00:00\", DateTimeZone.forID(\"Asia/Jerusalem\"))));\n        // DST on\n        assertThat(tzRounding.round(time(\"2014-08-11T17:00:00\", DateTimeZone.forID(\"Asia/Jerusalem\"))), equalTo(time(\"2014-08-11T00:00:00\", DateTimeZone.forID(\"Asia/Jerusalem\"))));\n        // Day of switching DST on -> off\n        assertThat(tzRounding.round(time(\"2014-10-26T17:00:00\", DateTimeZone.forID(\"Asia/Jerusalem\"))), equalTo(time(\"2014-10-26T00:00:00\", DateTimeZone.forID(\"Asia/Jerusalem\"))));\n        // Day of switching DST off -> on\n        assertThat(tzRounding.round(time(\"2015-03-27T17:00:00\", DateTimeZone.forID(\"Asia/Jerusalem\"))), equalTo(time(\"2015-03-27T00:00:00\", DateTimeZone.forID(\"Asia/Jerusalem\"))));\n\n        // Month interval\n        tzRounding = TimeZoneRounding.builder(DateTimeUnit.MONTH_OF_YEAR).preZone(DateTimeZone.forID(\"Asia/Jerusalem\")).preZoneAdjustLargeInterval(true).build();\n        assertThat(tzRounding.round(time(\"2014-11-11T17:00:00\", DateTimeZone.forID(\"Asia/Jerusalem\"))), equalTo(time(\"2014-11-01T00:00:00\", DateTimeZone.forID(\"Asia/Jerusalem\"))));\n        // DST on\n        assertThat(tzRounding.round(time(\"2014-10-10T17:00:00\", DateTimeZone.forID(\"Asia/Jerusalem\"))), equalTo(time(\"2014-10-01T00:00:00\", DateTimeZone.forID(\"Asia/Jerusalem\"))));\n\n        // Year interval\n        tzRounding = TimeZoneRounding.builder(DateTimeUnit.YEAR_OF_CENTURY).preZone(DateTimeZone.forID(\"Asia/Jerusalem\")).preZoneAdjustLargeInterval(true).build();\n        assertThat(tzRounding.round(time(\"2014-11-11T17:00:00\", DateTimeZone.forID(\"Asia/Jerusalem\"))), equalTo(time(\"2014-01-01T00:00:00\", DateTimeZone.forID(\"Asia/Jerusalem\"))));\n\n        // Two timestamps in same year (\"Double buckets\" bug in 1.3.7)\n        tzRounding = TimeZoneRounding.builder(DateTimeUnit.YEAR_OF_CENTURY).preZone(DateTimeZone.forID(\"Asia/Jerusalem\")).preZoneAdjustLargeInterval(true).build();\n        assertThat(tzRounding.round(time(\"2014-11-11T17:00:00\", DateTimeZone.forID(\"Asia/Jerusalem\"))),\n                equalTo(tzRounding.round(time(\"2014-08-11T17:00:00\", DateTimeZone.forID(\"Asia/Jerusalem\")))));\n    }\n```\n\nHere is a test that covers the ambiguous hours bug:\n\n``` java\n    @Test\n    public void testAmbiguousHoursAfterDSTSwitch() {\n        Rounding tzRounding;\n\n        tzRounding = TimeZoneRounding.builder(DateTimeUnit.HOUR_OF_DAY).preZone(DateTimeZone.forID(\"Asia/Jerusalem\")).preZoneAdjustLargeInterval(true).build();\n        assertThat(tzRounding.round(time(\"2014-10-25T22:30:00\", DateTimeZone.UTC)), equalTo(time(\"2014-10-25T22:00:00\", DateTimeZone.UTC)));\n        assertThat(tzRounding.round(time(\"2014-10-25T23:30:00\", DateTimeZone.UTC)), equalTo(time(\"2014-10-25T23:00:00\", DateTimeZone.UTC)));\n    }\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73802661","html_url":"https://github.com/elastic/elasticsearch/issues/9491#issuecomment-73802661","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9491","id":73802661,"node_id":"MDEyOklzc3VlQ29tbWVudDczODAyNjYx","user":{"login":"synhershko","id":212252,"node_id":"MDQ6VXNlcjIxMjI1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/212252?v=4","gravatar_id":"","url":"https://api.github.com/users/synhershko","html_url":"https://github.com/synhershko","followers_url":"https://api.github.com/users/synhershko/followers","following_url":"https://api.github.com/users/synhershko/following{/other_user}","gists_url":"https://api.github.com/users/synhershko/gists{/gist_id}","starred_url":"https://api.github.com/users/synhershko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/synhershko/subscriptions","organizations_url":"https://api.github.com/users/synhershko/orgs","repos_url":"https://api.github.com/users/synhershko/repos","events_url":"https://api.github.com/users/synhershko/events{/privacy}","received_events_url":"https://api.github.com/users/synhershko/received_events","type":"User","site_admin":false},"created_at":"2015-02-10T22:58:27Z","updated_at":"2015-02-10T22:58:27Z","author_association":"CONTRIBUTOR","body":"I can confirm I've seen this issue before - back in the facet days with 0.90. I recall opening an issue on this but can't find it now. Good catch!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73900978","html_url":"https://github.com/elastic/elasticsearch/issues/9491#issuecomment-73900978","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9491","id":73900978,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTAwOTc4","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-11T15:34:27Z","updated_at":"2015-02-11T15:34:40Z","author_association":"MEMBER","body":"Thanks for the great test case. Since I'm currently trying to clean up the time zone management for 2.0 I included your test case from the first comment. I can reproduce the issue on 1.4 and current 2.0 branch and I was able to make it pass using the following changes to TimeZoneRounding.TimeTimeZoneRoundingFloor:\n\n```\npublic long roundKey(long utcMillis) {\n            long local = preTz.convertUTCToLocal(utcMillis);\n            return preTz.convertLocalToUTC(field.roundFloor(local), true, utcMillis);\n}\n```\n\nThis basically follows your suggestions and the work in #9637. I will also add your other Rounding tests there and see if they pass with my intended implementation. However, the `pre_zone_adjust_large_interval` will hopefully be gone for 2.0.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73919599","html_url":"https://github.com/elastic/elasticsearch/issues/9491#issuecomment-73919599","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9491","id":73919599,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTE5NTk5","user":{"login":"orenash","id":10764324,"node_id":"MDQ6VXNlcjEwNzY0MzI0","avatar_url":"https://avatars0.githubusercontent.com/u/10764324?v=4","gravatar_id":"","url":"https://api.github.com/users/orenash","html_url":"https://github.com/orenash","followers_url":"https://api.github.com/users/orenash/followers","following_url":"https://api.github.com/users/orenash/following{/other_user}","gists_url":"https://api.github.com/users/orenash/gists{/gist_id}","starred_url":"https://api.github.com/users/orenash/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/orenash/subscriptions","organizations_url":"https://api.github.com/users/orenash/orgs","repos_url":"https://api.github.com/users/orenash/repos","events_url":"https://api.github.com/users/orenash/events{/privacy}","received_events_url":"https://api.github.com/users/orenash/received_events","type":"User","site_admin":false},"created_at":"2015-02-11T17:05:50Z","updated_at":"2015-02-11T17:05:50Z","author_association":"CONTRIBUTOR","body":"Yes, the code for roundKey that you included looks exactly like my final solution, that's great.\nCan this fix also be included in 1.x? (As I said I can post a PR for this myself, but if you plan to include it in 2.0 I guess it's better you manage it).\n\nAbout removing `pre_zone_adjust_large_interval`, from what I understood, you plan to always return times in UTC on buckets. Which is equivalent to setting `pre_zone_adjust_large_interval=true` now. Am I right? If so, it means you can use the tests I provided for `pre_zone_adjust_large_interval=true` to test 2.0 (instead of the existing test that assume `pre_zone_adjust_large_interval=false` and will fail on your new code).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73921200","html_url":"https://github.com/elastic/elasticsearch/issues/9491#issuecomment-73921200","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9491","id":73921200,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTIxMjAw","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-11T17:14:01Z","updated_at":"2015-02-11T17:14:01Z","author_association":"MEMBER","body":"> Which is equivalent to setting pre_zone_adjust_large_interval=true\n\nYes, I think that is what it comes down to. I was able to use your test cases above with minor modifications to test on 2.0 branch. I think the plan is to backport the parts that are bug fixes to 1.x branch, but you can also propose a PR for that. This will still have to work with pre/postZone etc... because those will only be cleaned up later.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/74647371","html_url":"https://github.com/elastic/elasticsearch/issues/9491#issuecomment-74647371","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9491","id":74647371,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NjQ3Mzcx","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-17T10:33:17Z","updated_at":"2015-02-17T10:33:17Z","author_association":"MEMBER","body":"@orenash I'm going to try to backport some of the changes I did in #9637 on 2.0 to the 1.x branch which will likely adress this issue here. So if you'd like to post a PR for your tests I could include these in the branches as run the backported changes against them as well.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/74748549","html_url":"https://github.com/elastic/elasticsearch/issues/9491#issuecomment-74748549","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9491","id":74748549,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzQ4NTQ5","user":{"login":"orenash","id":10764324,"node_id":"MDQ6VXNlcjEwNzY0MzI0","avatar_url":"https://avatars0.githubusercontent.com/u/10764324?v=4","gravatar_id":"","url":"https://api.github.com/users/orenash","html_url":"https://github.com/orenash","followers_url":"https://api.github.com/users/orenash/followers","following_url":"https://api.github.com/users/orenash/following{/other_user}","gists_url":"https://api.github.com/users/orenash/gists{/gist_id}","starred_url":"https://api.github.com/users/orenash/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/orenash/subscriptions","organizations_url":"https://api.github.com/users/orenash/orgs","repos_url":"https://api.github.com/users/orenash/repos","events_url":"https://api.github.com/users/orenash/events{/privacy}","received_events_url":"https://api.github.com/users/orenash/received_events","type":"User","site_admin":false},"created_at":"2015-02-17T20:39:25Z","updated_at":"2015-02-17T20:39:25Z","author_association":"CONTRIBUTOR","body":"Alright, thanks a lot! I will do so in the next days.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/75263663","html_url":"https://github.com/elastic/elasticsearch/issues/9491#issuecomment-75263663","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9491","id":75263663,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MjYzNjYz","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-20T16:09:48Z","updated_at":"2015-02-20T16:10:55Z","author_association":"MEMBER","body":"Hi @orenash, I included an integration tests based on your first comment in https://github.com/elasticsearch/elasticsearch/pull/9790, still would like to include your aditional rounding tests if you want to put them into a separate PR.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/75271654","html_url":"https://github.com/elastic/elasticsearch/issues/9491#issuecomment-75271654","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9491","id":75271654,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MjcxNjU0","user":{"login":"orenash","id":10764324,"node_id":"MDQ6VXNlcjEwNzY0MzI0","avatar_url":"https://avatars0.githubusercontent.com/u/10764324?v=4","gravatar_id":"","url":"https://api.github.com/users/orenash","html_url":"https://github.com/orenash","followers_url":"https://api.github.com/users/orenash/followers","following_url":"https://api.github.com/users/orenash/following{/other_user}","gists_url":"https://api.github.com/users/orenash/gists{/gist_id}","starred_url":"https://api.github.com/users/orenash/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/orenash/subscriptions","organizations_url":"https://api.github.com/users/orenash/orgs","repos_url":"https://api.github.com/users/orenash/repos","events_url":"https://api.github.com/users/orenash/events{/privacy}","received_events_url":"https://api.github.com/users/orenash/received_events","type":"User","site_admin":false},"created_at":"2015-02-20T16:51:00Z","updated_at":"2015-02-20T16:51:00Z","author_association":"CONTRIBUTOR","body":"Don't you prefer to have the tests in the same PR with your fix? If you do not, I will open a PR later today.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/75298896","html_url":"https://github.com/elastic/elasticsearch/issues/9491#issuecomment-75298896","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9491","id":75298896,"node_id":"MDEyOklzc3VlQ29tbWVudDc1Mjk4ODk2","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-20T19:02:18Z","updated_at":"2015-02-20T19:02:18Z","author_association":"MEMBER","body":"No, this is great, will merge that after the fix is on the branch. Many thanks.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/75524271","html_url":"https://github.com/elastic/elasticsearch/issues/9491#issuecomment-75524271","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9491","id":75524271,"node_id":"MDEyOklzc3VlQ29tbWVudDc1NTI0Mjcx","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-23T11:10:19Z","updated_at":"2015-02-23T11:10:19Z","author_association":"MEMBER","body":"Fixed on 1.x with 78f0202 and on 1.4 with b7dbf1e\n","performed_via_github_app":null}]