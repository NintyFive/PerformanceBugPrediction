[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/203879027","html_url":"https://github.com/elastic/elasticsearch/issues/17420#issuecomment-203879027","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17420","id":203879027,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMzg3OTAyNw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-03-31T11:03:46Z","updated_at":"2016-03-31T11:03:46Z","author_association":"CONTRIBUTOR","body":"Hi @sachingsachin \n\n> Sorry for the long description :)\n\nNot at all.  Helps to understand the context.\n\n> One drawback I do see in the routing: my-local-shards-only approach is that lookup-by-ID becomes mostly impossible because clients would not know what routing-field to specify. But for many systems, this is not a concern because they will never do a lookup-by-ID (Example: log search use-case) and even for those cases, one can always search for ID like all other regular fields (scatter-gather)\n\nThis is the problem I see with your suggestion. It's important for us at Elasticsearch to keep things consistent, to not introduce feature X which doesn't work with feature Y unless condition Z.... These things end up producing a lot of confusion and complexity, which makes Elasticsearch harder to understand and use.  I'm very much against adding non-generic changes like this, especially when we have a generic mechanism specifically for managing such issues, ie custom routing.\n\nI think the solution needs to be implemented at a higher level, eg each bolt specifies a custom routing value on each message, which limits all of the messages in that bolt to a single shard.\n\n> So to make the ES-server process the bulk request locally, the routing-field value must be such that the shard_num value comes out to be the same value as the current shard (ES-Hadoop sends data to primary shards only if its not configured for client-nodes.) This is difficult to achieve IMO (especially when there are several writers like storm's ES-Bolts).\n\nActually it is pretty easy to figure out routing values that map to individual shards.  Here's what I did to come up with a list for 10 shards:\n\n```\nPUT t \n{\n  \"settings\": {\"number_of_shards\":10}\n}\n\nPOST t/t/_bulk\n{\"index\": {\"_routing\": \"01\"}}\n{}\n{\"index\": {\"_routing\": \"02\"}}\n{}\n{\"index\": {\"_routing\": \"03\"}}\n{}\n{\"index\": {\"_routing\": \"04\"}}\n{}\n{\"index\": {\"_routing\": \"05\"}}\n{}\n{\"index\": {\"_routing\": \"06\"}}\n{}\n{\"index\": {\"_routing\": \"07\"}}\n{}\n{\"index\": {\"_routing\": \"11\"}}\n{}\n{\"index\": {\"_routing\": \"13\"}}\n{}\n{\"index\": {\"_routing\": \"17\"}}\n{}\n\n\nGET _stats?level=shards&filter_path=**.shards.**.docs.count\n```\n\nGive one of each of these values to 4 kafka spouts and all 4 will then map to a single shard.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/204043247","html_url":"https://github.com/elastic/elasticsearch/issues/17420#issuecomment-204043247","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17420","id":204043247,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNDA0MzI0Nw==","user":{"login":"sachingsachin","id":6510635,"node_id":"MDQ6VXNlcjY1MTA2MzU=","avatar_url":"https://avatars3.githubusercontent.com/u/6510635?v=4","gravatar_id":"","url":"https://api.github.com/users/sachingsachin","html_url":"https://github.com/sachingsachin","followers_url":"https://api.github.com/users/sachingsachin/followers","following_url":"https://api.github.com/users/sachingsachin/following{/other_user}","gists_url":"https://api.github.com/users/sachingsachin/gists{/gist_id}","starred_url":"https://api.github.com/users/sachingsachin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sachingsachin/subscriptions","organizations_url":"https://api.github.com/users/sachingsachin/orgs","repos_url":"https://api.github.com/users/sachingsachin/repos","events_url":"https://api.github.com/users/sachingsachin/events{/privacy}","received_events_url":"https://api.github.com/users/sachingsachin/received_events","type":"User","site_admin":false},"created_at":"2016-03-31T17:35:37Z","updated_at":"2016-03-31T17:35:37Z","author_association":"NONE","body":"Thank you @clintongormley \n\n> Here's what I did to come up with a list for 10 shards.\n\nThe JSON response I got from the above requests is as follows:\n\n```\n{\n   \"indices\": {\n      \"t\": {\n         \"shards\": {\n            \"0\": [\n               {\n                  \"docs\": {\n                     \"count\": 1\n                  }\n               },\n               {\n                  \"docs\": {\n                     \"count\": 1\n                  }\n               }\n            ],\n            \"1\": [\n               {\n                  \"docs\": {\n                     \"count\": 1\n                  }\n               },\n               {\n                  \"docs\": {\n                     \"count\": 1\n                  }\n               }\n            ],\n            ... 8 more blocks like the above\n          }\n        }\n  }\n}\n```\n\n> Give one of each of these values to 4 kafka spouts and all 4 will then map to a single shard.\n\nI think you meant 80 EsBolts and not 4 kafka spout.\nBut even if you meant EsBolt, I do not understand the above JSON response or how it can help my case.\n\nFor other indices I have, I get a pretty similar response without making any of the above POST requests.\nFor example, the stats on my storm index look very similar:\n\n```\n{\n   \"indices\": {\n      \"storm\": {\n         \"shards\": {\n            \"0\": [\n               {\n                  \"docs\": {\n                     \"count\": 14467774\n                  }\n               },\n               {\n                  \"docs\": {\n                     \"count\": 14467774\n                  }\n               }\n            ]\n         }\n      }\n  }\n}\n```\n\nSo what is the difference made by the above POST calls (sorry, I have only a few months experience with ES).\n\n> it's important for us at Elasticsearch to keep things consistent, to not introduce feature X which doesn't work with feature Y unless condition Z\n\nI am inclined to think that this is how options work in general.\nAll features do not work with all the options.\nFor example, if someone uses custom routing (putting it in the URL of a client request), he is aware that lookup-by-ID will not work unless a correct routing value is not specified.\n\nA quote from [the docs](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-routing-field.html):\n\n> When indexing documents specifying a custom _routing, the uniqueness of the _id is not guaranteed across all of the shards in the index. In fact, documents with the same _id might end up on different shards if indexed with different _routing values.\n> \n> It is up to the user to ensure that IDs are unique across the index.\n\nThus, the user would be aware what he is doing.\nIf he chooses routing in the URL (feature X), he will not get unique results when doing a lookup-by-ID (feature Y) unless he ensures uniqueness of bulk requests to shards (condition Z).\nSimilarly, if a user chooses the feature requested here, I would assume that he knows what he is doing and a good documentation (or an answer on SO) should clarify this even further.\n\nAlso, I would appreciate your thoughts on the other benefits of the proposed option (listed in my first comment).\n\nThank you @clintongormley \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/205438877","html_url":"https://github.com/elastic/elasticsearch/issues/17420#issuecomment-205438877","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17420","id":205438877,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNTQzODg3Nw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-04-04T18:33:59Z","updated_at":"2016-04-04T18:33:59Z","author_association":"CONTRIBUTOR","body":"> I think you meant 80 EsBolts and not 4 kafka spout.\n> But even if you meant EsBolt, I do not understand the above JSON response or how it can help my case.\n\nWhat I meant by the above was that here you have a list of routing values, each of which maps to a **single** shard (when you're using 10 shards).  This is the answer to:\n\n> it seems unlikely (I am not sure though) that every bolt will be able to figure out an exact value of routing such that the ES-server that receives the requests process it locally only.\n\n So you can assign one routing value to 4 kafka spouts, or to 8 EsBolts and they will target a single Elasticsearch shard.\n\n> Also, I would appreciate your thoughts on the other benefits of the proposed option (listed in my first comment).\n\nWhile I see the benefits you mention, the problem I have with the proposal as a whole is as stated in \nhttps://github.com/elastic/elasticsearch/issues/17420#issuecomment-203879027.\n\nI've left this open for discussion in case somebody has some better idea.  \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/205988341","html_url":"https://github.com/elastic/elasticsearch/issues/17420#issuecomment-205988341","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17420","id":205988341,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNTk4ODM0MQ==","user":{"login":"sachingsachin","id":6510635,"node_id":"MDQ6VXNlcjY1MTA2MzU=","avatar_url":"https://avatars3.githubusercontent.com/u/6510635?v=4","gravatar_id":"","url":"https://api.github.com/users/sachingsachin","html_url":"https://github.com/sachingsachin","followers_url":"https://api.github.com/users/sachingsachin/followers","following_url":"https://api.github.com/users/sachingsachin/following{/other_user}","gists_url":"https://api.github.com/users/sachingsachin/gists{/gist_id}","starred_url":"https://api.github.com/users/sachingsachin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sachingsachin/subscriptions","organizations_url":"https://api.github.com/users/sachingsachin/orgs","repos_url":"https://api.github.com/users/sachingsachin/repos","events_url":"https://api.github.com/users/sachingsachin/events{/privacy}","received_events_url":"https://api.github.com/users/sachingsachin/received_events","type":"User","site_admin":false},"created_at":"2016-04-05T21:22:39Z","updated_at":"2016-04-05T21:22:39Z","author_association":"NONE","body":"Thanks for leaving it open for others to comment @clintongormley .\nIf more votes are skewed towards the benefits introduced by this option and lesser towards the problems, then we could try to implement the same.\n\nIs there a way to seek opinion from couple more folks?\nA quicker closure would be better than an indefinite one.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/286399504","html_url":"https://github.com/elastic/elasticsearch/issues/17420#issuecomment-286399504","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17420","id":286399504,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NjM5OTUwNA==","user":{"login":"fmyblack","id":11541558,"node_id":"MDQ6VXNlcjExNTQxNTU4","avatar_url":"https://avatars0.githubusercontent.com/u/11541558?v=4","gravatar_id":"","url":"https://api.github.com/users/fmyblack","html_url":"https://github.com/fmyblack","followers_url":"https://api.github.com/users/fmyblack/followers","following_url":"https://api.github.com/users/fmyblack/following{/other_user}","gists_url":"https://api.github.com/users/fmyblack/gists{/gist_id}","starred_url":"https://api.github.com/users/fmyblack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmyblack/subscriptions","organizations_url":"https://api.github.com/users/fmyblack/orgs","repos_url":"https://api.github.com/users/fmyblack/repos","events_url":"https://api.github.com/users/fmyblack/events{/privacy}","received_events_url":"https://api.github.com/users/fmyblack/received_events","type":"User","site_admin":false},"created_at":"2017-03-14T11:55:47Z","updated_at":"2017-03-14T11:55:47Z","author_association":"NONE","body":"I have a nearly-like problem.\r\n**my background**: I have about 350GB data need write in `es2.3` using `elasticsearch-hadoop` before 6:00am each day. Every doc is about a single user profile (with a uuid and multi-tags) . \r\n**The problem**: The only thing I want is increasing index performance cause there be a cache api in query client. I want one partition data can be indexed in same shard, though I'm not care about if the route path is uuid.\r\n\r\nI find the hash function in `es2.3` is `Murmur3HashFunction`, \r\nand in `elasticsearch-hadoop`:\r\n```\r\nint bucket = currentInstance % targetShards.size();\r\nShard chosenShard = orderedShards.get(bucket);\r\nNode targetNode = targetShards.get(chosenShard);\r\n```\r\nthats means `partitionid % totalshards == chosenshard`, so if the data is in the same partition, is will send to same shard, I want the chosen shard will be the routing shard, So I create a Partitioner like this:\r\n```\r\npublic class EsPartitioner extends Partitioner {\r\n\r\n\tint numPartitions;\r\n\t\r\n\tpublic EsPartitioner(int numPartitions) {\r\n\t\tthis.numPartitions = numPartitions;\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic int getPartition(Object row) {\r\n\t\t// TODO Auto-generated method stub\r\n\t\tint hash = Murmur3HashFunction.hash(\"\" + row) % this.numPartitions;\r\n\t\tif(hash < 0) {\r\n\t\t\thash += this.numPartitions;\r\n\t\t}\r\n\t\treturn hash;\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic int numPartitions() {\r\n\t\t// TODO Auto-generated method stub\r\n\t\treturn numPartitions;\r\n\t}\r\n\r\n\t/**\r\n\t * Hash function based on the Murmur3 algorithm, which is the default as of\r\n\t * Elasticsearch 2.0.\r\n\t */\r\n\tstatic class Murmur3HashFunction {...// same like in es}\r\n}\r\n```\r\n\r\nIn my rdd, key is uuid:\r\n```\r\nint partitionNum = 10 * shardNum;\r\nJavaPairRDD<String, Profile> users...;\r\nusers.partitionBy(new EsPartitioner(partitionNum));\r\n```\r\n\r\nlast, I set `es.mapping.routing` --> 'uuid' to make the es and spark use same hash function and same route field. \r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/406409617","html_url":"https://github.com/elastic/elasticsearch/issues/17420#issuecomment-406409617","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17420","id":406409617,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjQwOTYxNw==","user":{"login":"tomcallahan","id":15988488,"node_id":"MDQ6VXNlcjE1OTg4NDg4","avatar_url":"https://avatars1.githubusercontent.com/u/15988488?v=4","gravatar_id":"","url":"https://api.github.com/users/tomcallahan","html_url":"https://github.com/tomcallahan","followers_url":"https://api.github.com/users/tomcallahan/followers","following_url":"https://api.github.com/users/tomcallahan/following{/other_user}","gists_url":"https://api.github.com/users/tomcallahan/gists{/gist_id}","starred_url":"https://api.github.com/users/tomcallahan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomcallahan/subscriptions","organizations_url":"https://api.github.com/users/tomcallahan/orgs","repos_url":"https://api.github.com/users/tomcallahan/repos","events_url":"https://api.github.com/users/tomcallahan/events{/privacy}","received_events_url":"https://api.github.com/users/tomcallahan/received_events","type":"User","site_admin":false},"created_at":"2018-07-19T20:48:44Z","updated_at":"2018-07-19T20:48:44Z","author_association":"CONTRIBUTOR","body":"@jbaiera can you take a look at this one?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/509708981","html_url":"https://github.com/elastic/elasticsearch/issues/17420#issuecomment-509708981","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17420","id":509708981,"node_id":"MDEyOklzc3VlQ29tbWVudDUwOTcwODk4MQ==","user":{"login":"jbaiera","id":875779,"node_id":"MDQ6VXNlcjg3NTc3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/875779?v=4","gravatar_id":"","url":"https://api.github.com/users/jbaiera","html_url":"https://github.com/jbaiera","followers_url":"https://api.github.com/users/jbaiera/followers","following_url":"https://api.github.com/users/jbaiera/following{/other_user}","gists_url":"https://api.github.com/users/jbaiera/gists{/gist_id}","starred_url":"https://api.github.com/users/jbaiera/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbaiera/subscriptions","organizations_url":"https://api.github.com/users/jbaiera/orgs","repos_url":"https://api.github.com/users/jbaiera/repos","events_url":"https://api.github.com/users/jbaiera/events{/privacy}","received_events_url":"https://api.github.com/users/jbaiera/received_events","type":"User","site_admin":false},"created_at":"2019-07-09T16:16:14Z","updated_at":"2019-07-09T16:16:14Z","author_association":"CONTRIBUTOR","body":"I don't think there's much appetite for adding in an option for ES to accept writes to the local node only. As stated above, the easiest option would be to assign a stable routing id to each document as it is written, and while it is not guaranteed to result in the documents being immediately persisted by the node handling the request, it does ensure that at most one hop will be used to persist all documents to a single node that the routing value corresponds to.\r\n\r\nAnother course of action that we think will result in better performance for ingestion pipelines is that of a \"best-effort routing\" partitioner to be added to ES-Hadoop to be used with different integrations (https://github.com/elastic/elasticsearch-hadoop/issues/1130). This feature would do two things: Expose the hashing algorithm to a partitioner implementation that can determine a document's shard number by extracting an id or routing from it, and batching writes to the cluster on the outputformat/bolt/sink by referencing a locally cached view of the cluster's routing table. We wont be able to ensure that any external system will have a perfectly synchronized view of the cluster state, so this optimization will fall back to relying on Elasticsearch to forward requests that are incorrectly routed, with the Hadoop side periodically refreshing its view of the cluster state.\r\n\r\nWith these points in mind, I'm going to close this issue out. ","performed_via_github_app":null}]