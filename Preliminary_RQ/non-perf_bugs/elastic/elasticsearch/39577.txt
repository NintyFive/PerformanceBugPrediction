{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/39577","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39577/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39577/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39577/events","html_url":"https://github.com/elastic/elasticsearch/issues/39577","id":416200007,"node_id":"MDU6SXNzdWU0MTYyMDAwMDc=","number":39577,"title":"simple_query_string with fields: [\"*\"] can result in an error","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"matriv","id":5058131,"node_id":"MDQ6VXNlcjUwNTgxMzE=","avatar_url":"https://avatars1.githubusercontent.com/u/5058131?v=4","gravatar_id":"","url":"https://api.github.com/users/matriv","html_url":"https://github.com/matriv","followers_url":"https://api.github.com/users/matriv/followers","following_url":"https://api.github.com/users/matriv/following{/other_user}","gists_url":"https://api.github.com/users/matriv/gists{/gist_id}","starred_url":"https://api.github.com/users/matriv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matriv/subscriptions","organizations_url":"https://api.github.com/users/matriv/orgs","repos_url":"https://api.github.com/users/matriv/repos","events_url":"https://api.github.com/users/matriv/events{/privacy}","received_events_url":"https://api.github.com/users/matriv/received_events","type":"User","site_admin":false},"assignees":[{"login":"matriv","id":5058131,"node_id":"MDQ6VXNlcjUwNTgxMzE=","avatar_url":"https://avatars1.githubusercontent.com/u/5058131?v=4","gravatar_id":"","url":"https://api.github.com/users/matriv","html_url":"https://github.com/matriv","followers_url":"https://api.github.com/users/matriv/followers","following_url":"https://api.github.com/users/matriv/following{/other_user}","gists_url":"https://api.github.com/users/matriv/gists{/gist_id}","starred_url":"https://api.github.com/users/matriv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matriv/subscriptions","organizations_url":"https://api.github.com/users/matriv/orgs","repos_url":"https://api.github.com/users/matriv/repos","events_url":"https://api.github.com/users/matriv/events{/privacy}","received_events_url":"https://api.github.com/users/matriv/received_events","type":"User","site_admin":false},{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2019-03-01T17:16:36Z","updated_at":"2019-05-23T08:51:39Z","closed_at":"2019-05-23T08:10:08Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Reproduction:  \r\n```\r\nPUT _template/foo\r\n{\r\n  \"settings\": {\r\n    \"index\": {\r\n      \"number_of_shards\": \"1\",\r\n      \"number_of_replicas\": \"0\"\r\n    }\r\n  },\r\n  \"index_patterns\": [\r\n    \"foo\"\r\n  ],\r\n  \"mappings\": {\r\n    \"dynamic\": \"strict\",\r\n    \"properties\": {\r\n      \"kw\": {\r\n        \"type\": \"keyword\"\r\n      },\r\n      \"b\": {\r\n        \"type\": \"boolean\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n```\r\nDELETE foo\r\nPUT foo/_create/1\r\n{\r\n  \"kw\": \"fizzbuzz\",\r\n  \"b\": true\r\n}\r\n```\r\n```\r\nGET foo/_search\r\n{\r\n  \"query\": {\r\n    \"simple_query_string\": {\r\n      \"query\": \"fizzbuzz\",\r\n      \"fields\": [\"*\"]\r\n    }\r\n  }\r\n}\r\n```\r\nResults in \r\n```\r\n[2019-03-01T11:07:38,419][DEBUG][o.e.a.s.TransportSearchAction] [macd.ex9.net] All shards failed for phase: [query]\r\norg.elasticsearch.index.query.QueryShardException: failed to create query: {\r\n  \"simple_query_string\" : {\r\n    \"query\" : \"fizzbuzz\",\r\n    \"fields\" : [\r\n      \"*^1.0\"\r\n    ],\r\n    \"flags\" : -1,\r\n    \"default_operator\" : \"or\",\r\n    \"analyze_wildcard\" : false,\r\n    \"auto_generate_synonyms_phrase_query\" : true,\r\n    \"fuzzy_prefix_length\" : 0,\r\n    \"fuzzy_max_expansions\" : 50,\r\n    \"fuzzy_transpositions\" : true,\r\n    \"boost\" : 1.0\r\n  }\r\n}\r\n\tat org.elasticsearch.index.query.QueryShardContext.toQuery(QueryShardContext.java:309) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.index.query.QueryShardContext.toQuery(QueryShardContext.java:292) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.search.SearchService.parseSource(SearchService.java:754) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.search.SearchService.createContext(SearchService.java:607) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.search.SearchService.createAndPutContext(SearchService.java:582) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:385) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.search.SearchService.access$100(SearchService.java:123) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.search.SearchService$2.onResponse(SearchService.java:357) [elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.search.SearchService$2.onResponse(SearchService.java:353) [elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.search.SearchService$4.doRun(SearchService.java:1068) [elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.common.util.concurrent.TimedRunnable.doRun(TimedRunnable.java:41) [elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:751) [elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]\r\n\tat java.lang.Thread.run(Thread.java:834) [?:?]\r\nCaused by: java.lang.IllegalArgumentException: Can't parse boolean value [fizzbuzz], expected [true] or [false]\r\n\tat org.elasticsearch.index.mapper.BooleanFieldMapper$BooleanFieldType.indexedValueForSearch(BooleanFieldMapper.java:166) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.index.mapper.TermBasedFieldType.termQuery(TermBasedFieldType.java:53) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.index.mapper.BooleanFieldMapper$BooleanFieldType.termQuery(BooleanFieldMapper.java:114) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.index.search.MatchQuery$MatchQueryBuilder.lambda$newTermQuery$1(MatchQuery.java:526) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.index.search.MatchQuery$MatchQueryBuilder.newTermQuery(MatchQuery.java:529) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.index.search.MatchQuery.parse(MatchQuery.java:251) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.index.search.MultiMatchQuery.buildFieldQueries(MultiMatchQuery.java:101) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.index.search.MultiMatchQuery.parse(MultiMatchQuery.java:69) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.index.search.SimpleQueryStringQueryParser.newDefaultQuery(SimpleQueryStringQueryParser.java:118) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.apache.lucene.queryparser.simple.SimpleQueryParser.consumeToken(SimpleQueryParser.java:415) ~[lucene-queryparser-8.0.0-snapshot-83f9835.jar:8.0.0-snapshot-83f9835 83f9835a47a00a2ec58a4cf5fc0d492497cf7898 - jpountz - 2019-01-21 13:06:32]\r\n\tat org.apache.lucene.queryparser.simple.SimpleQueryParser.parseSubQuery(SimpleQueryParser.java:216) ~[lucene-queryparser-8.0.0-snapshot-83f9835.jar:8.0.0-snapshot-83f9835 83f9835a47a00a2ec58a4cf5fc0d492497cf7898 - jpountz - 2019-01-21 13:06:32]\r\n\tat org.apache.lucene.queryparser.simple.SimpleQueryParser.parse(SimpleQueryParser.java:156) ~[lucene-queryparser-8.0.0-snapshot-83f9835.jar:8.0.0-snapshot-83f9835 83f9835a47a00a2ec58a4cf5fc0d492497cf7898 - jpountz - 2019-01-21 13:06:32]\r\n\tat org.elasticsearch.index.query.SimpleQueryStringBuilder.doToQuery(SimpleQueryStringBuilder.java:431) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.index.query.AbstractQueryBuilder.toQuery(AbstractQueryBuilder.java:99) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.index.query.QueryShardContext.lambda$toQuery$1(QueryShardContext.java:293) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\tat org.elasticsearch.index.query.QueryShardContext.toQuery(QueryShardContext.java:305) ~[elasticsearch-7.0.0-beta1.jar:7.0.0-beta1]\r\n\t... 16 more\r\n```\r\nThis is a contrived example from a more complex query. \r\n\r\nThe underlying error makes sense, but the doc states \"will never throw an exception, and discards invalid parts of the query\" , and not sure if this qualifies an invalid part of the query. \r\n\r\nThe query works if you simply remove ` \"fields\": [\"*\"]` , so there is a simple workaround, but then you are implicitly depending on `index.query.default_field` which may not be what you want.  ","closed_by":{"login":"matriv","id":5058131,"node_id":"MDQ6VXNlcjUwNTgxMzE=","avatar_url":"https://avatars1.githubusercontent.com/u/5058131?v=4","gravatar_id":"","url":"https://api.github.com/users/matriv","html_url":"https://github.com/matriv","followers_url":"https://api.github.com/users/matriv/followers","following_url":"https://api.github.com/users/matriv/following{/other_user}","gists_url":"https://api.github.com/users/matriv/gists{/gist_id}","starred_url":"https://api.github.com/users/matriv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matriv/subscriptions","organizations_url":"https://api.github.com/users/matriv/orgs","repos_url":"https://api.github.com/users/matriv/repos","events_url":"https://api.github.com/users/matriv/events{/privacy}","received_events_url":"https://api.github.com/users/matriv/received_events","type":"User","site_admin":false},"performed_via_github_app":null}