[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/259675544","html_url":"https://github.com/elastic/elasticsearch/issues/20365#issuecomment-259675544","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20365","id":259675544,"node_id":"MDEyOklzc3VlQ29tbWVudDI1OTY3NTU0NA==","user":{"login":"MaineC","id":70953,"node_id":"MDQ6VXNlcjcwOTUz","avatar_url":"https://avatars3.githubusercontent.com/u/70953?v=4","gravatar_id":"","url":"https://api.github.com/users/MaineC","html_url":"https://github.com/MaineC","followers_url":"https://api.github.com/users/MaineC/followers","following_url":"https://api.github.com/users/MaineC/following{/other_user}","gists_url":"https://api.github.com/users/MaineC/gists{/gist_id}","starred_url":"https://api.github.com/users/MaineC/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MaineC/subscriptions","organizations_url":"https://api.github.com/users/MaineC/orgs","repos_url":"https://api.github.com/users/MaineC/repos","events_url":"https://api.github.com/users/MaineC/events{/privacy}","received_events_url":"https://api.github.com/users/MaineC/received_events","type":"User","site_admin":false},"created_at":"2016-11-10T12:15:16Z","updated_at":"2016-11-10T12:15:16Z","author_association":"CONTRIBUTOR","body":"So on the request side, we want to expect a list of metrics:\n\n```\nGET /_rank_eval\n{\n    \"requests\": [\n    {\n        \"id\": \"JFK query\",                              \n        \"request\": {\"query\": {\"match\": {\"opening_text\": {\"query\": \"JFK\"}}}},    \n        \"ratings\": [\n        {\n          \"rating\": 1,\n          \"_type\": \"page\",\n          \"_id\": \"30900421\",\n          \"_index\": \"enwiki_rank\"\n        }],\n      \"summary_fields\": [\"title\"],                      \n    },\n    \"metrics\": {\n      [\n          \"reciprocal_rank\": {},\n          \"precision\": {}\n    ]}}\n```\n\nThat's what the response side looks like:\n\n```\n {  \n   \"rank_eval\":{  \n      \"quality_level\":[  \n         {  \n            \"name\":\"precision\",\n            \"value\":0.12698412698412698\n         },\n         {  \n            \"name\":\"reciprocal_rank\",\n            \"value\":0.5\n         }\n      ],\n      \"details\":{  \n         \"0\":{  \n            \"quality_level\":[  \n               {  \n                  \"name\":\"precision\",\n                  \"value\":0.1111111111111111\n               }\n            ]\n         }\n      }\n   }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/259684672","html_url":"https://github.com/elastic/elasticsearch/issues/20365#issuecomment-259684672","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20365","id":259684672,"node_id":"MDEyOklzc3VlQ29tbWVudDI1OTY4NDY3Mg==","user":{"login":"MaineC","id":70953,"node_id":"MDQ6VXNlcjcwOTUz","avatar_url":"https://avatars3.githubusercontent.com/u/70953?v=4","gravatar_id":"","url":"https://api.github.com/users/MaineC","html_url":"https://github.com/MaineC","followers_url":"https://api.github.com/users/MaineC/followers","following_url":"https://api.github.com/users/MaineC/following{/other_user}","gists_url":"https://api.github.com/users/MaineC/gists{/gist_id}","starred_url":"https://api.github.com/users/MaineC/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MaineC/subscriptions","organizations_url":"https://api.github.com/users/MaineC/orgs","repos_url":"https://api.github.com/users/MaineC/repos","events_url":"https://api.github.com/users/MaineC/events{/privacy}","received_events_url":"https://api.github.com/users/MaineC/received_events","type":"User","site_admin":false},"created_at":"2016-11-10T13:03:40Z","updated_at":"2016-11-10T13:03:40Z","author_association":"CONTRIBUTOR","body":"The original question came from discussion with @colings86 and @bleskes - after discussing f2f with @cbuescher summarizing below:\n\ntl;dr: IIRC the original intent was to reserve some namespace for requesting more than one metric at a time to avoid backwards compatibility issues in the future. After looking at the resulting request/response format changes and dependencies introduced between search request and metrics requested this doesn't sound like such a great idea to do in a first iteration anymore, in particular as all it would save is another search round trip.\n\nLooking at the proposed request above the first question that comes to mind is why not give each metric some unique identifier and allow for requesting more than one metric configuration per request as well (e.g. let users ask for Precision_at_10, Precision_at_5 and Precision_at_1). \n\nIn #21310 we decided to remove the separate size configuration for evaluation metrics and rely only on the size configuration the user set in the rated search request to avoid confusion between the two. So thinking the idea of requesting metrics with different configuration further means re-introducing that parameter per metric, and relying on the user to make sure to request enough search results to cover for the largest above configuration. This sounds like an awesome way to screw things up.\n\nUnless I'm missing something the advantage of allowing for more than one metric would be to execute the rank evaluation request just once. By extension this means executing all rated search requests contained just once.\n\nGiven that this is an API that is in no way real time, I'm wondering whether these savings are large enough to justify adding more potential for confusion to the request and increasing the size of the request/response themselves.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/342974438","html_url":"https://github.com/elastic/elasticsearch/issues/20365#issuecomment-342974438","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20365","id":342974438,"node_id":"MDEyOklzc3VlQ29tbWVudDM0Mjk3NDQzOA==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2017-11-08T21:58:18Z","updated_at":"2017-11-08T21:58:18Z","author_association":"MEMBER","body":"> Given that this is an API that is in no way real time, I'm wondering whether these savings are large enough to justify adding more potential for confusion to the request and increasing the size of the request/response themselves\r\n\r\nI'm opting for calculating only one metric per request, if more metrics or different parametrizations are needed, the client can issue multiple requests.","performed_via_github_app":null}]