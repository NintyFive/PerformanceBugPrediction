{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/25750","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25750/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25750/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25750/events","html_url":"https://github.com/elastic/elasticsearch/issues/25750","id":243404113,"node_id":"MDU6SXNzdWUyNDM0MDQxMTM=","number":25750,"title":"Make index mandatory in terms lookup","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":33660,"node_id":"MDU6TGFiZWwzMzY2MA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebreaking","name":">breaking","color":"d93f0b","default":false,"description":null},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null},{"id":654498781,"node_id":"MDU6TGFiZWw2NTQ0OTg3ODE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v6.0.0-beta1","name":"v6.0.0-beta1","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-07-17T13:57:28Z","updated_at":"2018-02-14T13:28:48Z","closed_at":"2017-07-17T16:50:30Z","author_association":"MEMBER","active_lock_reason":null,"body":"When doing a terms lookup, we allow users to omit the index to get the terms from, in which case the index will be the same as the one that is being searched on.\r\n\r\nWhen parsing the terms lookup info, we don't have the current index information available to set it to the created `TermsLookup` class. We end up sending the `TermsLookup` to the shards with the index field set to null. When rewriting the query, we need to carry some context so that we can fetch terms from the correct index if the index is null.\r\n\r\nAssuming that this was done to avoid typing the index name twice, I wonder if we can get rid of this \"leniency\" and instead require the index name when doing terms lookups. This way users will have to be more explicit by always specifying `index`, `type` and `id` of the documents to fetch terms from.","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}