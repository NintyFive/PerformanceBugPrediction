[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/560416878","html_url":"https://github.com/elastic/elasticsearch/issues/49763#issuecomment-560416878","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49763","id":560416878,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MDQxNjg3OA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-12-02T14:22:22Z","updated_at":"2019-12-02T14:22:22Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-features (:Core/Features/Ingest)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/562107433","html_url":"https://github.com/elastic/elasticsearch/issues/49763#issuecomment-562107433","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49763","id":562107433,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MjEwNzQzMw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2019-12-05T12:24:41Z","updated_at":"2019-12-05T12:25:15Z","author_association":"CONTRIBUTOR","body":"> Elasticsearch has a cache of 100 compiled scripts and a default limit of 75 script compilation per 5 minutes. That pipeline alone has close to 100 scripts, so the cache runs out quickly enough.\r\n\r\nA cache limit of 100 compiled scripts is going to add a lot of overhead to ingest, where we use a lot of very short scripts.  Can we not base the cache on memory usage instead?  Or alternatively, change the `if` statements to a json structure with some standard operators `==`, `!=`, `>`, `>=`,`<`, `<=`, `is_null`, `is_not_null`?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/565114060","html_url":"https://github.com/elastic/elasticsearch/issues/49763#issuecomment-565114060","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49763","id":565114060,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NTExNDA2MA==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2019-12-12T17:52:22Z","updated_at":"2019-12-12T17:58:06Z","author_association":"CONTRIBUTOR","body":"We discussed this today and agree that we need to address this issue. How we do it though is still a question. \r\n\r\nWhile it would be possible to change the `if` statement from a painless script there is concern that it might be too limiting to make the necessary decision, and something like adding a simple and/or support could be a rabbit hole not sure we want to go down. However, adding something like \"simple_if\" is a possibility.\r\n\r\nOn the topic of max size and compilation throttle - The cache currently has configurable max size, but does does not offer size based evictions.The throttle is configurable but as seen one large pipeline can easily exceed the throttle. \r\n\r\nWe wonder if these `if` scripts warrant special handling ?\r\n\r\na) How much actual memory is used by these normally small `if` scripts ? Does it make sense to provide special handling w.r.t max number of these in cache if the footprint is very small ? \r\n\r\nb) Similarly, should these small `if` scripts from the pipelines be exempt from the script compilation throttle ? \r\n\r\n@jdconrad @stu-elastic - thoughts ?\r\n ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/565144363","html_url":"https://github.com/elastic/elasticsearch/issues/49763#issuecomment-565144363","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49763","id":565144363,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NTE0NDM2Mw==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2019-12-12T19:14:38Z","updated_at":"2019-12-12T19:14:38Z","author_association":"CONTRIBUTOR","body":"One initial thought to consider is if an ingest script processor didn't allow the use of stored scripts, the script could be compiled when the ingest processor is parsed, so it could then be cached locally and compilation would only occur when the processor changes.\r\n\r\nHowever, to address the questions posed by @jakelandis the memory footprints for compiled scripts should be relatively small and the difference between a large script and a small script shouldn't be much, so it probably doesn't make sense to have special handling for small conditional ingest scripts specifically. As to the second point we do agree that the throttle limit should be removed for conditional ingest scripts because they are not changed on a per request basis.\r\n\r\nAfter discussion with @stu-elastic and @rjernst we would propose making the cache size and compilation limits per context. This way ingest could be set to have a much larger cache and no compilation limit by default for this type of use case.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/565343178","html_url":"https://github.com/elastic/elasticsearch/issues/49763#issuecomment-565343178","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49763","id":565343178,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NTM0MzE3OA==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2019-12-13T08:06:04Z","updated_at":"2019-12-13T08:06:04Z","author_association":"MEMBER","body":"> One initial thought to consider is if an ingest script processor didn't allow the use of stored scripts, the script could be compiled when the ingest processor is parsed, so it could then be cached locally and compilation would only occur when the processor changes.\r\n\r\nSo today conditional scripts and scripts in the `script` processor are compiled lazy, when a pipeline is actually used. If we would change it to compile on parse time, then we need to make sure that we don't into any limit. Otherwise a pipeline with scripts may not be useable, because it failed to load due limitation error on one ore more nodes. If we can increase the compilation limit then this would help, but wouldn't it be better to exclude scripts in the ingest context from this compilation per time window limit? Essentially these scripts are stored scripts, but instead stored in a pipeline.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/565525029","html_url":"https://github.com/elastic/elasticsearch/issues/49763#issuecomment-565525029","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49763","id":565525029,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NTUyNTAyOQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2019-12-13T17:12:44Z","updated_at":"2019-12-13T17:12:44Z","author_association":"MEMBER","body":"> wouldn't it be better to exclude scripts in the ingest context from this compilation per time window limit?\r\n\r\nThat's exactly part of the purpose of #50152. By splitting the cache per context, we can control the rate limit separately per cache, and have the ability to disable the rate limit completely. I don't think this is different whether they are compiled at parse or pipeline runtime.\r\n\r\nAdditionally, while I do think we should move to parse time compilation for ingest condition scripts, I'm not sure we can until we limit the existing API. These can currently be stored scripts (just referenced by name), which means they might change after the pipeline is parsed. If we want to compile at parse time, I think we need to limit these scripts to inline only, which makes sense to me because they are essentially already stored scripts, just stored in a different place than the global stored scripts.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/565948338","html_url":"https://github.com/elastic/elasticsearch/issues/49763#issuecomment-565948338","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49763","id":565948338,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NTk0ODMzOA==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2019-12-16T08:01:00Z","updated_at":"2019-12-16T08:01:00Z","author_association":"MEMBER","body":"> and have the ability to disable the rate limit completely. \r\n\r\n👍 \r\n\r\n> I don't think this is different whether they are compiled at parse or pipeline runtime.\r\n\r\nAgreed, for the ingest context this shouldn't be different and disabling the rate limit for the ingest context shouldn't depend on moving the compilation from runtime to parse time.\r\n\r\n>  I think we need to limit these scripts to inline only, which makes sense to me because they are essentially already stored scripts, just stored in a different place than the global stored scripts.\r\n\r\nYes, only allowing inline scripts is required in order to move compilation to from runtime to parse time. This would be a breaking change, since both script processor and code that parses the conditional invoke `Script.parse(...)` method which allows to use of stored scripts.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/567541394","html_url":"https://github.com/elastic/elasticsearch/issues/49763#issuecomment-567541394","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49763","id":567541394,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NzU0MTM5NA==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2019-12-19T15:39:23Z","updated_at":"2019-12-19T15:39:23Z","author_association":"MEMBER","body":"I've removed the team-discuss label. When #50152 is implemented then we should disable the rate limit for the ingest context.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/587876788","html_url":"https://github.com/elastic/elasticsearch/issues/49763#issuecomment-587876788","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49763","id":587876788,"node_id":"MDEyOklzc3VlQ29tbWVudDU4Nzg3Njc4OA==","user":{"login":"leehinman","id":57081003,"node_id":"MDQ6VXNlcjU3MDgxMDAz","avatar_url":"https://avatars1.githubusercontent.com/u/57081003?v=4","gravatar_id":"","url":"https://api.github.com/users/leehinman","html_url":"https://github.com/leehinman","followers_url":"https://api.github.com/users/leehinman/followers","following_url":"https://api.github.com/users/leehinman/following{/other_user}","gists_url":"https://api.github.com/users/leehinman/gists{/gist_id}","starred_url":"https://api.github.com/users/leehinman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leehinman/subscriptions","organizations_url":"https://api.github.com/users/leehinman/orgs","repos_url":"https://api.github.com/users/leehinman/repos","events_url":"https://api.github.com/users/leehinman/events{/privacy}","received_events_url":"https://api.github.com/users/leehinman/received_events","type":"User","site_admin":false},"created_at":"2020-02-18T21:26:12Z","updated_at":"2020-02-18T21:26:12Z","author_association":"NONE","body":"For 7.X would it be possible to improve the error message when the cache is too small?  If we have more evictions per minute than the `max_compilations_per_minute` we could recommend increasing `cache.max_size`.  A real world example where that would have helped is https://github.com/elastic/beats/issues/16293","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/587957909","html_url":"https://github.com/elastic/elasticsearch/issues/49763#issuecomment-587957909","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49763","id":587957909,"node_id":"MDEyOklzc3VlQ29tbWVudDU4Nzk1NzkwOQ==","user":{"login":"stu-elastic","id":24232742,"node_id":"MDQ6VXNlcjI0MjMyNzQy","avatar_url":"https://avatars0.githubusercontent.com/u/24232742?v=4","gravatar_id":"","url":"https://api.github.com/users/stu-elastic","html_url":"https://github.com/stu-elastic","followers_url":"https://api.github.com/users/stu-elastic/followers","following_url":"https://api.github.com/users/stu-elastic/following{/other_user}","gists_url":"https://api.github.com/users/stu-elastic/gists{/gist_id}","starred_url":"https://api.github.com/users/stu-elastic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stu-elastic/subscriptions","organizations_url":"https://api.github.com/users/stu-elastic/orgs","repos_url":"https://api.github.com/users/stu-elastic/repos","events_url":"https://api.github.com/users/stu-elastic/events{/privacy}","received_events_url":"https://api.github.com/users/stu-elastic/received_events","type":"User","site_admin":false},"created_at":"2020-02-18T23:34:20Z","updated_at":"2020-02-18T23:34:20Z","author_association":"CONTRIBUTOR","body":"That's a reasonable request @leehinman, let's continue that discussion in #52497","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/657581800","html_url":"https://github.com/elastic/elasticsearch/issues/49763#issuecomment-657581800","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49763","id":657581800,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzU4MTgwMA==","user":{"login":"stu-elastic","id":24232742,"node_id":"MDQ6VXNlcjI0MjMyNzQy","avatar_url":"https://avatars0.githubusercontent.com/u/24232742?v=4","gravatar_id":"","url":"https://api.github.com/users/stu-elastic","html_url":"https://github.com/stu-elastic","followers_url":"https://api.github.com/users/stu-elastic/followers","following_url":"https://api.github.com/users/stu-elastic/following{/other_user}","gists_url":"https://api.github.com/users/stu-elastic/gists{/gist_id}","starred_url":"https://api.github.com/users/stu-elastic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stu-elastic/subscriptions","organizations_url":"https://api.github.com/users/stu-elastic/orgs","repos_url":"https://api.github.com/users/stu-elastic/repos","events_url":"https://api.github.com/users/stu-elastic/events{/privacy}","received_events_url":"https://api.github.com/users/stu-elastic/received_events","type":"User","site_admin":false},"created_at":"2020-07-13T14:06:05Z","updated_at":"2020-07-13T14:06:05Z","author_association":"CONTRIBUTOR","body":"Closed by https://github.com/elastic/elasticsearch/pull/59267","performed_via_github_app":null}]