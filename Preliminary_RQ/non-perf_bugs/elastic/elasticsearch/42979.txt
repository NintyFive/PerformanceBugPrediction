{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/42979","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42979/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42979/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42979/events","html_url":"https://github.com/elastic/elasticsearch/issues/42979","id":453400963,"node_id":"MDU6SXNzdWU0NTM0MDA5NjM=","number":42979,"title":"[CI] InternalEngineTests.testLookupSeqNoByIdInLucene fails after prune ID merge policy","user":{"login":"henningandersen","id":33268011,"node_id":"MDQ6VXNlcjMzMjY4MDEx","avatar_url":"https://avatars2.githubusercontent.com/u/33268011?v=4","gravatar_id":"","url":"https://api.github.com/users/henningandersen","html_url":"https://github.com/henningandersen","followers_url":"https://api.github.com/users/henningandersen/followers","following_url":"https://api.github.com/users/henningandersen/following{/other_user}","gists_url":"https://api.github.com/users/henningandersen/gists{/gist_id}","starred_url":"https://api.github.com/users/henningandersen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/henningandersen/subscriptions","organizations_url":"https://api.github.com/users/henningandersen/orgs","repos_url":"https://api.github.com/users/henningandersen/repos","events_url":"https://api.github.com/users/henningandersen/events{/privacy}","received_events_url":"https://api.github.com/users/henningandersen/received_events","type":"User","site_admin":false},"labels":[{"id":836542781,"node_id":"MDU6TGFiZWw4MzY1NDI3ODE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Engine","name":":Distributed/Engine","color":"0e8a16","default":false,"description":"Anything around managing Lucene and the Translog in an open shard."},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"},{"id":1352927464,"node_id":"MDU6TGFiZWwxMzUyOTI3NDY0","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v7.3.0","name":"v7.3.0","color":"dddddd","default":false,"description":""},{"id":1194435738,"node_id":"MDU6TGFiZWwxMTk0NDM1NzM4","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v8.0.0","name":"v8.0.0","color":"dddddd","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"assignees":[{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false}],"milestone":null,"comments":11,"created_at":"2019-06-07T08:40:15Z","updated_at":"2019-06-19T13:56:58Z","closed_at":"2019-06-19T13:56:58Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"My PR build failed:\r\n\r\nhttps://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+pull-request-1/193/testReport/org.elasticsearch.index.engine/InternalEngineTests/testLookupSeqNoByIdInLucene/\r\n\r\nwith:\r\n```\r\njava.lang.NullPointerException\r\n\tat __randomizedtesting.SeedInfo.seed([DDA237697902E2F7:858F7759E359C12]:0)\r\n\tat org.elasticsearch.index.engine.InternalEngineTests.lambda$testLookupSeqNoByIdInLucene$50(InternalEngineTests.java:4004)\r\n\tat org.elasticsearch.index.engine.InternalEngineTests.testLookupSeqNoByIdInLucene(InternalEngineTests.java:4031)\r\n```\r\n\r\nI can easily reproduce this with the seed DDA237697902E2F7. I cut down the test case to following (which indexes a doc, does a refresh, deletes the doc and then merges, loosing the ability to lookup the doc/seqno by ID):\r\n```\r\n    public void testLookupSeqNoByIdInLucene2() throws Exception {\r\n        Settings.Builder settings = Settings.builder()\r\n            .put(defaultSettings.getSettings())\r\n            .put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), true);\r\n        final IndexMetaData indexMetaData = IndexMetaData.builder(defaultSettings.getIndexMetaData()).settings(settings).build();\r\n        final IndexSettings indexSettings = IndexSettingsModule.newIndexSettings(indexMetaData);\r\n        Map<String, Engine.Operation> latestOps = new HashMap<>(); // id -> latest seq_no\r\n        try (Store store = createStore();\r\n             InternalEngine engine = createEngine(config(indexSettings, store, createTempDir(), newMergePolicy(), null))) {\r\n            final ParsedDocument doc = EngineTestCase.createParsedDoc(\"23\", null);\r\n            engine.index(new Engine.Index(EngineTestCase.newUid(doc), doc, 1, primaryTerm.get(),\r\n                1, null, Engine.Operation.Origin.REPLICA, threadPool.relativeTimeInMillis(), -1, true, UNASSIGNED_SEQ_NO, 0L));\r\n            engine.refresh(\"test\");\r\n            engine.delete(new Engine.Delete(doc.type(), doc.id(), EngineTestCase.newUid(doc), 3, primaryTerm.get(),\r\n                1, null, Engine.Operation.Origin.REPLICA, threadPool.relativeTimeInMillis(), UNASSIGNED_SEQ_NO, 0L));\r\n            try (Searcher searcher = engine.acquireSearcher(\"test\", Engine.SearcherScope.INTERNAL)) {\r\n                logger.info(\"before merge: \" + searcher.reader().numDocs() + \", \" + searcher.reader().maxDoc());\r\n            }\r\n            engine.forceMerge(true);\r\n            try (Searcher searcher = engine.acquireSearcher(\"test\", Engine.SearcherScope.INTERNAL)) {\r\n                logger.info(\"after merge: \" + searcher.reader().numDocs() + \", \" + searcher.reader().maxDoc());\r\n                DocIdAndSeqNo docIdAndSeqNo = VersionsAndSeqNoResolver.loadDocIdAndSeqNo(searcher.reader(), newUid(\"23\"));\r\n                assertNotNull(docIdAndSeqNo);\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\nI tried disabling the new `PrunePostingsMergePolicy` and this made the problem go away. As far as I can see, we do use this lookup by ID in `InternalEngine.planIndexingAsNonPrimary` and `planDeletionAsNonPrimary` in the case where the seqNo received is below local checkpoint.\r\n\r\nI am unsure if this part can be removed now and simply always treat all ops below local checkpoint as stale? Therefore raising this issue to gather input.","closed_by":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"performed_via_github_app":null}