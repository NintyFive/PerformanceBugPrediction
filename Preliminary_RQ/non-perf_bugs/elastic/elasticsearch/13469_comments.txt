[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/139322636","html_url":"https://github.com/elastic/elasticsearch/issues/13469#issuecomment-139322636","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13469","id":139322636,"node_id":"MDEyOklzc3VlQ29tbWVudDEzOTMyMjYzNg==","user":{"login":"mickdelaney","id":16094,"node_id":"MDQ6VXNlcjE2MDk0","avatar_url":"https://avatars2.githubusercontent.com/u/16094?v=4","gravatar_id":"","url":"https://api.github.com/users/mickdelaney","html_url":"https://github.com/mickdelaney","followers_url":"https://api.github.com/users/mickdelaney/followers","following_url":"https://api.github.com/users/mickdelaney/following{/other_user}","gists_url":"https://api.github.com/users/mickdelaney/gists{/gist_id}","starred_url":"https://api.github.com/users/mickdelaney/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mickdelaney/subscriptions","organizations_url":"https://api.github.com/users/mickdelaney/orgs","repos_url":"https://api.github.com/users/mickdelaney/repos","events_url":"https://api.github.com/users/mickdelaney/events{/privacy}","received_events_url":"https://api.github.com/users/mickdelaney/received_events","type":"User","site_admin":false},"created_at":"2015-09-10T17:45:59Z","updated_at":"2015-09-10T17:45:59Z","author_association":"NONE","body":"+1\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/139323162","html_url":"https://github.com/elastic/elasticsearch/issues/13469#issuecomment-139323162","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13469","id":139323162,"node_id":"MDEyOklzc3VlQ29tbWVudDEzOTMyMzE2Mg==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2015-09-10T17:48:23Z","updated_at":"2015-09-10T17:48:23Z","author_association":"CONTRIBUTOR","body":"@brwe, do you have a sense of how hard this would be?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/139328906","html_url":"https://github.com/elastic/elasticsearch/issues/13469#issuecomment-139328906","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13469","id":139328906,"node_id":"MDEyOklzc3VlQ29tbWVudDEzOTMyODkwNg==","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2015-09-10T18:01:47Z","updated_at":"2015-09-10T18:01:47Z","author_association":"CONTRIBUTOR","body":"I did not take a close look yet but don't think it would be super hard. However, I wonder what your use case is? What do you need the function results for? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/139334488","html_url":"https://github.com/elastic/elasticsearch/issues/13469#issuecomment-139334488","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13469","id":139334488,"node_id":"MDEyOklzc3VlQ29tbWVudDEzOTMzNDQ4OA==","user":{"login":"mickdelaney","id":16094,"node_id":"MDQ6VXNlcjE2MDk0","avatar_url":"https://avatars2.githubusercontent.com/u/16094?v=4","gravatar_id":"","url":"https://api.github.com/users/mickdelaney","html_url":"https://github.com/mickdelaney","followers_url":"https://api.github.com/users/mickdelaney/followers","following_url":"https://api.github.com/users/mickdelaney/following{/other_user}","gists_url":"https://api.github.com/users/mickdelaney/gists{/gist_id}","starred_url":"https://api.github.com/users/mickdelaney/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mickdelaney/subscriptions","organizations_url":"https://api.github.com/users/mickdelaney/orgs","repos_url":"https://api.github.com/users/mickdelaney/repos","events_url":"https://api.github.com/users/mickdelaney/events{/privacy}","received_events_url":"https://api.github.com/users/mickdelaney/received_events","type":"User","site_admin":false},"created_at":"2015-09-10T18:21:52Z","updated_at":"2015-09-10T18:21:52Z","author_association":"NONE","body":"Use the scores in the application individually, rather than relying on a single score. Or parsing the explanation (which is huge obviously). \n\nDoes that make sense ??\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/139337135","html_url":"https://github.com/elastic/elasticsearch/issues/13469#issuecomment-139337135","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13469","id":139337135,"node_id":"MDEyOklzc3VlQ29tbWVudDEzOTMzNzEzNQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2015-09-10T18:32:35Z","updated_at":"2015-09-10T18:32:35Z","author_association":"CONTRIBUTOR","body":"> Use the scores in the application individually, rather than relying on a single score. Or parsing the explanation (which is huge obviously).\n> \n> Does that make sense ??\n\nSome sense, yeah. The trouble with using the scores individually is that the result ordering and cutoff will still be based on the overall score. But I see how you could flavor the individual results. Like put a little \"closest!\" marker or the one with the highest geographic score or something. The thing is that you might not get the actual \"closest\" result back because it might score lower for other reasons. Then again that could be fine for your use case.\n\nYou can work around not having this by implementing the function score as a script. Everything but random score should be pretty doable.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/139491672","html_url":"https://github.com/elastic/elasticsearch/issues/13469#issuecomment-139491672","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13469","id":139491672,"node_id":"MDEyOklzc3VlQ29tbWVudDEzOTQ5MTY3Mg==","user":{"login":"mausch","id":95194,"node_id":"MDQ6VXNlcjk1MTk0","avatar_url":"https://avatars1.githubusercontent.com/u/95194?v=4","gravatar_id":"","url":"https://api.github.com/users/mausch","html_url":"https://github.com/mausch","followers_url":"https://api.github.com/users/mausch/followers","following_url":"https://api.github.com/users/mausch/following{/other_user}","gists_url":"https://api.github.com/users/mausch/gists{/gist_id}","starred_url":"https://api.github.com/users/mausch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mausch/subscriptions","organizations_url":"https://api.github.com/users/mausch/orgs","repos_url":"https://api.github.com/users/mausch/repos","events_url":"https://api.github.com/users/mausch/events{/privacy}","received_events_url":"https://api.github.com/users/mausch/received_events","type":"User","site_admin":false},"created_at":"2015-09-11T08:54:58Z","updated_at":"2015-09-11T08:54:58Z","author_association":"NONE","body":"> You can work around not having this by implementing the function score as a script. Everything but random score should be pretty doable.\n\nYep, but that wouldn't give us access to built-in functions (e.g. a [decay function](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html#function-decay)). We'd have to avoid all these nice built-in functions and reimplement them as scripts instead (which is slower, clunkier, etc). That's why I also suggested being able to access built-in functions from scripts as an alternative.\n\nThe main use case for this is to expose individual score components to the end user. At the moment if you have a complex scoring mechanism with lots of functions, the end user doesn't understand why results rank the way the rank. Sometimes this is ok or the user shouldn't have to care (e.g. Google) but otherwise it's useful to aid the user in making a decision on each result. Combining scores from different functions is sometimes highly personal and you can't have a one-size-fits-all overall score so the user has to be able to see into the otherwise black box.\n\nAnother use case we're considering is automating the relevance tuning to some degree.\n\nLastly it would be really useful for business analytics, to understand how users behave, then mine that data, analyse it, etc.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/139532833","html_url":"https://github.com/elastic/elasticsearch/issues/13469#issuecomment-139532833","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13469","id":139532833,"node_id":"MDEyOklzc3VlQ29tbWVudDEzOTUzMjgzMw==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2015-09-11T12:25:22Z","updated_at":"2015-09-11T12:25:22Z","author_association":"CONTRIBUTOR","body":"> Yep, but that wouldn't give us access to built-in functions (e.g. a decay function). We'd have to avoid all these nice built-in functions and reimplement them as scripts instead (which is slower, clunkier, etc). That's why I also suggested being able to access built-in functions from scripts as an alternative.\n\nActually what I meant was that you could absolutely reimplement the decay functions as scripts. If you used expression scripts they should perform quite well. On par with the native functions. But implementing them is a pain so this is really just a workaround. [Here](https://en.wikipedia.org/wiki/Special:Search/prefer-recent:.5,10_stuff?cirrusDumpQuery) is an example reimplementing one of the functions to add more features, in this case it does exponential decay but only to 50% of the score.\n\nI think I understand your use case. Would it be fair to sum it up as an easier to parse and smaller explain output?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/139537186","html_url":"https://github.com/elastic/elasticsearch/issues/13469#issuecomment-139537186","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13469","id":139537186,"node_id":"MDEyOklzc3VlQ29tbWVudDEzOTUzNzE4Ng==","user":{"login":"mausch","id":95194,"node_id":"MDQ6VXNlcjk1MTk0","avatar_url":"https://avatars1.githubusercontent.com/u/95194?v=4","gravatar_id":"","url":"https://api.github.com/users/mausch","html_url":"https://github.com/mausch","followers_url":"https://api.github.com/users/mausch/followers","following_url":"https://api.github.com/users/mausch/following{/other_user}","gists_url":"https://api.github.com/users/mausch/gists{/gist_id}","starred_url":"https://api.github.com/users/mausch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mausch/subscriptions","organizations_url":"https://api.github.com/users/mausch/orgs","repos_url":"https://api.github.com/users/mausch/repos","events_url":"https://api.github.com/users/mausch/events{/privacy}","received_events_url":"https://api.github.com/users/mausch/received_events","type":"User","site_admin":false},"created_at":"2015-09-11T12:45:40Z","updated_at":"2015-09-11T12:45:40Z","author_association":"NONE","body":"> I think I understand your use case. Would it be fair to sum it up as an easier to parse and smaller explain output?\n\nTechnically, yes. The simplest way really is to be able to expose this as pseudo-fields, just like [Solr has been doing for quite some time now](http://wiki.apache.org/solr/CommonQueryParameters#functions).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/139548516","html_url":"https://github.com/elastic/elasticsearch/issues/13469#issuecomment-139548516","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13469","id":139548516,"node_id":"MDEyOklzc3VlQ29tbWVudDEzOTU0ODUxNg==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2015-09-11T13:39:24Z","updated_at":"2015-09-11T13:39:24Z","author_association":"CONTRIBUTOR","body":"I think I'm sold. I had a voice conversation with @brwe and @colings86 about this and we came to the conclusion that:\n1. This is reasonably easy to do.\n2. It would have been useful for @brwe to have had in the past - in particular when building presentations about how the scores are built.\n3. Its totally possible to build this and misinterpret the results.\n4. In many many cases you don't want to return these results to the user. For example if you want to show a user the result that is closest to them you would want the distance from their location without any exponential decay applied. In those cases this would be trappy.\n5. Its possible that users may think that these values are cached between the search and fetch phase. They wouldn't be. It'd be more trouble than its worth.\n\nSo I think this is worth doing but we'll have to make sure there is a big warning. I hate those but its wroth it I think.\n\nI'm marking this as low hanging fruit because it should be reasonably simple but I don't know how its ranked relative to other things. So its probably a good thing for a new contributor to pick up.\n\nPing @clintongormley to check all this - he'll have opinions that might differ from mine and he gets to make the final call.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/139551250","html_url":"https://github.com/elastic/elasticsearch/issues/13469#issuecomment-139551250","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13469","id":139551250,"node_id":"MDEyOklzc3VlQ29tbWVudDEzOTU1MTI1MA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2015-09-11T13:46:28Z","updated_at":"2015-09-11T13:46:28Z","author_association":"CONTRIBUTOR","body":"I should point out that this might be useful to build [radar charts](https://en.wikipedia.org/wiki/Radar_chart) describing search scores. Which are pretty.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/141682141","html_url":"https://github.com/elastic/elasticsearch/issues/13469#issuecomment-141682141","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13469","id":141682141,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MTY4MjE0MQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-09-19T15:44:20Z","updated_at":"2015-09-19T15:44:20Z","author_association":"CONTRIBUTOR","body":"Is perhaps a simpler alternative just to provide convenience functions that implement gauss/exp/linear decay for use in scripts? Then this could be done easily with script fields.\n\nI'd be interested to see how the above suggestions would be exposed at the API level\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/173161198","html_url":"https://github.com/elastic/elasticsearch/issues/13469#issuecomment-173161198","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13469","id":173161198,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzE2MTE5OA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-01-20T10:21:24Z","updated_at":"2016-01-20T10:21:24Z","author_association":"CONTRIBUTOR","body":"Thinking about this issue some more...\n\nThe original request (to store the results of scripts in the function score to return them with each hit) won't work.  We'd have to cache these results on each shard during the search phase to later be returned with fetch phase, or pass back all of these results to the coordinating node during the search phase.  Horribly complicated, lots of overhead.\n\nThe alternative is to rerun these scripts during the fetch phase for just the documents being fetched.  This wouldn't be possible without rerunning the query itself, as these scripts can have access to the `_score`, which depends on the sub-clause of the query where the script is executed. Plus, think that these scripts may be executed within a highly nested set of bool clauses, or within a nested or has_child query - what would be the structure for returning these values?  The overhead of rerunning the query and returning this big structure would be high, and it is already implemented as the explain API.\n\nThe last alternative is to calculate values as script fields, which you can do today (although you don't have access to the `_score`, or the context of nested queries etc).  While less flexible, this is more efficient because you don't rerun the query, you don't cache results on the shard, and you just have a simple list of keys and values, rather than the massive structure required to support something like explain.\n\nAll of the convenience functions in function score are documented and can be reimplemented pretty easily in raw scripts.  I am not in favour of adding the full JSON support that we have in function score for script_fields. The only thing I would consider doing is providing predefined functions (eg gauss_decay) in a script language which package up the calculations.\n\nPerhaps that is something we can look at doing with the new scripting language that we are adding (https://github.com/elastic/elasticsearch/issues/13084).  @jdconrad what's your take on doing this?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/173181386","html_url":"https://github.com/elastic/elasticsearch/issues/13469#issuecomment-173181386","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13469","id":173181386,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzE4MTM4Ng==","user":{"login":"mausch","id":95194,"node_id":"MDQ6VXNlcjk1MTk0","avatar_url":"https://avatars1.githubusercontent.com/u/95194?v=4","gravatar_id":"","url":"https://api.github.com/users/mausch","html_url":"https://github.com/mausch","followers_url":"https://api.github.com/users/mausch/followers","following_url":"https://api.github.com/users/mausch/following{/other_user}","gists_url":"https://api.github.com/users/mausch/gists{/gist_id}","starred_url":"https://api.github.com/users/mausch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mausch/subscriptions","organizations_url":"https://api.github.com/users/mausch/orgs","repos_url":"https://api.github.com/users/mausch/repos","events_url":"https://api.github.com/users/mausch/events{/privacy}","received_events_url":"https://api.github.com/users/mausch/received_events","type":"User","site_admin":false},"created_at":"2016-01-20T11:48:52Z","updated_at":"2016-01-20T11:48:52Z","author_association":"NONE","body":"Thanks for the analysis @clintongormley . \n\nI agree that caching the results from the function query would be complicated to implement (though from the point of view of the client it would be the best option). It would also probably require adding a name to each function query that the client wants to fetch as a pseudo-field.\n\nI don't mind the performance hit of re-running the function query as a pseudo-field (this is what Solr does). In terms of Elasticsearch this means making the function query available in a `script_field`. As you say it would be quite easy to make the built-in functions available in scripts.\n\nHowever from the point of view of the client code, this would mean having to generate both the JSON for a function query, e.g.:\n\n``` json\n\"linear\": {\n  \"some_field\": {\n    \"scale\": \"10\",\n    \"offset\": \"11\",\n    \"origin\": \"12\"\n  }\n}\n```\n\nand for the target scripting language, e.g. in Groovy this could be something like:\n\n``` groovy\nlinear('some_field', [scale: 10, offset: 11, origin: 12])\n```\n\nThat's why I suggested to support JSON in `script_fields`, because it would be the exact same JSON for `function_score` and for `script_fields`. Plus, JSON is much easier to generate than Groovy.\n\nI think it would be perfect if we could access any function query (including any custom function registered from a plugin) like this.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/372784790","html_url":"https://github.com/elastic/elasticsearch/issues/13469#issuecomment-372784790","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13469","id":372784790,"node_id":"MDEyOklzc3VlQ29tbWVudDM3Mjc4NDc5MA==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2018-03-13T19:12:15Z","updated_at":"2018-03-13T19:12:15Z","author_association":"CONTRIBUTOR","body":"Closing this as function_score_query is going to be changed significantly.","performed_via_github_app":null}]