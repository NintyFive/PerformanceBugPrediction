[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/267598387","html_url":"https://github.com/elastic/elasticsearch/issues/22177#issuecomment-267598387","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22177","id":267598387,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NzU5ODM4Nw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-12-16T13:53:12Z","updated_at":"2016-12-16T13:53:12Z","author_association":"CONTRIBUTOR","body":"@jdconrad any thoughts?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/267648085","html_url":"https://github.com/elastic/elasticsearch/issues/22177#issuecomment-267648085","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22177","id":267648085,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NzY0ODA4NQ==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2016-12-16T17:26:38Z","updated_at":"2016-12-16T17:37:30Z","author_association":"CONTRIBUTOR","body":"A couple of quick notes:\r\n\r\nEdit: Oops!  I just realized that BitSet is already part of our whitelist, so I'm editing my comment to make sense.\r\n\r\nOverloading has been supported since our initial release of painless in 5.0, but only by arity, not by signature.  We decided early on in development to go with arity overloading (meaning methods with the same name must have a different number of arguments) because it turns out it's really difficult to determine method overloading at runtime without at least taking a significant performance hit.\r\n\r\nI'll see if I can figure out why we went with valueOf(long[]) instead of valueOf(byte[]).  Maybe this is something that should be changed.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/268771935","html_url":"https://github.com/elastic/elasticsearch/issues/22177#issuecomment-268771935","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22177","id":268771935,"node_id":"MDEyOklzc3VlQ29tbWVudDI2ODc3MTkzNQ==","user":{"login":"umnick84","id":6084490,"node_id":"MDQ6VXNlcjYwODQ0OTA=","avatar_url":"https://avatars1.githubusercontent.com/u/6084490?v=4","gravatar_id":"","url":"https://api.github.com/users/umnick84","html_url":"https://github.com/umnick84","followers_url":"https://api.github.com/users/umnick84/followers","following_url":"https://api.github.com/users/umnick84/following{/other_user}","gists_url":"https://api.github.com/users/umnick84/gists{/gist_id}","starred_url":"https://api.github.com/users/umnick84/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/umnick84/subscriptions","organizations_url":"https://api.github.com/users/umnick84/orgs","repos_url":"https://api.github.com/users/umnick84/repos","events_url":"https://api.github.com/users/umnick84/events{/privacy}","received_events_url":"https://api.github.com/users/umnick84/received_events","type":"User","site_admin":false},"created_at":"2016-12-22T10:33:32Z","updated_at":"2016-12-22T10:33:32Z","author_association":"NONE","body":"Thanks for that!\r\nMeanwhile I prepared workaround with custom java plugin implementation. It works fine. However I cannot compare its performance with native painless code. In documentation you said that painless is really fast. Not sure if I can use groovy script for that (as far as I remember it could not access BitSet class at all so I gave up after a while).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/268833732","html_url":"https://github.com/elastic/elasticsearch/issues/22177#issuecomment-268833732","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22177","id":268833732,"node_id":"MDEyOklzc3VlQ29tbWVudDI2ODgzMzczMg==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2016-12-22T16:18:18Z","updated_at":"2016-12-22T16:18:18Z","author_association":"CONTRIBUTOR","body":"Groovy has been deprecated in 5.0 and is removed in 6.0, so it's not really an option anymore just in case you were still looking into that.\r\n\r\nOn a different note, after a bit of investigation, we went with long[] for performance reasons, but this is place where having byte[] also would be good, so I'll evaluate what our options are here to see if we can give you what you need.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/277457591","html_url":"https://github.com/elastic/elasticsearch/issues/22177#issuecomment-277457591","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22177","id":277457591,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ1NzU5MQ==","user":{"login":"nezda","id":179091,"node_id":"MDQ6VXNlcjE3OTA5MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/179091?v=4","gravatar_id":"","url":"https://api.github.com/users/nezda","html_url":"https://github.com/nezda","followers_url":"https://api.github.com/users/nezda/followers","following_url":"https://api.github.com/users/nezda/following{/other_user}","gists_url":"https://api.github.com/users/nezda/gists{/gist_id}","starred_url":"https://api.github.com/users/nezda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nezda/subscriptions","organizations_url":"https://api.github.com/users/nezda/orgs","repos_url":"https://api.github.com/users/nezda/repos","events_url":"https://api.github.com/users/nezda/events{/privacy}","received_events_url":"https://api.github.com/users/nezda/received_events","type":"User","site_admin":false},"created_at":"2017-02-04T16:33:41Z","updated_at":"2017-02-04T16:33:41Z","author_association":"NONE","body":"I got tripped up by `Integer.valueOf(String)` not working (seems only the `int` form works so I used `Integer.parsInt(String)`) - was trying to support input from either ints or string sorta like JavaScript.  Guess I can `Integer.valueOf(arg.toString())`...","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/277856654","html_url":"https://github.com/elastic/elasticsearch/issues/22177#issuecomment-277856654","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22177","id":277856654,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Nzg1NjY1NA==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2017-02-07T00:09:43Z","updated_at":"2017-02-07T00:09:43Z","author_association":"CONTRIBUTOR","body":"@nezda -- Here is the published Painless API. (https://www.elastic.co/guide/en/elasticsearch/reference/master/painless-api-reference.html)\r\nPlease see the reasoning below for why some expected methods may not be defined.\r\n\r\n@s1monw I'm not sure I consider this a bug since we claim to support arity overloading, it was a design decision made so method look up (especially for runtime performance) would be fast.  Otherwise, we'd have to write our own algorithm for figuring out which method is closest to the passed in arguments which is both very difficult and bad for performance.  This means we did have to make decisions around what methods were available that had the same arity within a separate class.  I think an appropriate solution to this might be to alias some of the methods that share a name and arity to simply have a different name.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/347910281","html_url":"https://github.com/elastic/elasticsearch/issues/22177#issuecomment-347910281","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22177","id":347910281,"node_id":"MDEyOklzc3VlQ29tbWVudDM0NzkxMDI4MQ==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2017-11-29T16:11:58Z","updated_at":"2017-11-29T16:12:16Z","author_association":"CONTRIBUTOR","body":"This is not a bug.  Painless uses arity overloading, but it's very unlikely we will ever support full signature overloading.  Closing.","performed_via_github_app":null}]