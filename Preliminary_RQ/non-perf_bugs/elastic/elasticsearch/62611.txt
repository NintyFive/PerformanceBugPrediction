{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/62611","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/62611/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/62611/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/62611/events","html_url":"https://github.com/elastic/elasticsearch/issues/62611","id":704231455,"node_id":"MDU6SXNzdWU3MDQyMzE0NTU=","number":62611,"title":"Data streams YAML tests fail with unexpected warning header","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"labels":[{"id":1915711992,"node_id":"MDU6TGFiZWwxOTE1NzExOTky","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Data%20streams","name":":Core/Features/Data streams","color":"0e8a16","default":false,"description":""},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"},{"id":1967496097,"node_id":"MDU6TGFiZWwxOTY3NDk2MDk3","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Core/Features","name":"Team:Core/Features","color":"fef2c0","default":false,"description":"Meta label for core/features team"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-09-18T09:28:36Z","updated_at":"2020-09-18T11:13:55Z","closed_at":"2020-09-18T11:13:54Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Build scan**: https://gradle-enterprise.elastic.co/s/lh3h7teyduuh6/console-log?task=:x-pack:plugin:yamlRestTest\r\n\r\n**Repro line**: `./gradlew ':x-pack:plugin:yamlRestTest' --tests \"org.elasticsearch.xpack.test.rest.XPackRestIT.test {p0=security/authz/50_data_streams/Test that requests not supporting data streams do not include data streams among authorized indices}\" -Dtests.seed=B2634BE04A46C9AA -Dtests.security.manager=true -Dtests.locale=es-ES -Dtests.timezone=US/Michigan -Druntime.java=11 -Dtests.rest.blacklist=getting_started/10_monitor_cluster_health/*`\r\n\r\n**Reproduces locally?**: Yes\r\n\r\n**Applicable branches**: `master`, `7.9` and `7.x`\r\n\r\n**Failure history**: A [few failures](https://build-stats.elastic.co/app/kibana#/discover?_g=(refreshInterval:(pause:!t,value:0),time:(from:now-7d,mode:quick,to:now))&_a=(columns:!(build.branch),index:b646ed00-7efc-11e8-bf69-63c8ef516157,interval:auto,query:(language:lucene,query:%2250_data_streams%22),sort:!(process.time-start,desc))) over the last week or so.\r\n\r\n**Failure excerpt**:\r\n\r\n```\r\norg.elasticsearch.xpack.test.rest.XPackRestIT > test {p0=security/authz/50_data_streams/Test that requests not supporting data streams do not include data streams among authorized indices} FAILED\r\n    java.lang.AssertionError: Failure at [security/authz/50_data_streams:63]: got unexpected warning header [\r\n    \t299 Elasticsearch-8.0.0-SNAPSHOT-2ec7260e2a2fe89eeae49e8ba5cf329e7798aedd \"index template [my-template1] has index patterns [s*, easy-data-stream1, create-doc-data-stream1, write-data-stream1] matching patterns from existing older templates [global] with patterns (global => [*]); this template [my-template1] will take precedence during new index creation\"\r\n    ]\r\n        at __randomizedtesting.SeedInfo.seed([B2634BE04A46C9AA:3A37743AE4BAA452]:0)\r\n        at org.elasticsearch.test.rest.yaml.ESClientYamlSuiteTestCase.executeSection(ESClientYamlSuiteTestCase.java:414)\r\n        at org.elasticsearch.test.rest.yaml.ESClientYamlSuiteTestCase.test(ESClientYamlSuiteTestCase.java:382)\r\n        at jdk.internal.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)\r\n        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1758)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:946)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:982)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:996)\r\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n        at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n        at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n        at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n        at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n        at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:375)\r\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:824)\r\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:475)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:955)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:840)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:891)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:902)\r\n        at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n        at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n        at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n        at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n        at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n        at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n        at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n        at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:375)\r\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl.lambda$forkTimeoutingTask$0(ThreadLeakControl.java:831)\r\n        at java.base/java.lang.Thread.run(Thread.java:834)\r\n\r\n        Caused by:\r\n        java.lang.AssertionError: got unexpected warning header [\r\n        \t299 Elasticsearch-8.0.0-SNAPSHOT-2ec7260e2a2fe89eeae49e8ba5cf329e7798aedd \"index template [my-template1] has index patterns [s*, easy-data-stream1, create-doc-data-stream1, write-data-stream1] matching patterns from existing older templates [global] with patterns (global => [*]); this template [my-template1] will take precedence during new index creation\"\r\n        ]\r\n            at org.junit.Assert.fail(Assert.java:88)\r\n            at org.elasticsearch.test.rest.yaml.section.DoSection.checkWarningHeaders(DoSection.java:356)\r\n            at org.elasticsearch.test.rest.yaml.section.DoSection.execute(DoSection.java:292)\r\n            at org.elasticsearch.test.rest.yaml.ESClientYamlSuiteTestCase.executeSection(ESClientYamlSuiteTestCase.java:407)\r\n            ... 37 more\r\nREPRODUCE WITH: ./gradlew ':x-pack:plugin:yamlRestTest' --tests \"org.elasticsearch.xpack.test.rest.XPackRestIT.test {p0=security/authz/50_data_streams/Test that requests not supporting data streams do not include data streams among authorized indices}\" -Dtests.seed=B2634BE04A46C9AA -Dtests.security.manager=true -Dtests.locale=es-ES -Dtests.timezone=US/Michigan -Druntime.java=11 -Dtests.rest.blacklist=getting_started/10_monitor_cluster_health/*\r\n\r\n```\r\n","closed_by":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"performed_via_github_app":null}