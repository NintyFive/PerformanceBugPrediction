{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/31389","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31389/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31389/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31389/events","html_url":"https://github.com/elastic/elasticsearch/issues/31389","id":333212477,"node_id":"MDU6SXNzdWUzMzMyMTI0Nzc=","number":31389,"title":"Tool to remove corrupted parts of corrupt shards","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"labels":[{"id":151364374,"node_id":"MDU6TGFiZWwxNTEzNjQzNzQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Store","name":":Distributed/Store","color":"0e8a16","default":false,"description":"Issues around managing unopened Lucene indices. If it touches Store.java, this is a likely label."},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"},{"id":962378555,"node_id":"MDU6TGFiZWw5NjIzNzg1NTU=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v6.5.0","name":"v6.5.0","color":"Dddddd","default":false,"description":""},{"id":1223177445,"node_id":"MDU6TGFiZWwxMjIzMTc3NDQ1","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v7.0.0-beta1","name":"v7.0.0-beta1","color":"dddddd","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2018-06-18T10:24:18Z","updated_at":"2019-02-07T10:14:18Z","closed_at":"2019-01-07T13:29:31Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Today, if we detect shard corruption then we mark the store as corrupt and refuse to open it again. If there are no replicas then [you might be able to use Lucene’s CheckIndex to remove the corrupted segments](https://www.elastic.co/blog/found-dive-into-elasticsearch-storage#fixing-problematic-shards), although this does not remove the corruption marker, requires knowledge of our filesystem layout, and might be tricky to do in a containerised or heavily automated environment. The only way forward via the API is to [force the allocation of an empty primary](https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-reroute.html#_forced_allocation_on_unrecoverable_errors) which drops all the data in the shard. We have an `index.shard.check_on_startup: fix` setting but this is suboptimal for a couple of reasons:\r\n\r\n- it’s index-wide and requires closing and verifying the whole index.\r\n- it has no effect on shards that have a corruption marker, because the corruption marker is checked before this option takes effect.\r\n\r\n(it also does nothing in versions 6.0 and above, but that's another story)\r\n\r\nThe Right Way™ to recover a corrupted shard is certainly to fail it and recover another copy from one of its replicas, assuming such a thing exists, but we’ve seen a couple of cases recently where a user was running without replicas, e.g. to do a bulk load of data ([which we sorta suggest might be a good idea sometimes](https://www.elastic.co/guide/en/elasticsearch/reference/6.3/indices-update-settings.html#bulk)) and hit some corruption that they'd have preferred to recover from with a bit of data loss rather than by restarting the load or allocating an empty primary. \r\n\r\nI propose removing the `fix` option of the `index.shard.check_on_startup` setting and instead adding another dangerous forced allocation command that can attempt to allocate a primary on top of a corrupt store by fixing the store and removing its corruption marker.\r\n\r\n/cc @tsouza @ywelsch re. [this forum thread](https://discuss.elastic.co/t/corrupted-elastic-index/135932)\r\n\r\n---\r\nActual points and opened questions:\r\n* Tool name: `elasticsearch-shard` with subcommand `remove-corrupted-segments` \r\n  * the main goal is to fix corrupted index - the action is destructive - therefore no any **fix** or **repair**, avoid **truncate** as it is far from Lucene terminology \r\n* Available options for `remove-corrupted-segments`:\r\n  *  `--index-name index_name` and `--shard-id shard_id` (**mandatory**)\r\n      * alternative: `-d path_to_index_folder` or `--dir path_to_index_folder`\r\n  * `--dry-run` do fast check without actual dropping of corrupted segments\r\n  * **no options** means `exorcise` - interactive keyboard confirmation is required\r\n* merge `elasticsearch-translog` into `elasticsearch-shard` \r\n  * `elasticsearch-translog` becomes `elasticsearch-shard truncate-translog`\r\n  * `elasticsearch-translog` has only `-d` option to specify folder - it would be nice to have `--index-name index_name` and `--shard-id shard_id` \r\n* Exit immediately if there is no corruption marker file \r\n  * for both cases \r\n* actually missed segments are unrecoverable case with `checkIndex` \r\n  * we leave it as unrecoverable case - with referring to [how to allocate an empty shard](https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html)\r\n  * there is a room for improvement - [LUCENE-6762](https://issues.apache.org/jira/browse/LUCENE-6762).\r\n","closed_by":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"performed_via_github_app":null}