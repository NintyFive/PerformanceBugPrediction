{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/255","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/255/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/255/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/255/events","html_url":"https://github.com/elastic/elasticsearch/issues/255","id":246293,"node_id":"MDU6SXNzdWUyNDYyOTM=","number":255,"title":"Server Weighting","user":{"login":"ppearcy","id":307414,"node_id":"MDQ6VXNlcjMwNzQxNA==","avatar_url":"https://avatars3.githubusercontent.com/u/307414?v=4","gravatar_id":"","url":"https://api.github.com/users/ppearcy","html_url":"https://github.com/ppearcy","followers_url":"https://api.github.com/users/ppearcy/followers","following_url":"https://api.github.com/users/ppearcy/following{/other_user}","gists_url":"https://api.github.com/users/ppearcy/gists{/gist_id}","starred_url":"https://api.github.com/users/ppearcy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppearcy/subscriptions","organizations_url":"https://api.github.com/users/ppearcy/orgs","repos_url":"https://api.github.com/users/ppearcy/repos","events_url":"https://api.github.com/users/ppearcy/events{/privacy}","received_events_url":"https://api.github.com/users/ppearcy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2010-07-13T16:59:00Z","updated_at":"2010-09-03T23:11:37Z","closed_at":"2010-09-03T23:11:37Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Ability to weight servers in the cluster to receive different loads. Our newer h/w always seems to be 2x faster than older h/w and we'd like it to receive that load when placed into the cluster.\n\nSo, this would allow a per server Weight field that would preferably be a float to allow for arbitrary scaling of load. \n\nFrom an implementation perspective, it seems that this can be accomplished via shard allocation. \n\nThanks!\n","closed_by":null,"performed_via_github_app":null}