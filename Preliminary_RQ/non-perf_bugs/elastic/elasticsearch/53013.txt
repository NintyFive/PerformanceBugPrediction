{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/53013","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53013/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53013/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53013/events","html_url":"https://github.com/elastic/elasticsearch/issues/53013","id":574063642,"node_id":"MDU6SXNzdWU1NzQwNjM2NDI=","number":53013,"title":"Indices with index.blocks.read_only set to true return OK (HTTP-200) on _bulk requests","user":{"login":"PereBal","id":8029176,"node_id":"MDQ6VXNlcjgwMjkxNzY=","avatar_url":"https://avatars3.githubusercontent.com/u/8029176?v=4","gravatar_id":"","url":"https://api.github.com/users/PereBal","html_url":"https://github.com/PereBal","followers_url":"https://api.github.com/users/PereBal/followers","following_url":"https://api.github.com/users/PereBal/following{/other_user}","gists_url":"https://api.github.com/users/PereBal/gists{/gist_id}","starred_url":"https://api.github.com/users/PereBal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PereBal/subscriptions","organizations_url":"https://api.github.com/users/PereBal/orgs","repos_url":"https://api.github.com/users/PereBal/repos","events_url":"https://api.github.com/users/PereBal/events{/privacy}","received_events_url":"https://api.github.com/users/PereBal/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-03-02T15:45:51Z","updated_at":"2020-03-03T15:03:17Z","closed_at":"2020-03-03T15:03:17Z","author_association":"NONE","active_lock_reason":null,"body":"### Bug report\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 7.5.1\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`): \r\nopenjdk version \"13.0.1\" 2019-10-15\r\nOpenJDK Runtime Environment AdoptOpenJDK (build 13.0.1+9)\r\nOpenJDK 64-Bit Server VM AdoptOpenJDK (build 13.0.1+9, mixed mode, sharing)\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): \r\nLinux deathstar 4.15.0-88-generic #88-Ubuntu SMP Tue Feb 11 20:11:34 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n**Current Behavior**:\r\nWhen `index.blocks.read_only` is set to true, `_bulk` requests to that index return `OK 200`\r\n\r\n**Expected Behavior**:\r\nElasticsearch returns `FORBIDDEN 403` when a `_bulk` request is performed against an index with `index.blocks.read_only` set to true as they do when `cluster.blocks.read_only` is set or what single document inserts do in both scenarios.\r\n\r\n**Steps to reproduce**:\r\n```\r\n# Start a cluster\r\n$ docker run --rm --hostname=$HOSTNAME --env 'node.name=deathstar' --env 'cluster.name=docker-cluster' --env 'discovery.type=single-node' --env 'xpack.security.enabled=true' --env 'ELASTIC_PASSWORD=demo' --net=host -it docker.elastic.co/elasticsearch/elasticsearch:7.5.1 &\r\n\r\n# Create an index\r\n$ curl -XPUT -su elastic:demo localhost:9200/demo | jq           \r\n{\r\n  \"acknowledged\": true,\r\n  \"shards_acknowledged\": true,\r\n  \"index\": \"demo\"\r\n}\r\n\r\n# Mark as read_only\r\n$ curl -XPUT -svu elastic:demo localhost:9200/demo/_settings -H'content-type:application/json' -d '{\"index.blocks.read_only\": true}' | jq                                                                 \r\n{\r\n  \"acknowledged\": true\r\n}\r\n```\r\n```\r\n# Make a _bulk request (buggy behavior)\r\n$ echo '{\"index\": {\"_index\": \"demo\"}}\\n{\"a\":1}' \\\r\n   | curl -XPUT -vsu elastic:demo localhost:9200/_bulk -H'content-type:application/x-ndjson' --data-binary @- | jq          \r\n...\r\n< HTTP/1.1 200 OK\r\n< content-type: application/json; charset=UTF-8\r\n< content-length: 235\r\n< \r\n{ [235 bytes data]\r\n* Connection #0 to host localhost left intact\r\n{\r\n  \"took\": 0,\r\n  \"errors\": true,\r\n  \"items\": [\r\n    {\r\n      \"index\": {\r\n        \"_index\": \"demo\",\r\n        \"_type\": \"_doc\",\r\n        \"_id\": \"EX_Lm3ABtEtWcnD73zAf\",\r\n        \"status\": 403,\r\n        \"error\": {\r\n          \"type\": \"cluster_block_exception\",\r\n          \"reason\": \"index [demo] blocked by: [FORBIDDEN/5/index read-only (api)];\"\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n```\r\n# Block writes cluster wide\r\n$ curl -XPUT -su elastic:demo localhost:9200/_cluster/settings -H'content-type:application/json' -d '{\"transient\": {\"cluster.blocks.read_only\": true}}' | jq \r\n{\r\n  \"acknowledged\": true,\r\n  \"persistent\": {},\r\n  \"transient\": {\r\n    \"cluster\": {\r\n      \"blocks\": {\r\n        \"read_only\": \"true\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n# Try to make a _bulk request ( expected behavior in this situation )\r\n$ echo '{\"index\": {\"_index\": \"demo\"}}\\n{\"a\":1}' \\\r\n   | curl -XPUT -vsu elastic:demo localhost:9200/_bulk -H'content-type:application/x-ndjson' --data-binary @- | jq                          \r\n...\r\n< HTTP/1.1 403 Forbidden\r\n< content-type: application/json; charset=UTF-8\r\n< content-length: 231\r\n< \r\n{ [231 bytes data]\r\n* Connection #0 to host localhost left intact\r\n{\r\n  \"error\": {\r\n    \"root_cause\": [\r\n      {\r\n        \"type\": \"cluster_block_exception\",\r\n        \"reason\": \"blocked by: [FORBIDDEN/6/cluster read-only (api)];\"\r\n      }\r\n    ],\r\n    \"type\": \"cluster_block_exception\",\r\n    \"reason\": \"blocked by: [FORBIDDEN/6/cluster read-only (api)];\"\r\n  },\r\n  \"status\": 403\r\n}\r\n\r\n```\r\n\r\n**Impact**: This kind of behaviors make managing elasticsearch unnecessarily harder. While it is tricky to decide which status code needs to be returned on a `_bulk` response, it does make sense to return the _worst_ possible one and between 200 and 403, 403 seems like a clear candidate.\r\n\r\n","closed_by":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"performed_via_github_app":null}