[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/377169428","html_url":"https://github.com/elastic/elasticsearch/issues/29290#issuecomment-377169428","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29290","id":377169428,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NzE2OTQyOA==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2018-03-29T08:55:45Z","updated_at":"2018-03-29T09:44:04Z","author_association":"MEMBER","body":"Hey @bra-fsn, thanks for opening this feature request. I agree that would be a big saver, but the update api can only update the document based on the unmodified _source.  A normalizer may have modified the original content, so doc values can't be used as replacement for the _source. Normalizers are not applied on numeric fields, but then you end up in cases where some doc value fields can be updated and some not, which makes it tricky. So this isn't something that we can support consistently in the near future with how handle the original content of a document today. \r\n\r\nI'll leave this open for others to chime in, but even without the above concern this is a high hanging fruit.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/377169499","html_url":"https://github.com/elastic/elasticsearch/issues/29290#issuecomment-377169499","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29290","id":377169499,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NzE2OTQ5OQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-03-29T08:56:01Z","updated_at":"2018-03-29T08:56:01Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/377169697","html_url":"https://github.com/elastic/elasticsearch/issues/29290#issuecomment-377169697","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29290","id":377169697,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NzE2OTY5Nw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-03-29T08:56:43Z","updated_at":"2018-03-29T08:56:43Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/377172127","html_url":"https://github.com/elastic/elasticsearch/issues/29290#issuecomment-377172127","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29290","id":377172127,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NzE3MjEyNw==","user":{"login":"bra-fsn","id":820331,"node_id":"MDQ6VXNlcjgyMDMzMQ==","avatar_url":"https://avatars2.githubusercontent.com/u/820331?v=4","gravatar_id":"","url":"https://api.github.com/users/bra-fsn","html_url":"https://github.com/bra-fsn","followers_url":"https://api.github.com/users/bra-fsn/followers","following_url":"https://api.github.com/users/bra-fsn/following{/other_user}","gists_url":"https://api.github.com/users/bra-fsn/gists{/gist_id}","starred_url":"https://api.github.com/users/bra-fsn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bra-fsn/subscriptions","organizations_url":"https://api.github.com/users/bra-fsn/orgs","repos_url":"https://api.github.com/users/bra-fsn/repos","events_url":"https://api.github.com/users/bra-fsn/events{/privacy}","received_events_url":"https://api.github.com/users/bra-fsn/received_events","type":"User","site_admin":false},"created_at":"2018-03-29T09:06:01Z","updated_at":"2018-03-29T09:57:20Z","author_association":"NONE","body":"@martijnvg: Could you please give further details about what you've described above?\r\nWhat this feature request is about is just the ability to access (current) doc value fields for the doc which is updated from painless.\r\nI may misunderstood what you wrote, but I don't want a _source replacement mechanism here, under which I mean that elastic magically and transparently fetching previous values from doc values if the _source doesn't have that info and filling them into the new version on update.\r\nI think you can leave this to the user.\r\n\r\nOr you are talking about consistency issues (I don't know elastic internals), maybe that the doc values are updated differently than the doc itself, and a race condition could occur if more updates happen in parallel? (so for example in a painless script it's now guaranteed that the _source doesn't change while the script runs, but you can't guarantee this on doc values, so it may be that two subsequent calls to doc['field'] in the same script instance may give different results?)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/377184512","html_url":"https://github.com/elastic/elasticsearch/issues/29290#issuecomment-377184512","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29290","id":377184512,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NzE4NDUxMg==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2018-03-29T09:52:36Z","updated_at":"2018-03-29T09:52:36Z","author_association":"MEMBER","body":"> I may be misunderstood what you wrote, but I don't want a _source replacement mechanism here, under which I mean that elastic magically and transparently fetching previous values from doc values if the _source doesn't have that info and filling them into the new version on update.\r\nI think you can leave this to the user.\r\n\r\nSure and the way you propose this it kind of already is up to the user by using the square bracket notation (`doc['counter']`) to fetch the values. But that is not what I meant with inconsistent.\r\n\r\n> Or you are talking about consistency issues (I don't know elastic internals), maybe that the doc values are updated differently than the doc itself, and a race condition could occur if more updates happen in parallel? (so for example in a painless script it's now guaranteed that the _source doesn't change while the script runs, but you can't guarantee this on doc values, so it may be that two subsequent calls to doc['field'] in the same script instance may give different results?)\r\n\r\nNo, that kind of problems will luckily not happen. If a normalizer is configured for a field and it changes the content of a doc values field at index time, then it is no longer the field value that was originally specified. Now if these doc values field are used to update a document, then this can lead to unexpected end result in the updated document.\r\n\r\nBut besides this, with #29264 in, reading from doc values fields is no longer possible, because the the _source may be read from the translog instead of the lucene index and doc values are only available in the Lucene index. Forcing to read from the Lucene index in order to support this, is a bad idea, because that forces a refresh.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/377199061","html_url":"https://github.com/elastic/elasticsearch/issues/29290#issuecomment-377199061","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29290","id":377199061,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NzE5OTA2MQ==","user":{"login":"bra-fsn","id":820331,"node_id":"MDQ6VXNlcjgyMDMzMQ==","avatar_url":"https://avatars2.githubusercontent.com/u/820331?v=4","gravatar_id":"","url":"https://api.github.com/users/bra-fsn","html_url":"https://github.com/bra-fsn","followers_url":"https://api.github.com/users/bra-fsn/followers","following_url":"https://api.github.com/users/bra-fsn/following{/other_user}","gists_url":"https://api.github.com/users/bra-fsn/gists{/gist_id}","starred_url":"https://api.github.com/users/bra-fsn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bra-fsn/subscriptions","organizations_url":"https://api.github.com/users/bra-fsn/orgs","repos_url":"https://api.github.com/users/bra-fsn/repos","events_url":"https://api.github.com/users/bra-fsn/events{/privacy}","received_events_url":"https://api.github.com/users/bra-fsn/received_events","type":"User","site_admin":false},"created_at":"2018-03-29T10:55:26Z","updated_at":"2018-03-29T10:55:26Z","author_association":"NONE","body":"> Sure and the way you propose this it kind of already is up to the user by using the square bracket notation (doc['counter']) to fetch the values. But that is not what I meant with inconsistent.\r\n\r\nYou mean this should work (at least in current GA versions)?\r\nI've got an\r\n`RequestError(400, u'illegal_argument_exception', {u'status': 400, u'error': {u'caused_by': {u'lang': u'painless', u'script': u'counter', u'script_stack': [u\"ctx._source.counter=doc['counter']+1;\\n\", u' ^---- HERE'], u'caused_by': {u'reason': None, u'type': u'null_pointer_exception'}, u'reason': u'runtime error', u'type': u'script_exception'}, u'root_cause': [{u'reason': u'[wdxwsRv][127.0.0.1:9300][indices:data/write/update[s]]', u'type': u'remote_transport_exception'}], u'type': u'illegal_argument_exception', u'reason': u'failed to execute script'}})`\r\nwhen I've tried it.\r\n\r\n> No, that kind of problems will luckily not happen. If a normalizer is configured for a field and it changes the content of a doc values field at index time, then it is no longer the field value that was originally specified. Now if these doc values field are used to update a document, then this can lead to unexpected end result in the updated document.\r\n\r\nI think it's OK. If somebody uses this, this should be evident. The same is true with every other doc values operation, which elastic current allows (like in the search path).\r\n\r\n> But besides this, with #29264 in, reading from doc values fields is no longer possible, because the the _source may be read from the translog instead of the lucene index and doc values are only available in the Lucene index. Forcing to read from the Lucene index in order to support this, is a bad idea, because that forces a refresh.\r\n\r\nFirst of all, this is great, we're suffering from slow scripted updates. Glad to hear that the previous optimization will work again (for updates at least).\r\nSecond, it's sad to hear that. I think elasticsearch has great possibilities in offering more support for doc values. It gives tremendous space savings compared to storing data in _source field.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/377205462","html_url":"https://github.com/elastic/elasticsearch/issues/29290#issuecomment-377205462","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29290","id":377205462,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NzIwNTQ2Mg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-03-29T11:25:43Z","updated_at":"2018-03-29T11:25:43Z","author_association":"CONTRIBUTOR","body":"For the record, having access to doc values would be a problem with #29264. cc @s1monw ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/377205889","html_url":"https://github.com/elastic/elasticsearch/issues/29290#issuecomment-377205889","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29290","id":377205889,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NzIwNTg4OQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-03-29T11:27:40Z","updated_at":"2018-03-29T11:27:40Z","author_association":"CONTRIBUTOR","body":"Woops sorry I read the history of this conversation too quickly.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/377206051","html_url":"https://github.com/elastic/elasticsearch/issues/29290#issuecomment-377206051","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29290","id":377206051,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NzIwNjA1MQ==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2018-03-29T11:28:18Z","updated_at":"2018-03-29T11:28:18Z","author_association":"MEMBER","body":"> You mean this should work (at least in current GA versions)?\r\n\r\nOh no :), but that is the same syntax we use in the other were scripts are allowed to access doc values.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/377210868","html_url":"https://github.com/elastic/elasticsearch/issues/29290#issuecomment-377210868","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29290","id":377210868,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NzIxMDg2OA==","user":{"login":"bra-fsn","id":820331,"node_id":"MDQ6VXNlcjgyMDMzMQ==","avatar_url":"https://avatars2.githubusercontent.com/u/820331?v=4","gravatar_id":"","url":"https://api.github.com/users/bra-fsn","html_url":"https://github.com/bra-fsn","followers_url":"https://api.github.com/users/bra-fsn/followers","following_url":"https://api.github.com/users/bra-fsn/following{/other_user}","gists_url":"https://api.github.com/users/bra-fsn/gists{/gist_id}","starred_url":"https://api.github.com/users/bra-fsn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bra-fsn/subscriptions","organizations_url":"https://api.github.com/users/bra-fsn/orgs","repos_url":"https://api.github.com/users/bra-fsn/repos","events_url":"https://api.github.com/users/bra-fsn/events{/privacy}","received_events_url":"https://api.github.com/users/bra-fsn/received_events","type":"User","site_admin":false},"created_at":"2018-03-29T11:51:07Z","updated_at":"2018-03-29T11:51:26Z","author_association":"NONE","body":"@jpountz : Thanks for joining. :)\r\nI think it would be a great addition to support this.\r\nWe store large numbers which take a lot of space thanks to the \"json as a text\" _source storage. Until this changes (by switching to BSON or something similar solution, which -I guess- still won't be as effective as the current doc values) tremendous space can be saved with DVs.\r\n\r\nAlso, it could help reindexing as well. For example we have some fields which we can't store in _source, because the DB would be so big, but we want to index the field.\r\nCurrently we store the value in a more effective database (plain old files :) ) and exclude the field from _source. This way if we have to reindex the index, we have to re-read the data from files.\r\nIf we could store the data in DVs (and use it in ways like it's described in this issue and in  #27374), we could forget about all of this mess, and just store the data in elastic.\r\nIt's suprisingly good in it, sometimes beating the filesystem itself!\r\nThat way when we have to do a reindex, we could just use the data in DVs and we could even use elastic's reindex API.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/377272704","html_url":"https://github.com/elastic/elasticsearch/issues/29290#issuecomment-377272704","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29290","id":377272704,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NzI3MjcwNA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-03-29T15:26:35Z","updated_at":"2018-03-29T15:26:35Z","author_association":"CONTRIBUTOR","body":"The fact that the update API doesn't allow to use doc values is so important to keep complexity reasonable that I'm reluctant to add such a feature. I know it's less convenient but it's always possible to implement the update logic on client-side by using versioning to make sure the right version of the document is being replaced.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/377356938","html_url":"https://github.com/elastic/elasticsearch/issues/29290#issuecomment-377356938","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29290","id":377356938,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NzM1NjkzOA==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2018-03-29T20:08:51Z","updated_at":"2018-03-29T20:08:51Z","author_association":"MEMBER","body":"We discussed in FixItDay and agreed we do not want to introduce the complexity this would entail. I'm going to close this issue since there is technical consensus that we should not make such a change.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/380043739","html_url":"https://github.com/elastic/elasticsearch/issues/29290#issuecomment-380043739","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29290","id":380043739,"node_id":"MDEyOklzc3VlQ29tbWVudDM4MDA0MzczOQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2018-04-10T09:57:44Z","updated_at":"2018-04-10T09:57:44Z","author_association":"MEMBER","body":"There's another aspect here that I didn't see mentioned but I think is important for future readers - allowing access to lucene features (like doc values) collides with reading from the translog but also prevents us from shifting to running the update scripts on the coordinating nodes (https://github.com/elastic/elasticsearch/issues/8369), either as a dedicated API or as part of bulk.","performed_via_github_app":null}]