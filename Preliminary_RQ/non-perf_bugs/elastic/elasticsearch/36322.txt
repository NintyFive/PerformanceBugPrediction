{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/36322","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36322/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36322/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36322/events","html_url":"https://github.com/elastic/elasticsearch/issues/36322","id":388334836,"node_id":"MDU6SXNzdWUzODgzMzQ4MzY=","number":36322,"title":"bucket_sort aggregation misplace the first bucket","user":{"login":"odespesse","id":6697617,"node_id":"MDQ6VXNlcjY2OTc2MTc=","avatar_url":"https://avatars2.githubusercontent.com/u/6697617?v=4","gravatar_id":"","url":"https://api.github.com/users/odespesse","html_url":"https://github.com/odespesse","followers_url":"https://api.github.com/users/odespesse/followers","following_url":"https://api.github.com/users/odespesse/following{/other_user}","gists_url":"https://api.github.com/users/odespesse/gists{/gist_id}","starred_url":"https://api.github.com/users/odespesse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/odespesse/subscriptions","organizations_url":"https://api.github.com/users/odespesse/orgs","repos_url":"https://api.github.com/users/odespesse/repos","events_url":"https://api.github.com/users/odespesse/events{/privacy}","received_events_url":"https://api.github.com/users/odespesse/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":92913858,"node_id":"MDU6TGFiZWw5MjkxMzg1OA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/good%20first%20issue","name":"good first issue","color":"07569b","default":true,"description":"low hanging fruit"},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2018-12-06T18:12:18Z","updated_at":"2019-01-09T16:01:40Z","closed_at":"2019-01-09T16:01:40Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version** 6.5.1\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** JVM 1.8.0_192\r\n\r\n**OS version** Debian 8.11\r\n\r\n**Description of the problem including expected versus actual behavior:**\r\n* Actual behavior :\r\n   When sorting an aggregation with a `bucket_sort` based on its `_count`, if `doc_count` are equals the item that should be in first position is the last one, other items are in the right order.\r\n* Expected :\r\n  Every items should be in the right order, including the first one.\r\n\r\n**Steps to reproduce:**\r\n\r\n1. Create a basic index :\r\n```\r\ncurl -XPUT 'http://localhost:9200/messages' -H 'Content-Type: application/json' -d '\r\n{\r\n  \"settings\": {\r\n    \"number_of_shards\": 1,\r\n    \"number_of_replicas\" : 0\r\n  },\r\n  \"mappings\": {\r\n    \"user\": {\r\n      \"properties\": {\r\n        \"rank\": {\r\n          \"type\": \"keyword\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}'\r\n```\r\n\r\n2. Insert one `user` with a different `rank` each time (from `a` to `d`) :\r\n\r\n* `user` with rank `a`\r\n```\r\ncurl -XPUT 'http://localhost:9200/messages/user/001' -H 'Content-Type: application/json' -d '\r\n{\r\n  \"@timestamp\": \"2018-12-06T01:00:00+01:00\",\r\n  \"rank\": \"a\"\r\n}'\r\n```\r\n\r\n* `user` with rank `b`\r\n```\r\ncurl -XPUT 'http://localhost:9200/messages/user/002' -H 'Content-Type: application/json' -d '\r\n{\r\n  \"@timestamp\": \"2018-12-06T01:00:00+01:00\",\r\n  \"rank\": \"b\"\r\n}'\r\n```\r\n\r\n* `user` with rank `c`\r\n```\r\ncurl -XPUT 'http://localhost:9200/messages/user/003' -H 'Content-Type: application/json' -d '\r\n{\r\n  \"@timestamp\": \"2018-12-06T01:00:00+01:00\",\r\n  \"rank\": \"c\"\r\n}'\r\n```\r\n\r\n* `user` with rank `d`\r\n```\r\ncurl -XPUT 'http://localhost:9200/messages/user/004' -H 'Content-Type: application/json' -d '\r\n{\r\n  \"@timestamp\": \"2018-12-06T01:00:00+01:00\",\r\n  \"rank\": \"d\"\r\n}'\r\n```\r\n\r\n3. Aggregate on the `rank` property and sort by `count` with a `bucket_sort` :\r\n\r\n```\r\ncurl -XGET 'http://localhost:9200/messages/_search?pretty=true' -H 'Content-Type: application/json' -d '\r\n    {\r\n      \"size\": 0,\r\n      \"aggregations\": {\r\n        \"top_by_color\": {\r\n          \"composite\": {\r\n            \"size\": 1000,\r\n            \"sources\": [\r\n              {\r\n                \"rank\": {\r\n                  \"terms\": {\r\n                    \"field\": \"rank\",\r\n                    \"missing_bucket\": true,\r\n                    \"order\": \"asc\"\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          },\r\n          \"aggregations\": {\r\n            \"top_bucket_sort\": {\r\n              \"bucket_sort\": {\r\n                \"sort\": [\r\n                  {\r\n                    \"_count\": {\r\n                      \"order\": \"asc\"\r\n                    }\r\n                  }\r\n                ],\r\n                \"size\": 1000\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }'\r\n```\r\n\r\nAggregation result is :\r\n```\r\n    {\r\n      \"took\": 1,\r\n      \"timed_out\": false,\r\n      \"_shards\": {\r\n        \"total\": 1,\r\n        \"successful\": 1,\r\n        \"skipped\": 0,\r\n        \"failed\": 0\r\n      },\r\n      \"hits\": {\r\n        \"total\": 4,\r\n        \"max_score\": 0,\r\n        \"hits\": [\r\n\r\n        ]\r\n      },\r\n      \"aggregations\": {\r\n        \"top_by_color\": {\r\n          \"after_key\": {\r\n            \"rank\": \"d\"\r\n          },\r\n          \"buckets\": [\r\n            {\r\n              \"key\": {\r\n                \"rank\": \"b\"\r\n              },\r\n              \"doc_count\": 1\r\n            },\r\n            {\r\n              \"key\": {\r\n                \"rank\": \"c\"\r\n              },\r\n              \"doc_count\": 1\r\n            },\r\n            {\r\n              \"key\": {\r\n                \"rank\": \"d\"\r\n              },\r\n              \"doc_count\": 1\r\n            },\r\n            {\r\n              \"key\": {\r\n                \"rank\": \"a\"\r\n              },\r\n              \"doc_count\": 1\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }\r\n```\r\n\r\nWe have ranks sorted has : b, c, d, **a** instead of **a**, b, c, d.\r\n\r\n","closed_by":{"login":"dimitris-athanasiou","id":9351617,"node_id":"MDQ6VXNlcjkzNTE2MTc=","avatar_url":"https://avatars3.githubusercontent.com/u/9351617?v=4","gravatar_id":"","url":"https://api.github.com/users/dimitris-athanasiou","html_url":"https://github.com/dimitris-athanasiou","followers_url":"https://api.github.com/users/dimitris-athanasiou/followers","following_url":"https://api.github.com/users/dimitris-athanasiou/following{/other_user}","gists_url":"https://api.github.com/users/dimitris-athanasiou/gists{/gist_id}","starred_url":"https://api.github.com/users/dimitris-athanasiou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dimitris-athanasiou/subscriptions","organizations_url":"https://api.github.com/users/dimitris-athanasiou/orgs","repos_url":"https://api.github.com/users/dimitris-athanasiou/repos","events_url":"https://api.github.com/users/dimitris-athanasiou/events{/privacy}","received_events_url":"https://api.github.com/users/dimitris-athanasiou/received_events","type":"User","site_admin":false},"performed_via_github_app":null}