[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/207349634","html_url":"https://github.com/elastic/elasticsearch/issues/17590#issuecomment-207349634","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17590","id":207349634,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNzM0OTYzNA==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2016-04-08T09:36:16Z","updated_at":"2016-04-08T09:36:16Z","author_association":"MEMBER","body":"We discussed this in FixItFriday and thought it could be quite a useful aggregation but we would want to implement it in a generic way (so it can be used to pivot on any aggregation rather than alway producing ranges). This will make the API possibly fairly tricky so will need some thinking about\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240347513","html_url":"https://github.com/elastic/elasticsearch/issues/17590#issuecomment-240347513","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17590","id":240347513,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDM0NzUxMw==","user":{"login":"phoenixgao","id":853338,"node_id":"MDQ6VXNlcjg1MzMzOA==","avatar_url":"https://avatars1.githubusercontent.com/u/853338?v=4","gravatar_id":"","url":"https://api.github.com/users/phoenixgao","html_url":"https://github.com/phoenixgao","followers_url":"https://api.github.com/users/phoenixgao/followers","following_url":"https://api.github.com/users/phoenixgao/following{/other_user}","gists_url":"https://api.github.com/users/phoenixgao/gists{/gist_id}","starred_url":"https://api.github.com/users/phoenixgao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phoenixgao/subscriptions","organizations_url":"https://api.github.com/users/phoenixgao/orgs","repos_url":"https://api.github.com/users/phoenixgao/repos","events_url":"https://api.github.com/users/phoenixgao/events{/privacy}","received_events_url":"https://api.github.com/users/phoenixgao/received_events","type":"User","site_admin":false},"created_at":"2016-08-17T08:30:31Z","updated_at":"2016-08-17T08:30:31Z","author_association":"NONE","body":"Any updates on this topic?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/249605336","html_url":"https://github.com/elastic/elasticsearch/issues/17590#issuecomment-249605336","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17590","id":249605336,"node_id":"MDEyOklzc3VlQ29tbWVudDI0OTYwNTMzNg==","user":{"login":"hisuwh","id":4470351,"node_id":"MDQ6VXNlcjQ0NzAzNTE=","avatar_url":"https://avatars0.githubusercontent.com/u/4470351?v=4","gravatar_id":"","url":"https://api.github.com/users/hisuwh","html_url":"https://github.com/hisuwh","followers_url":"https://api.github.com/users/hisuwh/followers","following_url":"https://api.github.com/users/hisuwh/following{/other_user}","gists_url":"https://api.github.com/users/hisuwh/gists{/gist_id}","starred_url":"https://api.github.com/users/hisuwh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hisuwh/subscriptions","organizations_url":"https://api.github.com/users/hisuwh/orgs","repos_url":"https://api.github.com/users/hisuwh/repos","events_url":"https://api.github.com/users/hisuwh/events{/privacy}","received_events_url":"https://api.github.com/users/hisuwh/received_events","type":"User","site_admin":false},"created_at":"2016-09-26T15:31:45Z","updated_at":"2016-09-26T15:31:45Z","author_association":"NONE","body":"What is happening with this?  I really need something like this\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/291314396","html_url":"https://github.com/elastic/elasticsearch/issues/17590#issuecomment-291314396","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17590","id":291314396,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MTMxNDM5Ng==","user":{"login":"yadnesh-aaxis","id":20115243,"node_id":"MDQ6VXNlcjIwMTE1MjQz","avatar_url":"https://avatars1.githubusercontent.com/u/20115243?v=4","gravatar_id":"","url":"https://api.github.com/users/yadnesh-aaxis","html_url":"https://github.com/yadnesh-aaxis","followers_url":"https://api.github.com/users/yadnesh-aaxis/followers","following_url":"https://api.github.com/users/yadnesh-aaxis/following{/other_user}","gists_url":"https://api.github.com/users/yadnesh-aaxis/gists{/gist_id}","starred_url":"https://api.github.com/users/yadnesh-aaxis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yadnesh-aaxis/subscriptions","organizations_url":"https://api.github.com/users/yadnesh-aaxis/orgs","repos_url":"https://api.github.com/users/yadnesh-aaxis/repos","events_url":"https://api.github.com/users/yadnesh-aaxis/events{/privacy}","received_events_url":"https://api.github.com/users/yadnesh-aaxis/received_events","type":"User","site_admin":false},"created_at":"2017-04-03T23:26:49Z","updated_at":"2017-04-03T23:26:49Z","author_association":"NONE","body":"We need this feature as well.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/373332839","html_url":"https://github.com/elastic/elasticsearch/issues/17590#issuecomment-373332839","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17590","id":373332839,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MzMzMjgzOQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2018-03-15T10:39:18Z","updated_at":"2018-03-15T10:42:35Z","author_association":"CONTRIBUTOR","body":">\"Which users have transactions totalling between 100 - 200, 200 - 300, etc.?\"\r\n\r\nIf I understand the requirement correctly the idea is to take the results of a `terms:user>sum:credit` agg tree and invert it into a `range:credit>terms:user` tree. I can see this works for the `sum` leaf but it sounds complex (for users and implementors) if we have other sibling or grandparent aggs to worry about as well.\r\nPutting aside the complexity, I worry about the accuracy issues in the example use case and question if we should encourage this style of reporting where data is fused unreliably at query time on high-cardinality keys and then fed into further reporting. Given a bank with many users (most of them do) then a query on an event-based transaction store to find high-spend individuals would yield only the top N users that can be carried back in one shard response. The true high-spend users may be under-valued or completely missing. A user making many small payments across many indices/shards may not appear in the final N users who more-than-likely consist of users making single large payments. \r\n\r\nCurrently our error-margin reporting on terms aggs only accounts for _numbers_ of documents - not the value of those documents. This financial error margin is unbounded. Building ever-higher aggregation constructs on shaky foundations is perhaps not a good idea. If we offer this feature perhaps it should only work for terms aggs where the reported error-bound for number of docs is zero?\r\nCompare this with an entity-centric index where data is fused at index time and each user has a single value and a regular histogram can group users into high-spend/low-spend ranges etc without accuracy concerns. Too much query-time fusion is a bad thing.\r\n\r\n@cwurm - closing because this was long-standing \"high hanging fruit\" in terms of implementation complexity and with the accuracy concerns this looks undesirable.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/373334022","html_url":"https://github.com/elastic/elasticsearch/issues/17590#issuecomment-373334022","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17590","id":373334022,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MzMzNDAyMg==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2018-03-15T10:43:45Z","updated_at":"2018-03-15T10:43:45Z","author_association":"CONTRIBUTOR","body":"@cwurm - closing because this was long-standing \"high hanging fruit\" in terms of implementation complexity and with the accuracy concerns this looks undesirable. We can always re-open if we decide to revisit this.","performed_via_github_app":null}]