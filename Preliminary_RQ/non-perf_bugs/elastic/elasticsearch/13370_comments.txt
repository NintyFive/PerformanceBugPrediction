[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/138213322","html_url":"https://github.com/elastic/elasticsearch/issues/13370#issuecomment-138213322","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13370","id":138213322,"node_id":"MDEyOklzc3VlQ29tbWVudDEzODIxMzMyMg==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2015-09-07T07:17:25Z","updated_at":"2015-09-07T07:17:25Z","author_association":"MEMBER","body":"Actually your python script does not return anything. When function_score API tries to access the value, it generates a NPE.\nI think we need to catch it properly in elasticsearch core code itself.\n\nWhat are you trying to achieve here? Could you illustrate your example with a more concrete use case?\nAlso, could you put here the full stack trace?\n\ncc @brwe Do you think we should detect that in elasticsearch core to avoid NPE if the language returns null. WDYT?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/138213323","html_url":"https://github.com/elastic/elasticsearch/issues/13370#issuecomment-138213323","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13370","id":138213323,"node_id":"MDEyOklzc3VlQ29tbWVudDEzODIxMzMyMw==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2015-09-07T07:17:25Z","updated_at":"2015-09-07T07:17:25Z","author_association":"MEMBER","body":"_From @pedrocunha on March 30, 2015 8:41_\n\nOk, some context. My cluster has currently around 1M docs which are used to search. We apply a bunch of filtering and in the end we use the script score to compute some business logic. The script is multi-line and written in groovy. Irrelevant whitespace and comments are then stripped, cached and then sent to ES as a dynamic script (which then ES caches it too). \n\nThis works quite well for us: response time is consistently 30-50ms~ despite the high search query demand.\n\nGroovy is not considered a sandboxed language anymore. So, in theory using Python could make our scripts bit more readable and shorter (if we don't take a performance hit) and that's why I was interested in giving it a try. \n\nDoes that give some real context in this case ?\n\n> Actually your python script does not return anything. When function_score API tries to access the value, it generates a NPE.\n\n```\ncurl -XPOST \"http://localhost:9200/index/model/_search\" -d'\n{\n  \"query\": {\n    \"function_score\": {\n      \"script_score\": {\n        \"script\": \"return 2\",\n        \"lang\": \"python\"\n      }\n    }\n  }\n}'\n```\n\nSpecifying `return` raises a python error:\n\n```\n[2015-03-30 09:32:42,076][DEBUG][action.search.type       ] [Belathauzer] [index][2], node[0AjBuVPwSWyjcJJAePpBOw], [P], s[STARTED]: Failed to execute [org.elasticsearch.action.search.SearchRequest@65c6eb62] lastShard [true]\norg.elasticsearch.search.SearchParseException: [index][2]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\n  \"query\": {\n    \"function_score\": {\n      \"script_score\": {\n        \"script\":\"return 2\",\n        \"lang\": \"python\"\n      }\n    }\n  }\n}\n]]\n    at org.elasticsearch.search.SearchService.parseSource(SearchService.java:721)\n    at org.elasticsearch.search.SearchService.createContext(SearchService.java:557)\n    at org.elasticsearch.search.SearchService.createAndPutContext(SearchService.java:529)\n    at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:291)\n    at org.elasticsearch.search.action.SearchServiceTransportAction$5.call(SearchServiceTransportAction.java:231)\n    at org.elasticsearch.search.action.SearchServiceTransportAction$5.call(SearchServiceTransportAction.java:228)\n    at org.elasticsearch.search.action.SearchServiceTransportAction$23.run(SearchServiceTransportAction.java:559)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: org.elasticsearch.index.query.QueryParsingException: [search_development] script_score the script could not be loaded\n    at org.elasticsearch.index.query.functionscore.script.ScriptScoreFunctionParser.parse(ScriptScoreFunctionParser.java:93)\n    at org.elasticsearch.index.query.functionscore.FunctionScoreQueryParser.parse(FunctionScoreQueryParser.java:133)\n    at org.elasticsearch.index.query.QueryParseContext.parseInnerQuery(QueryParseContext.java:302)\n    at org.elasticsearch.index.query.IndexQueryParserService.innerParse(IndexQueryParserService.java:382)\n    at org.elasticsearch.index.query.IndexQueryParserService.parse(IndexQueryParserService.java:281)\n    at org.elasticsearch.index.query.IndexQueryParserService.parse(IndexQueryParserService.java:276)\n    at org.elasticsearch.search.query.QueryParseElement.parse(QueryParseElement.java:33)\n    at org.elasticsearch.search.SearchService.parseSource(SearchService.java:705)\n    ... 9 more\nCaused by: SyntaxError: (\"'return' outside function\", ('<script>', 1, 0, ''))\n\n    at org.python.core.ParserFacade.fixParseError(ParserFacade.java:95)\n    at org.python.core.CompilerFacade.compile(CompilerFacade.java:36)\n    at org.python.core.Py.compile_flags(Py.java:1823)\n    at org.python.core.Py.compile_flags(Py.java:1828)\n    at org.python.util.PythonInterpreter.compile(PythonInterpreter.java:277)\n    at org.python.util.PythonInterpreter.compile(PythonInterpreter.java:272)\n    at org.python.util.PythonInterpreter.compile(PythonInterpreter.java:266)\n    at org.elasticsearch.script.python.PythonScriptEngineService.compile(PythonScriptEngineService.java:70)\n    at org.elasticsearch.script.ScriptService.compile(ScriptService.java:297)\n    at org.elasticsearch.script.ScriptService.search(ScriptService.java:429)\n    at org.elasticsearch.index.query.functionscore.script.ScriptScoreFunctionParser.parse(ScriptScoreFunctionParser.java:90)\n    ... 16 more\n```\n\nFull stack of the NullPointerException with the original code:\n\n```\n[2015-03-30 09:31:19,067][DEBUG][action.search.type       ] [Belathauzer] All shards failed for phase: [query]\norg.elasticsearch.search.query.QueryPhaseExecutionException: [index][4]: query[filtered(function score (ConstantScore(*:*),function=script[foo = 2; foo +2], params [null]))->cache(+_type:property +org.elasticsearch.index.search.nested.NonNestedDocsFilter@55c9b8e4)],from[0],size[10]: Query Failed [Failed to execute main query]\n    at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:163)\n    at org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:286)\n    at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:297)\n    at org.elasticsearch.search.action.SearchServiceTransportAction$5.call(SearchServiceTransportAction.java:231)\n    at org.elasticsearch.search.action.SearchServiceTransportAction$5.call(SearchServiceTransportAction.java:228)\n    at org.elasticsearch.search.action.SearchServiceTransportAction$23.run(SearchServiceTransportAction.java:559)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.NullPointerException\n    at org.elasticsearch.script.python.PythonScriptEngineService$PythonSearchScript.runAsDouble(PythonScriptEngineService.java:215)\n    at org.elasticsearch.common.lucene.search.function.ScriptScoreFunction.score(ScriptScoreFunction.java:100)\n    at org.elasticsearch.common.lucene.search.function.FunctionScoreQuery$FunctionFactorScorer.innerScore(FunctionScoreQuery.java:160)\n    at org.elasticsearch.common.lucene.search.function.CustomBoostFactorScorer$AnyNextDoc.score(CustomBoostFactorScorer.java:133)\n    at org.elasticsearch.common.lucene.search.function.CustomBoostFactorScorer.score(CustomBoostFactorScorer.java:71)\n    at org.apache.lucene.search.TopScoreDocCollector$OutOfOrderTopScoreDocCollector.collect(TopScoreDocCollector.java:140)\n    at org.apache.lucene.search.Weight$DefaultBulkScorer.scoreAll(Weight.java:193)\n    at org.apache.lucene.search.Weight$DefaultBulkScorer.score(Weight.java:163)\n    at org.apache.lucene.search.BulkScorer.score(BulkScorer.java:35)\n    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:621)\n    at org.elasticsearch.search.internal.ContextIndexSearcher.search(ContextIndexSearcher.java:191)\n    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:491)\n    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:448)\n    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:281)\n    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:269)\n    at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:157)\n    ... 8 more\n```\n\nSo a few things:\n- It would be great if we could have multi-line python scripts. Maybe specified as an array of strings which then have the right indentation in order to be parsed/eval correctly.\n- While it failed above with the return - note that removing the return (and making `script: \"2\"`) does make the function score work and apply 2 to every document - it would be great if we can make sure early `return`s work as expected.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/138213326","html_url":"https://github.com/elastic/elasticsearch/issues/13370#issuecomment-138213326","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13370","id":138213326,"node_id":"MDEyOklzc3VlQ29tbWVudDEzODIxMzMyNg==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2015-09-07T07:17:25Z","updated_at":"2015-09-07T07:17:25Z","author_association":"MEMBER","body":"_From @pedrocunha on April 7, 2015 10:32_\n\nAny new feedback on this? Thanks.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225886401","html_url":"https://github.com/elastic/elasticsearch/issues/13370#issuecomment-225886401","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13370","id":225886401,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTg4NjQwMQ==","user":{"login":"cwarny","id":2788526,"node_id":"MDQ6VXNlcjI3ODg1MjY=","avatar_url":"https://avatars2.githubusercontent.com/u/2788526?v=4","gravatar_id":"","url":"https://api.github.com/users/cwarny","html_url":"https://github.com/cwarny","followers_url":"https://api.github.com/users/cwarny/followers","following_url":"https://api.github.com/users/cwarny/following{/other_user}","gists_url":"https://api.github.com/users/cwarny/gists{/gist_id}","starred_url":"https://api.github.com/users/cwarny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cwarny/subscriptions","organizations_url":"https://api.github.com/users/cwarny/orgs","repos_url":"https://api.github.com/users/cwarny/repos","events_url":"https://api.github.com/users/cwarny/events{/privacy}","received_events_url":"https://api.github.com/users/cwarny/received_events","type":"User","site_admin":false},"created_at":"2016-06-14T13:49:12Z","updated_at":"2016-06-14T13:49:12Z","author_association":"NONE","body":"@dadoonet did you end up finding a workaround? Facing same problem\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225888356","html_url":"https://github.com/elastic/elasticsearch/issues/13370#issuecomment-225888356","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13370","id":225888356,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTg4ODM1Ng==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2016-06-14T13:55:46Z","updated_at":"2016-06-14T13:55:46Z","author_association":"MEMBER","body":"May be @pedrocunha did?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225893512","html_url":"https://github.com/elastic/elasticsearch/issues/13370#issuecomment-225893512","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13370","id":225893512,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTg5MzUxMg==","user":{"login":"pedrocunha","id":565707,"node_id":"MDQ6VXNlcjU2NTcwNw==","avatar_url":"https://avatars3.githubusercontent.com/u/565707?v=4","gravatar_id":"","url":"https://api.github.com/users/pedrocunha","html_url":"https://github.com/pedrocunha","followers_url":"https://api.github.com/users/pedrocunha/followers","following_url":"https://api.github.com/users/pedrocunha/following{/other_user}","gists_url":"https://api.github.com/users/pedrocunha/gists{/gist_id}","starred_url":"https://api.github.com/users/pedrocunha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pedrocunha/subscriptions","organizations_url":"https://api.github.com/users/pedrocunha/orgs","repos_url":"https://api.github.com/users/pedrocunha/repos","events_url":"https://api.github.com/users/pedrocunha/events{/privacy}","received_events_url":"https://api.github.com/users/pedrocunha/received_events","type":"User","site_admin":false},"created_at":"2016-06-14T14:11:36Z","updated_at":"2016-06-14T14:11:36Z","author_association":"NONE","body":"Workaround for me was staying in Groovy land unfortunately.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225894305","html_url":"https://github.com/elastic/elasticsearch/issues/13370#issuecomment-225894305","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13370","id":225894305,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTg5NDMwNQ==","user":{"login":"cwarny","id":2788526,"node_id":"MDQ6VXNlcjI3ODg1MjY=","avatar_url":"https://avatars2.githubusercontent.com/u/2788526?v=4","gravatar_id":"","url":"https://api.github.com/users/cwarny","html_url":"https://github.com/cwarny","followers_url":"https://api.github.com/users/cwarny/followers","following_url":"https://api.github.com/users/cwarny/following{/other_user}","gists_url":"https://api.github.com/users/cwarny/gists{/gist_id}","starred_url":"https://api.github.com/users/cwarny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cwarny/subscriptions","organizations_url":"https://api.github.com/users/cwarny/orgs","repos_url":"https://api.github.com/users/cwarny/repos","events_url":"https://api.github.com/users/cwarny/events{/privacy}","received_events_url":"https://api.github.com/users/cwarny/received_events","type":"User","site_admin":false},"created_at":"2016-06-14T14:14:18Z","updated_at":"2016-06-14T14:14:18Z","author_association":"NONE","body":"Ugh, OK, thanks. Seems like not being able to register multi-line Python scripts defeats the purpose of being able to use Python for ES scripting\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/295135572","html_url":"https://github.com/elastic/elasticsearch/issues/13370#issuecomment-295135572","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13370","id":295135572,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTEzNTU3Mg==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2017-04-19T07:20:58Z","updated_at":"2017-04-19T07:20:58Z","author_association":"MEMBER","body":"Python scripting has been removed in master (6.0).","performed_via_github_app":null}]