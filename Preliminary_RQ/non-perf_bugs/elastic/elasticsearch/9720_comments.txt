[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/74669710","html_url":"https://github.com/elastic/elasticsearch/issues/9720#issuecomment-74669710","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9720","id":74669710,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NjY5NzEw","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2015-02-17T13:48:08Z","updated_at":"2015-02-17T13:48:08Z","author_association":"CONTRIBUTOR","body":"Thanks for opening this.\nI discussed this with @brwe and she reminded me of https://github.com/elasticsearch/elasticsearch/pull/7850 which is in development and adds the ability for custom scripts to perform scoring. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/75080093","html_url":"https://github.com/elastic/elasticsearch/issues/9720#issuecomment-75080093","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9720","id":75080093,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MDgwMDkz","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2015-02-19T16:12:20Z","updated_at":"2015-02-19T16:12:20Z","author_association":"CONTRIBUTOR","body":"Having implemented this it is worth sharing some feedback on the quality from tests with real data.\nI opted to recreate your \"top countries for 'foo' \" scenario using a sample of 1m tweets where I looked at spoken language rather than country and \"android\" clients rather than \"foo\".\n\nHere are the top 5 languages tweeting with Android devices using the straight percentage score you wanted: \n\n<table><tr><th>Language code</th><th>Android-sourced tweets vs all Tweets</th><th>Percentage Score</th></tr><tr><td align='center'>ps</td><td align='center'>3/5</td><td>0.6</td></tr><tr><td align='center'>hi</td><td align='center'>285/544</td><td>0.52</td></tr><tr><td align='center'>si</td><td align='center'>5/10</td><td>0.5</td></tr><tr><td align='center'>ko</td><td align='center'>9646/20448</td><td>0.47</td></tr><tr><td align='center'>ne</td><td align='center'>65/138</td><td>0.47</td></tr></table>\n\nSome pretty obscure stuff in there, no?\nPashto, Nepalese and Slovene.\nIn many cases you would likely take a business decision to ignore terms with very low frequency.\n\nFor comparison, here are the top 5 results for the same query using the default significant_terms heuristic:\n\n<table><tr><th>Language code</th><th>Android-sourced tweets vs all Tweets</th><th>Percentage Score</th></tr><tr><td align='center'>es</td><td align='center'>36821/112667</td><td>0.32</td></tr><tr><td align='center'>in</td><td align='center'>16041/42639</td><td>0.37</td></tr><tr><td align='center'>ko</td><td align='center'>9646/20448</td><td>0.47</td></tr><tr><td align='center'>pt</td><td align='center'>19847/60211</td><td>0.32</td></tr><tr><td align='center'>tl</td><td align='center'>4807/12951</td><td>0.37</td></tr></table>\n\nNote it has automatically done what you would typically do to tweak the `percentage` heuristic - take the magnitude of the term into account as part of selection. The difference is you would pick a hard frequency threshold whereas the default heuristic has an in-built normalizing function that would still allow low-frequency items through in the absence of any better signals. I've omitted the actual scores used for ranking but you can see that the percentages are still high and the languages are not too obscure either. Both heuristics avoided selecting the most popular language, English because that appears to be skewed towards iPhone users rather than Android (something perhaps to do with correlations with English-speakers, affluence and willingness to \"pay the Apple tax\" for higher priced devices?).\n\nIn fact we can visualize the scoring logic used by these two heuristics:\n\nThe `percentage` heuristic tends to single out the rare languages found in the very bottom left of this popularity chart:\n\n![query template-1](https://cloud.githubusercontent.com/assets/170925/6270125/a1511e24-b84f-11e4-8f72-0b51a3a6447a.jpg)\n\nWhereas the default `JLH` heuristic looks for languages that have moved a fair way north of the diagonal \"normal expectation\" line, with allowance for the relative ease with which rarer terms can double in popularity:\n\n![query template](https://cloud.githubusercontent.com/assets/170925/6270103/79de15ea-b84f-11e4-9fc0-2386ebb282c4.jpg)\n\n### Summary\n\nUse this new heuristic with caution - it likes really rare stuff.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/75524738","html_url":"https://github.com/elastic/elasticsearch/issues/9720#issuecomment-75524738","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9720","id":75524738,"node_id":"MDEyOklzc3VlQ29tbWVudDc1NTI0NzM4","user":{"login":"jarib","id":572,"node_id":"MDQ6VXNlcjU3Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/572?v=4","gravatar_id":"","url":"https://api.github.com/users/jarib","html_url":"https://github.com/jarib","followers_url":"https://api.github.com/users/jarib/followers","following_url":"https://api.github.com/users/jarib/following{/other_user}","gists_url":"https://api.github.com/users/jarib/gists{/gist_id}","starred_url":"https://api.github.com/users/jarib/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jarib/subscriptions","organizations_url":"https://api.github.com/users/jarib/orgs","repos_url":"https://api.github.com/users/jarib/repos","events_url":"https://api.github.com/users/jarib/events{/privacy}","received_events_url":"https://api.github.com/users/jarib/received_events","type":"User","site_admin":false},"created_at":"2015-02-23T11:14:07Z","updated_at":"2015-02-23T11:14:07Z","author_association":"NONE","body":"Thanks for the explanation. I like the championship example in the docs as well.\n","performed_via_github_app":null}]