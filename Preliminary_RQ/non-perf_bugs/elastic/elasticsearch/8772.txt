{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/8772","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8772/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8772/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8772/events","html_url":"https://github.com/elastic/elasticsearch/issues/8772","id":50880081,"node_id":"MDU6SXNzdWU1MDg4MDA4MQ==","number":8772,"title":"Key conflicts when field data service load two fields for different types but with same indexName  ","user":{"login":"coderplay","id":107521,"node_id":"MDQ6VXNlcjEwNzUyMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/107521?v=4","gravatar_id":"","url":"https://api.github.com/users/coderplay","html_url":"https://github.com/coderplay","followers_url":"https://api.github.com/users/coderplay/followers","following_url":"https://api.github.com/users/coderplay/following{/other_user}","gists_url":"https://api.github.com/users/coderplay/gists{/gist_id}","starred_url":"https://api.github.com/users/coderplay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coderplay/subscriptions","organizations_url":"https://api.github.com/users/coderplay/orgs","repos_url":"https://api.github.com/users/coderplay/repos","events_url":"https://api.github.com/users/coderplay/events{/privacy}","received_events_url":"https://api.github.com/users/coderplay/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-12-03T19:20:59Z","updated_at":"2014-12-04T19:23:49Z","closed_at":"2014-12-04T19:23:49Z","author_association":"NONE","active_lock_reason":null,"body":"Let's take a look at the implementation of `IndexFieldDataService. getForField(FieldMapper<?> mapper)`\n\n``` java\n    public <IFD extends IndexFieldData<?>> IFD getForField(FieldMapper<?> mapper) {\n...\n        final String key = fieldNames.indexName();\n        IndexFieldData<?> fieldData = loadedFieldData.get(key);\n...\n                    fieldData = builder.build(index, indexSettings, mapper, cache, circuitBreakerService, indexService.mapperService());\n                    loadedFieldData.put(fieldNames.indexName(), fieldData);\n...\n        return (IFD) fieldData;\n    }\n```\n\nThis method use `FieldMapper`'s indexName as key, fetch field data for a concurrent HashMap. The indexName of `FieldMapper` is always from a `DocumentMapper`, which is built like this \n\n``` java\n\n// DocumentMapper.Builder\n        public Builder(String index, Settings indexSettings, RootObjectMapper.Builder builder) {\n...\n            this.builderContext = new Mapper.BuilderContext(indexSettings, new ContentPath(1));\n...\n        }\n```\n\nThe `new ContentPath(1)` will effect all `FieldMapper`'s indexNames of a `DocumentMapper`. Those indexName won't get a full path with a qualifier. \n\nHere is an FieldMapper example which passed into `IndexFieldDataService. getForField(FieldMapper<?> mapper)`\n\n```\nnames = {org.elasticsearch.index.mapper.FieldMapper$Names@5182}\nname = {java.lang.String@7248}\"country\"\nindexName = {java.lang.String@7249}\"country\"\nindexNameClean = {java.lang.String@7248}\"country\"\nfullName = {java.lang.String@7250}\"country\"\nsourcePath = {java.lang.String@7250}\"country\"\n```\n\nWhen two  two fields for different types but with same indexName  passed into `IndexFieldDataService. getForField(FieldMapper<?> mapper)`, the second call will retrieve a wrong field data since its indexName will match the key from the first  method call which will be already in loadedFieldData.\n\nPlease correct me if I misunderstand the logic of this part.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}