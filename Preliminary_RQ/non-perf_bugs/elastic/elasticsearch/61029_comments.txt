[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/672870550","html_url":"https://github.com/elastic/elasticsearch/issues/61029#issuecomment-672870550","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61029","id":672870550,"node_id":"MDEyOklzc3VlQ29tbWVudDY3Mjg3MDU1MA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-08-12T13:28:25Z","updated_at":"2020-08-12T13:28:25Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search (:Search/Search)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/672870790","html_url":"https://github.com/elastic/elasticsearch/issues/61029#issuecomment-672870790","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61029","id":672870790,"node_id":"MDEyOklzc3VlQ29tbWVudDY3Mjg3MDc5MA==","user":{"login":"astefan","id":893749,"node_id":"MDQ6VXNlcjg5Mzc0OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/893749?v=4","gravatar_id":"","url":"https://api.github.com/users/astefan","html_url":"https://github.com/astefan","followers_url":"https://api.github.com/users/astefan/followers","following_url":"https://api.github.com/users/astefan/following{/other_user}","gists_url":"https://api.github.com/users/astefan/gists{/gist_id}","starred_url":"https://api.github.com/users/astefan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/astefan/subscriptions","organizations_url":"https://api.github.com/users/astefan/orgs","repos_url":"https://api.github.com/users/astefan/repos","events_url":"https://api.github.com/users/astefan/events{/privacy}","received_events_url":"https://api.github.com/users/astefan/received_events","type":"User","site_admin":false},"created_at":"2020-08-12T13:28:49Z","updated_at":"2020-08-12T13:28:49Z","author_association":"CONTRIBUTOR","body":"@jtibshirani ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/672983036","html_url":"https://github.com/elastic/elasticsearch/issues/61029#issuecomment-672983036","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61029","id":672983036,"node_id":"MDEyOklzc3VlQ29tbWVudDY3Mjk4MzAzNg==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2020-08-12T16:35:47Z","updated_at":"2020-08-12T16:35:47Z","author_association":"MEMBER","body":"This is not surprising behavior to me, since we also merge the output of `docvalue_fields` and `stored_fields`. @astefan from your perspective, what would be a more intuitive/ useful behavior? To me it's hard to explain why one would override the other -- we don't have a concept of precedence for the 'fetch' parts of the request.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/673307415","html_url":"https://github.com/elastic/elasticsearch/issues/61029#issuecomment-673307415","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61029","id":673307415,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MzMwNzQxNQ==","user":{"login":"astefan","id":893749,"node_id":"MDQ6VXNlcjg5Mzc0OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/893749?v=4","gravatar_id":"","url":"https://api.github.com/users/astefan","html_url":"https://github.com/astefan","followers_url":"https://api.github.com/users/astefan/followers","following_url":"https://api.github.com/users/astefan/following{/other_user}","gists_url":"https://api.github.com/users/astefan/gists{/gist_id}","starred_url":"https://api.github.com/users/astefan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/astefan/subscriptions","organizations_url":"https://api.github.com/users/astefan/orgs","repos_url":"https://api.github.com/users/astefan/repos","events_url":"https://api.github.com/users/astefan/events{/privacy}","received_events_url":"https://api.github.com/users/astefan/received_events","type":"User","site_admin":false},"created_at":"2020-08-13T07:18:07Z","updated_at":"2020-08-13T07:18:07Z","author_association":"CONTRIBUTOR","body":"@jtibshirani I didn't know we also merge `docvalue_fields` and `stored_fields` outputs. The surprise (and the first thing that jumped at me as unusual) came from the duplicated data that one gets when using `fields` and `docvalue_fields`... isn't this a confusing result for a field? Is that field made of two values `foo` and `foo` , or is the data coming from duplicated fields output? I'm thinking of scenarios/situations where the duplicated output can be mistaken with a list of terms (not sure if this is possible though).\r\n\r\nWhat if one uses `fields` API (which does extraction from _source for a field) and `docvalue_fields` for a `_source` with the content `FOO`. The combined output of `fields` will be `foo` (from `docvalue_fields`, assuming this is a keyword field with a lowercase normalizer) and `FOO` (from _source). Isn't this a confusing output for the same field content?\r\n\r\nThere is also the question of using two different APIs and getting a single combined result... I would have expected to get them in two separate sections in the result.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/673686510","html_url":"https://github.com/elastic/elasticsearch/issues/61029#issuecomment-673686510","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61029","id":673686510,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MzY4NjUxMA==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2020-08-13T20:11:17Z","updated_at":"2020-08-13T20:11:17Z","author_association":"MEMBER","body":"> The combined output of fields will be foo (from docvalue_fields, assuming this is a keyword field with a lowercase normalizer) and FOO (from _source). Isn't this a confusing output for the same field content?\r\n\r\nWe actually decided to apply `keyword` normalizers to the value, so `foo` will simply appear twice. In general we try to have the output of `fields` match that of `docvalue_fields`. However I do agree it's confusing that we merge the output -- the user doesn't know if the field was an array with two values, or if we retrieved once from `fields` and once from `docvalue_fields`.\r\n\r\n> There is also the question of using two different APIs and getting a single combined result... I would have expected to get them in two separate sections in the result.\r\n\r\nI can definitely see how this behavior is confusing. I think the reasoning is that you might want to use different retrieval strategies for different fields (like `docvalue_fields` for one, `script_fields` for another, etc.) and have a convenient combined response. Despite the existing behavior being a bit confusing, I do think we should keep returning the response under the `fields` key, since it's the most natural place for it. \r\n\r\nHere are the options I see moving forward:\r\n1. Keep the current behavior. We've talked about deprecating `docvalue_fields` and `script_fields` in favor of just using `fields`, so in the (pretty far?) future we will no longer have multiple responses combined together. \r\n2. Have any fields from `docvalue_fields` overwrite those from `fields` (or vice versa). The reasoning is that the user only wants to retrieve each field once, instead of merging the outputs of `fields` and `docvalue_fields`.\r\n3. Throw an error if the same field is requested in both `fields` and `docvalue_fields`. I'm afraid this is too limiting, since both `fields` and `docvalue_fields` accept wildcard patterns and these could easily overlap.\r\n\r\nI'm in favor of option 2: it is simple and consistent with our approach of always returning field data in `fields`. It also avoids a confusing situation where we append field values together.\r\n\r\n@astefan @nik9000 @jimczi do you have thoughts on the options above?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/674845720","html_url":"https://github.com/elastic/elasticsearch/issues/61029#issuecomment-674845720","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61029","id":674845720,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NDg0NTcyMA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2020-08-17T12:14:15Z","updated_at":"2020-08-17T12:14:15Z","author_association":"CONTRIBUTOR","body":"My first instinct is option 3, throwing an error. It feels like the least\nsurprising option to me.\n\nOn Thu, Aug 13, 2020, 16:11 Julie Tibshirani <notifications@github.com>\nwrote:\n\n> The combined output of fields will be foo (from docvalue_fields, assuming\n> this is a keyword field with a lowercase normalizer) and FOO (from\n> _source). Isn't this a confusing output for the same field content?\n>\n> We actually decided to apply keyword normalizers to the value, so foo\n> will simply appear twice. In general we try to have the output of fields\n> match that of docvalue_fields. However I do agree it's confusing that we\n> merge the output -- the user doesn't know if the field was an array with\n> two values, or if we retrieved once from fields and once from\n> docvalue_fields.\n>\n> There is also the question of using two different APIs and getting a\n> single combined result... I would have expected to get them in two separate\n> sections in the result.\n>\n> I can definitely see how this behavior is confusing. I think the reasoning\n> is that you might want to use different retrieval strategies for different\n> fields (like docvalue_fields for one, script_fields for another, etc.)\n> and have a convenient combined response. Despite the existing behavior\n> being a bit confusing, I do think we should keep returning the response\n> under the fields key, since it's the most natural place for it.\n>\n> Here are the options I see moving forward:\n>\n>    1. Keep the current behavior. We've talked about deprecating\n>    docvalue_fields and script_fields in favor of just using fields, so in\n>    the (pretty far?) future we will no longer have multiple responses combined\n>    together.\n>    2. Have any fields from docvalue_fields overwrite those from fields\n>    (or vice versa). The reasoning is that the user only wants to retrieve each\n>    field once, instead of merging the outputs of fields and\n>    docvalue_fields.\n>    3. Throw an error if the same field is requested in both fields and\n>    docvalue_fields. I'm afraid this is too limiting, since both fields\n>    and docvalue_fields accept wildcard patterns and these could easily\n>    overlap.\n>\n> I'm in favor of option 2: it is simple and consistent with our approach of\n> always returning field data in fields. It also avoids a confusing\n> situation where we append field values together.\n>\n> @astefan <https://github.com/astefan> @nik9000\n> <https://github.com/nik9000> @jimczi <https://github.com/jimczi> do you\n> have thoughts on the options above?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/elastic/elasticsearch/issues/61029#issuecomment-673686510>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AABUXIU5DDPTA2TR2VGAE6LSARCHLANCNFSM4P4WHNQQ>\n> .\n>\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/675437982","html_url":"https://github.com/elastic/elasticsearch/issues/61029#issuecomment-675437982","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61029","id":675437982,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NTQzNzk4Mg==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2020-08-18T12:05:37Z","updated_at":"2020-08-18T12:05:37Z","author_association":"MEMBER","body":"I have a slight preference on option 1, mainly because I don't think `fields` and `docvalue_fields` should be used on the same request. The long term goal is to deprecate the `docvalue_fields`, `script_fields` and `stored_fields` all together but I am also not sure that we should change anything in the meantime. So far `docvalue_fields` is mainly used for bad reasons (formatting of the field) so the fix here is that users can switch to the new API, not use it in conjunction with `docvalue_fields`.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/686704927","html_url":"https://github.com/elastic/elasticsearch/issues/61029#issuecomment-686704927","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61029","id":686704927,"node_id":"MDEyOklzc3VlQ29tbWVudDY4NjcwNDkyNw==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2020-09-03T19:16:32Z","updated_at":"2020-09-03T19:16:32Z","author_association":"MEMBER","body":"We recently merged a refactor to the fetch phase that actually changed the behavior (#60907). Now the entire 'fetch doc values' subphase is execute before 'fetch fields', which means we follow behavior (2) above: any fields from `fields` completely overwrite those from `docvalue_fields`.\r\n\r\nThis seems like okay behavior to me and I don't feel we need to make a change. The reasoning:\r\n* It's good to not have special logic around preferring `fields` vs. `docvalue_fields`. This is simple and consistent with our view that `fields` and `docvalue_fields` shouldn't really be used together.\r\n* There's no longer a confusing situation where we return the same field value twice, as in @astefan's [original example](https://github.com/elastic/elasticsearch/issues/61029#issue-677694372).\r\n\r\nLet me know if you have remaining comments/ concerns. Otherwise I plan to close out the issue soon.","performed_via_github_app":null}]