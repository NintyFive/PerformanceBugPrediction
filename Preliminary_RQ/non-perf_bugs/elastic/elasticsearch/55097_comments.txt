[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/612993899","html_url":"https://github.com/elastic/elasticsearch/issues/55097#issuecomment-612993899","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55097","id":612993899,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMjk5Mzg5OQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-04-13T17:11:21Z","updated_at":"2020-04-13T17:11:21Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search (:Search/Mapping)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/612995490","html_url":"https://github.com/elastic/elasticsearch/issues/55097#issuecomment-612995490","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55097","id":612995490,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMjk5NTQ5MA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2020-04-13T17:15:06Z","updated_at":"2020-04-13T17:15:06Z","author_association":"CONTRIBUTOR","body":"@StratoZen, I've marked this for further looking by folks who know more about ES's mapping internals than I do. We might be able to reproduce the issue on our own but we tend to want a complete reproduction with built with `cURL` or Kibana's dev `CONSOLE`. As it stands we'll have to guess your mapping and the requests that you make. That might turn out pretty easy or it might not. But it'd be super helpful if you'd add reproduction with curl or console.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/613026890","html_url":"https://github.com/elastic/elasticsearch/issues/55097#issuecomment-613026890","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55097","id":613026890,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMzAyNjg5MA==","user":{"login":"StratoZen","id":38732954,"node_id":"MDEyOk9yZ2FuaXphdGlvbjM4NzMyOTU0","avatar_url":"https://avatars0.githubusercontent.com/u/38732954?v=4","gravatar_id":"","url":"https://api.github.com/users/StratoZen","html_url":"https://github.com/StratoZen","followers_url":"https://api.github.com/users/StratoZen/followers","following_url":"https://api.github.com/users/StratoZen/following{/other_user}","gists_url":"https://api.github.com/users/StratoZen/gists{/gist_id}","starred_url":"https://api.github.com/users/StratoZen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/StratoZen/subscriptions","organizations_url":"https://api.github.com/users/StratoZen/orgs","repos_url":"https://api.github.com/users/StratoZen/repos","events_url":"https://api.github.com/users/StratoZen/events{/privacy}","received_events_url":"https://api.github.com/users/StratoZen/received_events","type":"Organization","site_admin":false},"created_at":"2020-04-13T18:23:42Z","updated_at":"2020-04-13T18:23:42Z","author_association":"NONE","body":"@nik9000 I'll work on getting those Dev console examples to you.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/613044173","html_url":"https://github.com/elastic/elasticsearch/issues/55097#issuecomment-613044173","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55097","id":613044173,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMzA0NDE3Mw==","user":{"login":"StratoZen","id":38732954,"node_id":"MDEyOk9yZ2FuaXphdGlvbjM4NzMyOTU0","avatar_url":"https://avatars0.githubusercontent.com/u/38732954?v=4","gravatar_id":"","url":"https://api.github.com/users/StratoZen","html_url":"https://github.com/StratoZen","followers_url":"https://api.github.com/users/StratoZen/followers","following_url":"https://api.github.com/users/StratoZen/following{/other_user}","gists_url":"https://api.github.com/users/StratoZen/gists{/gist_id}","starred_url":"https://api.github.com/users/StratoZen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/StratoZen/subscriptions","organizations_url":"https://api.github.com/users/StratoZen/orgs","repos_url":"https://api.github.com/users/StratoZen/repos","events_url":"https://api.github.com/users/StratoZen/events{/privacy}","received_events_url":"https://api.github.com/users/StratoZen/received_events","type":"Organization","site_admin":false},"created_at":"2020-04-13T19:02:36Z","updated_at":"2020-04-13T19:39:12Z","author_association":"NONE","body":"I'm not sure if I can put the entire post example, but I roughly have the follows:\r\nIn dev console:\r\n```\r\nPOST /index1/_doc\r\n{\r\n  //json fields...\r\n  \"ip_addr\": \"0.0.0.0\",\r\n  //more json fields\r\n}\r\n```\r\n\r\nThis succeeds as the ip_addr field is of type \"IP\". \r\n```\r\n{\r\n  \"_index\" : \"index1-000017\",\r\n  \"_type\" : \"_doc\",\r\n  \"_id\" : \"IvrjdHEBJ9vnX_RF9DC-\",\r\n  \"_version\" : 1,\r\n  \"result\" : \"created\",\r\n  \"_shards\" : {\r\n    \"total\" : 2,\r\n    \"successful\" : 2,\r\n    \"failed\" : 0\r\n  },\r\n  \"_seq_no\" : 1692650,\r\n  \"_primary_term\" : 1\r\n}\r\n```\r\n\r\nNow taking the exact same record, and indexing it again, this time setting `ip_addr : \"\"`.\r\n```\r\n\"install_status\": \"N/A\", \"ip_addr\": \"\", \r\n\"last_file_recv_time\": 1563911977, \r\n\"last_perf_data_time\": 1563911977, \r\n\"last_status_update_time\": 1563911980,\r\n//more fields \r\n```\r\nThe result is a failure, normally this is expected.\r\n\r\n```\r\n{\r\n  \"error\" : {\r\n    \"root_cause\" : [\r\n      {\r\n        \"type\" : \"mapper_parsing_exception\",\r\n        \"reason\" : \"failed to parse field [ip_addr] of type [ip] in document with id 'dfXodHEBdhcRqQnIGaZ7'. Preview of field's value: ''\"\r\n      }\r\n    ],\r\n    \"type\" : \"mapper_parsing_exception\",\r\n    \"reason\" : \"failed to parse field [ip_addr] of type [ip] in document with id 'dfXodHEBdhcRqQnIGaZ7'. Preview of field's value: ''\",\r\n    \"caused_by\" : {\r\n      \"type\" : \"illegal_argument_exception\",\r\n      \"reason\" : \"'' is not an IP string literal.\"\r\n    }\r\n  },\r\n  \"status\" : 400\r\n}\r\n```\r\n\r\nWith the null_value option in the field mapping however, upon finding a null  value, it should set it to what we designate. As mentioned above, for the above index, the field \"ip_addr\" does indeed have a null_value designation.\r\n```\r\n        },\r\n        \"ip_addr\": {\r\n          \"type\": \"ip\",\r\n          \"null_value\": \"0.0.0.0\"\r\n        },\r\n```\r\nMy understanding is that, when a null value, or empty string is found, it should insert 0.0.0.0 for the field instead of failing to index the document.\r\n\r\nIt seems as though, upon finding an empty string, it should attempt to see if the null_value option is set prior to throwing an exception.\r\n\r\nThanks,\r\n\r\n-Rob\r\n\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/613954635","html_url":"https://github.com/elastic/elasticsearch/issues/55097#issuecomment-613954635","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55097","id":613954635,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMzk1NDYzNQ==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2020-04-15T10:25:00Z","updated_at":"2020-04-15T10:25:00Z","author_association":"MEMBER","body":"@StratoZen thanks for the reproduction.\r\nI was able to get the same error you described on 7.6.2. However, the behaviour when trying to add an empty String literal as an IP adress doesn't seem to have changed at least until 7.0. I got the same error on 7.0, 7.3.2 and 7.4.2 when doing\r\n\r\n```\r\nPUT /index1\r\n{\r\n  \"mappings\": {\r\n    \"properties\": {\r\n      \"ip_addr\" :{\r\n        \"type\" : \"ip\",\r\n        \"null_value\": \"0.0.0.0\"\r\n      }\r\n    }\r\n  }\r\n\r\nPUT /index1/_doc/1\r\n{\r\n  \"ip_addr\" : \"\"\r\n}\r\n```\r\n```\r\n      \"type\": \"illegal_argument_exception\",\r\n      \"reason\": \"'' is not an IP string literal.\"\r\n```\r\n\r\nAlso note that the behaviour for real \"null\" values is as expected, the document gets indexed with a \"0.0.0.0\" value (although you don't see it in the \"_source\" but the value is searchable). I wonder wether the bahaviour on empty strings should be considered as intended since its not really a `null` value. Can you confirm how/if this worked for you in any earlier version, maybe with a more detailed example? Otherwise I'll assume this isn't a change in behaviour but maybe something we should document better instead.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/613956281","html_url":"https://github.com/elastic/elasticsearch/issues/55097#issuecomment-613956281","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55097","id":613956281,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMzk1NjI4MQ==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2020-04-15T10:28:31Z","updated_at":"2020-04-15T10:28:31Z","author_association":"MEMBER","body":"Also 6.8.7 throws the IAE on trying to index an empty string.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/613999541","html_url":"https://github.com/elastic/elasticsearch/issues/55097#issuecomment-613999541","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55097","id":613999541,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMzk5OTU0MQ==","user":{"login":"StratoZen","id":38732954,"node_id":"MDEyOk9yZ2FuaXphdGlvbjM4NzMyOTU0","avatar_url":"https://avatars0.githubusercontent.com/u/38732954?v=4","gravatar_id":"","url":"https://api.github.com/users/StratoZen","html_url":"https://github.com/StratoZen","followers_url":"https://api.github.com/users/StratoZen/followers","following_url":"https://api.github.com/users/StratoZen/following{/other_user}","gists_url":"https://api.github.com/users/StratoZen/gists{/gist_id}","starred_url":"https://api.github.com/users/StratoZen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/StratoZen/subscriptions","organizations_url":"https://api.github.com/users/StratoZen/orgs","repos_url":"https://api.github.com/users/StratoZen/repos","events_url":"https://api.github.com/users/StratoZen/events{/privacy}","received_events_url":"https://api.github.com/users/StratoZen/received_events","type":"Organization","site_admin":false},"created_at":"2020-04-15T12:11:09Z","updated_at":"2020-04-15T12:11:09Z","author_association":"NONE","body":"Ah this makes perfect sense. My problem here was incorrectly assuming an empty string would be treated as a NULL value. What I was seeing on our client side, was some behavior results in a python type None, and upon indexing would correctly get assigned the null_value \"0.0.0.0\".  This scenario seems to work, but where the confusion was, is some data resulted in an empty string. I thought null_value option would also incorporate this. I only noticed post upgrade, so I had thought this was related.\r\n\r\nEasy fix on my client side, thanks for the help. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614002470","html_url":"https://github.com/elastic/elasticsearch/issues/55097#issuecomment-614002470","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55097","id":614002470,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDAwMjQ3MA==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2020-04-15T12:17:05Z","updated_at":"2020-04-15T12:17:05Z","author_association":"MEMBER","body":"@StratoZen no problem, thanks for raising the issue anyway. Will close then.","performed_via_github_app":null}]