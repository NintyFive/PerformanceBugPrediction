[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49596271","html_url":"https://github.com/elastic/elasticsearch/issues/6697#issuecomment-49596271","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6697","id":49596271,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTk2Mjcx","user":{"login":"redox","id":29529,"node_id":"MDQ6VXNlcjI5NTI5","avatar_url":"https://avatars2.githubusercontent.com/u/29529?v=4","gravatar_id":"","url":"https://api.github.com/users/redox","html_url":"https://github.com/redox","followers_url":"https://api.github.com/users/redox/followers","following_url":"https://api.github.com/users/redox/following{/other_user}","gists_url":"https://api.github.com/users/redox/gists{/gist_id}","starred_url":"https://api.github.com/users/redox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redox/subscriptions","organizations_url":"https://api.github.com/users/redox/orgs","repos_url":"https://api.github.com/users/redox/repos","events_url":"https://api.github.com/users/redox/events{/privacy}","received_events_url":"https://api.github.com/users/redox/received_events","type":"User","site_admin":false},"created_at":"2014-07-21T11:49:37Z","updated_at":"2014-07-21T11:49:37Z","author_association":"NONE","body":"Hey there,\n\nwith such algorithm the top buckets are determined once all values have been processed, right? Therefore, the sub (bucket-specific & nested) aggregations can only be computed once all documents have been collected in order to know the final list of buckets, isn't it? Because if I'm right, for each collected document (method `collect`) we need to call `collectableSugAggregators.collect` with the associated `bucketOrd` (which will be unknown at this step). Am I missing something?\n\nInstead, in case of a count-based (or terms-based) sorting, any chance the sub aggregations could be collected in another pass?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49604128","html_url":"https://github.com/elastic/elasticsearch/issues/6697#issuecomment-49604128","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6697","id":49604128,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NjA0MTI4","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-07-21T13:21:53Z","updated_at":"2014-07-21T13:21:53Z","author_association":"CONTRIBUTOR","body":"> Therefore, the sub (bucket-specific & nested) aggregations can only be computed once all documents have been collected\n\nI think sub aggregations could be collected on the fly. The algorithm works on a fixed set of `m` counters, so we could associate a bucket ordinal (between `0` and `m-1`) with each of these counters and use them to collect the sub aggregations.\n\nIt might introduce accuracy issues for the sub aggregations since counters can be relabeled during collection but this is the general trade-off of this algorithm: trading accuracy for memory, so I think it's fine? Moreover if the distribution of the data is skewed enough and if we oversize `m` a bit compared to the number of top terms that we are interested in, the likelyhood of the top terms being affected by this issue should remain low.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49607744","html_url":"https://github.com/elastic/elasticsearch/issues/6697#issuecomment-49607744","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6697","id":49607744,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NjA3NzQ0","user":{"login":"redox","id":29529,"node_id":"MDQ6VXNlcjI5NTI5","avatar_url":"https://avatars2.githubusercontent.com/u/29529?v=4","gravatar_id":"","url":"https://api.github.com/users/redox","html_url":"https://github.com/redox","followers_url":"https://api.github.com/users/redox/followers","following_url":"https://api.github.com/users/redox/following{/other_user}","gists_url":"https://api.github.com/users/redox/gists{/gist_id}","starred_url":"https://api.github.com/users/redox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redox/subscriptions","organizations_url":"https://api.github.com/users/redox/orgs","repos_url":"https://api.github.com/users/redox/repos","events_url":"https://api.github.com/users/redox/events{/privacy}","received_events_url":"https://api.github.com/users/redox/received_events","type":"User","site_admin":false},"created_at":"2014-07-21T13:53:19Z","updated_at":"2014-07-21T13:53:19Z","author_association":"NONE","body":"Makes sense, we're on the same page! Thank you @jpountz \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49907615","html_url":"https://github.com/elastic/elasticsearch/issues/6697#issuecomment-49907615","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6697","id":49907615,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5OTA3NjE1","user":{"login":"redox","id":29529,"node_id":"MDQ6VXNlcjI5NTI5","avatar_url":"https://avatars2.githubusercontent.com/u/29529?v=4","gravatar_id":"","url":"https://api.github.com/users/redox","html_url":"https://github.com/redox","followers_url":"https://api.github.com/users/redox/followers","following_url":"https://api.github.com/users/redox/following{/other_user}","gists_url":"https://api.github.com/users/redox/gists{/gist_id}","starred_url":"https://api.github.com/users/redox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redox/subscriptions","organizations_url":"https://api.github.com/users/redox/orgs","repos_url":"https://api.github.com/users/redox/repos","events_url":"https://api.github.com/users/redox/events{/privacy}","received_events_url":"https://api.github.com/users/redox/received_events","type":"User","site_admin":false},"created_at":"2014-07-23T17:33:34Z","updated_at":"2014-07-23T17:33:34Z","author_association":"NONE","body":"Just wanna let you know that I've released a plugin embedding such algorithm and targeting ES +1.2. Our first tests are pretty concluant :+1: \n\nIt's still in alpha version but I would love any comment/review/pull-request of ES gurus reading this comment :)\n\nPlugin is here: [elasticsearch-topk-plugin](https://github.com/algolia/elasticsearch-topk-plugin)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49911217","html_url":"https://github.com/elastic/elasticsearch/issues/6697#issuecomment-49911217","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6697","id":49911217,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5OTExMjE3","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-07-23T18:00:44Z","updated_at":"2014-07-23T18:00:44Z","author_association":"CONTRIBUTOR","body":"It looks good in general. FYI you would get better performance by specializing on numerics/strings like the terms aggregation does. On numerics this would only help a bit by saving the conversion to BytesRef and allowing to use more efficient data-structures, but on strings this could have a big impact. The way field data works on strings is that there is a first level of indirection that gives ordinals given a doc ID, and a second level of indirection that gives the values given an ordinal. Ordinals have the interesting property of being dense (so that you can use them as indices in arrays) and sorted (useful for comparisons, would help if you want to sort buckets of this top-k agg by term). Additionally they are fast to retrieve. On the other hand, retrieving values given an ordinal might be slow, especially if you are using doc values. That's why our aggregations try to use ordinals whenever possible as this brings important speedups.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49911666","html_url":"https://github.com/elastic/elasticsearch/issues/6697#issuecomment-49911666","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6697","id":49911666,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5OTExNjY2","user":{"login":"redox","id":29529,"node_id":"MDQ6VXNlcjI5NTI5","avatar_url":"https://avatars2.githubusercontent.com/u/29529?v=4","gravatar_id":"","url":"https://api.github.com/users/redox","html_url":"https://github.com/redox","followers_url":"https://api.github.com/users/redox/followers","following_url":"https://api.github.com/users/redox/following{/other_user}","gists_url":"https://api.github.com/users/redox/gists{/gist_id}","starred_url":"https://api.github.com/users/redox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redox/subscriptions","organizations_url":"https://api.github.com/users/redox/orgs","repos_url":"https://api.github.com/users/redox/repos","events_url":"https://api.github.com/users/redox/events{/privacy}","received_events_url":"https://api.github.com/users/redox/received_events","type":"User","site_admin":false},"created_at":"2014-07-23T18:03:57Z","updated_at":"2014-07-23T18:03:57Z","author_association":"NONE","body":"Thanks for the inputs @jpountz, I'm definitely planning to use the ordinals but wanted to have a first working version first.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/158653064","html_url":"https://github.com/elastic/elasticsearch/issues/6697#issuecomment-158653064","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6697","id":158653064,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODY1MzA2NA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-11-21T15:38:10Z","updated_at":"2015-11-21T15:38:10Z","author_association":"CONTRIBUTOR","body":"@jpountz is this still something you plan on pursuing?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/158903255","html_url":"https://github.com/elastic/elasticsearch/issues/6697#issuecomment-158903255","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6697","id":158903255,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODkwMzI1NQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-11-23T10:51:07Z","updated_at":"2015-11-23T10:51:07Z","author_association":"CONTRIBUTOR","body":"Yes. I think it can be useful for pagination in particular, when sorting by term. I'll close for now and reopen when I have more concrete plans.\n","performed_via_github_app":null}]