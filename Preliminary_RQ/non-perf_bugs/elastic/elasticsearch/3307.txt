{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3307","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3307/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3307/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3307/events","html_url":"https://github.com/elastic/elasticsearch/issues/3307","id":16534404,"node_id":"MDU6SXNzdWUxNjUzNDQwNA==","number":3307,"title":"Distance Scoring","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"assignees":[{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2013-07-09T16:32:23Z","updated_at":"2013-08-01T12:55:03Z","closed_at":"2013-08-01T12:55:03Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"# Distance scoring\n\nIt might sometimes be desirable to have a tool available that allows to multiply the original score for a document with a function that decays depending on the distance of a numeric field value of the document from a user given reference.\n\nIn the most simple case, for each field in each found document a decay function could be computed. The original score of the query could then be multiplied with the individual function values computed for the fields. Distance scoring in this case behaves like a range query with smoothed box edges.\n\nDistance scoring could be applied for an arbitrary number of numeric fields.\n\nTo use distance scoring on a query that has numerical fields, the user would have to define at least\n1. a reference and\n2. a scale\n\nfor each field. A reference is needed to define a distance for the document and a scale to define the rate of decay.\n## Example\n\nSuppose you are searching for a hotel in a certain town. Your budget is limited. Also, you would like the hotel to be close to the town center, so the farther the hotel is from the desired location the less likely you are to check in.\nYou would like the query results that match your criterion (for example, \"hotel, Nancy, non-smoker\") to be scored with respect to distance to the town center and also the price. \n\nIntuitively, you would like to define the town center as the origin and maybe you are willing to walk 2km to the town center from the hotel.\nIn this case your _reference_ for the location field is the town center and the _scale_ is ~2km.\n\nIf your budget is low, you would probably prefer something cheap above something expensive. \nFor the price field, the _reference_ would be 0 Euros and the _scale_ depends on how much you are willing to pay, for example 20 Euros. \n## Usage\n\nIn the above example, the fields might be called \"price\" for the price of the hotel and \"location\" for the coordinates of this hotel. \nFor both fields, the user should be able to define a decay function and also how to combine the decay functions for different fields before the decay factor is multiplied to the score of the original query\nThe json request could look like this:\n\n```\ncurl 'localhost:9200/hotels/_search/' -d '{\n\"query\": {\n    \"function_score\": {\n        \"functions\": [\n            {\n                \"DECAY_FUNCTION\": {\n                    \"price\": {\n                        \"reference\": \"0\",\n                        \"scale\": \"20\"\n                    }\n                }\n            },\n            {\n                \"DECAY_FUNCTION\": {\n                    \"location\": {\n                        \"reference\": \"11, 12\",\n                        \"scale\": \"2km\"\n                    }\n                }\n            }\n        ],\n        \"query\": {\n            \"match\": {\n                \"properties\": \"balcony\"\n            }\n        },\n        \"score_mode\": \"multiply\"\n    }\n}\n}'\n```\n## Decay Functions\n\nA huge variety of decay functions could be implemented. Here are three examples:\n### Normal decay\n\nA contour plot for the normal decay for two fields looks like this (if the decay functions are multiplied):\n\n![gausscontour](https://f.cloud.github.com/assets/4320215/768157/cd0e18a6-e898-11e2-9b3c-f0145078bd6f.png)\n![gausssurf](https://f.cloud.github.com/assets/4320215/768160/ec43c928-e898-11e2-8e0d-f3c4519dbd89.png)\n\nSuppose your original search results matches three hotels : \"Backback Nap\", \"Drink n Drive\" and \"BnB Bellevue\". \n\"Drink n Drive\" is pretty far from your defined location (nealy 2 km) and is not too cheap (about 13 Euros) so it gets a low factor a factor of 0.56. \"BnB Bellevue\" and \"Backback Nap\" are both pretty close to the defined location but \"BnB Bellevue\" is cheaper, so it gets a multiplier of 0.86 whereas \"Backpack Nap\" gets a value of 0.66.\"\n\nThe multiplier to the original score is computed as\n\n<a href=\"http://www.codecogs.com/eqnedit.php?latex=\\exp(-\\frac{(x-\\mu)^2}{\\sigma^2})\" target=\"_blank\"><img src=\"http://latex.codecogs.com/gif.latex?\\mathcal{S}(doc)=\\exp(-\\frac{(location_{doc}-\\mu_l)^2}{2\\sigma^2_l})\\exp(-\\frac{(price_{doc}-\\mu_p)^2}{2\\sigma^2_p}),\" title=\"\\exp(-\\frac{x-\\mu}{2\\sigma^2}),\" /></a>\n\nwhere <a href=\"http://www.codecogs.com/eqnedit.php\" ><img src=\"http://latex.codecogs.com/gif.latex?\\mu_l\"  /></a> is the town center, <a href=\"http://www.codecogs.com/eqnedit.php\" ><img src=\"http://latex.codecogs.com/gif.latex?\\sigma_l\"  /></a> is the scale of the location (2km in this case), <a href=\"http://www.codecogs.com/eqnedit.php\" ><img src=\"http://latex.codecogs.com/gif.latex?\\mu_p\"  /></a> is the price reference (0 Euros since your budget is low) and <a href=\"http://www.codecogs.com/eqnedit.php\" ><img src=\"http://latex.codecogs.com/gif.latex?\\sigma_p\"  /></a> is the scale of the price (20 Euros in this case).\n### Exponential decay\n\nA contour plot for the exponential decay for two fields looks like this:\n\n![expcontour](https://f.cloud.github.com/assets/4320215/768161/082975c0-e899-11e2-86f7-174c3a729d64.png)\n![expsurf](https://f.cloud.github.com/assets/4320215/768162/0b606884-e899-11e2-907b-aefc77eefef6.png)\n\nThe multiplier to the original score is computed as\n\n<a href=\"http://www.codecogs.com/eqnedit.php?latex=\\exp(-\\frac{abs(x-\\mu)^2}{\\sigma})\" target=\"_blank\"><img src=\"http://latex.codecogs.com/gif.latex?\\mathcal{S}(doc)=\\exp(-\\frac{|location_{doc}-\\mu_l|}{\\sigma_l})\\exp(-\\frac{|price_{doc}-\\mu_p|}{\\sigma_p}),\" title=\"\\exp(-\\frac{x-\\mu}{2\\sigma^2}),\" /></a>\n\nwhere again <a href=\"http://www.codecogs.com/eqnedit.php\" ><img src=\"http://latex.codecogs.com/gif.latex?\\mu_l\"  /></a> is the town center, <a href=\"http://www.codecogs.com/eqnedit.php\" ><img src=\"http://latex.codecogs.com/gif.latex?\\sigma_l\"  /></a> is the scale of the location (2km in this case), <a href=\"http://www.codecogs.com/eqnedit.php\" ><img src=\"http://latex.codecogs.com/gif.latex?\\mu_p\"  /></a> is the price reference (0 Euros since your budget is low) and <a href=\"http://www.codecogs.com/eqnedit.php\" ><img src=\"http://latex.codecogs.com/gif.latex?\\sigma_p\"  /></a> is the scale of the price (20 Euros in this case).\n### 'Linear' decay\n\nA contour plot for the 'linear' decay for two fields looks like this:\n\n![lincontour](https://f.cloud.github.com/assets/4320215/768164/1775b0ca-e899-11e2-9f4a-776b406305c6.png)\n![linsurf](https://f.cloud.github.com/assets/4320215/768165/19d8b1aa-e899-11e2-91bc-6b0553e8d722.png)\n\nThe multiplier to the original score is computed as\n\n<a href=\"http://www.codecogs.com/eqnedit.php?latex=\\frac{abs(x-\\mu)^2}{\\sigma})\" target=\"_blank\"><img src=\"http://latex.codecogs.com/gif.latex?\\mathcal{S}(doc)=\\max(\\frac{\\sigma_l-|location_{doc}-\\mu_l|}{\\sigma_l},0)\\max(\\frac{\\sigma_p-|price_{doc}-\\mu_p|}{\\sigma_p},0),\" title=\"\\exp(-\\frac{x-\\mu}{2\\sigma^2}),\" /></a>\n\nwhere again <a href=\"http://www.codecogs.com/eqnedit.php\" ><img src=\"http://latex.codecogs.com/gif.latex?\\mu_l\"  /></a> is the town center, <a href=\"http://www.codecogs.com/eqnedit.php\" ><img src=\"http://latex.codecogs.com/gif.latex?\\sigma_l\"  /></a> is the scale of the location (2km in this case), <a href=\"http://www.codecogs.com/eqnedit.php\" ><img src=\"http://latex.codecogs.com/gif.latex?\\mu_p\"  /></a> is the price reference (0 Euros since your budget is low) and <a href=\"http://www.codecogs.com/eqnedit.php\" ><img src=\"http://latex.codecogs.com/gif.latex?\\sigma_p\"  /></a> is the scale of the price (20 Euros in this case).\n\nIn contrast to the normal and exponential decay, this function actually sets the score to 0 if the field value exceeds the user gived scale value.\n## Supported fields\n\nOnly single valued numeric fields, including time and geo locations, should be supported. \n## What is a field is missing?\n\nIs the numeric field is missing in the document, that field should not be taken into account at all for this document.\n## Consolidate with custom_boost_factor, custom_score and custom_filters_score\n\nIt might make sense to consolidate this functionality with the custom_boost_factor, custom_score and custom_filters_score. \nSee https://github.com/elasticsearch/elasticsearch/issues/3407\n","closed_by":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"performed_via_github_app":null}