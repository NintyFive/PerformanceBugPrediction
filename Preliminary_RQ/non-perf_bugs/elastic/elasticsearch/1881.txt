{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/1881","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1881/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1881/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1881/events","html_url":"https://github.com/elastic/elasticsearch/issues/1881","id":4238071,"node_id":"MDU6SXNzdWU0MjM4MDcx","number":1881,"title":"Add ability to add pure load balancer that doesn't do aggregation ","user":{"login":"avar","id":45301,"node_id":"MDQ6VXNlcjQ1MzAx","avatar_url":"https://avatars3.githubusercontent.com/u/45301?v=4","gravatar_id":"","url":"https://api.github.com/users/avar","html_url":"https://github.com/avar","followers_url":"https://api.github.com/users/avar/followers","following_url":"https://api.github.com/users/avar/following{/other_user}","gists_url":"https://api.github.com/users/avar/gists{/gist_id}","starred_url":"https://api.github.com/users/avar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avar/subscriptions","organizations_url":"https://api.github.com/users/avar/orgs","repos_url":"https://api.github.com/users/avar/repos","events_url":"https://api.github.com/users/avar/events{/privacy}","received_events_url":"https://api.github.com/users/avar/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2012-04-23T10:50:47Z","updated_at":"2013-07-15T17:14:18Z","closed_at":"2013-07-15T17:14:18Z","author_association":"NONE","active_lock_reason":null,"body":"Currently if you set `node.data=false` and `node.master=false` you can set up a load-balancer-ish node that just routes queries to other boxes, but the problem for some setups is that those nodes do the aggregation phase as well.\n\nI'd like to have the ability to set up a local ES node that _only_ does proxying to other nodes in the cluster. I.e. it would pick some node, run a query on it, and then that node would ask other machines for data if needed, do the aggregation, and only return results.\n\nThis would enable me to use ElasticSearch as a daemon on webserving boxes that keeps track of what nodes are currently active / OK,  I could make queries to it on localhost:9200, but because it wouldn't do any aggregation the resources it would eat would be very predictable.\n","closed_by":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"performed_via_github_app":null}