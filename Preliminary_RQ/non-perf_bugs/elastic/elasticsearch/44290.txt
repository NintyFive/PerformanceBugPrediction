{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/44290","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44290/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44290/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44290/events","html_url":"https://github.com/elastic/elasticsearch/issues/44290","id":467512668,"node_id":"MDU6SXNzdWU0Njc1MTI2Njg=","number":44290,"title":"Optimize Min and Max BKD optimizations :)","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":92913858,"node_id":"MDU6TGFiZWw5MjkxMzg1OA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/good%20first%20issue","name":"good first issue","color":"07569b","default":true,"description":"low hanging fruit"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-07-12T17:02:18Z","updated_at":"2019-08-26T15:43:33Z","closed_at":"2019-08-26T15:43:33Z","author_association":"MEMBER","active_lock_reason":null,"body":"The Max aggregator has an optimization to use the BKD tree in an attempt to find the max, bypassing an expensive collection of all documents.  It does this by checking the largest leaf in the tree to see if we can find the max.  Today this process [decodes the packed value](https://github.com/elastic/elasticsearch/blob/master/server/src/main/java/org/elasticsearch/search/aggregations/metrics/MaxAggregator.java#L189) for every live doc in the leaf, which is not necessary.  We could instead just cache the packed value and decode after intersecting.\r\n\r\nThe Min aggregator works a little differently.  Since values are sorted ascending in the BKD tree, we can start at the beginning and [iterate until we find a live doc](https://github.com/elastic/elasticsearch/blob/master/server/src/main/java/org/elasticsearch/search/aggregations/metrics/MinAggregator.java#L222) (e.g. non-deleted document) then exit and use that value.\r\n\r\nThis is potentially problematic if there are many or mostly deleted documents, since we could spend a long time traversing the BKD tree.  It might be faster to actually collect the documents normally since those skip deleted documents.  We should probably include some kind of heuristic and revert to the non-BKD approach if we can't find the value (max 1024 lookups?) \r\n\r\nThis would be a good first issue for someone wanting to get into the agg framework, or learn how the BKD tree works, or both :)","closed_by":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"performed_via_github_app":null}