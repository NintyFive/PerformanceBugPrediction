{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3488","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3488/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3488/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3488/events","html_url":"https://github.com/elastic/elasticsearch/issues/3488","id":17942788,"node_id":"MDU6SXNzdWUxNzk0Mjc4OA==","number":3488,"title":"Add multi percolate api","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"labels":[{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":37906111,"node_id":"MDU6TGFiZWwzNzkwNjExMQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.0.0.Beta1","name":"v1.0.0.Beta1","color":"DDDDDD","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"assignees":[{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2013-08-12T14:20:24Z","updated_at":"2013-09-03T12:32:09Z","closed_at":"2013-08-12T16:33:12Z","author_association":"MEMBER","active_lock_reason":null,"body":"The multi percolate allows the bundle multiple percolate requests into one request. This api works similar to the multi search api.\n\nThe request body format is line based. Each percolate request item takes two lines, the first line is the header and the second line is the body.\n\nThe header can contain any parameter that normally would be set via the request path or query string parameters. There are several percolate actions, because there are multiple types of percolate requests:\n- `percolate` - Action for defining a regular percolate request.\n- `count` - Action for defining a count percolate request.\n\nEach action has its own set of parameters that need to be specified in the percolate action.\nFormat:\n\n```\n{\"[header_type]\" : {[options...]}\n{[body]}\n```\n\nDepending on the percolate action different parameters can be specified. For example the percolate and percolate existing document actions support different parameters.\n\nThe following endpoints are supported:\n\n```\nPOST localhost:9200/[index]/[type]/_mpercolate\nPOST localhost:9200/[index]/_mpercolate\nPOST localhost:9200/_mpercolate\n```\n\nThe `index` and `type` defined in the url path are the default index and type.\n## Example\n#### Request:\n\n``` bash\ncurl -XGET 'localhost:9200/twitter/tweet/_mpercolate' --data-binary @requests.txt; echo\n```\n\nThe index twitter is the default index and the type tweet is the default type and will be used in the case a header doesn't specify an index or type.\n##### requests.txt:\n\n```\n{\"percolate\" : {\"index\" : twitter\", \"type\" : \"tweet\"}}\n{\"doc\" : {\"message\" : \"some text\"}}\n{\"percolate\" : \"index\" : twitter\", \"type\" : \"tweet\", \"id\" : \"1\"}\n{}\n{\"percolate\" : \"index\" : users\", \"type\" : \"user\", \"id\" : \"3\", \"percolate_index\" : \"users_2012\" }\n{\"size\" : 10}\n{\"count\" : {\"index\" : twitter\", \"type\" : \"tweet\"}}\n{\"doc\" : {\"message\" : \"some other text\"}}\n{\"count\" : \"index\" : twitter\", \"type\" : \"tweet\", \"id\" : \"1\"}\n{}\n```\n\nFor a percolate existing document item (headers with the `id` field), the response can be an empty json object. All the required options are set in the header.\n#### Response:\n\n``` json\n{\n    \"items\" : [\n        {\n            \"took\" : 24,\n            \"_shards\" : {\n                \"total\" : 5,\n                \"successful\" : 5,\n                \"failed\" : 0,\n            },\n            \"total\" : 3,\n            \"matches\" : [\"1\", \"2\", \"3\"]\n        },\n        {\n            \"took\" : 12,\n            \"_shards\" : {\n                \"total\" : 5,\n                \"successful\" : 5,\n                \"failed\" : 0,\n            },\n            \"total\" : 3,\n            \"matches\" : [\"4\", \"5\", \"6\"]\n        },\n        {\n            \"error\" : \"[user][3]document missing\"\n        },\n        {\n            \"took\" : 12,\n            \"_shards\" : {\n                \"total\" : 5,\n                \"successful\" : 5,\n                \"failed\" : 0,\n            },\n            \"total\" : 3\n        },\n        {\n            \"took\" : 14,\n            \"_shards\" : {\n                \"total\" : 5,\n                \"successful\" : 5,\n                \"failed\" : 0,\n            },\n            \"total\" : 3\n        }\n    ]\n}\n```\n\nEach item represents a percolate response, the order of the items maps to the order in where the percolate requests were specified. In case a percolate request failed, the item response is substituted with an error message. \n","closed_by":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"performed_via_github_app":null}