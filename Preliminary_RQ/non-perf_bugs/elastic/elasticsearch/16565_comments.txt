[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/182412560","html_url":"https://github.com/elastic/elasticsearch/issues/16565#issuecomment-182412560","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16565","id":182412560,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MjQxMjU2MA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-02-10T15:06:05Z","updated_at":"2016-02-10T15:06:05Z","author_association":"MEMBER","body":"interesting point. It raises additional questions though, especially with the node ingest addition.\n\nAt the moment, when `node.client` is set to true a node cannot become master nor can hold data. Yet we would need to double check what the precedence is if one specifies also `node.data` or `node.master`... When it comes to `node.ingest`, the assumption is that client nodes can do ingestion, so `node.client` set to `false` doesn't turn ingestion off at the moment, you need to set `node.ingest` to `false` too. I tend to find the `node.client` setting confusing and hard to handle internally at this point, maybe we could keep the setting but make it a shortcut to what it needs to be internally?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/182417330","html_url":"https://github.com/elastic/elasticsearch/issues/16565#issuecomment-182417330","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16565","id":182417330,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MjQxNzMzMA==","user":{"login":"pickypg","id":1501235,"node_id":"MDQ6VXNlcjE1MDEyMzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1501235?v=4","gravatar_id":"","url":"https://api.github.com/users/pickypg","html_url":"https://github.com/pickypg","followers_url":"https://api.github.com/users/pickypg/followers","following_url":"https://api.github.com/users/pickypg/following{/other_user}","gists_url":"https://api.github.com/users/pickypg/gists{/gist_id}","starred_url":"https://api.github.com/users/pickypg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pickypg/subscriptions","organizations_url":"https://api.github.com/users/pickypg/orgs","repos_url":"https://api.github.com/users/pickypg/repos","events_url":"https://api.github.com/users/pickypg/events{/privacy}","received_events_url":"https://api.github.com/users/pickypg/received_events","type":"User","site_admin":false},"created_at":"2016-02-10T15:11:44Z","updated_at":"2016-02-10T15:11:44Z","author_association":"MEMBER","body":"> I tend to find the `node.client` setting confusing and hard to handle internally at this point, maybe we could keep the setting but make it a shortcut to what it needs to be internally?\n\nI completely agree and I love the idea.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/183275331","html_url":"https://github.com/elastic/elasticsearch/issues/16565#issuecomment-183275331","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16565","id":183275331,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzI3NTMzMQ==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-02-12T11:01:17Z","updated_at":"2016-02-12T11:01:17Z","author_association":"MEMBER","body":"We discussed this during FixItFriday. We reached consensus that the `node.client` setting adds confusion and should be removed in favour of being explicit and say `node.master: false` and `node.data: false`. Being explicit would also make things less confusing around the `node.ingest` setting that was recently added (whether a client node does ingestion or not).\n\nWe don't really need to keep `node.client` around as a shortcut as we now validate settings and we can fail at startup from the next major version on if anybody uses the `node.client` setting. We need to be careful with node attributes as they don't have their own namespace as part of settings, so we should be careful that if somebody specifies `node.client` we fail and we don't treat it as a node attribute (or take the chance to give node attributes their namespace).\n\nLast bit is we need to update documentation and code to make sure that client nodes are not mentioned anywhere. This will have an impact on the rest output of some apis like cluster stats, as `client` should not be used there anymore.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/183450131","html_url":"https://github.com/elastic/elasticsearch/issues/16565#issuecomment-183450131","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16565","id":183450131,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzQ1MDEzMQ==","user":{"login":"jtharpla","id":2267289,"node_id":"MDQ6VXNlcjIyNjcyODk=","avatar_url":"https://avatars1.githubusercontent.com/u/2267289?v=4","gravatar_id":"","url":"https://api.github.com/users/jtharpla","html_url":"https://github.com/jtharpla","followers_url":"https://api.github.com/users/jtharpla/followers","following_url":"https://api.github.com/users/jtharpla/following{/other_user}","gists_url":"https://api.github.com/users/jtharpla/gists{/gist_id}","starred_url":"https://api.github.com/users/jtharpla/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtharpla/subscriptions","organizations_url":"https://api.github.com/users/jtharpla/orgs","repos_url":"https://api.github.com/users/jtharpla/repos","events_url":"https://api.github.com/users/jtharpla/events{/privacy}","received_events_url":"https://api.github.com/users/jtharpla/received_events","type":"User","site_admin":false},"created_at":"2016-02-12T18:56:30Z","updated_at":"2016-02-12T18:56:30Z","author_association":"NONE","body":"Wouldn't node.master: false and node.data: false still result in an implicit client node? Seems like that that should still be included in the documentation, along with possible use cases where one might want such client nodes.  Or is there an intention to move away from the concept of client nodes altogether? (in other words is this more than a config change, but actually a shift in what architectures are recommended/supported?)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/183541557","html_url":"https://github.com/elastic/elasticsearch/issues/16565#issuecomment-183541557","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16565","id":183541557,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzU0MTU1Nw==","user":{"login":"pickypg","id":1501235,"node_id":"MDQ6VXNlcjE1MDEyMzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1501235?v=4","gravatar_id":"","url":"https://api.github.com/users/pickypg","html_url":"https://github.com/pickypg","followers_url":"https://api.github.com/users/pickypg/followers","following_url":"https://api.github.com/users/pickypg/following{/other_user}","gists_url":"https://api.github.com/users/pickypg/gists{/gist_id}","starred_url":"https://api.github.com/users/pickypg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pickypg/subscriptions","organizations_url":"https://api.github.com/users/pickypg/orgs","repos_url":"https://api.github.com/users/pickypg/repos","events_url":"https://api.github.com/users/pickypg/events{/privacy}","received_events_url":"https://api.github.com/users/pickypg/received_events","type":"User","site_admin":false},"created_at":"2016-02-13T00:30:46Z","updated_at":"2016-02-13T01:06:47Z","author_association":"MEMBER","body":"@jtharpla \n\n> Wouldn't node.master: false and node.data: false still result in an implicit client node?\n\nYes. This is currently true and it will be true afterward.\n\n> Seems like that that should still be included in the documentation\n\nI agree, but thankfully we recently [rewrote the node module in our documentation](https://www.elastic.co/guide/en/elasticsearch/reference/2.2/modules-node.html). This actually avoids using `node.client` for pretty much the reason of this ticket -- it's confusing.\n\n> Or is there an intention to move away from the concept of client nodes altogether?\n\nNo, we're keeping the idea around. Node clients serve a good and reasonable purpose for large clusters (at least for now).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/187030840","html_url":"https://github.com/elastic/elasticsearch/issues/16565#issuecomment-187030840","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16565","id":187030840,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NzAzMDg0MA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-02-22T06:18:17Z","updated_at":"2016-02-22T06:18:17Z","author_association":"MEMBER","body":"I am working on this, and made good progress, but we need to figure out how to update the cluster stats api output. We currently have `master_only`, `data_only`, `master_data` and `client`. Ingest nodes should be taken into account too, but then the combinations become more than just current 4 that we have. There can potentially be `master_ingest`, `data_ingest`, `master_data_ingest` & `ingest_only` nodes in addition to the ones listed above. We could expose all of the different combinations, or do we only want to report the most common ones (e.g. master_ingest and data_ingest shouldn't get that popular)?\n\nI would also rename `client` to `coordinating_only` to try and clarify what those nodes do.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/187031491","html_url":"https://github.com/elastic/elasticsearch/issues/16565#issuecomment-187031491","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16565","id":187031491,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NzAzMTQ5MQ==","user":{"login":"pickypg","id":1501235,"node_id":"MDQ6VXNlcjE1MDEyMzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1501235?v=4","gravatar_id":"","url":"https://api.github.com/users/pickypg","html_url":"https://github.com/pickypg","followers_url":"https://api.github.com/users/pickypg/followers","following_url":"https://api.github.com/users/pickypg/following{/other_user}","gists_url":"https://api.github.com/users/pickypg/gists{/gist_id}","starred_url":"https://api.github.com/users/pickypg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pickypg/subscriptions","organizations_url":"https://api.github.com/users/pickypg/orgs","repos_url":"https://api.github.com/users/pickypg/repos","events_url":"https://api.github.com/users/pickypg/events{/privacy}","received_events_url":"https://api.github.com/users/pickypg/received_events","type":"User","site_admin":false},"created_at":"2016-02-22T06:23:35Z","updated_at":"2016-02-22T06:23:35Z","author_association":"MEMBER","body":"I don't like not reporting them. Perhaps we can use an `EnumSet`, though I don't necessarily want to pass that over the wire? However, doing that (or equivalent!) should be much simpler than trying to pass around all of the various checks.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/187033563","html_url":"https://github.com/elastic/elasticsearch/issues/16565#issuecomment-187033563","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16565","id":187033563,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NzAzMzU2Mw==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-02-22T06:29:28Z","updated_at":"2016-02-22T06:29:28Z","author_association":"MEMBER","body":"Let's try and decide what we want to return from the REST layer first. @pickypg I take it that you would be ok with having 8 different node type combinations returned rather than the current 4?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/187034213","html_url":"https://github.com/elastic/elasticsearch/issues/16565#issuecomment-187034213","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16565","id":187034213,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NzAzNDIxMw==","user":{"login":"pickypg","id":1501235,"node_id":"MDQ6VXNlcjE1MDEyMzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1501235?v=4","gravatar_id":"","url":"https://api.github.com/users/pickypg","html_url":"https://github.com/pickypg","followers_url":"https://api.github.com/users/pickypg/followers","following_url":"https://api.github.com/users/pickypg/following{/other_user}","gists_url":"https://api.github.com/users/pickypg/gists{/gist_id}","starred_url":"https://api.github.com/users/pickypg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pickypg/subscriptions","organizations_url":"https://api.github.com/users/pickypg/orgs","repos_url":"https://api.github.com/users/pickypg/repos","events_url":"https://api.github.com/users/pickypg/events{/privacy}","received_events_url":"https://api.github.com/users/pickypg/received_events","type":"User","site_admin":false},"created_at":"2016-02-22T06:31:01Z","updated_at":"2016-02-22T06:31:01Z","author_association":"MEMBER","body":"@javanna I would. I think it makes it a lot easier to debug, if necessary. It sucks though because suddenly we're left with `2^n` combinations (where `n` is fortunately just `3` for now), but I'd rather than that semi-arbitrarily hiding some.\n\nI expect some small scale instances to use `data_ingest` for example.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/187034888","html_url":"https://github.com/elastic/elasticsearch/issues/16565#issuecomment-187034888","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16565","id":187034888,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NzAzNDg4OA==","user":{"login":"pickypg","id":1501235,"node_id":"MDQ6VXNlcjE1MDEyMzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1501235?v=4","gravatar_id":"","url":"https://api.github.com/users/pickypg","html_url":"https://github.com/pickypg","followers_url":"https://api.github.com/users/pickypg/followers","following_url":"https://api.github.com/users/pickypg/following{/other_user}","gists_url":"https://api.github.com/users/pickypg/gists{/gist_id}","starred_url":"https://api.github.com/users/pickypg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pickypg/subscriptions","organizations_url":"https://api.github.com/users/pickypg/orgs","repos_url":"https://api.github.com/users/pickypg/repos","events_url":"https://api.github.com/users/pickypg/events{/privacy}","received_events_url":"https://api.github.com/users/pickypg/received_events","type":"User","site_admin":false},"created_at":"2016-02-22T06:32:40Z","updated_at":"2016-02-22T06:32:40Z","author_association":"MEMBER","body":"Maybe we can flip the REST layer around, similar to the Java layer. If the response is just an array of the node types that it _is_, then all of the combinations can be determined by the client. Then we can avoid the combinatorial nightmare (and empty implies `coordinating_only`).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/187275134","html_url":"https://github.com/elastic/elasticsearch/issues/16565#issuecomment-187275134","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16565","id":187275134,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NzI3NTEzNA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-02-22T17:17:01Z","updated_at":"2016-02-22T17:17:01Z","author_association":"MEMBER","body":"ok let's see what @clintongormley thinks about the proposed changes api-wise.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/190221563","html_url":"https://github.com/elastic/elasticsearch/issues/16565#issuecomment-190221563","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16565","id":190221563,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MDIyMTU2Mw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-02-29T13:54:27Z","updated_at":"2016-02-29T13:54:27Z","author_association":"CONTRIBUTOR","body":"The `_cluster/stats` API provides a summary (the details can be checked in the nodes-info API), so I think the right thing to do here is to report how many nodes there are in each role, eg:\n\n```\n\"total\": 8,\n\"master\": 3,\n\"data\": 5,\n\"ingest\": 2,\n....\n```\n\nI don't think we should return combinations like `master_data` as those will just explode as we add more roles.  The only weird one is \"how many nodes are there that act only as clients\" (because all nodes can act as clients).  Perhaps this can be represented with `client_only`\n\n> I tend to find the node.client setting confusing and hard to handle internally at this point, maybe we could keep the setting but make it a shortcut to what it needs to be internally?\n\nI agree - easier than setting 3, 4, ... N other default roles to false.\n\n> We need to be careful with node attributes as they don't have their own namespace as part of settings, so we should be careful that if somebody specifies node.client we fail and we don't treat it as a node attribute (or take the chance to give node attributes their namespace).\n\nNode attributes should really be moved into their own namespace so that we can be strict about settings, otherwise we're just guessing.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/190261974","html_url":"https://github.com/elastic/elasticsearch/issues/16565#issuecomment-190261974","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16565","id":190261974,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MDI2MTk3NA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-02-29T15:42:50Z","updated_at":"2016-02-29T15:42:50Z","author_association":"MEMBER","body":"On keeping `node.client` as a shortcut, I thought more about it and it may make things even more confusing, cause then people will have a setting in their configuration that is not in their final settings. And still people will keep on wondering \"does client:true mean ingest:false or not?\", note that at the moment a node client is an ingest node unless `node.ingest` is set to `false`, which is right or wrong depending on how you ask :) Being explicit seems the best way to remove ambiguity. I think the best way to go is to reject `node.client` with an error at startup. Would you agree @clintongormley ?\n\nOn the combinations, I follow your reasoning, but I am afraid that `master_only`, `ingest_only`, `data_only` and `coordinating_only` (I would get rid of the client terminology) may come in handy to have a quick overview, otherwise the summary may become less useful, especially with many nodes and multiple roles. Shall we maybe have these 4 plus the totals as you mentioned? Just throwing it out there, not sure it's a great idea though.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/190328865","html_url":"https://github.com/elastic/elasticsearch/issues/16565#issuecomment-190328865","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16565","id":190328865,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MDMyODg2NQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2016-02-29T18:46:42Z","updated_at":"2016-02-29T18:46:42Z","author_association":"MEMBER","body":"> Node attributes should really be moved into their own namespace so that we can be strict about settings, otherwise we're just guessing.\n\nI agree that node attributes should have their own namespace, but I also think that continuing to have confusing settings/semantics for node roles, instead of renaming/changing semantics, only hurts users. the argument I have heard supporting a need for keeping the old names is always \"but there are so many users/articles out there that know/use this name\". My counter argument is as users continue to grow, new users should not be forced into confusion by antiquated naming. We should always strive to rename things when appropriate to help the new users, and at the same time find ways to help old users migrate (eg forcing functions like failing on startup with old names, with helpful error messages).\n\nI remember two discussions before about node \"roles\" that I will summarize here.  The first is having a single `node.roles` setting, which is an array of the allowed roles on a node.  For example, having `node.roles: [\"master_eligible\", \"data\", \"coordinating\"]`. This would make it very clear, in a single setting, all the roles the node can play in the cluster. The other idea was about being explicit with the combinations that are allowed. For example, `node.type: \"master_data_coordinating\"`. The problem with this was the explosion of combinations as new node types are added, but I included it here for completeness.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/190331981","html_url":"https://github.com/elastic/elasticsearch/issues/16565#issuecomment-190331981","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16565","id":190331981,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MDMzMTk4MQ==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-02-29T18:56:11Z","updated_at":"2016-02-29T18:56:11Z","author_association":"MEMBER","body":"No need to discuss the node attributes problem here, everybody agrees, we will address it in a followup PR, my comment was to remember that we have to take those into account if we want to remove node.client or client will become a node attribute which is bad.\n\nI think we should make baby steps and get rid of `node.client` that is confusing, especially since we have ingest nodes too. I would love to move forward solving the problem reported here, as I said I have an upcoming PR and the main issue was what to do with cluster stats api, which @clintongormley replied to. We can reason about renaming etc. later I think. PR coming tomorrow :)\n","performed_via_github_app":null}]