{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/28833","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28833/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28833/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28833/events","html_url":"https://github.com/elastic/elasticsearch/issues/28833","id":300576928,"node_id":"MDU6SXNzdWUzMDA1NzY5Mjg=","number":28833,"title":"Bulk-update using Java Rest Client throws IOException","user":{"login":"shobhanaquickride","id":13916800,"node_id":"MDQ6VXNlcjEzOTE2ODAw","avatar_url":"https://avatars3.githubusercontent.com/u/13916800?v=4","gravatar_id":"","url":"https://api.github.com/users/shobhanaquickride","html_url":"https://github.com/shobhanaquickride","followers_url":"https://api.github.com/users/shobhanaquickride/followers","following_url":"https://api.github.com/users/shobhanaquickride/following{/other_user}","gists_url":"https://api.github.com/users/shobhanaquickride/gists{/gist_id}","starred_url":"https://api.github.com/users/shobhanaquickride/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shobhanaquickride/subscriptions","organizations_url":"https://api.github.com/users/shobhanaquickride/orgs","repos_url":"https://api.github.com/users/shobhanaquickride/repos","events_url":"https://api.github.com/users/shobhanaquickride/events{/privacy}","received_events_url":"https://api.github.com/users/shobhanaquickride/received_events","type":"User","site_admin":false},"labels":[{"id":407508641,"node_id":"MDU6TGFiZWw0MDc1MDg2NDE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Java%20Low%20Level%20REST%20Client","name":":Core/Features/Java Low Level REST Client","color":"0e8a16","default":false,"description":"Minimal dependencies Java Client for Elasticsearch"},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-02-27T10:41:09Z","updated_at":"2018-03-02T17:45:14Z","closed_at":"2018-03-02T09:14:41Z","author_association":"NONE","active_lock_reason":null,"body":"<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 6.0.0\r\n\r\n**Plugins installed**: [None]\r\n\r\n**JVM version** (`java -version`): 1.8.0_45\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): Windows 10 64-bit OS\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nI am trying to bulk update one field in many documents using Java Rest Client. Here is how my code looks like :\r\n```\r\nString updateLastUsedTimeInBulkPath = \"/_bulk\"; // Tried with just \"_bulk\" also\r\nStringEntity updateLastUsedTimeRequest = new StringEntity(jsonStringToUpdateLastUsedTimeInBulk);\r\nupdateLastUsedTimeRequest.setContentType(\"application/x-ndjson\");\r\nelasticServerRestClient.performRequest(\"POST\", updateLastUsedTimeInBulkPath, Collections.<String, String>emptyMap(), updateLastUsedTimeRequest);\r\n```\r\njsonStringToUpdateLastUsedTimeInBulk in the above code looks like the following :\r\n```\r\n{ \"update\" : {\"_index\" : \"routematch\", \"_type\" : \"routematch\", \"_id\" : \"2686101,8264892\"} }\r\n{ \"doc\" : {\"lastUsedTime\" : \"1519221900208\"} }\r\n{ \"update\" : {\"_index\" : \"routematch\", \"_type\" : \"routematch\", \"_id\" : \"2686101,2686101\"} }\r\n{ \"doc\" : {\"lastUsedTime\" : \"1519221900209\"} }\r\n```\r\n\r\nMapping is as follows :\r\n```\r\nPUT routematch\r\n{\r\n  \"settings\": {\r\n    \"number_of_shards\": 5,\r\n    \"auto_expand_replicas\": \"0-all\"\r\n  },\r\n  \"mappings\": {\r\n    \"routematch\": {\r\n      \"properties\": {\r\n        ..............,\r\n        \"lastUsedTime\": {\"type\": \"long\"}\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nI tried to execute the same using Kibana and it worked fine and updated the field in all documents, but it always fails when executed using Java RestClient with following exception :\r\n```\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method) ~[?:1.7.0_79]\r\n\tat sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43) ~[?:1.7.0_79]\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223) ~[?:1.7.0_79]\r\n\tat sun.nio.ch.IOUtil.read(IOUtil.java:197) ~[?:1.7.0_79]\r\n\tat sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:379) ~[?:1.7.0_79]\r\n\tat org.apache.http.impl.nio.conn.LoggingIOSession$LoggingByteChannel.read(LoggingIOSession.java:204) ~[httpasyncclient-4.1.2.jar:4.1.2]\r\n\tat org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill(SessionInputBufferImpl.java:204) ~[httpcore-nio-4.4.5.jar:4.4.5]\r\n\tat org.apache.http.impl.nio.codecs.AbstractMessageParser.fillBuffer(AbstractMessageParser.java:136) ~[httpcore-nio-4.4.5.jar:4.4.5]\r\n\tat org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput(DefaultNHttpClientConnection.java:241) ~[httpcore-nio-4.4.5.jar:4.4.5]\r\n\tat org.apache.http.impl.nio.client.InternalIODispatch.onInputReady(InternalIODispatch.java:81) ~[httpasyncclient-4.1.2.jar:4.1.2]\r\n\tat org.apache.http.impl.nio.client.InternalIODispatch.onInputReady(InternalIODispatch.java:39) ~[httpasyncclient-4.1.2.jar:4.1.2]\r\n\tat org.apache.http.impl.nio.reactor.AbstractIODispatch.inputReady(AbstractIODispatch.java:114) ~[httpcore-nio-4.4.5.jar:4.4.5]\r\n\tat org.apache.http.impl.nio.reactor.BaseIOReactor.readable(BaseIOReactor.java:162) ~[httpcore-nio-4.4.5.jar:4.4.5]\r\n\tat org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent(AbstractIOReactor.java:337) ~[httpcore-nio-4.4.5.jar:4.4.5]\r\n\tat org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvents(AbstractIOReactor.java:315) ~[httpcore-nio-4.4.5.jar:4.4.5]\r\n\tat org.apache.http.impl.nio.reactor.AbstractIOReactor.execute(AbstractIOReactor.java:276) ~[httpcore-nio-4.4.5.jar:4.4.5]\r\n\tat org.apache.http.impl.nio.reactor.BaseIOReactor.execute(BaseIOReactor.java:104) ~[httpcore-nio-4.4.5.jar:4.4.5]\r\n\tat org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker.run(AbstractMultiworkerIOReactor.java:588) ~[httpcore-nio-4.4.5.jar:4.4.5]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.7.0_79]\r\n```\r\n\r\nExpected Result : Field value has to be updated in specified documents\r\nActual Result : IOException\r\n\r\n**Steps to reproduce**:\r\n 1. Create an index and a type\r\n 2. Ingest data\r\n 3. Use Java RestClient to bulk-update few fields in several documents\r\n\r\n**Provide logs (if relevant)**:\r\nCouldn't find any logs in elastic search during this time.\r\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}