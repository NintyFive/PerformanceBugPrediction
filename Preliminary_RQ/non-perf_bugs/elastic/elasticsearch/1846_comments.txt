[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/8380080","html_url":"https://github.com/elastic/elasticsearch/issues/1846#issuecomment-8380080","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1846","id":8380080,"node_id":"MDEyOklzc3VlQ29tbWVudDgzODAwODA=","user":{"login":"DominicWatson","id":471162,"node_id":"MDQ6VXNlcjQ3MTE2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/471162?v=4","gravatar_id":"","url":"https://api.github.com/users/DominicWatson","html_url":"https://github.com/DominicWatson","followers_url":"https://api.github.com/users/DominicWatson/followers","following_url":"https://api.github.com/users/DominicWatson/following{/other_user}","gists_url":"https://api.github.com/users/DominicWatson/gists{/gist_id}","starred_url":"https://api.github.com/users/DominicWatson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DominicWatson/subscriptions","organizations_url":"https://api.github.com/users/DominicWatson/orgs","repos_url":"https://api.github.com/users/DominicWatson/repos","events_url":"https://api.github.com/users/DominicWatson/events{/privacy}","received_events_url":"https://api.github.com/users/DominicWatson/received_events","type":"User","site_admin":false},"created_at":"2012-09-07T21:48:44Z","updated_at":"2012-09-07T21:48:44Z","author_association":"NONE","body":"While waiting for this enhancement, I've managed to get this working using the scripting functionality of ElasticSearch (which I have to say is utterly awesome, this is such a refreshing API to work with). \n\nThe following solution is very rough. It currently only supports kilometers and the `lang-javascript` plugin is required.\n\n## A temporary solution\n\nI have the following javascript in `./config/scripts/geo/closestdistance.js`:\n\n```\n(function(){\n    var i, locations, calculateDistance, closest, distance;\n\n    if ( !doc['latlon'].multiValued ){\n        return doc['latlon'].distanceInKm( lat, lon )\n    }\n\n    calculateDistance = function( lat1, lat2, lon1, lon2 ){\n        var R = 6371 // km\n          , dLat = (lat2-lat1) * Math.PI / 180\n          , dLon = (lon2-lon1) * Math.PI / 180\n          , lat1 = lat1 * Math.PI / 180\n          , lat2 = lat2 * Math.PI / 180\n          , a = Math.sin(dLat/2) * Math.sin(dLat/2) + Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2)\n          , c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n\n        return R * c;\n    }\n\n    locations = doc['latlon'].getValues();\n    closest = calculateDistance( lat, locations[0].lat(), lon, locations[0].lon() );\n\n    for( i=1; i < locations.length; i++ ){\n        distance = calculateDistance( lat, locations[i].lat(), lon, locations[i].lon() );\n        closest = distance < closest ? distance : closest;\n    }\n\n    return closest;\n})();\n```\n\nThen, in my search body, I have something like:\n\n```\n{\n    query : {\n        custom_score : {\n              query : {\n                  query_string : {\n                      query : \"myquerystring...\"\n                  }\n              }\n            , params : {\n                  lat : 54.5881\n                , lon : -5.85829\n              }\n            , script : \"geo_closestdistance\"\n        }\n    },\n    sort : [{_score : { order : \"asc\"}}]\n}\n```\n\nHopefully someone will find this useful.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/8384391","html_url":"https://github.com/elastic/elasticsearch/issues/1846#issuecomment-8384391","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1846","id":8384391,"node_id":"MDEyOklzc3VlQ29tbWVudDgzODQzOTE=","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"created_at":"2012-09-08T04:12:04Z","updated_at":"2012-09-08T04:12:04Z","author_association":"NONE","body":"jest sewz you know dominic:  ESP dev centre left geo-location searching \nas a rectangulation problem, despite how the measurements are laid out \non the globe.  That was  the search engine bought by Microsoft. I've no \nidea if they got geo into SharePoint search and whether they got \nsomething smarter than right angles... i look forward to leveraging this \nsolution.\n\nb.\n\nOn 09/07/2012 05:48 PM, Dominic Watson wrote:\n\n> While waiting for this enhancement, I've managed to get this working \n> using the scripting functionality of ElasticSearch (which I have to \n> say is utterly awesome, this is such a refreshing API to work with).\n> \n> The following solution is very rough. It currently only supports \n> kilometers and the |lang-javascript| plugin is required.\n> \n> ```\n> A temporary solution\n> ```\n> \n> I have the following javascript in \n> |./config/scripts/geo/closestdistance.js|:\n> \n> |(function(){\n>      var i, locations, calculateDistance, closest, distance;\n> \n> ```\n>  if ( !doc['latlon'].multiValued ){\n>      return doc['latlon'].distanceInKm( lat, lon )\n>  }\n> \n>  calculateDistance = function( lat1, lat2, lon1, lon2 ){\n>      var R = 6371 // km\n>        , dLat = (lat2-lat1) * Math.PI / 180\n>        , dLon = (lon2-lon1) * Math.PI / 180\n>        , lat1 = lat1 * Math.PI / 180\n>        , lat2 = lat2 * Math.PI / 180\n>        , a = Math.sin(dLat/2) * Math.sin(dLat/2) + Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2)\n>        , c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n> \n>      return R * c;\n>  }\n> \n>  locations = doc['latlon'].getValues();\n>  closest = calculateDistance( lat, locations[0].lat(), lon, locations[0].lon() );\n> \n>  for( i=1; i < locations.length; i++ ){\n>      distance = calculateDistance( lat, locations[i].lat(), lon, locations[i].lon() );\n>      closest = distance < closest ? distance : closest;\n>  }\n> \n>  return closest;\n> ```\n> \n> })();\n> |\n> \n> Then, in my search body, I have something like:\n> \n> |{\n>      query : {\n>          custom_score : {\n>                query : {\n>                    query_string : {\n>                        query : \"myquerystring...\"\n>                    }\n>                }\n>              , params : {\n>                    lat : 54.5881\n>                  , lon : -5.85829\n>                }\n>              , script : \"geo_closestdistance\"\n>          }\n>      },\n>      sort : [{_score : { order : \"asc\"}}]\n> }\n> |\n> \n> Hopefully someone will find this useful.\n> \n> â€”\n> Reply to this email directly or view it on GitHub \n> https://github.com/elasticsearch/elasticsearch/issues/1846#issuecomment-8380080. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/15545482","html_url":"https://github.com/elastic/elasticsearch/issues/1846#issuecomment-15545482","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1846","id":15545482,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NTQ1NDgy","user":{"login":"tbug","id":195468,"node_id":"MDQ6VXNlcjE5NTQ2OA==","avatar_url":"https://avatars1.githubusercontent.com/u/195468?v=4","gravatar_id":"","url":"https://api.github.com/users/tbug","html_url":"https://github.com/tbug","followers_url":"https://api.github.com/users/tbug/followers","following_url":"https://api.github.com/users/tbug/following{/other_user}","gists_url":"https://api.github.com/users/tbug/gists{/gist_id}","starred_url":"https://api.github.com/users/tbug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbug/subscriptions","organizations_url":"https://api.github.com/users/tbug/orgs","repos_url":"https://api.github.com/users/tbug/repos","events_url":"https://api.github.com/users/tbug/events{/privacy}","received_events_url":"https://api.github.com/users/tbug/received_events","type":"User","site_admin":false},"created_at":"2013-03-27T18:52:05Z","updated_at":"2013-03-27T18:52:05Z","author_association":"NONE","body":"I would also very much like to see this implemented. \nPreferably controlled by the `mode` option as described in\nhttp://www.elasticsearch.org/guide/reference/api/search/sort/\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/15589986","html_url":"https://github.com/elastic/elasticsearch/issues/1846#issuecomment-15589986","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1846","id":15589986,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NTg5OTg2","user":{"login":"tbug","id":195468,"node_id":"MDQ6VXNlcjE5NTQ2OA==","avatar_url":"https://avatars1.githubusercontent.com/u/195468?v=4","gravatar_id":"","url":"https://api.github.com/users/tbug","html_url":"https://github.com/tbug","followers_url":"https://api.github.com/users/tbug/followers","following_url":"https://api.github.com/users/tbug/following{/other_user}","gists_url":"https://api.github.com/users/tbug/gists{/gist_id}","starred_url":"https://api.github.com/users/tbug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbug/subscriptions","organizations_url":"https://api.github.com/users/tbug/orgs","repos_url":"https://api.github.com/users/tbug/repos","events_url":"https://api.github.com/users/tbug/events{/privacy}","received_events_url":"https://api.github.com/users/tbug/received_events","type":"User","site_admin":false},"created_at":"2013-03-28T14:04:44Z","updated_at":"2013-03-28T14:04:44Z","author_association":"NONE","body":"As a response to @DominicWatson:\nThis will run ~30% faster:\n\n``` javascript\n(function(){\n    var i, locations, arcDist, closest, distance;\n    arcDist = function( lat1, lat2, lon1, lon2 ){\n        var R = 6371 // earth radius\n          , CI = 0.017453292519943295 // pi/180\n          , dLat = (lat2-lat1) * CI / 2\n          , dLon = (lon2-lon1) * CI / 2\n          , sinDLat = Math.sin(dLat)\n          , sinDLon = Math.sin(dLon)\n          , a = sinDLat*sinDLat + sinDLon*sinDLon * Math.cos(lat1*CI)*Math.cos(lat2*CI)\n          , c = 2*Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n        return R * c;\n    }\n    locations = doc[\"locations\"].getValues();\n    closest = arcDist( lat, locations[0].lat(), lon, locations[0].lon() );\n    for( i=1; i < locations.length; i++ ) {\n        distance = arcDist( lat, locations[i].lat(), lon, locations[i].lon() );\n        if(distance < closest) {\n          closest = distance;\n        }\n    }\n    return closest;\n})();\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/15597780","html_url":"https://github.com/elastic/elasticsearch/issues/1846#issuecomment-15597780","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1846","id":15597780,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NTk3Nzgw","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2013-03-28T16:17:52Z","updated_at":"2013-03-28T16:17:52Z","author_association":"MEMBER","body":"The next 0.90 release will have a `mode` option (min & max) support for sorting by geo distance.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/118840094","html_url":"https://github.com/elastic/elasticsearch/issues/1846#issuecomment-118840094","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1846","id":118840094,"node_id":"MDEyOklzc3VlQ29tbWVudDExODg0MDA5NA==","user":{"login":"mouzt","id":1528204,"node_id":"MDQ6VXNlcjE1MjgyMDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1528204?v=4","gravatar_id":"","url":"https://api.github.com/users/mouzt","html_url":"https://github.com/mouzt","followers_url":"https://api.github.com/users/mouzt/followers","following_url":"https://api.github.com/users/mouzt/following{/other_user}","gists_url":"https://api.github.com/users/mouzt/gists{/gist_id}","starred_url":"https://api.github.com/users/mouzt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouzt/subscriptions","organizations_url":"https://api.github.com/users/mouzt/orgs","repos_url":"https://api.github.com/users/mouzt/repos","events_url":"https://api.github.com/users/mouzt/events{/privacy}","received_events_url":"https://api.github.com/users/mouzt/received_events","type":"User","site_admin":false},"created_at":"2015-07-06T12:30:13Z","updated_at":"2015-07-06T12:30:13Z","author_association":"NONE","body":" Does this question have new solution which is not rough, now\n","performed_via_github_app":null}]