[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/731046716","html_url":"https://github.com/elastic/elasticsearch/issues/65302#issuecomment-731046716","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/65302","id":731046716,"node_id":"MDEyOklzc3VlQ29tbWVudDczMTA0NjcxNg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-11-20T09:14:38Z","updated_at":"2020-11-20T09:14:38Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed (Team:Distributed)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/731846378","html_url":"https://github.com/elastic/elasticsearch/issues/65302#issuecomment-731846378","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/65302","id":731846378,"node_id":"MDEyOklzc3VlQ29tbWVudDczMTg0NjM3OA==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2020-11-22T21:00:14Z","updated_at":"2020-11-22T21:00:14Z","author_association":"MEMBER","body":"I can reproduce this locally at a low(ish) rate with:\r\n\r\n```\r\nREPRODUCE WITH: ./gradlew ':x-pack:plugin:searchable-snapshots:internalClusterTest' --tests \"org.elasticsearch.xpack.searchablesnapshots.SearchableSnapshotsIntegTests.testCreateAndRestoreSearchableSnapshot\" -Dtests.seed=ABBA66EA22263E7E -Dtests.locale=hi -Dtests.timezone=Canada/Mountain -Druntime.java=15\r\n```\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/731855548","html_url":"https://github.com/elastic/elasticsearch/issues/65302#issuecomment-731855548","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/65302","id":731855548,"node_id":"MDEyOklzc3VlQ29tbWVudDczMTg1NTU0OA==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2020-11-22T22:13:01Z","updated_at":"2020-11-22T22:13:01Z","author_association":"MEMBER","body":"There's a number of funny races in the functionality around the pre-fetching here that can be reproduced via applying the following diff and running the failling test:\r\n\r\n```diff\r\ndiff --git a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotDirectory.java b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotDirectory.java\r\nindex acf506cec7b..0217da0af81 100644\r\n--- a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotDirectory.java\r\n+++ b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotDirectory.java\r\n@@ -457,6 +457,7 @@ public class SearchableSnapshotDirectory extends BaseDirectory {\r\n \r\n                         logger.trace(\"{} warming cache for [{}] part [{}/{}]\", shardId, file.physicalName(), part + 1, numberOfParts);\r\n                         final long startTimeInNanos = statsCurrentTimeNanosSupplier.getAsLong();\r\n+                        TimeUnit.SECONDS.sleep(1L);\r\n                         ((CachedBlobContainerIndexInput) input).prefetchPart(part);\r\n                         recoveryState.getIndex().addRecoveredBytesToFile(file.physicalName(), file.partBytes(part));\r\n```\r\n\r\nleading to failures via:\r\n\r\n```\r\nنوف 23, 2020 9:06:06 ص com.carrotsearch.randomizedtesting.RandomizedRunner$QueueUncaughtExceptionsHandler uncaughtException\r\nWARNING: Uncaught exception in thread: Thread[elasticsearch[node_s3][searchable_snapshots_cache_prewarming][T#9],5,TGRP-SearchableSnapshotsIntegTests]\r\njava.lang.AssertionError: listener already exists CacheFileReference{cacheKey='[snapshotId=qnkalgsyjp/fmGfEaHpRNGQszG3JWNO0w, indexId=[cphavvfupq/gD0DHtaRRvO4emlhKT1JPQ], shardId=[wpuxikeoah][1], fileName='_2_5.fnm']', fileLength=1129, acquired=false}\r\n\tat __randomizedtesting.SeedInfo.seed([D2761B7AE386973C]:0)\r\n\tat org.elasticsearch.index.store.cache.CacheFile.acquire(CacheFile.java:152)\r\n\tat org.elasticsearch.index.store.cache.CachedBlobContainerIndexInput$CacheFileReference.get(CachedBlobContainerIndexInput.java:781)\r\n\tat org.elasticsearch.index.store.cache.CachedBlobContainerIndexInput.prefetchPart(CachedBlobContainerIndexInput.java:441)\r\n\tat org.elasticsearch.index.store.SearchableSnapshotDirectory.lambda$prewarmCache$11(SearchableSnapshotDirectory.java:461)\r\n\tat org.elasticsearch.action.ActionRunnable$1.doRun(ActionRunnable.java:45)\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:733)\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)\r\n\tat java.base/java.lang.Thread.run(Thread.java:832)\r\n\r\nنوف 23, 2020 9:06:06 ص com.carrotsearch.randomizedtesting.RandomizedRunner$QueueUncaughtExceptionsHandler uncaughtException\r\nWARNING: Uncaught exception in thread: Thread[elasticsearch[node_s3][searchable_snapshots_cache_prewarming][T#1],5,TGRP-SearchableSnapshotsIntegTests]\r\njava.lang.AssertionError: listener already exists CacheFileReference{cacheKey='[snapshotId=qnkalgsyjp/fmGfEaHpRNGQszG3JWNO0w, indexId=[cphavvfupq/gD0DHtaRRvO4emlhKT1JPQ], shardId=[wpuxikeoah][1], fileName='_6.cfe']', fileLength=411, acquired=false}\r\n\tat __randomizedtesting.SeedInfo.seed([D2761B7AE386973C]:0)\r\n\tat org.elasticsearch.index.store.cache.CacheFile.acquire(CacheFile.java:152)\r\n\tat org.elasticsearch.index.store.cache.CachedBlobContainerIndexInput$CacheFileReference.get(CachedBlobContainerIndexInput.java:781)\r\n\tat org.elasticsearch.index.store.cache.CachedBlobContainerIndexInput.prefetchPart(CachedBlobContainerIndexInput.java:441)\r\n\tat org.elasticsearch.index.store.SearchableSnapshotDirectory.lambda$prewarmCache$11(SearchableSnapshotDirectory.java:461)\r\n\tat org.elasticsearch.action.ActionRunnable$1.doRun(ActionRunnable.java:45)\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:733)\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)\r\n\tat java.base/java.lang.Thread.run(Thread.java:832)\r\n```\r\n\r\nif you put that wait after the prefetching you get the test failure that we see here (or some variation of it):\r\n\r\n```\r\n\r\njava.lang.AssertionError: {\r\n  \"id\" : 1,\r\n  \"type\" : \"SNAPSHOT\",\r\n  \"stage\" : \"FINALIZE\",\r\n  \"primary\" : true,\r\n  \"start_time\" : \"2020-11-22T22:09:24.151Z\",\r\n  \"start_time_in_millis\" : 1606082964151,\r\n  \"total_time\" : \"495ms\",\r\n  \"total_time_in_millis\" : 495,\r\n  \"source\" : {\r\n    \"repository\" : \"ywUJTtzmUr\",\r\n    \"snapshot\" : \"qnkalgsyjp\",\r\n    \"version\" : \"8.0.0\",\r\n    \"index\" : \"cphavvfupq\",\r\n    \"restoreUUID\" : \"aWZR-4ZjQYO0Vjm8XeYbrw\"\r\n  },\r\n  \"target\" : {\r\n    \"id\" : \"I7VmkNOeR9Ol4l8xrNIPlw\",\r\n    \"host\" : \"127.0.0.1\",\r\n    \"transport_address\" : \"127.0.0.1:36753\",\r\n    \"ip\" : \"127.0.0.1\",\r\n    \"name\" : \"node_s3\"\r\n  },\r\n  \"index\" : {\r\n    \"size\" : {\r\n      \"total\" : \"918.5kb\",\r\n      \"total_in_bytes\" : 940544,\r\n      \"reused\" : \"3.4kb\",\r\n      \"reused_in_bytes\" : 3543,\r\n      \"recovered\" : \"0b\",\r\n      \"recovered_in_bytes\" : 0,\r\n      \"percent\" : \"0.0%\"\r\n    },\r\n    \"files\" : {\r\n      \"total\" : 26,\r\n      \"reused\" : 8,\r\n      \"recovered\" : 0,\r\n      \"percent\" : \"0.0%\"\r\n    },\r\n    \"total_time\" : \"495ms\",\r\n    \"total_time_in_millis\" : 495,\r\n    \"source_throttle_time\" : \"-1\",\r\n    \"source_throttle_time_in_millis\" : 0,\r\n    \"target_throttle_time\" : \"-1\",\r\n    \"target_throttle_time_in_millis\" : 0\r\n  },\r\n  \"translog\" : {\r\n    \"recovered\" : 0,\r\n    \"total\" : 0,\r\n    \"percent\" : \"100.0%\",\r\n    \"total_on_start\" : 0,\r\n    \"total_time\" : \"202ms\",\r\n    \"total_time_in_millis\" : 202\r\n  },\r\n  \"verify_index\" : {\r\n    \"check_index_time\" : \"0s\",\r\n    \"check_index_time_in_millis\" : 0,\r\n    \"total_time\" : \"0s\",\r\n    \"total_time_in_millis\" : 0\r\n  }\r\n}\r\nExpected: <18>\r\n     but: was <0>\r\nExpected :<18>\r\n```\r\n\r\nand last but not least you might also get the following if you put the wait after the updating of the recovery stats:\r\n\r\n```\r\njava.lang.AssertionError: \r\nExpected: <DONE>\r\n     but: was <FINALIZE>\r\nExpected :<DONE>\r\nActual   :<FINALIZE>\r\n<Click to see difference>\r\n\r\n\r\n\tat __randomizedtesting.SeedInfo.seed([D2761B7AE386973C:58156C017011C68F]:0)\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)\r\n\tat org.junit.Assert.assertThat(Assert.java:956)\r\n\tat org.junit.Assert.assertThat(Assert.java:923)\r\n\tat org.elasticsearch.xpack.searchablesnapshots.SearchableSnapshotsIntegTests.assertRecoveryStats(SearchableSnapshotsIntegTests.java:731)\r\n\tat org.elasticsearch.xpack.searchablesnapshots.SearchableSnapshotsIntegTests.testCreateAndRestoreSearchableSnapshot(SearchableSnapshotsIntegTests.java:211)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1758)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:946)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:982)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:996)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n```\r\n\r\nmainly spelling these out here to make it clear that these failures all more or less come from the same set of race conditions. => On it looking into a fix :)","performed_via_github_app":null}]