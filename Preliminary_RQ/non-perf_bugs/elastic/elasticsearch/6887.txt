{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/6887","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6887/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6887/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6887/events","html_url":"https://github.com/elastic/elasticsearch/issues/6887","id":37957202,"node_id":"MDU6SXNzdWUzNzk1NzIwMg==","number":6887,"title":"es.default.path.data conflicts with path.data when path.data is a list","user":{"login":"mattrobenolt","id":375744,"node_id":"MDQ6VXNlcjM3NTc0NA==","avatar_url":"https://avatars1.githubusercontent.com/u/375744?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrobenolt","html_url":"https://github.com/mattrobenolt","followers_url":"https://api.github.com/users/mattrobenolt/followers","following_url":"https://api.github.com/users/mattrobenolt/following{/other_user}","gists_url":"https://api.github.com/users/mattrobenolt/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrobenolt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrobenolt/subscriptions","organizations_url":"https://api.github.com/users/mattrobenolt/orgs","repos_url":"https://api.github.com/users/mattrobenolt/repos","events_url":"https://api.github.com/users/mattrobenolt/events{/privacy}","received_events_url":"https://api.github.com/users/mattrobenolt/received_events","type":"User","site_admin":false},"labels":[{"id":144457604,"node_id":"MDU6TGFiZWwxNDQ0NTc2MDQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Settings","name":":Core/Infra/Settings","color":"0e8a16","default":false,"description":"Settings infrastructure and APIs"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-07-16T07:46:56Z","updated_at":"2015-01-06T08:14:01Z","closed_at":"2015-01-06T08:14:01Z","author_association":"NONE","active_lock_reason":null,"body":"**Version 1.2.2**\n\nAn elastic search instance is running with the following arguments:\n\n```\n/usr/lib/jvm/java-7-oracle/bin/java -Xms15g -Xmx15g -Xss256k -Djava.awt.headless=true -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+HeapDumpOnOutOfMemoryError -Delasticsearch -Des.pidfile=/var/run/elasticsearch.pid -Des.path.home=/usr/share/elasticsearch -cp :/usr/share/elasticsearch/lib/elasticsearch-1.2.2.jar:/usr/share/elasticsearch/lib/*:/usr/share/elasticsearch/lib/sigar/* -Des.default.config=/etc/elasticsearch/elasticsearch.yml -Des.default.path.home=/usr/share/elasticsearch -Des.default.path.logs=/var/log/elasticsearch -Des.default.path.data=/var/lib/elasticsearch -Des.default.path.work=/tmp/elasticsearch -Des.default.path.conf=/etc/elasticsearch org.elasticsearch.bootstrap.Elasticsearch\n```\n\n`es.default.path.data` is coming from the deb package's init.d script.\n\nInside the `elasticsearch.yml`, if we declare `path.data` as an array, we end up with 3 data directories according to ES.\n\n``` yaml\npath:\n  data:\n    - /var/lib/elasticsearch/data1\n    - /var/lib/elasticsearch/data2\n```\n\nWhen ES runs, it now thinks there are 3 data directories. The one being set as default through the CLI arguments, plus the 2 new ones that were added in the config.\n\nAccording to `/_nodes/stats?all=true`, we have this (snipped to relevant parts):\n\n``` json\n{\n    \"nodes\": {\n        \"FOSlksI8ToK6G4YdIylYvQ\": {\n            \"fs\": {\n                \"data\": [{\n                    \"path\": \"/var/lib/elasticsearch/home/nodes/0\",\n                    \"mount\": \"/\",\n                    \"dev\": \"/dev/sda6\",\n                    \"total_in_bytes\": 982560202752,\n                    \"free_in_bytes\": 860723675136,\n                    \"available_in_bytes\": 810788864000,\n                    \"disk_reads\": 12402994,\n                    \"disk_writes\": 14437097,\n                    \"disk_io_op\": 26840091,\n                    \"disk_read_size_in_bytes\": 364877214720,\n                    \"disk_write_size_in_bytes\": 1342705430528,\n                    \"disk_io_size_in_bytes\": 1707582645248,\n                    \"disk_queue\": \"2.4\",\n                    \"disk_service_time\": \"2.1\"\n                }, {\n                    \"path\": \"/var/lib/elasticsearch/data1/home/nodes/0\",\n                    \"mount\": \"/var/lib/elasticsearch/data1\",\n                    \"dev\": \"/dev/sdc1\",\n                    \"total_in_bytes\": 787239469056,\n                    \"free_in_bytes\": 787167297536,\n                    \"available_in_bytes\": 747154268160,\n                    \"disk_reads\": 691,\n                    \"disk_writes\": 49627,\n                    \"disk_io_op\": 50318,\n                    \"disk_read_size_in_bytes\": 2851840,\n                    \"disk_write_size_in_bytes\": 12656103424,\n                    \"disk_io_size_in_bytes\": 12658955264,\n                    \"disk_queue\": \"2.4\",\n                    \"disk_service_time\": \"2.1\"\n                }, {\n                    \"path\": \"/var/lib/elasticsearch/data2/home/nodes/0\",\n                    \"mount\": \"/var/lib/elasticsearch/data2\",\n                    \"dev\": \"/dev/sdd1\",\n                    \"total_in_bytes\": 787239469056,\n                    \"free_in_bytes\": 787142717440,\n                    \"available_in_bytes\": 747129688064,\n                    \"disk_reads\": 9461,\n                    \"disk_writes\": 883718,\n                    \"disk_io_op\": 893179,\n                    \"disk_read_size_in_bytes\": 39285760,\n                    \"disk_write_size_in_bytes\": 174312841216,\n                    \"disk_io_size_in_bytes\": 174352126976,\n                    \"disk_queue\": \"2.4\",\n                    \"disk_service_time\": \"2.1\"\n                }]\n            },\n        }\n    }\n}\n```\n\nAnd if we look at `/_nodes` we see what the raw settings are:\n\n``` json\n{\n    \"nodes\": {\n        \"FOSlksI8ToK6G4YdIylYvQ\": {\n            \"settings\": {\n                \"path\": {\n                    \"data\": \"/var/lib/elasticsearch\",\n                    \"work\": \"/tmp/elasticsearch\",\n                    \"home\": \"/usr/share/elasticsearch\",\n                    \"conf\": \"/etc/elasticsearch\",\n                    \"logs\": \"/var/log/elasticsearch\",\n                    \"data.0\": \"/var/lib/elasticsearch/data1\",\n                    \"data.1\": \"/var/lib/elasticsearch/data2\"\n                }\n            }\n        }\n    }\n}\n```\n\nSo in this case, we see that there are 3 different data keys according to settings, and 3 different data directories. A **data**, **data.0** and **data.1**.\n\nNow, if we declare in our yaml, **data** as just a comma separated as a string, this does the correct behavior and overrides what the default was.\n\n``` yaml\npath:\n    data: /var/lib/elasticsearch/data1,/var/lib/elasticsearch/data2\n```\n\n``` json\n                \"data\": [{\n                    \"path\": \"/var/lib/elasticsearch/data1/home/nodes/0\",\n                    \"mount\": \"/var/lib/elasticsearch/data1\",\n                    \"dev\": \"/dev/sdc1\",\n                    \"total_in_bytes\": 787239469056,\n                    \"free_in_bytes\": 787167391744,\n                    \"available_in_bytes\": 747154362368,\n                    \"disk_reads\": 687,\n                    \"disk_writes\": 49803,\n                    \"disk_io_op\": 50490,\n                    \"disk_read_size_in_bytes\": 2835456,\n                    \"disk_write_size_in_bytes\": 12657053696,\n                    \"disk_io_size_in_bytes\": 12659889152,\n                    \"disk_queue\": \"0\",\n                    \"disk_service_time\": \"0\"\n                }, {\n                    \"path\": \"/var/lib/elasticsearch/data2/home/nodes/0\",\n                    \"mount\": \"/var/lib/elasticsearch/data2\",\n                    \"dev\": \"/dev/sdd1\",\n                    \"total_in_bytes\": 787239469056,\n                    \"free_in_bytes\": 787167391744,\n                    \"available_in_bytes\": 747154362368,\n                    \"disk_reads\": 3436,\n                    \"disk_writes\": 684613,\n                    \"disk_io_op\": 688049,\n                    \"disk_read_size_in_bytes\": 14308352,\n                    \"disk_write_size_in_bytes\": 132454891520,\n                    \"disk_io_size_in_bytes\": 132469199872,\n                    \"disk_queue\": \"0\",\n                    \"disk_service_time\": \"0\"\n                }]\n```\n\n``` json\n                \"path\": {\n                    \"data\": \"/var/lib/elasticsearch/data1,/var/lib/elasticsearch/data2\",\n                    \"work\": \"/tmp/elasticsearch\",\n                    \"home\": \"/usr/share/elasticsearch\",\n                    \"conf\": \"/etc/elasticsearch\",\n                    \"logs\": \"/var/log/elasticsearch\"\n                },\n```\n\nSo the behavior that we're seeing is that the data array is being flattened into a list, and them being appended to the default. Whereas I'd expect this new list to override the default.\n\nI feel that the problem here is that data can be declared both as a string and as a list. It may be more _correct_ if data were always a list internally, and when declaring as a string, it's coerced into a list, even if that list had one item. But I'm not proposing the solution, just a thought.\n\nI understand that this may not necessarily be a bug, but it is extremely unexpected behavior and took quite a bit of debugging to track down exactly what was going on.\n","closed_by":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"performed_via_github_app":null}