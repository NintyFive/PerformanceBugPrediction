[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/33968197","html_url":"https://github.com/elastic/elasticsearch/issues/4983#issuecomment-33968197","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4983","id":33968197,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTY4MTk3","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-02-03T15:57:17Z","updated_at":"2014-02-03T15:57:17Z","author_association":"CONTRIBUTOR","body":"I was trying to understand your use-case, and I think the following query would help?\n\n``` javascript\n{\n    \"aggs\": {\n        \"failed_logins\": {\n            \"filter\": {\n                \"term\": {\n                    \"log_action\": \"failed_login\"\n                }\n            },\n            \"aggs\": {\n                \"unique_users\": {\n                    \"terms\": {\n                        \"field\": \"email\",\n                        \"min_doc_count\": 3\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\nMore generally, `limiting_range` looks similar to the `min_doc_count` option of the `terms` and `histogram` aggregations while `limiting_action` looks similar to the `include/exclude` option of terms aggregations?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/33994822","html_url":"https://github.com/elastic/elasticsearch/issues/4983#issuecomment-33994822","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4983","id":33994822,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTk0ODIy","user":{"login":"markkimsal","id":54099,"node_id":"MDQ6VXNlcjU0MDk5","avatar_url":"https://avatars2.githubusercontent.com/u/54099?v=4","gravatar_id":"","url":"https://api.github.com/users/markkimsal","html_url":"https://github.com/markkimsal","followers_url":"https://api.github.com/users/markkimsal/followers","following_url":"https://api.github.com/users/markkimsal/following{/other_user}","gists_url":"https://api.github.com/users/markkimsal/gists{/gist_id}","starred_url":"https://api.github.com/users/markkimsal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markkimsal/subscriptions","organizations_url":"https://api.github.com/users/markkimsal/orgs","repos_url":"https://api.github.com/users/markkimsal/repos","events_url":"https://api.github.com/users/markkimsal/events{/privacy}","received_events_url":"https://api.github.com/users/markkimsal/received_events","type":"User","site_admin":false},"created_at":"2014-02-03T20:13:12Z","updated_at":"2014-02-03T20:23:12Z","author_association":"NONE","body":"Yes, you are correct, the limiting_action agg can be rewritten as a term filter, and the min_doc_count would satisfy the basic requirements of this use case.  I was unaware of min_doc_count, thanks for pointing that out. (Is there a max_doc_count?)  I was trying to construct an example that would show the flexibility of having \"child aggregators\" and their ability to work off of parent buckets, but perhaps the concept is not needed. (?)\n\nI think the problem would come in when you want to find 3 failed_login actions with no password_change action.  It doesn't seem possible without first aggregating all actions by a userid/email and then analyzing the buckets.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/34041965","html_url":"https://github.com/elastic/elasticsearch/issues/4983#issuecomment-34041965","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4983","id":34041965,"node_id":"MDEyOklzc3VlQ29tbWVudDM0MDQxOTY1","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-02-04T09:15:30Z","updated_at":"2014-02-04T09:15:30Z","author_association":"CONTRIBUTOR","body":">  I was unaware of min_doc_count, thanks for pointing that out. (Is there a max_doc_count?)\n\nThis option is pretty new, Its main purpose is to replace the old `all_terms` option of terms facets with something more generic (`all_terms=true` with facets is equivalent to `min_doc_count=0` with aggregations). However, there is no `max_doc_count`.\n\nThere is one option of terms aggregations that allows to work on sub-aggregations, which is [sorting by sub-aggregation](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-aggregations-bucket-terms-aggregation.html#_order), maybe this could partially solve your problem?\n\n> 3 failed_login actions with no password_change action\n\nThis one is actually very hard because document granularity doesn't work: aggregations do filtering based on documents, not field values. We would somehow need a relationship between users and log_actions to do that. `nested` documents could work but are probably too costly indexing-wise since you would need to update a user document every-time a new event comes in. parent/child relationships on the other hand are not supported by aggregations (yet?).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/37902937","html_url":"https://github.com/elastic/elasticsearch/issues/4983#issuecomment-37902937","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4983","id":37902937,"node_id":"MDEyOklzc3VlQ29tbWVudDM3OTAyOTM3","user":{"login":"amarkanth1984","id":6983790,"node_id":"MDQ6VXNlcjY5ODM3OTA=","avatar_url":"https://avatars3.githubusercontent.com/u/6983790?v=4","gravatar_id":"","url":"https://api.github.com/users/amarkanth1984","html_url":"https://github.com/amarkanth1984","followers_url":"https://api.github.com/users/amarkanth1984/followers","following_url":"https://api.github.com/users/amarkanth1984/following{/other_user}","gists_url":"https://api.github.com/users/amarkanth1984/gists{/gist_id}","starred_url":"https://api.github.com/users/amarkanth1984/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarkanth1984/subscriptions","organizations_url":"https://api.github.com/users/amarkanth1984/orgs","repos_url":"https://api.github.com/users/amarkanth1984/repos","events_url":"https://api.github.com/users/amarkanth1984/events{/privacy}","received_events_url":"https://api.github.com/users/amarkanth1984/received_events","type":"User","site_admin":false},"created_at":"2014-03-18T06:24:02Z","updated_at":"2014-03-18T06:24:02Z","author_association":"NONE","body":"First of all, great job on the new 1.0.1 release. I am trying to use the \"Aggregation\" framework to solve an issue similar to http://stackoverflow.com/questions/22029796/how-do-i-use-doc-count-in-an-aggregations-range-query-in-elasticsearch-1-0\n\nUsing the aggregation framework, i can get the counts per user (but) didn't find a way to use these aggregated counts in nested aggregation(s) inorder to classify into \"low/medium/high\".\n\nReading through the docs, i found \"min_doc_count\" and was wishing that there was something like \"max_doc_count\" which would then let me filter my aggregated results.  How easy/hard is to support this ?\nAlso, can you please recommend any other alternative approaches.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/39664161","html_url":"https://github.com/elastic/elasticsearch/issues/4983#issuecomment-39664161","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4983","id":39664161,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NjY0MTYx","user":{"login":"bobstir","id":8394,"node_id":"MDQ6VXNlcjgzOTQ=","avatar_url":"https://avatars1.githubusercontent.com/u/8394?v=4","gravatar_id":"","url":"https://api.github.com/users/bobstir","html_url":"https://github.com/bobstir","followers_url":"https://api.github.com/users/bobstir/followers","following_url":"https://api.github.com/users/bobstir/following{/other_user}","gists_url":"https://api.github.com/users/bobstir/gists{/gist_id}","starred_url":"https://api.github.com/users/bobstir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bobstir/subscriptions","organizations_url":"https://api.github.com/users/bobstir/orgs","repos_url":"https://api.github.com/users/bobstir/repos","events_url":"https://api.github.com/users/bobstir/events{/privacy}","received_events_url":"https://api.github.com/users/bobstir/received_events","type":"User","site_admin":false},"created_at":"2014-04-06T10:33:59Z","updated_at":"2014-04-06T10:34:34Z","author_association":"NONE","body":"Here's a use-case where doc_count / min_doc_count would not suffice.\n\nI have a bunch of \"users\" as parent docs who have currency \"transactions\" as child documents.\n\nI need to know the top 10 terms (on users.tags) who have spent the most money (a sum on transactions.amount_paid). Note, there are different products at different prices so doc_count is not adequate (100 txns at $1 < 1 txn at $1000)\n\nIf there is currently a way to do this w/ the existing aggregations, please please do tell.\n\nThanks!\n\n[EDIT] Aggregations do rock though!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/45690905","html_url":"https://github.com/elastic/elasticsearch/issues/4983#issuecomment-45690905","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4983","id":45690905,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NjkwOTA1","user":{"login":"avleen","id":539525,"node_id":"MDQ6VXNlcjUzOTUyNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/539525?v=4","gravatar_id":"","url":"https://api.github.com/users/avleen","html_url":"https://github.com/avleen","followers_url":"https://api.github.com/users/avleen/followers","following_url":"https://api.github.com/users/avleen/following{/other_user}","gists_url":"https://api.github.com/users/avleen/gists{/gist_id}","starred_url":"https://api.github.com/users/avleen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avleen/subscriptions","organizations_url":"https://api.github.com/users/avleen/orgs","repos_url":"https://api.github.com/users/avleen/repos","events_url":"https://api.github.com/users/avleen/events{/privacy}","received_events_url":"https://api.github.com/users/avleen/received_events","type":"User","site_admin":false},"created_at":"2014-06-11T01:00:42Z","updated_at":"2014-06-11T01:00:42Z","author_association":"NONE","body":"We're really interested in something like this too.\nWe want to run a terms aggregation, to select all of the terms in an index (the result will be a few tens of thousands of terms).\nThen we want to know the frequency with which they occur, just as a histogram would tell us.\nSo we want to take the doc_count of the terms, and then histogram how they're distributed.\n\nWe can fake it for now, by working out the histogram function in our code, but having ES be able to do this for us would be cool\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/45870962","html_url":"https://github.com/elastic/elasticsearch/issues/4983#issuecomment-45870962","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4983","id":45870962,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1ODcwOTYy","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-06-12T10:33:42Z","updated_at":"2014-06-12T10:33:42Z","author_association":"CONTRIBUTOR","body":"@avleen Are you just interested in the distribution of frequencies or would you also want to be able to have sub aggregations or know the matching terms on each bucket of the histogram?\n\nThe reason why I am asking is that aggregations have been designed to perform everything in a streaming way: there is a single pass on the data, no matter how many levels of aggregations you have. This is important for two reasons: speed and memory usage since there is nothing to buffer but what is needed to build the final result. So as long as your buckets are based on properties of documents, everything is ok, but if buckets start being the result of another aggregation, then it will require buffering information and running another aggregation on the buffered data. Although building buckets based on term frequencies would raise this issue, I think we could have a metric aggregation that would provide information about frequencies of terms using eg. a count-min sketch. Would that address your issue?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/46868534","html_url":"https://github.com/elastic/elasticsearch/issues/4983#issuecomment-46868534","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4983","id":46868534,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2ODY4NTM0","user":{"login":"avleen","id":539525,"node_id":"MDQ6VXNlcjUzOTUyNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/539525?v=4","gravatar_id":"","url":"https://api.github.com/users/avleen","html_url":"https://github.com/avleen","followers_url":"https://api.github.com/users/avleen/followers","following_url":"https://api.github.com/users/avleen/following{/other_user}","gists_url":"https://api.github.com/users/avleen/gists{/gist_id}","starred_url":"https://api.github.com/users/avleen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avleen/subscriptions","organizations_url":"https://api.github.com/users/avleen/orgs","repos_url":"https://api.github.com/users/avleen/repos","events_url":"https://api.github.com/users/avleen/events{/privacy}","received_events_url":"https://api.github.com/users/avleen/received_events","type":"User","site_admin":false},"created_at":"2014-06-23T16:31:29Z","updated_at":"2014-06-23T16:31:29Z","author_association":"NONE","body":"Hi Adrien,\n\nIn this case we really needed to know the frequency distribution. Could\nthis be treated as another aggregation?\nBuild the final result and then run an aggregation on that?\n\nSounds like it would still end up buffering data but I suspect it's a\nuseful feature to have. Frequency distribution is a pretty common analytics\ntool :)\nOn Jun 12, 2014 4:33 AM, \"Adrien Grand\" notifications@github.com wrote:\n\n> @avleen https://github.com/avleen Are you just interested in the\n> distribution of frequencies or would you also want to be able to have sub\n> aggregations or know the matching terms on each bucket of the histogram?\n> \n> The reason why I am asking is that aggregations have been designed to\n> perform everything in a streaming way: there is a single pass on the data,\n> no matter how many levels of aggregations you have. This is important for\n> two reasons: speed and memory usage since there is nothing to buffer but\n> what is needed to build the final result. So as long as your buckets are\n> based on properties of documents, everything is ok, but if buckets start\n> being the result of another aggregation, then it will require buffering\n> information and running another aggregation on the buffered data. Although\n> building buckets based on term frequencies would raise this issue, I think\n> we could have a metric aggregation that would provide information about\n> frequencies of terms using eg. a count-min sketch. Would that address your\n> issue?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/elasticsearch/elasticsearch/issues/4983#issuecomment-45870962\n> .\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/47057680","html_url":"https://github.com/elastic/elasticsearch/issues/4983#issuecomment-47057680","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4983","id":47057680,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDU3Njgw","user":{"login":"jimhorng","id":4172809,"node_id":"MDQ6VXNlcjQxNzI4MDk=","avatar_url":"https://avatars1.githubusercontent.com/u/4172809?v=4","gravatar_id":"","url":"https://api.github.com/users/jimhorng","html_url":"https://github.com/jimhorng","followers_url":"https://api.github.com/users/jimhorng/followers","following_url":"https://api.github.com/users/jimhorng/following{/other_user}","gists_url":"https://api.github.com/users/jimhorng/gists{/gist_id}","starred_url":"https://api.github.com/users/jimhorng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimhorng/subscriptions","organizations_url":"https://api.github.com/users/jimhorng/orgs","repos_url":"https://api.github.com/users/jimhorng/repos","events_url":"https://api.github.com/users/jimhorng/events{/privacy}","received_events_url":"https://api.github.com/users/jimhorng/received_events","type":"User","site_admin":false},"created_at":"2014-06-25T03:44:34Z","updated_at":"2014-06-25T03:44:34Z","author_association":"NONE","body":"Want the so-called \"child aggregation\" feature +1\nMy scenario state as below: http://stackoverflow.com/questions/24380588/elasticsearch-aggregation-over-metric-aggregation-result-values\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/48514894","html_url":"https://github.com/elastic/elasticsearch/issues/4983#issuecomment-48514894","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4983","id":48514894,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NTE0ODk0","user":{"login":"avleen","id":539525,"node_id":"MDQ6VXNlcjUzOTUyNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/539525?v=4","gravatar_id":"","url":"https://api.github.com/users/avleen","html_url":"https://github.com/avleen","followers_url":"https://api.github.com/users/avleen/followers","following_url":"https://api.github.com/users/avleen/following{/other_user}","gists_url":"https://api.github.com/users/avleen/gists{/gist_id}","starred_url":"https://api.github.com/users/avleen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avleen/subscriptions","organizations_url":"https://api.github.com/users/avleen/orgs","repos_url":"https://api.github.com/users/avleen/repos","events_url":"https://api.github.com/users/avleen/events{/privacy}","received_events_url":"https://api.github.com/users/avleen/received_events","type":"User","site_admin":false},"created_at":"2014-07-09T18:29:49Z","updated_at":"2014-07-09T18:29:49Z","author_association":"NONE","body":"I found another use case for passing forward the doc_count:\nI want to use `date_histogram` to count the number of events per second in a given time range.\nThen I want to get stats on the doc_count of the matches. Sum, avg, max, min, etc.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49103458","html_url":"https://github.com/elastic/elasticsearch/issues/4983#issuecomment-49103458","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4983","id":49103458,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MTAzNDU4","user":{"login":"jsnod","id":1916150,"node_id":"MDQ6VXNlcjE5MTYxNTA=","avatar_url":"https://avatars2.githubusercontent.com/u/1916150?v=4","gravatar_id":"","url":"https://api.github.com/users/jsnod","html_url":"https://github.com/jsnod","followers_url":"https://api.github.com/users/jsnod/followers","following_url":"https://api.github.com/users/jsnod/following{/other_user}","gists_url":"https://api.github.com/users/jsnod/gists{/gist_id}","starred_url":"https://api.github.com/users/jsnod/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jsnod/subscriptions","organizations_url":"https://api.github.com/users/jsnod/orgs","repos_url":"https://api.github.com/users/jsnod/repos","events_url":"https://api.github.com/users/jsnod/events{/privacy}","received_events_url":"https://api.github.com/users/jsnod/received_events","type":"User","site_admin":false},"created_at":"2014-07-15T22:51:26Z","updated_at":"2014-07-15T22:51:26Z","author_association":"CONTRIBUTOR","body":"I've just come across the exact scenario described by @avleen above.  I'm trying to get the average # of occurrences of a certain event for each user per month using the following: \n\n``` json\n\"aggs\": {\n    \"user\": {\n      \"terms\": {\n        \"field\": \"identity\"\n      },\n      \"aggs\": {\n        \"months\": {\n          \"date_histogram\": {\n            \"field\": \"time\",\n            \"interval\": \"month\"\n          }\n        }\n      }\n    }\n  }\n```\n\nThis works great to get doc counts per user/month, but what I'd like to do next is get the average # of docs across each user's `months` buckets.  This doesn't appear possible at the moment since we can't aggregate the `doc_count` values for each monthly bucket.  Ideally I'd be able to add a final `avg` agg using `user.months.doc_count` as the field like so:\n\n``` json\n\"aggs\": {\n    \"user\": {\n      \"terms\": {\n        \"field\": \"identity\"\n      },\n      \"aggs\": {\n        \"months\": {\n          \"date_histogram\": {\n            \"field\": \"time\",\n            \"interval\": \"month\"\n          }\n        },\n        \"aggs\": {\n          \"average_docs\": {\n            \"avg\": {\n              \"field\": \"doc_count\"\n            }\n          }\n        }\n      }\n    }\n  }\n```\n\nIs there some other way?\n\nI understand the reasoning for this not being available as outlined by @jpountz above but this seems like such a fundamental need for analysis that it may be worth considering.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49109895","html_url":"https://github.com/elastic/elasticsearch/issues/4983#issuecomment-49109895","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4983","id":49109895,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MTA5ODk1","user":{"login":"jimhorng","id":4172809,"node_id":"MDQ6VXNlcjQxNzI4MDk=","avatar_url":"https://avatars1.githubusercontent.com/u/4172809?v=4","gravatar_id":"","url":"https://api.github.com/users/jimhorng","html_url":"https://github.com/jimhorng","followers_url":"https://api.github.com/users/jimhorng/followers","following_url":"https://api.github.com/users/jimhorng/following{/other_user}","gists_url":"https://api.github.com/users/jimhorng/gists{/gist_id}","starred_url":"https://api.github.com/users/jimhorng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimhorng/subscriptions","organizations_url":"https://api.github.com/users/jimhorng/orgs","repos_url":"https://api.github.com/users/jimhorng/repos","events_url":"https://api.github.com/users/jimhorng/events{/privacy}","received_events_url":"https://api.github.com/users/jimhorng/received_events","type":"User","site_admin":false},"created_at":"2014-07-16T00:21:57Z","updated_at":"2014-07-16T00:21:57Z","author_association":"NONE","body":"@afx114 \nMy very workaround for getting average of \"doc_count\" is produce intermediate documents which have \"doc_count\" as it's field and generate result from it.\nIn your scenario, I'l do below steps. \n\nStep 1: get aggregation from query\n\n``` javascript\n\"aggs\": {\n    \"user\": {\n      \"terms\": {\n        \"field\": \"identity\"\n      },\n      \"aggs\": {\n        \"months\": {\n          \"date_histogram\": {\n            \"field\": \"time\",\n            \"interval\": \"month\"\n          }\n        }\n      }\n    }\n}\n```\n\nStep 2: Transform to intermediate result as document and post back a temporarily index type called: \"identity histogram\"\n\n``` javascript\n{\n    \"identity\": \"user1\",\n    \"identity_count\": 12,\n    \"time\": \"2014-07-16\"\n}\n{\n    \"identity\": \"user1\",\n    \"identity_count\": 10,\n    \"time\": \"2014-06-16\"\n}\n{\n    \"identity\": \"user2\",\n    \"identity_count\": 15,\n    \"time\": \"2014-06-16\"\n}\n...\n```\n\nStep 3: Query from type:\"identity histogram\" and get average\n\n``` javascript\n\"aggs\": {\n    \"months\": {\n        \"term\": {\n            \"field\": \"time\"\n        },\n        \"aggs\": {\n            \"average_docs\": {\n                \"avg\": {\n                  \"field\": \"identity_count\"\n                }\n            }\n        }\n    }\n}\n```\n\nHope this helps.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/50265237","html_url":"https://github.com/elastic/elasticsearch/issues/4983#issuecomment-50265237","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4983","id":50265237,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjY1MjM3","user":{"login":"rore","id":571498,"node_id":"MDQ6VXNlcjU3MTQ5OA==","avatar_url":"https://avatars2.githubusercontent.com/u/571498?v=4","gravatar_id":"","url":"https://api.github.com/users/rore","html_url":"https://github.com/rore","followers_url":"https://api.github.com/users/rore/followers","following_url":"https://api.github.com/users/rore/following{/other_user}","gists_url":"https://api.github.com/users/rore/gists{/gist_id}","starred_url":"https://api.github.com/users/rore/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rore/subscriptions","organizations_url":"https://api.github.com/users/rore/orgs","repos_url":"https://api.github.com/users/rore/repos","events_url":"https://api.github.com/users/rore/events{/privacy}","received_events_url":"https://api.github.com/users/rore/received_events","type":"User","site_admin":false},"created_at":"2014-07-27T14:08:07Z","updated_at":"2014-07-27T14:08:07Z","author_association":"NONE","body":"+1 on this. We have the exact case as @avleen describes. We want to aggregate events to get histogram of events/sec, and then perform further aggregations on the results of the histogram.\nThis seems to be a very basic need to anyone who collects events and needs some kind of BI on that.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/52174401","html_url":"https://github.com/elastic/elasticsearch/issues/4983#issuecomment-52174401","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4983","id":52174401,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMTc0NDAx","user":{"login":"benqua","id":1128612,"node_id":"MDQ6VXNlcjExMjg2MTI=","avatar_url":"https://avatars1.githubusercontent.com/u/1128612?v=4","gravatar_id":"","url":"https://api.github.com/users/benqua","html_url":"https://github.com/benqua","followers_url":"https://api.github.com/users/benqua/followers","following_url":"https://api.github.com/users/benqua/following{/other_user}","gists_url":"https://api.github.com/users/benqua/gists{/gist_id}","starred_url":"https://api.github.com/users/benqua/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benqua/subscriptions","organizations_url":"https://api.github.com/users/benqua/orgs","repos_url":"https://api.github.com/users/benqua/repos","events_url":"https://api.github.com/users/benqua/events{/privacy}","received_events_url":"https://api.github.com/users/benqua/received_events","type":"User","site_admin":false},"created_at":"2014-08-14T11:58:06Z","updated_at":"2014-08-14T11:58:06Z","author_association":"NONE","body":"+1, same need as @rore here!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/59472022","html_url":"https://github.com/elastic/elasticsearch/issues/4983#issuecomment-59472022","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4983","id":59472022,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDcyMDIy","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-10-17T06:36:50Z","updated_at":"2014-10-17T06:36:50Z","author_association":"CONTRIBUTOR","body":"Closing in favour of #8110\n","performed_via_github_app":null}]