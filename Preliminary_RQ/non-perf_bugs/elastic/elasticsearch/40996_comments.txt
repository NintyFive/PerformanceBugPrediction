[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/481204275","html_url":"https://github.com/elastic/elasticsearch/issues/40996#issuecomment-481204275","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40996","id":481204275,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTIwNDI3NQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-04-09T10:58:21Z","updated_at":"2019-04-09T10:58:21Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-analytics-geo","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/481218298","html_url":"https://github.com/elastic/elasticsearch/issues/40996#issuecomment-481218298","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40996","id":481218298,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTIxODI5OA==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-04-09T11:48:46Z","updated_at":"2019-04-09T11:48:46Z","author_association":"MEMBER","body":"@Daemonyz Can you provide the error/exception and the init/map/reduce scripts?  Without more information there isn't much we can do to help. :)\r\n\r\nI'm not sure of your use-case, but if you're just trying to concatenate fields together into a single new field, the [terms aggregation supports scripting](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html#search-aggregations-bucket-terms-aggregation-script), which can be used to aggregate \"combined keys\"","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/481229208","html_url":"https://github.com/elastic/elasticsearch/issues/40996#issuecomment-481229208","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40996","id":481229208,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTIyOTIwOA==","user":{"login":"Daemonyz","id":18059524,"node_id":"MDQ6VXNlcjE4MDU5NTI0","avatar_url":"https://avatars2.githubusercontent.com/u/18059524?v=4","gravatar_id":"","url":"https://api.github.com/users/Daemonyz","html_url":"https://github.com/Daemonyz","followers_url":"https://api.github.com/users/Daemonyz/followers","following_url":"https://api.github.com/users/Daemonyz/following{/other_user}","gists_url":"https://api.github.com/users/Daemonyz/gists{/gist_id}","starred_url":"https://api.github.com/users/Daemonyz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Daemonyz/subscriptions","organizations_url":"https://api.github.com/users/Daemonyz/orgs","repos_url":"https://api.github.com/users/Daemonyz/repos","events_url":"https://api.github.com/users/Daemonyz/events{/privacy}","received_events_url":"https://api.github.com/users/Daemonyz/received_events","type":"User","site_admin":false},"created_at":"2019-04-09T12:24:45Z","updated_at":"2019-04-09T12:25:55Z","author_association":"NONE","body":"> @Daemonyz Can you provide the error/exception and the init/map/reduce scripts? Without more information there isn't much we can do to help. :)\r\n> \r\n> I'm not sure of your use-case, but if you're just trying to concatenate fields together into a single new field, the [terms aggregation supports scripting](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html#search-aggregations-bucket-terms-aggregation-script), which can be used to aggregate \"combined keys\"\r\n\r\n@polyfractal \r\nThanks for your reply, I tried to change the heapsize in the jvm.option, from 4g to 12g, and then it works, the aggregation procedure can work with expectation efficiently.\r\n\r\nWhat puzzles me is that, how will the heapsize config in jvm.options affect the performance of aggregation procedure? And are there any good suggestions about the config, except \"as large as possible until 24G\"?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/482658606","html_url":"https://github.com/elastic/elasticsearch/issues/40996#issuecomment-482658606","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40996","id":482658606,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MjY1ODYwNg==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-04-12T17:32:34Z","updated_at":"2019-04-12T17:32:34Z","author_association":"MEMBER","body":"In this case it depends on what your scripted agg is doing.  All the intermediate results are store in-memory, on the heap.  So if the aggregation is expensive, or is embedded deeply in an aggregation tree (e.g. the total search request generates many buckets) it adds up to a lot of temporary memory usage.\r\n\r\nThis is a general phenomenon that other aggregations run into as well, not necessarily unique to scripted metric.  But it can be made worse since scripted metrics are user-defined, and there's nothing stopping you from doing something very expensive (maintaining large maps, etc).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/484557659","html_url":"https://github.com/elastic/elasticsearch/issues/40996#issuecomment-484557659","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40996","id":484557659,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NDU1NzY1OQ==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-04-18T15:17:25Z","updated_at":"2019-04-18T15:17:25Z","author_association":"MEMBER","body":"I'm going to close this, since it appears to be a generic memory issue which isn't really related to the aggregation itself (just aggregation operation in general, and scripting).","performed_via_github_app":null}]