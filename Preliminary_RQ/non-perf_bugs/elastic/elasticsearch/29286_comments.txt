[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/377012691","html_url":"https://github.com/elastic/elasticsearch/issues/29286#issuecomment-377012691","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29286","id":377012691,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NzAxMjY5MQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-03-28T19:47:19Z","updated_at":"2018-03-28T19:47:19Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/377019218","html_url":"https://github.com/elastic/elasticsearch/issues/29286#issuecomment-377019218","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29286","id":377019218,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NzAxOTIxOA==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2018-03-28T20:08:49Z","updated_at":"2018-03-28T20:10:59Z","author_association":"CONTRIBUTOR","body":"I have clarified the following information from @rjernst  and @jpountz :\r\n\r\n- We use `SortedNumericDocValues`to access document's integer values with the following code:\r\n```\r\npublic long getValue() {\r\n            if (count == 0) {\r\n                return 0L;\r\n            }\r\n            return values[0];\r\n        }\r\n```\r\nwhich does return 0.\r\n- Lucene used to have a contract that `NumericDocValues`should return 0 when the document doesn't have a value. But later a bitset of documents that had a value was added and now we even have iterators of docs with a value, so this must be something that can be fixed\r\n\r\nIf we want `painless` not  to return 0 for missing values, we should correct this.\r\nThis may be something we should change in LeafDocLookup. we can make it return null in this case, by checking scriptValues.isEmpty() before returning from get\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/381611856","html_url":"https://github.com/elastic/elasticsearch/issues/29286#issuecomment-381611856","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29286","id":381611856,"node_id":"MDEyOklzc3VlQ29tbWVudDM4MTYxMTg1Ng==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2018-04-16T14:07:56Z","updated_at":"2018-04-16T14:07:56Z","author_association":"CONTRIBUTOR","body":"@rjernst  Ryan, what do you think if we add these two functions to painless:\r\n\r\n`missing(doc['field1'], <floatValue>)` - returns `floatValue` if a current document is missing `field1`, otherwise returns doc's value for this field.  Only applicable for numeric fields.\r\n\r\n` multi_value(doc['field1'], <stringValue>)`.  Options for `<stringValue>` are `avg`, `min`, `max`, `sum`. For multi valued fields, depending on the chosen option, returns their averages, minimum, maximum, or sum. Only applicable for numeric fields.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/381716257","html_url":"https://github.com/elastic/elasticsearch/issues/29286#issuecomment-381716257","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29286","id":381716257,"node_id":"MDEyOklzc3VlQ29tbWVudDM4MTcxNjI1Nw==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2018-04-16T19:10:38Z","updated_at":"2018-04-16T19:11:19Z","author_association":"MEMBER","body":"> `missing(doc['field1'], <floatValue>)`\r\n\r\nI think this would be unintuitive to have to know about an additional method to call (a non member method on the return of `doc['field']` too). Returning `null` from `doc['field']` is more intuitive IMO. The field missing from `doc` means it is not in the mappings, and returning `null` means the current doc has no values.\r\n\r\n> `multi_value(doc['field1'], <stringValue>)`\r\n\r\nI think this would be better as member methods on ScriptDocValues.Longs (and ScriptDocValues.Doubles too if we want them for double fields). This would be similar to methods we have for geo fields.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/382791478","html_url":"https://github.com/elastic/elasticsearch/issues/29286#issuecomment-382791478","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29286","id":382791478,"node_id":"MDEyOklzc3VlQ29tbWVudDM4Mjc5MTQ3OA==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2018-04-19T16:05:28Z","updated_at":"2018-04-19T16:05:28Z","author_association":"CONTRIBUTOR","body":"@rjernst I'm concerned about one thing - if we do return null for missing field values in this case, once we make scripting index-aware, we do not want to return objects from fields that represent numerical types so we get the performance benefit of not boxing/unboxing.  We can probably just document the differences between index-aware versus non-index aware, but will this be confusing later on?","performed_via_github_app":null}]