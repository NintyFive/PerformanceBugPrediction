{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/28435","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28435/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28435/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28435/events","html_url":"https://github.com/elastic/elasticsearch/issues/28435","id":292645309,"node_id":"MDU6SXNzdWUyOTI2NDUzMDk=","number":28435,"title":"[CI] CorruptedFileIT#testReplicaCorruption fails on Windows","user":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"labels":[{"id":152510590,"node_id":"MDU6TGFiZWwxNTI1MTA1OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Recovery","name":":Distributed/Recovery","color":"0e8a16","default":false,"description":"Anything around constructing a new shard, either from a local or a remote source."},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"assignees":[{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2018-01-30T03:57:11Z","updated_at":"2018-02-09T17:06:53Z","closed_at":"2018-02-09T17:06:53Z","author_association":"MEMBER","active_lock_reason":null,"body":"CI: https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+master+multijob-windows-compatibility/1179/console\r\nLog: [testReplicaCorruption.txt](https://github.com/elastic/elasticsearch/files/1676317/testReplicaCorruption.txt)\r\n\r\nWe intentionally corrupted every segment files in `#testReplicaCorruption`. This caused file-based recovery occurring as replicas could not to read commit snapshot. However, there was one replica `[test][7]` failed to clean up its store after index files were copied. The corruption marker `corrupted_WzIGIIeIQvqVgKvEIVtRwA` was deleted but still in the listing and inaccessible(on Windows).\r\n\r\n```\r\n1> Caused by: java.nio.file.AccessDeniedException: C:\\Users\\jenkins\\workspace\\elastic+elasticsearch+master+multijob-windows-compatibility\\server\\build\\testrun\\integTest\\J1\\temp\\org.elasticsearch.index.store.CorruptedFileIT_883F8FC2C6E448B5-001\\tempDir-002\\data\\nodes\\0\\indices\\0tscMvZ-Q-21DRHviJsJxw\\7\\index\\corrupted_WzIGIIeIQvqVgKvEIVtRwA\r\n  1> \tat sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:83) ~[?:?]\r\n  1> \tat sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:97) ~[?:?]\r\n  1> \tat sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:102) ~[?:?]\r\n  1> \tat sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:230) ~[?:?]\r\n  1> \tat org.apache.lucene.mockfile.FilterFileSystemProvider.newByteChannel(FilterFileSystemProvider.java:212) ~[lucene-test-framework-7.2.1.jar:7.2.1 b2b6438b37073bee1fca40374e85bf91aa457c0b - ubuntu - 2018-01-10 00:48:44]\r\n  1> \tat org.apache.lucene.mockfile.FilterFileSystemProvider.newByteChannel(FilterFileSystemProvider.java:212) ~[lucene-test-framework-7.2.1.jar:7.2.1 b2b6438b37073bee1fca40374e85bf91aa457c0b - ubuntu - 2018-01-10 00:48:44]\r\n  1> \tat org.apache.lucene.mockfile.FilterFileSystemProvider.newByteChannel(FilterFileSystemProvider.java:212) ~[lucene-test-framework-7.2.1.jar:7.2.1 b2b6438b37073bee1fca40374e85bf91aa457c0b - ubuntu - 2018-01-10 00:48:44]\r\n  1> \tat org.apache.lucene.mockfile.HandleTrackingFS.newByteChannel(HandleTrackingFS.java:240) ~[lucene-test-framework-7.2.1.jar:7.2.1 b2b6438b37073bee1fca40374e85bf91aa457c0b - ubuntu - 2018-01-10 00:48:44]\r\n  1> \tat org.apache.lucene.mockfile.FilterFileSystemProvider.newByteChannel(FilterFileSystemProvider.java:212) ~[lucene-test-framework-7.2.1.jar:7.2.1 b2b6438b37073bee1fca40374e85bf91aa457c0b - ubuntu - 2018-01-10 00:48:44]\r\n  1> \tat org.apache.lucene.mockfile.HandleTrackingFS.newByteChannel(HandleTrackingFS.java:240) ~[lucene-test-framework-7.2.1.jar:7.2.1 b2b6438b37073bee1fca40374e85bf91aa457c0b - ubuntu - 2018-01-10 00:48:44]\r\n  1> \tat java.nio.file.Files.newByteChannel(Files.java:361) ~[?:1.8.0_144]\r\n  1> \tat java.nio.file.Files.newByteChannel(Files.java:407) ~[?:1.8.0_144]\r\n  1> \tat org.apache.lucene.store.SimpleFSDirectory.openInput(SimpleFSDirectory.java:77) ~[lucene-core-7.2.1.jar:7.2.1 b2b6438b37073bee1fca40374e85bf91aa457c0b - ubuntu - 2018-01-10 00:48:43]\r\n  1> \tat org.apache.lucene.util.LuceneTestCase.slowFileExists(LuceneTestCase.java:2709) ~[lucene-test-framework-7.2.1.jar:7.2.1 b2b6438b37073bee1fca40374e85bf91aa457c0b - ubuntu - 2018-01-10 00:48:44]\r\n  1> \tat org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:749) ~[lucene-test-framework-7.2.1.jar:7.2.1 b2b6438b37073bee1fca40374e85bf91aa457c0b - ubuntu - 2018-01-10 00:48:43]\r\n  1> \tat org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:99) ~[lucene-core-7.2.1.jar:7.2.1 b2b6438b37073bee1fca40374e85bf91aa457c0b - ubuntu - 2018-01-10 00:48:43]\r\n  1> \tat org.apache.lucene.store.Directory.openChecksumInput(Directory.java:119) ~[lucene-core-7.2.1.jar:7.2.1 b2b6438b37073bee1fca40374e85bf91aa457c0b - ubuntu - 2018-01-10 00:48:43]\r\n  1> \tat org.elasticsearch.index.store.Store.failIfCorrupted(Store.java:615) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.store.Store.failIfCorrupted(Store.java:607) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.store.Store.getMetadata(Store.java:281) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.store.Store.getMetadata(Store.java:253) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.store.Store.cleanupAndVerify(Store.java:683) ~[main/:?]\r\n  1> \tat org.elasticsearch.indices.recovery.RecoveryTarget.cleanFiles(RecoveryTarget.java:444) [main/:?]\r\n  1> \t... 10 more\r\n```\r\n\r\nAs the target failed to clean up, it retried another recovery. At that moment the corrupted marker was removed and the copied commit is safe, hence the replica starts sequence-based recovery. Unfortunately, translog and index commit on the target were mismatch because the Lucene commit was copied from the primary. This replica `[test][7]` could not recover from primary.\r\n\r\n```\r\n  1> Caused by: org.elasticsearch.index.translog.TranslogCorruptedException: expected shard UUID [32 5f 7a 61 42 43 56 4d 53 4f 47 4a 6a 35 30 4f 6c 69 65 43 44 51] but got: [54 62 51 6c 30 6a 49 4f 53 50 53 68 5a 76 58 2d 2d 44 46 70 58 41] this translog file belongs to a different translog. path:C:\\Users\\jenkins\\workspace\\elastic+elasticsearch+master+multijob-windows-compatibility\\server\\build\\testrun\\integTest\\J1\\temp\\org.elasticsearch.index.store.CorruptedFileIT_883F8FC2C6E448B5-001\\tempDir-002\\data\\nodes\\0\\indices\\0tscMvZ-Q-21DRHviJsJxw\\7\\translog\\translog-2.tlog\r\n  1> \tat org.elasticsearch.index.translog.TranslogReader.open(TranslogReader.java:131) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.translog.Translog.openReader(Translog.java:292) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.translog.Translog.recoverFromFiles(Translog.java:238) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.translog.Translog.<init>(Translog.java:176) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.engine.InternalEngine.openTranslog(InternalEngine.java:491) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.engine.InternalEngine.<init>(InternalEngine.java:180) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.engine.InternalEngine.<init>(InternalEngine.java:151) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.engine.InternalEngineFactory.newReadWriteEngine(InternalEngineFactory.java:25) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.shard.IndexShard.newEngine(IndexShard.java:2149) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.shard.IndexShard.createNewEngine(IndexShard.java:2131) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.shard.IndexShard.innerOpenEngineAndTranslog(IndexShard.java:1361) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.shard.IndexShard.openIndexAndSkipTranslogRecovery(IndexShard.java:1327) ~[main/:?]\r\n  1> \tat org.elasticsearch.indices.recovery.RecoveryTarget.prepareForTranslogOperations(RecoveryTarget.java:371) ~[main/:?]\r\n  1> \tat org.elasticsearch.indices.recovery.PeerRecoveryTargetService$PrepareForTranslogOperationsRequestHandler.messageReceived(PeerRecoveryTargetService.java:396) ~[main/:?]\r\n  1> \tat org.elasticsearch.indices.recovery.PeerRecoveryTargetService$PrepareForTranslogOperationsRequestHandler.messageReceived(PeerRecoveryTargetService.java:390) ~[main/:?]\r\n```","closed_by":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"performed_via_github_app":null}