{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/12251","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12251/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12251/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12251/events","html_url":"https://github.com/elastic/elasticsearch/issues/12251","id":95098529,"node_id":"MDU6SXNzdWU5NTA5ODUyOQ==","number":12251,"title":"Why do I still need @ThreadLeakFilters for threads named \"elasticsearch\"?","user":{"login":"mikerott","id":857712,"node_id":"MDQ6VXNlcjg1NzcxMg==","avatar_url":"https://avatars2.githubusercontent.com/u/857712?v=4","gravatar_id":"","url":"https://api.github.com/users/mikerott","html_url":"https://github.com/mikerott","followers_url":"https://api.github.com/users/mikerott/followers","following_url":"https://api.github.com/users/mikerott/following{/other_user}","gists_url":"https://api.github.com/users/mikerott/gists{/gist_id}","starred_url":"https://api.github.com/users/mikerott/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikerott/subscriptions","organizations_url":"https://api.github.com/users/mikerott/orgs","repos_url":"https://api.github.com/users/mikerott/repos","events_url":"https://api.github.com/users/mikerott/events{/privacy}","received_events_url":"https://api.github.com/users/mikerott/received_events","type":"User","site_admin":false},"labels":[{"id":60445228,"node_id":"MDU6TGFiZWw2MDQ0NTIyOA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest","name":">test","color":"5319e7","default":false,"description":"Issues or PRs that are addressing/adding tests"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-07-15T03:43:50Z","updated_at":"2016-04-25T14:27:46Z","closed_at":"2016-04-25T14:27:46Z","author_association":"NONE","active_lock_reason":null,"body":"I recently updated from 1.1.1 (yeah, I know) to 1.5.2.  The easy parts were changing some of the values in `@ClusterScope` annotation and a few method signature changes here and there.  But then I hit a blocker.  I'm using a class that `extends ElasticsearchIntegrationTest`.  Against 1.1.1, I had no need for `@ThreadLeakFilters` annotation, but now against 1.5.2, I find that I _do_ need it so I can explicitly ignore threads named `elasticsearch`.\n\nWithout the annotation, I see the following failures during test execution:\n\n```\ncom.carrotsearch.randomizedtesting.ThreadLeakError: 65 threads leaked from SUITE scope at com.mike.IndexManagerTest: \n   1) Thread[id=124, name=elasticsearch[Cypher][http_server_worker][T#14]{New I/O worker #74}, state=RUNNABLE, group=TGRP-IndexManagerTest]\n        at sun.nio.ch.KQueueArrayWrapper.kevent0(Native Method)\n        at sun.nio.ch.KQueueArrayWrapper.poll(KQueueArrayWrapper.java:159)\n        at sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:103)\n        at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:87)\n        at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:98)\n        at org.elasticsearch.common.netty.channel.socket.nio.SelectorUtil.select(SelectorUtil.java:68)\n        at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.select(AbstractNioSelector.java:434)\n        at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:212)\n        at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)\n... [63 more]\n```\n\nSo I added the annotation to my class that `extends ElasticsearchIntegrationTest`:\n\n```\n@ThreadLeakFilters(defaultFilters = true, filters = {TestRunnerThreadsFilter.class})\n```\n\nAnd the TestRunnerThreadsFilter class is:\n\n```\nimport com.carrotsearch.randomizedtesting.ThreadFilter;\n\npublic class TestRunnerThreadsFilter implements ThreadFilter {\n\n    @Override\n    public boolean reject(Thread thread) {\n        // randomizedtesting shouldn't bother checking for zombie threads for these:\n        String threadName = thread.getName();\n\n        if (threadName.startsWith(\"elasticsearch\")) {\n            return true;\n        }\n\n        return false;\n    }\n\n}\n```\n\nWhy do I need to do this?  Do I have a more fundamental problem I need to investigate?\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}