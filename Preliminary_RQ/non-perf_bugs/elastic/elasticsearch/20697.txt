{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/20697","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20697/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20697/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20697/events","html_url":"https://github.com/elastic/elasticsearch/issues/20697","id":180080958,"node_id":"MDU6SXNzdWUxODAwODA5NTg=","number":20697,"title":"Rankings based on term proximity rather than term frequency","user":{"login":"calufa","id":597404,"node_id":"MDQ6VXNlcjU5NzQwNA==","avatar_url":"https://avatars2.githubusercontent.com/u/597404?v=4","gravatar_id":"","url":"https://api.github.com/users/calufa","html_url":"https://github.com/calufa","followers_url":"https://api.github.com/users/calufa/followers","following_url":"https://api.github.com/users/calufa/following{/other_user}","gists_url":"https://api.github.com/users/calufa/gists{/gist_id}","starred_url":"https://api.github.com/users/calufa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/calufa/subscriptions","organizations_url":"https://api.github.com/users/calufa/orgs","repos_url":"https://api.github.com/users/calufa/repos","events_url":"https://api.github.com/users/calufa/events{/privacy}","received_events_url":"https://api.github.com/users/calufa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-09-29T15:24:08Z","updated_at":"2016-10-04T20:50:33Z","closed_at":"2016-10-04T20:50:32Z","author_association":"NONE","active_lock_reason":null,"body":"Currently \"span_near\" queries return desired results if all the \"span_terms\" exists on the results documents. I wonder if its possible to have an \"or\" inside the clauses, so if one of the terms doesn't exist it still return documents based on term proximity.\n\nThe use case is the following. I want to boost documents where terms occur close together (proximity). The closer the terms are from each other the higher the ranking, instead of ranking higher the documents that contains all the terms.\n\nConsider these 2 documents:\n1) the great fox\n2) the black night has come and the great and mighty fox went for dinner\n\nIf you query for \"the great black fox\", ES returns the following:\n1) the black night has come and the great and mighty fox went for dinner\n2) the great fox\n\nI would like 'the great fox' to be ranked higher even thought is missing 'black'.\n","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}