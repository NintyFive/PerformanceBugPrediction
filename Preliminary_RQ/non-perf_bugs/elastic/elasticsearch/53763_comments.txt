[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/600846254","html_url":"https://github.com/elastic/elasticsearch/issues/53763#issuecomment-600846254","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53763","id":600846254,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMDg0NjI1NA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-03-18T20:37:00Z","updated_at":"2020-03-18T20:37:00Z","author_association":"COLLABORATOR","body":"Pinging @elastic/ml-core (:ml)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/601610584","html_url":"https://github.com/elastic/elasticsearch/issues/53763#issuecomment-601610584","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53763","id":601610584,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMTYxMDU4NA==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2020-03-20T09:40:52Z","updated_at":"2020-03-20T09:41:20Z","author_association":"CONTRIBUTOR","body":"> Expected behavior would be for the datafeed to be `starting` and for it to start once resource became available\r\n\r\nThere are two bits to this.  Obviously it's a bug that the datafeed doesn't start once resource is available and that's relatively easy to fix.\r\n\r\nHaving the state being `starting` rather than `stopped` while it's waiting is a bigger problem.  Although the code has a `starting` state, at the moment it's never used.  These comments relate to that:\r\n\r\nhttps://github.com/elastic/elasticsearch/blob/8bbbe2870ffc8555c91a332dc5fc8670c54c4c58/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/MlTasks.java#L135\r\nhttps://github.com/elastic/elasticsearch/blob/20d4bc8a5f424fd5d253c57b906c0cea1b6aaff0/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportStopDatafeedAction.java#L97-L101\r\n\r\nSo:\r\n\r\n* The plan was to make `starting` an externally visible state in 8.0 to avoid screwing up any programmatic integration that doesn't expect that state in a minor version upgrade.\r\n* We _could_ do this sooner if we think the effects of not having it are bad enough - `stopped` is certainly a confusing state for a datafeed that's waiting for node assignment.\r\n* The comment \"Also consider treating STARTING like STARTED for stop API behaviour.\" alludes to further complications with making this change.  We _would_ need to do that if we make `starting` a first-class citizen, otherwise you wouldn't be able to stop a datafeed that was waiting for node assignment, that in turn would prevent you closing the job and we'd be back to the horrible deadlock situation we had 6 months ago.  But the bigger problem is whether there would be any unforeseen side effects of introducing `starting`.\r\n\r\nWe should probably discuss offline whether introducing `starting` to the outside world in 7.7 would count as a breaking change or a non-breaking enhancement.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/601670629","html_url":"https://github.com/elastic/elasticsearch/issues/53763#issuecomment-601670629","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53763","id":601670629,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMTY3MDYyOQ==","user":{"login":"sophiec20","id":4185750,"node_id":"MDQ6VXNlcjQxODU3NTA=","avatar_url":"https://avatars2.githubusercontent.com/u/4185750?v=4","gravatar_id":"","url":"https://api.github.com/users/sophiec20","html_url":"https://github.com/sophiec20","followers_url":"https://api.github.com/users/sophiec20/followers","following_url":"https://api.github.com/users/sophiec20/following{/other_user}","gists_url":"https://api.github.com/users/sophiec20/gists{/gist_id}","starred_url":"https://api.github.com/users/sophiec20/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sophiec20/subscriptions","organizations_url":"https://api.github.com/users/sophiec20/orgs","repos_url":"https://api.github.com/users/sophiec20/repos","events_url":"https://api.github.com/users/sophiec20/events{/privacy}","received_events_url":"https://api.github.com/users/sophiec20/received_events","type":"User","site_admin":false},"created_at":"2020-03-20T12:17:00Z","updated_at":"2020-03-20T12:17:00Z","author_association":"NONE","body":"I have no desire to introduce `starting` if this causes excessive implementation complications. We have a tight coupling to the job/datafeed relationship, so complexity in the multi-state relationship is also something we should avoid in our future roadmap. I hadn't thought that through enough when writing the expected behaviour para above.\r\n\r\nTo clarify scope and intention of this ticket - it is to ensure that jobs can lazy open. So, let's fix the bug.\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/601828284","html_url":"https://github.com/elastic/elasticsearch/issues/53763#issuecomment-601828284","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53763","id":601828284,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMTgyODI4NA==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2020-03-20T17:39:44Z","updated_at":"2020-03-20T17:39:44Z","author_association":"CONTRIBUTOR","body":"I think we might need to make `starting` externally visible in the datafeed stats.  After fixing just the lazy start side it confuses the UI if the externally visible status of the datafeed is `stopped`.  The UI has no way to know that it should attempt to stop that datafeed.\r\n\r\nI will make the change on Monday.","performed_via_github_app":null}]