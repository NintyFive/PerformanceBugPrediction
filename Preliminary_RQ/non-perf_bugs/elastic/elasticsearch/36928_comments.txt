[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/449310183","html_url":"https://github.com/elastic/elasticsearch/issues/36928#issuecomment-449310183","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36928","id":449310183,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0OTMxMDE4Mw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-12-21T08:31:06Z","updated_at":"2018-12-21T08:31:06Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/449384229","html_url":"https://github.com/elastic/elasticsearch/issues/36928#issuecomment-449384229","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36928","id":449384229,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0OTM4NDIyOQ==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2018-12-21T13:09:20Z","updated_at":"2018-12-21T13:09:20Z","author_association":"CONTRIBUTOR","body":"The issue that CI found is a test failure, unrelated to cluster formation, for which I opened #36935. However, the failure you get when trying to reproduce this looks to be a Gradle issue: running with `--dry-run` shows that `upgraded-node-0` is stopped before `upgraded-node-1` is started, so the cluster cannot form:\r\n\r\n```\r\n...\r\n:x-pack:qa:rolling-upgrade:with-system-key:v5.6.15#oneThirdUpgradedTestCluster#wait SKIPPED\r\n:x-pack:qa:rolling-upgrade:with-system-key:v5.6.15#oneThirdUpgradedTestRunner SKIPPED\r\n:x-pack:qa:rolling-upgrade:with-system-key:v5.6.15#oneThirdUpgradedTestCluster#stop SKIPPED\r\n...\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/449421094","html_url":"https://github.com/elastic/elasticsearch/issues/36928#issuecomment-449421094","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36928","id":449421094,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0OTQyMTA5NA==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2018-12-21T15:40:55Z","updated_at":"2018-12-21T15:40:55Z","author_association":"MEMBER","body":"So this is kind of funny :) The problem here isn't necessarily with Gradle, it's this:\r\n\r\nif you run this reproducer:\r\n\r\n```\r\n./gradlew :x-pack:qa:rolling-upgrade:with-system-key:v5.6.15#twoThirdsUpgradedTestRunner -Dtests.seed=679945B82D7ABBD4 -Dtests.class=org.elasticsearch.upgrades.MlMigrationIT -Dtests.method=\"testConfigMigration\" -Dtests.security.manager=true -Dtests.locale=it -Dtests.timezone=Pacific/Ponape -Dcompiler.java=11 -Druntime.java=8\r\n```\r\n\r\nthen you will not run the fully upgraded cluster, i.e. the `5.6.15#upgradedClusterTestCluster` tasks.\r\nWe do configure that task to be finalized by `#oneThirdUpgradedTestCluster#stop\"` and `#twoThirdsUpgradedTestCluster#stop`. So running any of the `twoThirdsUpgradedTestRunner` tasks directly spells trouble. I don't think this is the reason for the test failure on CI itself though, the ordering is fine if you run all the full BWC test.\r\nIs this even something we care about fixing? (NOTE: it seems like this wouldn't be an entirely trivial fix because of the way we lazily create the `#stop` tasks)\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/449430013","html_url":"https://github.com/elastic/elasticsearch/issues/36928#issuecomment-449430013","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36928","id":449430013,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0OTQzMDAxMw==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2018-12-21T16:13:52Z","updated_at":"2018-12-21T16:13:52Z","author_association":"CONTRIBUTOR","body":"I think we should do _something_ because otherwise this confusion will just repeat every time there's a BWC test failure that someone tries to reproduce. Maybe we can fix the `REPRODUCE WITH` line to say to run the same test on the fully-upgraded cluster?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/449430585","html_url":"https://github.com/elastic/elasticsearch/issues/36928#issuecomment-449430585","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36928","id":449430585,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0OTQzMDU4NQ==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2018-12-21T16:16:16Z","updated_at":"2018-12-21T16:16:16Z","author_association":"MEMBER","body":"@DaveCTurner \r\n\r\n> Maybe we can fix the REPRODUCE WITH line to say to run the same test on the fully-upgraded cluster?\r\n\r\nYea that would be a good approach imo.\r\n\r\n@atorok you're currently refactoring this logic anyway, wdyt?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/449458016","html_url":"https://github.com/elastic/elasticsearch/issues/36928#issuecomment-449458016","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36928","id":449458016,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0OTQ1ODAxNg==","user":{"login":"alpar-t","id":2565652,"node_id":"MDQ6VXNlcjI1NjU2NTI=","avatar_url":"https://avatars1.githubusercontent.com/u/2565652?v=4","gravatar_id":"","url":"https://api.github.com/users/alpar-t","html_url":"https://github.com/alpar-t","followers_url":"https://api.github.com/users/alpar-t/followers","following_url":"https://api.github.com/users/alpar-t/following{/other_user}","gists_url":"https://api.github.com/users/alpar-t/gists{/gist_id}","starred_url":"https://api.github.com/users/alpar-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpar-t/subscriptions","organizations_url":"https://api.github.com/users/alpar-t/orgs","repos_url":"https://api.github.com/users/alpar-t/repos","events_url":"https://api.github.com/users/alpar-t/events{/privacy}","received_events_url":"https://api.github.com/users/alpar-t/received_events","type":"User","site_admin":false},"created_at":"2018-12-21T18:05:15Z","updated_at":"2018-12-21T18:05:15Z","author_association":"CONTRIBUTOR","body":"Testclusters will be less affected by this. As it won't implement the cluster management with tasks, so the repro line will work from the perspective of the upgrades, but I'm not sure it will be 100% correct,  as the `test.class` and `test.method` will be applicable to all test runners. I don't think we guarantee these to be side effect free, so one might still have to run say all tests in `oneThirdUpgradedTest` to reproduce a failure in `twoThirdsUpgradedTest`  so it might be better to create a custom repro line printer for these which just replaces the task  with would print something like \r\n```\r\n./gradlew -p x-pack/qa/rolling-upgrade/with-system-key -Dtests.seed=679945B82D7ABBD4  -Dtests.security.manager=true -Dtests.locale=it -Dtests.timezone=Pacific/Ponape -Dcompiler.java=11 -Druntime.java=8\r\n```\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/449461220","html_url":"https://github.com/elastic/elasticsearch/issues/36928#issuecomment-449461220","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36928","id":449461220,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0OTQ2MTIyMA==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2018-12-21T18:18:52Z","updated_at":"2018-12-21T18:18:52Z","author_association":"CONTRIBUTOR","body":"I think I'd rather accept the risk of side-effects and keep the `test.class` and `test.method` arguments in the output. There will be many situations where the reproduction continues to work even if we haven't run the whole suite first, and it's a lot quicker to try the more focussed single-test run first and only expand it to run everything if you suspect side-effects. It's a lot easier to take those arguments out than to put them in, and taking them out is something I would naturally try when struggling to reproduce a failure.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/449717119","html_url":"https://github.com/elastic/elasticsearch/issues/36928#issuecomment-449717119","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36928","id":449717119,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0OTcxNzExOQ==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2018-12-24T10:39:46Z","updated_at":"2018-12-24T10:39:46Z","author_association":"MEMBER","body":"@atorok assigned this to you then, hope it's ok :)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/464716430","html_url":"https://github.com/elastic/elasticsearch/issues/36928#issuecomment-464716430","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36928","id":464716430,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NDcxNjQzMA==","user":{"login":"alpar-t","id":2565652,"node_id":"MDQ6VXNlcjI1NjU2NTI=","avatar_url":"https://avatars1.githubusercontent.com/u/2565652?v=4","gravatar_id":"","url":"https://api.github.com/users/alpar-t","html_url":"https://github.com/alpar-t","followers_url":"https://api.github.com/users/alpar-t/followers","following_url":"https://api.github.com/users/alpar-t/following{/other_user}","gists_url":"https://api.github.com/users/alpar-t/gists{/gist_id}","starred_url":"https://api.github.com/users/alpar-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpar-t/subscriptions","organizations_url":"https://api.github.com/users/alpar-t/orgs","repos_url":"https://api.github.com/users/alpar-t/repos","events_url":"https://api.github.com/users/alpar-t/events{/privacy}","received_events_url":"https://api.github.com/users/alpar-t/received_events","type":"User","site_admin":false},"created_at":"2019-02-18T12:35:17Z","updated_at":"2019-02-18T12:35:17Z","author_association":"CONTRIBUTOR","body":"I would rather not teach the reproduction printer about  the different tasks we use to have them substituted by `check`. We should make sure that the tasks themselves have the proper inner dependencies. Like this was said before, this is a non trivial fix for something we are replacing with testclusters, so I am going to close this. ","performed_via_github_app":null}]