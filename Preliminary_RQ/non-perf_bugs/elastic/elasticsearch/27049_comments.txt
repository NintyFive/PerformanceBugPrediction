[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/337903268","html_url":"https://github.com/elastic/elasticsearch/issues/27049#issuecomment-337903268","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27049","id":337903268,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzkwMzI2OA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2017-10-19T13:12:12Z","updated_at":"2017-10-19T13:12:12Z","author_association":"CONTRIBUTOR","body":"I'd played with something like this a few years ago. It looked like it worked then but I never got around to finishing it. I do really like the idea of automatically optimizing these when the user asks for extra data to be indexed.\r\n\r\nI'm curious what the advantage of using a prefix is to using a separate Lucene field under the covers. Lower overhead, certainly, but you have to make sure that things like wildcards don't accidentally match the prefix.\r\n\r\nI wonder if it'd be possible to make this a set of flags on text and keyword fields. You could flip them on to automatically optimize prefix search and the like.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/337906752","html_url":"https://github.com/elastic/elasticsearch/issues/27049#issuecomment-337906752","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27049","id":337906752,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzkwNjc1Mg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-10-19T13:25:06Z","updated_at":"2017-10-19T13:25:06Z","author_association":"CONTRIBUTOR","body":"> separate Lucene field under the covers\r\n\r\nThis is something we need to think about indeed. I initially thought about a single field so that you would not pay 2x the price for analysis, but maintaining multiple fields would avoid potential issues with wildcard/fuzzy indeed, as well as probably making things simpler, especially if you want to optimize for both phrase and prefix queries on the same field.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/339273007","html_url":"https://github.com/elastic/elasticsearch/issues/27049#issuecomment-339273007","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27049","id":339273007,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTI3MzAwNw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-10-25T09:35:56Z","updated_at":"2017-10-31T16:50:21Z","author_association":"CONTRIBUTOR","body":"Thinking more about it, the trade-off is hard. Here are the pros/cons I can think of:\r\n\r\nFeature | 1 field | 2 fields\r\n------------ | ------------- | ------\r\nFuzzy/wildcard/regex queries | only works well if the generated automaton does not start with a wildcard, otherwise prefix terms might match | works as usual\r\nIndexing speed | analysis performed once | analysis performed twice |\r\nQuery speed | a bit slower due to larger terms dict | as usual\r\nSpan queries | works | requires field-masking (which is problematic)\r\nMatch phrase prefix query | can be optimized | can't be optimized: phrases require a single field\r\nHighlighting | works | prefix queries can't be highlighted","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/340876025","html_url":"https://github.com/elastic/elasticsearch/issues/27049#issuecomment-340876025","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27049","id":340876025,"node_id":"MDEyOklzc3VlQ29tbWVudDM0MDg3NjAyNQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-10-31T19:11:38Z","updated_at":"2017-10-31T19:11:38Z","author_association":"CONTRIBUTOR","body":"I only realized now that this could help make the `match_phrase_prefix` query efficient (and more accurate). I like it because it means that every text field optimized for prefix queries could be reasonably good at returning suggestions.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/341707996","html_url":"https://github.com/elastic/elasticsearch/issues/27049#issuecomment-341707996","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27049","id":341707996,"node_id":"MDEyOklzc3VlQ29tbWVudDM0MTcwNzk5Ng==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-11-03T13:48:30Z","updated_at":"2017-11-03T13:48:30Z","author_association":"MEMBER","body":"The standard codec in Lucene had an option to handle auto-prefix in the dictionary. It was a nice feature that was able to build prefixes that contain more than N documents. The selection was done efficiently at flush time and merge time but it was removed because it was hard to maintain internally. I think it could be the same thing with the one field solution. If we start to add special prefix in the terms dictionary that should not match certain query but be used for others it might become impossible to maintain at some point. I like the solution with two fields because it can be contained to some queries more easily. \r\nFor instance we could have three specialized extra field `prefix`, `phrase` and `phrase_prefix`. \r\nIn these three types we can do all the optimizations we want but we would use them only for `prefix`, `phrase` or `phrase_prefix` query. For the `phrase_prefix` we can build the extra field specially to handle this type of query so there might be no need to use the original field at all. It's also more costly because we might have some duplicate terms in these two fields.\r\nThe major problem IMO is the highlighting that would break if we rewrite some queries internally to use another field. Though I tend to see this as a push to prioritize https://github.com/elastic/elasticsearch/issues/5172. That's a very good use case for this feature especially if we ensure that positions and offsets are the same when we index the document.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/351013543","html_url":"https://github.com/elastic/elasticsearch/issues/27049#issuecomment-351013543","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27049","id":351013543,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MTAxMzU0Mw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-12-12T10:41:39Z","updated_at":"2017-12-12T10:41:39Z","author_association":"CONTRIBUTOR","body":"> If we start to add special prefix in the terms dictionary that should not match certain query but be used for others it might become impossible to maintain at some point.\r\n\r\nI would agree with that statement. I wanted to avoid having to resort to the field-masking span query, but I agree it is not worth making it a maintenance nightmare.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/357628226","html_url":"https://github.com/elastic/elasticsearch/issues/27049#issuecomment-357628226","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27049","id":357628226,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NzYyODIyNg==","user":{"login":"romseygeek","id":1347065,"node_id":"MDQ6VXNlcjEzNDcwNjU=","avatar_url":"https://avatars0.githubusercontent.com/u/1347065?v=4","gravatar_id":"","url":"https://api.github.com/users/romseygeek","html_url":"https://github.com/romseygeek","followers_url":"https://api.github.com/users/romseygeek/followers","following_url":"https://api.github.com/users/romseygeek/following{/other_user}","gists_url":"https://api.github.com/users/romseygeek/gists{/gist_id}","starred_url":"https://api.github.com/users/romseygeek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/romseygeek/subscriptions","organizations_url":"https://api.github.com/users/romseygeek/orgs","repos_url":"https://api.github.com/users/romseygeek/repos","events_url":"https://api.github.com/users/romseygeek/events{/privacy}","received_events_url":"https://api.github.com/users/romseygeek/received_events","type":"User","site_admin":false},"created_at":"2018-01-15T09:32:56Z","updated_at":"2018-01-15T09:32:56Z","author_association":"CONTRIBUTOR","body":"I've been playing around with this for prefix terms.  The main issue I'm running into is that it isn't as simple as just adding an ngram tokenfilter to the end of the analysis chain, because stemming messes things up.\r\n\r\n1. Indexing into a separate field: We'd want to generate a tokenstream using a normalizer, and wrap it with an EdgeNGramTokenFilter.  This means generating a normalizer for all analyzers when the IndexAnalyzers object is built, which is not the case at the moment.  This would also help improve standard prefix queries, which I think either don't analyze their input terms at all, or pass them through the full analysis chain.\r\n\r\n2. Term stacking in a single field: We'd want to check if there are non-multitermaware components in the analysis chain, and if so inject the edgengram filter in beforehand, possibly extending things so that the ngrams are marked as Keywords so they don't get stemmed.\r\n\r\nIn both cases we're modifying analyzers after they've been built, which isn't trivial because IndexAnalyzers doesn't hold onto that information","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/357640796","html_url":"https://github.com/elastic/elasticsearch/issues/27049#issuecomment-357640796","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27049","id":357640796,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NzY0MDc5Ng==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-01-15T10:21:22Z","updated_at":"2018-01-15T10:21:22Z","author_association":"CONTRIBUTOR","body":"@romseygeek and I just discussed this and stemming is probably not a concern: results won't be different from a regular wildcard query on a field that has a stemmer in its analysis chain. Furthermore having the same result set regardless of the optimization is probably a good feature.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/372763898","html_url":"https://github.com/elastic/elasticsearch/issues/27049#issuecomment-372763898","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27049","id":372763898,"node_id":"MDEyOklzc3VlQ29tbWVudDM3Mjc2Mzg5OA==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2018-03-13T18:08:23Z","updated_at":"2018-03-13T18:08:23Z","author_association":"MEMBER","body":"cc @elastic/es-search-aggs ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/394266250","html_url":"https://github.com/elastic/elasticsearch/issues/27049#issuecomment-394266250","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27049","id":394266250,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NDI2NjI1MA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-06-04T07:55:30Z","updated_at":"2018-06-04T07:55:30Z","author_association":"CONTRIBUTOR","body":"Closed via #28290 and #30450, courtesy of @romseygeek.","performed_via_github_app":null}]