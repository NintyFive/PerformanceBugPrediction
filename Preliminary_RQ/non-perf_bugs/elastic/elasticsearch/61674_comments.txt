[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/683653624","html_url":"https://github.com/elastic/elasticsearch/issues/61674#issuecomment-683653624","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61674","id":683653624,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MzY1MzYyNA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-08-31T08:51:32Z","updated_at":"2020-08-31T08:51:32Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-features (:Core/Features/Ingest)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/690257754","html_url":"https://github.com/elastic/elasticsearch/issues/61674#issuecomment-690257754","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61674","id":690257754,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MDI1Nzc1NA==","user":{"login":"gaobinlong","id":15811131,"node_id":"MDQ6VXNlcjE1ODExMTMx","avatar_url":"https://avatars2.githubusercontent.com/u/15811131?v=4","gravatar_id":"","url":"https://api.github.com/users/gaobinlong","html_url":"https://github.com/gaobinlong","followers_url":"https://api.github.com/users/gaobinlong/followers","following_url":"https://api.github.com/users/gaobinlong/following{/other_user}","gists_url":"https://api.github.com/users/gaobinlong/gists{/gist_id}","starred_url":"https://api.github.com/users/gaobinlong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaobinlong/subscriptions","organizations_url":"https://api.github.com/users/gaobinlong/orgs","repos_url":"https://api.github.com/users/gaobinlong/repos","events_url":"https://api.github.com/users/gaobinlong/events{/privacy}","received_events_url":"https://api.github.com/users/gaobinlong/received_events","type":"User","site_admin":false},"created_at":"2020-09-10T12:43:59Z","updated_at":"2020-09-10T12:43:59Z","author_association":"CONTRIBUTOR","body":"Maybe it's not a problem because the two test cases are different, if we define a `on_failure ` in  the pipeline level, the processing halts at the first exception, but if we define a `on_failure ` in  the processor level, the pipeline continues executing the remaining processors even though it encounters a failure.\r\n\r\nWe can get more details from the document: [handling failure in pipelines](https://www.elastic.co/guide/en/elasticsearch/reference/master/handling-failure-in-pipelines.html\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/723970803","html_url":"https://github.com/elastic/elasticsearch/issues/61674#issuecomment-723970803","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61674","id":723970803,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMzk3MDgwMw==","user":{"login":"probakowski","id":3896475,"node_id":"MDQ6VXNlcjM4OTY0NzU=","avatar_url":"https://avatars1.githubusercontent.com/u/3896475?v=4","gravatar_id":"","url":"https://api.github.com/users/probakowski","html_url":"https://github.com/probakowski","followers_url":"https://api.github.com/users/probakowski/followers","following_url":"https://api.github.com/users/probakowski/following{/other_user}","gists_url":"https://api.github.com/users/probakowski/gists{/gist_id}","starred_url":"https://api.github.com/users/probakowski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/probakowski/subscriptions","organizations_url":"https://api.github.com/users/probakowski/orgs","repos_url":"https://api.github.com/users/probakowski/repos","events_url":"https://api.github.com/users/probakowski/events{/privacy}","received_events_url":"https://api.github.com/users/probakowski/received_events","type":"User","site_admin":false},"created_at":"2020-11-09T12:02:35Z","updated_at":"2020-11-09T12:02:35Z","author_association":"CONTRIBUTOR","body":"@gaobinlong is on point here, if `on_failure` is defined at pipeline level all processors after failed one are skipped. You can check it with this example:\r\n```\r\nPOST /_ingest/pipeline/_simulate\r\n{\r\n  \"pipeline\": {\r\n    \"processors\": [\r\n      {\r\n        \"grok\": {\r\n          \"field\": \"message\",\r\n          \"patterns\": [\r\n            \"^%{NUMBER:date} This is a sample message$\"\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        \"set\": {\r\n          \"field\": \"after_failure\",\r\n          \"value\": \"after_failure\"\r\n        }\r\n      },\r\n      {\r\n        \"date\": {\r\n          \"field\": \"date\",\r\n          \"formats\": [\r\n            \"UNIX\"\r\n          ]\r\n        }\r\n      }\r\n    ],\r\n    \"on_failure\": [\r\n      {\r\n        \"append\": {\r\n          \"field\": \"_ingest.error.type\",\r\n          \"value\": \"{{ _ingest.on_failure_processor_type }}\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"docs\": [\r\n    {\r\n      \"_source\": {\r\n        \"message\": \"1598635722 This is a sample message.\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\nField `after_failure` will be missing. \r\nI'll close this issue.","performed_via_github_app":null}]