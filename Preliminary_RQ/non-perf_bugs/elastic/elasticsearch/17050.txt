{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/17050","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17050/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17050/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17050/events","html_url":"https://github.com/elastic/elasticsearch/issues/17050","id":139894096,"node_id":"MDU6SXNzdWUxMzk4OTQwOTY=","number":17050,"title":"Shard balancing model for throttled shards does not satisfy allocation deciders","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"labels":[{"id":837246479,"node_id":"MDU6TGFiZWw4MzcyNDY0Nzk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Allocation","name":":Distributed/Allocation","color":"0e8a16","default":false,"description":"All issues relating to the decision making around placing a shard (both master logic & on the nodes)"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-03-10T13:59:47Z","updated_at":"2018-04-17T19:32:39Z","closed_at":"2018-04-17T19:32:39Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The shard balancer allocates / relocates shards to nodes based on allocation deciders as well as a weight function. Allocation deciders represent hard constraints. If the deciders say NO then a shard cannot be allocated to that node. The weight function is a soft constraint and can be seen as more of a preference (This is the true \"balancing\" part of the balancer). The shard balancer allocates / relocates shards to the node with the lowest weight that satisfies the allocation deciders. This is not necessarily the node with the lowest overall weight.\n\nAllocation deciders do not only provide a YES / NO answer but also have a concept of throttling. If an allocation decider returns THROTTLE as result, it means that the shard can be allocated to the node after other shards are finished being allocated / relocated. The shard balancer has special handling for throttling when calculating the weights for nodes. The reason for this is that it wants to optimize the balance for the full allocation of all shards (i.e. it does not optimize the balance for the shards that are allocated in this round but the best balance after all (throttled) shards have been allocated). In order to do that the shard balancer creates a separate predictive model of nodes with their allocated shards to simulate the balancing of shards in the context of throttling.\n\nThe issue lies in the way this model is constructed. The main difference in allocating / relocating shards on this predictive model versus the actual allocation is the following. If the node with lowest weight is found where allocation deciders say YES, then the shard is allocated on the predictive model as well as the actual allocation. If, however, the node with lowest weight is found and allocation deciders say THROTTLE, then the shard is allocated only on the predictive model but not on the actual allocation. This means that with each throttled allocation the model diverges more and more from the actual allocation. Allocation deciders calculate their decisions however only based on the actual allocation. The predictive model is never checked if it satisfies any of the constraints. This means that the model does not represent any real future allocation anymore as it does not satisfy the allocation deciders.\n\nExample demonstrating the issue:\nhttps://github.com/ywelsch/elasticsearch/commit/c320581c9c2b7c1773949d1e52cdfe9f2392038e shows a test run where the predictive model contains multiple replicas of the same shard on the same node which does not reflect any realistic situation allowed by the allocation deciders.\n","closed_by":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"performed_via_github_app":null}