[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/179729987","html_url":"https://github.com/elastic/elasticsearch/issues/16444#issuecomment-179729987","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16444","id":179729987,"node_id":"MDEyOklzc3VlQ29tbWVudDE3OTcyOTk4Nw==","user":{"login":"matthesrieke","id":3786768,"node_id":"MDQ6VXNlcjM3ODY3Njg=","avatar_url":"https://avatars2.githubusercontent.com/u/3786768?v=4","gravatar_id":"","url":"https://api.github.com/users/matthesrieke","html_url":"https://github.com/matthesrieke","followers_url":"https://api.github.com/users/matthesrieke/followers","following_url":"https://api.github.com/users/matthesrieke/following{/other_user}","gists_url":"https://api.github.com/users/matthesrieke/gists{/gist_id}","starred_url":"https://api.github.com/users/matthesrieke/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthesrieke/subscriptions","organizations_url":"https://api.github.com/users/matthesrieke/orgs","repos_url":"https://api.github.com/users/matthesrieke/repos","events_url":"https://api.github.com/users/matthesrieke/events{/privacy}","received_events_url":"https://api.github.com/users/matthesrieke/received_events","type":"User","site_admin":false},"created_at":"2016-02-04T09:29:44Z","updated_at":"2016-02-04T09:29:44Z","author_association":"NONE","body":"`/var/log/elasticsearch/elasticsearch.log` does not provide too much information, still here are the entries starting with index creation:\n\n[spatial-index-bug_log.txt](https://github.com/elastic/elasticsearch/files/117148/spatial-index-bug_log.txt)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/180085943","html_url":"https://github.com/elastic/elasticsearch/issues/16444#issuecomment-180085943","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16444","id":180085943,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MDA4NTk0Mw==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2016-02-04T22:41:36Z","updated_at":"2016-02-04T22:41:36Z","author_association":"MEMBER","body":"@nknize maybe you could take a look at this?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/180472697","html_url":"https://github.com/elastic/elasticsearch/issues/16444#issuecomment-180472697","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16444","id":180472697,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MDQ3MjY5Nw==","user":{"login":"nknize","id":830187,"node_id":"MDQ6VXNlcjgzMDE4Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/830187?v=4","gravatar_id":"","url":"https://api.github.com/users/nknize","html_url":"https://github.com/nknize","followers_url":"https://api.github.com/users/nknize/followers","following_url":"https://api.github.com/users/nknize/following{/other_user}","gists_url":"https://api.github.com/users/nknize/gists{/gist_id}","starred_url":"https://api.github.com/users/nknize/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nknize/subscriptions","organizations_url":"https://api.github.com/users/nknize/orgs","repos_url":"https://api.github.com/users/nknize/repos","events_url":"https://api.github.com/users/nknize/events{/privacy}","received_events_url":"https://api.github.com/users/nknize/received_events","type":"User","site_admin":false},"created_at":"2016-02-05T18:03:48Z","updated_at":"2016-02-05T18:03:48Z","author_association":"CONTRIBUTOR","body":"Hi @matthesrieke \n\nI'll try to reproduce the issue myself in a bit. In the meantime, if you have a chance try explicitly setting `distance_error_pct : 0.025`. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/181755372","html_url":"https://github.com/elastic/elasticsearch/issues/16444#issuecomment-181755372","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16444","id":181755372,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MTc1NTM3Mg==","user":{"login":"matthesrieke","id":3786768,"node_id":"MDQ6VXNlcjM3ODY3Njg=","avatar_url":"https://avatars2.githubusercontent.com/u/3786768?v=4","gravatar_id":"","url":"https://api.github.com/users/matthesrieke","html_url":"https://github.com/matthesrieke","followers_url":"https://api.github.com/users/matthesrieke/followers","following_url":"https://api.github.com/users/matthesrieke/following{/other_user}","gists_url":"https://api.github.com/users/matthesrieke/gists{/gist_id}","starred_url":"https://api.github.com/users/matthesrieke/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthesrieke/subscriptions","organizations_url":"https://api.github.com/users/matthesrieke/orgs","repos_url":"https://api.github.com/users/matthesrieke/repos","events_url":"https://api.github.com/users/matthesrieke/events{/privacy}","received_events_url":"https://api.github.com/users/matthesrieke/received_events","type":"User","site_admin":false},"created_at":"2016-02-09T08:19:41Z","updated_at":"2016-02-09T08:19:41Z","author_association":"NONE","body":"hi @nknize \nthanks for investigating. indeed, setting `distance_error_pct` (even to a very small double, e.g. 0.0001) seems to resolve the memory error and improve performance!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/445902478","html_url":"https://github.com/elastic/elasticsearch/issues/16444#issuecomment-445902478","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16444","id":445902478,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NTkwMjQ3OA==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2018-12-10T17:34:40Z","updated_at":"2018-12-10T17:34:40Z","author_association":"MEMBER","body":"Confirming this is still an issue in 6.x and master.\r\n\r\nI understand the rationale that by setting a `precision`, the user is signaling to us that they expect a certain level of accuracy, which is why we set `distance_error_pct` to zero internally.  But it feels trappy that a user can OOM their node on accident by ignoring that warning in the docs.  Worse, their system may work fine for a long time until a sufficiently antagonistic doc shows up and OOMs the node.\r\n\r\nIs there a way we can add a circuit-breaker style runtime check to abort indexing a doc if it starts to use too much memory while indexing?  \r\n\r\nAlternatively, perhaps we need to change the default so that it doesn't default to `distance_error_pct: 0`?  Or some heuristic that scales the `distance_error_pct` based on `precision`?\r\n\r\n\r\n/cc @elastic/es-analytics-geo\r\n\r\n\r\nUpdated settings/docs for replicating on newer versions of ES:\r\n\r\n```\r\nDELETE test\r\nPUT test\r\n{\"mappings\":{\"entry\":{\"dynamic\":\"false\",\"properties\":{\"abstract\":{\"type\":\"text\",\"boost\":4},\"access_constraint\":{\"type\":\"keyword\"},\"alternateTitle\":{\"type\":\"text\",\"boost\":5},\"availability\":{\"type\":\"text\"},\"availableFormats\":{\"type\":\"keyword\"},\"availableFormatsVersion\":{\"type\":\"keyword\"},\"average_file_size\":{\"type\":\"keyword\"},\"conditions\":{\"type\":\"keyword\"},\"coverage\":{\"type\":\"keyword\"},\"creation_date\":{\"type\":\"date\",\"ignore_malformed\":true,\"format\":\"strict_date_optional_time||epoch_millis\"},\"datasetCharacterSet\":{\"type\":\"keyword\"},\"datasetLanguage\":{\"type\":\"keyword\"},\"datasetTitle\":{\"type\":\"text\",\"boost\":5},\"dateStamp\":{\"type\":\"date\",\"ignore_malformed\":true,\"format\":\"strict_date_optional_time||epoch_millis\"},\"fulltext\":{\"type\":\"text\"},\"ident_identifier\":{\"type\":\"text\",\"boost\":10},\"location\":{\"type\":\"geo_shape\",\"precision\":\"52.0m\"},\"xmldoc\":{\"type\":\"text\"}}}}}\r\n\r\nPUT /test/entry/123\r\n{\"abstract\":\"test\",\"access_constraint\":\"copyright\",\"alternateTitle\":[\"test1\",\"test2\"],\"availability\":\"on demand\",\"availableFormats\":\"tst\",\"availableFormatsVersion\":\"-\",\"average_file_size\":\"5.23 MB\",\"conditions\":[\"fee\"],\"coverage\":\"world\",\"creation_date\":\"2016-01-23\",\"datasetCharacterSet\":\"utf8\",\"datasetLanguage\":\"eng\",\"datasetTitle\":\"Test Dataset\",\"dateStamp\":\"2015-10-25\",\"frequency\":\"24 (per day)\",\"fulltext\":\"test fulltext content\",\"ident_identifier\":\"test:id:123451\",\"location\":{\"type\":\"envelope\",\"coordinates\":[[-65,65],[65,-65]]},\"xmldoc\":\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><gmi:MI_Metadata xmlns:gmi=\\\"http://www.isotc211.org/2005/gmi\\\"></gmi:MI_Metadata>\"}\r\n```\r\n\r\nAnd the OOM:\r\n\r\n```\r\n[elasticsearch] [2018-12-10T12:12:50,700][ERROR][o.e.i.e.Engine           ] [node-0] [test][0] already closed by tragic event on the index writer\r\n[elasticsearch] java.lang.OutOfMemoryError: Java heap space\r\n[elasticsearch]         at org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray.<init>(FreqProxTermsWriterPerField.java:224) ~[lucene-core-8.0.0-snapshot-c78429a554.jar:8.0.0-snapshot-c78429a554 c78429a554d28611dacd90c388e6c34039b228d1 - romseygeek - 2018-12-04 10:17:44]\r\n[elasticsearch]         at org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray.newInstance(FreqProxTermsWriterPerField.java:245) ~[lucene-core-8.0.0-snapshot-c78429a554.jar:8.0.0-snapshot-c78429a554 c78429a554d28611dacd90c388e6c34039b228d1 - romseygeek - 2018-12-04 10:17:44]\r\n[elasticsearch]         at org.apache.lucene.index.ParallelPostingsArray.grow(ParallelPostingsArray.java:46) ~[lucene-core-8.0.0-snapshot-c78429a554.jar:8.0.0-snapshot-c78429a554 c78429a554d28611dacd90c388e6c34039b228d1 - romseygeek - 2018-12-04 10:17:44]\r\n[elasticsearch]         at org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray.grow(TermsHashPerField.java:252) ~[lucene-core-8.0.0-snapshot-c78429a554.jar:8.0.0-snapshot-c78429a554 c78429a554d28611dacd90c388e6c34039b228d1 - romseygeek - 2018-12-04 10:17:44]\r\n[elasticsearch]         at org.apache.lucene.util.BytesRefHash.add(BytesRefHash.java:273) ~[lucene-core-8.0.0-snapshot-c78429a554.jar:8.0.0-snapshot-c78429a554 c78429a554d28611dacd90c388e6c34039b228d1 - romseygeek - 2018-12-04 10:17:44]\r\n[elasticsearch]         at org.apache.lucene.index.TermsHashPerField.add(TermsHashPerField.java:151) ~[lucene-core-8.0.0-snapshot-c78429a554.jar:8.0.0-snapshot-c78429a554 c78429a554d28611dacd90c388e6c34039b228d1 - romseygeek - 2018-12-04 10:17:44]\r\n[elasticsearch]         at org.apache.lucene.index.DefaultIndexingChain$PerField.invert(DefaultIndexingChain.java:856) ~[lucene-core-8.0.0-snapshot-c78429a554.jar:8.0.0-snapshot-c78429a554 c78429a554d28611dacd90c388e6c34039b228d1 - romseygeek - 2018-12-04 10:17:44]\r\n[elasticsearch]         at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:441) ~[lucene-core-8.0.0-snapshot-c78429a554.jar:8.0.0-snapshot-c78429a554 c78429a554d28611dacd90c388e6c34039b228d1 - romseygeek - 2018-12-04 10:17:44]\r\n[elasticsearch]         at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:405) ~[lucene-core-8.0.0-snapshot-c78429a554.jar:8.0.0-snapshot-c78429a554 c78429a554d28611dacd90c388e6c34039b228d1 - romseygeek - 2018-12-04 10:17:44]\r\n[elasticsearch]         at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251) ~[lucene-core-8.0.0-snapshot-c78429a554.jar:8.0.0-snapshot-c78429a554 c78429a554d28611dacd90c388e6c34039b228d1 - romseygeek - 2018-12-04 10:17:44]\r\n[elasticsearch]         at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:494) ~[lucene-core-8.0.0-snapshot-c78429a554.jar:8.0.0-snapshot-c78429a554 c78429a554d28611dacd90c388e6c34039b228d1 - romseygeek - 2018-12-04 10:17:44]\r\n[elasticsearch]         at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1618) ~[lucene-core-8.0.0-snapshot-c78429a554.jar:8.0.0-snapshot-c78429a554 c78429a554d28611dacd90c388e6c34039b228d1 - romseygeek - 2018-12-04 10:17:44]\r\n[elasticsearch]         at org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1237) ~[lucene-core-8.0.0-snapshot-c78429a554.jar:8.0.0-snapshot-c78429a554 c78429a554d28611dacd90c388e6c34039b228d1 - romseygeek - 2018-12-04 10:17:44]\r\n[elasticsearch]         at org.elasticsearch.index.engine.InternalEngine.addDocs(InternalEngine.java:1067) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n[elasticsearch]         at org.elasticsearch.index.engine.InternalEngine.indexIntoLucene(InternalEngine.java:1012) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n[elasticsearch]         at org.elasticsearch.index.engine.InternalEngine.index(InternalEngine.java:851) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n[elasticsearch]         at org.elasticsearch.index.shard.IndexShard.index(IndexShard.java:748) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n[elasticsearch]         at org.elasticsearch.index.shard.IndexShard.applyIndexOperation(IndexShard.java:724) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n[elasticsearch]         at org.elasticsearch.index.shard.IndexShard.applyIndexOperationOnPrimary(IndexShard.java:689) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n[elasticsearch]         at org.elasticsearch.action.bulk.TransportShardBulkAction.lambda$executeIndexRequestOnPrimary$3(TransportShardBulkAction.java:462) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n[elasticsearch]         at org.elasticsearch.action.bulk.TransportShardBulkAction$$Lambda$3478/0x0000000100c6b040.get(Unknown Source) ~[?:?]\r\n[elasticsearch]         at org.elasticsearch.action.bulk.TransportShardBulkAction.executeOnPrimaryWhileHandlingMappingUpdates(TransportShardBulkAction.java:484) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n[elasticsearch]         at org.elasticsearch.action.bulk.TransportShardBulkAction.executeIndexRequestOnPrimary(TransportShardBulkAction.java:460) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n[elasticsearch]         at org.elasticsearch.action.bulk.TransportShardBulkAction.executeBulkItemRequest(TransportShardBulkAction.java:218) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n[elasticsearch]         at org.elasticsearch.action.bulk.TransportShardBulkAction.performOnPrimary(TransportShardBulkAction.java:161) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n[elasticsearch]         at org.elasticsearch.action.bulk.TransportShardBulkAction.performOnPrimary(TransportShardBulkAction.java:153) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n[elasticsearch]         at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:141) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n[elasticsearch]         at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:79) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n[elasticsearch]         at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryShardReference.perform(TransportReplicationAction.java:1032) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n[elasticsearch]         at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryShardReference.perform(TransportReplicationAction.java:1010) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n[elasticsearch]         at org.elasticsearch.action.support.replication.ReplicationOperation.execute(ReplicationOperation.java:102) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n[elasticsearch]         at org.elasticsearch.action.support.replication.TransportReplicationAction$AsyncPrimaryAction.runWithPrimaryShardReference(TransportReplicationAction.java:412) ~[elasticsearch-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT]\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/445953668","html_url":"https://github.com/elastic/elasticsearch/issues/16444#issuecomment-445953668","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16444","id":445953668,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NTk1MzY2OA==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2018-12-10T20:05:24Z","updated_at":"2018-12-10T20:05:24Z","author_association":"MEMBER","body":"> Is there a way we can add a circuit-breaker style runtime check to abort indexing a doc if it starts to use too much memory while indexing?\r\n\r\nThat sounds very reasonable to me. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/460311640","html_url":"https://github.com/elastic/elasticsearch/issues/16444#issuecomment-460311640","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16444","id":460311640,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDMxMTY0MA==","user":{"login":"iverase","id":29038686,"node_id":"MDQ6VXNlcjI5MDM4Njg2","avatar_url":"https://avatars1.githubusercontent.com/u/29038686?v=4","gravatar_id":"","url":"https://api.github.com/users/iverase","html_url":"https://github.com/iverase","followers_url":"https://api.github.com/users/iverase/followers","following_url":"https://api.github.com/users/iverase/following{/other_user}","gists_url":"https://api.github.com/users/iverase/gists{/gist_id}","starred_url":"https://api.github.com/users/iverase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iverase/subscriptions","organizations_url":"https://api.github.com/users/iverase/orgs","repos_url":"https://api.github.com/users/iverase/repos","events_url":"https://api.github.com/users/iverase/events{/privacy}","received_events_url":"https://api.github.com/users/iverase/received_events","type":"User","site_admin":false},"created_at":"2019-02-04T16:22:26Z","updated_at":"2019-02-04T16:22:26Z","author_association":"CONTRIBUTOR","body":"We discuss in the team and we agreed it would be nice to (roughly) estimate before hand the number of cells a polygon might create and abort the indexing of that shape if it is above a threshold.\r\n\r\nThe estimate can be done by using the length of the diagonal of the bounding box of the polygon.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/466478716","html_url":"https://github.com/elastic/elasticsearch/issues/16444#issuecomment-466478716","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16444","id":466478716,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NjQ3ODcxNg==","user":{"login":"djptek","id":11043991,"node_id":"MDQ6VXNlcjExMDQzOTkx","avatar_url":"https://avatars3.githubusercontent.com/u/11043991?v=4","gravatar_id":"","url":"https://api.github.com/users/djptek","html_url":"https://github.com/djptek","followers_url":"https://api.github.com/users/djptek/followers","following_url":"https://api.github.com/users/djptek/following{/other_user}","gists_url":"https://api.github.com/users/djptek/gists{/gist_id}","starred_url":"https://api.github.com/users/djptek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/djptek/subscriptions","organizations_url":"https://api.github.com/users/djptek/orgs","repos_url":"https://api.github.com/users/djptek/repos","events_url":"https://api.github.com/users/djptek/events{/privacy}","received_events_url":"https://api.github.com/users/djptek/received_events","type":"User","site_admin":false},"created_at":"2019-02-22T17:31:06Z","updated_at":"2019-02-22T17:31:06Z","author_association":"CONTRIBUTOR","body":"working on this","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/488041256","html_url":"https://github.com/elastic/elasticsearch/issues/16444#issuecomment-488041256","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16444","id":488041256,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4ODA0MTI1Ng==","user":{"login":"djptek","id":11043991,"node_id":"MDQ6VXNlcjExMDQzOTkx","avatar_url":"https://avatars3.githubusercontent.com/u/11043991?v=4","gravatar_id":"","url":"https://api.github.com/users/djptek","html_url":"https://github.com/djptek","followers_url":"https://api.github.com/users/djptek/followers","following_url":"https://api.github.com/users/djptek/following{/other_user}","gists_url":"https://api.github.com/users/djptek/gists{/gist_id}","starred_url":"https://api.github.com/users/djptek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/djptek/subscriptions","organizations_url":"https://api.github.com/users/djptek/orgs","repos_url":"https://api.github.com/users/djptek/repos","events_url":"https://api.github.com/users/djptek/events{/privacy}","received_events_url":"https://api.github.com/users/djptek/received_events","type":"User","site_admin":false},"created_at":"2019-04-30T17:26:04Z","updated_at":"2019-04-30T17:26:35Z","author_association":"CONTRIBUTOR","body":"Hi @iverase @nknize I am looking at suitable test cases for limiting using an estimate based on the diagonal as suggested.\r\n\r\nAs a limiting case, I am using `precision` of 100m\r\n\r\n`curl -X PUT -H \"Content-Type: application/json\" server1:9200/test_16444 -d '{\"mappings\":{\"dynamic\":\"false\",\"properties\":{\"location\":{\"type\":\"geo_shape\",\"precision\":\"100.0m\"}}}}'`\r\n\r\nand a BB which can contain the approximate borders of the country with the largest extension \r\n\r\n`curl -X PUT -H \"Content-Type: application/json\" server1:9200/test_16444/_doc/123 -d '{\"location\":{\"type\":\"envelope\",\"coordinates\":[[-169.0,68.5],[80.5,41.2]]}}'`\r\n\r\nNote: I chose that precision simply because those borders provoke the `out_of_memory_error` running Elasticsearch with default configuration at the `52.0m` precision. From a limited test they appear to work at `100.0m`\r\n\r\nDoes this scenario seem reasonable?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/646057545","html_url":"https://github.com/elastic/elasticsearch/issues/16444#issuecomment-646057545","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16444","id":646057545,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NjA1NzU0NQ==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2020-06-18T14:32:30Z","updated_at":"2020-06-18T14:32:30Z","author_association":"MEMBER","body":"I think we can probably close this now, since prefix trees are deprecated and we plan to remove them relatively shortly?","performed_via_github_app":null}]