{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/26459","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26459/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26459/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26459/events","html_url":"https://github.com/elastic/elasticsearch/issues/26459","id":254439130,"node_id":"MDU6SXNzdWUyNTQ0MzkxMzA=","number":26459,"title":"Docs for Painless do not demonstrate how to safely handle values which *might* be null or empty","user":{"login":"sirosen","id":1300022,"node_id":"MDQ6VXNlcjEzMDAwMjI=","avatar_url":"https://avatars3.githubusercontent.com/u/1300022?v=4","gravatar_id":"","url":"https://api.github.com/users/sirosen","html_url":"https://github.com/sirosen","followers_url":"https://api.github.com/users/sirosen/followers","following_url":"https://api.github.com/users/sirosen/following{/other_user}","gists_url":"https://api.github.com/users/sirosen/gists{/gist_id}","starred_url":"https://api.github.com/users/sirosen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sirosen/subscriptions","organizations_url":"https://api.github.com/users/sirosen/orgs","repos_url":"https://api.github.com/users/sirosen/repos","events_url":"https://api.github.com/users/sirosen/events{/privacy}","received_events_url":"https://api.github.com/users/sirosen/received_events","type":"User","site_admin":false},"labels":[{"id":146834791,"node_id":"MDU6TGFiZWwxNDY4MzQ3OTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Scripting","name":":Core/Infra/Scripting","color":"0e8a16","default":false,"description":"Scripting abstractions, Painless, and Mustache"},{"id":23715,"node_id":"MDU6TGFiZWwyMzcxNQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Edocs","name":">docs","color":"db755e","default":false,"description":"General docs changes"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2017-08-31T19:13:38Z","updated_at":"2019-03-06T00:22:55Z","closed_at":"2018-03-13T18:48:29Z","author_association":"NONE","active_lock_reason":null,"body":"This is a pretty common pattern in more general programming scenarios, but maybe less common in scripted updates. However, it was highly non-obvious in the docs.\r\n\r\nIf you want to check if a field is present on a doc, or if its present-but-empty, there should be examples to follow.\r\n\r\nMy particular use-case: for manually scripted updates to all docs in the index, we want to track the updates which were run in an object, and use it to enforce script idempotence as a flag.\r\n\r\nHere's (a simplified version of) what _works_:\r\n```groovy\r\ndef update_name = '2017-08-31-myupdate';\r\n// let's not nitpick over this, but I'm including it in case ctx._source behaves differently\r\n// I assume it does not matter, but including it for completeness\r\ndef entry = ctx._source.entry;\r\nif (entry['_ran_updates'] == null)\r\n    entry._ran_updates = [:];\r\nelse if (entry._ran_updates[update_name])\r\n    continue;\r\n// stuff\r\nentry._ran_updates[update_name] = true;\r\n```\r\n\r\nThe issue is that the use of `entry['_ran_updates'] == null` is not at all obvious.\r\nThings that do not work include:\r\n- `!entry['_ran_updates']` -- `!null` gives a NullPointer exception in painless?\r\n- `entry['_ran_updates'].empty` -- also gives a NullPointer exception if the field isn't there at all\r\n\r\nThere are a bunch of other variants that don't work, like `!entry._ran_updates`, for the same basic reasons.\r\n\r\nI think the painless docs should have an example of conditional logic on the presence/absence of an attribute. A potentially good example would be \"insert a value into a map only if it is already defined\" or a similar conditional-update.","closed_by":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"performed_via_github_app":null}