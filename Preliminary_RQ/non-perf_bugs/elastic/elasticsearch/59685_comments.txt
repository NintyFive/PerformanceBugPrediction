[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/659232331","html_url":"https://github.com/elastic/elasticsearch/issues/59685#issuecomment-659232331","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59685","id":659232331,"node_id":"MDEyOklzc3VlQ29tbWVudDY1OTIzMjMzMQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-07-16T08:02:56Z","updated_at":"2020-07-16T08:02:56Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-security (:Security/Authentication)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/668365202","html_url":"https://github.com/elastic/elasticsearch/issues/59685#issuecomment-668365202","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59685","id":668365202,"node_id":"MDEyOklzc3VlQ29tbWVudDY2ODM2NTIwMg==","user":{"login":"ywangd","id":2344308,"node_id":"MDQ6VXNlcjIzNDQzMDg=","avatar_url":"https://avatars3.githubusercontent.com/u/2344308?v=4","gravatar_id":"","url":"https://api.github.com/users/ywangd","html_url":"https://github.com/ywangd","followers_url":"https://api.github.com/users/ywangd/followers","following_url":"https://api.github.com/users/ywangd/following{/other_user}","gists_url":"https://api.github.com/users/ywangd/gists{/gist_id}","starred_url":"https://api.github.com/users/ywangd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywangd/subscriptions","organizations_url":"https://api.github.com/users/ywangd/orgs","repos_url":"https://api.github.com/users/ywangd/repos","events_url":"https://api.github.com/users/ywangd/events{/privacy}","received_events_url":"https://api.github.com/users/ywangd/received_events","type":"User","site_admin":false},"created_at":"2020-08-04T03:55:40Z","updated_at":"2020-08-04T03:55:40Z","author_association":"MEMBER","body":"It should be relatively straightforward to add response of `GET /_security/_authenticate` as a field to the responses of \"get token\" related APIs. The response will be something like the follows:\r\n\r\n```json\r\n{\r\n  \"access_token\": \"46ToAxZFNTJubnEwZVRwNmJIc1hUdEFVbGdB\",\r\n  \"type\": \"Bearer\",\r\n  \"expires_in\": 1200,\r\n  \"refresh_token\": \"46ToAxZETzA3RElpa1REaXdXYjNqaGNpTkln\",\r\n  \"authentication\": {\r\n    \"username\": \"foo\",\r\n    \"roles\": [\r\n      \"user\"\r\n    ],\r\n    \"full_name\": null,\r\n    \"email\": null,\r\n    \"metadata\": {},\r\n    \"enabled\": true,\r\n    \"authentication_realm\": {\r\n      \"name\": \"native1\",\r\n      \"type\": \"native\"\r\n    },\r\n    \"lookup_realm\": {\r\n      \"name\": \"native1\",\r\n      \"type\": \"native\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n**NOTE**: The `authentication` object is of the user that the token is created for, **not** the facilitating user, e.g. kibana.\r\n\r\nFor SAML and OIDC authenticate calls, there will be some redundancy for `username` and `realm` since they will be repeated again in the new `authentication` field. But I don't think we should remove the fields from either the top level object or the `authentication` field because:\r\n* It will be a breaking change if they are removed from the top level object. \r\n* It should not be removed from the `authentication` field since some of the top level objects do not have `username` and `realm`. I don't think it is worth to conditionally include and exclude these fields from `authentication` depending on the top level object. It's more trouble than its worth. Also an `authentication` field without `username` is weird at least.\r\n* The redundancy is pretty minimal.\r\n\r\nHere are a list of things we need to touch to implement above suggested changes:\r\n* `/_security/oauth2/token` - Most changes should be in `CreateTokenResponse` and its caller, i.e. `TransportCreateTokenAction` and `TransportRefreshTokenAction`\r\n* `/_security/delegate_pki` - `DelegatePkiAuthenticationResponse` and `TransportDelegatePkiAuthenticationAction`\r\n* `/_security/saml/authenticate` - `SamlAuthenticateResponse` and `TransportSamlAuthenticateAction`\r\n* `/_security/oidc/authenticate` - `OpenIdConnectAuthenticateResponse` and `TransportOpenIdConnectAuthenticateAction`","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/669019181","html_url":"https://github.com/elastic/elasticsearch/issues/59685#issuecomment-669019181","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59685","id":669019181,"node_id":"MDEyOklzc3VlQ29tbWVudDY2OTAxOTE4MQ==","user":{"login":"azasypkin","id":1713708,"node_id":"MDQ6VXNlcjE3MTM3MDg=","avatar_url":"https://avatars1.githubusercontent.com/u/1713708?v=4","gravatar_id":"","url":"https://api.github.com/users/azasypkin","html_url":"https://github.com/azasypkin","followers_url":"https://api.github.com/users/azasypkin/followers","following_url":"https://api.github.com/users/azasypkin/following{/other_user}","gists_url":"https://api.github.com/users/azasypkin/gists{/gist_id}","starred_url":"https://api.github.com/users/azasypkin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azasypkin/subscriptions","organizations_url":"https://api.github.com/users/azasypkin/orgs","repos_url":"https://api.github.com/users/azasypkin/repos","events_url":"https://api.github.com/users/azasypkin/events{/privacy}","received_events_url":"https://api.github.com/users/azasypkin/received_events","type":"User","site_admin":false},"created_at":"2020-08-05T07:01:17Z","updated_at":"2020-08-05T07:01:17Z","author_association":"MEMBER","body":"That would work great for us, thanks for picking this up @ywangd !","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/711866137","html_url":"https://github.com/elastic/elasticsearch/issues/59685#issuecomment-711866137","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59685","id":711866137,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMTg2NjEzNw==","user":{"login":"azasypkin","id":1713708,"node_id":"MDQ6VXNlcjE3MTM3MDg=","avatar_url":"https://avatars1.githubusercontent.com/u/1713708?v=4","gravatar_id":"","url":"https://api.github.com/users/azasypkin","html_url":"https://github.com/azasypkin","followers_url":"https://api.github.com/users/azasypkin/followers","following_url":"https://api.github.com/users/azasypkin/following{/other_user}","gists_url":"https://api.github.com/users/azasypkin/gists{/gist_id}","starred_url":"https://api.github.com/users/azasypkin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azasypkin/subscriptions","organizations_url":"https://api.github.com/users/azasypkin/orgs","repos_url":"https://api.github.com/users/azasypkin/repos","events_url":"https://api.github.com/users/azasypkin/events{/privacy}","received_events_url":"https://api.github.com/users/azasypkin/received_events","type":"User","site_admin":false},"created_at":"2020-10-19T08:47:24Z","updated_at":"2020-10-19T08:47:24Z","author_association":"MEMBER","body":"Thanks for improving this @BigPandaToo ! Filed a Kibana issue to leverage this on our side: https://github.com/elastic/kibana/issues/80952.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/713498466","html_url":"https://github.com/elastic/elasticsearch/issues/59685#issuecomment-713498466","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59685","id":713498466,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMzQ5ODQ2Ng==","user":{"login":"ywangd","id":2344308,"node_id":"MDQ6VXNlcjIzNDQzMDg=","avatar_url":"https://avatars3.githubusercontent.com/u/2344308?v=4","gravatar_id":"","url":"https://api.github.com/users/ywangd","html_url":"https://github.com/ywangd","followers_url":"https://api.github.com/users/ywangd/followers","following_url":"https://api.github.com/users/ywangd/following{/other_user}","gists_url":"https://api.github.com/users/ywangd/gists{/gist_id}","starred_url":"https://api.github.com/users/ywangd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywangd/subscriptions","organizations_url":"https://api.github.com/users/ywangd/orgs","repos_url":"https://api.github.com/users/ywangd/repos","events_url":"https://api.github.com/users/ywangd/events{/privacy}","received_events_url":"https://api.github.com/users/ywangd/received_events","type":"User","site_admin":false},"created_at":"2020-10-21T11:21:12Z","updated_at":"2020-10-22T07:03:32Z","author_association":"MEMBER","body":"~I just noticed a minor issue in the new `authentication` field. The `authentication.authentication_type` should always be `token`. But instead it is the type of the original authentication that the token is created for. For example, in the [documentation page](https://www.elastic.co/guide/en/elasticsearch/reference/master/security-api-get-token.html#security-api-get-token-example), the `authentication_type` is `realm`, but should be `token`.~\r\n\r\n~@BigPandaToo The fix will likely be similar to what is needed for the [test failure issue](https://github.com/elastic/elasticsearch/issues/55816#issuecomment-713410940). So these two can go in with one PR. I can work on it if you are busy with other things. Just let me know. Thanks!~\r\n\r\nScratch that. After team discussion. We agree the current behaviour is more correct.","performed_via_github_app":null}]