{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/16763","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16763/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16763/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16763/events","html_url":"https://github.com/elastic/elasticsearch/issues/16763","id":135359929,"node_id":"MDU6SXNzdWUxMzUzNTk5Mjk=","number":16763,"title":"very uneven distribution of empty shards on multiple data paths if the free spaces are different","user":{"login":"Dieken","id":2365,"node_id":"MDQ6VXNlcjIzNjU=","avatar_url":"https://avatars0.githubusercontent.com/u/2365?v=4","gravatar_id":"","url":"https://api.github.com/users/Dieken","html_url":"https://github.com/Dieken","followers_url":"https://api.github.com/users/Dieken/followers","following_url":"https://api.github.com/users/Dieken/following{/other_user}","gists_url":"https://api.github.com/users/Dieken/gists{/gist_id}","starred_url":"https://api.github.com/users/Dieken/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Dieken/subscriptions","organizations_url":"https://api.github.com/users/Dieken/orgs","repos_url":"https://api.github.com/users/Dieken/repos","events_url":"https://api.github.com/users/Dieken/events{/privacy}","received_events_url":"https://api.github.com/users/Dieken/received_events","type":"User","site_admin":false},"labels":[{"id":837246479,"node_id":"MDU6TGFiZWw4MzcyNDY0Nzk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Allocation","name":":Distributed/Allocation","color":"0e8a16","default":false,"description":"All issues relating to the decision making around placing a shard (both master logic & on the nodes)"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2016-02-22T09:17:39Z","updated_at":"2018-03-15T15:56:08Z","closed_at":"2018-03-15T15:56:07Z","author_association":"NONE","active_lock_reason":null,"body":"I met this issue on ES-2.2.0,  all ES data nodes have multiple hard disks and no RAID scheme is utilized, they are just a bunch of disks. The usable spaces of those disks on same host are different due to some strange implementation details in XFS (even two XFS fs have same capacity, same size directories and files, they don't always have same free space, I guess it's produced by file creations and deletions).\n\nI pre-create many indicies with replica set to 0,  50 shards for 50 data nodes. The initial empty shard is very small, just several KB disk usage,  ES surprisingly creates a lot of shards on the least used disks,  for example, if one of ten disks on a data node has 10KB more free space,  then it will contain about 8 more shards than other disks.  The least used disks will be run out because I use hourly index pattern,  all shards for a continuous hour range will go to the same disk.  But other disks on that host still have a lot of free space.\n\nI checked a little the code, https://github.com/elastic/elasticsearch/blob/v2.2.0/core/src/main/java/org/elasticsearch/index/IndexService.java#L327, the IndexService instance is for per index, not a singleton, so \"dataPathToShardCount\" will always be empty due to zero replica for this index, so at https://github.com/elastic/elasticsearch/blob/v2.2.0/core/src/main/java/org/elasticsearch/index/shard/ShardPath.java#L231,  \"count\" will always be null,  class \"ShardPath\" always selects the least used disk to allocate shard,  but unluckily the empty shard is very small,  so a lot of shards will be allocated to the least used disk.\n\nThis issue isn't limited to zero replica use case,  the current ES logic will always prefer the least used disk and the very small empty shard always produces uneven distribution.\n\nI feel the \"dataPathToShardCount\" map should be global to all indices on a node, not local to a single index,  but maybe there is better solution.\n\nMy workaround is to create RAID 0 for those disks on a single node, but RAID 0 is too risky if a host has about 10 disks, maybe I should choose RAID 6.\n","closed_by":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"performed_via_github_app":null}