{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/21371","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21371/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21371/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21371/events","html_url":"https://github.com/elastic/elasticsearch/issues/21371","id":187683398,"node_id":"MDU6SXNzdWUxODc2ODMzOTg=","number":21371,"title":"wired behavior for grok processor with multiple patterns","user":{"login":"jinyuli","id":5809787,"node_id":"MDQ6VXNlcjU4MDk3ODc=","avatar_url":"https://avatars1.githubusercontent.com/u/5809787?v=4","gravatar_id":"","url":"https://api.github.com/users/jinyuli","html_url":"https://github.com/jinyuli","followers_url":"https://api.github.com/users/jinyuli/followers","following_url":"https://api.github.com/users/jinyuli/following{/other_user}","gists_url":"https://api.github.com/users/jinyuli/gists{/gist_id}","starred_url":"https://api.github.com/users/jinyuli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jinyuli/subscriptions","organizations_url":"https://api.github.com/users/jinyuli/orgs","repos_url":"https://api.github.com/users/jinyuli/repos","events_url":"https://api.github.com/users/jinyuli/events{/privacy}","received_events_url":"https://api.github.com/users/jinyuli/received_events","type":"User","site_admin":false},"labels":[{"id":268963484,"node_id":"MDU6TGFiZWwyNjg5NjM0ODQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Ingest","name":":Core/Features/Ingest","color":"0e8a16","default":false,"description":"Execution or management of Ingest Pipelines"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-11-07T11:06:42Z","updated_at":"2016-11-16T13:41:54Z","closed_at":"2016-11-16T13:41:54Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\nGitHub is reserved for bug reports and feature requests. The best place\r\nto ask a general question is at the Elastic Discourse forums at\r\nhttps://discuss.elastic.co. If you are in fact posting a bug report or\r\na feature request, please include one and only one of the below blocks\r\nin your new issue. Note that whether you're filing a bug report or a\r\nfeature request, ensure that your submission is for an\r\n[OS that we support](https://www.elastic.co/support/matrix#show_os).\r\nBug reports on an OS that we do not support or feature requests\r\nspecific to an OS that we do not support will be closed.\r\n-->\r\n\r\n<!--\r\nIf you are filing a bug report, please remove the below feature\r\nrequest block and provide responses for all of the below items.\r\n-->\r\n\r\n**Elasticsearch version**: 5.0.0\r\n\r\n**Plugins installed**: [\"x-pack\"]\r\n\r\n**JVM version**: 1.8.0\r\n\r\n**OS version**: CentOS 7.0\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nIf there is only one patterns in grok process, it works.\r\nbut if there are two or more patterns, and one doc match the second pattern, the result is not completed\r\n\r\n**Steps to reproduce**:\r\n 1. test with the following config:\r\n```\r\nPOST _ingest/pipeline/_simulate\r\n{\r\n  \"pipeline\": {\r\n  \"description\" : \"parse log\",\r\n  \"processors\": [\r\n    {\r\n      \"grok\": {\r\n        \"field\": \"message\",\r\n        \"trace_match\": true,\r\n        \"patterns\": [\"%{IPORHOST:client}:%{NUMBER:port} - %{USER:user} \\\\[(?<log_time>%{MONTHDAY}[./-]%{MONTH}[./-]%{YEAR}:%{TIME} %{ISO8601_TIMEZONE})\\\\] \\\"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:http_version})?|-)\\\" %{NUMBER:status} %{NUMBER:body_bytes} %{QS:referrer} %{QS:agent} \\\"(%{WORD:x_forword}|-)\\\" rt=%{NUMBER:request_time} uct=\\\"(%{NUMBER:connect_time}|-)\\\" uht=\\\"(%{NUMBER:header_time}|-)\\\" urt=\\\"(%{NUMBER:response_time}|-)\\\" %{IPORHOST:domain}( \\\"%{DATA:userID}\\\" \\\"%{DATA:userType}\\\" \\\"%{DATA:source}\\\" \\\"%{DATA:visitorID}\\\")?\",\r\n        \t\"(?<log_time>%{YEAR}[./]%{MONTHNUM}[./]%{MONTHDAY} %{TIME}) \\\\[%{LOGLEVEL:severity}\\\\] %{POSINT:pid}#%{NUMBER:worker}: %{DATA:errormessage} client: %{IP:client}, server: %{DATA:server} request: \\\"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:http_version})?|-)\\\", (upstream: %{QS:upstream}, )?host: %{QS:host}(, referrer: %{QS:referrer})?( \\\"%{DATA:userID}\\\" \\\"%{DATA:userType}\\\" \\\"%{DATA:source}\\\" \\\"%{DATA:visitorID}\\\")?\"\r\n        ],\r\n        \"on_failure\" : [\r\n          {\r\n            \"set\" : {\r\n              \"field\" : \"parse_error\",\r\n              \"value\" : \"{{ _ingest.on_failure_message }}\"\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n},\r\n\"docs\":[\r\n  {\r\n    \"_source\": {\r\n      \"message\": \"20.12.16.17:38743 - - [07/Nov/2016:18:20:21 +0800] \\\"GET /favicon.ico HTTP/1.1\\\" 200 4286 \\\"http://t.xxx.com/\\\" \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36\\\" \\\"-\\\" rt=0.000 uct=\\\"-\\\" uht=\\\"-\\\" urt=\\\"-\\\" t.xxx.com \\\"1001\\\" \\\"2\\\" \\\"test\\\" \\\"636c87ca-7958-41f2-bc08-11a6705eb7aa\\\"\"\r\n    }\r\n  },\r\n  {\r\n    \"_source\": {\r\n      \"message\": \"2016/11/07 15:20:24 [error] 10460#0: *13530296 open() \\\"/usr/share/nginx/html/user.action\\\" failed (2: No such file or directory), client: 11.40.10.75, server: _, request: \\\"POST /user.action HTTP/1.1\\\", host: \\\"13.16.25.16\\\"\"\r\n    }\r\n  }\r\n  ]\r\n}\r\n```\r\n\r\nthe result is:\r\n**Note that the second doc was partially parsed**\r\n```\r\n{\r\n  \"docs\": [\r\n    {\r\n      \"doc\": {\r\n        \"_index\": \"_index\",\r\n        \"_type\": \"_type\",\r\n        \"_id\": \"_id\",\r\n        \"_source\": {\r\n          \"request\": \"/favicon.ico\",\r\n          \"agent\": \"\\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36\\\"\",\r\n          \"body_bytes\": \"4286\",\r\n          \"verb\": \"GET\",\r\n          \"http_version\": \"1.1\",\r\n          \"source\": \"test\",\r\n          \"message\": \"20.12.16.17:38743 - - [07/Nov/2016:18:20:21 +0800] \\\"GET /favicon.ico HTTP/1.1\\\" 200 4286 \\\"http://t.xxx.com/\\\" \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36\\\" \\\"-\\\" rt=0.000 uct=\\\"-\\\" uht=\\\"-\\\" urt=\\\"-\\\" t.xxx.com \\\"1001\\\" \\\"2\\\" \\\"test\\\" \\\"636c87ca-7958-41f2-bc08-11a6705eb7aa\\\"\",\r\n          \"userID\": \"1001\",\r\n          \"log_time\": \"07/Nov/2016:18:20:21 +0800\",\r\n          \"referrer\": \"\\\"http://t.xxx.com/\\\"\",\r\n          \"request_time\": \"0.000\",\r\n          \"port\": \"38743\",\r\n          \"domain\": \"t.xxx.com\",\r\n          \"userType\": \"2\",\r\n          \"user\": \"-\",\r\n          \"visitorID\": \"636c87ca-7958-41f2-bc08-11a6705eb7aa\",\r\n          \"status\": \"200\"\r\n        },\r\n        \"_ingest\": {\r\n          \"_grok_match_index\": \"0\",\r\n          \"timestamp\": \"2016-11-07T10:57:26.202+0000\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"doc\": {\r\n        \"_index\": \"_index\",\r\n        \"_type\": \"_type\",\r\n        \"_id\": \"_id\",\r\n        \"_source\": {\r\n          \"errormessage\": \"*13530296 open() \\\"/usr/share/nginx/html/user.action\\\" failed (2: No such file or directory),\",\r\n          \"severity\": \"error\",\r\n          \"server\": \"_,\",\r\n          \"host\": \"\\\"13.16.25.16\\\"\",\r\n          \"client\": \"11.40.10.75\",\r\n          \"pid\": \"10460\",\r\n          \"message\": \"2016/11/07 15:20:24 [error] 10460#0: *13530296 open() \\\"/usr/share/nginx/html/user.action\\\" failed (2: No such file or directory), client: 11.40.10.75, server: _, request: \\\"POST /user.action HTTP/1.1\\\", host: \\\"13.16.25.16\\\"\",\r\n          \"worker\": \"0\"\r\n        },\r\n        \"_ingest\": {\r\n          \"_grok_match_index\": \"1\",\r\n          \"timestamp\": \"2016-11-07T10:57:26.202+0000\"\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n 2.\r\nif using only one pattern, I only delete the first patten and the first doc, nothing changed:\r\n```\r\nPOST _ingest/pipeline/_simulate\r\n{\r\n  \"pipeline\": {\r\n  \"description\" : \"parse log\",\r\n  \"processors\": [\r\n    {\r\n      \"grok\": {\r\n        \"field\": \"message\",\r\n        \"trace_match\": true,\r\n        \"patterns\": [\r\n        \t\"(?<log_time>%{YEAR}[./]%{MONTHNUM}[./]%{MONTHDAY} %{TIME}) \\\\[%{LOGLEVEL:severity}\\\\] %{POSINT:pid}#%{NUMBER:worker}: %{DATA:errormessage} client: %{IP:client}, server: %{DATA:server} request: \\\"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:http_version})?|-)\\\", (upstream: %{QS:upstream}, )?host: %{QS:host}(, referrer: %{QS:referrer})?( \\\"%{DATA:userID}\\\" \\\"%{DATA:userType}\\\" \\\"%{DATA:source}\\\" \\\"%{DATA:visitorID}\\\")?\"\r\n        ],\r\n        \"on_failure\" : [\r\n          {\r\n            \"set\" : {\r\n              \"field\" : \"parse_error\",\r\n              \"value\" : \"{{ _ingest.on_failure_message }}\"\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n},\r\n\"docs\":[\r\n  {\r\n    \"_source\": {\r\n      \"message\": \"2016/11/07 15:20:24 [error] 10460#0: *13530296 open() \\\"/usr/share/nginx/html/user.action\\\" failed (2: No such file or directory), client: 11.40.10.75, server: _, request: \\\"POST /user.action HTTP/1.1\\\", host: \\\"13.16.25.16\\\"\"\r\n    }\r\n  }\r\n  ]\r\n}\r\n```\r\n\r\nthe result is:\r\n```\r\n{\r\n  \"docs\": [\r\n    {\r\n      \"doc\": {\r\n        \"_index\": \"_index\",\r\n        \"_type\": \"_type\",\r\n        \"_id\": \"_id\",\r\n        \"_source\": {\r\n          \"severity\": \"error\",\r\n          \"errormessage\": \"*13530296 open() \\\"/usr/share/nginx/html/user.action\\\" failed (2: No such file or directory),\",\r\n          \"server\": \"_,\",\r\n          \"request\": \"/user.action\",\r\n          \"parse_error\": \"field [_grok_match_index] not present as part of path [_ingest._grok_match_index]\",\r\n          \"verb\": \"POST\",\r\n          \"http_version\": \"1.1\",\r\n          \"pid\": \"10460\",\r\n          \"message\": \"2016/11/07 15:20:24 [error] 10460#0: *13530296 open() \\\"/usr/share/nginx/html/user.action\\\" failed (2: No such file or directory), client: 11.40.10.75, server: _, request: \\\"POST /user.action HTTP/1.1\\\", host: \\\"13.16.25.16\\\"\",\r\n          \"log_time\": \"2016/11/07 15:20:24\",\r\n          \"host\": \"\\\"13.16.25.16\\\"\",\r\n          \"client\": \"11.40.10.75\",\r\n          \"worker\": \"0\"\r\n        },\r\n        \"_ingest\": {\r\n          \"timestamp\": \"2016-11-07T11:00:25.455+0000\"\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n**Provide logs (if relevant)**:\r\n\r\n<!--\r\nIf you are filing a feature request, please remove the above bug\r\nreport block and provide responses for all of the below items.\r\n-->\r\n\r\n**Describe the feature**:\r\n","closed_by":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"performed_via_github_app":null}