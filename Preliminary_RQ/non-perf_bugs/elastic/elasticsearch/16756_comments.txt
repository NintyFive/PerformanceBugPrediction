[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/190759992","html_url":"https://github.com/elastic/elasticsearch/issues/16756#issuecomment-190759992","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16756","id":190759992,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MDc1OTk5Mg==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-03-01T15:07:32Z","updated_at":"2016-03-02T07:23:28Z","author_association":"MEMBER","body":"This seems related to some other issue around client nodes connecting to other client nodes: #16815, #3617, #16105. Looking at the linked issue though, it seems like any client node does not even try to connect to other client nodes, while it should. The problem here seems to be the opposite, an attempt of connection that may not be desirable.\n\nI am not sure about the proposal. Why shouldn't the tribe node connect to the client nodes that are part of the cluster? I think every node should rather be able to connect to whichever other node in the cluster. I understand that the tribe node is already a client of its own, and it doesn't need to connect to other clients nodes when it comes to operations that involve data, but there are apis, like monitoring ones, that do need to have access to client nodes too. My reasoning goes along this other [comment](https://github.com/elastic/elasticsearch/issues/16815#issuecomment-190193775).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/191455113","html_url":"https://github.com/elastic/elasticsearch/issues/16756#issuecomment-191455113","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16756","id":191455113,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTQ1NTExMw==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-03-02T22:08:20Z","updated_at":"2016-03-02T22:13:18Z","author_association":"MEMBER","body":"I think with #16898 we made it clear that each node connects to every other node in the cluster, client nodes should not be treated differently, I don't think we should make exceptions for tribe nodes either. Are you ok with this @ppf2 ?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/191468055","html_url":"https://github.com/elastic/elasticsearch/issues/16756#issuecomment-191468055","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16756","id":191468055,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTQ2ODA1NQ==","user":{"login":"ppf2","id":7216393,"node_id":"MDQ6VXNlcjcyMTYzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/7216393?v=4","gravatar_id":"","url":"https://api.github.com/users/ppf2","html_url":"https://github.com/ppf2","followers_url":"https://api.github.com/users/ppf2/followers","following_url":"https://api.github.com/users/ppf2/following{/other_user}","gists_url":"https://api.github.com/users/ppf2/gists{/gist_id}","starred_url":"https://api.github.com/users/ppf2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppf2/subscriptions","organizations_url":"https://api.github.com/users/ppf2/orgs","repos_url":"https://api.github.com/users/ppf2/repos","events_url":"https://api.github.com/users/ppf2/events{/privacy}","received_events_url":"https://api.github.com/users/ppf2/received_events","type":"User","site_admin":false},"created_at":"2016-03-02T22:32:53Z","updated_at":"2016-03-02T22:32:53Z","author_association":"MEMBER","body":"Thanks @javanna , sounds good.  It will be nice though if we document this behavior also in the tribe node documentation - will be helpful for admins out there who have to figure out what ports to open between the tribe node and the other nodes.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/204196297","html_url":"https://github.com/elastic/elasticsearch/issues/16756#issuecomment-204196297","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16756","id":204196297,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNDE5NjI5Nw==","user":{"login":"ppf2","id":7216393,"node_id":"MDQ6VXNlcjcyMTYzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/7216393?v=4","gravatar_id":"","url":"https://api.github.com/users/ppf2","html_url":"https://github.com/ppf2","followers_url":"https://api.github.com/users/ppf2/followers","following_url":"https://api.github.com/users/ppf2/following{/other_user}","gists_url":"https://api.github.com/users/ppf2/gists{/gist_id}","starred_url":"https://api.github.com/users/ppf2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppf2/subscriptions","organizations_url":"https://api.github.com/users/ppf2/orgs","repos_url":"https://api.github.com/users/ppf2/repos","events_url":"https://api.github.com/users/ppf2/events{/privacy}","received_events_url":"https://api.github.com/users/ppf2/received_events","type":"User","site_admin":false},"created_at":"2016-04-01T01:06:43Z","updated_at":"2016-04-01T01:06:43Z","author_association":"MEMBER","body":"Reopening this ticket for a follow up discussion.  One side effect of the current behavior is that the tribe node log file gets filled up with heaps of exceptions like the one noted at the beginning of this issue.  For instance, within a 16 hour period (< 1 day) with just 1 client node in a downstream cluster, the tribe node ends up logging 176Mb of log entries, pretty much filling up the log file with 21K instances of these exception stacks.\n\nWhile we do not intend to change the design that the tribe node will try to connect to all nodes in the cluster, it can be helpful if we can move these exceptions (when a tribe node attempts to connect to a client node) to the trace level.  Thoughts?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/204251093","html_url":"https://github.com/elastic/elasticsearch/issues/16756#issuecomment-204251093","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16756","id":204251093,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNDI1MTA5Mw==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-04-01T05:06:25Z","updated_at":"2016-04-01T05:06:30Z","author_association":"MEMBER","body":"@ppf2 do you mean the log line that's part of the description of this issue or some other log line?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/204289867","html_url":"https://github.com/elastic/elasticsearch/issues/16756#issuecomment-204289867","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16756","id":204289867,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNDI4OTg2Nw==","user":{"login":"ppf2","id":7216393,"node_id":"MDQ6VXNlcjcyMTYzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/7216393?v=4","gravatar_id":"","url":"https://api.github.com/users/ppf2","html_url":"https://github.com/ppf2","followers_url":"https://api.github.com/users/ppf2/followers","following_url":"https://api.github.com/users/ppf2/following{/other_user}","gists_url":"https://api.github.com/users/ppf2/gists{/gist_id}","starred_url":"https://api.github.com/users/ppf2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppf2/subscriptions","organizations_url":"https://api.github.com/users/ppf2/orgs","repos_url":"https://api.github.com/users/ppf2/repos","events_url":"https://api.github.com/users/ppf2/events{/privacy}","received_events_url":"https://api.github.com/users/ppf2/received_events","type":"User","site_admin":false},"created_at":"2016-04-01T07:28:50Z","updated_at":"2016-04-01T07:28:50Z","author_association":"MEMBER","body":"Here you go :)  We are seeing a ton of these indicating that the tribe node is trying to connect to a client node.\n\n```\n[2016-03-31 03:20:04,750][DEBUG][action.admin.cluster.node.info] [tribe_node] failed to execute on node [A-cIPrviSUiCmoiIzj_GAw]\nSendRequestTransportException[[client_node][tribe_node/IP:9300][cluster:monitor/nodes/info[n]]]; nested: NodeNotConnectedException[[client_node][tribe_node/IP:9300] Node not connected];\n    at org.elasticsearch.transport.TransportService.sendRequest(TransportService.java:323)\n    at org.elasticsearch.shield.transport.ShieldServerTransportService.sendRequest(ShieldServerTransportService.java:75)\n    at org.elasticsearch.action.support.nodes.TransportNodesAction$AsyncAction.start(TransportNodesAction.java:147)\n    at org.elasticsearch.action.support.nodes.TransportNodesAction$AsyncAction.access$100(TransportNodesAction.java:94)\n    at org.elasticsearch.action.support.nodes.TransportNodesAction.doExecute(TransportNodesAction.java:68)\n    at org.elasticsearch.action.support.nodes.TransportNodesAction.doExecute(TransportNodesAction.java:44)\n    at org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:101)\n    at org.elasticsearch.shield.action.ShieldActionFilter.apply(ShieldActionFilter.java:113)\n    at org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:99)\n    at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:77)\n    at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:58)\n    at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:351)\n    at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:52)\n    at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:83)\n    at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:351)\n    at org.elasticsearch.client.support.AbstractClient$ClusterAdmin.execute(AbstractClient.java:845)\n    at org.elasticsearch.clclient_nodeient.support.AbstractClient$ClusterAdmin.nodesInfo(AbstractClient.java:925)\n    at org.elasticsearch.rest.action.admin.cluster.node.info.RestNodesInfoAction.handleRequest(RestNodesInfoAction.java:102)\n    at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:54)\n    at org.elasticsearch.rest.RestController.executeHandler(RestController.java:207)\n    at org.elasticsearch.rest.RestController$RestHandlerFilter.process(RestController.java:281)\n    at org.elasticsearch.rest.RestController$ControllerFilterChain.continueProcessing(RestController.java:262)\n    at org.elasticsearch.shield.rest.ShieldRestFilter.process(ShieldRestFilter.java:77)\n    at org.elasticsearch.rest.RestController$ControllerFilterChain.continueProcessing(RestController.java:265)\n    at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:176)\n    at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:128)\n    at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:86)\n    at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:385)\n    at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:63)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:60)\n    at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)\n    at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)\n    at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)\n    at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:75)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)\n    at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:462)\n    at org.jboss.netty.handler.codec.frame.FrameDecoder.callDecode(FrameDecoder.java:443)\n    at org.jboss.netty.handler.codec.frame.FrameDecoder.messageReceived(FrameDecoder.java:303)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.jboss.netty.handler.ipfilter.IpFilteringHandlerImpl.handleUpstream(IpFilteringHandlerImpl.java:154)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)\n    at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)\n    at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)\n    at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)\n    at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)\n    at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)\n    at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\n    at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: NodeNotConnectedException[[client_node][tribe_node/IP:9300] Node not connected]\n    at org.elasticsearch.transport.netty.NettyTransport.nodeChannel(NettyTransport.java:1132)\n    at org.elasticsearch.transport.netty.NettyTransport.sendRequest(NettyTransport.java:819)\n    at org.elasticsearch.transport.TransportService.sendRequest(TransportService.java:312)\n    ... 75 more\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/204315345","html_url":"https://github.com/elastic/elasticsearch/issues/16756#issuecomment-204315345","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16756","id":204315345,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNDMxNTM0NQ==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-04-01T08:56:32Z","updated_at":"2016-04-01T08:56:32Z","author_association":"MEMBER","body":"Thanks @ppf2! I am not sure we can change log level only when the log line comes from a tribe node. Seems like working around the problem. I think every node should get access to all the other nodes instead, including the client ones.\n\nThis specific log line comes from calling nodes info from the tribe node. The tribe node will gather the info from all the nodes, as simple as that. Another way to work around it would be to not use the tribe node for monitoring calls, or filter out some of the nodes from this call (e.g. using node attributes).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/205684592","html_url":"https://github.com/elastic/elasticsearch/issues/16756#issuecomment-205684592","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16756","id":205684592,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNTY4NDU5Mg==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-04-05T06:58:12Z","updated_at":"2016-04-05T06:58:12Z","author_association":"MEMBER","body":"What I previously provided are workarounds, assuming that the firewall config stays the same. But given that we removed support for the `node.client` setting in master, and we are moving away from using client nodes with the java api, I wonder why those \"client\" nodes need to be treated differently. I think they should have their ports accessible, cause that's what the cluster requires.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/205686060","html_url":"https://github.com/elastic/elasticsearch/issues/16756#issuecomment-205686060","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16756","id":205686060,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNTY4NjA2MA==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-04-05T07:01:56Z","updated_at":"2016-04-05T07:01:56Z","author_association":"MEMBER","body":"what @javanna said. The tribe node should be able to connect to any node in the clusters it connects to. Agreed that it's confusing with the current way we treat client nodes as clients, but that's what we're changing... \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274742194","html_url":"https://github.com/elastic/elasticsearch/issues/16756#issuecomment-274742194","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16756","id":274742194,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDc0MjE5NA==","user":{"login":"amazinganshul","id":2009525,"node_id":"MDQ6VXNlcjIwMDk1MjU=","avatar_url":"https://avatars1.githubusercontent.com/u/2009525?v=4","gravatar_id":"","url":"https://api.github.com/users/amazinganshul","html_url":"https://github.com/amazinganshul","followers_url":"https://api.github.com/users/amazinganshul/followers","following_url":"https://api.github.com/users/amazinganshul/following{/other_user}","gists_url":"https://api.github.com/users/amazinganshul/gists{/gist_id}","starred_url":"https://api.github.com/users/amazinganshul/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amazinganshul/subscriptions","organizations_url":"https://api.github.com/users/amazinganshul/orgs","repos_url":"https://api.github.com/users/amazinganshul/repos","events_url":"https://api.github.com/users/amazinganshul/events{/privacy}","received_events_url":"https://api.github.com/users/amazinganshul/received_events","type":"User","site_admin":false},"created_at":"2017-01-24T08:42:23Z","updated_at":"2017-01-24T08:42:23Z","author_association":"NONE","body":"With this issue are we resolving whether tribe nodes in the federation cluster should connect to each other or not? We have a federation cluster with two tribe nodes, but no api output shows that tribe nodes have connected to each other. Is this an expected behaviour? Also is there any documentation on scaling tribe nodes?","performed_via_github_app":null}]