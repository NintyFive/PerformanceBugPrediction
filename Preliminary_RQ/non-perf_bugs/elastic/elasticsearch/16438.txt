{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/16438","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16438/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16438/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16438/events","html_url":"https://github.com/elastic/elasticsearch/issues/16438","id":131243166,"node_id":"MDU6SXNzdWUxMzEyNDMxNjY=","number":16438,"title":"Upsert needs better version collision between new and existing docs","user":{"login":"rnagappan","id":8610755,"node_id":"MDQ6VXNlcjg2MTA3NTU=","avatar_url":"https://avatars3.githubusercontent.com/u/8610755?v=4","gravatar_id":"","url":"https://api.github.com/users/rnagappan","html_url":"https://github.com/rnagappan","followers_url":"https://api.github.com/users/rnagappan/followers","following_url":"https://api.github.com/users/rnagappan/following{/other_user}","gists_url":"https://api.github.com/users/rnagappan/gists{/gist_id}","starred_url":"https://api.github.com/users/rnagappan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnagappan/subscriptions","organizations_url":"https://api.github.com/users/rnagappan/orgs","repos_url":"https://api.github.com/users/rnagappan/repos","events_url":"https://api.github.com/users/rnagappan/events{/privacy}","received_events_url":"https://api.github.com/users/rnagappan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2016-02-04T04:51:44Z","updated_at":"2016-02-15T22:03:06Z","closed_at":"2016-02-04T05:27:46Z","author_association":"NONE","active_lock_reason":null,"body":"We have the situation where different users can write to the same ES instance from different client applications so there is no central application layer where we can enforce write consistency - we're relying on ES as a distributed store to do that for us.\n\nSo consider two different users on two different clients that try to write the same document to ES using the same deterministic ID (e.g. the document's name). User A sets their document to version 1 because ES requires a minimum of version 1 to store, and then the upsert request happily indexes this as a new document. But then user B on a completely different client also creates what they think is a new document with the same ID and sets it's version to 1 also, and they submit an upsert request for it. ES happily accepts it as an update instead and overwrites the document that user A just submitted under the same ID. What should have happened in this case is a version collision instead. Upsert has no way to differentiate between a new document and the first update to an existing document, because they both have version 1.\n\nIt would be better for us if upsert could accept version 0 for a new document. One workaround is that on our client we can test for it, but then we are using create and update, not upsert.\n","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}