{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/10406","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10406/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10406/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10406/events","html_url":"https://github.com/elastic/elasticsearch/issues/10406","id":66008365,"node_id":"MDU6SXNzdWU2NjAwODM2NQ==","number":10406,"title":"Completion Suggester incorrect sorting by weight","user":{"login":"ravlio","id":2349151,"node_id":"MDQ6VXNlcjIzNDkxNTE=","avatar_url":"https://avatars1.githubusercontent.com/u/2349151?v=4","gravatar_id":"","url":"https://api.github.com/users/ravlio","html_url":"https://github.com/ravlio","followers_url":"https://api.github.com/users/ravlio/followers","following_url":"https://api.github.com/users/ravlio/following{/other_user}","gists_url":"https://api.github.com/users/ravlio/gists{/gist_id}","starred_url":"https://api.github.com/users/ravlio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ravlio/subscriptions","organizations_url":"https://api.github.com/users/ravlio/orgs","repos_url":"https://api.github.com/users/ravlio/repos","events_url":"https://api.github.com/users/ravlio/events{/privacy}","received_events_url":"https://api.github.com/users/ravlio/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"areek","id":753679,"node_id":"MDQ6VXNlcjc1MzY3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/753679?v=4","gravatar_id":"","url":"https://api.github.com/users/areek","html_url":"https://github.com/areek","followers_url":"https://api.github.com/users/areek/followers","following_url":"https://api.github.com/users/areek/following{/other_user}","gists_url":"https://api.github.com/users/areek/gists{/gist_id}","starred_url":"https://api.github.com/users/areek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areek/subscriptions","organizations_url":"https://api.github.com/users/areek/orgs","repos_url":"https://api.github.com/users/areek/repos","events_url":"https://api.github.com/users/areek/events{/privacy}","received_events_url":"https://api.github.com/users/areek/received_events","type":"User","site_admin":false},"assignees":[{"login":"areek","id":753679,"node_id":"MDQ6VXNlcjc1MzY3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/753679?v=4","gravatar_id":"","url":"https://api.github.com/users/areek","html_url":"https://github.com/areek","followers_url":"https://api.github.com/users/areek/followers","following_url":"https://api.github.com/users/areek/following{/other_user}","gists_url":"https://api.github.com/users/areek/gists{/gist_id}","starred_url":"https://api.github.com/users/areek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areek/subscriptions","organizations_url":"https://api.github.com/users/areek/orgs","repos_url":"https://api.github.com/users/areek/repos","events_url":"https://api.github.com/users/areek/events{/privacy}","received_events_url":"https://api.github.com/users/areek/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2015-04-02T20:44:19Z","updated_at":"2017-04-27T16:43:21Z","closed_at":"2015-04-03T02:41:32Z","author_association":"NONE","active_lock_reason":null,"body":"```\n\"version\" : {\n    \"number\" : \"1.4.4\",\n    \"lucene_version\" : \"4.10.3\"\n  }\n```\n\nI have about **20m** database of keywords such as:\n\"**car**\" (weight is 100)\n\"**buy car**\" (weight is 50) \n\"**buy used car**\" (weight is 10)\n...\neach keyword having weight equal popularity. Initial mapping is:\n\n```\nPUT /suggestions/search/_mapping\n{\n  \"search\": {\n            \"properties\": {\n               \"suggest\": {\n                  \"type\": \"completion\",\n                  \"analyzer\": \"standard\"\n               }\n            }\n         }\n}\n```\n\nAnd indexing is simple:\n\n```\nPUT /suggestions/search/1\n{\n   \"name\": \"car\"\n   \"suggest\": {\n      \"input\": \"car\",\n      \"weight\": 100\n   }\n}\n```\n\nSo, considering the above list, when I type \"car\" I will only get \"**car**\" query. It worked fine as long as I did not want to look up words in middle of phrase. The solution I have found is split keyword to words and add them ti suggestion input as array:\n\n```\nPUT /suggestions/search/1\n{\n   \"name\": \"buy used car\"\n   \"suggest\": {\n      \"input\": [\"buy\", \"used\", \"car\"],\n      \"weight\": \"10\"\n   }\n}\n```\n\nNow when I type \"car\" I can find all of three keywords correctly sorted by weight. The solution was very rapid, much faster then any other elasticsearch autocompletion features. But then there was a big problem.\n\nWhen I reached 200k different keywords related to \"car\" (indexing arrays like [best, car, buy], [car, rental], [used,car,sale], etc...), I have problem with sorting by weight. When I make query:\n\n```\nGET /suggestions/_suggest\n{\n   \"text\" : \"car\",\n   \"completion\": {\n      \"field\": \"suggest\"\n   }\n}\n```\n\nThe results are sorted in wrong order. The weight (imagine that top keyword \"car\" has 200k weight and bottom is 1) is shifted randomly and first result has a weight of 100-180k instead of 200k.\n\nYou can reproduce this by creating index in loop (pseudo-code):\n\n```\nfor ($i=1;$i<200000;$i++)\n{\n\n   PUT /suggestions/search/$i\n   {\n      \"name\": \"$i\"\n      \"suggest\": {\n         \"input\": [\"test\", \"$i\"], // $i as second word is needed otherwise results will be merged\n         \"weight\": $i\n      }\n   }\n\n}\n```\n\nThen try to search \"test\" and you can see something like this:\n\n```\n{\n   \"_shards\": {\n      \"total\": 5,\n      \"successful\": 5,\n      \"failed\": 0\n   },\n   \"suggest\": [\n      {\n         \"text\": \"test\",\n         \"offset\": 0,\n         \"length\": 4,\n         \"options\": [\n            {\n               \"text\": \"179992\",\n               \"score\": 179992\n            },\n            {\n               \"text\": \"179940\",\n               \"score\": 179940\n            },\n            {\n               \"text\": \"179868\",\n               \"score\": 179868\n            },\n            {\n               \"text\": \"179820\",\n               \"score\": 179820\n            },\n            {\n               \"text\": \"179696\",\n               \"score\": 179696\n            }\n         ]\n      }\n   ]\n}\n```\n\nAs you can see, first result is 179992, not 200000. Of course the top weight is 200k and index contains 200k elements. What could be the problem? This is feature of FST working or just a bug?\n","closed_by":{"login":"areek","id":753679,"node_id":"MDQ6VXNlcjc1MzY3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/753679?v=4","gravatar_id":"","url":"https://api.github.com/users/areek","html_url":"https://github.com/areek","followers_url":"https://api.github.com/users/areek/followers","following_url":"https://api.github.com/users/areek/following{/other_user}","gists_url":"https://api.github.com/users/areek/gists{/gist_id}","starred_url":"https://api.github.com/users/areek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areek/subscriptions","organizations_url":"https://api.github.com/users/areek/orgs","repos_url":"https://api.github.com/users/areek/repos","events_url":"https://api.github.com/users/areek/events{/privacy}","received_events_url":"https://api.github.com/users/areek/received_events","type":"User","site_admin":false},"performed_via_github_app":null}