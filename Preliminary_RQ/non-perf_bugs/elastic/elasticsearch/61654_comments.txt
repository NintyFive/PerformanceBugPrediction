[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/682147664","html_url":"https://github.com/elastic/elasticsearch/issues/61654#issuecomment-682147664","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61654","id":682147664,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MjE0NzY2NA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-08-27T19:30:37Z","updated_at":"2020-08-27T19:30:37Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-ql (:Query Languages/EQL)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/690399918","html_url":"https://github.com/elastic/elasticsearch/issues/61654#issuecomment-690399918","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61654","id":690399918,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MDM5OTkxOA==","user":{"login":"rw-access","id":31489089,"node_id":"MDQ6VXNlcjMxNDg5MDg5","avatar_url":"https://avatars1.githubusercontent.com/u/31489089?v=4","gravatar_id":"","url":"https://api.github.com/users/rw-access","html_url":"https://github.com/rw-access","followers_url":"https://api.github.com/users/rw-access/followers","following_url":"https://api.github.com/users/rw-access/following{/other_user}","gists_url":"https://api.github.com/users/rw-access/gists{/gist_id}","starred_url":"https://api.github.com/users/rw-access/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rw-access/subscriptions","organizations_url":"https://api.github.com/users/rw-access/orgs","repos_url":"https://api.github.com/users/rw-access/repos","events_url":"https://api.github.com/users/rw-access/events{/privacy}","received_events_url":"https://api.github.com/users/rw-access/received_events","type":"User","site_admin":false},"created_at":"2020-09-10T15:59:34Z","updated_at":"2020-09-17T14:49:34Z","author_association":"MEMBER","body":"**Update**: I think this is actually okay in its current implementation. It's not a bug then, more of a specification question.\r\n\r\nI looked into this a little bit more, and I think that the expectation for many languages is for the equality operator to be left-associative. Thus `a == b == c` is equivalent to `(a == b) == c`\r\n\r\nI think it comes to a matter of specification, and what we think is desired behavior for the language. Do we want this operator to be left-associative or do we want to forbid this syntax? We can decide the ideal specification, and from there we can work out the implementation details, if any need to be changed. I added the label `team-discuss` to ask in the next meeting.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/694226426","html_url":"https://github.com/elastic/elasticsearch/issues/61654#issuecomment-694226426","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61654","id":694226426,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NDIyNjQyNg==","user":{"login":"matriv","id":5058131,"node_id":"MDQ6VXNlcjUwNTgxMzE=","avatar_url":"https://avatars1.githubusercontent.com/u/5058131?v=4","gravatar_id":"","url":"https://api.github.com/users/matriv","html_url":"https://github.com/matriv","followers_url":"https://api.github.com/users/matriv/followers","following_url":"https://api.github.com/users/matriv/following{/other_user}","gists_url":"https://api.github.com/users/matriv/gists{/gist_id}","starred_url":"https://api.github.com/users/matriv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matriv/subscriptions","organizations_url":"https://api.github.com/users/matriv/orgs","repos_url":"https://api.github.com/users/matriv/repos","events_url":"https://api.github.com/users/matriv/events{/privacy}","received_events_url":"https://api.github.com/users/matriv/received_events","type":"User","site_admin":false},"created_at":"2020-09-17T13:18:09Z","updated_at":"2020-09-17T13:18:09Z","author_association":"CONTRIBUTOR","body":"Just listing the behaviour of SQL in some popular DBs:\r\nPostgreSQL:\r\n```\r\npostgres=# select 1 < 2 < 3;\r\nERROR:  syntax error at or near \"<\"\r\nLINE 1: select 1 < 2 < 3;\r\n                     ^\r\npostgres=# select 1 = 2 = 3;\r\nERROR:  syntax error at or near \"=\"\r\nLINE 1: select 1 = 2 = 3;\r\n                     ^\r\npostgres=# select (1 = 2) = true;\r\n ?column?\r\n----------\r\n f\r\n(1 row)\r\n\r\npostgres=# select 1 = 1 = 1;\r\nERROR:  syntax error at or near \"=\"\r\nLINE 1: select 1 = 1 = 1;\r\n                     ^\r\n```\r\n\r\nMySQL:\r\n```\r\nselect 1 = 1 = 1;\r\n\r\n1 = 1 = 1\r\n--\r\n1\r\n\r\nselect 1 = 2 = 3\r\n\r\n1 = 2 = 3\r\n--\r\n0\r\n\r\nselect 1 < 2 < 3\r\n\r\n1 < 2 < 3\r\n--\r\n1\r\n\r\nselect 1 > 2 > 3\r\n\r\n1 > 2 > 3\r\n--\r\n0\r\n```\r\n\r\nOracle gives a syntax error for those expressions.\r\n\r\nI have no real personal preference, I'd say to keep it as is (left-associative) rather than forbid it.\r\n\r\n","performed_via_github_app":null}]