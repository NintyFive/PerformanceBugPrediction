[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/196247700","html_url":"https://github.com/elastic/elasticsearch/issues/17085#issuecomment-196247700","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17085","id":196247700,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NjI0NzcwMA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-03-14T10:35:52Z","updated_at":"2016-03-14T10:35:52Z","author_association":"CONTRIBUTOR","body":"I am not sure we really started doing this or somebody just did it without thinking about if it's necessary. I think it initially came up during the clusterstate diffs where is was necessary in some places but not meant as best practice or a pattern. Especially with Java 8 where we can just pass `SomeWriteable::new` as an `Writeable.IOFunction` is a much better pattern where it's needed\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/196318551","html_url":"https://github.com/elastic/elasticsearch/issues/17085#issuecomment-196318551","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17085","id":196318551,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NjMxODU1MQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-03-14T13:53:05Z","updated_at":"2016-03-14T13:53:05Z","author_association":"CONTRIBUTOR","body":"Now that we can make the constructor references I wonder if we can drop `readFrom` from `Writeable` and declare that by conventions `Writeable`s always have a constructor that takes a stream input. We could enforce the convention with tooling like we do the test class hierarchy if we like.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/196321070","html_url":"https://github.com/elastic/elasticsearch/issues/17085#issuecomment-196321070","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17085","id":196321070,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NjMyMTA3MA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-03-14T14:00:29Z","updated_at":"2016-03-14T14:00:29Z","author_association":"CONTRIBUTOR","body":"you can do that however, I don't like the fact that the compiler doesn't require you to do so...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/196335923","html_url":"https://github.com/elastic/elasticsearch/issues/17085#issuecomment-196335923","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17085","id":196335923,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NjMzNTkyMw==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-03-14T14:33:40Z","updated_at":"2016-03-14T14:33:40Z","author_association":"CONTRIBUTOR","body":"@nik9000 maybe we can make it an abstract class?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/196339248","html_url":"https://github.com/elastic/elasticsearch/issues/17085#issuecomment-196339248","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17085","id":196339248,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NjMzOTI0OA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-03-14T14:37:39Z","updated_at":"2016-03-14T14:59:53Z","author_association":"CONTRIBUTOR","body":"> @nik9000 maybe we can make it an abstract class?\n\nThat doesn't really force the implementer to actually use the StreamInput constructor. It is more of a \"reminder\", I guess. And it could mess with class hierarchy. I don't really like it.\n\nI think it wouldn't be too hard to make NamingConvetionsCheck check that implementers declare the constructor. It isn't the compiler, but it is a build time thing. I like that better than the abstract class I think.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/196935887","html_url":"https://github.com/elastic/elasticsearch/issues/17085#issuecomment-196935887","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17085","id":196935887,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NjkzNTg4Nw==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2016-03-15T17:27:13Z","updated_at":"2016-03-15T17:27:13Z","author_association":"MEMBER","body":"For my part I wouldn't like having this as a build time only check as it makes development annoying since I can have a new fix/feature/enhancement compiling and ready to go and then find when I run the build that there are problems. I personally think we should limit the build time checks as much as possible and prefer compile time errors instead.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/199269155","html_url":"https://github.com/elastic/elasticsearch/issues/17085#issuecomment-199269155","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17085","id":199269155,"node_id":"MDEyOklzc3VlQ29tbWVudDE5OTI2OTE1NQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-03-21T13:15:39Z","updated_at":"2016-03-21T13:15:39Z","author_association":"CONTRIBUTOR","body":"I'm going to have a go at this. It is large and I'll do it in stages. I suspect I'll be able to do it without any extra checks simply because all Writeables want to be read and they'll need a StreamInput constructor for that to work.\n","performed_via_github_app":null}]