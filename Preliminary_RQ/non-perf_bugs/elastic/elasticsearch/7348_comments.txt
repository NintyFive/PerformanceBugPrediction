[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/52774244","html_url":"https://github.com/elastic/elasticsearch/issues/7348#issuecomment-52774244","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7348","id":52774244,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzc0MjQ0","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-08-20T13:02:20Z","updated_at":"2014-08-20T13:02:20Z","author_association":"CONTRIBUTOR","body":"@dominikmank The way that `missing` and `exists` is implemented changed in 1.3.0, see https://github.com/elasticsearch/elasticsearch/issues/5659\n\nIf I understand what is happening correctly, the difference happens on analyzed fields that generate no tokens. In that case the old implementation assumed that the field didn't exist while the new implementation assumes that it exists since a field value was provided. I'm wondering that the new approach may be more correct?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/52776917","html_url":"https://github.com/elastic/elasticsearch/issues/7348#issuecomment-52776917","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7348","id":52776917,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzc2OTE3","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-08-20T13:24:04Z","updated_at":"2014-08-20T13:24:04Z","author_association":"CONTRIBUTOR","body":"@jpountz it's breaking bwc.  i think people probably rely on the old behaviour.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/52778103","html_url":"https://github.com/elastic/elasticsearch/issues/7348#issuecomment-52778103","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7348","id":52778103,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzc4MTAz","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-08-20T13:33:27Z","updated_at":"2014-08-20T13:33:27Z","author_association":"CONTRIBUTOR","body":"I guess it could be considered a bug fix as well since the documentation mentions it is supposed to find fields that have no values while `\"\"`, `\"_\"`, or any other value whose analyzed form contains no tokens is still a valid value?\n\nIf we want to maintain bwc, I guess we can revert the change to the `missing` and `exists` filters in 1.x (but they'll be slow again) and document this break for 2.0.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/52780004","html_url":"https://github.com/elastic/elasticsearch/issues/7348#issuecomment-52780004","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7348","id":52780004,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzgwMDA0","user":{"login":"dominikmank","id":7710527,"node_id":"MDQ6VXNlcjc3MTA1Mjc=","avatar_url":"https://avatars2.githubusercontent.com/u/7710527?v=4","gravatar_id":"","url":"https://api.github.com/users/dominikmank","html_url":"https://github.com/dominikmank","followers_url":"https://api.github.com/users/dominikmank/followers","following_url":"https://api.github.com/users/dominikmank/following{/other_user}","gists_url":"https://api.github.com/users/dominikmank/gists{/gist_id}","starred_url":"https://api.github.com/users/dominikmank/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dominikmank/subscriptions","organizations_url":"https://api.github.com/users/dominikmank/orgs","repos_url":"https://api.github.com/users/dominikmank/repos","events_url":"https://api.github.com/users/dominikmank/events{/privacy}","received_events_url":"https://api.github.com/users/dominikmank/received_events","type":"User","site_admin":false},"created_at":"2014-08-20T13:48:03Z","updated_at":"2014-08-20T13:48:03Z","author_association":"NONE","body":"@clintongormley yep, i'm relying on it - but if there's another way to do it, i would love to see the solution.\n\n@jpountz So it's because the field is on default analyzed - yes? \nCan you show me an alternative with your changes in my example? \n\nWe reverted back to 1.2.4 now, so it's not that urgent :-) \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/52780812","html_url":"https://github.com/elastic/elasticsearch/issues/7348#issuecomment-52780812","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7348","id":52780812,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzgwODEy","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-08-20T13:54:05Z","updated_at":"2014-08-20T13:54:48Z","author_association":"CONTRIBUTOR","body":">  So it's because the field is on default analyzed - yes?\n\nYes.\n\nIt should be possible to emulate the old behavior by doing a query like this one, just replace `f` with the field name that you want to check:\n\n```\nGET test/_search\n{\n  \"query\": {\n    \"filtered\": {\n      \"filter\": {\n        \"not\": {\n          \"filter\": {\n            \"range\": {\n              \"f\": {\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n`exists` should be the same without the `not` filter.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/52781645","html_url":"https://github.com/elastic/elasticsearch/issues/7348#issuecomment-52781645","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7348","id":52781645,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzgxNjQ1","user":{"login":"dominikmank","id":7710527,"node_id":"MDQ6VXNlcjc3MTA1Mjc=","avatar_url":"https://avatars2.githubusercontent.com/u/7710527?v=4","gravatar_id":"","url":"https://api.github.com/users/dominikmank","html_url":"https://github.com/dominikmank","followers_url":"https://api.github.com/users/dominikmank/followers","following_url":"https://api.github.com/users/dominikmank/following{/other_user}","gists_url":"https://api.github.com/users/dominikmank/gists{/gist_id}","starred_url":"https://api.github.com/users/dominikmank/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dominikmank/subscriptions","organizations_url":"https://api.github.com/users/dominikmank/orgs","repos_url":"https://api.github.com/users/dominikmank/repos","events_url":"https://api.github.com/users/dominikmank/events{/privacy}","received_events_url":"https://api.github.com/users/dominikmank/received_events","type":"User","site_admin":false},"created_at":"2014-08-20T13:59:51Z","updated_at":"2014-08-20T13:59:51Z","author_association":"NONE","body":"@jpountz yeah, that solves it, thanks! ... but we take the 1.2.4 anyway for the time being :D So, this is the method to do it in the future? :'( \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/52785464","html_url":"https://github.com/elastic/elasticsearch/issues/7348#issuecomment-52785464","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7348","id":52785464,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzg1NDY0","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-08-20T14:27:37Z","updated_at":"2014-08-20T14:27:37Z","author_association":"CONTRIBUTOR","body":"@dominikmank I don't know yet. This way of computing documents with missing values is very costly and this was the reason for the refactoring in #5659. I don't think we can get back to the old behavior with the new impl whithout analyzing twice, which I'd like to avoid. Let's see what @clintongormley thinks about it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/54050591","html_url":"https://github.com/elastic/elasticsearch/issues/7348#issuecomment-54050591","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7348","id":54050591,"node_id":"MDEyOklzc3VlQ29tbWVudDU0MDUwNTkx","user":{"login":"jprante","id":635745,"node_id":"MDQ6VXNlcjYzNTc0NQ==","avatar_url":"https://avatars1.githubusercontent.com/u/635745?v=4","gravatar_id":"","url":"https://api.github.com/users/jprante","html_url":"https://github.com/jprante","followers_url":"https://api.github.com/users/jprante/followers","following_url":"https://api.github.com/users/jprante/following{/other_user}","gists_url":"https://api.github.com/users/jprante/gists{/gist_id}","starred_url":"https://api.github.com/users/jprante/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jprante/subscriptions","organizations_url":"https://api.github.com/users/jprante/orgs","repos_url":"https://api.github.com/users/jprante/repos","events_url":"https://api.github.com/users/jprante/events{/privacy}","received_events_url":"https://api.github.com/users/jprante/received_events","type":"User","site_admin":false},"created_at":"2014-09-01T11:50:42Z","updated_at":"2014-09-01T11:50:42Z","author_association":"CONTRIBUTOR","body":"I like the new behavior of #5659 because it is faster and I have high cardinality fields all over the place, and suggest to add the missing documentation of the breaking change in one of the subsequent version release notes.  My 2¢\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/55053335","html_url":"https://github.com/elastic/elasticsearch/issues/7348#issuecomment-55053335","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7348","id":55053335,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MDUzMzM1","user":{"login":"LesBarstow","id":3858565,"node_id":"MDQ6VXNlcjM4NTg1NjU=","avatar_url":"https://avatars2.githubusercontent.com/u/3858565?v=4","gravatar_id":"","url":"https://api.github.com/users/LesBarstow","html_url":"https://github.com/LesBarstow","followers_url":"https://api.github.com/users/LesBarstow/followers","following_url":"https://api.github.com/users/LesBarstow/following{/other_user}","gists_url":"https://api.github.com/users/LesBarstow/gists{/gist_id}","starred_url":"https://api.github.com/users/LesBarstow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LesBarstow/subscriptions","organizations_url":"https://api.github.com/users/LesBarstow/orgs","repos_url":"https://api.github.com/users/LesBarstow/repos","events_url":"https://api.github.com/users/LesBarstow/events{/privacy}","received_events_url":"https://api.github.com/users/LesBarstow/received_events","type":"User","site_admin":false},"created_at":"2014-09-09T23:48:38Z","updated_at":"2014-09-09T23:48:38Z","author_association":"NONE","body":"While I like the idea of increased speed, this change does require (perhaps significant) extra client-side massaging when inserting variable data that might include empty strings.\n\nThe change is also not properly documented in the missing filter documentation or anywhere else that I've been able to find that references null value processing.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/62263074","html_url":"https://github.com/elastic/elasticsearch/issues/7348#issuecomment-62263074","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7348","id":62263074,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMjYzMDc0","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-11-08T16:08:31Z","updated_at":"2014-11-08T16:08:31Z","author_association":"CONTRIBUTOR","body":"I have clarified the behaviour of the `missing` and `exists` filters in b9149f836b61382446f8d14feb05cde5810602e8\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/76626305","html_url":"https://github.com/elastic/elasticsearch/issues/7348#issuecomment-76626305","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7348","id":76626305,"node_id":"MDEyOklzc3VlQ29tbWVudDc2NjI2MzA1","user":{"login":"salimane","id":403938,"node_id":"MDQ6VXNlcjQwMzkzOA==","avatar_url":"https://avatars2.githubusercontent.com/u/403938?v=4","gravatar_id":"","url":"https://api.github.com/users/salimane","html_url":"https://github.com/salimane","followers_url":"https://api.github.com/users/salimane/followers","following_url":"https://api.github.com/users/salimane/following{/other_user}","gists_url":"https://api.github.com/users/salimane/gists{/gist_id}","starred_url":"https://api.github.com/users/salimane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/salimane/subscriptions","organizations_url":"https://api.github.com/users/salimane/orgs","repos_url":"https://api.github.com/users/salimane/repos","events_url":"https://api.github.com/users/salimane/events{/privacy}","received_events_url":"https://api.github.com/users/salimane/received_events","type":"User","site_admin":false},"created_at":"2015-03-01T19:42:18Z","updated_at":"2015-03-01T19:42:18Z","author_association":"NONE","body":"@jpountz the query you provided, on 1.4.4, works for type string but does not work for empty type objects like `{ \"user\": [] }`.\nBasically i would love a sample query that works for : \n\n``` ruby\n{ \"user\": null }\n{ \"user\": [] } \n{ \"user\": [null] } \n{ \"foo\":  \"bar\" } \n{ \"user\":  \"\" } \n{ \"user\":  \"a and to\" }  # only stopwords that would be cleaned up with an analyzer like stop\n```\n\nAll the above should match the query:\n\n``` ruby\n{\n        \"filter\" : {\n            \"missing\" : { \"field\" : \"user\" }\n        }\n}\n```\n\nAny ideas ?\nThanks\n","performed_via_github_app":null}]