{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/1913","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1913/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1913/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1913/events","html_url":"https://github.com/elastic/elasticsearch/issues/1913","id":4443992,"node_id":"MDU6SXNzdWU0NDQzOTky","number":1913,"title":"Index Warmup API","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"labels":[{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":232920,"node_id":"MDU6TGFiZWwyMzI5MjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.20.0.RC1","name":"v0.20.0.RC1","color":"DDDDDD","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2012-05-06T15:49:58Z","updated_at":"2014-08-06T16:03:40Z","closed_at":"2012-05-06T15:50:44Z","author_association":"MEMBER","active_lock_reason":null,"body":"Index warming allows to run registered search requests to warm up the index before it is available for search. With the near real time aspect of search, cold data (segments) will be warmed up before they become available for search.\n\nWarmup searches typically include requests that require heavy loading of data, such as faceting or sorting on specific fields.\n\nThe warmup APIs allows to register warmup (search) under specific names, remove them, and get them.\n\nIndex warmup can be disabled by setting `index.warmer.enabled` to `false`. It is supported as a realtime setting using update settings API. This can be handy when doing initial bulk indexing, disabling pre registered warmers to make indexing faster and less expensive and then enable it.\n## Put Warmer\n\nAllows to put a warmup search request on a specific index (or indices), with the body composing of a regular search request. Types can be provided as part of the URI if the search request is designed to be run only against the specific types.\n\nHere is an example that registers a warmup called `warmer_1` against index `test` (can be alias or several indices), for a search request that runs against all types:\n\n```\ncurl -XPUT localhost:9200/test/_warmer/warmer_1 -d '{\n    \"query\" : {\n        \"match_all\" : {}\n    },\n    \"facets\" : {\n        \"facet_1\" : {\n            \"terms\" : {\n                \"field\" : \"field\"\n            }\n        } \n    }\n}'\n```\n\nAnd an example that registers a warmup against specific types:\n\n```\ncurl -XPUT localhost:9200/test/type1/_warmer/warmer_1 -d '{\n    \"query\" : {\n        \"match_all\" : {}\n    },\n    \"facets\" : {\n        \"facet_1\" : {\n            \"terms\" : {\n                \"field\" : \"field\"\n            }\n        } \n    }\n}'\n```\n## Delete Warmer\n\nRemoving a warmer can be done against an index (or alias / indices) based on its name. The provided name can be a simple wildcard expression or omitted to remove all warmers. Some samples:\n\n```\n# delete warmer named warmer_1 on test index\ncurl -XDELETE localhost:9200/test/_warmer/warmer_1 \n\n# delete all warmers that start with warm on test index\ncurl -XDELETE localhost:9200/test/_warmer/warm* \n\n# delete all warmers for test index\ncurl -XDELETE localhost:9200/test/_warmer/\n```\n## GETting Warmer\n\nGetting a warmer for specific index (or alias, or several indices) based on its name. The provided name can be a simple wildcard expression or omitted to get all warmers. Some examples: \n\n```\n# get warmer named warmer_1 on test index\ncurl -XGET localhost:9200/test/_warmer/warmer_1 \n\n# get all warmers that start with warm on test index\ncurl -XGET localhost:9200/test/_warmer/warm* \n\n# get all warmers for test index\ncurl -XGET localhost:9200/test/_warmer/\n```\n","closed_by":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"performed_via_github_app":null}