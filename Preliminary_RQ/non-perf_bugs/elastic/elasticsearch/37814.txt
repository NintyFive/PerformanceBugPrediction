{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/37814","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37814/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37814/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37814/events","html_url":"https://github.com/elastic/elasticsearch/issues/37814","id":402689962,"node_id":"MDU6SXNzdWU0MDI2ODk5NjI=","number":37814,"title":"[CI] SearchQueryIT testDateRangeInQueryStringWithTimeZone_7880 \"Fields resolved to two different dates\"","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"labels":[{"id":144797810,"node_id":"MDU6TGFiZWwxNDQ3OTc4MTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Core","name":":Core/Infra/Core","color":"0e8a16","default":false,"description":"Core issues without another label"},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-01-24T12:43:24Z","updated_at":"2019-01-31T07:52:36Z","closed_at":"2019-01-31T07:52:36Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"`org.elasticsearch.search.query.SearchQueryIT testDateRangeInQueryStringWithTimeZone_7880` failed in https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+master+multijob-unix-compatibility/os=fedora/200/console with this error:\r\n\r\n```\r\n23:48:26    > Throwable #1: MapperParsingException[failed to parse field [past] of type [date]]; nested: IllegalArgumentException[failed to parse date field [2019-01-23T23:48:15.384GMT0] with format [strict_date_optional_time||epoch_millis]]; nested: NotSerializableExceptionWrapper[date_time_parse_exception: Text '2019-01-23T23:48:15.384GMT0' could not be parsed: Conflict found: Fields resolved to two different dates: 2019-01-23 1970-01-01]; nested: NotSerializableExceptionWrapper[date_time_exception: Conflict found: Fields resolved to two different dates: 2019-01-23 1970-01-01];\r\n23:48:26    > \tat __randomizedtesting.SeedInfo.seed([2F507404F3AD10FE:3BF7715B9238CEBB]:0)\r\n23:48:26    > \tat org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:280)\r\n23:48:26    > \tat org.elasticsearch.index.mapper.DocumentParser.parseObjectOrField(DocumentParser.java:468)\r\n23:48:26    > \tat org.elasticsearch.index.mapper.DocumentParser.parseValue(DocumentParser.java:596)\r\n23:48:26    > \tat org.elasticsearch.index.mapper.DocumentParser.innerParseObject(DocumentParser.java:407)\r\n23:48:26    > \tat org.elasticsearch.index.mapper.DocumentParser.parseObjectOrNested(DocumentParser.java:381)\r\n23:48:26    > \tat org.elasticsearch.index.mapper.DocumentParser.internalParseDocument(DocumentParser.java:98)\r\n23:48:26    > \tat org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:71)\r\n23:48:26    > \tat org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:264)\r\n23:48:26    > \tat org.elasticsearch.index.shard.IndexShard.prepareIndex(IndexShard.java:755)\r\n23:48:26    > \tat org.elasticsearch.index.shard.IndexShard.applyIndexOperation(IndexShard.java:732)\r\n23:48:26    > \tat org.elasticsearch.index.shard.IndexShard.applyIndexOperationOnPrimary(IndexShard.java:704)\r\n23:48:26    > \tat org.elasticsearch.action.bulk.TransportShardBulkAction.lambda$executeIndexRequestOnPrimary$3(TransportShardBulkAction.java:461)\r\n23:48:26    > \tat org.elasticsearch.action.bulk.TransportShardBulkAction.executeOnPrimaryWhileHandlingMappingUpdates(TransportShardBulkAction.java:484)\r\n23:48:26    > \tat org.elasticsearch.action.bulk.TransportShardBulkAction.executeIndexRequestOnPrimary(TransportShardBulkAction.java:459)\r\n23:48:26    > \tat org.elasticsearch.action.bulk.TransportShardBulkAction.executeBulkItemRequest(TransportShardBulkAction.java:218)\r\n23:48:26    > \tat org.elasticsearch.action.bulk.TransportShardBulkAction.performOnPrimary(TransportShardBulkAction.java:161)\r\n23:48:26    > \tat org.elasticsearch.action.bulk.TransportShardBulkAction.performOnPrimary(TransportShardBulkAction.java:153)\r\n23:48:26    > \tat org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:141)\r\n23:48:26    > \tat org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:79)\r\n23:48:26    > \tat org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryShardReference.perform(TransportReplicationAction.java:1034)\r\n23:48:26    > \tat org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryShardReference.perform(TransportReplicationAction.java:1012)\r\n23:48:26    > \tat org.elasticsearch.action.support.replication.ReplicationOperation.execute(ReplicationOperation.java:102)\r\n23:48:26    > \tat org.elasticsearch.action.support.replication.TransportReplicationAction$AsyncPrimaryAction.runWithPrimaryShardReference(TransportReplicationAction.java:414)\r\n23:48:26    > \tat org.elasticsearch.action.support.replication.TransportReplicationAction$AsyncPrimaryAction.lambda$doRun$0(TransportReplicationAction.java:360)\r\n23:48:26    > \tat org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:61)\r\n23:48:26    > \tat org.elasticsearch.index.shard.IndexShardOperationPermits.acquire(IndexShardOperationPermits.java:269)\r\n23:48:26    > \tat org.elasticsearch.index.shard.IndexShardOperationPermits.acquire(IndexShardOperationPermits.java:236)\r\n23:48:26    > \tat org.elasticsearch.index.shard.IndexShard.acquirePrimaryOperationPermit(IndexShard.java:2355)\r\n23:48:26    > \tat org.elasticsearch.action.support.replication.TransportReplicationAction.acquirePrimaryOperationPermit(TransportReplicationAction.java:971)\r\n23:48:26    > \tat org.elasticsearch.action.support.replication.TransportReplicationAction$AsyncPrimaryAction.doRun(TransportReplicationAction.java:359)\r\n23:48:26    > \tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n23:48:26    > \tat org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:314)\r\n23:48:26    > \tat org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:306)\r\n23:48:26    > \tat org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:63)\r\n23:48:26    > \tat org.elasticsearch.transport.TransportService$7.doRun(TransportService.java:687)\r\n23:48:26    > \tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:732)\r\n23:48:26    > \tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n23:48:26    > \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n23:48:26    > \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n23:48:26    > \tat java.lang.Thread.run(Thread.java:748)\r\n23:48:26    > Caused by: java.lang.IllegalArgumentException: failed to parse date field [2019-01-23T23:48:15.384GMT0] with format [strict_date_optional_time||epoch_millis]\r\n23:48:26    > \tat org.elasticsearch.common.time.JavaDateFormatter.parse(JavaDateFormatter.java:127)\r\n23:48:26    > \tat org.elasticsearch.index.mapper.DateFieldMapper$DateFieldType.parse(DateFieldMapper.java:250)\r\n23:48:26    > \tat org.elasticsearch.index.mapper.DateFieldMapper.parseCreateField(DateFieldMapper.java:454)\r\n23:48:26    > \tat org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:274)\r\n23:48:26    > \t... 39 more\r\n23:48:26    > Caused by: NotSerializableExceptionWrapper[date_time_parse_exception: Text '2019-01-23T23:48:15.384GMT0' could not be parsed: Conflict found: Fields resolved to two different dates: 2019-01-23 1970-01-01]; nested: NotSerializableExceptionWrapper[date_time_exception: Conflict found: Fields resolved to two different dates: 2019-01-23 1970-01-01];\r\n23:48:26    > \tat java.time.format.DateTimeFormatter.createError(DateTimeFormatter.java:1920)\r\n23:48:26    > \tat java.time.format.DateTimeFormatter.parse(DateTimeFormatter.java:1781)\r\n23:48:26    > \tat org.elasticsearch.common.time.JavaDateFormatter.parse(JavaDateFormatter.java:125)\r\n23:48:26    > \t... 42 more\r\n23:48:26    > Caused by: NotSerializableExceptionWrapper[date_time_exception: Conflict found: Fields resolved to two different dates: 2019-01-23 1970-01-01]\r\n23:48:26    > \tat java.time.format.Parsed.updateCheckConflict(Parsed.java:357)\r\n23:48:26    > \tat java.time.format.Parsed.resolveInstantFields0(Parsed.java:345)\r\n23:48:26    > \tat java.time.format.Parsed.resolveInstantFields(Parsed.java:331)\r\n23:48:26    > \tat java.time.format.Parsed.resolveFields(Parsed.java:310)\r\n23:48:26    > \tat java.time.format.Parsed.resolve(Parsed.java:244)\r\n23:48:26    > \tat java.time.format.DateTimeParseContext.toResolved(DateTimeParseContext.java:331)\r\n23:48:26    > \tat java.time.format.DateTimeFormatter.parseResolved0(DateTimeFormatter.java:1955)\r\n23:48:26    > \tat java.time.format.DateTimeFormatter.parse(DateTimeFormatter.java:1777)\r\n23:48:26    > \t... 43 more\r\n```\r\n\r\nI thought this would reproduce easily, but it didn't reproduce on my Mac nor on a Linux machine running CentOS 7 using:\r\n\r\n```\r\n./gradlew :server:integTest \\\r\n  -Dtests.seed=2F507404F3AD10FE \\\r\n  -Dtests.class=org.elasticsearch.search.query.SearchQueryIT \\\r\n  -Dtests.method=\"testDateRangeInQueryStringWithTimeZone_7880\" \\\r\n  -Dtests.security.manager=true \\\r\n  -Dtests.locale=no \\\r\n  -Dtests.timezone=GMT0 \\\r\n  -Dcompiler.java=11 \\\r\n  -Druntime.java=8\r\n```\r\n\r\nSo I guess there must be something environmental about the failure.  Maybe the fact that it ran close to midnight UTC, so resolved to a different date in the server timezone and the timezone specified in the date string.  Or maybe something related to the OS being Fedora 28.","closed_by":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"performed_via_github_app":null}