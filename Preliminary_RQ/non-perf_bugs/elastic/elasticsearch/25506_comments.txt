[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320528823","html_url":"https://github.com/elastic/elasticsearch/issues/25506#issuecomment-320528823","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25506","id":320528823,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDUyODgyMw==","user":{"login":"PnPie","id":7472431,"node_id":"MDQ6VXNlcjc0NzI0MzE=","avatar_url":"https://avatars3.githubusercontent.com/u/7472431?v=4","gravatar_id":"","url":"https://api.github.com/users/PnPie","html_url":"https://github.com/PnPie","followers_url":"https://api.github.com/users/PnPie/followers","following_url":"https://api.github.com/users/PnPie/following{/other_user}","gists_url":"https://api.github.com/users/PnPie/gists{/gist_id}","starred_url":"https://api.github.com/users/PnPie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PnPie/subscriptions","organizations_url":"https://api.github.com/users/PnPie/orgs","repos_url":"https://api.github.com/users/PnPie/repos","events_url":"https://api.github.com/users/PnPie/events{/privacy}","received_events_url":"https://api.github.com/users/PnPie/received_events","type":"User","site_admin":false},"created_at":"2017-08-06T19:58:41Z","updated_at":"2017-08-06T19:58:41Z","author_association":"CONTRIBUTOR","body":"If we do it for multiple aliases (especially with support of wild-cards), the naming of newly created indices might be a problem because currently we need to specify a name for an alias if it doesn't match a certain pattern.\r\n\r\nOtherwise we have to generate new names for all the newly created indices ?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320592197","html_url":"https://github.com/elastic/elasticsearch/issues/25506#issuecomment-320592197","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25506","id":320592197,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDU5MjE5Nw==","user":{"login":"synhershko","id":212252,"node_id":"MDQ6VXNlcjIxMjI1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/212252?v=4","gravatar_id":"","url":"https://api.github.com/users/synhershko","html_url":"https://github.com/synhershko","followers_url":"https://api.github.com/users/synhershko/followers","following_url":"https://api.github.com/users/synhershko/following{/other_user}","gists_url":"https://api.github.com/users/synhershko/gists{/gist_id}","starred_url":"https://api.github.com/users/synhershko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/synhershko/subscriptions","organizations_url":"https://api.github.com/users/synhershko/orgs","repos_url":"https://api.github.com/users/synhershko/repos","events_url":"https://api.github.com/users/synhershko/events{/privacy}","received_events_url":"https://api.github.com/users/synhershko/received_events","type":"User","site_admin":false},"created_at":"2017-08-07T07:41:31Z","updated_at":"2017-08-07T07:41:31Z","author_association":"CONTRIBUTOR","body":"The generated name can either be derived from the matching alias name(s) via a convention (like now), or the index name pattern can be specified in the `_rollover` operation command itself (sibling to \"conditions\").","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320687928","html_url":"https://github.com/elastic/elasticsearch/issues/25506#issuecomment-320687928","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25506","id":320687928,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDY4NzkyOA==","user":{"login":"fred84","id":208023,"node_id":"MDQ6VXNlcjIwODAyMw==","avatar_url":"https://avatars0.githubusercontent.com/u/208023?v=4","gravatar_id":"","url":"https://api.github.com/users/fred84","html_url":"https://github.com/fred84","followers_url":"https://api.github.com/users/fred84/followers","following_url":"https://api.github.com/users/fred84/following{/other_user}","gists_url":"https://api.github.com/users/fred84/gists{/gist_id}","starred_url":"https://api.github.com/users/fred84/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fred84/subscriptions","organizations_url":"https://api.github.com/users/fred84/orgs","repos_url":"https://api.github.com/users/fred84/repos","events_url":"https://api.github.com/users/fred84/events{/privacy}","received_events_url":"https://api.github.com/users/fred84/received_events","type":"User","site_admin":false},"created_at":"2017-08-07T14:59:29Z","updated_at":"2017-08-07T14:59:29Z","author_association":"CONTRIBUTOR","body":"@cbuescher May I try to solve this issue?\r\n\r\n@synhershko @PnPie Maybe we should fail if we cannot generate new index name for any matching alias?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320987941","html_url":"https://github.com/elastic/elasticsearch/issues/25506#issuecomment-320987941","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25506","id":320987941,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDk4Nzk0MQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2017-08-08T15:15:32Z","updated_at":"2017-08-08T15:15:32Z","author_association":"CONTRIBUTOR","body":"I am interested in how this would look like especially on the response side. Would we simply return a list of response and internally just resolve the wildcard on the rest layer and then send N individual requests? I think that could work but I really don't want much of a special handling internally to support this.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/321224423","html_url":"https://github.com/elastic/elasticsearch/issues/25506#issuecomment-321224423","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25506","id":321224423,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMTIyNDQyMw==","user":{"login":"fred84","id":208023,"node_id":"MDQ6VXNlcjIwODAyMw==","avatar_url":"https://avatars0.githubusercontent.com/u/208023?v=4","gravatar_id":"","url":"https://api.github.com/users/fred84","html_url":"https://github.com/fred84","followers_url":"https://api.github.com/users/fred84/followers","following_url":"https://api.github.com/users/fred84/following{/other_user}","gists_url":"https://api.github.com/users/fred84/gists{/gist_id}","starred_url":"https://api.github.com/users/fred84/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fred84/subscriptions","organizations_url":"https://api.github.com/users/fred84/orgs","repos_url":"https://api.github.com/users/fred84/repos","events_url":"https://api.github.com/users/fred84/events{/privacy}","received_events_url":"https://api.github.com/users/fred84/received_events","type":"User","site_admin":false},"created_at":"2017-08-09T11:07:17Z","updated_at":"2017-08-09T11:07:17Z","author_association":"CONTRIBUTOR","body":"@s1monw  Yes, I think it will be array of responses, e.g. \r\n```json \r\n{\r\n    \"acknowledged\": true,\r\n    \"shards_acknowledged\": true,\r\n    \"dry_run\": false,\r\n    \"matched_aliases\": {\r\n        \"logs\": {\r\n            \"old_index\": \"logs-000001\",\r\n            \"new_index\": \"logs-000002\",\r\n            \"rolled_over\": true,\r\n            \"conditions\": {\r\n                \"[max_age: 7d]\": false,\r\n                \"[max_docs: 1000]\": true\r\n            }\r\n        },\r\n        \"logzz\": {\r\n            \"old_index\": \"logzz-000001\",\r\n            \"new_index\": \"logzz-000002\",\r\n            \"rolled_over\": false,\r\n            \"conditions\": {\r\n                \"[max_age: 7d]\": false,\r\n                \"[max_docs: 1000]\": false\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\nI worry about breaking API compatibility with existing users. Maybe we should add flag to request (e.g. \"enable_multiple_aliases\"). If this flag is not set, then wildcards and aliases lists will be forbidden.\r\n\r\nAs for implementation, I think we can modify TransportRolloverAction.masterOperation so it iterate over aliases, collect responses and then notify listener.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/321760381","html_url":"https://github.com/elastic/elasticsearch/issues/25506#issuecomment-321760381","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25506","id":321760381,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMTc2MDM4MQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2017-08-11T08:47:10Z","updated_at":"2017-08-11T08:47:10Z","author_association":"CONTRIBUTOR","body":">  I worry about breaking API compatibility with existing users. Maybe we should add flag to request (e.g. \"enable_multiple_aliases\"). If this flag is not set, then wildcards and aliases lists will be forbidden.\r\n\r\nwith rest we can start render both ways the the user if there is only one alias that matched. That way both APIs can be used at the same time. don't worry about the java API","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/323572750","html_url":"https://github.com/elastic/elasticsearch/issues/25506#issuecomment-323572750","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25506","id":323572750,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMzU3Mjc1MA==","user":{"login":"fred84","id":208023,"node_id":"MDQ6VXNlcjIwODAyMw==","avatar_url":"https://avatars0.githubusercontent.com/u/208023?v=4","gravatar_id":"","url":"https://api.github.com/users/fred84","html_url":"https://github.com/fred84","followers_url":"https://api.github.com/users/fred84/followers","following_url":"https://api.github.com/users/fred84/following{/other_user}","gists_url":"https://api.github.com/users/fred84/gists{/gist_id}","starred_url":"https://api.github.com/users/fred84/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fred84/subscriptions","organizations_url":"https://api.github.com/users/fred84/orgs","repos_url":"https://api.github.com/users/fred84/repos","events_url":"https://api.github.com/users/fred84/events{/privacy}","received_events_url":"https://api.github.com/users/fred84/received_events","type":"User","site_admin":false},"created_at":"2017-08-20T08:59:50Z","updated_at":"2017-08-20T09:00:39Z","author_association":"CONTRIBUTOR","body":"@s1monw \r\nWhen any of alias rollovers failed, what should we return? I see two options:\r\n- first encountered exception (just call `listener.onFailure` and ignore other responses)\r\n- collect all responses (both succeeded and failed) and return them together (example below). What status code should we use in this case?\r\n\r\n```json\r\n{\r\n  \"dry_run\" : false,\r\n  \"rolled_over_aliases\" : {\r\n    \"logz_write\" : {\r\n      \"old_index\" : \"logz-000001\",\r\n      \"new_index\" : \"logz-000002\",\r\n      \"rolled_over\" : true,\r\n      \"acknowledged\" : true,\r\n      \"shards_acknowledged\" : true,\r\n      \"conditions\" : {\r\n        \"[max_docs: 1]\" : true\r\n      }\r\n    },\r\n    \"logs_write\" : {\r\n      \"old_index\" : \"logs-000001\",\r\n      \"new_index\" : \"logs-000002\",\r\n      \"rolled_over\" : true,\r\n      \"acknowledged\" : true,\r\n      \"shards_acknowledged\" : true,\r\n      \"conditions\" : {\r\n        \"[max_docs: 1]\" : true\r\n      }\r\n    }\r\n  },\r\n  \"failed_aliases\" : {\r\n    \"logs_fail\" : {\r\n      \"type\" : \"illegal_argument_exception\",\r\n      \"reason\" : \"Some exception description\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/334181270","html_url":"https://github.com/elastic/elasticsearch/issues/25506#issuecomment-334181270","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25506","id":334181270,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNDE4MTI3MA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2017-10-04T14:51:00Z","updated_at":"2017-10-04T14:51:00Z","author_association":"CONTRIBUTOR","body":"closing see #26385 for the rational. thanks everybody involved and especially @fred84 for working with us. I really hope it was a good experience nevertheless","performed_via_github_app":null}]