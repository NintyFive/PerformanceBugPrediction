{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/18575","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18575/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18575/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18575/events","html_url":"https://github.com/elastic/elasticsearch/issues/18575","id":156777164,"node_id":"MDU6SXNzdWUxNTY3NzcxNjQ=","number":18575,"title":"Bug: org.elasticsearch.test.ESIntegTestCase has randomly failing shards when using excludes in terms aggregations","user":{"login":"DavidHauger","id":15940636,"node_id":"MDQ6VXNlcjE1OTQwNjM2","avatar_url":"https://avatars3.githubusercontent.com/u/15940636?v=4","gravatar_id":"","url":"https://api.github.com/users/DavidHauger","html_url":"https://github.com/DavidHauger","followers_url":"https://api.github.com/users/DavidHauger/followers","following_url":"https://api.github.com/users/DavidHauger/following{/other_user}","gists_url":"https://api.github.com/users/DavidHauger/gists{/gist_id}","starred_url":"https://api.github.com/users/DavidHauger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DavidHauger/subscriptions","organizations_url":"https://api.github.com/users/DavidHauger/orgs","repos_url":"https://api.github.com/users/DavidHauger/repos","events_url":"https://api.github.com/users/DavidHauger/events{/privacy}","received_events_url":"https://api.github.com/users/DavidHauger/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"}],"state":"closed","locked":false,"assignee":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"assignees":[{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2016-05-25T15:17:23Z","updated_at":"2016-07-18T09:21:11Z","closed_at":"2016-07-18T09:21:11Z","author_association":"NONE","active_lock_reason":null,"body":"In one of our `ESIntegTestCase`s, we set up an index, add a couple of documents and run a number of queries against these indices.\nIn most cases this works fine, with 1 exception: when using `exclude(String[] terms)` in a `TermsBuilder`, every now and then (not always!), some of the shards fail.\nThe shard settings of our `ESIntegTestCase` are not changed; so it sets up 1-10 shards.\nWhether these aggregations aim at a field on root level or a nested document does not matter - we could reproduce the error in either case (just running the test often enough).\nWhat seems to make a difference: It only happens when applying `exclude`; with `include` we have not seen failing shards yet.\nWe have not tested the regular expressions; only `String[]`.\n\ntwo failure messages that we saw on the `SearchResponse` in `.getShardFailures()` (nested document / root document):\n\n```\nshard [[DT3n-RvATnO4NDMUrDo4BA][visit][1]], reason [RemoteTransportException[[node_s0][local[1]][indices:data/read/search[phase/query/id]]]; nested: QueryPhaseExecutionException[Query Failed [Failed to execute main query]]; nested: AssertionError[startIndex=0, numBits=0]; ], cause [java.lang.AssertionError: startIndex=0, numBits=0\n    at org.apache.lucene.util.LongBitSet.set(LongBitSet.java:335)\n    at org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude$TermListBackedOrdinalsFilter.acceptedGlobalOrdinals(IncludeExclude.java:179)\n    at org.elasticsearch.search.aggregations.bucket.terms.GlobalOrdinalsStringTermsAggregator.getLeafCollector(GlobalOrdinalsStringTermsAggregator.java:97)\n    at org.elasticsearch.search.aggregations.AggregatorBase.getLeafCollector(AggregatorBase.java:132)\n    at org.elasticsearch.search.aggregations.AggregatorFactory$1$1.collect(AggregatorFactory.java:204)\n    at org.elasticsearch.search.aggregations.bucket.BucketsAggregator.collectExistingBucket(BucketsAggregator.java:80)\n    at org.elasticsearch.search.aggregations.bucket.BucketsAggregator.collectBucket(BucketsAggregator.java:72)\n    at org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedAggregator$1.collect(ReverseNestedAggregator.java:91)\n    at org.elasticsearch.search.aggregations.LeafBucketCollector$3.collect(LeafBucketCollector.java:73)\n    at org.elasticsearch.search.aggregations.bucket.BucketsAggregator.collectExistingBucket(BucketsAggregator.java:80)\n    at org.elasticsearch.search.aggregations.bucket.BucketsAggregator.collectBucket(BucketsAggregator.java:72)\n    at org.elasticsearch.search.aggregations.bucket.filter.FilterAggregator$1.collect(FilterAggregator.java:67)\n    at org.elasticsearch.search.aggregations.bucket.BucketsAggregator.collectExistingBucket(BucketsAggregator.java:80)\n    at org.elasticsearch.search.aggregations.bucket.BucketsAggregator.collectBucket(BucketsAggregator.java:72)\n    at org.elasticsearch.search.aggregations.bucket.nested.NestedAggregator$1.collect(NestedAggregator.java:118)\n    at org.elasticsearch.search.aggregations.LeafBucketCollector.collect(LeafBucketCollector.java:88)\n    at org.apache.lucene.search.MultiCollector$MultiLeafCollector.collect(MultiCollector.java:174)\n    at org.apache.lucene.search.AssertingLeafCollector.collect(AssertingLeafCollector.java:52)\n    at org.apache.lucene.search.AssertingLeafCollector.collect(AssertingLeafCollector.java:52)\n    at org.apache.lucene.search.Weight$DefaultBulkScorer.scoreAll(Weight.java:221)\n    at org.apache.lucene.search.Weight$DefaultBulkScorer.score(Weight.java:172)\n    at org.apache.lucene.search.AssertingBulkScorer.score(AssertingBulkScorer.java:79)\n    at org.apache.lucene.search.AssertingBulkScorer.score(AssertingBulkScorer.java:63)\n    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:821)\n    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:535)\n    at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:384)\n    at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:113)\n    at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:433)\n    at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryByIdTransportHandler.messageReceived(SearchServiceTransportAction.java:376)\n    at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryByIdTransportHandler.messageReceived(SearchServiceTransportAction.java:373)\n    at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)\n    at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:75)\n    at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:376)\n    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n```\n\nand \n\n```\nshard [[3TcVXShdQq6NoMcYQCwbtQ][visit][5]], reason [RemoteTransportException[[node_s0][local[1]][indices:data/read/search[phase/query]]]; nested: UncheckedExecutionException[QueryPhaseExecutionException[Query Failed [Failed to execute main query]]; nested: AssertionError[startIndex=0, numBits=0];]; nested: QueryPhaseExecutionException[Query Failed [Failed to execute main query]]; nested: AssertionError[startIndex=0, numBits=0]; ], cause [com.google.common.util.concurrent.UncheckedExecutionException: QueryPhaseExecutionException[Query Failed [Failed to execute main query]]; nested: AssertionError[startIndex=0, numBits=0];\n    at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2203)\n    at com.google.common.cache.LocalCache.get(LocalCache.java:3937)\n    at com.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4739)\n    at org.elasticsearch.indices.cache.request.IndicesRequestCache.loadIntoContext(IndicesRequestCache.java:263)\n    at org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:364)\n    at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:378)\n    at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryTransportHandler.messageReceived(SearchServiceTransportAction.java:368)\n    at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryTransportHandler.messageReceived(SearchServiceTransportAction.java:365)\n    at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)\n    at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:75)\n    at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:376)\n    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: QueryPhaseExecutionException[Query Failed [Failed to execute main query]]; nested: AssertionError[startIndex=0, numBits=0];\n    at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:409)\n    at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:113)\n    at org.elasticsearch.indices.cache.request.IndicesRequestCache$Loader.call(IndicesRequestCache.java:302)\n    at org.elasticsearch.indices.cache.request.IndicesRequestCache$Loader.call(IndicesRequestCache.java:283)\n    at com.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4742)\n    at com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3527)\n    at com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2319)\n    at com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2282)\n    at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2197)\n    ... 14 more\nCaused by: java.lang.AssertionError: startIndex=0, numBits=0\n    at org.apache.lucene.util.LongBitSet.set(LongBitSet.java:335)\n    at org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude$TermListBackedOrdinalsFilter.acceptedGlobalOrdinals(IncludeExclude.java:179)\n    at org.elasticsearch.search.aggregations.bucket.terms.GlobalOrdinalsStringTermsAggregator.getLeafCollector(GlobalOrdinalsStringTermsAggregator.java:97)\n    at org.elasticsearch.search.aggregations.AggregatorBase.getLeafCollector(AggregatorBase.java:132)\n    at org.elasticsearch.search.aggregations.AggregatorFactory$1$1.collect(AggregatorFactory.java:204)\n    at org.elasticsearch.search.aggregations.LeafBucketCollector$3.collect(LeafBucketCollector.java:73)\n    at org.elasticsearch.search.aggregations.bucket.BucketsAggregator.collectExistingBucket(BucketsAggregator.java:80)\n    at org.elasticsearch.search.aggregations.bucket.BucketsAggregator.collectBucket(BucketsAggregator.java:72)\n    at org.elasticsearch.search.aggregations.bucket.filter.FilterAggregator$1.collect(FilterAggregator.java:67)\n    at org.elasticsearch.search.aggregations.bucket.BucketsAggregator.collectExistingBucket(BucketsAggregator.java:80)\n    at org.elasticsearch.search.aggregations.bucket.BucketsAggregator.collectBucket(BucketsAggregator.java:72)\n    at org.elasticsearch.search.aggregations.bucket.nested.NestedAggregator$1.collect(NestedAggregator.java:118)\n    at org.elasticsearch.search.aggregations.LeafBucketCollector.collect(LeafBucketCollector.java:88)\n    at org.apache.lucene.search.MultiCollector$MultiLeafCollector.collect(MultiCollector.java:174)\n    at org.apache.lucene.search.AssertingLeafCollector.collect(AssertingLeafCollector.java:52)\n    at org.apache.lucene.search.AssertingLeafCollector.collect(AssertingLeafCollector.java:52)\n    at org.apache.lucene.search.Weight$DefaultBulkScorer.scoreAll(Weight.java:221)\n    at org.apache.lucene.search.Weight$DefaultBulkScorer.score(Weight.java:172)\n    at org.apache.lucene.search.AssertingBulkScorer.score(AssertingBulkScorer.java:79)\n    at org.apache.lucene.search.AssertingBulkScorer.score(AssertingBulkScorer.java:63)\n    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:821)\n    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:535)\n    at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:384)\n    ... 22 more\n```\n\nThe format of the response is always the same and correct; so we can still retrieve results; however, if one or two shards fail, the numbers within the response are incorrect; some documents are missing. The easiest way to check whether it worked is to check the number of failed shards.\n\nFYI: We are using **ElasticSearch 2.3.2**\n","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}