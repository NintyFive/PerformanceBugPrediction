[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/237236298","html_url":"https://github.com/elastic/elasticsearch/issues/19778#issuecomment-237236298","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19778","id":237236298,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNzIzNjI5OA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-08-03T13:26:41Z","updated_at":"2016-08-03T13:26:41Z","author_association":"CONTRIBUTOR","body":"I think these information would be useful, yet I think we should not arbitrary headers here. I also think we shouldn't extend the query DSL for this maybe we can use http headers for this which have to be explicitly enabled to be transported further. We can have for instance a set default headers like `es-client-id` and / or `es-request-desc` those are then automatically avaliable throughout the entire lifecycle of the request on any API.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/237236917","html_url":"https://github.com/elastic/elasticsearch/issues/19778#issuecomment-237236917","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19778","id":237236917,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNzIzNjkxNw==","user":{"login":"PhaedrusTheGreek","id":4387023,"node_id":"MDQ6VXNlcjQzODcwMjM=","avatar_url":"https://avatars0.githubusercontent.com/u/4387023?v=4","gravatar_id":"","url":"https://api.github.com/users/PhaedrusTheGreek","html_url":"https://github.com/PhaedrusTheGreek","followers_url":"https://api.github.com/users/PhaedrusTheGreek/followers","following_url":"https://api.github.com/users/PhaedrusTheGreek/following{/other_user}","gists_url":"https://api.github.com/users/PhaedrusTheGreek/gists{/gist_id}","starred_url":"https://api.github.com/users/PhaedrusTheGreek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PhaedrusTheGreek/subscriptions","organizations_url":"https://api.github.com/users/PhaedrusTheGreek/orgs","repos_url":"https://api.github.com/users/PhaedrusTheGreek/repos","events_url":"https://api.github.com/users/PhaedrusTheGreek/events{/privacy}","received_events_url":"https://api.github.com/users/PhaedrusTheGreek/received_events","type":"User","site_admin":false},"created_at":"2016-08-03T13:29:10Z","updated_at":"2016-08-03T13:29:10Z","author_association":"CONTRIBUTOR","body":"+1 for http headers @s1monw .   I also wonder how we could tie a Shield audit log entry to a slowlog entry, to track source and user, etc. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/302256228","html_url":"https://github.com/elastic/elasticsearch/issues/19778#issuecomment-302256228","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19778","id":302256228,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjI1NjIyOA==","user":{"login":"geekpete","id":2070843,"node_id":"MDQ6VXNlcjIwNzA4NDM=","avatar_url":"https://avatars2.githubusercontent.com/u/2070843?v=4","gravatar_id":"","url":"https://api.github.com/users/geekpete","html_url":"https://github.com/geekpete","followers_url":"https://api.github.com/users/geekpete/followers","following_url":"https://api.github.com/users/geekpete/following{/other_user}","gists_url":"https://api.github.com/users/geekpete/gists{/gist_id}","starred_url":"https://api.github.com/users/geekpete/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geekpete/subscriptions","organizations_url":"https://api.github.com/users/geekpete/orgs","repos_url":"https://api.github.com/users/geekpete/repos","events_url":"https://api.github.com/users/geekpete/events{/privacy}","received_events_url":"https://api.github.com/users/geekpete/received_events","type":"User","site_admin":false},"created_at":"2017-05-17T23:09:21Z","updated_at":"2017-05-17T23:09:21Z","author_association":"MEMBER","body":"I thought something similar to this idea would be super useful as well.\r\n\r\nMy example use case is where a user has 1000 visualisations in Kibana and one or more is causing the cluster issues with the queries it produces. So the ability to tag a query so that the tag remains you do a heap dump and pull the problem query out of memory would be invaluable in troubleshooting and pinpointing the original source of a query. Starting with Kibana visualisation identification but also presenting this as a functionality that end users can utilise to tag their own queries.\r\n\r\nI just need a single metadata field as a label/tag that is essentially ignored by everything (except maybe some metrics collection).\r\n\r\nIt also might be important to consider any caching mechanisms here, is it best for caching to ensure it always ignores the metadata \"tag\" in queries in the scenario of the same query hitting the cluster but with many different tags. Or would tag-aware caching provide benefits as well? Blended/optional/configurable caching approaches?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/344772298","html_url":"https://github.com/elastic/elasticsearch/issues/19778#issuecomment-344772298","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19778","id":344772298,"node_id":"MDEyOklzc3VlQ29tbWVudDM0NDc3MjI5OA==","user":{"login":"siddharthlatest","id":630042,"node_id":"MDQ6VXNlcjYzMDA0Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/630042?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthlatest","html_url":"https://github.com/siddharthlatest","followers_url":"https://api.github.com/users/siddharthlatest/followers","following_url":"https://api.github.com/users/siddharthlatest/following{/other_user}","gists_url":"https://api.github.com/users/siddharthlatest/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthlatest/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthlatest/subscriptions","organizations_url":"https://api.github.com/users/siddharthlatest/orgs","repos_url":"https://api.github.com/users/siddharthlatest/repos","events_url":"https://api.github.com/users/siddharthlatest/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthlatest/received_events","type":"User","site_admin":false},"created_at":"2017-11-16T00:12:44Z","updated_at":"2017-11-16T00:14:57Z","author_association":"NONE","body":"Has this been implemented? A use-case I am looking at requires the response from the *latest* request to be rendered in the UI. Since server processing times may vary, and in my case, the latter timed request is usually a more pruned aggregation often resulting in quicker processing than the former request's more broader aggregation. In this scenario, being able to add timestamp as a meta-data would be a nifty way to resolve which response's hits should be rendered.\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/344778394","html_url":"https://github.com/elastic/elasticsearch/issues/19778#issuecomment-344778394","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19778","id":344778394,"node_id":"MDEyOklzc3VlQ29tbWVudDM0NDc3ODM5NA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2017-11-16T00:46:57Z","updated_at":"2017-11-16T00:46:57Z","author_association":"MEMBER","body":"@siddharthlatest The issue is open so no, it has not been implemented.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/372444975","html_url":"https://github.com/elastic/elasticsearch/issues/19778#issuecomment-372444975","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19778","id":372444975,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MjQ0NDk3NQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2018-03-12T20:05:56Z","updated_at":"2018-03-12T20:05:56Z","author_association":"CONTRIBUTOR","body":"@imotov, now that we have `x-opaque-id` I wonder if we can close this? Should we wire it into the slow logs first? Into the audit log too?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/372674631","html_url":"https://github.com/elastic/elasticsearch/issues/19778#issuecomment-372674631","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19778","id":372674631,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MjY3NDYzMQ==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2018-03-13T13:59:45Z","updated_at":"2018-03-13T13:59:45Z","author_association":"MEMBER","body":"@nik9000 yes, I think we can probably address this by adding the id to logs. We can either repurpose this issue or close it and open a new one. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/399298464","html_url":"https://github.com/elastic/elasticsearch/issues/19778#issuecomment-399298464","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19778","id":399298464,"node_id":"MDEyOklzc3VlQ29tbWVudDM5OTI5ODQ2NA==","user":{"login":"tomcallahan","id":15988488,"node_id":"MDQ6VXNlcjE1OTg4NDg4","avatar_url":"https://avatars1.githubusercontent.com/u/15988488?v=4","gravatar_id":"","url":"https://api.github.com/users/tomcallahan","html_url":"https://github.com/tomcallahan","followers_url":"https://api.github.com/users/tomcallahan/followers","following_url":"https://api.github.com/users/tomcallahan/following{/other_user}","gists_url":"https://api.github.com/users/tomcallahan/gists{/gist_id}","starred_url":"https://api.github.com/users/tomcallahan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomcallahan/subscriptions","organizations_url":"https://api.github.com/users/tomcallahan/orgs","repos_url":"https://api.github.com/users/tomcallahan/repos","events_url":"https://api.github.com/users/tomcallahan/events{/privacy}","received_events_url":"https://api.github.com/users/tomcallahan/received_events","type":"User","site_admin":false},"created_at":"2018-06-22T02:07:27Z","updated_at":"2018-06-22T02:07:27Z","author_association":"CONTRIBUTOR","body":"Closed in favor of #31521 ","performed_via_github_app":null}]