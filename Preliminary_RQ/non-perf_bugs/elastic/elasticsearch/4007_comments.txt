[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/27358802","html_url":"https://github.com/elastic/elasticsearch/issues/4007#issuecomment-27358802","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4007","id":27358802,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzU4ODAy","user":{"login":"grantr","id":680,"node_id":"MDQ6VXNlcjY4MA==","avatar_url":"https://avatars3.githubusercontent.com/u/680?v=4","gravatar_id":"","url":"https://api.github.com/users/grantr","html_url":"https://github.com/grantr","followers_url":"https://api.github.com/users/grantr/followers","following_url":"https://api.github.com/users/grantr/following{/other_user}","gists_url":"https://api.github.com/users/grantr/gists{/gist_id}","starred_url":"https://api.github.com/users/grantr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/grantr/subscriptions","organizations_url":"https://api.github.com/users/grantr/orgs","repos_url":"https://api.github.com/users/grantr/repos","events_url":"https://api.github.com/users/grantr/events{/privacy}","received_events_url":"https://api.github.com/users/grantr/received_events","type":"User","site_admin":false},"created_at":"2013-10-30T01:32:25Z","updated_at":"2013-10-30T01:32:25Z","author_association":"NONE","body":"Consistent naming for `/_cluster/state` and `/index/_status`. I never remember which is state and which is status.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/27358943","html_url":"https://github.com/elastic/elasticsearch/issues/4007#issuecomment-27358943","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4007","id":27358943,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzU4OTQz","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2013-10-30T01:36:38Z","updated_at":"2013-10-30T01:36:38Z","author_association":"MEMBER","body":"Index Status API: remove the API, almost all can be gathered with index stats, all we need is to add dedicated recovery stats.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/27468118","html_url":"https://github.com/elastic/elasticsearch/issues/4007#issuecomment-27468118","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4007","id":27468118,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDY4MTE4","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2013-10-31T08:02:58Z","updated_at":"2013-10-31T08:02:58Z","author_association":"CONTRIBUTOR","body":"Remove `custom_score`, `custom_filters_score` and `custom_boost`, is replaced by `function_score` now. But I am not sure about that because it was deprecated only recently.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/27470773","html_url":"https://github.com/elastic/elasticsearch/issues/4007#issuecomment-27470773","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4007","id":27470773,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDcwNzcz","user":{"login":"uboness","id":211019,"node_id":"MDQ6VXNlcjIxMTAxOQ==","avatar_url":"https://avatars3.githubusercontent.com/u/211019?v=4","gravatar_id":"","url":"https://api.github.com/users/uboness","html_url":"https://github.com/uboness","followers_url":"https://api.github.com/users/uboness/followers","following_url":"https://api.github.com/users/uboness/following{/other_user}","gists_url":"https://api.github.com/users/uboness/gists{/gist_id}","starred_url":"https://api.github.com/users/uboness/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uboness/subscriptions","organizations_url":"https://api.github.com/users/uboness/orgs","repos_url":"https://api.github.com/users/uboness/repos","events_url":"https://api.github.com/users/uboness/events{/privacy}","received_events_url":"https://api.github.com/users/uboness/received_events","type":"User","site_admin":false},"created_at":"2013-10-31T09:02:34Z","updated_at":"2013-10-31T09:02:34Z","author_association":"CONTRIBUTOR","body":"can we maybe also get rid of the `clear` query param for the stats api?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/27525648","html_url":"https://github.com/elastic/elasticsearch/issues/4007#issuecomment-27525648","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4007","id":27525648,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NTI1NjQ4","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2013-10-31T20:37:17Z","updated_at":"2013-10-31T20:37:17Z","author_association":"MEMBER","body":"Put Mapping API forces you to specify a `type` in the url but also in the body of the request (as root key):\n\n```\ncurl -XPUT \"http://localhost:10000/index/type/_mapping\" -d'\n{\n    \"type\": {\n        ...\n    }\n}'\n```\n\nRemove the specification of `type` in the body and rely on url only? (potentially allow calling `_mapping` on an index with multiple types in the body)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/27526844","html_url":"https://github.com/elastic/elasticsearch/issues/4007#issuecomment-27526844","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4007","id":27526844,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NTI2ODQ0","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2013-10-31T20:44:24Z","updated_at":"2013-10-31T20:44:24Z","author_association":"CONTRIBUTOR","body":"The byte and short types are indexed and stored as integers. We used to have different field data impls that would use less memory for these types but the current field data impl computes the number of required bits per value dynamically. Maybe we could remove these types or find a way to make them only aliases of the integer type.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/27536377","html_url":"https://github.com/elastic/elasticsearch/issues/4007#issuecomment-27536377","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4007","id":27536377,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NTM2Mzc3","user":{"login":"uboness","id":211019,"node_id":"MDQ6VXNlcjIxMTAxOQ==","avatar_url":"https://avatars3.githubusercontent.com/u/211019?v=4","gravatar_id":"","url":"https://api.github.com/users/uboness","html_url":"https://github.com/uboness","followers_url":"https://api.github.com/users/uboness/followers","following_url":"https://api.github.com/users/uboness/following{/other_user}","gists_url":"https://api.github.com/users/uboness/gists{/gist_id}","starred_url":"https://api.github.com/users/uboness/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uboness/subscriptions","organizations_url":"https://api.github.com/users/uboness/orgs","repos_url":"https://api.github.com/users/uboness/repos","events_url":"https://api.github.com/users/uboness/events{/privacy}","received_events_url":"https://api.github.com/users/uboness/received_events","type":"User","site_admin":false},"created_at":"2013-10-31T23:01:18Z","updated_at":"2013-10-31T23:01:18Z","author_association":"CONTRIBUTOR","body":"implement a dedicated fielddata for boolean type and get rid of the `T` & `F` values in favor of native `true` & `false` returned by facets/aggs or any other field data related api\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/27710720","html_url":"https://github.com/elastic/elasticsearch/issues/4007#issuecomment-27710720","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4007","id":27710720,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzEwNzIw","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2013-11-04T18:41:26Z","updated_at":"2013-11-04T18:41:43Z","author_association":"MEMBER","body":"Prevent people from deleting all indices without specifying any index.\nThe following should either do nothing or return an error:\n\n```\ncurl -XDELETE locahost:9200\n```\n\nWhile the following actually deletes all indices:\n\n```\ncurl -XDELETE localhost:9200/_all\n```\n\nPretty much the same as we already did in open/close index api a while ago when the support for multiple indices was introduced.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28800063","html_url":"https://github.com/elastic/elasticsearch/issues/4007#issuecomment-28800063","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4007","id":28800063,"node_id":"MDEyOklzc3VlQ29tbWVudDI4ODAwMDYz","user":{"login":"nz","id":430,"node_id":"MDQ6VXNlcjQzMA==","avatar_url":"https://avatars1.githubusercontent.com/u/430?v=4","gravatar_id":"","url":"https://api.github.com/users/nz","html_url":"https://github.com/nz","followers_url":"https://api.github.com/users/nz/followers","following_url":"https://api.github.com/users/nz/following{/other_user}","gists_url":"https://api.github.com/users/nz/gists{/gist_id}","starred_url":"https://api.github.com/users/nz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nz/subscriptions","organizations_url":"https://api.github.com/users/nz/orgs","repos_url":"https://api.github.com/users/nz/repos","events_url":"https://api.github.com/users/nz/events{/privacy}","received_events_url":"https://api.github.com/users/nz/received_events","type":"User","site_admin":false},"created_at":"2013-11-19T15:40:16Z","updated_at":"2013-11-19T15:40:16Z","author_association":"NONE","body":"Disambiguation of various settings keys. For example, index creation:\n- `{\"settings\":{\"index\":{\"number_of_shards\":2}}}`\n- `{\"settings\":{\"index.number_of_shards\":2}}}`\n- `{\"settings\":{\"number_of_shards\":2}}}`\n\nAll of these are valid. While flexibility is a noble goal, it can also be unnecessarily ambiguous.\n\nFor this specific case, the docs mention in an aside:\n\n> Note you do not have to explicitly specify index section inside settings section.\n\nIn general, if something isn't required, and don't have a strong reason to exist, then it should just be eliminated.\n\nAnother suggestion along these lines, `number_of_shards` and `number_of_replicas` seems unnecessarily verbose. There may be some internal reason for those key names, but as a user I'd rather use, simply, `shards` and `replicas`.\n\n```\ncurl localhost:9200/staging -d '{\"settings\":{\"shards\":2,\"replicas\":1}}'\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/29337023","html_url":"https://github.com/elastic/elasticsearch/issues/4007#issuecomment-29337023","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4007","id":29337023,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzM3MDIz","user":{"login":"andrewvc","id":131427,"node_id":"MDQ6VXNlcjEzMTQyNw==","avatar_url":"https://avatars2.githubusercontent.com/u/131427?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewvc","html_url":"https://github.com/andrewvc","followers_url":"https://api.github.com/users/andrewvc/followers","following_url":"https://api.github.com/users/andrewvc/following{/other_user}","gists_url":"https://api.github.com/users/andrewvc/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewvc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewvc/subscriptions","organizations_url":"https://api.github.com/users/andrewvc/orgs","repos_url":"https://api.github.com/users/andrewvc/repos","events_url":"https://api.github.com/users/andrewvc/events{/privacy}","received_events_url":"https://api.github.com/users/andrewvc/received_events","type":"User","site_admin":false},"created_at":"2013-11-26T21:44:31Z","updated_at":"2013-11-26T21:44:31Z","author_association":"CONTRIBUTOR","body":"Remove `fuzzy` query. The match query is a superset of its functionality as near I can tell. The `fuzzy` behavior, which does not run an analyzer by default, is confusing.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/29507841","html_url":"https://github.com/elastic/elasticsearch/issues/4007#issuecomment-29507841","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4007","id":29507841,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTA3ODQx","user":{"login":"Mpdreamz","id":245275,"node_id":"MDQ6VXNlcjI0NTI3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/245275?v=4","gravatar_id":"","url":"https://api.github.com/users/Mpdreamz","html_url":"https://github.com/Mpdreamz","followers_url":"https://api.github.com/users/Mpdreamz/followers","following_url":"https://api.github.com/users/Mpdreamz/following{/other_user}","gists_url":"https://api.github.com/users/Mpdreamz/gists{/gist_id}","starred_url":"https://api.github.com/users/Mpdreamz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mpdreamz/subscriptions","organizations_url":"https://api.github.com/users/Mpdreamz/orgs","repos_url":"https://api.github.com/users/Mpdreamz/repos","events_url":"https://api.github.com/users/Mpdreamz/events{/privacy}","received_events_url":"https://api.github.com/users/Mpdreamz/received_events","type":"User","site_admin":false},"created_at":"2013-11-29T10:29:58Z","updated_at":"2013-11-29T10:29:58Z","author_association":"MEMBER","body":"Referencing a document in query/filters does not quite follow the same syntax everywhere:\n\ni.e the terms filter lookup:\n\n```\n    \"id\": \"NEST\",\n    \"type\": \"elasticsearchprojects\",\n    \"index\": \"mydefaultindex\",\n    \"path\": \"name\"\n```\n\nvs the geo shape indexed filter:\n\n```\n    \"id\": \"NEST\",\n    \"type\": \"elasticsearchprojects\",\n    \"index\": \"mydefaultindex\",\n    \"shape_field_name\": \"name\"\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/29628182","html_url":"https://github.com/elastic/elasticsearch/issues/4007#issuecomment-29628182","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4007","id":29628182,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NjI4MTgy","user":{"login":"nz","id":430,"node_id":"MDQ6VXNlcjQzMA==","avatar_url":"https://avatars1.githubusercontent.com/u/430?v=4","gravatar_id":"","url":"https://api.github.com/users/nz","html_url":"https://github.com/nz","followers_url":"https://api.github.com/users/nz/followers","following_url":"https://api.github.com/users/nz/following{/other_user}","gists_url":"https://api.github.com/users/nz/gists{/gist_id}","starred_url":"https://api.github.com/users/nz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nz/subscriptions","organizations_url":"https://api.github.com/users/nz/orgs","repos_url":"https://api.github.com/users/nz/repos","events_url":"https://api.github.com/users/nz/events{/privacy}","received_events_url":"https://api.github.com/users/nz/received_events","type":"User","site_admin":false},"created_at":"2013-12-02T15:46:46Z","updated_at":"2013-12-02T15:46:46Z","author_association":"NONE","body":"Lazy index creation should be opt-in.\n\nCreating a simple index with default settings and dynamic mappings is trivial enough that it shouldn't hinder the early experience for new developers. On the other hand, lazy index creation can cause notable problems and confusion when later deploying to production.\n\nA recent thread on the Elasticsearch mailing list: [A cautionary tale about index autocreation](https://groups.google.com/forum/#!topic/elasticsearch/L07E8A1_S-0)\n\nAt [bonsai.io](https://bonsai.io/), lazy index creation behavior is probably our largest source of support questions.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/29816002","html_url":"https://github.com/elastic/elasticsearch/issues/4007#issuecomment-29816002","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4007","id":29816002,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODE2MDAy","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2013-12-04T15:45:42Z","updated_at":"2013-12-04T15:45:42Z","author_association":"CONTRIBUTOR","body":"Just wanted to make sure that all these changes will be accessible in 0.90.X before upgrading to 1.0.  It'd be much more exciting if I had to time a release of my software with an upgrade of Elasticsearch.\n\nRemoving stuff is easy.  I'll stop using it before the release.  Just make sure there is a deprecation warning on all the 0.90.X documents.\nRenaming parameters isn't too bad because I'll convince puppet to add both names to the file for the time period around the upgrade.\nBreaking changes to APIs that aren't backported to 0.90.X would be dangerous.  I suppose some of the APIs you can expect not to be part of applications but have some code hitting them.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/30768360","html_url":"https://github.com/elastic/elasticsearch/issues/4007#issuecomment-30768360","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4007","id":30768360,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzY4MzYw","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2013-12-17T16:54:21Z","updated_at":"2013-12-17T16:54:21Z","author_association":"CONTRIBUTOR","body":"I've opened up separate issues for all of the above, except for:\n- `minimum_master_eligible_nodes` - this parameter needs explanation whether we use the short or long form, and the longer form is more susceptible to typos.\n- disambiguation of `settings` keys: I agree that it is confusing. Internally it is stored with the `index` prefix and the `index.foo: ..` vs `index: { foo: ..}` style pervades all settings.  Changing these forms would break things for a lot of people. Setting just `number_of_shards` should be considered the shortcut.  I think the answer here is just to improve the documentation.\n- `number_of_shards/replicas`to just `shards/replicas` - I kinda like that, but then I don't like just updating the settings to `replicas: 0`.  It somehow feels safer spelling out the option.  Open to other comments here.\n- Remove `fuzzy` query - The `fuzzy` query is a low-level term query, just like the `term` and `prefix` queries. It can be useful for advanced users, so I don't think it should be removed.  However, I would like to see it simplified so that it is used only for `string` fields. (see #4076)\n- Lazy index creation should be opt-in: As discussed in that thread, the \"correct\" default depends on what you are doing with Elasticsearch.  I'd prefer to stick with the convenience-over-configuration principle\n","performed_via_github_app":null}]