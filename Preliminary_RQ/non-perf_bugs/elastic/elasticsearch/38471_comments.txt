[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/460832277","html_url":"https://github.com/elastic/elasticsearch/issues/38471#issuecomment-460832277","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38471","id":460832277,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgzMjI3Nw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-02-05T22:38:15Z","updated_at":"2019-02-05T22:38:15Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-analytics-geo","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/460832282","html_url":"https://github.com/elastic/elasticsearch/issues/38471#issuecomment-460832282","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38471","id":460832282,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgzMjI4Mg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-02-05T22:38:15Z","updated_at":"2019-02-05T22:38:15Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/460838942","html_url":"https://github.com/elastic/elasticsearch/issues/38471#issuecomment-460838942","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38471","id":460838942,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgzODk0Mg==","user":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"created_at":"2019-02-05T23:01:58Z","updated_at":"2019-02-05T23:03:06Z","author_association":"MEMBER","body":"so, the default printer is using `.appendZoneOrOffsetId()` - we should probably use something like `.appendOffset(\"+HH:MM\", \"Z\")` here to be sure we do not use the zone id\r\n\r\nsee with\r\n\r\n```\r\nZoneId id = ZoneId.of(\"America/Edmonton\");\r\nnew DateTimeFormatterBuilder().appendOffset(\"+HH:MM\", \"Z\").toFormatter(Locale.ROOT).format(Instant.now().atZone(id));\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/468699597","html_url":"https://github.com/elastic/elasticsearch/issues/38471#issuecomment-468699597","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38471","id":468699597,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2ODY5OTU5Nw==","user":{"login":"pgomulka","id":11137008,"node_id":"MDQ6VXNlcjExMTM3MDA4","avatar_url":"https://avatars0.githubusercontent.com/u/11137008?v=4","gravatar_id":"","url":"https://api.github.com/users/pgomulka","html_url":"https://github.com/pgomulka","followers_url":"https://api.github.com/users/pgomulka/followers","following_url":"https://api.github.com/users/pgomulka/following{/other_user}","gists_url":"https://api.github.com/users/pgomulka/gists{/gist_id}","starred_url":"https://api.github.com/users/pgomulka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgomulka/subscriptions","organizations_url":"https://api.github.com/users/pgomulka/orgs","repos_url":"https://api.github.com/users/pgomulka/repos","events_url":"https://api.github.com/users/pgomulka/events{/privacy}","received_events_url":"https://api.github.com/users/pgomulka/received_events","type":"User","site_admin":false},"created_at":"2019-03-01T15:18:45Z","updated_at":"2019-03-01T15:22:00Z","author_association":"CONTRIBUTOR","body":"we could solve this as @spinscale suggest, but should this apply to: \r\n- `DocValueFormat.DateTime` only? (would create a new formatter)\r\n- `DateFieldMapper.DEFAULT_DATE_TIME_FORMATTER` ? This is the one that is being set to `DocValueFormat.DateTime` in `ValueType`\r\n-  for the `strict_date_optional_time||epoch_millis` - the scope of change would be even bigger\r\n- or for all formatters?\r\n\r\nlet me create a PR and we will see how much damage will change cause","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/469713416","html_url":"https://github.com/elastic/elasticsearch/issues/38471#issuecomment-469713416","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38471","id":469713416,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTcxMzQxNg==","user":{"login":"pgomulka","id":11137008,"node_id":"MDQ6VXNlcjExMTM3MDA4","avatar_url":"https://avatars0.githubusercontent.com/u/11137008?v=4","gravatar_id":"","url":"https://api.github.com/users/pgomulka","html_url":"https://github.com/pgomulka","followers_url":"https://api.github.com/users/pgomulka/followers","following_url":"https://api.github.com/users/pgomulka/following{/other_user}","gists_url":"https://api.github.com/users/pgomulka/gists{/gist_id}","starred_url":"https://api.github.com/users/pgomulka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgomulka/subscriptions","organizations_url":"https://api.github.com/users/pgomulka/orgs","repos_url":"https://api.github.com/users/pgomulka/repos","events_url":"https://api.github.com/users/pgomulka/events{/privacy}","received_events_url":"https://api.github.com/users/pgomulka/received_events","type":"User","site_admin":false},"created_at":"2019-03-05T15:03:17Z","updated_at":"2019-03-07T14:20:36Z","author_association":"CONTRIBUTOR","body":"also wondering if the same should apply to parsing `formatters` . Do we expect to parse dates with zoneId instead of offset at all?\r\nAt the moment when parsing `2017-02-01T08:02:00.000-01:00`, because it has `.appendZoneOrOffsetId()`  the returned Temporal will have `zone` but it won't have `offset`. \r\n\r\n`TemporalQueries.offset().queryFrom(            \r\nDateFormatters.STRICT_DATE_OPTIONAL_TIME_FORMATTER.parse(\"2017-02-01T08:02:00.000-01:00\"))` -> null\r\n\r\n`TemporalQueries.zone().queryFrom(\r\n    DateFormatters.STRICT_DATE_OPTIONAL_TIME_FORMATTER.parse(\"2017-02-01T08:02:00.000-01:00\"))` -> \"-01:00\"\r\n\r\nEDIT: we clarified that `offset` method here means offset in seconds","performed_via_github_app":null}]