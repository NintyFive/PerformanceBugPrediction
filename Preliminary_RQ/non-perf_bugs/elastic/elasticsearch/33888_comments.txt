[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/423144899","html_url":"https://github.com/elastic/elasticsearch/issues/33888#issuecomment-423144899","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33888","id":423144899,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMzE0NDg5OQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-09-20T11:13:31Z","updated_at":"2018-09-20T11:13:31Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/484270329","html_url":"https://github.com/elastic/elasticsearch/issues/33888#issuecomment-484270329","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33888","id":484270329,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NDI3MDMyOQ==","user":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"created_at":"2019-04-17T21:35:04Z","updated_at":"2019-04-17T21:35:04Z","author_association":"MEMBER","body":"> Investigate the behavior of retention leases sync task with replicated closed indices\r\n\r\nWe don't have to run AsyncRetentionLeaseSyncTask for closed indices:\r\n- We won't trim anything if an index is closed regardless of the state of its retention leases.\r\n- If a retention lease gets expired when an index is closed, that lease should also be expired when an index is reopened and synced across all copies in peer recovery; thus all shard copies should expunge that expired lease.\r\n- A leader index requires to be open. Thus, follower indices won't renew (i.e., advance) its leases on the leader if the leader index is closed. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/489891795","html_url":"https://github.com/elastic/elasticsearch/issues/33888#issuecomment-489891795","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33888","id":489891795,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4OTg5MTc5NQ==","user":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"created_at":"2019-05-07T03:17:49Z","updated_at":"2019-05-07T03:40:05Z","author_association":"MEMBER","body":"> GlobalCheckpointSyncAction triggers some warnings in logs after a replica to primary promotion. \r\n\r\nGlobalCheckpointSyncAction that generates warning logs is triggered by primary-replica resync on a new primary promotion. The primary-replica resync action does not perform the reroute phase; hence bypasses both the closed-block and closed-state checks. It's safe to run/skip primary-replica resync action for a closed index as it's a noop (ReadOnlyEngine returns empty translog snapshots).\r\n\r\n> Should we just prevent maybeSyncGlobalCheckpoint() to be executed if the shard is closed?\r\n\r\nI opened #41874. Another option is to make GlobalCheckpointSyncAction skip Reroute Phase. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/495343621","html_url":"https://github.com/elastic/elasticsearch/issues/33888#issuecomment-495343621","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33888","id":495343621,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTM0MzYyMQ==","user":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"created_at":"2019-05-23T18:59:31Z","updated_at":"2019-05-23T19:00:08Z","author_association":"MEMBER","body":"I am closing this meta-issue given all items are completed or spun off (https://github.com/elastic/elasticsearch/issues/42442 and https://github.com/elastic/elasticsearch/issues/42445) . All kudos to @tlrx for his great job ðŸŽ‰.","performed_via_github_app":null}]