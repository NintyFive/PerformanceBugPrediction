{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/44151","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44151/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44151/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44151/events","html_url":"https://github.com/elastic/elasticsearch/issues/44151","id":466152094,"node_id":"MDU6SXNzdWU0NjYxNTIwOTQ=","number":44151,"title":"SQL: Supports two columns comparing on `WHERE` clause","user":{"login":"sw-jung","id":5426400,"node_id":"MDQ6VXNlcjU0MjY0MDA=","avatar_url":"https://avatars1.githubusercontent.com/u/5426400?v=4","gravatar_id":"","url":"https://api.github.com/users/sw-jung","html_url":"https://github.com/sw-jung","followers_url":"https://api.github.com/users/sw-jung/followers","following_url":"https://api.github.com/users/sw-jung/following{/other_user}","gists_url":"https://api.github.com/users/sw-jung/gists{/gist_id}","starred_url":"https://api.github.com/users/sw-jung/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sw-jung/subscriptions","organizations_url":"https://api.github.com/users/sw-jung/orgs","repos_url":"https://api.github.com/users/sw-jung/repos","events_url":"https://api.github.com/users/sw-jung/events{/privacy}","received_events_url":"https://api.github.com/users/sw-jung/received_events","type":"User","site_admin":false},"labels":[{"id":912794284,"node_id":"MDU6TGFiZWw5MTI3OTQyODQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Query%20Languages/SQL","name":":Query Languages/SQL","color":"0e8a16","default":false,"description":"SQL querying"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-07-10T07:43:36Z","updated_at":"2019-07-10T08:42:29Z","closed_at":"2019-07-10T08:42:29Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the feature**: Supports two columns comparing on `WHERE` clause like this:\r\n```sql\r\nSELECT a, b\r\nFROM my_table\r\nWHERE a = b\r\n```\r\n\r\nFor now, when I run this query, it returns error:\r\n```sql\r\n{\r\n  \"error\": {\r\n    \"root_cause\": [\r\n      {\r\n        \"type\": \"sql_illegal_argument_exception\",\r\n        \"reason\": \"Line 1:109: Comparisons against variables are not (currently) supported; offender [b] in [==]\"\r\n      }\r\n    ],\r\n    \"type\": \"sql_illegal_argument_exception\",\r\n    \"reason\": \"Line 1:109: Comparisons against variables are not (currently) supported; offender [b] in [==]\"\r\n  },\r\n  \"status\": 500\r\n}\r\n```\r\n\r\nOf course, it's hard to work with the `text` type field but how about numeric or `keyword` type field?\r\n\r\nCurrently, numeric field can approach like below indirectly:\r\n```sql\r\nSELECT num_a, num_b\r\nFROM my_table\r\nWHERE num_a - num_b = 0\r\n```\r\n\r\nAnd it translates as:\r\n```javascript\r\n{\r\n  ...\r\n  \"query\" : {\r\n    \"script\" : {\r\n      \"script\" : {\r\n        \"source\" : \"InternalSqlScriptUtils.nullSafeFilter(InternalSqlScriptUtils.eq(InternalSqlScriptUtils.sub(InternalSqlScriptUtils.docValue(doc,params.v0),InternalSqlScriptUtils.docValue(doc,params.v1)),params.v2))\",\r\n        \"lang\" : \"painless\",\r\n        \"params\" : {\r\n          \"v0\" : \"num_a\",\r\n          \"v1\" : \"num_b\",\r\n          \"v2\" : 0\r\n        }\r\n      },\r\n      \"boost\" : 1.0\r\n    }\r\n  },\r\n  ...\r\n}\r\n```\r\n\r\nHowever, there is no way to compare two `keyword` type field. I think it can be resolve with simple script query:\r\n```javascript\r\n{\r\n  \"query\": {\r\n    \"bool\" : {\r\n      \"filter\" : {\r\n        \"script\" : {\r\n          \"script\" : {\r\n            \"source\": \"doc['a'].value == doc['b'].value\",\r\n            \"lang\": \"painless\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nOf course, there may be performance concerns due to the script query, but it will be useful in many cases even considering this.","closed_by":{"login":"astefan","id":893749,"node_id":"MDQ6VXNlcjg5Mzc0OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/893749?v=4","gravatar_id":"","url":"https://api.github.com/users/astefan","html_url":"https://github.com/astefan","followers_url":"https://api.github.com/users/astefan/followers","following_url":"https://api.github.com/users/astefan/following{/other_user}","gists_url":"https://api.github.com/users/astefan/gists{/gist_id}","starred_url":"https://api.github.com/users/astefan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/astefan/subscriptions","organizations_url":"https://api.github.com/users/astefan/orgs","repos_url":"https://api.github.com/users/astefan/repos","events_url":"https://api.github.com/users/astefan/events{/privacy}","received_events_url":"https://api.github.com/users/astefan/received_events","type":"User","site_admin":false},"performed_via_github_app":null}