{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/26438","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26438/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26438/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26438/events","html_url":"https://github.com/elastic/elasticsearch/issues/26438","id":253954736,"node_id":"MDU6SXNzdWUyNTM5NTQ3MzY=","number":26438,"title":"Java High Level REST Client: MIME type may not contain reserved characters","user":{"login":"sqshq","id":6069066,"node_id":"MDQ6VXNlcjYwNjkwNjY=","avatar_url":"https://avatars0.githubusercontent.com/u/6069066?v=4","gravatar_id":"","url":"https://api.github.com/users/sqshq","html_url":"https://github.com/sqshq","followers_url":"https://api.github.com/users/sqshq/followers","following_url":"https://api.github.com/users/sqshq/following{/other_user}","gists_url":"https://api.github.com/users/sqshq/gists{/gist_id}","starred_url":"https://api.github.com/users/sqshq/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sqshq/subscriptions","organizations_url":"https://api.github.com/users/sqshq/orgs","repos_url":"https://api.github.com/users/sqshq/repos","events_url":"https://api.github.com/users/sqshq/events{/privacy}","received_events_url":"https://api.github.com/users/sqshq/received_events","type":"User","site_admin":false},"labels":[{"id":493198109,"node_id":"MDU6TGFiZWw0OTMxOTgxMDk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Java%20High%20Level%20REST%20Client","name":":Core/Features/Java High Level REST Client","color":"0e8a16","default":false,"description":"Expressive Java Client for Elasticsearch"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":621009276,"node_id":"MDU6TGFiZWw2MjEwMDkyNzY=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v5.6.0","name":"v5.6.0","color":"dddddd","default":false,"description":null},{"id":699760326,"node_id":"MDU6TGFiZWw2OTk3NjAzMjY=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v6.0.0-rc1","name":"v6.0.0-rc1","color":"dddddd","default":false,"description":null},{"id":1223177445,"node_id":"MDU6TGFiZWwxMjIzMTc3NDQ1","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v7.0.0-beta1","name":"v7.0.0-beta1","color":"dddddd","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"assignees":[{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false}],"milestone":null,"comments":8,"created_at":"2017-08-30T10:43:02Z","updated_at":"2019-02-07T10:39:38Z","closed_at":"2017-09-06T07:59:14Z","author_association":"NONE","active_lock_reason":null,"body":"<!-- Bug report -->\r\n\r\n**Elasticsearch Java High Level REST Client version**: 5.6.0-SNAPSHOT\r\n\r\n**JVM version**: 1.8.0_112\r\n\r\n**OS version**: MacOS\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nExpected to perform http request, but got Apache http client error\r\n\r\n**Steps to reproduce**:\r\n```java\r\nSearchResponse response = client.search(\r\n                new SearchRequest().source(\r\n                        new SearchSourceBuilder()\r\n                                .query(QueryBuilders.matchPhraseQuery(\"field\", \"text\"))));\r\n```\r\nES client tries to create a MIME type with semicolon: `\"application/json; charset=UTF-8\"`\r\nBut it violates Apache http client check:\r\n\r\n``` java\r\n    /**\r\n     * Creates a new instance of {@link ContentType}.\r\n     *\r\n     * @param mimeType MIME type. It may not be {@code null} or empty. It may not contain\r\n     *        characters {@code <\">, <;>, <,>} reserved by the HTTP specification.\r\n     * @param charset charset.\r\n     * @return content type\r\n     */\r\n    public static ContentType create(final String mimeType, final Charset charset) {\r\n        final String normalizedMimeType = Args.notBlank(mimeType, \"MIME type\").toLowerCase(Locale.ROOT);\r\n        Args.check(valid(normalizedMimeType), \"MIME type may not contain reserved characters\");\r\n        return new ContentType(normalizedMimeType, charset);\r\n    }\r\n```\r\n\r\n\r\nLogs:\r\n\r\n```\r\nCaused by: java.lang.IllegalArgumentException: MIME type may not contain reserved characters\r\n\tat org.apache.http.util.Args.check(Args.java:36)\r\n\tat org.apache.http.entity.ContentType.create(ContentType.java:206)\r\n\tat org.apache.http.entity.ContentType.create(ContentType.java:218)\r\n\tat org.elasticsearch.client.Request.createEntity(Request.java:355)\r\n\tat org.elasticsearch.client.Request.search(Request.java:338)\r\n\tat org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:393)\r\n\tat org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:382)\r\n\tat org.elasticsearch.client.RestHighLevelClient.search(RestHighLevelClient.java:323)\r\n\tat com.syncplicity.searchservice.application.controllers.SearchController.search(SearchController.java:87)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)\r\n\t... 89 common frames omitted \r\n```","closed_by":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"performed_via_github_app":null}