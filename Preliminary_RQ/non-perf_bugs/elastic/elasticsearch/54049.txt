{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/54049","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54049/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54049/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54049/events","html_url":"https://github.com/elastic/elasticsearch/issues/54049","id":586679755,"node_id":"MDU6SXNzdWU1ODY2Nzk3NTU=","number":54049,"title":"When using Jackson to serialize SearchHit, the highlighted content was missing.","user":{"login":"FandyChen","id":15159247,"node_id":"MDQ6VXNlcjE1MTU5MjQ3","avatar_url":"https://avatars0.githubusercontent.com/u/15159247?v=4","gravatar_id":"","url":"https://api.github.com/users/FandyChen","html_url":"https://github.com/FandyChen","followers_url":"https://api.github.com/users/FandyChen/followers","following_url":"https://api.github.com/users/FandyChen/following{/other_user}","gists_url":"https://api.github.com/users/FandyChen/gists{/gist_id}","starred_url":"https://api.github.com/users/FandyChen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FandyChen/subscriptions","organizations_url":"https://api.github.com/users/FandyChen/orgs","repos_url":"https://api.github.com/users/FandyChen/repos","events_url":"https://api.github.com/users/FandyChen/events{/privacy}","received_events_url":"https://api.github.com/users/FandyChen/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":1967498216,"node_id":"MDU6TGFiZWwxOTY3NDk4MjE2","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Search","name":"Team:Search","color":"fef2c0","default":false,"description":"Meta label for search team"}],"state":"closed","locked":false,"assignee":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"assignees":[{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2020-03-24T04:17:02Z","updated_at":"2020-05-06T10:01:01Z","closed_at":"2020-05-06T10:01:01Z","author_association":"NONE","active_lock_reason":null,"body":"Using Spring-boot, Jackson, and Elasticsearch to build the service, the Elasticsearch API returns correct results, but the highlighted results are lost when the results are returned to the user. \r\n\r\nController\r\n```java\r\n    @PostMapping(\"content\")\r\n    public ResponseEntity<Page> searchLogContent(@RequestBody PrinterLogContentRequest logContentRequest) {\r\n        Page<SearchHit> page =  fileContentService.searchFileContent(logContentRequest);\r\n        return ResponseEntity.ok().body(page);\r\n    }\r\n```\r\n\r\nService\r\n```java\r\n    private List<SearchHit> searchFileContent(SearchSourceBuilder builder, String... indices) {\r\n        SearchRequest searchRequest = new SearchRequest(indices);\r\n        searchRequest.source(builder);\r\n        try {\r\n            SearchResponse response = restHighLevelClient.search(searchRequest, RequestOptions.DEFAULT);\r\n            return Arrays.asList(response.getHits().getHits());\r\n        } catch (IOException e) {\r\n            logger.error(\"error search file content\", e);\r\n        }\r\n        return Collections.emptyList();\r\n    }\r\n\r\n    public Page<SearchHit> searchFileContentByPage(PrinterLogContentRequest request) {\r\n        SearchSourceBuilder builder = getSearchSourceBuilder(request);\r\n        PageRequest pageRequest = PageRequest.of(request.getPage(), request.getSize());\r\n        long count = countFileContent(builder, INDEX_PATTERN);\r\n        builder.collapse(\r\n                new CollapseBuilder(COLL_KEYWORD)\r\n        );\r\n        if (StringUtils.isEmpty(request.getSortColumn()) || StringUtils.isEmpty(request.getSortOrder())) {\r\n            builder.sort(\r\n                    String.format(\"%s.%s\", request.getSortColumn(), KEY_WORD), SortOrder.fromString(request.getSortOrder())\r\n            );\r\n        }\r\n        builder.highlighter(\r\n                new HighlightBuilder().field(MESSAGE).forceSource(true)\r\n                        .preTags(\"<Strong class='highlighter'>\")\r\n                        .postTags(\"</Strong>\")\r\n        ).from((int) pageRequest.getOffset()).size(request.getSize());\r\n        List<SearchHit> contents = searchFileContent(builder, INDEX_PATTERN);\r\n        return new PageImpl<>(contents, pageRequest, count);\r\n    }\r\n```\r\n\r\nResult\r\n```json\r\n{\r\n                 ...\r\n                \"highlightFields\": {\r\n                \"message\": {\r\n                    \"name\": \"message\",\r\n                    \"fragments\": [\r\n                        {\r\n                            \"fragment\": true\r\n                        },\r\n                        {\r\n                            \"fragment\": true\r\n                        },\r\n                        {\r\n                            \"fragment\": true\r\n                        },\r\n                        {\r\n                            \"fragment\": true\r\n                        },\r\n                        {\r\n                            \"fragment\": true\r\n                        }\r\n                    ],\r\n                    \"fragment\": true\r\n                }\r\n            },\r\n            ...\r\n}\r\n```\r\n\r\nFor this case, I customized JsonSerializer\r\n```java\r\n@Configuration\r\npublic class JacksonConfig {\r\n    @Bean\r\n    public ObjectMapper jsonObjectMapper() {\r\n        ArrayList<Module> modules = new ArrayList<>();\r\n\r\n        SimpleModule simpleModule = new SimpleModule();\r\n        simpleModule.setSerializers(new TextTypeSerializer());\r\n        modules.add(simpleModule);\r\n        \r\n        return Jackson2ObjectMapperBuilder.json()\r\n                .modules(modules)\r\n                .build();\r\n    }\r\n\r\n    class TextJsonSerializer extends JsonSerializer<Text>{\r\n        @Override\r\n        public void serialize(Text text, JsonGenerator jsonGenerator, SerializerProvider serializerProvider) throws IOException {\r\n            jsonGenerator.writeString(text.string());\r\n        }\r\n    }\r\n\r\n    class TextTypeSerializer extends SimpleSerializers {\r\n        @Override\r\n        public JsonSerializer<?> findSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc) {\r\n            JavaType textType = SimpleType.constructUnsafe(Text.class);\r\n            if(type.equals(textType)){\r\n                return new TextJsonSerializer();\r\n            }\r\n            return super.findSerializer(config, type, beanDesc);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nNow it works fine.\r\n```json\r\n            ...\r\n            \"highlightFields\": {\r\n                \"message\": {\r\n                    \"name\": \"message\",\r\n                    \"fragments\": [\r\n                        \"***: [2020-02-25 13:48:15.588] ,[13:48:15.588],***,<Strong class='highlighter'>IDLE</Strong>,t_1000,<Strong class='highlighter'>IDLE</Strong>,<Strong class='highlighter'>IDLE</Strong>\",\r\n                        \",<Strong class='highlighter'>IDLE</Strong>,t_1000,<Strong class='highlighter'>IDLE</Strong>,<Strong class='highlighter'>IDLE</Strong>,,-,**\\n**: [2020-02-25 13:48:17.589] ,[13\",\r\n                        \"48:17.589],**,<Strong class='highlighter'>IDLE</Strong>,t_1000,<Strong class='highlighter'>IDLE</Strong>,<Strong class='highlighter'>IDLE</Strong>,,true,-\\n**: [2020-02-25 13:48:17.589]\",\r\n                        \",[13:48:17.589],**,<Strong class='highlighter'>IDLE</Strong>,t_1000,<Strong class='highlighter'>IDLE</Strong>,<Strong class='highlighter'>IDLE</Strong>,,-,**\\n**\",\r\n                        \",<Strong class='highlighter'>IDLE</Strong>,t_1000,<Strong class='highlighter'>IDLE</Strong>,<Strong class='highlighter'>IDLE</Strong>,,-,**\"\r\n                    ],\r\n                    \"fragment\": true\r\n                }\r\n            },\r\n            ...\r\n```\r\n\r\n\r\n### So can we add <code>getter</code> methods to <code>org.elasticsearch.common.text.Text</code> in later versions or fix it in other ways?","closed_by":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"performed_via_github_app":null}