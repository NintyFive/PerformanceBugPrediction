{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/37918","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37918/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37918/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37918/events","html_url":"https://github.com/elastic/elasticsearch/issues/37918","id":403781619,"node_id":"MDU6SXNzdWU0MDM3ODE2MTk=","number":37918,"title":"Audit request.id propagate to CRUD actions","user":{"login":"albertzaharovits","id":4568420,"node_id":"MDQ6VXNlcjQ1Njg0MjA=","avatar_url":"https://avatars2.githubusercontent.com/u/4568420?v=4","gravatar_id":"","url":"https://api.github.com/users/albertzaharovits","html_url":"https://github.com/albertzaharovits","followers_url":"https://api.github.com/users/albertzaharovits/followers","following_url":"https://api.github.com/users/albertzaharovits/following{/other_user}","gists_url":"https://api.github.com/users/albertzaharovits/gists{/gist_id}","starred_url":"https://api.github.com/users/albertzaharovits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertzaharovits/subscriptions","organizations_url":"https://api.github.com/users/albertzaharovits/orgs","repos_url":"https://api.github.com/users/albertzaharovits/repos","events_url":"https://api.github.com/users/albertzaharovits/events{/privacy}","received_events_url":"https://api.github.com/users/albertzaharovits/received_events","type":"User","site_admin":false},"labels":[{"id":912837734,"node_id":"MDU6TGFiZWw5MTI4Mzc3MzQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Security/Audit","name":":Security/Audit","color":"0e8a16","default":false,"description":"X-Pack Audit logging"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-01-28T12:03:40Z","updated_at":"2019-01-28T14:04:53Z","closed_at":"2019-01-28T14:04:52Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In https://github.com/elastic/elasticsearch/pull/35536 we have added a new field for every audit event record, namely `request.id`. The goal was to use this id to correlate audit events.\r\nFor example, in:\r\n```\r\n{\"@timestamp\":\"2019-01-28T12:23:24,952\", \"node.id\":\"BhChKPecQi6-S2GwCYaTJg\", \"event.type\":\"rest\", \"event.action\":\"authentication_success\", \"user.name\":\"elastic-admin\", \"origin.type\":\"rest\", \"origin.address\":\"[::1]:62149\", \"realm\":\"default_file\", \"url.path\":\"/_xpack/security/user/jacknich\", \"request.method\":\"POST\", \"request.id\":\"DnbbcktES8ubfXgbBsdjbw\"}\r\n{\"@timestamp\":\"2019-01-28T12:23:25,030\", \"node.id\":\"BhChKPecQi6-S2GwCYaTJg\", \"event.type\":\"transport\", \"event.action\":\"access_granted\", \"user.name\":\"elastic-admin\", \"user.realm\":\"default_file\", \"user.roles\":[\"superuser\"], \"origin.type\":\"rest\", \"origin.address\":\"[::1]:62149\", \"request.id\":\"DnbbcktES8ubfXgbBsdjbw\", \"action\":\"cluster:admin/xpack/security/user/put\", \"request.name\":\"PutUserRequest\"}\r\n```\r\n\r\nThe two `authentication_success` and `access_granted` events are correlated by the same `DnbbcktES8ubfXgbBsdjbw` id.\r\n\r\nThe problem is that this link gets broken when the transport action does a CRUD operation on an index. This is because these internal CRUD operations are guarded by `executeAsyncWithOrigin` which has the purpose of overriding the authorization of the internal operation by an internal, more restricted, user. But while doing this, we also clear the `threadContext` holding the `request.id`, so even if these CRUD actions are related (by causation) to the transport action they would be having different `request.id`s.\r\n\r\nFor example:\r\n```\r\n{\"@timestamp\":\"2019-01-28T12:29:17,715\", \"node.id\":\"BhChKPecQi6-S2GwCYaTJg\", \"event.type\":\"transport\", \"event.action\":\"access_granted\", \"user.name\":\"_xpack_security\", \"user.realm\":\"__attach\", \"user.roles\":[\"superuser\"], \"origin.type\":\"local_node\", \"origin.address\":\"127.0.0.1:9300\", \"request.id\":\"UB2oDlpXQsqYA-5NEO8G4A\", \"action\":\"indices:data/write/index\", \"request.name\":\"IndexRequest\", \"indices\":[\".security\"]}\r\n{\"@timestamp\":\"2019-01-28T12:29:17,737\", \"node.id\":\"BhChKPecQi6-S2GwCYaTJg\", \"event.type\":\"transport\", \"event.action\":\"access_granted\", \"user.name\":\"_xpack_security\", \"user.realm\":\"__attach\", \"user.roles\":[\"superuser\"], \"origin.type\":\"local_node\", \"origin.address\":\"127.0.0.1:9300\", \"request.id\":\"UB2oDlpXQsqYA-5NEO8G4A\", \"action\":\"indices:data/write/bulk\", \"request.name\":\"BulkRequest\"}\r\n{\"@timestamp\":\"2019-01-28T12:29:17,759\", \"node.id\":\"BhChKPecQi6-S2GwCYaTJg\", \"event.type\":\"transport\", \"event.action\":\"access_granted\", \"user.name\":\"_xpack_security\", \"user.realm\":\"__attach\", \"user.roles\":[\"superuser\"], \"origin.type\":\"local_node\", \"origin.address\":\"127.0.0.1:9300\", \"request.id\":\"UB2oDlpXQsqYA-5NEO8G4A\", \"action\":\"indices:data/write/bulk[s]\", \"request.name\":\"BulkShardRequest\", \"indices\":[\".security\"]}\r\n{\"@timestamp\":\"2019-01-28T12:29:17,768\", \"node.id\":\"BhChKPecQi6-S2GwCYaTJg\", \"event.type\":\"transport\", \"event.action\":\"access_granted\", \"user.name\":\"_xpack_security\", \"user.realm\":\"__attach\", \"user.roles\":[\"superuser\"], \"origin.type\":\"local_node\", \"origin.address\":\"127.0.0.1:9300\", \"request.id\":\"UB2oDlpXQsqYA-5NEO8G4A\", \"action\":\"indices:data/write/bulk[s][p]\", \"request.name\":\"BulkShardRequest\", \"indices\":[\".security\"]}\r\n```\r\nThese are all related to the first two events in the previous block, but have a different `request.id` that has been generated anew, after switching context.\r\n\r\n**I suggest we keep the `request.id` as well as the `opaque_id` across the `executeAsyncWithOrigin` context switch.**\r\n\r\n","closed_by":{"login":"albertzaharovits","id":4568420,"node_id":"MDQ6VXNlcjQ1Njg0MjA=","avatar_url":"https://avatars2.githubusercontent.com/u/4568420?v=4","gravatar_id":"","url":"https://api.github.com/users/albertzaharovits","html_url":"https://github.com/albertzaharovits","followers_url":"https://api.github.com/users/albertzaharovits/followers","following_url":"https://api.github.com/users/albertzaharovits/following{/other_user}","gists_url":"https://api.github.com/users/albertzaharovits/gists{/gist_id}","starred_url":"https://api.github.com/users/albertzaharovits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertzaharovits/subscriptions","organizations_url":"https://api.github.com/users/albertzaharovits/orgs","repos_url":"https://api.github.com/users/albertzaharovits/repos","events_url":"https://api.github.com/users/albertzaharovits/events{/privacy}","received_events_url":"https://api.github.com/users/albertzaharovits/received_events","type":"User","site_admin":false},"performed_via_github_app":null}