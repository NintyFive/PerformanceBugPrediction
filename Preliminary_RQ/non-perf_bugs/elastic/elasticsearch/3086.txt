{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3086","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3086/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3086/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3086/events","html_url":"https://github.com/elastic/elasticsearch/issues/3086","id":14717893,"node_id":"MDU6SXNzdWUxNDcxNzg5Mw==","number":3086,"title":"Add 'ignore_unmapped' to faceted search","user":{"login":"bryangreen","id":575000,"node_id":"MDQ6VXNlcjU3NTAwMA==","avatar_url":"https://avatars2.githubusercontent.com/u/575000?v=4","gravatar_id":"","url":"https://api.github.com/users/bryangreen","html_url":"https://github.com/bryangreen","followers_url":"https://api.github.com/users/bryangreen/followers","following_url":"https://api.github.com/users/bryangreen/following{/other_user}","gists_url":"https://api.github.com/users/bryangreen/gists{/gist_id}","starred_url":"https://api.github.com/users/bryangreen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bryangreen/subscriptions","organizations_url":"https://api.github.com/users/bryangreen/orgs","repos_url":"https://api.github.com/users/bryangreen/repos","events_url":"https://api.github.com/users/bryangreen/events{/privacy}","received_events_url":"https://api.github.com/users/bryangreen/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2013-05-24T11:35:05Z","updated_at":"2013-10-22T07:48:24Z","closed_at":"2013-10-22T07:48:24Z","author_association":"NONE","active_lock_reason":null,"body":"Similar in scope to the current 'ignore_unmapped' (issue #1558) used for sorting search results, this parameter would prevent an exception from being generated when a given term is not mapped within an index during a faceted search.\n\nThis would be most helpful when generating faceted results across multiple indexes and a certain term does not exist in a given index within the search. The results for the indexes where a term does exist would still be created.\n\nAn example:\nindexA,indexB,indexC/blogs/_search\n\n```\n{\n    \"query\" : {\n        \"match_all\" : {  }\n    },\n    \"facets\" : {\n        \"tag\" : {\n            \"terms\" : {\n                \"field\" : \"tag\",\n                \"size\" : 10,\n                \"ignore_missing\": true\n            }\n        }\n    }\n}\n```\n\nThis should be applied across all facet queries: term, range, histogram, date histogram, statistical, etc.\nThis ticket could be modified to apply the flag via the uri.\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}