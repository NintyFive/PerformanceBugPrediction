[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/525976271","html_url":"https://github.com/elastic/elasticsearch/issues/46106#issuecomment-525976271","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46106","id":525976271,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNTk3NjI3MQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-08-29T00:48:00Z","updated_at":"2019-08-29T00:48:00Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/525976281","html_url":"https://github.com/elastic/elasticsearch/issues/46106#issuecomment-525976281","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46106","id":525976281,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNTk3NjI4MQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-08-29T00:48:02Z","updated_at":"2019-08-29T00:48:02Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-features","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/531150895","html_url":"https://github.com/elastic/elasticsearch/issues/46106#issuecomment-531150895","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46106","id":531150895,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMTE1MDg5NQ==","user":{"login":"pgomulka","id":11137008,"node_id":"MDQ6VXNlcjExMTM3MDA4","avatar_url":"https://avatars0.githubusercontent.com/u/11137008?v=4","gravatar_id":"","url":"https://api.github.com/users/pgomulka","html_url":"https://github.com/pgomulka","followers_url":"https://api.github.com/users/pgomulka/followers","following_url":"https://api.github.com/users/pgomulka/following{/other_user}","gists_url":"https://api.github.com/users/pgomulka/gists{/gist_id}","starred_url":"https://api.github.com/users/pgomulka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgomulka/subscriptions","organizations_url":"https://api.github.com/users/pgomulka/orgs","repos_url":"https://api.github.com/users/pgomulka/repos","events_url":"https://api.github.com/users/pgomulka/events{/privacy}","received_events_url":"https://api.github.com/users/pgomulka/received_events","type":"User","site_admin":false},"created_at":"2019-09-13T08:34:10Z","updated_at":"2019-09-13T08:34:10Z","author_association":"CONTRIBUTOR","body":"This is a really cool idea. We were looking into this together with @ycombinator and @nik9000 to possibly start a filebeat that would consume ES logs and upload them back to an index.\r\nThe solution was proposed a while back here https://github.com/elastic/dev/issues/731","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/562685426","html_url":"https://github.com/elastic/elasticsearch/issues/46106#issuecomment-562685426","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46106","id":562685426,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MjY4NTQyNg==","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"created_at":"2019-12-06T18:26:49Z","updated_at":"2019-12-06T18:26:49Z","author_association":"MEMBER","body":"We discussed this in a couple of team meetings. Two approaches were discussed with the first being that we would rely on a bundled filebeat to ingest the deprecation logs and the other would include building this functionality into the DeprecationLogger itself.\r\n\r\nThere is ongoing discussion about packaging filebeat and metricbeat with elasticsearch (#49399) but they would be disabled by default. Given the desire to have them be disabled and not add a new process by default, this would mean this functionality would explicitly require the user to do work. Whereas if we added this to the deprecation logger, we could enable it more easily. Given this, the discussion favored the process internal solution.\r\n\r\nThere was additional discussion regarding:\r\n\r\n* Handling rejections on indexing\r\n  * It would be ok to drop messages in this case since this is not critical and retries could cause the cluster/node to get in an even worse state.\r\n* Would indexing these messages add too much load?\r\n  * This should not be the case if we use `deprecateAndMaybeLog` correctly, which should prevent spamming. \r\n  * However this deduplication currently has no timeout and then we could lose the fact that a deprecated item is being used after the initial document was indexed.\r\n  * Should we use X-Opaque-Id in the deduplication to help the user determine where the deprecated usage is coming from? See https://github.com/elastic/elasticsearch/issues/26836#issuecomment-541256776\r\n  * For some items like scripting the same deprecated use will result in multiple messages since these could be at the shard level. This should be ok since the majority will not be at that level.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/579556715","html_url":"https://github.com/elastic/elasticsearch/issues/46106#issuecomment-579556715","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46106","id":579556715,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTU1NjcxNQ==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2020-01-29T01:52:45Z","updated_at":"2020-01-29T01:52:45Z","author_association":"MEMBER","body":">This should not be the case if we use `deprecateAndMaybeLog` correctly, which should prevent spamming.\r\n\r\nWhile I was the one that suggested that we could use `deprecateAndMaybeLog` here, I do wonder if we we should consider trying to log all of these messages to the index. There's a trade-off here between potential performance issues (which maybe we can address in other ways, such as batching) and being able to surface to a user the actual last time that they used deprecated functionality.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/579997505","html_url":"https://github.com/elastic/elasticsearch/issues/46106#issuecomment-579997505","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46106","id":579997505,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTk5NzUwNQ==","user":{"login":"cjcenizal","id":1238659,"node_id":"MDQ6VXNlcjEyMzg2NTk=","avatar_url":"https://avatars2.githubusercontent.com/u/1238659?v=4","gravatar_id":"","url":"https://api.github.com/users/cjcenizal","html_url":"https://github.com/cjcenizal","followers_url":"https://api.github.com/users/cjcenizal/followers","following_url":"https://api.github.com/users/cjcenizal/following{/other_user}","gists_url":"https://api.github.com/users/cjcenizal/gists{/gist_id}","starred_url":"https://api.github.com/users/cjcenizal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cjcenizal/subscriptions","organizations_url":"https://api.github.com/users/cjcenizal/orgs","repos_url":"https://api.github.com/users/cjcenizal/repos","events_url":"https://api.github.com/users/cjcenizal/events{/privacy}","received_events_url":"https://api.github.com/users/cjcenizal/received_events","type":"User","site_admin":false},"created_at":"2020-01-29T22:45:53Z","updated_at":"2020-01-29T22:45:53Z","author_association":"CONTRIBUTOR","body":"Pinging @elastic/es-ui ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/580024503","html_url":"https://github.com/elastic/elasticsearch/issues/46106#issuecomment-580024503","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46106","id":580024503,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDAyNDUwMw==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2020-01-30T00:15:21Z","updated_at":"2020-01-30T00:15:21Z","author_association":"MEMBER","body":"> I do wonder if we we should consider trying to log all of these messages to the index\r\n\r\nEven batching I worry could exhaust resources in any case that a deprecation occurs per document in a query, as is typical when deprecations occur within scripting. I'm supportive of the idea of logging more if we move to an index, but I wanted to point out we still have edge cases we need to consider where logging the details of every warning is not practical.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/580071653","html_url":"https://github.com/elastic/elasticsearch/issues/46106#issuecomment-580071653","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46106","id":580071653,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDA3MTY1Mw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2020-01-30T03:53:05Z","updated_at":"2020-01-30T03:53:05Z","author_association":"MEMBER","body":"I don’t think we should deprecation log anything per document. Per request, that’s okay though, and I think alleviates a lot of pressure here. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/580266982","html_url":"https://github.com/elastic/elasticsearch/issues/46106#issuecomment-580266982","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46106","id":580266982,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDI2Njk4Mg==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2020-01-30T14:01:50Z","updated_at":"2020-01-30T14:01:50Z","author_association":"CONTRIBUTOR","body":"Could we use something like `ScriptService#checkCompilationLimit` to limit how much we log? If we're batching we're probably already going to synchronize somehow, somewhere, so adding the rate limiting would be pretty cheap.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/580404438","html_url":"https://github.com/elastic/elasticsearch/issues/46106#issuecomment-580404438","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46106","id":580404438,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDQwNDQzOA==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2020-01-30T19:03:02Z","updated_at":"2020-01-30T19:03:02Z","author_association":"MEMBER","body":"`checkCompilationLimit` relies on calling `nanoTime`, which I don't think we want to do per document. Instead, I think we can find a way to call deprecations through a script specific lock, so that we only call the deprecation on the first use when executing the script.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/594467949","html_url":"https://github.com/elastic/elasticsearch/issues/46106#issuecomment-594467949","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46106","id":594467949,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDQ2Nzk0OQ==","user":{"login":"pugnascotia","id":8696382,"node_id":"MDQ6VXNlcjg2OTYzODI=","avatar_url":"https://avatars1.githubusercontent.com/u/8696382?v=4","gravatar_id":"","url":"https://api.github.com/users/pugnascotia","html_url":"https://github.com/pugnascotia","followers_url":"https://api.github.com/users/pugnascotia/followers","following_url":"https://api.github.com/users/pugnascotia/following{/other_user}","gists_url":"https://api.github.com/users/pugnascotia/gists{/gist_id}","starred_url":"https://api.github.com/users/pugnascotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pugnascotia/subscriptions","organizations_url":"https://api.github.com/users/pugnascotia/orgs","repos_url":"https://api.github.com/users/pugnascotia/repos","events_url":"https://api.github.com/users/pugnascotia/events{/privacy}","received_events_url":"https://api.github.com/users/pugnascotia/received_events","type":"User","site_admin":false},"created_at":"2020-03-04T11:28:39Z","updated_at":"2020-03-04T11:28:39Z","author_association":"CONTRIBUTOR","body":"I've been playing around with the current deprecation logger. Since the logger is called all over the place, it seems unfeasible to introduce anything that would require changes to the call sites. \r\n\r\nInstead, I threw together a `DeprecationIndexer`, initialised it in `Node` and passed it to the `DeprecationLogger`. Now, if a new setting is `true`, deprecation messages are written in something resembling ECS (only if the logger is also writing a message to Log4J).\r\n\r\nThe main issue I had was security - the `NodeClient` I got from `Node` is authenticated as `_system`, which doesn't have permission to create templates, create indices, or write to indices, so I slapped a dirty hack to see if the rest of it worked. I was running Elasticsearch with `./gradlew run`.\r\n\r\nI also make the indexer listen to the cluster state so that when the cluster was ready, it could ensure an index template exists, then the indexer writes to a daily index. The indexer stops listening once it knows the template exists.\r\n\r\nSo the questions I have are:\r\n\r\n   * Is my approach here remotely valid? Or is there prior art that I've missed?\r\n   * What user should be used to write the deprecation logs?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/594540206","html_url":"https://github.com/elastic/elasticsearch/issues/46106#issuecomment-594540206","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46106","id":594540206,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDU0MDIwNg==","user":{"login":"pgomulka","id":11137008,"node_id":"MDQ6VXNlcjExMTM3MDA4","avatar_url":"https://avatars0.githubusercontent.com/u/11137008?v=4","gravatar_id":"","url":"https://api.github.com/users/pgomulka","html_url":"https://github.com/pgomulka","followers_url":"https://api.github.com/users/pgomulka/followers","following_url":"https://api.github.com/users/pgomulka/following{/other_user}","gists_url":"https://api.github.com/users/pgomulka/gists{/gist_id}","starred_url":"https://api.github.com/users/pgomulka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgomulka/subscriptions","organizations_url":"https://api.github.com/users/pgomulka/orgs","repos_url":"https://api.github.com/users/pgomulka/repos","events_url":"https://api.github.com/users/pgomulka/events{/privacy}","received_events_url":"https://api.github.com/users/pgomulka/received_events","type":"User","site_admin":false},"created_at":"2020-03-04T14:01:46Z","updated_at":"2020-03-04T14:02:35Z","author_association":"CONTRIBUTOR","body":"@pugnascotia that sounds good to me. \r\nWill this Indexer be synchronous and and blocking the execution? Can you link your branch?\r\nI was thinking if maybe we could implement this as a log4j appender that would be used together with asynchronous logger?\r\n\r\nI was hoping to reuse deprecation logger logic for compatible API warnings. So there will be even more usages. \r\n\r\nWith regards to ECS, I am meant to tackle this here https://github.com/elastic/elasticsearch/pull/47105\r\nIt is actually almost done, I need to add more testing. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/595191937","html_url":"https://github.com/elastic/elasticsearch/issues/46106#issuecomment-595191937","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46106","id":595191937,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTE5MTkzNw==","user":{"login":"pugnascotia","id":8696382,"node_id":"MDQ6VXNlcjg2OTYzODI=","avatar_url":"https://avatars1.githubusercontent.com/u/8696382?v=4","gravatar_id":"","url":"https://api.github.com/users/pugnascotia","html_url":"https://github.com/pugnascotia","followers_url":"https://api.github.com/users/pugnascotia/followers","following_url":"https://api.github.com/users/pugnascotia/following{/other_user}","gists_url":"https://api.github.com/users/pugnascotia/gists{/gist_id}","starred_url":"https://api.github.com/users/pugnascotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pugnascotia/subscriptions","organizations_url":"https://api.github.com/users/pugnascotia/orgs","repos_url":"https://api.github.com/users/pugnascotia/repos","events_url":"https://api.github.com/users/pugnascotia/events{/privacy}","received_events_url":"https://api.github.com/users/pugnascotia/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T11:54:02Z","updated_at":"2020-03-05T11:54:02Z","author_association":"CONTRIBUTOR","body":"@pgomulka here's the branch: https://github.com/elastic/elasticsearch/compare/4ff5e03c70a...pugnascotia:index-deprecation-logs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/639010583","html_url":"https://github.com/elastic/elasticsearch/issues/46106#issuecomment-639010583","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46106","id":639010583,"node_id":"MDEyOklzc3VlQ29tbWVudDYzOTAxMDU4Mw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2020-06-04T17:55:01Z","updated_at":"2020-06-04T17:55:01Z","author_association":"MEMBER","body":"We can take this idea even further, and use this deprecation index as common collection point for deprecation logs across the Stack, and then expose in Kibana all the deprecated functionality in any Stack products that a user is using, helping give a full view across the Stack of changes a user might need to make when preparing to upgrade. We will need to hash out the details of this idea, which @pugnascotia will take charge on. 🙏 ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/639780641","html_url":"https://github.com/elastic/elasticsearch/issues/46106#issuecomment-639780641","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46106","id":639780641,"node_id":"MDEyOklzc3VlQ29tbWVudDYzOTc4MDY0MQ==","user":{"login":"pugnascotia","id":8696382,"node_id":"MDQ6VXNlcjg2OTYzODI=","avatar_url":"https://avatars1.githubusercontent.com/u/8696382?v=4","gravatar_id":"","url":"https://api.github.com/users/pugnascotia","html_url":"https://github.com/pugnascotia","followers_url":"https://api.github.com/users/pugnascotia/followers","following_url":"https://api.github.com/users/pugnascotia/following{/other_user}","gists_url":"https://api.github.com/users/pugnascotia/gists{/gist_id}","starred_url":"https://api.github.com/users/pugnascotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pugnascotia/subscriptions","organizations_url":"https://api.github.com/users/pugnascotia/orgs","repos_url":"https://api.github.com/users/pugnascotia/repos","events_url":"https://api.github.com/users/pugnascotia/events{/privacy}","received_events_url":"https://api.github.com/users/pugnascotia/received_events","type":"User","site_admin":false},"created_at":"2020-06-05T20:22:05Z","updated_at":"2020-06-05T20:22:05Z","author_association":"CONTRIBUTOR","body":"I had a good chat with @jakelandis about this, and we realised that although there are parallels with the existing monitoring code, given that we're ripping all that out and relying on stack features, we should do the same here. We can ship an index template that creates the deprecation index as a data stream with some suitable ILM settings.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/651876184","html_url":"https://github.com/elastic/elasticsearch/issues/46106#issuecomment-651876184","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46106","id":651876184,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTg3NjE4NA==","user":{"login":"pugnascotia","id":8696382,"node_id":"MDQ6VXNlcjg2OTYzODI=","avatar_url":"https://avatars1.githubusercontent.com/u/8696382?v=4","gravatar_id":"","url":"https://api.github.com/users/pugnascotia","html_url":"https://github.com/pugnascotia","followers_url":"https://api.github.com/users/pugnascotia/followers","following_url":"https://api.github.com/users/pugnascotia/following{/other_user}","gists_url":"https://api.github.com/users/pugnascotia/gists{/gist_id}","starred_url":"https://api.github.com/users/pugnascotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pugnascotia/subscriptions","organizations_url":"https://api.github.com/users/pugnascotia/orgs","repos_url":"https://api.github.com/users/pugnascotia/repos","events_url":"https://api.github.com/users/pugnascotia/events{/privacy}","received_events_url":"https://api.github.com/users/pugnascotia/received_events","type":"User","site_admin":false},"created_at":"2020-06-30T15:41:16Z","updated_at":"2020-06-30T15:41:16Z","author_association":"CONTRIBUTOR","body":"@pgomulka would you mind take a quick look at a new implementation for writing deprecation logs? See:\r\n\r\nhttps://github.com/elastic/elasticsearch/compare/master...pugnascotia:index-deprecation-logs-v2","performed_via_github_app":null}]