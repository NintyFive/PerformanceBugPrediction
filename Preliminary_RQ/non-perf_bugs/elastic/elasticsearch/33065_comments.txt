[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/415097203","html_url":"https://github.com/elastic/elasticsearch/issues/33065#issuecomment-415097203","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33065","id":415097203,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTA5NzIwMw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-08-22T16:37:53Z","updated_at":"2018-08-22T16:37:53Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/415561746","html_url":"https://github.com/elastic/elasticsearch/issues/33065#issuecomment-415561746","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33065","id":415561746,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTU2MTc0Ng==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2018-08-23T20:33:01Z","updated_at":"2018-08-23T20:33:01Z","author_association":"MEMBER","body":"@colings86 and I chatted about this some.  Enabling this via ILM is a good long-term goal.  With that in mind, ILM would likely invoke this sort of behavior with the Rollover API.  From Rollup's point of view, that would look the same as an external Rollover event, so if we enable that behavior we can A) let users do it manually today and B) be ready to work with ILM when it's ready.\r\n\r\nWe'll need to loosen the restriction multi-rollup-index search, but I think that should be easy enough as long as we can guarantee all indices in the query have _identical_ jobs.\r\n\r\nAt rollover time, we have two concerns.  The first is the orchestration of start/rollover/stop as described in the OP.  The other issues is dealing with `_meta` on the newly created index.  Since Rollover will be creating the index and not Rollup, we'll need some way to get the job metadata on to the new index.\r\n\r\n- One approach is a periodic thread that checks to see if we're writing to a different concrete index, and upgrade it's metadata when we notice.  This seems a bit scary since disaster recover at that point could be unpleasant.\r\n- We could enhance the Rollover API to also copy over settings/mappings from the old index to the new index.  This would be the best solution from Rollup's perspective, since it would transparently handle the new index.  \r\n  - There's an open question how the first index would get metadata.  Potentially, Rollup could create the alias and initial index automatically, defaulting to a rollover setup.\r\n- Something else","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/419199024","html_url":"https://github.com/elastic/elasticsearch/issues/33065#issuecomment-419199024","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33065","id":419199024,"node_id":"MDEyOklzc3VlQ29tbWVudDQxOTE5OTAyNA==","user":{"login":"jdu-mydevices","id":33299623,"node_id":"MDQ6VXNlcjMzMjk5NjIz","avatar_url":"https://avatars1.githubusercontent.com/u/33299623?v=4","gravatar_id":"","url":"https://api.github.com/users/jdu-mydevices","html_url":"https://github.com/jdu-mydevices","followers_url":"https://api.github.com/users/jdu-mydevices/followers","following_url":"https://api.github.com/users/jdu-mydevices/following{/other_user}","gists_url":"https://api.github.com/users/jdu-mydevices/gists{/gist_id}","starred_url":"https://api.github.com/users/jdu-mydevices/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdu-mydevices/subscriptions","organizations_url":"https://api.github.com/users/jdu-mydevices/orgs","repos_url":"https://api.github.com/users/jdu-mydevices/repos","events_url":"https://api.github.com/users/jdu-mydevices/events{/privacy}","received_events_url":"https://api.github.com/users/jdu-mydevices/received_events","type":"User","site_admin":false},"created_at":"2018-09-06T18:39:05Z","updated_at":"2018-09-06T18:39:05Z","author_association":"NONE","body":"I am using the rollup_index and now the rollup_index becomes bigger and bigger.\r\nI have to find a way to delete old rollup data. I like the idea:\r\n```\r\n\"index_pattern\": \"logstash-*\"\r\n\"rollup_index\": \"logstash-%{+YYYY.MM.dd}\",\r\n```\r\n_rollup_search Api should be able to use alias that contains all the rollup_index end with`{+YYYY.MM.dd}`. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/468824743","html_url":"https://github.com/elastic/elasticsearch/issues/33065#issuecomment-468824743","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33065","id":468824743,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2ODgyNDc0Mw==","user":{"login":"bhatch4","id":31700558,"node_id":"MDQ6VXNlcjMxNzAwNTU4","avatar_url":"https://avatars0.githubusercontent.com/u/31700558?v=4","gravatar_id":"","url":"https://api.github.com/users/bhatch4","html_url":"https://github.com/bhatch4","followers_url":"https://api.github.com/users/bhatch4/followers","following_url":"https://api.github.com/users/bhatch4/following{/other_user}","gists_url":"https://api.github.com/users/bhatch4/gists{/gist_id}","starred_url":"https://api.github.com/users/bhatch4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhatch4/subscriptions","organizations_url":"https://api.github.com/users/bhatch4/orgs","repos_url":"https://api.github.com/users/bhatch4/repos","events_url":"https://api.github.com/users/bhatch4/events{/privacy}","received_events_url":"https://api.github.com/users/bhatch4/received_events","type":"User","site_admin":false},"created_at":"2019-03-01T21:52:47Z","updated_at":"2019-03-01T21:52:47Z","author_association":"NONE","body":"I would love to see the rollup_index pattern like mentioned above. \r\nWe get a lot of metrics and a lot of log data. Some indices get 100-300 million documents every day. Because of the amount of data we can only keep data around for so long. The rollup feature could allow us to keep summarized data for much longer. We could also move some reports onto the rollup index to save on resources. For example we could keep the original data for 1 month, and the rollup date for 1 year. Curator jobs would take care of removing indices when they are too old.\r\nHowever without a way of managing the rollup index this isn't possible. At least not without some manual control. \r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/541829056","html_url":"https://github.com/elastic/elasticsearch/issues/33065#issuecomment-541829056","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33065","id":541829056,"node_id":"MDEyOklzc3VlQ29tbWVudDU0MTgyOTA1Ng==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-10-14T18:03:03Z","updated_at":"2019-10-14T18:03:03Z","author_association":"MEMBER","body":"Superseded by https://github.com/elastic/elasticsearch/issues/48003\r\n\r\nWe're going to try and integrate Rollup directly into ILM (as an action) rather than trying to get ILM and the current Rollup indexer to \"coordinate\".  Easier for the user, simpler to manage, one configuration, and no need to keep the two tasks synced.  And fits nicely into how people naturally want to use Rollups (as part of their index lifecycle and overall retention scheme).","performed_via_github_app":null}]