[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/321241550","html_url":"https://github.com/elastic/elasticsearch/issues/25359#issuecomment-321241550","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25359","id":321241550,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMTI0MTU1MA==","user":{"login":"PnPie","id":7472431,"node_id":"MDQ6VXNlcjc0NzI0MzE=","avatar_url":"https://avatars3.githubusercontent.com/u/7472431?v=4","gravatar_id":"","url":"https://api.github.com/users/PnPie","html_url":"https://github.com/PnPie","followers_url":"https://api.github.com/users/PnPie/followers","following_url":"https://api.github.com/users/PnPie/following{/other_user}","gists_url":"https://api.github.com/users/PnPie/gists{/gist_id}","starred_url":"https://api.github.com/users/PnPie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PnPie/subscriptions","organizations_url":"https://api.github.com/users/PnPie/orgs","repos_url":"https://api.github.com/users/PnPie/repos","events_url":"https://api.github.com/users/PnPie/events{/privacy}","received_events_url":"https://api.github.com/users/PnPie/received_events","type":"User","site_admin":false},"created_at":"2017-08-09T12:32:17Z","updated_at":"2017-08-09T12:35:33Z","author_association":"CONTRIBUTOR","body":"Hello,\r\n\r\nI've had a look at the index name resolver in `TransportCreateSnapshotAction` and it seems it works well. What is very strange is that I created a test function in `SharedClusterSnapshotRestoreIT` in which I just passed a missing index for the creation of a snapshot:\r\n```\r\npublic void testSnapshotOnMissingIndex() throws Exception {\r\n    final Client client = client();\r\n\r\n    logger.info(\"--> creating repository\");\r\n    assertAcked(client.admin().cluster().preparePutRepository(\"test-repo\")\r\n                .setType(\"fs\").setSettings(Settings.builder().put(\"location\", randomRepoPath())));\r\n\r\n    logger.info(\"--> snapshot\");\r\n    client.admin().cluster()\r\n        .prepareCreateSnapshot(\"test-repo\", \"test-snap\")\r\n        .setIndices(\"missing\")\r\n        .get();\r\n}\r\n```\r\nAnd it does throw an `IndexNotFoundException`:\r\n```\r\n[missing] IndexNotFoundException[no such index]\r\n\tat __randomizedtesting.SeedInfo.seed([3D91A5BCCC7B5F6C:9E614A94BC995C9B]:0)\r\n\tat org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$WildcardExpressionResolver.indexNotFoundException(IndexNameExpressionResolver.java:664)\r\n\tat org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$WildcardExpressionResolver.innerResolve(IndexNameExpressionResolver.java:626)\r\n\tat org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$WildcardExpressionResolver.resolve(IndexNameExpressionResolver.java:583)\r\n\tat org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:162)\r\n\tat org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndexNames(IndexNameExpressionResolver.java:141)\r\n\tat org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndexNames(IndexNameExpressionResolver.java:74)\r\n\tat org.elasticsearch.action.admin.cluster.snapshots.create.TransportCreateSnapshotAction.checkBlock(TransportCreateSnapshotAction.java:69)\r\n\tat org.elasticsearch.action.admin.cluster.snapshots.create.TransportCreateSnapshotAction.checkBlock(TransportCreateSnapshotAction.java:1)\r\n\tat org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.doStart(TransportMasterNodeAction.java:135)\r\n\tat org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.start(TransportMasterNodeAction.java:127)\r\n\tat org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:105)\r\n\tat org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:1)\r\n\tat org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:168)\r\n\tat org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:139)\r\n\tat org.elasticsearch.action.support.HandledTransportAction$TransportHandler.messageReceived(HandledTransportAction.java:64)\r\n\tat org.elasticsearch.action.support.HandledTransportAction$TransportHandler.messageReceived(HandledTransportAction.java:1)\r\n\tat org.elasticsearch.transport.AssertingTransportInterceptor$1.messageReceived(AssertingTransportInterceptor.java:76)\r\n\tat org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:66)\r\n\tat org.elasticsearch.transport.TcpTransport$RequestHandler.doRun(TcpTransport.java:1527)\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n\tat org.elasticsearch.common.util.concurrent.EsExecutors$1.execute(EsExecutors.java:139)\r\n\tat org.elasticsearch.transport.TcpTransport.handleRequest(TcpTransport.java:1484)\r\n\tat org.elasticsearch.transport.TcpTransport.messageReceived(TcpTransport.java:1354)\r\n\tat org.elasticsearch.transport.MockTcpTransport.readMessage(MockTcpTransport.java:170)\r\n\tat org.elasticsearch.transport.MockTcpTransport.access$7(MockTcpTransport.java:148)\r\n\tat org.elasticsearch.transport.MockTcpTransport$MockChannel$1.lambda$0(MockTcpTransport.java:348)\r\n\tat org.elasticsearch.common.util.CancellableThreads.executeIO(CancellableThreads.java:105)\r\n\tat org.elasticsearch.transport.MockTcpTransport$MockChannel$1.doRun(MockTcpTransport.java:348)\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\nBut when I test it on Elasticsearch it was passed with no error message and the missing index is just to be ignored as above. I don't really understand because in the Rest layer we don't do any index resolving and the indices should be passed as it is to create a `CreateSnapshotRequest` ? So where the problem may lie ?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/330847796","html_url":"https://github.com/elastic/elasticsearch/issues/25359#issuecomment-330847796","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25359","id":330847796,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMDg0Nzc5Ng==","user":{"login":"liketic","id":3806117,"node_id":"MDQ6VXNlcjM4MDYxMTc=","avatar_url":"https://avatars0.githubusercontent.com/u/3806117?v=4","gravatar_id":"","url":"https://api.github.com/users/liketic","html_url":"https://github.com/liketic","followers_url":"https://api.github.com/users/liketic/followers","following_url":"https://api.github.com/users/liketic/following{/other_user}","gists_url":"https://api.github.com/users/liketic/gists{/gist_id}","starred_url":"https://api.github.com/users/liketic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liketic/subscriptions","organizations_url":"https://api.github.com/users/liketic/orgs","repos_url":"https://api.github.com/users/liketic/repos","events_url":"https://api.github.com/users/liketic/events{/privacy}","received_events_url":"https://api.github.com/users/liketic/received_events","type":"User","site_admin":false},"created_at":"2017-09-20T13:16:18Z","updated_at":"2017-10-17T07:47:27Z","author_association":"CONTRIBUTOR","body":"I've made some investigation, seems like the default value of `ignore_unavailable ` is `true`. Need more effort to figure it out. @abeyad I'm new to es, could you please provide some hints? Thanks in advance. ðŸ˜„ ","performed_via_github_app":null}]