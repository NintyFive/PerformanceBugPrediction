[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447565570","html_url":"https://github.com/elastic/elasticsearch/issues/36669#issuecomment-447565570","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36669","id":447565570,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzU2NTU3MA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-12-15T12:36:43Z","updated_at":"2018-12-15T12:36:43Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447565673","html_url":"https://github.com/elastic/elasticsearch/issues/36669#issuecomment-447565673","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36669","id":447565673,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzU2NTY3Mw==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2018-12-15T12:38:39Z","updated_at":"2018-12-15T12:38:39Z","author_association":"MEMBER","body":"> Currently, the only way to get a binary field is to get a json response that contains binary field, encoded in base64.\r\n\r\nYou can also get it in [CBOR or SMILE](https://www.elastic.co/guide/en/elasticsearch/reference/current/common-options.html#_content_type_requirements) formats, which seems to be reacher in functionality and less prone to abuse. \r\n\r\nI would agree that having a single field as an output would be a bit easy to parse, but there are several issues with that including handling content type, simplifying usage of the server for delivering malicious content and other ways of abuse that makes me uneasy about implementing such feature.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447581507","html_url":"https://github.com/elastic/elasticsearch/issues/36669#issuecomment-447581507","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36669","id":447581507,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzU4MTUwNw==","user":{"login":"fbaligand","id":3750300,"node_id":"MDQ6VXNlcjM3NTAzMDA=","avatar_url":"https://avatars1.githubusercontent.com/u/3750300?v=4","gravatar_id":"","url":"https://api.github.com/users/fbaligand","html_url":"https://github.com/fbaligand","followers_url":"https://api.github.com/users/fbaligand/followers","following_url":"https://api.github.com/users/fbaligand/following{/other_user}","gists_url":"https://api.github.com/users/fbaligand/gists{/gist_id}","starred_url":"https://api.github.com/users/fbaligand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fbaligand/subscriptions","organizations_url":"https://api.github.com/users/fbaligand/orgs","repos_url":"https://api.github.com/users/fbaligand/repos","events_url":"https://api.github.com/users/fbaligand/events{/privacy}","received_events_url":"https://api.github.com/users/fbaligand/received_events","type":"User","site_admin":false},"created_at":"2018-12-15T16:46:09Z","updated_at":"2018-12-15T16:46:09Z","author_association":"CONTRIBUTOR","body":"Hi @imotov ,\r\n\r\nThanks for your answer and suggestion for CBOR/SMILE formats. As I see in documentation and upon my tests, it seems that these formats are only supported for indexing documents, and not for getting documents.\r\nIf I'm wrong, I'm very interested by a simple query example that gets a document with CBOR/SMILE format.\r\n\r\nThat said, concerning this issue : \r\n- for the content-type, an easy way to deal with that is to simply return `Content-Type: application/octet-stream` header. Then, it client's responsibility to know what content type is.\r\n- an option for content-type, is to support a query parameter that specifies which field contains the content-type to return (this is optional). Particularly useful when binary is stored through ingest attachment plugin.\r\n- concerning malicious content, I don't see a special server problem : the content is decoded (or not) and returned as it is. Given that content is not processed server-side, IMHO, it has no malicious impact on server.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447584526","html_url":"https://github.com/elastic/elasticsearch/issues/36669#issuecomment-447584526","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36669","id":447584526,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzU4NDUyNg==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2018-12-15T17:31:52Z","updated_at":"2018-12-15T17:31:52Z","author_association":"MEMBER","body":"> If I'm wrong, I'm very interested by a simple query example that gets a document with CBOR/SMILE format.\r\n\r\n```\r\ncurl -XDELETE \"http://localhost:9200/bintest?pretty\"\r\ncurl -XPUT \"http://localhost:9200/bintest?pretty\" -H 'Content-Type: application/json' -d'{\r\n  \"mappings\":{\r\n    \"_doc\":{\r\n      \"_source\": {\r\n        \"excludes\": [\"blob\"]\r\n      },\r\n      \"properties\":{\r\n        \"blob\":{\r\n          \"type\":\"binary\",\r\n          \"store\":\"true\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}'\r\ncurl -XPUT \"http://localhost:9200/bintest/_doc/1?pretty\" -H 'Content-Type: application/json' -d'{\r\n  \"blob\": \"LS0tLT4gWWF5ISEhIEl0IFdvcmtzISEhIDwtLS0tLQo=\"\r\n}'\r\necho \"Test for CBOR using Accept header\"\r\ncurl -XGET \"http://localhost:9200/bintest/_doc/1?stored_fields=blob\" -H 'Accept: application/cbor'\r\necho\r\necho \"Test for SMILE using format parameter\"\r\ncurl -XGET \"http://localhost:9200/bintest/_doc/1?stored_fields=blob&format=SMILE\"\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447589152","html_url":"https://github.com/elastic/elasticsearch/issues/36669#issuecomment-447589152","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36669","id":447589152,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzU4OTE1Mg==","user":{"login":"fbaligand","id":3750300,"node_id":"MDQ6VXNlcjM3NTAzMDA=","avatar_url":"https://avatars1.githubusercontent.com/u/3750300?v=4","gravatar_id":"","url":"https://api.github.com/users/fbaligand","html_url":"https://github.com/fbaligand","followers_url":"https://api.github.com/users/fbaligand/followers","following_url":"https://api.github.com/users/fbaligand/following{/other_user}","gists_url":"https://api.github.com/users/fbaligand/gists{/gist_id}","starred_url":"https://api.github.com/users/fbaligand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fbaligand/subscriptions","organizations_url":"https://api.github.com/users/fbaligand/orgs","repos_url":"https://api.github.com/users/fbaligand/repos","events_url":"https://api.github.com/users/fbaligand/events{/privacy}","received_events_url":"https://api.github.com/users/fbaligand/received_events","type":"User","site_admin":false},"created_at":"2018-12-15T18:40:56Z","updated_at":"2018-12-15T18:40:56Z","author_association":"CONTRIBUTOR","body":"Thanks for the example! Very instructive!\r\nNice to see that blob is not base64-encoded in CBOR and SMILE formats.\r\n\r\nTo go back to this issue, CBOR/SMILE formats are nice alternatives, but I find that having a direct download is helpful to simply get a binary content, without to deal with complex SMILE/CBOR formats, particularly to stream the binary content on the client side.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447620014","html_url":"https://github.com/elastic/elasticsearch/issues/36669#issuecomment-447620014","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36669","id":447620014,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzYyMDAxNA==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2018-12-16T06:02:18Z","updated_at":"2018-12-16T06:02:18Z","author_association":"MEMBER","body":"> particularly to stream the binary content on the client side.\r\n\r\nI don't think elasticsearch would be a good solution for that. Please see https://github.com/elastic/elasticsearch/issues/25146#issuecomment-311330133 for a detailed explanation and related discussion. In this particular case, you might be better off storing large binary content outside of elasticsearch and delivering it using a specialized streaming server, while indexing only metadata for this content in elasticsearch.\r\n\r\nI am concerned that having direct downloads could lure users into using elasticsearch for types of workloads that it was never designed for and cannot efficiently support at scale at the moment. It is not going to be a good user experience that we are striving for.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447652661","html_url":"https://github.com/elastic/elasticsearch/issues/36669#issuecomment-447652661","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36669","id":447652661,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzY1MjY2MQ==","user":{"login":"fbaligand","id":3750300,"node_id":"MDQ6VXNlcjM3NTAzMDA=","avatar_url":"https://avatars1.githubusercontent.com/u/3750300?v=4","gravatar_id":"","url":"https://api.github.com/users/fbaligand","html_url":"https://github.com/fbaligand","followers_url":"https://api.github.com/users/fbaligand/followers","following_url":"https://api.github.com/users/fbaligand/following{/other_user}","gists_url":"https://api.github.com/users/fbaligand/gists{/gist_id}","starred_url":"https://api.github.com/users/fbaligand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fbaligand/subscriptions","organizations_url":"https://api.github.com/users/fbaligand/orgs","repos_url":"https://api.github.com/users/fbaligand/repos","events_url":"https://api.github.com/users/fbaligand/events{/privacy}","received_events_url":"https://api.github.com/users/fbaligand/received_events","type":"User","site_admin":false},"created_at":"2018-12-16T15:39:43Z","updated_at":"2018-12-16T15:39:43Z","author_association":"CONTRIBUTOR","body":"Well, I understand that Elasticsearch is not designed to be a binary datastore.\r\nBut it is designed to be a document datastore. And with official ingest-attachment-plugin, you can ingest a binary document to a Elasticsearch document, with both text content and binary content.\r\nThis is my concern for this issue.\r\nAnd so, both to download binary content and full text content, an API to download one specific field is particularly useful.\r\n To speak about use case, you typically either get meta-data informations, or get binary content or get full text content. In real life, from an application, you never get meta-informations and binary content.\r\nThat's why I think this API would be very useful, finally both for binary fields and long text fields.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447822953","html_url":"https://github.com/elastic/elasticsearch/issues/36669#issuecomment-447822953","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36669","id":447822953,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzgyMjk1Mw==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2018-12-17T12:09:05Z","updated_at":"2018-12-17T12:09:05Z","author_association":"MEMBER","body":"> To speak about use case, you typically either get meta-data informations, or get binary content or get full text content. In real life, from an application, you never get meta-informations and binary content.\r\nThat's why I think this API would be very useful, finally both for binary fields and long text fields.\r\n\r\nI agree, in a typical search use case an application typically delivers one subset of fields for the result list and another subset of fields when a user navigates to a particular document. However, for the non-binary use case, this is handled by [source filtering](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-source-filtering.html) and [stored fields](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-stored-fields.html). Do you find this functionality inadequate for your needs?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/448021067","html_url":"https://github.com/elastic/elasticsearch/issues/36669#issuecomment-448021067","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36669","id":448021067,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0ODAyMTA2Nw==","user":{"login":"fbaligand","id":3750300,"node_id":"MDQ6VXNlcjM3NTAzMDA=","avatar_url":"https://avatars1.githubusercontent.com/u/3750300?v=4","gravatar_id":"","url":"https://api.github.com/users/fbaligand","html_url":"https://github.com/fbaligand","followers_url":"https://api.github.com/users/fbaligand/followers","following_url":"https://api.github.com/users/fbaligand/following{/other_user}","gists_url":"https://api.github.com/users/fbaligand/gists{/gist_id}","starred_url":"https://api.github.com/users/fbaligand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fbaligand/subscriptions","organizations_url":"https://api.github.com/users/fbaligand/orgs","repos_url":"https://api.github.com/users/fbaligand/repos","events_url":"https://api.github.com/users/fbaligand/events{/privacy}","received_events_url":"https://api.github.com/users/fbaligand/received_events","type":"User","site_admin":false},"created_at":"2018-12-17T22:21:04Z","updated_at":"2018-12-17T22:21:04Z","author_association":"CONTRIBUTOR","body":"For full text fields, this is sufficient for most needs. Then there some times where you just want content without any structure around (json, smile or cbor). \r\nA good example is X-Pack reporting in Kibana: when you download CSV file  from a report, you get it from an elasticsearch document. \r\nIn that particular case, we just need to get csv content, without json structure around. And as Csv could be big, streaming is helpful ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/449138971","html_url":"https://github.com/elastic/elasticsearch/issues/36669#issuecomment-449138971","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36669","id":449138971,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0OTEzODk3MQ==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-12-20T21:20:33Z","updated_at":"2018-12-20T21:20:33Z","author_association":"MEMBER","body":"We discussed this during our weekly team discussion meeting and at this time we do not see a compelling enough reason to add APIs here. One note: you can get a gzipped response by sending the `Accept-Encoding` header indicating that the client wants `gzip`. It is also worth noting that it would be possible to add the APIs being requested here in a plugin.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/449146784","html_url":"https://github.com/elastic/elasticsearch/issues/36669#issuecomment-449146784","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36669","id":449146784,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0OTE0Njc4NA==","user":{"login":"fbaligand","id":3750300,"node_id":"MDQ6VXNlcjM3NTAzMDA=","avatar_url":"https://avatars1.githubusercontent.com/u/3750300?v=4","gravatar_id":"","url":"https://api.github.com/users/fbaligand","html_url":"https://github.com/fbaligand","followers_url":"https://api.github.com/users/fbaligand/followers","following_url":"https://api.github.com/users/fbaligand/following{/other_user}","gists_url":"https://api.github.com/users/fbaligand/gists{/gist_id}","starred_url":"https://api.github.com/users/fbaligand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fbaligand/subscriptions","organizations_url":"https://api.github.com/users/fbaligand/orgs","repos_url":"https://api.github.com/users/fbaligand/repos","events_url":"https://api.github.com/users/fbaligand/events{/privacy}","received_events_url":"https://api.github.com/users/fbaligand/received_events","type":"User","site_admin":false},"created_at":"2018-12-20T21:50:55Z","updated_at":"2018-12-20T21:50:55Z","author_association":"CONTRIBUTOR","body":"Sad to hear that... :(","performed_via_github_app":null}]