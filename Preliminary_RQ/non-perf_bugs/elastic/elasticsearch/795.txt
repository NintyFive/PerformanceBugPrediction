{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/795","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/795/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/795/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/795/events","html_url":"https://github.com/elastic/elasticsearch/issues/795","id":686681,"node_id":"MDU6SXNzdWU2ODY2ODE=","number":795,"title":"NPE when the JSON to index doesn't match the mapping's expectations","user":{"login":"tsuna","id":128281,"node_id":"MDQ6VXNlcjEyODI4MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/128281?v=4","gravatar_id":"","url":"https://api.github.com/users/tsuna","html_url":"https://github.com/tsuna","followers_url":"https://api.github.com/users/tsuna/followers","following_url":"https://api.github.com/users/tsuna/following{/other_user}","gists_url":"https://api.github.com/users/tsuna/gists{/gist_id}","starred_url":"https://api.github.com/users/tsuna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tsuna/subscriptions","organizations_url":"https://api.github.com/users/tsuna/orgs","repos_url":"https://api.github.com/users/tsuna/repos","events_url":"https://api.github.com/users/tsuna/events{/privacy}","received_events_url":"https://api.github.com/users/tsuna/received_events","type":"User","site_admin":false},"labels":[{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":76649,"node_id":"MDU6TGFiZWw3NjY0OQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.16.0","name":"v0.16.0","color":"ededed","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2011-03-19T09:45:28Z","updated_at":"2011-03-19T18:43:15Z","closed_at":"2011-03-19T18:43:15Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Here's a simple repro (works both on 0.15.2 and on HEAD as of elasticsearch/elasticsearch@70fc8d9af0574c0ad3fa3da8916078034219f716):\n\n<pre>\n$ curl -XPOST 'localhost:9200/test/foo' -d '{\"field\": {\"nested\": 42}}'\n{\"ok\":true,\"_index\":\"test\",\"_type\":\"foo\",\"_id\":\"hHtWqld0RTeRMpQxNeX7bA\",\"_version\":1}\n$ curl -XPOST 'localhost:9200/test/foo' -d '{\"field\": \"omg\"}'         \n{\"error\":\"NullPointerException[null]\",\"status\":500}\n</pre>\n\nThis is on a fresh install of 0.15.2 with no configuration whatsoever.  For reference, the dynamic mapping created by the first `POST` is:\n\n<pre>\n$ curl 'localhost:9200/test/foo/_mapping?pretty=true'                 \n{\n  \"test\" : {\n    \"foo\" : {\n      \"properties\" : {\n        \"field\" : {\n          \"dynamic\" : \"true\",\n          \"properties\" : {\n            \"nested\" : {\n              \"type\" : \"long\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n</pre>\n\nThe error that appears on the server side is:\n\n<pre>\n[2011-03-19 02:32:49,171][INFO ][node                     ] [Astaroth / Asteroth] {elasticsearch/0.15.2}[25417]: started\n[2011-03-19 02:32:53,375][INFO ][cluster.metadata         ] [Astaroth / Asteroth] [test] creating index, cause [auto(index api)], shards [5]/[1], mappings []\n[2011-03-19 02:32:54,131][INFO ][cluster.metadata         ] [Astaroth / Asteroth] [test] created and added to cluster_state\n[2011-03-19 02:32:54,491][INFO ][cluster.metadata         ] [Astaroth / Asteroth] [test] update_mapping [foo] (dynamic)\n[2011-03-19 02:32:56,846][DEBUG][action.index             ] [Astaroth / Asteroth] [test][2], node[wLHdQbsoQS-eSkJNX-CLvw], [P], s[STARTED]: Failed to execute [index {[test][foo][JbZaKPbdTBa2k38UkXf7wA], source[{\"field\": \"omg\"}]}]\njava.lang.NullPointerException\n    at org.elasticsearch.index.mapper.xcontent.ObjectMapper.parse(ObjectMapper.java:308)\n    at org.elasticsearch.index.mapper.xcontent.XContentDocumentMapper.parse(XContentDocumentMapper.java:429)\n    at org.elasticsearch.index.mapper.xcontent.XContentDocumentMapper.parse(XContentDocumentMapper.java:363)\n    at org.elasticsearch.index.shard.service.InternalIndexShard.prepareCreate(InternalIndexShard.java:250)\n    at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:187)\n    at org.elasticsearch.action.support.replication.TransportShardReplicationOperationAction$AsyncShardOperationAction.performOnPrimary(TransportShardReplicationOperationAction.java:418)\n    at org.elasticsearch.action.support.replication.TransportShardReplicationOperationAction$AsyncShardOperationAction.access$100(TransportShardReplicationOperationAction.java:233)\n    at org.elasticsearch.action.support.replication.TransportShardReplicationOperationAction$AsyncShardOperationAction$1.run(TransportShardReplicationOperationAction.java:331)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n    at java.lang.Thread.run(Thread.java:680)\n</pre>\n\n\nThe bug comes from the fact that the `ObjectMapper.parse` doesn't handle end of file here.  There are two possible behaviors to adopt here:\n1. Accept EOF here and Do The Right Thing.\n2. Reject EOF with an error because the existing mapping expects another form of data.\n\nIn my case I want behavior 1. but I'm fairly new to ES so I don't know if this should be universal or not.  Either way, the NPE is clearly a bug here.\n","closed_by":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"performed_via_github_app":null}