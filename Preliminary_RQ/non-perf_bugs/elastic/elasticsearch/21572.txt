{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/21572","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21572/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21572/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21572/events","html_url":"https://github.com/elastic/elasticsearch/issues/21572","id":189450764,"node_id":"MDU6SXNzdWUxODk0NTA3NjQ=","number":21572,"title":"Upgrade from 2.3.4 to 5.0.0 fails","user":{"login":"sricci82","id":11392806,"node_id":"MDQ6VXNlcjExMzkyODA2","avatar_url":"https://avatars1.githubusercontent.com/u/11392806?v=4","gravatar_id":"","url":"https://api.github.com/users/sricci82","html_url":"https://github.com/sricci82","followers_url":"https://api.github.com/users/sricci82/followers","following_url":"https://api.github.com/users/sricci82/following{/other_user}","gists_url":"https://api.github.com/users/sricci82/gists{/gist_id}","starred_url":"https://api.github.com/users/sricci82/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sricci82/subscriptions","organizations_url":"https://api.github.com/users/sricci82/orgs","repos_url":"https://api.github.com/users/sricci82/repos","events_url":"https://api.github.com/users/sricci82/events{/privacy}","received_events_url":"https://api.github.com/users/sricci82/received_events","type":"User","site_admin":false},"labels":[{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-11-15T17:09:10Z","updated_at":"2017-01-13T14:15:37Z","closed_at":"2017-01-13T14:15:37Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version**: 2.3.4\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version**: 1.8.0_45-b14\r\n\r\n**OS version**: Debian GNU/Linux 8.5 (jessie)\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nUpgrade fails at database start, there seems to be a problem with the mapping of an existing index. Mapping is the following:\r\n\r\n```\r\n\"mappings\": {\r\n    \"regtable\": {\r\n      \"dynamic_templates\": [\r\n        {\r\n          \"strings\": {\r\n            \"mapping\": {\r\n              \"index\": \"not_analyzed\",\r\n              \"type\": \"string\"\r\n            },\r\n            \"match_mapping_type\": \"string\"\r\n          }\r\n        }\r\n      ],\r\n      \"_all\": {\r\n        \"enabled\": false\r\n      }\r\n    }\r\n  },\r\n```\r\n\r\nHere's the startup log:\r\n\r\n```\r\n[2016-11-15T17:51:00,990][ERROR][o.e.g.GatewayMetaState   ] [elastic-01] failed to read local state, exiting...\r\njava.lang.IllegalStateException: unable to upgrade the mappings for the index [[wireless-2016.06.01/CBIJn2uRQfa3um_SWi9z0g]]\r\n\tat org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:128) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.upgradeIndexMetaData(MetaDataIndexUpgradeService.java:79) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.gateway.GatewayMetaState.upgradeMetaData(GatewayMetaState.java:248) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.gateway.GatewayMetaState.<init>(GatewayMetaState.java:91) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) [?:1.8.0_45]\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) [?:1.8.0_45]\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:422) [?:1.8.0_45]\r\n\tat org.elasticsearch.common.inject.DefaultConstructionProxyFactory$1.newInstance(DefaultConstructionProxyFactory.java:49) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:86) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:116) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:47) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:825) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:43) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:59) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:50) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.SingleParameterInjector.inject(SingleParameterInjector.java:42) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.SingleParameterInjector.getAll(SingleParameterInjector.java:66) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:85) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:116) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:47) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:825) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:43) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:59) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:50) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.InjectorBuilder$1.call(InjectorBuilder.java:191) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.InjectorBuilder$1.call(InjectorBuilder.java:183) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:818) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.InjectorBuilder.loadEagerSingletons(InjectorBuilder.java:183) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.InjectorBuilder.loadEagerSingletons(InjectorBuilder.java:173) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.InjectorBuilder.injectDynamically(InjectorBuilder.java:161) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.InjectorBuilder.build(InjectorBuilder.java:96) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.Guice.createInjector(Guice.java:96) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.Guice.createInjector(Guice.java:70) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.common.inject.ModulesBuilder.createInjector(ModulesBuilder.java:43) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.node.Node.<init>(Node.java:403) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.node.Node.<init>(Node.java:220) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.bootstrap.Bootstrap$5.<init>(Bootstrap.java:191) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:191) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:286) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:112) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.bootstrap.Elasticsearch.execute(Elasticsearch.java:103) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.cli.SettingCommand.execute(SettingCommand.java:54) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:96) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.cli.Command.main(Command.java:62) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:80) [elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:73) [elasticsearch-5.0.0.jar:5.0.0]\r\nCaused by: java.lang.IllegalArgumentException: Mapper for [_all] conflicts with existing mapping in other types:\r\n[mapper [_all] is used by multiple types. Set update_all_types to true to update [search_analyzer] across all types., mapper [_all] is used by multiple types. Set update_all_types to true to update [search_quote_analyzer] across all types.]\r\n\tat org.elasticsearch.index.mapper.FieldTypeLookup.checkCompatibility(FieldTypeLookup.java:130) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.index.mapper.FieldTypeLookup.copyAndAddAll(FieldTypeLookup.java:94) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:324) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:277) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n\tat org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:123) ~[elasticsearch-5.0.0.jar:5.0.0]\r\n\t... 46 more\r\n```\r\n\r\nI think the problem is related to the _all field being disabled, but I checked the cluster with the migration plugin first and it found no issues.\r\n\r\nHope that helps.\r\n\r\nSimone.\r\n\r\n","closed_by":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"performed_via_github_app":null}