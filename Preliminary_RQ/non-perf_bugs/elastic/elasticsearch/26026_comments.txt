[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/319913940","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-319913940","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":319913940,"node_id":"MDEyOklzc3VlQ29tbWVudDMxOTkxMzk0MA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-08-03T09:12:11Z","updated_at":"2017-08-03T09:12:11Z","author_association":"MEMBER","body":"This is a side-effect of reusing java API objects in the high-level REST client, and it applies also to default index, type and routing value. These parameters are applied at parsing time, when the request comes in as bytes, that go through a parsing phase. In that parsing phase the default values are copied to each items that don't have specific values set. \r\n\r\nWhen providing the items as proper request objects (java API or high-level client), such parameters need to be specified as part of each item directly. The other option would be to make them all settable to the `BulkRequest` (and also `BulkProcessor`) but then when setting an item we would have to check and eventually modify its state, which doesn't seem like a great idea. \r\n\r\nAlso, users have been using the java API this way for a while, hence this should not cause problems and the migration is straight-forward. We should probably consider making these changes if we'll ever move away from sharing classes with Elasticsearch core.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/319916418","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-319916418","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":319916418,"node_id":"MDEyOklzc3VlQ29tbWVudDMxOTkxNjQxOA==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2017-08-03T09:22:32Z","updated_at":"2017-08-03T09:22:32Z","author_association":"MEMBER","body":"> but then when setting an item we would have to check and eventually modify its state, which doesn't seem like a great idea.\r\n\r\nIsn't that the same level of complexity when we have to deal with index name or type? Like the following (untested though):\r\n\r\n```\r\nPOST foo/bar/_bulk\r\n{ \"index\" : { \"_index\": \"test\", \"_type\": \"doc\" } }\r\n{ \"field1\" : \"value1\" }\r\n{ \"index\" : { } }\r\n{ \"field1\" : \"value1\" }\r\n```\r\n\r\n> Also, users have been using the java API this way for a while, hence this should not cause problems and the migration is straight-forward. We should probably consider making these changes if we'll ever move away from sharing classes with Elasticsearch core.\r\n\r\nI agree that this can totally wait. That's more a concern for people like me who are moving from their own made REST Client to the official one as the REST API supports this global `pipeline` parameter. That said, this option does not seem to be documented anywhere. ðŸ˜›  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/319924116","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-319924116","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":319924116,"node_id":"MDEyOklzc3VlQ29tbWVudDMxOTkyNDExNg==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-08-03T09:54:50Z","updated_at":"2017-08-03T09:54:50Z","author_association":"MEMBER","body":"> Isn't that the same level of complexity when we have to deal with index name or type?\r\n\r\nyes, in fact that is not supported by BulkRequest either, as far as I can see.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/319939904","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-319939904","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":319939904,"node_id":"MDEyOklzc3VlQ29tbWVudDMxOTkzOTkwNA==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2017-08-03T11:11:53Z","updated_at":"2017-08-03T11:11:53Z","author_association":"MEMBER","body":"Ha! Good point.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320255101","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-320255101","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":320255101,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDI1NTEwMQ==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2017-08-04T13:54:37Z","updated_at":"2017-08-04T13:58:31Z","author_association":"MEMBER","body":"We discussed about this in Fix-it Friday and we agreed that it would be nice to be able to set a default pipeline/index/routing etc on BulkRequest similar to what the other clients are doing.\r\n\r\nBut now I've read again @javanna's comments I agree that we won't be able to do this with the core classes except by modifying their state (and copy them over) which is really not good. \r\n\r\n> I suggest that we add a field pipeline in BulkRequest class.\r\n\r\nI don't think this is how we should do that. Instead we could add methods in the `RestHighLevelClient` that would allow to pass default values for the index/type/routing/pipeline/etc\r\n\r\n```\r\nRestHighLevelClient.bulk(BulkRequest bulkRequest, String defaultIndex, Header... headers)\r\nRestHighLevelClient.bulk(BulkRequest bulkRequest, String defaultIndex, String defaultType, Header... headers)\r\nRestHighLevelClient.bulk(BulkRequest bulkRequest, String defaultIndex, String defaultType, String defaultRouting, Header... headers)\r\n```\r\nThe values could be passed to the `org.elasticsearch.client.Request.bulk()` method in charge of creating the request query string and body, and additional query parameters could be set there.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320261348","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-320261348","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":320261348,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDI2MTM0OA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-08-04T14:20:07Z","updated_at":"2017-08-04T14:20:07Z","author_association":"MEMBER","body":"What is the problem that we are trying to solve here: ease of use or performance? If it is the latter it should be measured, rather than assuming it is a problem. The transport client always worked like this, although it uses the transport layer rather than the REST layer which is quite a difference. On the ease of use aspect, I agree this is not ideal, yet not a huge issue, something that transport client users got used to. I am against adding specialized methods to the high level client, as it will complicate things and set a precedent for doing the same in similar cases. We should take this into account as a reason to have our own request objects one day, or accept such limitations as a consequence of depending from Elasticsearch core and reusing its classes. It saves us a lot of work, but it does come with a cost.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320284801","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-320284801","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":320284801,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDI4NDgwMQ==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2017-08-04T15:53:28Z","updated_at":"2017-08-04T15:53:28Z","author_association":"MEMBER","body":"> What is the problem that we are trying to solve here?\r\n\r\nTo me, it's the potential network usage overhead. Not really about performance more about network \"costs\".\r\nMight be a non brainer though.\r\n\r\nThe second thing is that I'd love that our Java REST Client exposes all options that we have in the REST API.\r\nI'm fine BTW removing the support for `/index/type/_bulk` and only support `/_bulk` if this is what we want. I'd just like to have that consistent. I mean that the reference guide explains the REST API. I'd expect all same options from a Java (or whatever else) client).\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320296808","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-320296808","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":320296808,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDI5NjgwOA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-08-04T16:44:15Z","updated_at":"2017-08-04T16:44:15Z","author_association":"MEMBER","body":"> I'd just like to have that consistent. I mean that the reference guide explains the REST API. I'd expect all same options from a Java (or whatever else) client).\r\n\r\nI agree with this ideally, but we gave priority to migrating from transport client and reusing existing classes, this is the compromise we made and it's not possible to have 100% consistency at the same time. I think we will encounter more similar issues, and that is kind of expected.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/375392752","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-375392752","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":375392752,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NTM5Mjc1Mg==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2018-03-22T17:32:17Z","updated_at":"2018-04-17T18:28:12Z","author_association":"MEMBER","body":"Thinking more about this, we have encountered a few parameters that are only supported at REST, and the way we dealt with them was to add support for them to the request so that the high-level REST client could expose and use them, although the transport client doesn't do anything with them. We could do the same here by adding index, pipeline etc to `BulkRequest` and document that only the high-level REST client does something with them.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/395347072","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-395347072","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":395347072,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NTM0NzA3Mg==","user":{"login":"koalalam","id":5452429,"node_id":"MDQ6VXNlcjU0NTI0Mjk=","avatar_url":"https://avatars0.githubusercontent.com/u/5452429?v=4","gravatar_id":"","url":"https://api.github.com/users/koalalam","html_url":"https://github.com/koalalam","followers_url":"https://api.github.com/users/koalalam/followers","following_url":"https://api.github.com/users/koalalam/following{/other_user}","gists_url":"https://api.github.com/users/koalalam/gists{/gist_id}","starred_url":"https://api.github.com/users/koalalam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/koalalam/subscriptions","organizations_url":"https://api.github.com/users/koalalam/orgs","repos_url":"https://api.github.com/users/koalalam/repos","events_url":"https://api.github.com/users/koalalam/events{/privacy}","received_events_url":"https://api.github.com/users/koalalam/received_events","type":"User","site_admin":false},"created_at":"2018-06-07T09:00:39Z","updated_at":"2018-06-07T09:00:39Z","author_association":"NONE","body":"While the plan is to depreciate TransportClient and to use High Level REST client instead, any solid roadmap for this enhancement?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/395350183","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-395350183","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":395350183,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NTM1MDE4Mw==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2018-06-07T09:10:54Z","updated_at":"2018-06-07T09:10:54Z","author_association":"MEMBER","body":"Note that transport client is already deprecated. This is something that we want to address, yet not high priority as there is a work-around, meaning that you can provide the info on each inner request like you'd do with the transport client.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/395356872","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-395356872","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":395356872,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NTM1Njg3Mg==","user":{"login":"koalalam","id":5452429,"node_id":"MDQ6VXNlcjU0NTI0Mjk=","avatar_url":"https://avatars0.githubusercontent.com/u/5452429?v=4","gravatar_id":"","url":"https://api.github.com/users/koalalam","html_url":"https://github.com/koalalam","followers_url":"https://api.github.com/users/koalalam/followers","following_url":"https://api.github.com/users/koalalam/following{/other_user}","gists_url":"https://api.github.com/users/koalalam/gists{/gist_id}","starred_url":"https://api.github.com/users/koalalam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/koalalam/subscriptions","organizations_url":"https://api.github.com/users/koalalam/orgs","repos_url":"https://api.github.com/users/koalalam/repos","events_url":"https://api.github.com/users/koalalam/events{/privacy}","received_events_url":"https://api.github.com/users/koalalam/received_events","type":"User","site_admin":false},"created_at":"2018-06-07T09:32:52Z","updated_at":"2018-06-07T09:32:52Z","author_association":"NONE","body":"That will work only if this is not turned on: https://www.elastic.co/guide/en/elasticsearch/reference/6.2/url-access-control.html","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/399895018","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-399895018","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":399895018,"node_id":"MDEyOklzc3VlQ29tbWVudDM5OTg5NTAxOA==","user":{"login":"pushpavanthar","id":8515997,"node_id":"MDQ6VXNlcjg1MTU5OTc=","avatar_url":"https://avatars2.githubusercontent.com/u/8515997?v=4","gravatar_id":"","url":"https://api.github.com/users/pushpavanthar","html_url":"https://github.com/pushpavanthar","followers_url":"https://api.github.com/users/pushpavanthar/followers","following_url":"https://api.github.com/users/pushpavanthar/following{/other_user}","gists_url":"https://api.github.com/users/pushpavanthar/gists{/gist_id}","starred_url":"https://api.github.com/users/pushpavanthar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pushpavanthar/subscriptions","organizations_url":"https://api.github.com/users/pushpavanthar/orgs","repos_url":"https://api.github.com/users/pushpavanthar/repos","events_url":"https://api.github.com/users/pushpavanthar/events{/privacy}","received_events_url":"https://api.github.com/users/pushpavanthar/received_events","type":"User","site_admin":false},"created_at":"2018-06-25T09:46:48Z","updated_at":"2018-06-25T09:46:48Z","author_association":"NONE","body":"@javanna Has anyone already started working on this? If not can I pick this up? ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/399900217","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-399900217","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":399900217,"node_id":"MDEyOklzc3VlQ29tbWVudDM5OTkwMDIxNw==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2018-06-25T10:05:21Z","updated_at":"2018-06-25T10:05:21Z","author_association":"MEMBER","body":"@pushpavanthar nobody is working on this, feel free to take it. Thanks!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/427028897","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-427028897","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":427028897,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNzAyODg5Nw==","user":{"login":"pgomulka","id":11137008,"node_id":"MDQ6VXNlcjExMTM3MDA4","avatar_url":"https://avatars0.githubusercontent.com/u/11137008?v=4","gravatar_id":"","url":"https://api.github.com/users/pgomulka","html_url":"https://github.com/pgomulka","followers_url":"https://api.github.com/users/pgomulka/followers","following_url":"https://api.github.com/users/pgomulka/following{/other_user}","gists_url":"https://api.github.com/users/pgomulka/gists{/gist_id}","starred_url":"https://api.github.com/users/pgomulka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgomulka/subscriptions","organizations_url":"https://api.github.com/users/pgomulka/orgs","repos_url":"https://api.github.com/users/pgomulka/repos","events_url":"https://api.github.com/users/pgomulka/events{/privacy}","received_events_url":"https://api.github.com/users/pgomulka/received_events","type":"User","site_admin":false},"created_at":"2018-10-04T13:57:23Z","updated_at":"2018-10-04T13:58:41Z","author_association":"CONTRIBUTOR","body":"> We could do the same here by adding index, pipeline etc to `BulkRequest` and document that only the high-level REST client does something with them.\r\n\r\n@javanna indeed we could just add these to the bulk request, and then apply defaults when converting in RequestConverters, but index and type are missing it would fail validation per request (IndexRequeset.validation for instance) \r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/428575205","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-428575205","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":428575205,"node_id":"MDEyOklzc3VlQ29tbWVudDQyODU3NTIwNQ==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2018-10-10T13:39:10Z","updated_at":"2018-10-10T13:39:10Z","author_association":"MEMBER","body":"@pgomulka I see the problem, the request gets converted after validation, and validate fails if we don't have all of the items with the required parameters set. Let's add some logic to `RestHighLevelClient#bulk` that goes through the items and sets the default values taken from the main request so that validate is happy? cc @hub-cap ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/429975638","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-429975638","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":429975638,"node_id":"MDEyOklzc3VlQ29tbWVudDQyOTk3NTYzOA==","user":{"login":"hub-cap","id":613352,"node_id":"MDQ6VXNlcjYxMzM1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/613352?v=4","gravatar_id":"","url":"https://api.github.com/users/hub-cap","html_url":"https://github.com/hub-cap","followers_url":"https://api.github.com/users/hub-cap/followers","following_url":"https://api.github.com/users/hub-cap/following{/other_user}","gists_url":"https://api.github.com/users/hub-cap/gists{/gist_id}","starred_url":"https://api.github.com/users/hub-cap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hub-cap/subscriptions","organizations_url":"https://api.github.com/users/hub-cap/orgs","repos_url":"https://api.github.com/users/hub-cap/repos","events_url":"https://api.github.com/users/hub-cap/events{/privacy}","received_events_url":"https://api.github.com/users/hub-cap/received_events","type":"User","site_admin":false},"created_at":"2018-10-15T19:04:17Z","updated_at":"2018-10-15T19:04:17Z","author_association":"CONTRIBUTOR","body":"im ++ to this. Thanks for adding `good first issue`, as this is a great first issue.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/430231936","html_url":"https://github.com/elastic/elasticsearch/issues/26026#issuecomment-430231936","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26026","id":430231936,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMDIzMTkzNg==","user":{"login":"pgomulka","id":11137008,"node_id":"MDQ6VXNlcjExMTM3MDA4","avatar_url":"https://avatars0.githubusercontent.com/u/11137008?v=4","gravatar_id":"","url":"https://api.github.com/users/pgomulka","html_url":"https://github.com/pgomulka","followers_url":"https://api.github.com/users/pgomulka/followers","following_url":"https://api.github.com/users/pgomulka/following{/other_user}","gists_url":"https://api.github.com/users/pgomulka/gists{/gist_id}","starred_url":"https://api.github.com/users/pgomulka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgomulka/subscriptions","organizations_url":"https://api.github.com/users/pgomulka/orgs","repos_url":"https://api.github.com/users/pgomulka/repos","events_url":"https://api.github.com/users/pgomulka/events{/privacy}","received_events_url":"https://api.github.com/users/pgomulka/received_events","type":"User","site_admin":false},"created_at":"2018-10-16T13:12:57Z","updated_at":"2018-10-16T13:18:21Z","author_association":"CONTRIBUTOR","body":"Things that need to be covered:\r\n\r\n1.  mandatory global parameters: index, type. These I think is better to force user to provide during BulkRequest or BulkdProcessor creation. Later when a SubRequest is added without a required parameter, it can be checked and overridden with default global.\r\n2. optional parameter pipeline, routing\r\n3. global parameter should be overridden when the same parameter is provided on a SubRequest\r\n\r\n1 & 2 & 3 should be supported when using with all following styles:\r\n- sync BulkRequest\r\n- async Bulk Request\r\n- BulkProcessor\r\n \r\n\r\n\r\n","performed_via_github_app":null}]