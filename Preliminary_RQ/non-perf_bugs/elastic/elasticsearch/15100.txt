{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/15100","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15100/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15100/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15100/events","html_url":"https://github.com/elastic/elasticsearch/issues/15100","id":119425789,"node_id":"MDU6SXNzdWUxMTk0MjU3ODk=","number":15100,"title":"Elasticsearch 2.1.0 wouldn't start on OSX 10.10.5","user":{"login":"drew-kun","id":10493450,"node_id":"MDQ6VXNlcjEwNDkzNDUw","avatar_url":"https://avatars1.githubusercontent.com/u/10493450?v=4","gravatar_id":"","url":"https://api.github.com/users/drew-kun","html_url":"https://github.com/drew-kun","followers_url":"https://api.github.com/users/drew-kun/followers","following_url":"https://api.github.com/users/drew-kun/following{/other_user}","gists_url":"https://api.github.com/users/drew-kun/gists{/gist_id}","starred_url":"https://api.github.com/users/drew-kun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drew-kun/subscriptions","organizations_url":"https://api.github.com/users/drew-kun/orgs","repos_url":"https://api.github.com/users/drew-kun/repos","events_url":"https://api.github.com/users/drew-kun/events{/privacy}","received_events_url":"https://api.github.com/users/drew-kun/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-11-30T06:14:22Z","updated_at":"2015-12-04T06:10:18Z","closed_at":"2015-11-30T08:28:31Z","author_association":"NONE","active_lock_reason":null,"body":"Hi!\nUsing Elasticsearch 2.1.0 on OSX 10.10.5 Yosemite.\nWhen starting it, getting:\n\n```\n/usr/local/bin/elasticsearch                                                                                                                                                                                                                           \n[2015-11-29 22:11:09,591][INFO ][node                     ] [Samuel Guthrie] version[2.1.0], pid[59155], build[72cd1f1/2015-11-18T22:40:03Z]\n[2015-11-29 22:11:09,591][INFO ][node                     ] [Samuel Guthrie] initializing ...\n[2015-11-29 22:11:09,651][INFO ][plugins                  ] [Samuel Guthrie] loaded [], sites []\n[2015-11-29 22:11:09,668][INFO ][env                      ] [Samuel Guthrie] using [1] data paths, mounts [[/ (/dev/disk1)]], net usable_space [63.2gb], net total_space [464.7gb], spins? [unknown], types [hfs]\n[2015-11-29 22:11:11,352][ERROR][gateway                  ] [Samuel Guthrie] failed to read local state, exiting...\njava.lang.IllegalStateException: unable to upgrade the mappings for the index [.kibana], reason: [Mapper for [version] conflicts with existing mapping in other types:\n[mapper [version] cannot be changed from type [long] to [int]]]\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:335)\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.upgradeIndexMetaData(MetaDataIndexUpgradeService.java:112)\n    at org.elasticsearch.gateway.GatewayMetaState.pre20Upgrade(GatewayMetaState.java:228)\n    at org.elasticsearch.gateway.GatewayMetaState.<init>(GatewayMetaState.java:87)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:422)\n    at org.elasticsearch.common.inject.DefaultConstructionProxyFactory$1.newInstance(DefaultConstructionProxyFactory.java:56)\n    at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:86)\n    at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:104)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:47)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:887)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:43)\n    at org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:59)\n    at org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:46)\n    at org.elasticsearch.common.inject.SingleParameterInjector.inject(SingleParameterInjector.java:42)\n    at org.elasticsearch.common.inject.SingleParameterInjector.getAll(SingleParameterInjector.java:66)\n    at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:85)\n    at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:104)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:47)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:887)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:43)\n    at org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:59)\n    at org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:46)\n    at org.elasticsearch.common.inject.SingleParameterInjector.inject(SingleParameterInjector.java:42)\n    at org.elasticsearch.common.inject.SingleParameterInjector.getAll(SingleParameterInjector.java:66)\n    at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:85)\n    at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:104)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:47)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:887)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:43)\n    at org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:59)\n    at org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:46)\n    at org.elasticsearch.common.inject.InjectorBuilder$1.call(InjectorBuilder.java:201)\n    at org.elasticsearch.common.inject.InjectorBuilder$1.call(InjectorBuilder.java:193)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:880)\n    at org.elasticsearch.common.inject.InjectorBuilder.loadEagerSingletons(InjectorBuilder.java:193)\n    at org.elasticsearch.common.inject.InjectorBuilder.injectDynamically(InjectorBuilder.java:175)\n    at org.elasticsearch.common.inject.InjectorBuilder.build(InjectorBuilder.java:110)\n    at org.elasticsearch.common.inject.Guice.createInjector(Guice.java:93)\n    at org.elasticsearch.common.inject.Guice.createInjector(Guice.java:70)\n    at org.elasticsearch.common.inject.ModulesBuilder.createInjector(ModulesBuilder.java:46)\n    at org.elasticsearch.node.Node.<init>(Node.java:202)\n    at org.elasticsearch.node.Node.<init>(Node.java:129)\n    at org.elasticsearch.node.NodeBuilder.build(NodeBuilder.java:145)\n    at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:178)\n    at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:285)\n    at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:35)\nCaused by: java.lang.IllegalArgumentException: Mapper for [version] conflicts with existing mapping in other types:\n[mapper [version] cannot be changed from type [long] to [int]]\n    at org.elasticsearch.index.mapper.FieldTypeLookup.checkCompatibility(FieldTypeLookup.java:117)\n    at org.elasticsearch.index.mapper.MapperService.checkNewMappersCompatibility(MapperService.java:364)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:315)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:261)\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:329)\n    ... 48 more\n[2015-11-29 22:11:11,416][ERROR][gateway                  ] [Samuel Guthrie] failed to read local state, exiting...\njava.lang.IllegalStateException: unable to upgrade the mappings for the index [.kibana], reason: [Mapper for [version] conflicts with existing mapping in other types:\n[mapper [version] cannot be changed from type [long] to [int]]]\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:335)\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.upgradeIndexMetaData(MetaDataIndexUpgradeService.java:112)\n    at org.elasticsearch.gateway.GatewayMetaState.pre20Upgrade(GatewayMetaState.java:228)\n    at org.elasticsearch.gateway.GatewayMetaState.<init>(GatewayMetaState.java:87)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:422)\n    at org.elasticsearch.common.inject.DefaultConstructionProxyFactory$1.newInstance(DefaultConstructionProxyFactory.java:56)\n    at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:86)\n    at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:104)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:47)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:887)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:43)\n    at org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:59)\n    at org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:46)\n    at org.elasticsearch.common.inject.SingleParameterInjector.inject(SingleParameterInjector.java:42)\n    at org.elasticsearch.common.inject.SingleParameterInjector.getAll(SingleParameterInjector.java:66)\n    at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:85)\n    at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:104)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:47)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:887)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:43)\n    at org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:59)\n    at org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:46)\n    at org.elasticsearch.common.inject.InjectorBuilder$1.call(InjectorBuilder.java:201)\n    at org.elasticsearch.common.inject.InjectorBuilder$1.call(InjectorBuilder.java:193)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:880)\n    at org.elasticsearch.common.inject.InjectorBuilder.loadEagerSingletons(InjectorBuilder.java:193)\n    at org.elasticsearch.common.inject.InjectorBuilder.injectDynamically(InjectorBuilder.java:175)\n    at org.elasticsearch.common.inject.InjectorBuilder.build(InjectorBuilder.java:110)\n    at org.elasticsearch.common.inject.Guice.createInjector(Guice.java:93)\n    at org.elasticsearch.common.inject.Guice.createInjector(Guice.java:70)\n    at org.elasticsearch.common.inject.ModulesBuilder.createInjector(ModulesBuilder.java:46)\n    at org.elasticsearch.node.Node.<init>(Node.java:202)\n    at org.elasticsearch.node.Node.<init>(Node.java:129)\n    at org.elasticsearch.node.NodeBuilder.build(NodeBuilder.java:145)\n    at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:178)\n    at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:285)\n    at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:35)\nCaused by: java.lang.IllegalArgumentException: Mapper for [version] conflicts with existing mapping in other types:\n[mapper [version] cannot be changed from type [long] to [int]]\n    at org.elasticsearch.index.mapper.FieldTypeLookup.checkCompatibility(FieldTypeLookup.java:117)\n    at org.elasticsearch.index.mapper.MapperService.checkNewMappersCompatibility(MapperService.java:364)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:315)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:261)\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:329)\n    ... 39 more\n[2015-11-29 22:11:11,554][ERROR][gateway                  ] [Samuel Guthrie] failed to read local state, exiting...\njava.lang.IllegalStateException: unable to upgrade the mappings for the index [.kibana], reason: [Mapper for [version] conflicts with existing mapping in other types:\n[mapper [version] cannot be changed from type [long] to [int]]]\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:335)\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.upgradeIndexMetaData(MetaDataIndexUpgradeService.java:112)\n    at org.elasticsearch.gateway.GatewayMetaState.pre20Upgrade(GatewayMetaState.java:228)\n    at org.elasticsearch.gateway.GatewayMetaState.<init>(GatewayMetaState.java:87)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:422)\n    at org.elasticsearch.common.inject.DefaultConstructionProxyFactory$1.newInstance(DefaultConstructionProxyFactory.java:56)\n    at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:86)\n    at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:104)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:47)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:887)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:43)\n    at org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:59)\n    at org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:46)\n    at org.elasticsearch.common.inject.InjectorBuilder$1.call(InjectorBuilder.java:201)\n    at org.elasticsearch.common.inject.InjectorBuilder$1.call(InjectorBuilder.java:193)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:880)\n    at org.elasticsearch.common.inject.InjectorBuilder.loadEagerSingletons(InjectorBuilder.java:193)\n    at org.elasticsearch.common.inject.InjectorBuilder.injectDynamically(InjectorBuilder.java:175)\n    at org.elasticsearch.common.inject.InjectorBuilder.build(InjectorBuilder.java:110)\n    at org.elasticsearch.common.inject.Guice.createInjector(Guice.java:93)\n    at org.elasticsearch.common.inject.Guice.createInjector(Guice.java:70)\n    at org.elasticsearch.common.inject.ModulesBuilder.createInjector(ModulesBuilder.java:46)\n    at org.elasticsearch.node.Node.<init>(Node.java:202)\n    at org.elasticsearch.node.Node.<init>(Node.java:129)\n    at org.elasticsearch.node.NodeBuilder.build(NodeBuilder.java:145)\n    at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:178)\n    at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:285)\n    at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:35)\nCaused by: java.lang.IllegalArgumentException: Mapper for [version] conflicts with existing mapping in other types:\n[mapper [version] cannot be changed from type [long] to [int]]\n    at org.elasticsearch.index.mapper.FieldTypeLookup.checkCompatibility(FieldTypeLookup.java:117)\n    at org.elasticsearch.index.mapper.MapperService.checkNewMappersCompatibility(MapperService.java:364)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:315)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:261)\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:329)\n    ... 30 more\nException in thread \"main\" java.lang.IllegalStateException: unable to upgrade the mappings for the index [.kibana], reason: [Mapper for [version] conflicts with existing mapping in other types:\n[mapper [version] cannot be changed from type [long] to [int]]]\nLikely root cause: java.lang.IllegalArgumentException: Mapper for [version] conflicts with existing mapping in other types:\n[mapper [version] cannot be changed from type [long] to [int]]\n    at org.elasticsearch.index.mapper.FieldTypeLookup.checkCompatibility(FieldTypeLookup.java:117)\n    at org.elasticsearch.index.mapper.MapperService.checkNewMappersCompatibility(MapperService.java:364)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:315)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:261)\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:329)\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.upgradeIndexMetaData(MetaDataIndexUpgradeService.java:112)\n    at org.elasticsearch.gateway.GatewayMetaState.pre20Upgrade(GatewayMetaState.java:228)\n    at org.elasticsearch.gateway.GatewayMetaState.<init>(GatewayMetaState.java:87)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:422)\n    at <<<guice>>>\n    at org.elasticsearch.node.Node.<init>(Node.java:202)\n    at org.elasticsearch.node.Node.<init>(Node.java:129)\n    at org.elasticsearch.node.NodeBuilder.build(NodeBuilder.java:145)\n    at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:178)\n    at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:285)\n    at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:35)\n```\n\nPlease help!\nThank you!\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}