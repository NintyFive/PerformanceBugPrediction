{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/40204","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40204/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40204/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40204/events","html_url":"https://github.com/elastic/elasticsearch/issues/40204","id":422713375,"node_id":"MDU6SXNzdWU0MjI3MTMzNzU=","number":40204,"title":"elasticsearch rest client can not send request success after elasticsearch node restart","user":{"login":"saiergong","id":4198386,"node_id":"MDQ6VXNlcjQxOTgzODY=","avatar_url":"https://avatars1.githubusercontent.com/u/4198386?v=4","gravatar_id":"","url":"https://api.github.com/users/saiergong","html_url":"https://github.com/saiergong","followers_url":"https://api.github.com/users/saiergong/followers","following_url":"https://api.github.com/users/saiergong/following{/other_user}","gists_url":"https://api.github.com/users/saiergong/gists{/gist_id}","starred_url":"https://api.github.com/users/saiergong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saiergong/subscriptions","organizations_url":"https://api.github.com/users/saiergong/orgs","repos_url":"https://api.github.com/users/saiergong/repos","events_url":"https://api.github.com/users/saiergong/events{/privacy}","received_events_url":"https://api.github.com/users/saiergong/received_events","type":"User","site_admin":false},"labels":[{"id":407508641,"node_id":"MDU6TGFiZWw0MDc1MDg2NDE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Java%20Low%20Level%20REST%20Client","name":":Core/Features/Java Low Level REST Client","color":"0e8a16","default":false,"description":"Minimal dependencies Java Client for Elasticsearch"},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2019-03-19T12:49:42Z","updated_at":"2019-05-15T12:26:55Z","closed_at":"2019-05-15T12:26:54Z","author_association":"NONE","active_lock_reason":null,"body":"<!-- Bug report -->\r\n\r\nES version: 6.6.2\r\nES rest client version:6.6.2\r\njvm version:1.8.0_112\r\n\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\ni use es rest client to send bulk request to es, and i use sniffer to detect my es cluster nodes.  At begin, everything is ok, but after i restart some of my es nodes, i can not send request to es at all.\r\n\r\n**Steps to reproduce**:\r\n 1. start my application, it will send bulk request to es periodically\r\n 2. shutdown two of es cluster nodes, wait for a minute. My es cluster has only three nodes, and the mimum master nodes is set to 2. So after shutdown two nodes, the cluster has no master.\r\n 3. restart the es nodes\r\n 4. my application can not send request at all.\r\n\r\n\r\n **debug logs**\r\n```\r\n[DEBUG][2019-03-19 20:31:27,939][client.MainClientExec:121] [exchange: 605] start execution\r\n[DEBUG][2019-03-19 20:31:27,939][protocol.RequestAddCookies:122] CookieSpec selected: default\r\n[DEBUG][2019-03-19 20:31:27,940][protocol.RequestAuthCache:130] Re-using cached 'basic' auth scheme for http://x.x.x.x:9200\r\n[DEBUG][2019-03-19 20:31:27,940][protocol.RequestAuthCache:144] No credentials for preemptive authentication\r\n[DEBUG][2019-03-19 20:31:27,940][client.InternalHttpAsyncClient:352] [exchange: 605] Request connection for {}->http://x.x.x.x:9200\r\n[DEBUG][2019-03-19 20:31:27,940][conn.PoolingNHttpClientConnectionManager:250] Connection request: [route: {}->http://x.x.x.x:9200][total kept alive: 0; route allocated: 0 of 10; total allocated: 0 of 30]\r\n[DEBUG][2019-03-19 20:31:29,893][client.MainClientExec:121] [exchange: 606] start execution\r\n[DEBUG][2019-03-19 20:31:29,893][protocol.RequestAddCookies:122] CookieSpec selected: default\r\n[DEBUG][2019-03-19 20:31:29,893][protocol.RequestAuthCache:130] Re-using cached 'basic' auth scheme for http://x.x.x.x:9200\r\n[DEBUG][2019-03-19 20:31:29,893][protocol.RequestAuthCache:144] No credentials for preemptive authentication\r\n[DEBUG][2019-03-19 20:31:29,893][client.InternalHttpAsyncClient:352] [exchange: 606] Request connection for {}->http://x.x.x.x:9200\r\n[DEBUG][2019-03-19 20:31:29,894][conn.PoolingNHttpClientConnectionManager:250] Connection request: [route: {}->http://x.x.x.x:9200][total kept alive: 0; route allocated: 0 of 10; total allocated: 0 of 30]\r\n[ERROR][2019-03-19 20:31:31,893][is.ESRecordWriter:85] retry bulk request to es failed, error (java.io.IOException: listener timeout after waiting for [60000] ms), retry count (4).\r\n[ERROR][2019-03-19 20:31:31,893][is.ESRecordWriter:86] \r\njava.io.IOException: listener timeout after waiting for [60000] ms\r\n\tat org.elasticsearch.client.RestClient$SyncResponseListener.get(RestClient.java:908)\r\n\tat org.elasticsearch.client.RestClient.performRequest(RestClient.java:229)\r\n\tat com.is.ESRecordWriter$2.onFailure(ESRecordWriter.java:81)\r\n\tat org.elasticsearch.client.RestClient$FailureTrackingResponseListener.onDefinitiveFailure(RestClient.java:853)\r\n\tat org.elasticsearch.client.RestClient$1.retryIfPossible(RestClient.java:591)\r\n\tat org.elasticsearch.client.RestClient$1.failed(RestClient.java:569)\r\n\tat org.apache.http.concurrent.BasicFuture.failed(BasicFuture.java:134)\r\n\tat org.apache.http.impl.nio.client.AbstractClientExchangeHandler.failed(AbstractClientExchangeHandler.java:419)\r\n\tat org.apache.http.nio.protocol.HttpAsyncRequestExecutor.timeout(HttpAsyncRequestExecutor.java:375)\r\n\tat org.apache.http.impl.nio.client.InternalRequestExecutor.timeout(InternalRequestExecutor.java:116)\r\n\tat org.apache.http.impl.nio.client.InternalIODispatch.onTimeout(InternalIODispatch.java:92)\r\n\tat org.apache.http.impl.nio.client.InternalIODispatch.onTimeout(InternalIODispatch.java:39)\r\n\tat org.apache.http.impl.nio.reactor.AbstractIODispatch.timeout(AbstractIODispatch.java:175)\r\n\tat org.apache.http.impl.nio.reactor.BaseIOReactor.sessionTimedOut(BaseIOReactor.java:263)\r\n\tat org.apache.http.impl.nio.reactor.AbstractIOReactor.timeoutCheck(AbstractIOReactor.java:492)\r\n\tat org.apache.http.impl.nio.reactor.BaseIOReactor.validate(BaseIOReactor.java:213)\r\n\tat org.apache.http.impl.nio.reactor.AbstractIOReactor.execute(AbstractIOReactor.java:280)\r\n\tat org.apache.http.impl.nio.reactor.BaseIOReactor.execute(BaseIOReactor.java:104)\r\n\tat org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker.run(AbstractMultiworkerIOReactor.java:588)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\n```\r\nThe logs above will be repeated all the time.\r\n\r\n**my application code**\r\n```\r\nSniffOnFailureListener sniffOnFailureListener =\r\n                new SniffOnFailureListener();\r\n        restClient = RestClient.builder(\r\n                new HttpHost(seedNode, 9200, \"http\"))\r\n                .setNodeSelector(NodeSelector.SKIP_DEDICATED_MASTERS)\r\n                .setRequestConfigCallback(\r\n                        new RestClientBuilder.RequestConfigCallback() {\r\n                            @Override\r\n                            public RequestConfig.Builder customizeRequestConfig(RequestConfig.Builder builder) {\r\n                                return builder.setSocketTimeout(10000)\r\n                                        .setConnectTimeout(10000)\r\n                                        .setConnectionRequestTimeout(10000);\r\n                            }\r\n                        }\r\n                )\r\n                .setFailureListener(sniffOnFailureListener)\r\n                .setMaxRetryTimeoutMillis(60000)\r\n                .build();\r\n\r\n        sniffer = Sniffer.builder(restClient)\r\n                .setSniffIntervalMillis(60000)\r\n                .setSniffAfterFailureDelayMillis(30000)\r\n                .build();\r\n        sniffOnFailureListener.setSniffer(sniffer);\r\n```\r\n\r\n","closed_by":{"login":"ebadyano","id":26631211,"node_id":"MDQ6VXNlcjI2NjMxMjEx","avatar_url":"https://avatars0.githubusercontent.com/u/26631211?v=4","gravatar_id":"","url":"https://api.github.com/users/ebadyano","html_url":"https://github.com/ebadyano","followers_url":"https://api.github.com/users/ebadyano/followers","following_url":"https://api.github.com/users/ebadyano/following{/other_user}","gists_url":"https://api.github.com/users/ebadyano/gists{/gist_id}","starred_url":"https://api.github.com/users/ebadyano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ebadyano/subscriptions","organizations_url":"https://api.github.com/users/ebadyano/orgs","repos_url":"https://api.github.com/users/ebadyano/repos","events_url":"https://api.github.com/users/ebadyano/events{/privacy}","received_events_url":"https://api.github.com/users/ebadyano/received_events","type":"User","site_admin":false},"performed_via_github_app":null}