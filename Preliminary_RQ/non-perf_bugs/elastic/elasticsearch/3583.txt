{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3583","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3583/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3583/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3583/events","html_url":"https://github.com/elastic/elasticsearch/issues/3583","id":18617468,"node_id":"MDU6SXNzdWUxODYxNzQ2OA==","number":3583,"title":"Prevent filtered nodes to change index settings if nodes can't store shards of this index","user":{"login":"raf64flo","id":133268,"node_id":"MDQ6VXNlcjEzMzI2OA==","avatar_url":"https://avatars2.githubusercontent.com/u/133268?v=4","gravatar_id":"","url":"https://api.github.com/users/raf64flo","html_url":"https://github.com/raf64flo","followers_url":"https://api.github.com/users/raf64flo/followers","following_url":"https://api.github.com/users/raf64flo/following{/other_user}","gists_url":"https://api.github.com/users/raf64flo/gists{/gist_id}","starred_url":"https://api.github.com/users/raf64flo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/raf64flo/subscriptions","organizations_url":"https://api.github.com/users/raf64flo/orgs","repos_url":"https://api.github.com/users/raf64flo/repos","events_url":"https://api.github.com/users/raf64flo/events{/privacy}","received_events_url":"https://api.github.com/users/raf64flo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2013-08-27T16:12:18Z","updated_at":"2014-02-13T08:40:40Z","closed_at":"2014-02-13T08:40:40Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\n\nHere is a usecase I've encountered: two or more organizations want to allow one to query onto their respective data using ElasticSearch features. Each organization need to keep control on the nodes it hosts and on the related data.\n\nPartial solution: an organization maintains an index containing its own data, this index is stored on nodes only hosted by the organization using route awareness based on IP filters (`\"index.routing.allocation.exclude._ip\"`).\n\nHTTP modules can be disabled for avoiding changes of settings using REST API, but any application can connect in the cluster via Transport module and update any index setting.\n\nSo, in order to allow such usecase, the only missing feature I see is to add a setting to an index which would prevent any non-allocatable node from changing the index configuration.\n\nI mean by non-allocatable node any node filtered by `\"index.routing.allocation.*\"`\n\nIs it conceivable?\n","closed_by":{"login":"raf64flo","id":133268,"node_id":"MDQ6VXNlcjEzMzI2OA==","avatar_url":"https://avatars2.githubusercontent.com/u/133268?v=4","gravatar_id":"","url":"https://api.github.com/users/raf64flo","html_url":"https://github.com/raf64flo","followers_url":"https://api.github.com/users/raf64flo/followers","following_url":"https://api.github.com/users/raf64flo/following{/other_user}","gists_url":"https://api.github.com/users/raf64flo/gists{/gist_id}","starred_url":"https://api.github.com/users/raf64flo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/raf64flo/subscriptions","organizations_url":"https://api.github.com/users/raf64flo/orgs","repos_url":"https://api.github.com/users/raf64flo/repos","events_url":"https://api.github.com/users/raf64flo/events{/privacy}","received_events_url":"https://api.github.com/users/raf64flo/received_events","type":"User","site_admin":false},"performed_via_github_app":null}