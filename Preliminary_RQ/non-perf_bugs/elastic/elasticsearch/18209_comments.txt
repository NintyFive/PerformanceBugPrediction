[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217865909","html_url":"https://github.com/elastic/elasticsearch/issues/18209#issuecomment-217865909","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18209","id":217865909,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzg2NTkwOQ==","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","site_admin":false},"created_at":"2016-05-09T13:37:01Z","updated_at":"2016-05-09T13:37:01Z","author_association":"CONTRIBUTOR","body":"This is a good idea!  I'll try this, and test indexing perf.  I think it should give smaller terms dict and shouldn't impact lookup performance, except maybe from more free RAM for the OS.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217874395","html_url":"https://github.com/elastic/elasticsearch/issues/18209#issuecomment-217874395","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18209","id":217874395,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzg3NDM5NQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-05-09T14:08:17Z","updated_at":"2016-05-09T14:08:17Z","author_association":"CONTRIBUTOR","body":"For the record I was running simulations of disk space savings related to #18154 and found out that this change would reduce disk usage for the uid field by about 30% for a single node cluster (so there is a single mac address) that indexes about 100 docs per second (the rate is important as higher rates mean that timestamps have longer common prefixes). Also the size reduction is similar to the disk overhead of having points and doc values enabled on a float field that stores random values, so these savings should be noticeable for applications that store small documents.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217877566","html_url":"https://github.com/elastic/elasticsearch/issues/18209#issuecomment-217877566","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18209","id":217877566,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzg3NzU2Ng==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-05-09T14:19:31Z","updated_at":"2016-05-09T14:19:31Z","author_association":"CONTRIBUTOR","body":"We could also go further and interleave the bytes of the timestamp and the sequence number.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/217980595","html_url":"https://github.com/elastic/elasticsearch/issues/18209#issuecomment-217980595","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18209","id":217980595,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzk4MDU5NQ==","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","site_admin":false},"created_at":"2016-05-09T20:32:28Z","updated_at":"2016-05-09T20:32:28Z","author_association":"CONTRIBUTOR","body":"I simulated \"100 docs / sec\" by forcing the timestamp to advance by 10 msec on each ID on current master:\n\n```\ndiff --git a/core/src/main/java/org/elasticsearch/common/TimeBasedUUIDGenerator.java b/core/src/main/java/org/elasticsearch/common/TimeBasedUUIDGenerator.java\nindex d1a22a1..2422399 100644\n--- a/core/src/main/java/org/elasticsearch/common/TimeBasedUUIDGenerator.java\n+++ b/core/src/main/java/org/elasticsearch/common/TimeBasedUUIDGenerator.java\n@@ -57,7 +57,9 @@ class TimeBasedUUIDGenerator implements UUIDGenerator {\n             // Don't let timestamp go backwards, at least \"on our watch\" (while this JVM is running).  We are still vulnerable if we are\n             // shut down, clock goes backwards, and we restart... for this we randomize the sequenceNumber on init to decrease chance of\n             // collision:\n-            timestamp = Math.max(lastTimestamp, timestamp);\n+            // nocommit\n+            timestamp = Math.max(lastTimestamp+10, timestamp);\n+            //timestamp = Math.max(lastTimestamp, timestamp);\n\n             if (sequenceId == 0) {\n                 // Always force the clock to increment whenever sequence number is 0, in case we have a long time-slip backwards:\n```\n\nI ran that 6 times and got these total docs/sec:\n\nmike@beast2:/l/es.dev$ grep \"Total docs/sec\" before*.log\nbefore1.log:Total docs/sec: 54424.1\nbefore2.log:Total docs/sec: 54471.2\nbefore3.log:Total docs/sec: 53751.9\nbefore4.log:Total docs/sec: 54300.0\nbefore5.log:Total docs/sec: 54890.4\nbefore6.log:Total docs/sec: 54452.5\n\nand index sizes:\n\nmike@beast2:/l/es.dev$ grep \"index size\" before*.log\nbefore1.log:index size 4310740 KB\nbefore2.log:index size 4305668 KB\nbefore3.log:index size 4307560 KB\nbefore4.log:index size 4312356 KB\nbefore5.log:index size 4311084 KB\nbefore6.log:index size 4300544 KB\n\nThen I tried this patch, swapping the MAC address and timestamp, and also simulating \"100 docs/sec\":\n\n```\ndiff --git a/core/src/main/java/org/elasticsearch/common/TimeBasedUUIDGenerator.java b/core/src/main/java/org/elasticsearch/common/TimeBasedUUIDGenerator.java\nindex d1a22a1..7f30067 100644\n--- a/core/src/main/java/org/elasticsearch/common/TimeBasedUUIDGenerator.java\n+++ b/core/src/main/java/org/elasticsearch/common/TimeBasedUUIDGenerator.java\n@@ -57,7 +57,9 @@ class TimeBasedUUIDGenerator implements UUIDGenerator {\n             // Don't let timestamp go backwards, at least \"on our watch\" (while this JVM is running).  We are still vulnerable if we are\n             // shut down, clock goes backwards, and we restart... for this we randomize the sequenceNumber on init to decrease chance of\n             // collision:\n-            timestamp = Math.max(lastTimestamp, timestamp);\n+            // nocommit\n+            //timestamp = Math.max(lastTimestamp, timestamp);\n+            timestamp = Math.max(lastTimestamp+10, timestamp);\n\n             if (sequenceId == 0) {\n                 // Always force the clock to increment whenever sequence number is 0, in case we have a long time-slip backwards:\n@@ -70,10 +72,16 @@ class TimeBasedUUIDGenerator implements UUIDGenerator {\n         final byte[] uuidBytes = new byte[15];\n\n         // Only use lower 6 bytes of the timestamp (this will suffice beyond the year 10000):\n-        putLong(uuidBytes, timestamp, 0, 6);\n+        //putLong(uuidBytes, timestamp, 0, 6);\n\n         // MAC address adds 6 bytes:\n-        System.arraycopy(SECURE_MUNGED_ADDRESS, 0, uuidBytes, 6, SECURE_MUNGED_ADDRESS.length);\n+        //System.arraycopy(SECURE_MUNGED_ADDRESS, 0, uuidBytes, 6, SECURE_MUNGED_ADDRESS.length);\n+\n+        // Only use lower 6 bytes of the timestamp (this will suffice beyond the year 10000):\n+        putLong(uuidBytes, timestamp, 6, 6);\n+\n+        // MAC address adds 6 bytes:\n+        System.arraycopy(SECURE_MUNGED_ADDRESS, 0, uuidBytes, 0, SECURE_MUNGED_ADDRESS.length);\n\n         // Sequence number adds 3 bytes:\n         putLong(uuidBytes, sequenceId, 12, 3);\n```\n\nmike@beast2:/l/es.dev$ grep \"Total docs/sec\" after*.log\nafter1.log:Total docs/sec: 53288.5\nafter2.log:Total docs/sec: 53840.9\nafter3.log:Total docs/sec: 54685.0\nafter4.log:Total docs/sec: 52242.2\nafter5.log:Total docs/sec: 54789.3\nafter6.log:Total docs/sec: 54465.0\nmike@beast2:/l/es.dev$\n\nand index sizes:\n\nmike@beast2:/l/es.dev$ grep \"index size\" after*.log\nafter1.log:index size 4232136 KB\nafter2.log:index size 4231428 KB\nafter3.log:index size 4242724 KB\nafter4.log:index size 4232464 KB\nafter5.log:index size 4221880 KB\nafter6.log:index size 4227432 KB\n\nResults are noisy but it seems like the change may slow indexing some?  Thinking about it more, I think those added 9 byte (after the 6 MAC address bytes are base64 encoded) common prefix adds a non-trivial cost because on each ID lookup the FST must walk each of those 9 bytes before getting to the \"interesting\" bytes (that change across documents).  We could maybe optimize such cases, by having the FST record its common prefix, and doing a (faster) check on each incoming ID.\n\nWe could maybe do the opposite, and \"rotate\" the timestamp so that the leading bytes change more frequently (it's a long value, milliseconds).  This would make a larger index but maybe faster lookups.\n\nIt did make the overall index maybe ~2.8% smaller.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/218067875","html_url":"https://github.com/elastic/elasticsearch/issues/18209#issuecomment-218067875","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18209","id":218067875,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODA2Nzg3NQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-05-10T06:13:36Z","updated_at":"2016-05-10T06:13:36Z","author_association":"CONTRIBUTOR","body":"This is interesting. This probably also means that prepending the type in the uid is a mistake.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/218087238","html_url":"https://github.com/elastic/elasticsearch/issues/18209#issuecomment-218087238","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18209","id":218087238,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODA4NzIzOA==","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","site_admin":false},"created_at":"2016-05-10T08:07:54Z","updated_at":"2016-05-10T08:07:54Z","author_association":"CONTRIBUTOR","body":"> This probably also means that prepending the type in the uid is a mistake.\n\nHmm, indeed.\n\nMust we even prefix `type#` in the auto-id case?  I guess at read time there are places where we expect to parse a `_uid` value back into its type and id?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/218088249","html_url":"https://github.com/elastic/elasticsearch/issues/18209#issuecomment-218088249","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18209","id":218088249,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODA4ODI0OQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-05-10T08:12:52Z","updated_at":"2016-05-10T08:12:52Z","author_association":"CONTRIBUTOR","body":"It looks tricky to me to remove the type from the uid without removing the concept of type entirely. However something we could explore would be to put the type in the end of the uid in the auto-generated case (or in all cases actually) and/or to make mappings generate unique ids for each type so that we can use these (short) ids in the uids rather than the actual type names.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/218203699","html_url":"https://github.com/elastic/elasticsearch/issues/18209#issuecomment-218203699","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18209","id":218203699,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODIwMzY5OQ==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2016-05-10T15:55:51Z","updated_at":"2016-05-10T15:55:51Z","author_association":"MEMBER","body":"Obligatory stats nerd interjection: the difference in the two indexing speeds is not statistically significant.  Two-tailed, unpaired, unequal variance t-test gives a **p = 0.2889**, which is greater than the standard 0.05 threshold.\n\n![screen shot 2016-05-10 at 11 38 16 am](https://cloud.githubusercontent.com/assets/1224228/15152709/43070ec8-16a4-11e6-8bbb-5a2c1c7352f3.png)\n\nThe change in index size is statistically significant though:  **p = 5.773 x 10<sup>-09</sup>**\n\n![screen shot 2016-05-10 at 11 44 54 am](https://cloud.githubusercontent.com/assets/1224228/15152875/fbfc3048-16a4-11e6-9c31-4f4262963940.png)\n\nObviously this is on a small sample size, so the indexing speed significance may change if more samples are added (a true mean shift, or an increase in variance, etc).  But from the current data I don't think we can draw any conclusions.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/218238302","html_url":"https://github.com/elastic/elasticsearch/issues/18209#issuecomment-218238302","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18209","id":218238302,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODIzODMwMg==","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","site_admin":false},"created_at":"2016-05-10T17:56:07Z","updated_at":"2016-05-10T17:56:07Z","author_association":"CONTRIBUTOR","body":"Aha, thank you @polyfractal.  So we really can't conclude there is any meaningful difference yet ... too much noise in the measurement.\n\nI'll run it some more times :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/218413869","html_url":"https://github.com/elastic/elasticsearch/issues/18209#issuecomment-218413869","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18209","id":218413869,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODQxMzg2OQ==","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","site_admin":false},"created_at":"2016-05-11T09:53:39Z","updated_at":"2016-05-11T09:53:39Z","author_association":"CONTRIBUTOR","body":"OK I ran some more trials ... maybe @polyfractal you could run the statistical analysis again?  Thanks!\n\nBefore docs/sec (now 20 trials):\n\n```\n54424.1\n54803.8\n56129.1\n53756.7\n53817.1\n54910.2\n53056.8\n53524.4\n52600.5\n53839.0\n52737.8\n54471.2\n54252.8\n53751.9\n54300.0\n54890.4\n54452.5\n52735.3\n53426.8\n54348.3\n```\n\nAfter docs/sec:\n\n```\n53288.5\n53578.1\n52666.7\n52669.9\n51953.5\n52132.6\n54437.0\n53650.7\n52747.6\n53737.2\n51327.8\n53840.9\n53180.1\n54685.0\n52242.2\n54789.3\n54465.0\n53210.0\n54774.2\n53202.8\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/218452403","html_url":"https://github.com/elastic/elasticsearch/issues/18209#issuecomment-218452403","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18209","id":218452403,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODQ1MjQwMw==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2016-05-11T13:03:18Z","updated_at":"2016-05-11T13:03:18Z","author_association":"MEMBER","body":"Ok, now it's statistically significant :)\n\np = 0.02701\n\n![screen shot 2016-05-11 at 8 59 50 am](https://cloud.githubusercontent.com/assets/1224228/15181748/e3108f54-1756-11e6-8944-94fe3a7d6ec1.png)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/218470313","html_url":"https://github.com/elastic/elasticsearch/issues/18209#issuecomment-218470313","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18209","id":218470313,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODQ3MDMxMw==","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","site_admin":false},"created_at":"2016-05-11T14:08:20Z","updated_at":"2016-05-11T14:08:20Z","author_association":"CONTRIBUTOR","body":"OK, too bad :)  Thanks @polyfractal.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/219075887","html_url":"https://github.com/elastic/elasticsearch/issues/18209#issuecomment-219075887","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18209","id":219075887,"node_id":"MDEyOklzc3VlQ29tbWVudDIxOTA3NTg4Nw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-05-13T15:24:51Z","updated_at":"2016-05-13T15:24:51Z","author_association":"CONTRIBUTOR","body":"I'm closing then. Maybe we should save space by better compressing suffixes instead (https://issues.apache.org/jira/browse/LUCENE-4702).\n","performed_via_github_app":null}]