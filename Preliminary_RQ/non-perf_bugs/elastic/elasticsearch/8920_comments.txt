[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/67139153","html_url":"https://github.com/elastic/elasticsearch/issues/8920#issuecomment-67139153","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8920","id":67139153,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTM5MTUz","user":{"login":"alexksikes","id":43475,"node_id":"MDQ6VXNlcjQzNDc1","avatar_url":"https://avatars2.githubusercontent.com/u/43475?v=4","gravatar_id":"","url":"https://api.github.com/users/alexksikes","html_url":"https://github.com/alexksikes","followers_url":"https://api.github.com/users/alexksikes/followers","following_url":"https://api.github.com/users/alexksikes/following{/other_user}","gists_url":"https://api.github.com/users/alexksikes/gists{/gist_id}","starred_url":"https://api.github.com/users/alexksikes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexksikes/subscriptions","organizations_url":"https://api.github.com/users/alexksikes/orgs","repos_url":"https://api.github.com/users/alexksikes/repos","events_url":"https://api.github.com/users/alexksikes/events{/privacy}","received_events_url":"https://api.github.com/users/alexksikes/received_events","type":"User","site_admin":false},"created_at":"2014-12-16T10:25:58Z","updated_at":"2014-12-16T10:25:58Z","author_association":"CONTRIBUTOR","body":"What happens under the hood here is that the keyword \"team\" is being selected, while \"toto\" is disregarded. So a query of the form \"text: team\" is created from which all terms must match (percent_terms_to_match == 1), and therefore the document with text \"football team\" is returned. \n\nYou have to keep in mind that `percent_terms_to_match` (renamed `minimum_should_match` in future release) is meant to control the number of terms that must match in the resulting boolean query, so after the query has been created. To control the actual query generation, you should look into: `max_query_terms`, `fields`, `min_term_freq`, `min_doc_freq`, `max_doc_freq`, `min_word_length`, `max_word_length`, `stop_words` or `analyzer`.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/67155561","html_url":"https://github.com/elastic/elasticsearch/issues/8920#issuecomment-67155561","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8920","id":67155561,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTU1NTYx","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"created_at":"2014-12-16T12:57:03Z","updated_at":"2014-12-16T12:57:03Z","author_association":"NONE","body":"So why is \"toto\" disregarded in my example. I want to keep every terms. \nI've set :\n`\"min_term_freq\": 0`  `\"max_query_terms\": 50`  `\"min_doc_freq\": 0`  `\"min_word_length\": 0` \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/67169525","html_url":"https://github.com/elastic/elasticsearch/issues/8920#issuecomment-67169525","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8920","id":67169525,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTY5NTI1","user":{"login":"alexksikes","id":43475,"node_id":"MDQ6VXNlcjQzNDc1","avatar_url":"https://avatars2.githubusercontent.com/u/43475?v=4","gravatar_id":"","url":"https://api.github.com/users/alexksikes","html_url":"https://github.com/alexksikes","followers_url":"https://api.github.com/users/alexksikes/followers","following_url":"https://api.github.com/users/alexksikes/following{/other_user}","gists_url":"https://api.github.com/users/alexksikes/gists{/gist_id}","starred_url":"https://api.github.com/users/alexksikes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexksikes/subscriptions","organizations_url":"https://api.github.com/users/alexksikes/orgs","repos_url":"https://api.github.com/users/alexksikes/repos","events_url":"https://api.github.com/users/alexksikes/events{/privacy}","received_events_url":"https://api.github.com/users/alexksikes/received_events","type":"User","site_admin":false},"created_at":"2014-12-16T14:48:11Z","updated_at":"2014-12-16T14:48:11Z","author_association":"CONTRIBUTOR","body":"Good question, let's go back a bit to how MLT works. We should probably clarify the documentation here as well. Here is what happens:\n\n1) You specify as an input a piece of text and/or some documents with their _index, _type and _id.\n\n2) After analysis of the text or of the text from the docs, the \"best\" terms, mostly the ones with highest tf-idf, are selected. So in your example, from the document collection, only \"team\" would be retained because it has a document frequency of 1. But \"toto\" is none existent in any document, so true we could still keep it, but because it would not match anything, then the algorithm simply skips it. \n\nNow I agree that this could be confusing especially because `min_doc_freq` is set to `0`. But the idea here is to come up with a good representative query that would yield the best \"similar\" types of documents. And something which matches nothing, obviously isn't such a good candidate. So you have to think of `min_doc_freq: 0` as saying \"consider all existing terms in the collection disregarding document frequency\".\n\n3) Finally, the query is formed according to some chosen set of parameters. Mostly a disjunctive query of `max_query_terms` with `percent_terms_to_match` must clauses and an exclude clause for the queried document itself (if you have inputted a document instead of just some text).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/67173762","html_url":"https://github.com/elastic/elasticsearch/issues/8920#issuecomment-67173762","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8920","id":67173762,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTczNzYy","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"created_at":"2014-12-16T15:13:10Z","updated_at":"2014-12-16T15:13:10Z","author_association":"NONE","body":"Ok thanks a lot for your answer.\nYou could probably add a parameter to skip or keep none existent terms. In my use case, I use ES to classify object by a field, so I've indexed all different values of this field, and so I want to keep top \"classes\" (hits), but only if they match well. So if a term is none existent in any documents, the percent_terms_to_match is not relevant for my use case. I think I have to write by myself the bool query...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/67182726","html_url":"https://github.com/elastic/elasticsearch/issues/8920#issuecomment-67182726","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8920","id":67182726,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTgyNzI2","user":{"login":"alexksikes","id":43475,"node_id":"MDQ6VXNlcjQzNDc1","avatar_url":"https://avatars2.githubusercontent.com/u/43475?v=4","gravatar_id":"","url":"https://api.github.com/users/alexksikes","html_url":"https://github.com/alexksikes","followers_url":"https://api.github.com/users/alexksikes/followers","following_url":"https://api.github.com/users/alexksikes/following{/other_user}","gists_url":"https://api.github.com/users/alexksikes/gists{/gist_id}","starred_url":"https://api.github.com/users/alexksikes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexksikes/subscriptions","organizations_url":"https://api.github.com/users/alexksikes/orgs","repos_url":"https://api.github.com/users/alexksikes/repos","events_url":"https://api.github.com/users/alexksikes/events{/privacy}","received_events_url":"https://api.github.com/users/alexksikes/received_events","type":"User","site_admin":false},"created_at":"2014-12-16T16:05:10Z","updated_at":"2014-12-16T16:05:10Z","author_association":"CONTRIBUTOR","body":"What you can always do is call on the [Term Vectors API](http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-termvectors.html#docs-termvectors) with artificial docs feature to retrieve the terms and their statistics. Then manually pick the terms as you like to form the query to be submitted.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/67186329","html_url":"https://github.com/elastic/elasticsearch/issues/8920#issuecomment-67186329","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8920","id":67186329,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTg2MzI5","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"created_at":"2014-12-16T16:24:41Z","updated_at":"2014-12-16T16:24:41Z","author_association":"NONE","body":"Ok thanks for this advice.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/67460494","html_url":"https://github.com/elastic/elasticsearch/issues/8920#issuecomment-67460494","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8920","id":67460494,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NDYwNDk0","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"created_at":"2014-12-18T09:22:18Z","updated_at":"2014-12-18T09:22:18Z","author_association":"NONE","body":"It's still confusing for me:\nIf I add another document:\n\n```\ncurl -XPOST localhost:9200/test/type?pretty=1 -d '{\n    \"text\" : \"toto\"\n}'\n```\n\nnow it returns both documents\n\n```\ncurl 'localhost:9200/test/type/_search?pretty=1' -d '{\n  \"size\": 5,\n  \"query\": {\n    \"mlt\": {\n      \"fields\": [\n        \"text\"\n      ],\n      \"like_text\": \"team toto\",\n      \"percent_terms_to_match\": 1,\n      \"min_term_freq\": 0,\n      \"max_query_terms\": 50,\n      \"min_doc_freq\": 0,\n      \"min_word_length\": 0,\n      \"boost_terms\": 1,\n      \"boost\": 5,\n      \"analyzer\": \"whitespace\"\n    }\n  }\n}' \n```\n\nHow is it possible?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/70509967","html_url":"https://github.com/elastic/elasticsearch/issues/8920#issuecomment-70509967","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8920","id":70509967,"node_id":"MDEyOklzc3VlQ29tbWVudDcwNTA5OTY3","user":{"login":"alexksikes","id":43475,"node_id":"MDQ6VXNlcjQzNDc1","avatar_url":"https://avatars2.githubusercontent.com/u/43475?v=4","gravatar_id":"","url":"https://api.github.com/users/alexksikes","html_url":"https://github.com/alexksikes","followers_url":"https://api.github.com/users/alexksikes/followers","following_url":"https://api.github.com/users/alexksikes/following{/other_user}","gists_url":"https://api.github.com/users/alexksikes/gists{/gist_id}","starred_url":"https://api.github.com/users/alexksikes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexksikes/subscriptions","organizations_url":"https://api.github.com/users/alexksikes/orgs","repos_url":"https://api.github.com/users/alexksikes/repos","events_url":"https://api.github.com/users/alexksikes/events{/privacy}","received_events_url":"https://api.github.com/users/alexksikes/received_events","type":"User","site_admin":false},"created_at":"2015-01-19T15:18:31Z","updated_at":"2015-01-19T15:18:31Z","author_association":"CONTRIBUTOR","body":"What I suspect is happening here is that the documents are indexed in two different shards. The MLT query is formed and executed at the shard level. The first MLT query, on the first shard, only selects \"team\", returns the first document. While the second MLT query, on the other shard, only selects \"toto\", and so returns the second document.\n","performed_via_github_app":null}]