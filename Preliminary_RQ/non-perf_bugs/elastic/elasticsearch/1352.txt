{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/1352","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1352/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1352/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1352/events","html_url":"https://github.com/elastic/elasticsearch/issues/1352","id":1700177,"node_id":"MDU6SXNzdWUxNzAwMTc3","number":1352,"title":"Shard allocation awareness (rack aware, zone aware, for example)","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"labels":[{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":127902,"node_id":"MDU6TGFiZWwxMjc5MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.18.0","name":"v0.18.0","color":"DDDDDD","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2011-09-21T15:25:43Z","updated_at":"2015-06-24T18:46:08Z","closed_at":"2011-09-21T15:26:29Z","author_association":"MEMBER","active_lock_reason":null,"body":"Cluster allocation awareness allows to configure shard and replicas allocation across generic attributes associated the nodes. Lets explain it through an example:\n\nAssume we have several racks. When we start a node, we can configure an attribute called `rack_id` (any attribute name works), for example, here is a sample config:\n\n```\nnode.rack_id: rack_one\n```\n\nThe above sets an attribute called `rack_id` for the relevant node with a value of `rack_one`. Now, we need to configure the `rack_id` attribute as one of the awareness allocation attributes (set it on _all_ (master eligible) nodes config):\n\n```\ncluster.routing.allocation.awareness.attributes: rack_id\n```\n\nThe above will mean that the `rack_id` attribute will be used to do awareness based allocation of shard and its replicas. For example, lets say we start 2 nodes with `node.rack_id` set to `rack_one`, and deploy a single index with 5 shards and 1 replica. The index will be fully deployed on the current nodes (5 shards and 1 replica each, total of 10 shards).\n\nNow, if we start two more nodes, with `node.rack_id` set to `rack_two`, shards will relocate to even the number of shards across the nodes, but, a shard and its replica will not be allocated in the same `rack_id` value.\n\nThe awareness attributes can hold several values, for example:\n\n```\ncluster.routing.allocation.awareness.attributes: rack_id,zone\n```\n\n_NOTE_: When using awareness attributes, shards will not be allocated to nodes that don't have values set for those attributes.\n## Forced Awareness\n\nSometimes, we know in advance the number of values an awareness attribute can have, and more over, we would like never to have more replicas then needed allocated on a specific group of nodes with the same awareness attribute value. For that, we can force awareness on specific attributes.\n\nFor example, lets say we have an awareness attribute called `zone`, and we know we are going to have two zones, `zone1` and `zone2`. Here is how we can force awareness one a node:\n\n```\ncluster.routing.allocation.awareness.force.zone: zone1,zone2\ncluster.routing.allocation.awareness.attributes: zone\n```\n\nNow, lets say we start 2 nodes with `node.zone` set to `zone1` and create an index with 5 shards and 1 replica. The index will be created, but only 5 shards will be allocated (with no replicas). Only when we start more shards with `node.zone` set to `zone2` will the replicas be allocated.\n## Automatic Preference When Searching / GETing\n\nWhen executing a search, or doing a get, the node receiving the request will prefer to execute the request on shards that exits on nodes that have the same attribute values as the executing node.\n## Realtime Settings Update\n\nThe settings can be updated using the cluster update settings API on a live cluster.\n","closed_by":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"performed_via_github_app":null}