{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/39128","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39128/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39128/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39128/events","html_url":"https://github.com/elastic/elasticsearch/issues/39128","id":412041170,"node_id":"MDU6SXNzdWU0MTIwNDExNzA=","number":39128,"title":"Log a Warning if NioSelector Thread is Blocked for an Extendend Period of Time","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"labels":[{"id":146854632,"node_id":"MDU6TGFiZWwxNDY4NTQ2MzI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Network","name":":Distributed/Network","color":"0e8a16","default":false,"description":"Http and internode communication implementations"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":929267538,"node_id":"MDU6TGFiZWw5MjkyNjc1Mzg=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/team-discuss","name":"team-discuss","color":"fbca04","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2019-02-19T17:31:14Z","updated_at":"2020-07-19T05:40:34Z","closed_at":"2019-04-03T13:14:10Z","author_association":"MEMBER","active_lock_reason":null,"body":"Inspired by https://github.com/elastic/elasticsearch/pull/39118 (dead-lock in transport callback that wasn't so easy to track down).\r\n\r\nCurrently the resolve the callback listeners passed to e.g. `org.elasticsearch.action.ActionRequestBuilder#execute(org.elasticsearch.action.ActionListener<Response>)` in the the same thread that calls `Selector.select`. This has the unfortunate issue, that if the operations in the callbacks block, they introduce latency into all IO that is handled via the `Selector` whose thread is blocked.\r\nE.g. this showed up in a set of requests seemingly being blocked for 30 s and then suddenly continuing in https://github.com/elastic/elasticsearch/issues/37965#issuecomment-463720753 and was much harder to debug than it should be.\r\n\r\nI think we should keep track of how long the select loop (org.elasticsearch.nio.NioSelector#singleLoop`) is blocked and log a warning if it is blocked for more than a few hundred `ms`.\r\n\r\ncc @DaveCTurner @tbrooks8 ","closed_by":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"performed_via_github_app":null}