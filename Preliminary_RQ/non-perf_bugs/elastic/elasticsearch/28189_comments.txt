[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/357244742","html_url":"https://github.com/elastic/elasticsearch/issues/28189#issuecomment-357244742","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28189","id":357244742,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NzI0NDc0Mg==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2018-01-12T13:57:38Z","updated_at":"2018-01-12T13:57:38Z","author_association":"MEMBER","body":">  it would be nice to take the guess work out of the equation (what is $big_number?)\r\n\r\nI think you can set the translog size limitation to big number and just monitor the size of the translog.\r\n\r\nThat said, I also think it make sense to expose this information in the stats. I'm marking this as an adopt me and a low hanging fruit.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/357244891","html_url":"https://github.com/elastic/elasticsearch/issues/28189#issuecomment-357244891","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28189","id":357244891,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NzI0NDg5MQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2018-01-12T13:58:19Z","updated_at":"2018-01-12T13:58:19Z","author_association":"MEMBER","body":"Also, if you want to put up a PR, I can help with guidance where needed.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/357246203","html_url":"https://github.com/elastic/elasticsearch/issues/28189#issuecomment-357246203","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28189","id":357246203,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NzI0NjIwMw==","user":{"login":"scottsom","id":23276852,"node_id":"MDQ6VXNlcjIzMjc2ODUy","avatar_url":"https://avatars1.githubusercontent.com/u/23276852?v=4","gravatar_id":"","url":"https://api.github.com/users/scottsom","html_url":"https://github.com/scottsom","followers_url":"https://api.github.com/users/scottsom/followers","following_url":"https://api.github.com/users/scottsom/following{/other_user}","gists_url":"https://api.github.com/users/scottsom/gists{/gist_id}","starred_url":"https://api.github.com/users/scottsom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scottsom/subscriptions","organizations_url":"https://api.github.com/users/scottsom/orgs","repos_url":"https://api.github.com/users/scottsom/repos","events_url":"https://api.github.com/users/scottsom/events{/privacy}","received_events_url":"https://api.github.com/users/scottsom/received_events","type":"User","site_admin":false},"created_at":"2018-01-12T14:04:15Z","updated_at":"2018-01-12T14:04:15Z","author_association":"CONTRIBUTOR","body":"Thanks, I'll put something together for this","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363762455","html_url":"https://github.com/elastic/elasticsearch/issues/28189#issuecomment-363762455","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28189","id":363762455,"node_id":"MDEyOklzc3VlQ29tbWVudDM2Mzc2MjQ1NQ==","user":{"login":"justinwyer","id":124817,"node_id":"MDQ6VXNlcjEyNDgxNw==","avatar_url":"https://avatars3.githubusercontent.com/u/124817?v=4","gravatar_id":"","url":"https://api.github.com/users/justinwyer","html_url":"https://github.com/justinwyer","followers_url":"https://api.github.com/users/justinwyer/followers","following_url":"https://api.github.com/users/justinwyer/following{/other_user}","gists_url":"https://api.github.com/users/justinwyer/gists{/gist_id}","starred_url":"https://api.github.com/users/justinwyer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinwyer/subscriptions","organizations_url":"https://api.github.com/users/justinwyer/orgs","repos_url":"https://api.github.com/users/justinwyer/repos","events_url":"https://api.github.com/users/justinwyer/events{/privacy}","received_events_url":"https://api.github.com/users/justinwyer/received_events","type":"User","site_admin":false},"created_at":"2018-02-07T13:04:06Z","updated_at":"2018-02-07T13:04:06Z","author_association":"CONTRIBUTOR","body":"Had a look at this as a starting point for contribution. Looking how to implement this it looks like it would require:\r\n\r\n- [ ] Adding a field to TranslogStats\r\n- [ ] Adding a method to Translog\r\n- [ ] Adding a field to Checkpoint\r\n\r\nAs this is labelled low hanging fruit I am wondering if I have thought about this correctly or not?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/363774694","html_url":"https://github.com/elastic/elasticsearch/issues/28189#issuecomment-363774694","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28189","id":363774694,"node_id":"MDEyOklzc3VlQ29tbWVudDM2Mzc3NDY5NA==","user":{"login":"scottsom","id":23276852,"node_id":"MDQ6VXNlcjIzMjc2ODUy","avatar_url":"https://avatars1.githubusercontent.com/u/23276852?v=4","gravatar_id":"","url":"https://api.github.com/users/scottsom","html_url":"https://github.com/scottsom","followers_url":"https://api.github.com/users/scottsom/followers","following_url":"https://api.github.com/users/scottsom/following{/other_user}","gists_url":"https://api.github.com/users/scottsom/gists{/gist_id}","starred_url":"https://api.github.com/users/scottsom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scottsom/subscriptions","organizations_url":"https://api.github.com/users/scottsom/orgs","repos_url":"https://api.github.com/users/scottsom/repos","events_url":"https://api.github.com/users/scottsom/events{/privacy}","received_events_url":"https://api.github.com/users/scottsom/received_events","type":"User","site_admin":false},"created_at":"2018-02-07T13:51:12Z","updated_at":"2018-02-07T13:51:12Z","author_association":"CONTRIBUTOR","body":"I did an initial pass at an implementation for this and it is a bit trickier than it appears. The translog itself does not appear to track any timestamps. Instead, it is relying on the file system metadata (`Files.getLastModifiedTime(path)`) to figure out if a translog generation is a candidate for deletion. There is a similar method in Java to get the creation time (`Files.readAttributes(path, BasicFileAttributes.class).creationTime()`) but [not all file systems track creation time](https://en.wikipedia.org/wiki/Comparison_of_file_systems#Metadata).\r\n\r\nWhile it might be nice if we just made operations in the translog tracked a timestamp, I think that would be overkill for solving the problem at hand.\r\n\r\nWhat I was thinking is in `BaseTranslogReader` constructor we capture the current time and store it as a member variable, which will be returned as the creation time for the generation. Since we are not persisting this anywhere, on node restart, this value will reset to `Files.readAttributes(path, BasicFileAttributes.class).creationTime()` (may not be right on some file systems) but I think that is a reasonable trade-off. \r\n\r\nAlternatively, we continue to rely on the file system metadata and say that this feature only supports file systems that track creation time.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/364057549","html_url":"https://github.com/elastic/elasticsearch/issues/28189#issuecomment-364057549","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28189","id":364057549,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NDA1NzU0OQ==","user":{"login":"justinwyer","id":124817,"node_id":"MDQ6VXNlcjEyNDgxNw==","avatar_url":"https://avatars3.githubusercontent.com/u/124817?v=4","gravatar_id":"","url":"https://api.github.com/users/justinwyer","html_url":"https://github.com/justinwyer","followers_url":"https://api.github.com/users/justinwyer/followers","following_url":"https://api.github.com/users/justinwyer/following{/other_user}","gists_url":"https://api.github.com/users/justinwyer/gists{/gist_id}","starred_url":"https://api.github.com/users/justinwyer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinwyer/subscriptions","organizations_url":"https://api.github.com/users/justinwyer/orgs","repos_url":"https://api.github.com/users/justinwyer/repos","events_url":"https://api.github.com/users/justinwyer/events{/privacy}","received_events_url":"https://api.github.com/users/justinwyer/received_events","type":"User","site_admin":false},"created_at":"2018-02-08T09:47:02Z","updated_at":"2018-02-08T09:49:38Z","author_association":"CONTRIBUTOR","body":"Thanks for the insight! Implementation of the file create time with fallback to `System.currentTimeMillis()` is pretty straight forward, I am however struggling with the test implementation as the transaction log is created at the start of the test resulting in a creation time of  0 milliseconds ago. How are similar test cases handled in the elastic code base? Don't want to introduce new constructors for the sake of testing unless that is already an established and accepted pattern.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/364074164","html_url":"https://github.com/elastic/elasticsearch/issues/28189#issuecomment-364074164","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28189","id":364074164,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NDA3NDE2NA==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2018-02-08T10:48:00Z","updated_at":"2018-02-08T10:48:00Z","author_association":"MEMBER","body":"@justinwyer thanks for your interest. \r\n\r\n> Adding a field to TranslogStats\r\n\r\nThis seems reasonable.\r\n\r\n> Adding a method to Translog\r\n\r\nWhy do think we need something more? we already have something to get a stats object?\r\n\r\n> Adding a field to Checkpoint\r\n\r\nWhat were thinking to do here? I think we can use the current list of readers. Something like `org.elasticsearch.index.translog.Translog#sizeInBytesByMinGen` but using other properties of the readers.\r\n\r\n\r\n> There is a similar method in Java to get the creation time (Files.readAttributes(path, BasicFileAttributes.class).creationTime()\r\n\r\nI'd prefer to use exactly the same information that the deletion policy uses. Why did you think it's need to change to creation time? I'm fine with caching things on the readers. We have to figure out what the age stats should say about the writer. I'm ok with just returning now for that one.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/364113306","html_url":"https://github.com/elastic/elasticsearch/issues/28189#issuecomment-364113306","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28189","id":364113306,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NDExMzMwNg==","user":{"login":"scottsom","id":23276852,"node_id":"MDQ6VXNlcjIzMjc2ODUy","avatar_url":"https://avatars1.githubusercontent.com/u/23276852?v=4","gravatar_id":"","url":"https://api.github.com/users/scottsom","html_url":"https://github.com/scottsom","followers_url":"https://api.github.com/users/scottsom/followers","following_url":"https://api.github.com/users/scottsom/following{/other_user}","gists_url":"https://api.github.com/users/scottsom/gists{/gist_id}","starred_url":"https://api.github.com/users/scottsom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scottsom/subscriptions","organizations_url":"https://api.github.com/users/scottsom/orgs","repos_url":"https://api.github.com/users/scottsom/repos","events_url":"https://api.github.com/users/scottsom/events{/privacy}","received_events_url":"https://api.github.com/users/scottsom/received_events","type":"User","site_admin":false},"created_at":"2018-02-08T13:37:22Z","updated_at":"2018-02-08T13:37:22Z","author_association":"CONTRIBUTOR","body":">I'd prefer to use exactly the same information that the deletion policy uses. Why did you think it's need to change to creation time? I'm fine with caching things on the readers. We have to figure out what the age stats should say about the writer. I'm ok with just returning now for that one.\r\n\r\nThe idea was the age of the oldest operation would be the current time minus the timestamp of the first operation in the oldest generation. Since there isn't a timestamp per operation then this can be approximated by the creation time of the oldest generation. This would tell you how long the translog has you covered for.\r\n\r\nIt sounds like I was over complicating it though, the last modified time on the oldest generation should be good too.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/364361839","html_url":"https://github.com/elastic/elasticsearch/issues/28189#issuecomment-364361839","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28189","id":364361839,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NDM2MTgzOQ==","user":{"login":"justinwyer","id":124817,"node_id":"MDQ6VXNlcjEyNDgxNw==","avatar_url":"https://avatars3.githubusercontent.com/u/124817?v=4","gravatar_id":"","url":"https://api.github.com/users/justinwyer","html_url":"https://github.com/justinwyer","followers_url":"https://api.github.com/users/justinwyer/followers","following_url":"https://api.github.com/users/justinwyer/following{/other_user}","gists_url":"https://api.github.com/users/justinwyer/gists{/gist_id}","starred_url":"https://api.github.com/users/justinwyer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinwyer/subscriptions","organizations_url":"https://api.github.com/users/justinwyer/orgs","repos_url":"https://api.github.com/users/justinwyer/repos","events_url":"https://api.github.com/users/justinwyer/events{/privacy}","received_events_url":"https://api.github.com/users/justinwyer/received_events","type":"User","site_admin":false},"created_at":"2018-02-09T07:58:15Z","updated_at":"2018-02-09T07:58:15Z","author_association":"CONTRIBUTOR","body":"> What were thinking to do here? I think we can use the current list of readers. Something like org.elasticsearch.index.translog.Translog#sizeInBytesByMinGen but using other properties of the readers.\r\nI was thinking something similar I just wasn't sure where we would get a timestamp, but the oldest last modified of any generation makes sense, thanks!\r\n\r\nDo we have a preference for time handling ie. using Joda `DateTimeUtils.currentTimeMillis` vs `System.currentTimeMillis()` if we use Joda then overriding the time provider is not allowed which means non deterministic testing.\r\n\r\nSo my question for the testing, are we happy with testing that we get a number and that it's older than some arbitrary amount (1 at least) of milliseconds?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/366266497","html_url":"https://github.com/elastic/elasticsearch/issues/28189#issuecomment-366266497","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28189","id":366266497,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NjI2NjQ5Nw==","user":{"login":"scottsom","id":23276852,"node_id":"MDQ6VXNlcjIzMjc2ODUy","avatar_url":"https://avatars1.githubusercontent.com/u/23276852?v=4","gravatar_id":"","url":"https://api.github.com/users/scottsom","html_url":"https://github.com/scottsom","followers_url":"https://api.github.com/users/scottsom/followers","following_url":"https://api.github.com/users/scottsom/following{/other_user}","gists_url":"https://api.github.com/users/scottsom/gists{/gist_id}","starred_url":"https://api.github.com/users/scottsom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scottsom/subscriptions","organizations_url":"https://api.github.com/users/scottsom/orgs","repos_url":"https://api.github.com/users/scottsom/repos","events_url":"https://api.github.com/users/scottsom/events{/privacy}","received_events_url":"https://api.github.com/users/scottsom/received_events","type":"User","site_admin":false},"created_at":"2018-02-16T15:27:31Z","updated_at":"2018-02-16T15:27:31Z","author_association":"CONTRIBUTOR","body":"Excellent, thanks @justinwyer and @bleskes ","performed_via_github_app":null}]