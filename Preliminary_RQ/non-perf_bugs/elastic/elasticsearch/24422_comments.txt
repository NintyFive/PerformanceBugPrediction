[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/298544721","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-298544721","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":298544721,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODU0NDcyMQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-05-02T08:09:37Z","updated_at":"2017-05-02T08:09:37Z","author_association":"MEMBER","body":"I agree that the message is a bit confusing since we usually fail any document that contain a metadata field. Though `_field_names` is not listed as a metadata field in `MapperService.META_FIELDS` and this is why the message is different. \r\nThanks @narph, are you interested in submitting a PR for this ?\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/298572498","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-298572498","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":298572498,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODU3MjQ5OA==","user":{"login":"asettouf","id":6400458,"node_id":"MDQ6VXNlcjY0MDA0NTg=","avatar_url":"https://avatars3.githubusercontent.com/u/6400458?v=4","gravatar_id":"","url":"https://api.github.com/users/asettouf","html_url":"https://github.com/asettouf","followers_url":"https://api.github.com/users/asettouf/followers","following_url":"https://api.github.com/users/asettouf/following{/other_user}","gists_url":"https://api.github.com/users/asettouf/gists{/gist_id}","starred_url":"https://api.github.com/users/asettouf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asettouf/subscriptions","organizations_url":"https://api.github.com/users/asettouf/orgs","repos_url":"https://api.github.com/users/asettouf/repos","events_url":"https://api.github.com/users/asettouf/events{/privacy}","received_events_url":"https://api.github.com/users/asettouf/received_events","type":"User","site_admin":false},"created_at":"2017-05-02T09:19:52Z","updated_at":"2017-05-02T09:19:52Z","author_association":"NONE","body":"Hello,\r\n\r\nif @narph is not available to submit a PR, I am interested in handling this issue.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/298583278","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-298583278","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":298583278,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODU4MzI3OA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-05-02T09:50:24Z","updated_at":"2017-05-02T09:50:24Z","author_association":"MEMBER","body":"@asettouf sure go for it, I'd be happy to review !","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/298677358","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-298677358","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":298677358,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODY3NzM1OA==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2017-05-02T15:53:30Z","updated_at":"2017-05-02T15:53:30Z","author_association":"MEMBER","body":"Note that `MapperService.META_FIELDS` is just wrong now and needs to be removed. Since adding `MapperPlugin.getMetadataFields()`, that is what should be used as the definition of which meta fields exist. So `MapperService` should use the `MapperRegistry` that is passed in the ctor, instead of a static set.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/298761282","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-298761282","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":298761282,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODc2MTI4Mg==","user":{"login":"asettouf","id":6400458,"node_id":"MDQ6VXNlcjY0MDA0NTg=","avatar_url":"https://avatars3.githubusercontent.com/u/6400458?v=4","gravatar_id":"","url":"https://api.github.com/users/asettouf","html_url":"https://github.com/asettouf","followers_url":"https://api.github.com/users/asettouf/followers","following_url":"https://api.github.com/users/asettouf/following{/other_user}","gists_url":"https://api.github.com/users/asettouf/gists{/gist_id}","starred_url":"https://api.github.com/users/asettouf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asettouf/subscriptions","organizations_url":"https://api.github.com/users/asettouf/orgs","repos_url":"https://api.github.com/users/asettouf/repos","events_url":"https://api.github.com/users/asettouf/events{/privacy}","received_events_url":"https://api.github.com/users/asettouf/received_events","type":"User","site_admin":false},"created_at":"2017-05-02T21:06:33Z","updated_at":"2017-05-02T21:06:33Z","author_association":"NONE","body":"So for beginning I have just added \"_field_names\" in the `MapperService.META_FIELDS`. Especially given that some refactoring is needed, as right now the parsing and checking is made by static methods. \r\n\r\nAm I right to understand that to use the `MapperRegistry`, I would need to refactor the static methods inside the `DocumentParser` to get a reference to it and use it?\r\n\r\nI'd love to do the refactoring, now as I am new, I would just like some guidance on what would be the best way (perhaps I've missed a much smarter way of refactoring) to proceed before I start breaking everything!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/298771496","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-298771496","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":298771496,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODc3MTQ5Ng==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2017-05-02T21:48:28Z","updated_at":"2017-05-02T21:48:28Z","author_association":"MEMBER","body":"@asettouf The `META_FIELDS` set is only used within `MapperService`. I think you only need to use the keyset of the mapperRegistry to reimplement `isMetadataField(String)` and `getAllMetaFields()`.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/373670770","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-373670770","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":373670770,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MzY3MDc3MA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2018-03-16T10:26:45Z","updated_at":"2018-03-16T10:26:45Z","author_association":"MEMBER","body":"@elastic/es-search-aggs ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/420732224","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-420732224","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":420732224,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMDczMjIyNA==","user":{"login":"Rijul1204","id":4597528,"node_id":"MDQ6VXNlcjQ1OTc1Mjg=","avatar_url":"https://avatars2.githubusercontent.com/u/4597528?v=4","gravatar_id":"","url":"https://api.github.com/users/Rijul1204","html_url":"https://github.com/Rijul1204","followers_url":"https://api.github.com/users/Rijul1204/followers","following_url":"https://api.github.com/users/Rijul1204/following{/other_user}","gists_url":"https://api.github.com/users/Rijul1204/gists{/gist_id}","starred_url":"https://api.github.com/users/Rijul1204/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Rijul1204/subscriptions","organizations_url":"https://api.github.com/users/Rijul1204/orgs","repos_url":"https://api.github.com/users/Rijul1204/repos","events_url":"https://api.github.com/users/Rijul1204/events{/privacy}","received_events_url":"https://api.github.com/users/Rijul1204/received_events","type":"User","site_admin":false},"created_at":"2018-09-12T17:30:20Z","updated_at":"2018-09-12T17:30:20Z","author_association":"NONE","body":"I guess the existing PR for this issue is closed now. Can I work on this issue ? ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/422928644","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-422928644","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":422928644,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMjkyODY0NA==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2018-09-19T19:26:40Z","updated_at":"2018-09-19T19:26:40Z","author_association":"MEMBER","body":"@Rijul1204 Please feel free to work on this, or any other issue. Those labeled with `help wanted` in particular indicate nobody else plans to work on them.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/445575763","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-445575763","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":445575763,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NTU3NTc2Mw==","user":{"login":"sandmannn","id":8274566,"node_id":"MDQ6VXNlcjgyNzQ1NjY=","avatar_url":"https://avatars2.githubusercontent.com/u/8274566?v=4","gravatar_id":"","url":"https://api.github.com/users/sandmannn","html_url":"https://github.com/sandmannn","followers_url":"https://api.github.com/users/sandmannn/followers","following_url":"https://api.github.com/users/sandmannn/following{/other_user}","gists_url":"https://api.github.com/users/sandmannn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandmannn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandmannn/subscriptions","organizations_url":"https://api.github.com/users/sandmannn/orgs","repos_url":"https://api.github.com/users/sandmannn/repos","events_url":"https://api.github.com/users/sandmannn/events{/privacy}","received_events_url":"https://api.github.com/users/sandmannn/received_events","type":"User","site_admin":false},"created_at":"2018-12-09T21:59:21Z","updated_at":"2018-12-09T21:59:21Z","author_association":"CONTRIBUTOR","body":"Hi, as there has been no activity for some time, can I pick this issue?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/445759104","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-445759104","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":445759104,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NTc1OTEwNA==","user":{"login":"Rijul1204","id":4597528,"node_id":"MDQ6VXNlcjQ1OTc1Mjg=","avatar_url":"https://avatars2.githubusercontent.com/u/4597528?v=4","gravatar_id":"","url":"https://api.github.com/users/Rijul1204","html_url":"https://github.com/Rijul1204","followers_url":"https://api.github.com/users/Rijul1204/followers","following_url":"https://api.github.com/users/Rijul1204/following{/other_user}","gists_url":"https://api.github.com/users/Rijul1204/gists{/gist_id}","starred_url":"https://api.github.com/users/Rijul1204/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Rijul1204/subscriptions","organizations_url":"https://api.github.com/users/Rijul1204/orgs","repos_url":"https://api.github.com/users/Rijul1204/repos","events_url":"https://api.github.com/users/Rijul1204/events{/privacy}","received_events_url":"https://api.github.com/users/Rijul1204/received_events","type":"User","site_admin":false},"created_at":"2018-12-10T10:05:03Z","updated_at":"2018-12-10T10:05:03Z","author_association":"NONE","body":"@Sandmannn, Sure please proceed. I am not currently working on it.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/446302244","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-446302244","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":446302244,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NjMwMjI0NA==","user":{"login":"sandmannn","id":8274566,"node_id":"MDQ6VXNlcjgyNzQ1NjY=","avatar_url":"https://avatars2.githubusercontent.com/u/8274566?v=4","gravatar_id":"","url":"https://api.github.com/users/sandmannn","html_url":"https://github.com/sandmannn","followers_url":"https://api.github.com/users/sandmannn/followers","following_url":"https://api.github.com/users/sandmannn/following{/other_user}","gists_url":"https://api.github.com/users/sandmannn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandmannn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandmannn/subscriptions","organizations_url":"https://api.github.com/users/sandmannn/orgs","repos_url":"https://api.github.com/users/sandmannn/repos","events_url":"https://api.github.com/users/sandmannn/events{/privacy}","received_events_url":"https://api.github.com/users/sandmannn/received_events","type":"User","site_admin":false},"created_at":"2018-12-11T18:07:22Z","updated_at":"2018-12-11T18:08:44Z","author_association":"CONTRIBUTOR","body":"Hi @rjernst , you mentioned in your reply before, `So MapperService should use the MapperRegistry that is passed in the ctor,`. Since we cannot use exactly the same instance that has been passed in ctor due to `isMetadataField` being a static method, we need a way to grab such an instance of `MapperRegistry` inside this static method. \r\n\r\nI looked at several places (constructor of `MapperRegistry`, `IndicesModule`) but did not find a nice way of getting a `MapperRegistry` instance (or `metadataMapperParsers` instance which is what we are really looking for). I am still looking for relevant usages in the codebase, but maybe there is a very straightforward way of getting a `MapperRegistry` instance that I am missing?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/446334421","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-446334421","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":446334421,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NjMzNDQyMQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2018-12-11T19:39:58Z","updated_at":"2018-12-11T19:39:58Z","author_association":"MEMBER","body":"The `isMetadataField` and `getAllMetaFields` methods would need to become instance methods, and any callers would need to have an instance of MapperService. This can likely be done in increments by converting each use of the method independently. It will also likely require reworking several chains of construction. For example, DocumentField calls the method statically. Instead, it would need to take in whether the given field is a meta field as a ctor arg, and that would need to be passed through a few layers from there is access to the MapperService.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/446692608","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-446692608","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":446692608,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NjY5MjYwOA==","user":{"login":"sandmannn","id":8274566,"node_id":"MDQ6VXNlcjgyNzQ1NjY=","avatar_url":"https://avatars2.githubusercontent.com/u/8274566?v=4","gravatar_id":"","url":"https://api.github.com/users/sandmannn","html_url":"https://github.com/sandmannn","followers_url":"https://api.github.com/users/sandmannn/followers","following_url":"https://api.github.com/users/sandmannn/following{/other_user}","gists_url":"https://api.github.com/users/sandmannn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandmannn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandmannn/subscriptions","organizations_url":"https://api.github.com/users/sandmannn/orgs","repos_url":"https://api.github.com/users/sandmannn/repos","events_url":"https://api.github.com/users/sandmannn/events{/privacy}","received_events_url":"https://api.github.com/users/sandmannn/received_events","type":"User","site_admin":false},"created_at":"2018-12-12T18:28:01Z","updated_at":"2018-12-14T22:00:55Z","author_association":"CONTRIBUTOR","body":"Thanks for your suggestion, @rjernst ! I think it is the only possible way to proceed here.\r\n\r\nAs number of classes affected seems to be slightly bigger than originally expected, lets maybe address the necessary class changes one by one. I looked for usages of `DocumentField` constructor. In half of the cases it is either obvious that we are looking at metadata field, or we have access to mapper service instance that can provide such information. Hovever, there are 2 groups of calls, where it is quite ambiguous: first, several static methods within `DocumentField` itself, which are creating `DocumentField` either from `InputStream` or from XContent. Second, the usage in `PercolatorMatchedSlotSubFetchPhase`. These are real blockers for adding the metadata information to the `DocumentField` constructor. As a next step i will check where are those methods used, but currently I don't see a straightforward way to proceed.\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447494229","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-447494229","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":447494229,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzQ5NDIyOQ==","user":{"login":"sandmannn","id":8274566,"node_id":"MDQ6VXNlcjgyNzQ1NjY=","avatar_url":"https://avatars2.githubusercontent.com/u/8274566?v=4","gravatar_id":"","url":"https://api.github.com/users/sandmannn","html_url":"https://github.com/sandmannn","followers_url":"https://api.github.com/users/sandmannn/followers","following_url":"https://api.github.com/users/sandmannn/following{/other_user}","gists_url":"https://api.github.com/users/sandmannn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandmannn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandmannn/subscriptions","organizations_url":"https://api.github.com/users/sandmannn/orgs","repos_url":"https://api.github.com/users/sandmannn/repos","events_url":"https://api.github.com/users/sandmannn/events{/privacy}","received_events_url":"https://api.github.com/users/sandmannn/received_events","type":"User","site_admin":false},"created_at":"2018-12-14T22:11:30Z","updated_at":"2018-12-14T22:11:30Z","author_association":"CONTRIBUTOR","body":"I was looking up various chains of funciton calling of `DocumentField` constructor, among others found this chain\r\n\r\n```\r\nstatic DocumentField.readDocumentField(StreamInput in)\r\nCalled from: GetResult.readFrom(StreamInput) \r\nCalled from static static DocumentField.readGetResult (StreamInput in) \r\nCalled from UpdateResponse.readFrom(StreamInput) \r\nCalled from BulkItemResponse.readFrom(StreamInput) \r\nCalled from static BulkItemResponse.readBulkItem(StreamInput)\r\nCalled from BulkItemRequest.readFrom(StreamInput)\r\nCalled from BulkItemRequest.readBulkItem(StreamInput)\r\nCalled from BulkShardRequest.readFrom(StreamInput)\r\n```\r\n`BulkShardRequest readFrom()` implements `ReplicatedWriteRequest`, thus if we want to extend the function signature of the methods above by handing over additional context, then we also need to adjust all calls to `ReplicatedWriteRequest.readFrom()`, affected classes `DeleteRequest`, `IndexRequest,ResyncReplicationRequest`. (further call chain must be researched separately for all affected classes)\r\n\r\nis going up the call chain up to creation of a `Node` instance and passing the contexts from there really the only possible way of dealing with this issue? Maybe there is some easy way to get access to the instances of `Node` or `IndicesService` directly and reading the `MapperRegistry` from there? ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447497630","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-447497630","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":447497630,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzQ5NzYzMA==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2018-12-14T22:27:05Z","updated_at":"2018-12-14T22:27:05Z","author_association":"MEMBER","body":"For DocumentField, I would make this a member variable that is set on construction. The `readFrom` case is then simpl, because the new flag (whether a field is a meta field) would be serialized/deserialized on the StreamOutput/Input methods. So nothing else would need to be passed into those StreamInput methods.\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447499131","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-447499131","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":447499131,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzQ5OTEzMQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2018-12-14T22:34:16Z","updated_at":"2018-12-14T22:34:16Z","author_association":"MEMBER","body":"FTIW, passing the boolean to the DocumentField constructor should be relatively simple: see FetchPhase.getSearchFields. This method has SearchContext, which has a ref to the MapperService.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447505106","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-447505106","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":447505106,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzUwNTEwNg==","user":{"login":"sandmannn","id":8274566,"node_id":"MDQ6VXNlcjgyNzQ1NjY=","avatar_url":"https://avatars2.githubusercontent.com/u/8274566?v=4","gravatar_id":"","url":"https://api.github.com/users/sandmannn","html_url":"https://github.com/sandmannn","followers_url":"https://api.github.com/users/sandmannn/followers","following_url":"https://api.github.com/users/sandmannn/following{/other_user}","gists_url":"https://api.github.com/users/sandmannn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandmannn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandmannn/subscriptions","organizations_url":"https://api.github.com/users/sandmannn/orgs","repos_url":"https://api.github.com/users/sandmannn/repos","events_url":"https://api.github.com/users/sandmannn/events{/privacy}","received_events_url":"https://api.github.com/users/sandmannn/received_events","type":"User","site_admin":false},"created_at":"2018-12-14T23:05:14Z","updated_at":"2018-12-14T23:05:14Z","author_association":"CONTRIBUTOR","body":"Assuming it was already written during serialization indeed makes it much simpler. 2 questions though:\r\n1) Do we have to care about deserializing `DocumentField` instances serialized in previous version (without the flag)?\r\n2) What is the policy on splitting PRs? Is it possible to first create a PR concentrating on change in `DocumentField` and whoever calls its constructor and afterwards a separate PR for changing the static methods of the `MapperService`?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447518395","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-447518395","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":447518395,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzUxODM5NQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2018-12-15T00:31:11Z","updated_at":"2018-12-15T00:31:11Z","author_association":"MEMBER","body":"1. Yes, backcompat needs to be addressed. In this case, the deserialization can fall back to calling the static method (it would need to stick around in 6.x then).\r\n2. Splitting PRs is highly encourage, assuming the split makes logical sense (each PR should leave the system in a stable state, still fully tested, etc). If I understand your suggested split, you would change the construction of DocumentField (and the deserialization) to call the static method in a first PR, and then change to instance methods in a followup? That would be fine, but I would personally prefer adding the instance methods first (which can internally call the static method) in order to begin getting rid of uses of the static method. After the uses are all changed, the impl can change. But in this case I think the order doesn't matter much (at least at a glance).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/450025504","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-450025504","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":450025504,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MDAyNTUwNA==","user":{"login":"sandmannn","id":8274566,"node_id":"MDQ6VXNlcjgyNzQ1NjY=","avatar_url":"https://avatars2.githubusercontent.com/u/8274566?v=4","gravatar_id":"","url":"https://api.github.com/users/sandmannn","html_url":"https://github.com/sandmannn","followers_url":"https://api.github.com/users/sandmannn/followers","following_url":"https://api.github.com/users/sandmannn/following{/other_user}","gists_url":"https://api.github.com/users/sandmannn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandmannn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandmannn/subscriptions","organizations_url":"https://api.github.com/users/sandmannn/orgs","repos_url":"https://api.github.com/users/sandmannn/repos","events_url":"https://api.github.com/users/sandmannn/events{/privacy}","received_events_url":"https://api.github.com/users/sandmannn/received_events","type":"User","site_admin":false},"created_at":"2018-12-26T20:58:55Z","updated_at":"2018-12-26T20:59:15Z","author_association":"CONTRIBUTOR","body":"sure, lets add instance methods first. Does it mean that in the scope of the first PR we just adding the instance equivalents of `isMetadataField` and `getAllMetaFields`, which in turn internally call the static methods? We have 2 options then:\r\n1) accept that we have both instance and static methods available in the codeline for some time, meaning we have to give the instance methods different names for the time of refactoring, as they have otherwise same signature. Is there anything less ugly than `isMetadataFieldInstance` and `getAllMetaFieldsInstance`?\r\n2) refactor all uses of the static methods by instantiating empty `MapperService`, calling instance method which in turn internally calls static method. In this case we can rename static method (which is then called only inside `MapperService` body), plus get lots of calls to empty `MapperService` constructor, which can look puzzling. \r\n\r\nBoth options look ugly, but in different ways. What do you prefer?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/452506445","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-452506445","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":452506445,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjUwNjQ0NQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2019-01-08T23:54:45Z","updated_at":"2019-01-08T23:54:45Z","author_association":"MEMBER","body":"I don't think we need to have both static and instance methods at the same time. My suggestion is to convert the uses of the meta fields checking to first call the existing static methods directly, instead of indirectly through wrapped layers.\r\n\r\nFor example, a first PR can change the constructor of DocumentField to take a boolean indicating whether or not the field is a metadata field. All the calls to the constructor would be changed to pass this statically (eg with percolator), or by calling the existing static method on MapperService. A second PR would then change those static method callers to check on the MapperService instance (and at the same time change to an instance method).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/455913816","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-455913816","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":455913816,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NTkxMzgxNg==","user":{"login":"sandmannn","id":8274566,"node_id":"MDQ6VXNlcjgyNzQ1NjY=","avatar_url":"https://avatars2.githubusercontent.com/u/8274566?v=4","gravatar_id":"","url":"https://api.github.com/users/sandmannn","html_url":"https://github.com/sandmannn","followers_url":"https://api.github.com/users/sandmannn/followers","following_url":"https://api.github.com/users/sandmannn/following{/other_user}","gists_url":"https://api.github.com/users/sandmannn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandmannn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandmannn/subscriptions","organizations_url":"https://api.github.com/users/sandmannn/orgs","repos_url":"https://api.github.com/users/sandmannn/repos","events_url":"https://api.github.com/users/sandmannn/events{/privacy}","received_events_url":"https://api.github.com/users/sandmannn/received_events","type":"User","site_admin":false},"created_at":"2019-01-20T23:43:43Z","updated_at":"2019-01-20T23:43:43Z","author_association":"CONTRIBUTOR","body":"I am currently working on a first PR to change the constructor of DocumentField, plus adapting the serialization/deserialization. Previously each field-related serialization fragment was serialized as key/array, `{\"field\":[\"value1\",\"value2\"]}` but after the change it has to be serialized as an object, which contains the old value and the new metadata-related infromation `{\"field\":{\"value\":[\"value1\",\"value2\"],\"isMetadata\":true}}`\r\n\r\nI cannot rely on the order of fields in this inner object anymore, thus instead of using low level methods of `XContentParser` which tokenize json sequentially, I would need to use some different API that first parses all the content of object first and stores it in a map. The right tool in this case would be using `ObjectParser` as done in `SearchHit`, right?\r\n\r\nhttps://github.com/elastic/elasticsearch/blob/995bf0ee668282fbde420eaf2eb028af75a74d12/server/src/main/java/org/elasticsearch/search/SearchHit.java#L509-L517","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/456632130","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-456632130","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":456632130,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NjYzMjEzMA==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2019-01-23T01:30:20Z","updated_at":"2019-01-23T01:30:20Z","author_association":"MEMBER","body":"Changing the xcontent structure of a document would be problematic from a bwc standpoint, as there is a large amount of code out there relying on that structure. When parsing a doc from xcontent, we should know what part of the json we are in (eg underneath _source or not), which indicates whether the field is a metadata field or not.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/460442830","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-460442830","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":460442830,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDQ0MjgzMA==","user":{"login":"sandmannn","id":8274566,"node_id":"MDQ6VXNlcjgyNzQ1NjY=","avatar_url":"https://avatars2.githubusercontent.com/u/8274566?v=4","gravatar_id":"","url":"https://api.github.com/users/sandmannn","html_url":"https://github.com/sandmannn","followers_url":"https://api.github.com/users/sandmannn/followers","following_url":"https://api.github.com/users/sandmannn/following{/other_user}","gists_url":"https://api.github.com/users/sandmannn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandmannn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandmannn/subscriptions","organizations_url":"https://api.github.com/users/sandmannn/orgs","repos_url":"https://api.github.com/users/sandmannn/repos","events_url":"https://api.github.com/users/sandmannn/events{/privacy}","received_events_url":"https://api.github.com/users/sandmannn/received_events","type":"User","site_admin":false},"created_at":"2019-02-04T22:42:55Z","updated_at":"2019-02-04T22:43:42Z","author_association":"CONTRIBUTOR","body":"maybe lets continue discussing this issue related to the parsing in the respective PR https://github.com/elastic/elasticsearch/pull/38373 . While generally belonging to _source is a good rule for determining if the field is metadata, there seem to be some exceptions","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/499099016","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-499099016","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":499099016,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5OTA5OTAxNg==","user":{"login":"sd1998","id":22047421,"node_id":"MDQ6VXNlcjIyMDQ3NDIx","avatar_url":"https://avatars3.githubusercontent.com/u/22047421?v=4","gravatar_id":"","url":"https://api.github.com/users/sd1998","html_url":"https://github.com/sd1998","followers_url":"https://api.github.com/users/sd1998/followers","following_url":"https://api.github.com/users/sd1998/following{/other_user}","gists_url":"https://api.github.com/users/sd1998/gists{/gist_id}","starred_url":"https://api.github.com/users/sd1998/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sd1998/subscriptions","organizations_url":"https://api.github.com/users/sd1998/orgs","repos_url":"https://api.github.com/users/sd1998/repos","events_url":"https://api.github.com/users/sd1998/events{/privacy}","received_events_url":"https://api.github.com/users/sd1998/received_events","type":"User","site_admin":false},"created_at":"2019-06-05T14:09:32Z","updated_at":"2019-06-05T14:09:32Z","author_association":"NONE","body":"@rjernst Can I work on this issue?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/499214780","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-499214780","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":499214780,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5OTIxNDc4MA==","user":{"login":"sandmannn","id":8274566,"node_id":"MDQ6VXNlcjgyNzQ1NjY=","avatar_url":"https://avatars2.githubusercontent.com/u/8274566?v=4","gravatar_id":"","url":"https://api.github.com/users/sandmannn","html_url":"https://github.com/sandmannn","followers_url":"https://api.github.com/users/sandmannn/followers","following_url":"https://api.github.com/users/sandmannn/following{/other_user}","gists_url":"https://api.github.com/users/sandmannn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandmannn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandmannn/subscriptions","organizations_url":"https://api.github.com/users/sandmannn/orgs","repos_url":"https://api.github.com/users/sandmannn/repos","events_url":"https://api.github.com/users/sandmannn/events{/privacy}","received_events_url":"https://api.github.com/users/sandmannn/received_events","type":"User","site_admin":false},"created_at":"2019-06-05T19:05:53Z","updated_at":"2019-06-05T19:05:53Z","author_association":"CONTRIBUTOR","body":"@sd1998  you can review https://github.com/elastic/elasticsearch/pull/41656, which was there for some time","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/606086421","html_url":"https://github.com/elastic/elasticsearch/issues/24422#issuecomment-606086421","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24422","id":606086421,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjA4NjQyMQ==","user":{"login":"sandmannn","id":8274566,"node_id":"MDQ6VXNlcjgyNzQ1NjY=","avatar_url":"https://avatars2.githubusercontent.com/u/8274566?v=4","gravatar_id":"","url":"https://api.github.com/users/sandmannn","html_url":"https://github.com/sandmannn","followers_url":"https://api.github.com/users/sandmannn/followers","following_url":"https://api.github.com/users/sandmannn/following{/other_user}","gists_url":"https://api.github.com/users/sandmannn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandmannn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandmannn/subscriptions","organizations_url":"https://api.github.com/users/sandmannn/orgs","repos_url":"https://api.github.com/users/sandmannn/repos","events_url":"https://api.github.com/users/sandmannn/events{/privacy}","received_events_url":"https://api.github.com/users/sandmannn/received_events","type":"User","site_admin":false},"created_at":"2020-03-30T15:57:14Z","updated_at":"2020-03-30T15:57:14Z","author_association":"CONTRIBUTOR","body":"Hi, as mentioned in the discussion in the last commit #41656 I will not have capacity to contribute at least in the next 3-6 months starting from the April 2020. so as of now everybody is welcome to take over this broader refactoring.","performed_via_github_app":null}]