[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/628374570","html_url":"https://github.com/elastic/elasticsearch/issues/56738#issuecomment-628374570","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56738","id":628374570,"node_id":"MDEyOklzc3VlQ29tbWVudDYyODM3NDU3MA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-05-14T04:09:56Z","updated_at":"2020-05-14T04:09:56Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra (:Core/Infra/Build)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/628374574","html_url":"https://github.com/elastic/elasticsearch/issues/56738#issuecomment-628374574","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56738","id":628374574,"node_id":"MDEyOklzc3VlQ29tbWVudDYyODM3NDU3NA==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2020-05-14T04:09:58Z","updated_at":"2020-05-14T04:09:58Z","author_association":"CONTRIBUTOR","body":"Unfortunately as far as I can tell we have no real control over this.\r\n\r\nGitHub assigns the \"latest release\" tag to the release that points to the most recent (chronological) commit. Which in effect means when the tag was created.\r\n\r\n```\r\ntag v6.8.9\r\nTagger: ElasticMachine <elasticmachine@users.noreply.github.com>\r\nDate:   Wed May 13 14:55:03 2020 +0000\r\ntag v7.7.0\r\nTagger: ElasticMachine <elasticmachine@users.noreply.github.com>\r\nDate:   Wed May 13 14:14:59 2020 +0000\r\n```\r\n\r\nWe created the v6.8.9 tag about 40 minutes after the v7.7.0 tag, so GitHub thinks it is the \"latest release\" which is true in a way - it was the most recent thing we released, but it's not the highest version.\r\n\r\nIn theory we could try and sequence our release tagging steps so that higher releases are tagged last, but that assumes (incorrectly) that we will always release a 7.x version simultaneously with a 6.x version. We often do, but not always. If we decide to release a 6.8.10 next week to fix a problem that only exists in the 6.x series, then GitHub will decide it is the \"latest release\" unless we schedule a 7.x release straight afterwards (which we wouldn't want to do).\r\n\r\nI'm going to leave this open for a few days in case someone else on the team has an idea of what we could/should do, but I think it's out of our hands and GitHub needs to make it possible to assign the \"latest release\" instead of inferring it from Git timestamps.\r\n\r\n  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/628499718","html_url":"https://github.com/elastic/elasticsearch/issues/56738#issuecomment-628499718","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56738","id":628499718,"node_id":"MDEyOklzc3VlQ29tbWVudDYyODQ5OTcxOA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2020-05-14T09:02:13Z","updated_at":"2020-05-14T09:44:22Z","author_association":"MEMBER","body":"As @tvernum points out, \"latest\" is chronological, not semantic. From the [GitHub API docs](https://developer.github.com/v3/repos/releases/#get-the-latest-release):\r\n\r\n>The latest release is the most recent non-prerelease, non-draft release, sorted by the `created_at` attribute. The `created_at` attribute is the date of the commit used for the release, and not the date when the release was drafted or published.\r\n\r\nThere is nothing that we can do about this. I sent a mail to GitHub about this on September 5, 2019. Here are the content of that mail:\r\n\r\n>The [latest release][0] for a repository is defined by the date of the commit used to create the release. The problem with this approach is that it doesn’t respect versioning. So imagine a repository that releases a patch release and the next minor release: 7.3.2 and 7.4.0. If the date of the commit used to create 7.3.2 so happens to be after the date of the commit used to create 7.4.0, then GitHub treats 7.3.2 as the latest release. I think this is surprising to users, and doesn’t aid in discovery of newer versions of products. This can also happen in cases when a repository is maintaining two or more major versions, and a release is performed for one of the earlier major versions (e.g., a previous major version that is in maintenance mode).\r\n\r\n>I think that developers should have the ability to control which release is considered the current latest release (e.g., via a separate API to change the latest pointer).\r\n\r\nHere is their standard reply:\r\n\r\n>Jason,\r\n\r\n>Thank you for contacting GitHub Developer Support. We wanted to let you know that we've received your message and will get to it as quickly as possible.\r\n\r\n>Ticket ID: 374221\r\n\r\n>If you have any additional information or would like to add anything to your initial message, now would be a great time to do so, feel free to reply to this email. If not, then rest assured your request is in the right hands :)\r\n\r\n>Thank you!\r\n>The GitHub Developer Support Team\r\n\r\nFollowed by an actual reply a few days later:\r\n\r\n>Hi Jason,\r\n\r\n>Thanks for taking the time to reach out and share your thoughts and suggestions. I think I see your point and why you expected more options here regarding the latest release. I'd be happy to pass that along to the product team working on releases to consider for the future, but can't make any promises.\r\n\r\n>Thanks again and if there's anything else you'd like to see improved -- please let us know.\r\n\r\n>Best,\r\n>Ivan\r\n\r\nGiven that there is nothing that we are going to do here without proper support from built-in GitHub functionality, I'm going to close this issue.\r\n\r\n[0]: https://developer.github.com/v3/repos/releases/#get-the-latest-release","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/628840008","html_url":"https://github.com/elastic/elasticsearch/issues/56738#issuecomment-628840008","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56738","id":628840008,"node_id":"MDEyOklzc3VlQ29tbWVudDYyODg0MDAwOA==","user":{"login":"brainix","id":1017698,"node_id":"MDQ6VXNlcjEwMTc2OTg=","avatar_url":"https://avatars2.githubusercontent.com/u/1017698?v=4","gravatar_id":"","url":"https://api.github.com/users/brainix","html_url":"https://github.com/brainix","followers_url":"https://api.github.com/users/brainix/followers","following_url":"https://api.github.com/users/brainix/following{/other_user}","gists_url":"https://api.github.com/users/brainix/gists{/gist_id}","starred_url":"https://api.github.com/users/brainix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brainix/subscriptions","organizations_url":"https://api.github.com/users/brainix/orgs","repos_url":"https://api.github.com/users/brainix/repos","events_url":"https://api.github.com/users/brainix/events{/privacy}","received_events_url":"https://api.github.com/users/brainix/received_events","type":"User","site_admin":false},"created_at":"2020-05-14T19:23:39Z","updated_at":"2020-05-14T19:23:39Z","author_association":"NONE","body":"Thank you all for following up. I'll modify my scripts to check for the highest version by relying on semver instead of GitHub's latest release tag. :-)","performed_via_github_app":null}]