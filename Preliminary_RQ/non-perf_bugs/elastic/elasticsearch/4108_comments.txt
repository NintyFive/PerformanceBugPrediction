[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/27987516","html_url":"https://github.com/elastic/elasticsearch/issues/4108#issuecomment-27987516","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4108","id":27987516,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTg3NTE2","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2013-11-07T17:34:00Z","updated_at":"2013-11-07T17:35:54Z","author_association":"NONE","body":"Any comment? It's a real showstopper for us! \n\nI did a big (considering size of our mappings) rework getting away from using __all because I needed a combined field like _all but analyzed differently (stemmed, shingled, regular...) just to find that multifield is unusable for us because it does not take boost per contributing field into account like _all does\n\nPlease let me know if it is a bug and can be fixed or it is not possible i must go back to using _all :-( \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28016111","html_url":"https://github.com/elastic/elasticsearch/issues/4108#issuecomment-28016111","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4108","id":28016111,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDE2MTEx","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2013-11-07T23:06:30Z","updated_at":"2013-11-07T23:27:57Z","author_association":"MEMBER","body":"This is again related to the use of `\"path\":\"just_name\"`. The `boost` is usually taken into account when using an ordinary `multi_field`, but if you use \"just_name\" for fields with same name, you merge their content into the same lucene field. That said, applying different boosts to the same lucene field doesn't make much sense to me, and that is why your `boost` gets ignored. If you want to give different weights to those fields, you need to keep them distinct.\n\nI would keep a variation with unique name so that the boost will be taken into account, as they will actually be different lucene fields. Otherwise you could just drop index time boosting and use a multi_match query against multiple fields, giving a different weight to each field.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28016827","html_url":"https://github.com/elastic/elasticsearch/issues/4108#issuecomment-28016827","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4108","id":28016827,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDE2ODI3","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2013-11-07T23:17:35Z","updated_at":"2013-11-07T23:25:32Z","author_association":"NONE","body":"Thank you @javanna but in this case my intention is to combine data from multiple properties into a single field to act like _all. \n\n_all does support bust based on which field contributes to it:\n\n\"One of the nice features of the _all field is that it takes into account specific fields boost levels. Meaning that if a title field is boosted more than content, the title (part) in the _all field will mean more than the content (part) in the _all field.\"\n\nThe boost can be applied to individual tokens right? what I expected is that each individual property contributing to the shared (collapsed) multi_field would mark its content with defined boost\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28017336","html_url":"https://github.com/elastic/elasticsearch/issues/4108#issuecomment-28017336","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4108","id":28017336,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDE3MzM2","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2013-11-07T23:24:55Z","updated_at":"2013-11-07T23:25:11Z","author_association":"CONTRIBUTOR","body":"I agree with @roytmana - the field boosts are retained when indexing into `_all`, and I assumed that the same thing would apply when indexing from multiple fields into a single index_name.\n\nIn fact, I'd say that this is the one place where field-level index time boosting has a purpose.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28017591","html_url":"https://github.com/elastic/elasticsearch/issues/4108#issuecomment-28017591","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4108","id":28017591,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDE3NTkx","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2013-11-07T23:28:43Z","updated_at":"2013-11-07T23:29:04Z","author_association":"MEMBER","body":"Yeah I see your point guys, I agree, looking into it :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28019247","html_url":"https://github.com/elastic/elasticsearch/issues/4108#issuecomment-28019247","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4108","id":28019247,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDE5MjQ3","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2013-11-07T23:55:47Z","updated_at":"2013-11-07T23:55:47Z","author_association":"NONE","body":"more so, I expected analyzers and position offset gaps to be honored per contributing field so we have a fine-grained control over how such combined field get put together\n\nfor example I use phrase searches and I want to make sure searches across content from different contributing fields are not matched - I would use position_offset_gap for such fields\n\nor I want some fields to contribute stemmed content and few other (say people names or some codes) not stemmed etc.\n\nThis is what makes it so powerful\n\nAnd thanks for looking into it i was getting kind of desperate of this issue being \"ignored\" I banked lots of my design on multifield power\n\nnow when's it going to be fixed ? :-) ha ha\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28019324","html_url":"https://github.com/elastic/elasticsearch/issues/4108#issuecomment-28019324","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4108","id":28019324,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDE5MzI0","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2013-11-07T23:57:19Z","updated_at":"2013-11-07T23:57:19Z","author_association":"CONTRIBUTOR","body":">  I expected analyzers and position offset gaps to be honored per contributing field so we have a fine-grained control over how such combined field get put together\n\nare they not? i was pretty sure they were.\n\nIf not, could you provide a recreation?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28019807","html_url":"https://github.com/elastic/elasticsearch/issues/4108#issuecomment-28019807","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4108","id":28019807,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDE5ODA3","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2013-11-08T00:06:02Z","updated_at":"2013-11-08T00:06:36Z","author_association":"NONE","body":"maybe they are working I guess I was dramatizing it a bit :-) after struggle with multifield and related highlighting issues (i feel current multifield primary field to index_name naming  when using 'just_name' is very unintuitive right now see #4123 as it lumps all primary fields in one lucene field which is in 99% of cases is not what I would expect)\n\nI will test it later tonight or tomorrow and report\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28022049","html_url":"https://github.com/elastic/elasticsearch/issues/4108#issuecomment-28022049","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4108","id":28022049,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDIyMDQ5","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2013-11-08T00:50:06Z","updated_at":"2013-11-08T00:50:50Z","author_association":"MEMBER","body":"I checked how the `_all` field works and it has a special treatment, which is why we specifically mention that it keeps the boost from the original fields. \n\nThe reason why I said in the first place that it doesn't make sense to have more than one boost for the same field is that index time boosting is per field, using field norms, thus only one value per field. To work around this the `_all` field contains a payload per term with the original boost, that is used at query time for scoring. This is something that we do only for the `_all` field and I'm not even sure if we should do it whenever using the same `index_name` for different fields.\n\nBut we should definitely take this into account in the discussion on https://github.com/elasticsearch/elasticsearch/issues/4099 regarding future improvements.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28025717","html_url":"https://github.com/elastic/elasticsearch/issues/4108#issuecomment-28025717","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4108","id":28025717,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDI1NzE3","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2013-11-08T01:55:43Z","updated_at":"2013-11-08T01:55:43Z","author_association":"NONE","body":"oh no! back to using _all field then :-( \nso much time wasted and no improvements I hoped for.\nI should have tested multifield boosts before basing my design on them\n\noh well hope you will be able to pull a miracle out of the hat :-)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/29715711","html_url":"https://github.com/elastic/elasticsearch/issues/4108#issuecomment-29715711","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4108","id":29715711,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NzE1NzEx","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2013-12-03T14:54:51Z","updated_at":"2013-12-03T14:55:14Z","author_association":"CONTRIBUTOR","body":"@roytmana you can achieve what you are after (ie per-field index time boosts) by querying both your custom `_all` field and the individual field, eg lets say you wanted to search `first_name` and `last_name` using the single `full_name` field, your mapping would look like this:\n\n```\ncurl -XPUT \"http://localhost:9200/myindex\" -d'\n{\n    \"mappings\": {\n        \"person\": {\n            \"properties\": {\n                \"first_name\": {\n                    \"type\": \"multi_field\",\n                    \"path\": \"just_name\",\n                    \"fields\": {\n                        \"first_name\": { \"type\": \"string\"},\n                        \"full_name\": { \"type\": \"string\"}\n                    }\n                },\n                \"last_name\": {\n                    \"type\": \"multi_field\",\n                    \"path\": \"just_name\",\n                    \"fields\": {\n                        \"last_name\": { \"type\": \"string\"},\n                        \"full_name\": { \"type\": \"string\"}\n                    }\n                }\n            }\n        }\n    }\n}'\n```\n\nThen if you wanted to give a slight boost to the `last_name` field, you could do:\n\n```\ncurl -XPOST \"http://localhost:9200/myindex/person/_search\" -d'\n{\n   \"query\": {\n      \"bool\": {\n         \"must\": {\n            \"match\": {\n               \"full_name\": \"john smith\"\n            }\n         },\n         \"should\": {\n            \"match\": {\n               \"last_name\": {\n                  \"query\": \"john smith\",\n                  \"boost\": 0.5\n               }\n            }\n         }\n      }\n   }\n}'\n```\n\nYou could even use the `rescore` functionality to achieve something similar:\n\n```\ncurl -XPOST \"http://localhost:9200/myindex/person/_search\" -d'\n{\n   \"query\": {\n      \"match\": {\n         \"full_name\": \"john smith\"\n      }\n   },\n   \"rescore\": {\n      \"window_size\": 50,\n      \"query\": {\n         \"rescore_query_weight\": 0.5,\n         \"rescore_query\": {\n            \"match\": {\n               \"last_name\": {\n                  \"query\": \"john smith\"\n               }\n            }\n         }\n      }\n   }\n}'\n```\n\nAnd this would probably be more efficient (and certainly more flexible) than using payloads to implement field-level index time boosts on custom `_all` fields.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/29717536","html_url":"https://github.com/elastic/elasticsearch/issues/4108#issuecomment-29717536","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4108","id":29717536,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NzE3NTM2","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2013-12-03T15:14:36Z","updated_at":"2013-12-03T15:14:36Z","author_association":"NONE","body":"Thank you @clintongormley I did not think of re-score but I did use the first approach. My issue is that I have a highly structured data - over 100 fields and it is just the beginning. Half of them are not very useful but i can't afford not to include them in my search but meed to massively de-emphasize them or they will drown the useful results. Another half provide good search corpus with some being more important than others. Out of this half there is a handful of highly relevant fields that gets special boost. \nI find that managing it all in queries will bloat queries to no end, require to make sure it is consistent across all the queries, require third parties who may develop against the index to have same knowledge, require the same analysis on the individual fields as  on the _all (ex. stemming)\n\nI do not know I guess I could go this route with should clause listing all \"important\" fields (over 70 now) with various boosts and make sure they analyzed the same as _all (or my _all-like multifield) but I do not know if it will scale in terms of complexity as number of my fields triples in next version. Not sure if it can cause performance issues\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31941748","html_url":"https://github.com/elastic/elasticsearch/issues/4108#issuecomment-31941748","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4108","id":31941748,"node_id":"MDEyOklzc3VlQ29tbWVudDMxOTQxNzQ4","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2014-01-09T15:23:49Z","updated_at":"2014-01-09T15:23:49Z","author_association":"MEMBER","body":"Closing this issue in favour of #4520, which will take care of custom `_all` fields.\n","performed_via_github_app":null}]