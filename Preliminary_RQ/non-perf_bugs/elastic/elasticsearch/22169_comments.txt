[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/267069513","html_url":"https://github.com/elastic/elasticsearch/issues/22169#issuecomment-267069513","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22169","id":267069513,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NzA2OTUxMw==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-12-14T15:49:20Z","updated_at":"2016-12-14T15:49:20Z","author_association":"CONTRIBUTOR","body":"For examples of what visualizations this agg underpins see http://www.caleydo.org/tools/upset/","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/267070020","html_url":"https://github.com/elastic/elasticsearch/issues/22169#issuecomment-267070020","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22169","id":267070020,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NzA3MDAyMA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-12-14T15:51:00Z","updated_at":"2016-12-14T15:51:00Z","author_association":"CONTRIBUTOR","body":"Agreed with doing another agg rather than adding options to terms.\r\n\r\nDo you always need this on the same field, or sometimes on two fields as well (if one field is a source and the other field a destination)?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/267072573","html_url":"https://github.com/elastic/elasticsearch/issues/22169#issuecomment-267072573","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22169","id":267072573,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NzA3MjU3Mw==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-12-14T15:59:38Z","updated_at":"2016-12-14T15:59:38Z","author_association":"CONTRIBUTOR","body":"Multi-field is possibly a requirement and I haven't thought too deeply about that other than we might want the option to liberate terms from the fields when grouping e.g. I know `from` `to` and `cc` in email docs all contain email addresses and I just want to see when various email addresses have interacted over time. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/267271219","html_url":"https://github.com/elastic/elasticsearch/issues/22169#issuecomment-267271219","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22169","id":267271219,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NzI3MTIxOQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-12-15T08:48:17Z","updated_at":"2016-12-15T08:48:17Z","author_association":"CONTRIBUTOR","body":"I don't have any objections, se let's give it a try? One requirement I have is to make sure it has a minimal set of options, eg. no configurable sorting, only fields (not scripts), no `min_doc_count`, etc.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/267281873","html_url":"https://github.com/elastic/elasticsearch/issues/22169#issuecomment-267281873","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22169","id":267281873,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NzI4MTg3Mw==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-12-15T09:35:01Z","updated_at":"2016-12-15T09:35:01Z","author_association":"CONTRIBUTOR","body":">One requirement I have is to make sure it has a minimal set of options\r\n\r\n++  ...although there is one extra option I'd like to see: _support for grouping_. Users sometimes need to organise requested terms into groups and examine the intersections between groups of terms. Grouping is a feature of Graph UI and users to want to examine intersections at this level of detail. Currently the UI uses `filters` aggs instead of `terms` aggs to achieve this but grouped or ungrouped, the principle is the same - we don't want N² entity intersection results when we could have (N²-N)/2.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/267356352","html_url":"https://github.com/elastic/elasticsearch/issues/22169#issuecomment-267356352","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22169","id":267356352,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NzM1NjM1Mg==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-12-15T15:30:40Z","updated_at":"2016-12-15T15:30:40Z","author_association":"CONTRIBUTOR","body":"Here's a rough cut at the syntax.\r\nI'm calling the agg `adjacency` and the unit of grouping an _entity_ . In an adjacency agg we just list a set of `entities` whose interactions we want to examine.\r\nEach _entity_ consists of:\r\n* A user-supplied unique key (mandatory, used in the response)\r\n* An optional definition of what index terms (`fields` and `values`) are grouped into this entity.\r\n\r\nIf any of the entity definitions lack a `values` clause the entity key is assumed to be the indexed term (I expect most of the time the values clause will be missing).\r\nIf any of the entity definitions lack a `fields` clause they inherit the `default_fields` setting at the root of the agg.\r\n\r\nLet's start with the simple case of entities sharing a single common field:\r\n\r\n\t{\r\n\t\t\"aggs\": {\r\n\t\t\t\"intersections\":{\r\n\t\t\t\t\"adjacency\":{\r\n\t\t\t\t\t\"default_fields\" : [\"actors\"],\r\n\t\t\t\t\t\"entities\" : {\r\n                                               \"Tom Hanks\":{},\r\n                                               \"Meg Ryan\":{}...\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t},\r\n\t\t\t\t\"aggs\":{\r\n\t\t\t\t\t\"when_appeared_together\" {\r\n\t\t\t\t\t\t\"date_histogram\":{...}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\r\n\r\nThis would give:\r\n\r\n\t{\r\n\t\t\"intersections\": {\r\n\t\t\t\"Meg Ryan\": {\r\n\t\t\t\t\"doc_count\":5,\r\n\t\t\t\t\"intersects\": {\r\n\t\t\t\t\t\"Tom Hanks\": {\r\n\t\t\t\t\t\t\"doc_count\":2,\r\n\t\t\t\t\t\t\"aggs\":{\r\n\t\t\t\t\t\t\t\"when_appeared_together\"...\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\"Tom Hanks\":{\r\n\t\t\t\t\"doc_count\":30,\r\n\t\t\t\t\"intersects\":{}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\nNote we get doc_counts for each of the actors on their own and the smallest-possible set of results to describe all of the intersections. This is a trivial example but when supplying more actors we might find that the \"Tom Hanks\" at the root of the response would contain `intersects` detail for the actors with a key greater-than \"Tom Hanks\" e.g. \"Tom Hardy\".  \r\n\r\n\r\nIf we have entities that come from different fields we'd need to explicitly define the `fields` parameter for each entity. In this example we consider IP addresses accessing a particular user-account\r\n\r\n\t{\r\n\t\t\"aggs\": {\r\n\t\t\t\"intersections\":{\r\n\t\t\t\t\"adjacency\":{\r\n\t\t\t\t\t\"entities\" :  \r\n\t\t\t\t\t\t\"183.23.10.45\": { \r\n\t\t\t\t\t\t\t\"fields\":[\"ip\"]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"@elasticmark\":{ \r\n\t\t\t\t\t\t\t\"fields\":[\"account_id\"]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"aggs\":{\r\n\t\t\t\t\t\t\"last_log_in\":{\r\n\t\t\t\t\t\t\t\"max\":{...}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\r\n\t//results\r\n\t{\r\n\t\t\"intersections\": {\r\n\t\t\t\"@elasticmark\": {\r\n\t\t\t\t\"doc_count\":5,\r\n\t\t\t\t\"intersects\": {\r\n\t\t\t\t\t\"183.23.10.45\": {\r\n\t\t\t\t\t\t\"doc_count\":2,\r\n\t\t\t\t\t\t\"aggs\":{\r\n\t\t\t\t\t\t\t\"last_log_in\" ...\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\"183.23.10.45\":{\r\n\t\t\t\t\"doc_count\":30,\r\n\t\t\t\t\"intersects\":{}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\r\nIn the next scenario we have only one type of entity (bank account ID) but we find examples of this entity in both `payer` and `payee` fields. We use a common `default_fields` setting which is inherited by each entity definition so we don't care which field the key is found in:\r\n\r\n\t{\r\n\t\t\"aggs\": {\r\n\t\t\t\"intersections\":{\r\n\t\t\t\t\"adjacency\":{\r\n\t\t\t\t\t\"default_fields\" : [\"payer\", \"payee\"],\r\n\t\t\t\t\t\"entities\" : {\r\n\t\t\t\t\t\t\"Mr Big\":{},\r\n\t\t\t\t\t\t\"Mule 3\":{}, \r\n\t\t\t\t\t\t\"Dealer 2\":{}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"aggs\":{\r\n\t\t\t\t\t\"money_exchanged\":{\r\n\t\t\t\t\t\t\"sum\": {...}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\r\n\t//results\r\n\t{\r\n\t\t\"intersections\": {\r\n\t\t\t\"Mr Big\": {\r\n\t\t\t\t\"doc_count\":5,\r\n\t\t\t\t\"intersects\": {\r\n\t\t\t\t\t\"Mule 3\": {\r\n\t\t\t\t\t\t\"doc_count\":2,\r\n\t\t\t\t\t\t\"aggs\":{\r\n\t\t\t\t\t\t\t\"money_exchanged\"...\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\"Mule 3\":{\r\n\t\t\t\t\"doc_count\":30,\r\n\t\t\t\t\"intersects\":{}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\nThis is a similar example except we have an IP address entity found on `srcIP` and `destIP` fields. We are just interested in the volumes of data transferred between servers:\r\n\r\n\t{\r\n\t\t\"aggs\": {\r\n\t\t\t\"intersections\":{\r\n\t\t\t\t\"adjacency\":{\r\n\t\t\t\t\t\"default_fields\" : [\"destIP\", \"srcIP\"],\r\n\t\t\t\t\t\"entities\" : {\r\n\t\t\t\t\t\t\t\t\"183.23.10.45\":{},\r\n\t\t\t\t\t\t\t\t\"192.168.2.1\":{},....\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"aggs\":{\r\n\t\t\t\t\t\"bytes_exchanged\":{\r\n\t\t\t\t\t\t\"sum\":{...}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\r\n\t//results\r\n\t{\r\n\t\t\"intersections\": {\r\n\t\t\t\"183.23.10.45\": {\r\n\t\t\t\t\"doc_count\":5,\r\n\t\t\t\t\"intersects\": {\r\n\t\t\t\t\t\"192.168.2.1\": {\r\n\t\t\t\t\t\t\"doc_count\":2,\r\n\t\t\t\t\t\t\"aggs\":{\r\n\t\t\t\t\t\t\t\"bytes_exchanged\"...\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\"192.168.2.1\":{\r\n\t\t\t\t\"doc_count\":30,\r\n\t\t\t\t\"intersects\":{}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\nIn this example we have only two entities (`webservers` and `appservers`) but each of these are a grouping of child entities.\r\n\r\n\t{\r\n\t\t\"aggs\": {\r\n\t\t\t\"intersections\":{\r\n\t\t\t\t\"adjacency\":{\r\n\t\t\t\t\t\"default_fields\" : [\"destIP\", \"srcIP\"],\r\n\t\t\t\t\t\"entities\" : {\r\n\t\t\t\t\t\t\t\t\"webservers\": {\r\n\t\t\t\t\t\t\t\t\t\t\"entities\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"192.168.2.1\":{},\r\n\t\t\t\t\t\t\t\t\t\t\t\"192.168.2.2\":{}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"appservers\": {\r\n\t\t\t\t\t\t\t\t\t\t\"entities\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"192.168.4.1\":{},\r\n\t\t\t\t\t\t\t\t\t\t\t\"192.168.4.2\":{}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"aggs\":{\r\n\t\t\t\t\t\"bytes_exchanged\" :{\r\n\t\t\t\t\t\t\"sum\":{...}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\r\n\t//results\r\n\t{\r\n\t\t\"intersections\": {\r\n\t\t\t\"webservers\": {\r\n\t\t\t\t\"doc_count\":5,\r\n\t\t\t\t\"intersects\": {\r\n\t\t\t\t\t\"appservers\": {\r\n\t\t\t\t\t\t\"doc_count\":2,\r\n\t\t\t\t\t\t\"aggs\":{\r\n\t\t\t\t\t\t\t\"bytes_exchanged\"...\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\"appservers\":{\r\n\t\t\t\t\"doc_count\":30,\r\n\t\t\t\t\"intersects\":{}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\r\nIn this example we use the same groups (webservers and appservers) but make the relationship directional by considering only one of the roles the entity has (source or destination). This is done by using the different field names\r\n\r\n\t// User-defined groups - directional\r\n\t{\r\n\t\t\"aggs\": {\r\n\t\t\t\"intersections\":{\r\n\t\t\t\t\"adjacency\":{\r\n\t\t\t\t\t\"entities\" : {\r\n\t\t\t\t\t\t\t\t\"webservers_src\": {\r\n\t\t\t\t\t\t\t\t\t\t\"default_fields\" : [\"srcIP\"],\r\n\t\t\t\t\t\t\t\t\t\t\"entities\": {\"192.168.2.1\":{},...}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"appservers_target\": {\r\n\t\t\t\t\t\t\t\t\t\t\"default_fields\" : [\"destIP\"]\r\n\t\t\t\t\t\t\t\t\t\t\"entities\": {\"192.168.4.2\":{}...}\r\n\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"aggs\":{\r\n\t\t\t\t\t\"data_served\":{\r\n\t\t\t\t\t\t\"sum\":{\r\n\t\t\t\t\t\t\t\"field\": \"response_size\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\r\n\t//results\r\n\t{\r\n\t\t\"intersections\": {\r\n\t\t\t\"webservers_src\": {\r\n\t\t\t\t\"doc_count\":5,\r\n\t\t\t\t\"intersects\": {\r\n\t\t\t\t\t\"appservers_target\": {\r\n\t\t\t\t\t\t\"doc_count\":2,\r\n\t\t\t\t\t\t\"aggs\":{\r\n\t\t\t\t\t\t\t\"data_served\"...\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\"appservers_target\":{\r\n\t\t\t\t\"doc_count\":30,\r\n\t\t\t\t\"intersects\":{}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/267558005","html_url":"https://github.com/elastic/elasticsearch/issues/22169#issuecomment-267558005","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22169","id":267558005,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NzU1ODAwNQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-12-16T09:56:51Z","updated_at":"2016-12-16T09:56:51Z","author_association":"CONTRIBUTOR","body":"There may be some different execution models here.\r\nIf there's a small number of entities but each are composed of many grouped terms (e.g. my `webservers` and `appservers` example) then we could use a `Filters` agg approach and build a Bits structure for each entity. This would be largely localised serial access (for each term, read a list of doc IDs) versus the `terms` agg approach of looking up doc values where not every lookup necessarily yields a match. Doing intersects will obviously be easier using Bits.\r\n\r\nThe disadvantage of the Bits approach is it would require more memory if the number of entities is large.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/267574722","html_url":"https://github.com/elastic/elasticsearch/issues/22169#issuecomment-267574722","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22169","id":267574722,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NzU3NDcyMg==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-12-16T11:28:15Z","updated_at":"2016-12-16T11:28:34Z","author_association":"CONTRIBUTOR","body":"If we think Bits filters are the way to go we could actually implement this just by adding a `return_intersections` boolean param to the existing `filters` agg. It could then return additional buckets for key pairs using a separator for the combined key e.g. `key1|key2`","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/267659898","html_url":"https://github.com/elastic/elasticsearch/issues/22169#issuecomment-267659898","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22169","id":267659898,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NzY1OTg5OA==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-12-16T18:15:43Z","updated_at":"2016-12-16T18:15:43Z","author_association":"CONTRIBUTOR","body":"I put together a PR based on the Filters/Bits approach : https://github.com/elastic/elasticsearch/pull/22239","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274129404","html_url":"https://github.com/elastic/elasticsearch/issues/22169#issuecomment-274129404","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22169","id":274129404,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDEyOTQwNA==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2017-01-20T17:26:41Z","updated_at":"2017-01-20T17:26:41Z","author_association":"CONTRIBUTOR","body":"Pushed to master https://github.com/elastic/elasticsearch/commit/f01784205f4512a989ed85382d02cd645bf2f667\r\nand 5.x https://github.com/elastic/elasticsearch/commit/190bd7dbf3df35667bd401c6e5573876f39745e1","performed_via_github_app":null}]