[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265476357","html_url":"https://github.com/elastic/elasticsearch/issues/21658#issuecomment-265476357","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21658","id":265476357,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTQ3NjM1Nw==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2016-12-07T15:25:32Z","updated_at":"2016-12-07T15:25:32Z","author_association":"CONTRIBUTOR","body":"The logs show a RetryOnPrimaryException:\r\n\r\n```\r\n 1> [2016-11-18T14:17:11,821][TRACE][o.e.a.i.TransportIndexAction] [node_t1] received an error from node [XNNdUwGgQKG6orqmdvg6ZA] for request [org.elasticsearch.action.support.replication.TransportReplicationAction$ConcreteShardRequest@2460aa75], scheduling a retry\r\n  1> org.elasticsearch.transport.RemoteTransportException: [node_t1][127.0.0.1:30309][indices:data/write/index[p]]\r\n  1> Caused by: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: primary shard [[test][2], node[XNNdUwGgQKG6orqmdvg6ZA], [P], s[STARTED], a[id=CXCRQ8mvRDe6BAt2YVwSSw]] was demoted while failing replica shard\r\n  1> \tat org.elasticsearch.action.support.replication.ReplicationOperation.onPrimaryDemoted(ReplicationOperation.java:227) ~[main/:?]\r\n  1> \tat org.elasticsearch.action.support.replication.ReplicationOperation.access$600(ReplicationOperation.java:55) ~[main/:?]\r\n...\r\n```\r\n\r\nWhat could have had happened here (logs indicate this, but not 100% due to missing toString() on `ConcreteShardRequest`):\r\n\r\n- indexing request is indexed into primary, replicated to one replica but not the other.\r\n- Node with primary tries to fail the second replica, but while doing so, get's notified by the master that it's not the primary anymore.\r\n- The node with the primary throws a RetryOnPrimaryException which routes the request to the new primary shard.\r\n- This new primary shard is the previous replica that already has the data. The data gets reindexed (overrides the existing data) and the response gets marked as \"updated\" instead of \"created\", which is probably confusing to a user.\r\n\r\nFor index requests that are handled as part of bulk shard requests, we already have special handling of versions so that the version is reset on a RetryOnPrimaryException. Does it also encompass this scenario and do we return CREATED or UPDATED in that case?\r\n\r\n/cc: @bleskes, @areek","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/360832032","html_url":"https://github.com/elastic/elasticsearch/issues/21658#issuecomment-360832032","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21658","id":360832032,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDgzMjAzMg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-01-26T16:24:45Z","updated_at":"2018-01-26T16:24:45Z","author_association":"CONTRIBUTOR","body":"I just looked at a recent failure (https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+6.x+multijob-unix-compatibility/os=oraclelinux/541/consoleFull) and see the following stack trace:\r\n\r\n```\r\n03:26:28   1> java.lang.NullPointerException: null\r\n03:26:28   1> \tat java.util.stream.Collectors.lambda$toMap$58(Collectors.java:1320) ~[?:1.8.0_151]\r\n03:26:28   1> \tat java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169) ~[?:1.8.0_151]\r\n03:26:28   1> \tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1380) ~[?:1.8.0_151]\r\n03:26:28   1> \tat java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:742) ~[?:1.8.0_151]\r\n03:26:28   1> \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481) ~[?:1.8.0_151]\r\n03:26:28   1> \tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) ~[?:1.8.0_151]\r\n03:26:28   1> \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_151]\r\n03:26:28   1> \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_151]\r\n03:26:28   1> \tat java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_151]\r\n03:26:28   1> \tat org.elasticsearch.discovery.zen.UnicastZenPing.sendPings(UnicastZenPing.java:475) ~[main/:?]\r\n03:26:28   1> \tat org.elasticsearch.discovery.zen.UnicastZenPing$1.doRun(UnicastZenPing.java:332) [main/:?]\r\n03:26:28   1> \tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:635) [main/:?]\r\n03:26:28   1> \tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [main/:?]\r\n03:26:28   1> \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_151]\r\n03:26:28   1> \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_151]\r\n03:26:28   1> \tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_151]\r\n```\r\n\r\nIt surprises me because it looks like this can only happen if the map, the key mapper or the value mapper is null, and non of these options looks possible to me? Or do I miss something?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/360976991","html_url":"https://github.com/elastic/elasticsearch/issues/21658#issuecomment-360976991","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21658","id":360976991,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDk3Njk5MQ==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2018-01-27T10:57:38Z","updated_at":"2018-01-27T10:57:38Z","author_association":"CONTRIBUTOR","body":"@jpountz While that failure is unrelated to the original failure for which this issue got opened, it led me to find another issue: #28405\r\nAs for the `NullPointerException`, I suspect that this is a concurrency issue due to the following preceding line:\r\n```\r\nSet<DiscoveryNode> nodesFromResponses = temporalResponses.stream().map(pingResponse -> {\r\n            assert clusterName.equals(pingResponse.clusterName()) :\r\n                \"got a ping request from a different cluster. expected \" + clusterName + \" got \" + pingResponse.clusterName();\r\n            return pingResponse.node();\r\n        }).collect(Collectors.toSet());\r\n```\r\nThe `temporalResponses` field is a `ConcurrentLinkedQueue`, and the `PingResponse.node` field is not final (and there is also no other final field in this class, hence no memory barrier, see https://shipilev.net/blog/2014/safe-public-construction/#_safe_initialization), so we might end up with a  set that contains `null`. The fix is to make the fields in `PingResponse` final and move it away from the legacy `Streamable` approach. I've opened #28406 for this.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/376554326","html_url":"https://github.com/elastic/elasticsearch/issues/21658#issuecomment-376554326","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21658","id":376554326,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NjU1NDMyNg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-03-27T14:51:10Z","updated_at":"2018-03-27T14:51:10Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/386870191","html_url":"https://github.com/elastic/elasticsearch/issues/21658#issuecomment-386870191","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21658","id":386870191,"node_id":"MDEyOklzc3VlQ29tbWVudDM4Njg3MDE5MQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2018-05-06T10:44:46Z","updated_at":"2018-05-06T10:44:54Z","author_association":"MEMBER","body":"We have a known issue https://github.com/elastic/elasticsearch/issues/9967 about retries semantics. Fixing this will be hard. I don't see any other option but to relax the test. I'll push that change soon.","performed_via_github_app":null}]