{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/30801","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30801/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30801/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30801/events","html_url":"https://github.com/elastic/elasticsearch/issues/30801","id":325562695,"node_id":"MDU6SXNzdWUzMjU1NjI2OTU=","number":30801,"title":"HTTP pipelining causes resource leak","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"labels":[{"id":146854632,"node_id":"MDU6TGFiZWwxNDY4NTQ2MzI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Network","name":":Distributed/Network","color":"0e8a16","default":false,"description":"Http and internode communication implementations"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":1223177445,"node_id":"MDU6TGFiZWwxMjIzMTc3NDQ1","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v7.0.0-beta1","name":"v7.0.0-beta1","color":"dddddd","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"tbrooks8","id":862472,"node_id":"MDQ6VXNlcjg2MjQ3Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/862472?v=4","gravatar_id":"","url":"https://api.github.com/users/tbrooks8","html_url":"https://github.com/tbrooks8","followers_url":"https://api.github.com/users/tbrooks8/followers","following_url":"https://api.github.com/users/tbrooks8/following{/other_user}","gists_url":"https://api.github.com/users/tbrooks8/gists{/gist_id}","starred_url":"https://api.github.com/users/tbrooks8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbrooks8/subscriptions","organizations_url":"https://api.github.com/users/tbrooks8/orgs","repos_url":"https://api.github.com/users/tbrooks8/repos","events_url":"https://api.github.com/users/tbrooks8/events{/privacy}","received_events_url":"https://api.github.com/users/tbrooks8/received_events","type":"User","site_admin":false},"assignees":[{"login":"tbrooks8","id":862472,"node_id":"MDQ6VXNlcjg2MjQ3Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/862472?v=4","gravatar_id":"","url":"https://api.github.com/users/tbrooks8","html_url":"https://github.com/tbrooks8","followers_url":"https://api.github.com/users/tbrooks8/followers","following_url":"https://api.github.com/users/tbrooks8/following{/other_user}","gists_url":"https://api.github.com/users/tbrooks8/gists{/gist_id}","starred_url":"https://api.github.com/users/tbrooks8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbrooks8/subscriptions","organizations_url":"https://api.github.com/users/tbrooks8/orgs","repos_url":"https://api.github.com/users/tbrooks8/repos","events_url":"https://api.github.com/users/tbrooks8/events{/privacy}","received_events_url":"https://api.github.com/users/tbrooks8/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2018-05-23T06:15:59Z","updated_at":"2019-02-07T08:31:32Z","closed_at":"2018-05-25T11:15:44Z","author_association":"MEMBER","active_lock_reason":null,"body":"**Elasticsearch version**:  7.0.0-alpha1-SNAPSHOT (distribution flavor OSS), commit  https://github.com/elastic/elasticsearch/commit/31251c9a6d317cddc65c526a1cfc56aebc96e11c\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nElasticsearch dies with OOME in our benchmarks. This is caused by a resource leak on the network layer.\r\n\r\n**Steps to reproduce**:\r\n\r\nRun the following benchmark with Rally (it will build the right revision of Elasticsearch already):\r\n\r\n```\r\nesrally --revision=1918a30 --challenge=append-no-conflicts-index-only --on-error=abort\r\n```\r\n\r\nAfter a few minutes (about 17%) into the benchmark, Elasticsearch will die with an OOME.\r\n\r\n**Provide logs (if relevant)**:\r\n\r\nIn the logs we see:\r\n\r\n```\r\n[2018-05-23T07:31:31,811][ERROR][i.n.u.ResourceLeakDetector] LEAK: ByteBuf.release() was not called before it's garbage-collected. See http://netty.io/wiki/reference-counted-objects.html for more information.\r\n```\r\n\r\nIf we start Elasticsearch with `-Dio.netty.leakDetection.level=advanced` we get:\r\n\r\n<details>\r\n    <summary>Click arrow for details</summary>\r\n    <pre>\r\n[2018-05-23T07:31:31,811][ERROR][i.n.u.ResourceLeakDetector] LEAK: ByteBuf.release() was not called before it's garbage-collected. See http://netty.io/wiki/reference-counted-objects.html for more information.\r\nWARNING: 7 leak records were discarded because the leak record count is limited to 4. Use system property io.netty.leakDetection.maxRecords to increase the limit.\r\nRecent access records: 4\r\n#4:\r\n\tHint: 'read_timeout' will handle the message from this point.\r\n\tio.netty.channel.DefaultChannelPipeline.touch(DefaultChannelPipeline.java:116)\r\n\tio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:345)\r\n\tio.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tio.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tio.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tio.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359)\r\n\tio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tio.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)\r\n\tio.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n\tio.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\n\tio.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:545)\r\n\tio.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)\r\n\tio.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\n\tio.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tjava.base/java.lang.Thread.run(Thread.java:844)\r\n#3:\r\n\tHint: 'openChannels' will handle the message from this point.\r\n\tio.netty.channel.DefaultChannelPipeline.touch(DefaultChannelPipeline.java:116)\r\n\tio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:345)\r\n\tio.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tio.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359)\r\n\tio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tio.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)\r\n\tio.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n\tio.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\n\tio.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:545)\r\n\tio.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)\r\n\tio.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\n\tio.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tjava.base/java.lang.Thread.run(Thread.java:844)\r\n#2:\r\n\tHint: 'DefaultChannelPipeline$HeadContext#0' will handle the message from this point.\r\n\tio.netty.channel.DefaultChannelPipeline.touch(DefaultChannelPipeline.java:116)\r\n\tio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:345)\r\n\tio.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)\r\n\tio.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n\tio.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\n\tio.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:545)\r\n\tio.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)\r\n\tio.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\n\tio.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tjava.base/java.lang.Thread.run(Thread.java:844)\r\n#1:\r\n\tio.netty.buffer.AdvancedLeakAwareByteBuf.writeBytes(AdvancedLeakAwareByteBuf.java:630)\r\n\tio.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:343)\r\n\tio.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:123)\r\n\tio.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\n\tio.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:545)\r\n\tio.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)\r\n\tio.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\n\tio.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tjava.base/java.lang.Thread.run(Thread.java:844)\r\nCreated at:\r\n\tio.netty.buffer.PooledByteBufAllocator.newHeapBuffer(PooledByteBufAllocator.java:314)\r\n\tio.netty.buffer.AbstractByteBufAllocator.heapBuffer(AbstractByteBufAllocator.java:162)\r\n\tio.netty.buffer.AbstractByteBufAllocator.heapBuffer(AbstractByteBufAllocator.java:153)\r\n\tio.netty.buffer.AbstractByteBufAllocator.ioBuffer(AbstractByteBufAllocator.java:135)\r\n\tio.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate(DefaultMaxMessagesRecvByteBufAllocator.java:80)\r\n\tio.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:122)\r\n\tio.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\n\tio.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:545)\r\n\tio.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)\r\n\tio.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\n\tio.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tjava.base/java.lang.Thread.run(Thread.java:844)\r\n</pre>\r\n</details>\r\n\r\nCan you please have a look at this @tbrooks8?","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}