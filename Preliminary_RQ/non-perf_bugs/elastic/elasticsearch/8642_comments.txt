[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/64433408","html_url":"https://github.com/elastic/elasticsearch/issues/8642#issuecomment-64433408","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8642","id":64433408,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NDMzNDA4","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-11-25T17:01:06Z","updated_at":"2014-11-25T17:01:06Z","author_association":"CONTRIBUTOR","body":"@dakrone any ideas what is needed here?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/64460320","html_url":"https://github.com/elastic/elasticsearch/issues/8642#issuecomment-64460320","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8642","id":64460320,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NDYwMzIw","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2014-11-25T19:53:35Z","updated_at":"2014-11-25T19:53:35Z","author_association":"MEMBER","body":"@clintongormley no idea\n\n@tcompart can you tell us more about your configuration? Is this a java project using Elasticsearch as a dependency? Maybe you can share the pom.xml and an example of a test that causes this.\n\nAre you creating groovy scripts in your tests or sending them to an Elasticsearch server?\n\nDoes your test create threads that are not being joined?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/64837936","html_url":"https://github.com/elastic/elasticsearch/issues/8642#issuecomment-64837936","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8642","id":64837936,"node_id":"MDEyOklzc3VlQ29tbWVudDY0ODM3OTM2","user":{"login":"tcompart","id":1919676,"node_id":"MDQ6VXNlcjE5MTk2NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1919676?v=4","gravatar_id":"","url":"https://api.github.com/users/tcompart","html_url":"https://github.com/tcompart","followers_url":"https://api.github.com/users/tcompart/followers","following_url":"https://api.github.com/users/tcompart/following{/other_user}","gists_url":"https://api.github.com/users/tcompart/gists{/gist_id}","starred_url":"https://api.github.com/users/tcompart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tcompart/subscriptions","organizations_url":"https://api.github.com/users/tcompart/orgs","repos_url":"https://api.github.com/users/tcompart/repos","events_url":"https://api.github.com/users/tcompart/events{/privacy}","received_events_url":"https://api.github.com/users/tcompart/received_events","type":"User","site_admin":false},"created_at":"2014-11-27T23:38:47Z","updated_at":"2014-11-27T23:38:47Z","author_association":"NONE","body":"Hey sorry for the late response.\nI try to give you a basic setup to reproduce the error.\n- We have groovy script, which are send to the elasticsearch cluster\n- We do not create threads. Everything is handled straight and directly by one thread only (main thread)\n- We have an indexing class, we have a searching class\n- Three objects are created and indexed with different group numbers. \n- We wait until all objects are index (calling a refresh on the index)\n- We want to order the search results by group number\n- We use a groovy script like the following to do this:\n\n```\nreturn SortBuilders.scriptSort(\n        \"n = _source.groupNumber; if(n==null){return 0;} else {return n;}\",\n        \"number\").order(SortOrder.DESC);\n```\n- With MWEL this works, with Elasticsearch 1.4.0 and groovy it also works in \"production\"\n- With elasticsearch test-jar the test is green, however the error output marks the test as failed\n- The pom looks like the following:\n\n```\n    <dependencies>\n        <dependency>\n            <groupId>org.apache.lucene</groupId>\n            <artifactId>lucene-test-framework</artifactId>\n            <version>4.10.2</version>\n        </dependency>\n\n        <dependency>\n            <groupId>com.carrotsearch.randomizedtesting</groupId>\n            <artifactId>randomizedtesting-runner</artifactId>\n            <version>2.1.10</version>\n            <exclusions>\n                <exclusion>\n                    <groupId>junit</groupId>\n                    <artifactId>junit</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.lucene</groupId>\n            <artifactId>lucene-core</artifactId>\n            <version>4.10.2</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.elasticsearch</groupId>\n            <artifactId>elasticsearch</artifactId>\n            <type>test-jar</type>\n            <scope>test</scope>\n            <version>1.4.0</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.elasticsearch</groupId>\n            <artifactId>elasticsearch-lang-groovy</artifactId>\n            <version>2.2.0</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.elasticsearch</groupId>\n            <artifactId>elasticsearch</artifactId>\n            <version>1.4.0</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-beans</artifactId>\n            <version>4.1.0.RELEASE</version>\n        </dependency>\n        <dependency>\n            <groupId>com.fasterxml.jackson.core</groupId>\n            <artifactId>jackson-databind</artifactId>\n            <version>2.3.4</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-context</artifactId>\n            <version>4.1.0.RELEASE</version>\n        </dependency>\n    </dependencies>    \n```\n\nAny ideas? \nMy test looks like this:\n\n```\n@ClusterScope(scope = Scope.SUITE, numDataNodes = 1)\npublic class ElasticsearchIntegrationTestBase extends ElasticsearchIntegrationTest {\n@Before\n  public void createIndex() throws IOException {\n    prepareCreate(ELASTIC_INDEX).setSettings(\n      ImmutableSettings.builder().loadFromSource(settings()).build())\n    .addMapping(ElasticIndexer.TYPE, mapping())\n    .execute()\n    .actionGet(timeValueSeconds(10));\n\n    ElasticsearchIntegrationTest.client()\n    .admin()\n    .cluster()\n    .prepareHealth()\n    .setWaitForActiveShards(NUMBER_OF_SHARDS)\n    .setWaitForGreenStatus()\n    .execute()\n    .actionGet();\n  }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/64869919","html_url":"https://github.com/elastic/elasticsearch/issues/8642#issuecomment-64869919","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8642","id":64869919,"node_id":"MDEyOklzc3VlQ29tbWVudDY0ODY5OTE5","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2014-11-28T08:55:06Z","updated_at":"2014-11-28T08:55:06Z","author_association":"MEMBER","body":"@tcompart from the look of the original failure, your test suite/infrastructure is leaking threads from `HystrixTimer` and the `RxComputationThreadPool`, it looks like you need to shut down the threadpool and Hystrix before your test suite ends so that they don't leak.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/65920947","html_url":"https://github.com/elastic/elasticsearch/issues/8642#issuecomment-65920947","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8642","id":65920947,"node_id":"MDEyOklzc3VlQ29tbWVudDY1OTIwOTQ3","user":{"login":"tcompart","id":1919676,"node_id":"MDQ6VXNlcjE5MTk2NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1919676?v=4","gravatar_id":"","url":"https://api.github.com/users/tcompart","html_url":"https://github.com/tcompart","followers_url":"https://api.github.com/users/tcompart/followers","following_url":"https://api.github.com/users/tcompart/following{/other_user}","gists_url":"https://api.github.com/users/tcompart/gists{/gist_id}","starred_url":"https://api.github.com/users/tcompart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tcompart/subscriptions","organizations_url":"https://api.github.com/users/tcompart/orgs","repos_url":"https://api.github.com/users/tcompart/repos","events_url":"https://api.github.com/users/tcompart/events{/privacy}","received_events_url":"https://api.github.com/users/tcompart/received_events","type":"User","site_admin":false},"created_at":"2014-12-07T00:23:23Z","updated_at":"2014-12-07T00:24:20Z","author_association":"NONE","body":"@dakrone \nThank you for your answer. It seems you are right.\nWith an additional @After Hystrix.reset() I could kill all existing HystrixThreads, however, the RxComputationThreadPool threads remain. \n\nI currently have no idea where they all are coming from.\nI never ever started Hystrix or Rx on my own. Lucenes RandomizedRunner is finding those open threads by its own: ThreadLeakControl.\n\nDo you have any ideas how to disable the check?\nOr how to kill open threads of RxComputationThreadPool. Is just me with this kind of problems? Thats really crazy.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/65932242","html_url":"https://github.com/elastic/elasticsearch/issues/8642#issuecomment-65932242","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8642","id":65932242,"node_id":"MDEyOklzc3VlQ29tbWVudDY1OTMyMjQy","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2014-12-07T10:00:09Z","updated_at":"2014-12-07T10:00:09Z","author_association":"CONTRIBUTOR","body":"I'd check who pulls in the `RxComputationThreadPool` and take it from there. This is actually a feature not a bug to be honest. You are leaving threads behind which is no-good. You can disable it by using\n`@ThreadLeakScope(Scope.NONE)` on your test class...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/65947205","html_url":"https://github.com/elastic/elasticsearch/issues/8642#issuecomment-65947205","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8642","id":65947205,"node_id":"MDEyOklzc3VlQ29tbWVudDY1OTQ3MjA1","user":{"login":"tcompart","id":1919676,"node_id":"MDQ6VXNlcjE5MTk2NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1919676?v=4","gravatar_id":"","url":"https://api.github.com/users/tcompart","html_url":"https://github.com/tcompart","followers_url":"https://api.github.com/users/tcompart/followers","following_url":"https://api.github.com/users/tcompart/following{/other_user}","gists_url":"https://api.github.com/users/tcompart/gists{/gist_id}","starred_url":"https://api.github.com/users/tcompart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tcompart/subscriptions","organizations_url":"https://api.github.com/users/tcompart/orgs","repos_url":"https://api.github.com/users/tcompart/repos","events_url":"https://api.github.com/users/tcompart/events{/privacy}","received_events_url":"https://api.github.com/users/tcompart/received_events","type":"User","site_admin":false},"created_at":"2014-12-07T18:19:31Z","updated_at":"2014-12-07T18:19:31Z","author_association":"NONE","body":"Thank you Simon.\n`@ThreadLeakScope(ThreadLeakScope.Scope.NONE)` acuatelly fixed the error. We did not know about this feature, and will investigate our tests to find the remaining RxComputationThreadPool-Threads. \n\nThank you so far, and I will close this issue, because we have now an idea about the error report, and we know how to fix the errors.\n","performed_via_github_app":null}]