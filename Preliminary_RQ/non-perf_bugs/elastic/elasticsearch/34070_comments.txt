[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/424652972","html_url":"https://github.com/elastic/elasticsearch/issues/34070#issuecomment-424652972","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34070","id":424652972,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNDY1Mjk3Mg==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2018-09-26T09:42:32Z","updated_at":"2018-09-26T09:42:32Z","author_association":"MEMBER","body":"`fuzzy` queries are considered as [term level](https://www.elastic.co/guide/en/elasticsearch/reference/current/term-level-queries.html) query. This means that the string is not analyzed when the query is built. With dynamic mapping a field that contains a string is mapped into a `text` field with a `standard` analyzer which will splits `Hello World` in two tokens `hello` and `world`. Since `fuzzy` query do not use analyzers, the query `Hello World`  will try to match any term in the index that is similar. However you field only contains `hello` and `world` as separate tokens in the index which is why your example does not match any document.\r\nYou can use a `match` query and sets the [fuzziness](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query.html#query-dsl-match-query-fuzziness) to force the analysis of the query string. Otherwise if you want to apply fuzziness to the entire content of a field you can use a `keyword` field which will not split the input into multiple tokens.","performed_via_github_app":null}]