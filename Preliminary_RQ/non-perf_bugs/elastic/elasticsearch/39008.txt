{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/39008","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39008/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39008/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39008/events","html_url":"https://github.com/elastic/elasticsearch/issues/39008","id":411195719,"node_id":"MDU6SXNzdWU0MTExOTU3MTk=","number":39008,"title":"Parse error with CompositeAggregation","user":{"login":"vaish1707","id":21258077,"node_id":"MDQ6VXNlcjIxMjU4MDc3","avatar_url":"https://avatars0.githubusercontent.com/u/21258077?v=4","gravatar_id":"","url":"https://api.github.com/users/vaish1707","html_url":"https://github.com/vaish1707","followers_url":"https://api.github.com/users/vaish1707/followers","following_url":"https://api.github.com/users/vaish1707/following{/other_user}","gists_url":"https://api.github.com/users/vaish1707/gists{/gist_id}","starred_url":"https://api.github.com/users/vaish1707/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vaish1707/subscriptions","organizations_url":"https://api.github.com/users/vaish1707/orgs","repos_url":"https://api.github.com/users/vaish1707/repos","events_url":"https://api.github.com/users/vaish1707/events{/privacy}","received_events_url":"https://api.github.com/users/vaish1707/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-02-17T14:53:29Z","updated_at":"2019-02-19T10:13:23Z","closed_at":"2019-02-19T10:13:23Z","author_association":"NONE","active_lock_reason":null,"body":"Parse error with CompositeValuesSourceBuilder extending DateHistogramValuesSourceBuilder\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 6.5.4\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`): 1.8\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): Mac OS\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nI have tried to achieve composite aggregation in my elastic query and I'm successfully able to receive results with regular elastic search query.\r\n\r\nJust a FYI I use date histogram aggregation with composite aggregation along with multiple sum sub aggregations.\r\n\r\nBut when tried the same with java API, the query is getting formed as expected using the searchSourceBuilder class . But an additional field \"missing_bucket\" is getting added to the DateHistogram query because I'm using DateHistogramValuesSourceBuilder which extends CompositeValuesSourceBuilder. The objects of the CompositeValuesSourceBuilder includes \"missing_bucket\" field and when DateHistogramValuesSourceBuilder is trying parse my query , and it fails with a parse exception\r\n\r\n**Steps to reproduce**:\r\n\r\n 1. Use elasticsearch java api 6.5.4\r\n 2. try to achieve composite aggregation with date histogram aggregation\r\n 3. Use DateHistogramValuesSourceBuilder which extends CompositeValuesSourceBuilder to set the values for DateHistogram aggregation\r\n\r\nException received:\r\n\r\norg.elasticsearch.ElasticsearchException: Elasticsearch exception [type=illegal_argument_exception, reason=[date_histogram] unknown field [missing_bucket], parser not found]\r\n\r\nHere is my code \r\n```\r\npublic ResponseDocument findbytime(String adapterName, String type, Integer duration) throws IOException {\r\n\t\tSearchRequest searchRequest = new SearchRequest(\"adapter\");\r\n\t\tSearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder();\r\n\t\tsearchSourceBuilder.query(QueryBuilders\r\n\t\t\t\t.boolQuery().must(QueryBuilders.rangeQuery(\"from.start\").gte(returnFromDate(type, duration))\r\n\t\t\t\t\t\t.lte(\"now-1m/m\").format(\"epoch_millis\"))\r\n\t\t\t\t.must(QueryBuilders.matchQuery(\"adapter_name\", adapterName)));\r\n\t\tList<CompositeValuesSourceBuilder<?>> sources = new ArrayList<>();\r\n\t\tsources.add(randomDateHistogramSourceBuilder());\r\n\t\tsearchSourceBuilder.aggregation(new CompositeAggregationBuilder(\"my_buckets\", sources)\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"success_add\").field(\"calls_out.success\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"failure_add\").field(\"calls_out.failure\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"total_add\").field(\"calls_out.total\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"total_in\").field(\"calls_in.total\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"partner_add\").field(\"calls_out.type.cloud_api.total\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"partner_success\").field(\"calls_out.type.cloud_api.success\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"partner_fail\").field(\"calls_out.type.cloud_api.fail\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"molecule_add\").field(\"calls_out.type.molecule.total\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"molecule_success\").field(\"calls_out.type.molecule.success\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"molecule_fail\").field(\"calls_out.type.molecule.fail\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"elements_add\").field(\"calls_out.type.elements.total\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"elements_success\").field(\"calls_out.type.elements.success\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"elements_fail\").field(\"calls_out.type.elements.fail\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"command_add\").field(\"calls_in.type.command_control.total\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"command_success\").field(\"calls_in.type.command_control.success\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"command_fail\").field(\"calls_in.type.command_control.fail\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"onboard_add\").field(\"calls_in.type.onboard.total\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"onboard_success\").field(\"calls_in.type.onboard.success\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"onboard_fail\").field(\"calls_in.type.onboard.fail\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"deviceHome_add\").field(\"calls_in.type.get_device.total\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"deviceHome_success\").field(\"calls_in.type.get_device.success\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"deviceHome_fail\").field(\"calls_in.type.get_device.fail\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"resync_add\").field(\"calls_in.type.resync.total\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"resync_success\").field(\"calls_in.type.resync.success\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"resync_fail\").field(\"calls_in.type.resync.fail\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"unlink_add\").field(\"calls_in.type.unlink.total\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"unlink_success\").field(\"calls_in.type.unlink.success\"))\r\n\t\t\t\t.subAggregation(AggregationBuilders.sum(\"unlink_fail\").field(\"calls_in.type.unlink.fail\")));\r\n\t\tsearchRequest.source(searchSourceBuilder);\r\n\t\tSearchResponse searchResponse = client.search(searchRequest, RequestOptions.DEFAULT);\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tprivate DateHistogramValuesSourceBuilder randomDateHistogramSourceBuilder() {\r\n\t\tDateHistogramValuesSourceBuilder histo = new DateHistogramValuesSourceBuilder(\"date\");\r\n\t\thisto.dateHistogramInterval(DateHistogramInterval.hours(1));\r\n\t\thisto.field(\"from.start\");\r\n\t\treturn histo;\r\n\t}\r\n```\r\nHere is my query which generated from java code with **missing_bucket** false value under **date_historgram** aggregation\r\n\r\n```\r\n{\r\n    \"query\": {\r\n        \"bool\": {\r\n            \"must\": [\r\n                {\r\n                    \"range\": {\r\n                        \"from.start\": {\r\n                            \"from\": \"now-24h\",\r\n                            \"to\": \"now-1m/m\",\r\n                            \"include_lower\": true,\r\n                            \"include_upper\": true,\r\n                            \"format\": \"epoch_millis\",\r\n                            \"boost\": 1\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"match\": {\r\n                        \"adapter_name\": {\r\n                            \"query\": \"Philips\",\r\n                            \"operator\": \"OR\",\r\n                            \"prefix_length\": 0,\r\n                            \"max_expansions\": 50,\r\n                            \"fuzzy_transpositions\": true,\r\n                            \"lenient\": false,\r\n                            \"zero_terms_query\": \"NONE\",\r\n                            \"auto_generate_synonyms_phrase_query\": true,\r\n                            \"boost\": 1\r\n                        }\r\n                    }\r\n                }\r\n            ],\r\n            \"adjust_pure_negative\": true,\r\n            \"boost\": 1\r\n        }\r\n    },\r\n    \"aggregations\": {\r\n        \"my_buckets\": {\r\n            \"composite\": {\r\n                \"size\": 10,\r\n                \"sources\": [\r\n                    {\r\n                        \"date\": {\r\n                            \"date_histogram\": {\r\n                                \"field\": \"from.start\",\r\n                                \"missing_bucket\": false,\r\n                                \"value_type\": \"date\",\r\n                                \"order\": \"asc\",\r\n                                \"interval\": \"1h\"\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            \"aggregations\": {\r\n                \"success_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.success\"\r\n                    }\r\n                },\r\n                \"failure_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.failure\"\r\n                    }\r\n                },\r\n                \"total_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.total\"\r\n                    }\r\n                },\r\n                \"total_in\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.total\"\r\n                    }\r\n                },\r\n                \"partner_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.cloud_api.total\"\r\n                    }\r\n                },\r\n                \"partner_success\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.cloud_api.success\"\r\n                    }\r\n                },\r\n                \"partner_fail\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.cloud_api.fail\"\r\n                    }\r\n                },\r\n                \"molecule_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.molecule.total\"\r\n                    }\r\n                },\r\n                \"molecule_success\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.molecule.success\"\r\n                    }\r\n                },\r\n                \"molecule_fail\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.molecule.fail\"\r\n                    }\r\n                },\r\n                \"elements_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.elements.total\"\r\n                    }\r\n                },\r\n                \"elements_success\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.elements.success\"\r\n                    }\r\n                },\r\n                \"elements_fail\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.elements.fail\"\r\n                    }\r\n                },\r\n                \"command_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.command_control.total\"\r\n                    }\r\n                },\r\n                \"command_success\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.command_control.success\"\r\n                    }\r\n                },\r\n                \"command_fail\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.command_control.fail\"\r\n                    }\r\n                },\r\n                \"onboard_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.onboard.total\"\r\n                    }\r\n                },\r\n                \"onboard_success\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.onboard.success\"\r\n                    }\r\n                },\r\n                \"onboard_fail\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.onboard.fail\"\r\n                    }\r\n                },\r\n                \"deviceHome_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.get_device.total\"\r\n                    }\r\n                },\r\n                \"deviceHome_success\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.get_device.success\"\r\n                    }\r\n                },\r\n                \"deviceHome_fail\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.get_device.fail\"\r\n                    }\r\n                },\r\n                \"resync_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.resync.total\"\r\n                    }\r\n                },\r\n                \"resync_success\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.resync.success\"\r\n                    }\r\n                },\r\n                \"resync_fail\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.resync.fail\"\r\n                    }\r\n                },\r\n                \"unlink_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.unlink.total\"\r\n                    }\r\n                },\r\n                \"unlink_success\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.unlink.success\"\r\n                    }\r\n                },\r\n                \"unlink_fail\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.unlink.fail\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\nHere is my plain elastic query:\r\n```\r\n{\r\n    \"query\": {\r\n        \"bool\": {\r\n            \"must\": [\r\n                {\r\n                    \"range\": {\r\n                        \"from.start\": {\r\n                            \"from\": \"now-24h\",\r\n                            \"to\": \"now-1m/m\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"match\": {\r\n                        \"adapter_name\": {\r\n                            \"query\": \"Philips\"\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"aggregations\": {\r\n        \"my_buckets\": {\r\n            \"composite\": {\r\n                \"size\": 10,\r\n                \"sources\": [\r\n                    {\r\n                        \"date\": {\r\n                            \"date_histogram\": {\r\n                                \"field\": \"from.start\",\r\n                                \"interval\": \"1h\"\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            \"aggregations\": {\r\n                \"success_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.success\"\r\n                    }\r\n                },\r\n                \"failure_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.failure\"\r\n                    }\r\n                },\r\n                \"total_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.total\"\r\n                    }\r\n                },\r\n                \"total_in\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.total\"\r\n                    }\r\n                },\r\n                \"partner_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.cloud_api.total\"\r\n                    }\r\n                },\r\n                \"partner_success\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.cloud_api.success\"\r\n                    }\r\n                },\r\n                \"partner_fail\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.cloud_api.fail\"\r\n                    }\r\n                },\r\n                \"molecule_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.molecule.total\"\r\n                    }\r\n                },\r\n                \"molecule_success\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.molecule.success\"\r\n                    }\r\n                },\r\n                \"molecule_fail\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.molecule.fail\"\r\n                    }\r\n                },\r\n                \"elements_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.elements.total\"\r\n                    }\r\n                },\r\n                \"elements_success\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.elements.success\"\r\n                    }\r\n                },\r\n                \"elements_fail\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_out.type.elements.fail\"\r\n                    }\r\n                },\r\n                \"command_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.command_control.total\"\r\n                    }\r\n                },\r\n                \"command_success\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.command_control.success\"\r\n                    }\r\n                },\r\n                \"command_fail\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.command_control.fail\"\r\n                    }\r\n                },\r\n                \"onboard_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.onboard.total\"\r\n                    }\r\n                },\r\n                \"onboard_success\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.onboard.success\"\r\n                    }\r\n                },\r\n                \"onboard_fail\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.onboard.fail\"\r\n                    }\r\n                },\r\n                \"deviceHome_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.get_device.total\"\r\n                    }\r\n                },\r\n                \"deviceHome_success\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.get_device.success\"\r\n                    }\r\n                },\r\n                \"deviceHome_fail\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.get_device.fail\"\r\n                    }\r\n                },\r\n                \"resync_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.resync.total\"\r\n                    }\r\n                },\r\n                \"resync_success\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.resync.success\"\r\n                    }\r\n                },\r\n                \"resync_fail\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.resync.fail\"\r\n                    }\r\n                },\r\n                \"unlink_add\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.unlink.total\"\r\n                    }\r\n                },\r\n                \"unlink_success\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.unlink.success\"\r\n                    }\r\n                },\r\n                \"unlink_fail\": {\r\n                    \"sum\": {\r\n                        \"field\": \"calls_in.type.unlink.fail\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```","closed_by":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}