[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265473","html_url":"https://github.com/elastic/elasticsearch/issues/211#issuecomment-265473","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/211","id":265473,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTQ3Mw==","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2010-06-06T10:36:38Z","updated_at":"2010-06-06T10:36:38Z","author_association":"MEMBER","body":"Not so simple to implement..., certainly not for something built on top of Lucene. Its usually inherent in how nosql solutions are structured. It would be nice to have it, but, to be perfectly honest, I am not going to invest time on this feature in the next couple of versions..., there are more basic features that needs to be implemented.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/266849","html_url":"https://github.com/elastic/elasticsearch/issues/211#issuecomment-266849","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/211","id":266849,"node_id":"MDEyOklzc3VlQ29tbWVudDI2Njg0OQ==","user":{"login":"Mpdreamz","id":245275,"node_id":"MDQ6VXNlcjI0NTI3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/245275?v=4","gravatar_id":"","url":"https://api.github.com/users/Mpdreamz","html_url":"https://github.com/Mpdreamz","followers_url":"https://api.github.com/users/Mpdreamz/followers","following_url":"https://api.github.com/users/Mpdreamz/following{/other_user}","gists_url":"https://api.github.com/users/Mpdreamz/gists{/gist_id}","starred_url":"https://api.github.com/users/Mpdreamz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mpdreamz/subscriptions","organizations_url":"https://api.github.com/users/Mpdreamz/orgs","repos_url":"https://api.github.com/users/Mpdreamz/repos","events_url":"https://api.github.com/users/Mpdreamz/events{/privacy}","received_events_url":"https://api.github.com/users/Mpdreamz/received_events","type":"User","site_admin":false},"created_at":"2010-06-07T18:14:10Z","updated_at":"2010-06-07T18:14:10Z","author_association":"MEMBER","body":"Too true, this is one of those things that would take it one step further. I can understand this not having top priority, as a long term goal it could/would really be a feature to stand out amongst the croud. \n\nNot sure if you are aware but lucene is definitly moving towards supporting it already:\nhttp://wiki.apache.org/lucene-java/ParallelIncrementalIndexing\nand\nhttps://issues.apache.org/jira/browse/LUCENE-1879\n\nAs a sidenote: RavenDB has implemented partial updates last week.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/269481","html_url":"https://github.com/elastic/elasticsearch/issues/211#issuecomment-269481","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/211","id":269481,"node_id":"MDEyOklzc3VlQ29tbWVudDI2OTQ4MQ==","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2010-06-09T15:28:02Z","updated_at":"2010-06-09T15:28:02Z","author_association":"MEMBER","body":"I am aware of the work done in Lucene to support it, of course, if its going to be built into Lucene, elasticsearch will be able to expose it easily.\n\nNot too familiar with RavenDB, is that a search engine?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/528964","html_url":"https://github.com/elastic/elasticsearch/issues/211#issuecomment-528964","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/211","id":528964,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODk2NA==","user":{"login":"apatrida","id":182340,"node_id":"MDQ6VXNlcjE4MjM0MA==","avatar_url":"https://avatars3.githubusercontent.com/u/182340?v=4","gravatar_id":"","url":"https://api.github.com/users/apatrida","html_url":"https://github.com/apatrida","followers_url":"https://api.github.com/users/apatrida/followers","following_url":"https://api.github.com/users/apatrida/following{/other_user}","gists_url":"https://api.github.com/users/apatrida/gists{/gist_id}","starred_url":"https://api.github.com/users/apatrida/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apatrida/subscriptions","organizations_url":"https://api.github.com/users/apatrida/orgs","repos_url":"https://api.github.com/users/apatrida/repos","events_url":"https://api.github.com/users/apatrida/events{/privacy}","received_events_url":"https://api.github.com/users/apatrida/received_events","type":"User","site_admin":false},"created_at":"2010-11-09T14:36:18Z","updated_at":"2010-11-09T14:36:18Z","author_association":"CONTRIBUTOR","body":"Basically, ES might have to decide if it wants to also be the authoritative store or not for the documents.  If it is to be, then it has to have the base features to make that work-able; if it is not going to be then it can be clearly stated that the features around that will not be forthcoming (or not until a release where that decision changes).  \n\nBut there are a lot of factors around the \"level\" of being that store.  Transactions or not (I say no), partial updates (maybe), real-time retrieval by doc id (I vote yes), ...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/529006","html_url":"https://github.com/elastic/elasticsearch/issues/211#issuecomment-529006","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/211","id":529006,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTAwNg==","user":{"login":"Mpdreamz","id":245275,"node_id":"MDQ6VXNlcjI0NTI3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/245275?v=4","gravatar_id":"","url":"https://api.github.com/users/Mpdreamz","html_url":"https://github.com/Mpdreamz","followers_url":"https://api.github.com/users/Mpdreamz/followers","following_url":"https://api.github.com/users/Mpdreamz/following{/other_user}","gists_url":"https://api.github.com/users/Mpdreamz/gists{/gist_id}","starred_url":"https://api.github.com/users/Mpdreamz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mpdreamz/subscriptions","organizations_url":"https://api.github.com/users/Mpdreamz/orgs","repos_url":"https://api.github.com/users/Mpdreamz/repos","events_url":"https://api.github.com/users/Mpdreamz/events{/privacy}","received_events_url":"https://api.github.com/users/Mpdreamz/received_events","type":"User","site_admin":false},"created_at":"2010-11-09T14:49:19Z","updated_at":"2010-11-09T14:49:19Z","author_association":"MEMBER","body":"My personal view on search/full text engines is that they should never be authoritative (provided that means leading datastore).  You should be free to optimize for maximum search throughput without taking data model requirements into account. \n\nPartial updates would still be a kick ass addition in the 1.0 releases though, whenever lucene implements it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/529028","html_url":"https://github.com/elastic/elasticsearch/issues/211#issuecomment-529028","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/211","id":529028,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTAyOA==","user":{"login":"apatrida","id":182340,"node_id":"MDQ6VXNlcjE4MjM0MA==","avatar_url":"https://avatars3.githubusercontent.com/u/182340?v=4","gravatar_id":"","url":"https://api.github.com/users/apatrida","html_url":"https://github.com/apatrida","followers_url":"https://api.github.com/users/apatrida/followers","following_url":"https://api.github.com/users/apatrida/following{/other_user}","gists_url":"https://api.github.com/users/apatrida/gists{/gist_id}","starred_url":"https://api.github.com/users/apatrida/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apatrida/subscriptions","organizations_url":"https://api.github.com/users/apatrida/orgs","repos_url":"https://api.github.com/users/apatrida/repos","events_url":"https://api.github.com/users/apatrida/events{/privacy}","received_events_url":"https://api.github.com/users/apatrida/received_events","type":"User","site_admin":false},"created_at":"2010-11-09T14:58:22Z","updated_at":"2010-11-09T14:58:22Z","author_association":"CONTRIBUTOR","body":"> My personal view on search/full text engines is that they should never be authoritative \n\nUnless you are creating a new hybrid that should be authoritative.\n\nYou can optimize for search through many means:  offline the blob storage for the doc out of the index; having a designation of query slaves that have allowable lag while indexer machines have realtime retrieval by ID and near-realtime by query, etc.\n\nRight now ES is doing both in the same nodes at the same time.  It may want to allow this divide down the road so that you are not affecting query \"slaves\" with refresh requests or with the need for more accurate (in terms of time) document retrieval.\n\nA little bit more movement of ES down this road and it COULD be the best of both worlds.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/1824123","html_url":"https://github.com/elastic/elasticsearch/issues/211#issuecomment-1824123","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/211","id":1824123,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MjQxMjM=","user":{"login":"karmi","id":4790,"node_id":"MDQ6VXNlcjQ3OTA=","avatar_url":"https://avatars1.githubusercontent.com/u/4790?v=4","gravatar_id":"","url":"https://api.github.com/users/karmi","html_url":"https://github.com/karmi","followers_url":"https://api.github.com/users/karmi/followers","following_url":"https://api.github.com/users/karmi/following{/other_user}","gists_url":"https://api.github.com/users/karmi/gists{/gist_id}","starred_url":"https://api.github.com/users/karmi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karmi/subscriptions","organizations_url":"https://api.github.com/users/karmi/orgs","repos_url":"https://api.github.com/users/karmi/repos","events_url":"https://api.github.com/users/karmi/events{/privacy}","received_events_url":"https://api.github.com/users/karmi/received_events","type":"User","site_admin":false},"created_at":"2011-08-17T07:34:14Z","updated_at":"2011-08-17T07:34:14Z","author_association":"CONTRIBUTOR","body":"MongoDB [has partial updates](http://www.mongodb.org/display/DOCS/Updating#Updating-ModifierOperations). With embedded documents, it is pushed as a superior feature. In practice, I think the usage is quite limited to a certain class of problems, and of course, the implications for durability may be horrible for you. AFAIK, Riak has a concept similar to presented by @mpdreamz with the _links_ feature?\n\nI like the idea of \"external field\", as discussed [here](http://groups.google.com/group/elasticsearch/browse_thread/thread/c6f35567420f29dc), much better. If I am not mistaken, the [nested type](http://www.elasticsearch.org/guide/reference/mapping/nested-type.html) allows for splitting the document into couple of separate ones, thus making the update more performant?\n","performed_via_github_app":null}]