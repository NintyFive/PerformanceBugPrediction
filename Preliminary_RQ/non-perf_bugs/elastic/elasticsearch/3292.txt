{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3292","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3292/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3292/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3292/events","html_url":"https://github.com/elastic/elasticsearch/issues/3292","id":16369932,"node_id":"MDU6SXNzdWUxNjM2OTkzMg==","number":3292,"title":"Malformed query syntax can cause the parsers to break out of scope","user":{"login":"ccw-morris","id":4938858,"node_id":"MDQ6VXNlcjQ5Mzg4NTg=","avatar_url":"https://avatars2.githubusercontent.com/u/4938858?v=4","gravatar_id":"","url":"https://api.github.com/users/ccw-morris","html_url":"https://github.com/ccw-morris","followers_url":"https://api.github.com/users/ccw-morris/followers","following_url":"https://api.github.com/users/ccw-morris/following{/other_user}","gists_url":"https://api.github.com/users/ccw-morris/gists{/gist_id}","starred_url":"https://api.github.com/users/ccw-morris/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ccw-morris/subscriptions","organizations_url":"https://api.github.com/users/ccw-morris/orgs","repos_url":"https://api.github.com/users/ccw-morris/repos","events_url":"https://api.github.com/users/ccw-morris/events{/privacy}","received_events_url":"https://api.github.com/users/ccw-morris/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2013-07-04T14:19:28Z","updated_at":"2014-07-23T13:08:23Z","closed_at":"2014-07-23T13:08:23Z","author_association":"NONE","active_lock_reason":null,"body":"elasticsearch does not check that the parser implementations finish on the correct token. It is possible for the parsers to either underrun or overrun the token stream. This can change the structure of the remainder of the query.\n\nMany of the elasticsearch parsers implementations will underrun in the event of malformed content.\n\nFor example, match_all:\n\n``` JavaScript\n\"match_all\":{\n  \"test\":{}\n}\n```\n\nThe logic within match_all increments tokens until a CLOSE_OBJECT token is reached. It will terminate on the closing bracket of the test object, not the closing bracket of the match_all object. This causes an erroneous additional bracket to be processed by the surrounding query.\n\nIn the example below, I have labelled the bracket pairs as they are interpreted by the elasticsearch parsers.\n\n``` JavaScript\n{[1]\n    \"bool\":{[2]\n        \"must\":{[3]\n            \"match_all\":{[4]\n                \"match_all\":{[5]\n                }[4]\n            }[3]\n        }[2],\n        \"must\":{[6]\n            \"term\":{[7]\n                \"field\":\"term\"\n            }[7]\n        }[6]\n    }[1]\n}\n```\n\nThe second must clause is considered to be external to the bool object, due to the erroneous processing of the match_all above. The parsed query is equivalent to a match_all query.\n\nFrom reading the code, I conclude that similar issues exist in 24 of the elasticsearch parsers. I believe that this should be fixed by the framework enforcing a scope on the parsers, rather than (or as well as) fixing the individual parsers.\n\nThis issue has the potential to confuse users in the event of typos. For example, a match_all that was accidentally nested within a match_all would cause this issue.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}