[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/474191855","html_url":"https://github.com/elastic/elasticsearch/issues/40179#issuecomment-474191855","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40179","id":474191855,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3NDE5MTg1NQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-03-19T04:15:00Z","updated_at":"2019-03-19T04:15:00Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/474192149","html_url":"https://github.com/elastic/elasticsearch/issues/40179#issuecomment-474192149","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40179","id":474192149,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3NDE5MjE0OQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-03-19T04:17:10Z","updated_at":"2019-03-19T04:17:10Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-features","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/474378121","html_url":"https://github.com/elastic/elasticsearch/issues/40179#issuecomment-474378121","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40179","id":474378121,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3NDM3ODEyMQ==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2019-03-19T13:49:06Z","updated_at":"2019-03-19T13:49:06Z","author_association":"CONTRIBUTOR","body":"Related: https://github.com/elastic/elasticsearch/issues/38064","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/495375900","html_url":"https://github.com/elastic/elasticsearch/issues/40179#issuecomment-495375900","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40179","id":495375900,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTM3NTkwMA==","user":{"login":"pcsanwald","id":163306,"node_id":"MDQ6VXNlcjE2MzMwNg==","avatar_url":"https://avatars1.githubusercontent.com/u/163306?v=4","gravatar_id":"","url":"https://api.github.com/users/pcsanwald","html_url":"https://github.com/pcsanwald","followers_url":"https://api.github.com/users/pcsanwald/followers","following_url":"https://api.github.com/users/pcsanwald/following{/other_user}","gists_url":"https://api.github.com/users/pcsanwald/gists{/gist_id}","starred_url":"https://api.github.com/users/pcsanwald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pcsanwald/subscriptions","organizations_url":"https://api.github.com/users/pcsanwald/orgs","repos_url":"https://api.github.com/users/pcsanwald/repos","events_url":"https://api.github.com/users/pcsanwald/events{/privacy}","received_events_url":"https://api.github.com/users/pcsanwald/received_events","type":"User","site_admin":false},"created_at":"2019-05-23T20:37:39Z","updated_at":"2019-05-23T20:37:39Z","author_association":"CONTRIBUTOR","body":"We discussed this briefly on our FixIt call, and we don't see any downsides to making this change, assuming the IP spec allows single values for ranges (i.e. the `/` is not required).\r\n\r\nCC @jtibshirani for visibility and also @not-napoleon who has been working in this space lately (aggs for range fields) ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/495390066","html_url":"https://github.com/elastic/elasticsearch/issues/40179#issuecomment-495390066","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40179","id":495390066,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTM5MDA2Ng==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2019-05-23T21:22:39Z","updated_at":"2019-05-23T21:22:39Z","author_association":"MEMBER","body":"I don't think the spec allows for the suffix to be optional.  As noted in the original description, many whitelist implementations (including our own within security) allow direct IPs as well as CIDR ranges. One thing to note, though, is that in those cases a single range of ips is not being defined, but a list of allowed whitelists. My main concern would be a user accidentally leaving off the suffix, unknowingly only indexing a single ip within a range instead of an intended range.  Perhaps an alternative would be to support a single `value` key within an object for a range field, as a shortcut for specifying both ends of the range.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/496023613","html_url":"https://github.com/elastic/elasticsearch/issues/40179#issuecomment-496023613","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40179","id":496023613,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NjAyMzYxMw==","user":{"login":"ZLightning","id":3085162,"node_id":"MDQ6VXNlcjMwODUxNjI=","avatar_url":"https://avatars3.githubusercontent.com/u/3085162?v=4","gravatar_id":"","url":"https://api.github.com/users/ZLightning","html_url":"https://github.com/ZLightning","followers_url":"https://api.github.com/users/ZLightning/followers","following_url":"https://api.github.com/users/ZLightning/following{/other_user}","gists_url":"https://api.github.com/users/ZLightning/gists{/gist_id}","starred_url":"https://api.github.com/users/ZLightning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZLightning/subscriptions","organizations_url":"https://api.github.com/users/ZLightning/orgs","repos_url":"https://api.github.com/users/ZLightning/repos","events_url":"https://api.github.com/users/ZLightning/events{/privacy}","received_events_url":"https://api.github.com/users/ZLightning/received_events","type":"User","site_admin":false},"created_at":"2019-05-26T19:05:31Z","updated_at":"2019-05-26T19:05:31Z","author_association":"NONE","body":"> My main concern would be a user accidentally leaving off the suffix, unknowingly only indexing a single ip within a range instead of an intended range.\r\n\r\nI'll admit there is a risk that users might accidentally leave off the block size in a range, but does that mean it should be required to put a + in front of a positive number so you can be sure that the person didn't leave off a - on a negative number?\r\n\r\nThe bigger threat I see is that someone intends to index a single IP and leaves off the /32 (or /128 for IPv6) and then ignores/misses the error, perhaps in a bulk indexing request.  In this case, the data is lost entirely, whereas with an accidental listing of a single IP where a range was intended, the listing for the single IP would still be better than not listing anything.  Note, I am not suggesting that ignoring errors is a good idea, but rather that data preservation should take precedence over forcing extra verbosity to prevent users from making mistakes.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/497896097","html_url":"https://github.com/elastic/elasticsearch/issues/40179#issuecomment-497896097","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40179","id":497896097,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg5NjA5Nw==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2019-06-01T00:23:02Z","updated_at":"2019-06-01T00:23:02Z","author_association":"MEMBER","body":"I'm going to mark this for discussion again so that @rjernst has the chance to weigh in. The main question seems to be whether we want to favor flexibility by default, and risk users accidentally indexing single IPs into the range field.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/497907044","html_url":"https://github.com/elastic/elasticsearch/issues/40179#issuecomment-497907044","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40179","id":497907044,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzkwNzA0NA==","user":{"login":"eskibars","id":2246002,"node_id":"MDQ6VXNlcjIyNDYwMDI=","avatar_url":"https://avatars0.githubusercontent.com/u/2246002?v=4","gravatar_id":"","url":"https://api.github.com/users/eskibars","html_url":"https://github.com/eskibars","followers_url":"https://api.github.com/users/eskibars/followers","following_url":"https://api.github.com/users/eskibars/following{/other_user}","gists_url":"https://api.github.com/users/eskibars/gists{/gist_id}","starred_url":"https://api.github.com/users/eskibars/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eskibars/subscriptions","organizations_url":"https://api.github.com/users/eskibars/orgs","repos_url":"https://api.github.com/users/eskibars/repos","events_url":"https://api.github.com/users/eskibars/events{/privacy}","received_events_url":"https://api.github.com/users/eskibars/received_events","type":"User","site_admin":false},"created_at":"2019-06-01T03:03:55Z","updated_at":"2019-06-01T03:03:55Z","author_association":"CONTRIBUTOR","body":"I personally think this type of mistake is a very low risk as long as we aren't doing very lenient parsing.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/499660147","html_url":"https://github.com/elastic/elasticsearch/issues/40179#issuecomment-499660147","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40179","id":499660147,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5OTY2MDE0Nw==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2019-06-06T20:43:33Z","updated_at":"2019-06-06T20:43:33Z","author_association":"MEMBER","body":"After a followup fix-it-day discussion, we have decided against this proposal. In addition to the already existing ability to pass a single value by using `/32` or by specifying both `gte` and `lte` (as works for any range field type), the possibility to muddy the user intention is too great. For example, if we were to start accepting these values without the suffix, one might suggest masks should be implicit based on significant bits, eg interpreting `192.168.0.0` as `192.168.0.0/16`. Saving a few characters input is not worth the confusion in interpretation.","performed_via_github_app":null}]