[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/170910814","html_url":"https://github.com/elastic/elasticsearch/issues/15921#issuecomment-170910814","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15921","id":170910814,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDkxMDgxNA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-01-12T13:25:11Z","updated_at":"2016-01-12T13:25:11Z","author_association":"CONTRIBUTOR","body":"It appears the filter returns the score as `0` instead of `1`, which doesn't seem right.  @jpountz ?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/170938990","html_url":"https://github.com/elastic/elasticsearch/issues/15921#issuecomment-170938990","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15921","id":170938990,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDkzODk5MA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-01-12T14:58:01Z","updated_at":"2016-01-12T14:58:01Z","author_association":"CONTRIBUTOR","body":"The first query gives a score of 0 to all docs because there are no scoring clauses. In order to get a score of 1 you would need to add a `must` clause with a `match_all` query, or more simply since there is a single filter, wrap it under a `constant_score` query:\n\n```\ncurl -XPOST localhost:9200/test/test/_search -d '\n{\n   \"query\": {\n      \"function_score\": {\n         \"query\": {\n            \"constant_score\": {\n               \"range\": {\n                  \"rank\": {\n                     \"gte\": 2\n                  }\n               }\n            }\n         },\n         \"functions\": [\n            {\n               \"field_value_factor\": {\n                  \"field\": \"rank\"\n               }\n            }\n         ]\n      }\n   }\n}'\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/170939956","html_url":"https://github.com/elastic/elasticsearch/issues/15921#issuecomment-170939956","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15921","id":170939956,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDkzOTk1Ng==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-01-12T15:01:44Z","updated_at":"2016-01-12T15:01:44Z","author_association":"CONTRIBUTOR","body":"@jpountz this is surprising... filtered docs in 1.x were all given a score of 1.0.  Is this not possible with `bool.filter`?  If not, then this should be documented.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/170957636","html_url":"https://github.com/elastic/elasticsearch/issues/15921#issuecomment-170957636","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15921","id":170957636,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDk1NzYzNg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-01-12T16:01:52Z","updated_at":"2016-01-12T16:01:52Z","author_association":"CONTRIBUTOR","body":"We could automatically add a match_all MUST clause if there are no positive clauses in order to get a score of one. But isn't it more natural to get null scores if there are no scoring clauses?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/170959806","html_url":"https://github.com/elastic/elasticsearch/issues/15921#issuecomment-170959806","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15921","id":170959806,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDk1OTgwNg==","user":{"login":"micpalmia","id":663003,"node_id":"MDQ6VXNlcjY2MzAwMw==","avatar_url":"https://avatars1.githubusercontent.com/u/663003?v=4","gravatar_id":"","url":"https://api.github.com/users/micpalmia","html_url":"https://github.com/micpalmia","followers_url":"https://api.github.com/users/micpalmia/followers","following_url":"https://api.github.com/users/micpalmia/following{/other_user}","gists_url":"https://api.github.com/users/micpalmia/gists{/gist_id}","starred_url":"https://api.github.com/users/micpalmia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/micpalmia/subscriptions","organizations_url":"https://api.github.com/users/micpalmia/orgs","repos_url":"https://api.github.com/users/micpalmia/repos","events_url":"https://api.github.com/users/micpalmia/events{/privacy}","received_events_url":"https://api.github.com/users/micpalmia/received_events","type":"User","site_admin":false},"created_at":"2016-01-12T16:09:30Z","updated_at":"2016-01-12T16:10:03Z","author_association":"CONTRIBUTOR","body":"Regardless of whether it's more natural to get a score of 1 or 0 in case there are no scoring clauses, a `match_all` clause is the default if the `query` clause inside the `function_score` query is not provided. It's thus surprising, when implementing a query with function scoring, that adding a few filtering query _removes_ the scoring functionality.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/170982772","html_url":"https://github.com/elastic/elasticsearch/issues/15921#issuecomment-170982772","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15921","id":170982772,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDk4Mjc3Mg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-01-12T17:27:30Z","updated_at":"2016-01-12T17:27:30Z","author_association":"CONTRIBUTOR","body":"But you did not just add filters, you overrode the default `match_all` query with another query that returns scores that are equal to 0.\n\nMaybe what really needs to be done is further documenting the 2.0 upgrade notes about the `filtered` query. They already state that \n\n```\nGET _search\n{\n  \"query\": {\n    \"filtered\": {\n      \"query\": {\n        \"match\": {\n          \"text\": \"quick brown fox\"\n        }\n      },\n      \"filter\": {\n        \"term\": {\n          \"status\": \"published\"\n        }\n      }\n    }\n  }\n}\n```\n\nneeds to become\n\n```\nGET _search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match\": {\n          \"text\": \"quick brown fox\"\n        }\n      },\n      \"filter\": {\n        \"term\": {\n          \"status\": \"published\"\n        }\n      }\n    }\n  }\n}\n```\n\nMaybe they should also document that\n\n```\nGET _search\n{\n  \"filtered\": {\n    \"filter\": {\n      \"term\": {\n        \"status\": \"published\"\n      }\n    }\n  }\n}\n```\n\nneeds to become\n\n```\nGET _search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"status\": \"published\"\n        }\n      }\n    }\n  }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/171053633","html_url":"https://github.com/elastic/elasticsearch/issues/15921#issuecomment-171053633","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15921","id":171053633,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MTA1MzYzMw==","user":{"login":"micpalmia","id":663003,"node_id":"MDQ6VXNlcjY2MzAwMw==","avatar_url":"https://avatars1.githubusercontent.com/u/663003?v=4","gravatar_id":"","url":"https://api.github.com/users/micpalmia","html_url":"https://github.com/micpalmia","followers_url":"https://api.github.com/users/micpalmia/followers","following_url":"https://api.github.com/users/micpalmia/following{/other_user}","gists_url":"https://api.github.com/users/micpalmia/gists{/gist_id}","starred_url":"https://api.github.com/users/micpalmia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/micpalmia/subscriptions","organizations_url":"https://api.github.com/users/micpalmia/orgs","repos_url":"https://api.github.com/users/micpalmia/repos","events_url":"https://api.github.com/users/micpalmia/events{/privacy}","received_events_url":"https://api.github.com/users/micpalmia/received_events","type":"User","site_admin":false},"created_at":"2016-01-12T21:03:17Z","updated_at":"2016-01-12T21:03:48Z","author_association":"CONTRIBUTOR","body":"I think transforming an unscored 1.x query into a 2.x `constant_score` query is very much unnecessary most of the time. I happily transformed all the production queries that were filter-only into boolean filters without issues, because the output score was irrelevant.\n\nThe thing that I was personally missing (and that I think is not clear at all from the docs) is that unscored queries stopped returning a score of 1 for all documents and now return a score of 0. And this obviously has important consequences in a context in which scores get multiplied by each other, like in the `function_score` query.\n\nThank for your help!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/171254208","html_url":"https://github.com/elastic/elasticsearch/issues/15921#issuecomment-171254208","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15921","id":171254208,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MTI1NDIwOA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-01-13T10:58:34Z","updated_at":"2016-01-13T10:58:34Z","author_association":"CONTRIBUTOR","body":"I've added the documentation here: https://github.com/elastic/elasticsearch/commit/33e7bb6fba5bf0a28d3fb5462cff931be579c366\n\nJust wondering if the function score query should always have an implicit `match_all`, to make it function the way it did before.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/171350358","html_url":"https://github.com/elastic/elasticsearch/issues/15921#issuecomment-171350358","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15921","id":171350358,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MTM1MDM1OA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-01-13T16:27:06Z","updated_at":"2016-01-13T16:27:06Z","author_association":"CONTRIBUTOR","body":"> Just wondering if the function score query should always have an implicit match_all, to make it function the way it did before.\n\nTo put this remark into context, I was thinking of having an implicit `match_all` if the user specified the `filter` parameter in the `function_score` query, but that parameter no longer exists in 2.0, so my remark doesn't make much sense. \n\nGiven that the docs have been added, I think we can close this.\n","performed_via_github_app":null}]