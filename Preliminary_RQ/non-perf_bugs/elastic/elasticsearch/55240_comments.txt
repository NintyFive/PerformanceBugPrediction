[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614198832","html_url":"https://github.com/elastic/elasticsearch/issues/55240#issuecomment-614198832","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55240","id":614198832,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDE5ODgzMg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-04-15T18:17:27Z","updated_at":"2020-04-15T18:17:27Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-analytics-geo (:Analytics/Aggregations)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614199357","html_url":"https://github.com/elastic/elasticsearch/issues/55240#issuecomment-614199357","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55240","id":614199357,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDE5OTM1Nw==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2020-04-15T18:18:31Z","updated_at":"2020-04-15T18:18:31Z","author_association":"MEMBER","body":"hi @Yv-o-rL would it be possible for you to post your request?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614217916","html_url":"https://github.com/elastic/elasticsearch/issues/55240#issuecomment-614217916","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55240","id":614217916,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDIxNzkxNg==","user":{"login":"Yv-o-rL","id":42407721,"node_id":"MDQ6VXNlcjQyNDA3NzIx","avatar_url":"https://avatars0.githubusercontent.com/u/42407721?v=4","gravatar_id":"","url":"https://api.github.com/users/Yv-o-rL","html_url":"https://github.com/Yv-o-rL","followers_url":"https://api.github.com/users/Yv-o-rL/followers","following_url":"https://api.github.com/users/Yv-o-rL/following{/other_user}","gists_url":"https://api.github.com/users/Yv-o-rL/gists{/gist_id}","starred_url":"https://api.github.com/users/Yv-o-rL/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Yv-o-rL/subscriptions","organizations_url":"https://api.github.com/users/Yv-o-rL/orgs","repos_url":"https://api.github.com/users/Yv-o-rL/repos","events_url":"https://api.github.com/users/Yv-o-rL/events{/privacy}","received_events_url":"https://api.github.com/users/Yv-o-rL/received_events","type":"User","site_admin":false},"created_at":"2020-04-15T18:53:05Z","updated_at":"2020-04-15T18:53:05Z","author_association":"NONE","body":"It' ls the default Kibana line visualization with the parameters I provided above.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614498331","html_url":"https://github.com/elastic/elasticsearch/issues/55240#issuecomment-614498331","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55240","id":614498331,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDQ5ODMzMQ==","user":{"login":"Yv-o-rL","id":42407721,"node_id":"MDQ6VXNlcjQyNDA3NzIx","avatar_url":"https://avatars0.githubusercontent.com/u/42407721?v=4","gravatar_id":"","url":"https://api.github.com/users/Yv-o-rL","html_url":"https://github.com/Yv-o-rL","followers_url":"https://api.github.com/users/Yv-o-rL/followers","following_url":"https://api.github.com/users/Yv-o-rL/following{/other_user}","gists_url":"https://api.github.com/users/Yv-o-rL/gists{/gist_id}","starred_url":"https://api.github.com/users/Yv-o-rL/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Yv-o-rL/subscriptions","organizations_url":"https://api.github.com/users/Yv-o-rL/orgs","repos_url":"https://api.github.com/users/Yv-o-rL/repos","events_url":"https://api.github.com/users/Yv-o-rL/events{/privacy}","received_events_url":"https://api.github.com/users/Yv-o-rL/received_events","type":"User","site_admin":false},"created_at":"2020-04-16T08:31:14Z","updated_at":"2020-04-16T08:31:14Z","author_association":"NONE","body":"```\r\n{\r\n  \"aggs\": {\r\n    \"2\": {\r\n      \"date_histogram\": {\r\n        \"field\": \"@timestamp\",\r\n        \"interval\": \"30s\",\r\n        \"time_zone\": \"UTC\",\r\n        \"min_doc_count\": 1\r\n      },\r\n      \"aggs\": {\r\n        \"3\": {\r\n          \"terms\": {\r\n            \"field\": \"instance.keyword\",\r\n            \"order\": {\r\n              \"1\": \"desc\"\r\n            },\r\n            \"size\": 5\r\n          },\r\n          \"aggs\": {\r\n            \"1\": {\r\n              \"cardinality\": {\r\n                \"field\": \"highcardfield\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"size\": 0,\r\n  \"_source\": {\r\n    \"excludes\": []\r\n  },\r\n  \"stored_fields\": [\r\n    \"*\"\r\n  ],\r\n  \"script_fields\": {},\r\n  \"docvalue_fields\": [\r\n    {\r\n      \"field\": \"@timestamp\",\r\n      \"format\": \"date_time\"\r\n    }\r\n  ],\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"must\": [\r\n        {\r\n          \"match_all\": {}\r\n        },\r\n        {\r\n          \"range\": {\r\n            \"@timestamp\": {\r\n              \"format\": \"strict_date_optional_time\",\r\n              \"gte\": \"2020-04-16T07:00:00.000Z\",\r\n              \"lte\": \"2020-04-16T07:30:00.000Z\"\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      \"filter\": [],\r\n      \"should\": [],\r\n      \"must_not\": []\r\n    }\r\n  }\r\n}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614669990","html_url":"https://github.com/elastic/elasticsearch/issues/55240#issuecomment-614669990","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55240","id":614669990,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDY2OTk5MA==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2020-04-16T13:57:41Z","updated_at":"2020-04-16T13:57:56Z","author_association":"MEMBER","body":"I think we should probably move this discussion to the [Discuss forums](https://discuss.elastic.co/), since I think Elasticsearch is \"working as intended\" in this case.  E.g. the circuit breaker is tripping because something/multiple somethings are requesting too much memory.  It's not a very friendly behavior for the user, but it is doing its job: protect the node from an actual hard OOM crash. :)\r\n\r\nThe action that tripped the breaker was `transport_request`, meaning that some kind of node-to-node communication tried to reserve more memory than was available in the breakers.  Breakers are hierarchical and share space, so it's not to say the transport request was actually using all that memory... just the tipping point.  But it also means that it's unclear what was actually eating all the memory.  If it was purely the aggregation itself, a different cause would be listed in the breaker (usually `reused_arrays`).\r\n\r\nThe query/agg don't look too abusive to me, which makes me suspect there are other issues.  Memory being eaten by multiple parallel queries, memory going to the indexing, very large bulk requests eating memory, background queries from Kibana, etc etc.\r\n\r\nGenerally debugging would involve looking at the node_stats and breaker status across nodes, the slow-log to see what's flowing through the cluster, threadpools, etc.  But that's better done in the forums than here I think :)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614676370","html_url":"https://github.com/elastic/elasticsearch/issues/55240#issuecomment-614676370","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55240","id":614676370,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDY3NjM3MA==","user":{"login":"Yv-o-rL","id":42407721,"node_id":"MDQ6VXNlcjQyNDA3NzIx","avatar_url":"https://avatars0.githubusercontent.com/u/42407721?v=4","gravatar_id":"","url":"https://api.github.com/users/Yv-o-rL","html_url":"https://github.com/Yv-o-rL","followers_url":"https://api.github.com/users/Yv-o-rL/followers","following_url":"https://api.github.com/users/Yv-o-rL/following{/other_user}","gists_url":"https://api.github.com/users/Yv-o-rL/gists{/gist_id}","starred_url":"https://api.github.com/users/Yv-o-rL/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Yv-o-rL/subscriptions","organizations_url":"https://api.github.com/users/Yv-o-rL/orgs","repos_url":"https://api.github.com/users/Yv-o-rL/repos","events_url":"https://api.github.com/users/Yv-o-rL/events{/privacy}","received_events_url":"https://api.github.com/users/Yv-o-rL/received_events","type":"User","site_admin":false},"created_at":"2020-04-16T14:08:40Z","updated_at":"2020-04-16T14:13:52Z","author_association":"NONE","body":"My issue isn't with the circuit breaker, I'm happy that it's there. The problem is that the behavior described above is experienced **only** with the high cardinality query which - as you said too- isn't abusive. The whole cluster is working steadily using 19-23GB of the heap memory and when I run this query I get this:\r\n![image](https://user-images.githubusercontent.com/42407721/79465566-ca8d5400-7ffb-11ea-9f18-8895ab9f404d.png)\r\n\r\nThis is a production cluster and the indexing rate goes up to 30K/s during peak time. It's receiving a ton of various requests but only crashes when I try to run the query mentioned above. So generally ES takes the heat but somehow that cardinality request triggers something and starts hogging memory until the CB stops it. Then the cluster goes down for 5-10 minutes.\r\n\r\nI understand that this shouldn't happen because that wasn't the case before but it does. Unfortunately, the forum won't help my case, JVM heap memory issues aren't the most popular and easiest to solve ones. As you see in the description I have already tried to mitigate the issue with hurling hardware at the issue but it didn't help. I tried to track down anything that's remotely similar without any luck.\r\nHelp me. Elastic team. You're my only hope!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/615202207","html_url":"https://github.com/elastic/elasticsearch/issues/55240#issuecomment-615202207","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55240","id":615202207,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTIwMjIwNw==","user":{"login":"Yv-o-rL","id":42407721,"node_id":"MDQ6VXNlcjQyNDA3NzIx","avatar_url":"https://avatars0.githubusercontent.com/u/42407721?v=4","gravatar_id":"","url":"https://api.github.com/users/Yv-o-rL","html_url":"https://github.com/Yv-o-rL","followers_url":"https://api.github.com/users/Yv-o-rL/followers","following_url":"https://api.github.com/users/Yv-o-rL/following{/other_user}","gists_url":"https://api.github.com/users/Yv-o-rL/gists{/gist_id}","starred_url":"https://api.github.com/users/Yv-o-rL/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Yv-o-rL/subscriptions","organizations_url":"https://api.github.com/users/Yv-o-rL/orgs","repos_url":"https://api.github.com/users/Yv-o-rL/repos","events_url":"https://api.github.com/users/Yv-o-rL/events{/privacy}","received_events_url":"https://api.github.com/users/Yv-o-rL/received_events","type":"User","site_admin":false},"created_at":"2020-04-17T11:50:25Z","updated_at":"2020-04-17T11:50:25Z","author_association":"NONE","body":"@colings86 I saw your comments on [#24359](https://github.com/elastic/elasticsearch/issues/24359), but since that, there were 2 major version change and a lot of other ones. Do you have any insights on the issue I have?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/615235770","html_url":"https://github.com/elastic/elasticsearch/issues/55240#issuecomment-615235770","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55240","id":615235770,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTIzNTc3MA==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2020-04-17T13:11:10Z","updated_at":"2020-04-17T13:11:10Z","author_association":"MEMBER","body":"Hiya @Yv-o-rL, sorry, I probably worded my comment poorly.  I didn't mean to suggest it wasn't a problem, just that it'd be easier/better if we moved this discussion to the forums.  We try to keep github reserved for confirmed bugs and feature requests, so the back-and-forth debugging that we need to do (to collect node-stats, threadpools, PMs so we can share sensitive details or a heap dump, etc etc) is better there.\r\n\r\nIf/when we find a bug we can transition back to github for a bug report and work on a fix.  \r\n\r\nYou can ping me (or drop a link here) on the forum thread and I'll happily help out. :)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/615267850","html_url":"https://github.com/elastic/elasticsearch/issues/55240#issuecomment-615267850","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55240","id":615267850,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTI2Nzg1MA==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2020-04-17T14:13:45Z","updated_at":"2020-04-17T14:13:45Z","author_association":"MEMBER","body":"@Yv-o-rL So as it turns out, @jimczi noticed a detail that I missed: the terms agg is sorted by the cardinality agg:\r\n\r\n```\r\n\"order\": {\r\n  \"1\": \"desc\"\r\n},\r\n```\r\n\r\nWhich actually puts the query into the \"abusive\" category, even though it looks pretty innocent.  What happens is that sorting by sub-agg means we _have_ to execute the terms aggregation in `depth_first` mode.\r\n\r\nNormally, terms aggs execute `breadth_first`, meaning it collects the list of terms and their counts, finds the `top-n` and prunes away all the rest of the terms.  It then executes the next layer of aggregations on those `top-n` buckets.  We can do this pruning because the `top-n` is determined by count.\r\n\r\nBut when you sort by a sub-aggregation, there is no way to know which buckets to prune because it's dependent on not-yet-calculated quantity.  This means we have to switch to `depth_first`, where we fully process the entire aggregation tree before we can do any pruning of results.\r\n\r\nIn the above query, this means we actually collect `instance.keyword` number of buckets (for each 30s interval), with a corresponding HLL sketch for the cardinality.  This can get very expensive very quickly if `instance.keyword` has a moderate cardinality, and will quickly trip the circuit breaker as you're seeing.\r\n\r\nSo I think this really is a case of \"expensive query\" tripping the breaker, even though it looks very innocent to a user.\r\n\r\nI'll chat with the Kibana folks and see if there is some way to proactively warn users about sorting by sub-agg, particularly by `cardinality` which is relatively expensive (~kilobytes per bucket, rather than ~bytes).  Or perhaps Kibana can default to a lower precision when it sees the user is sorting by cardinality.  We might also want to trip the agg circuit breaker faster than 70-80% to help make this less impactful on nodes.\r\n\r\nApologies for missing this detail earlier!","performed_via_github_app":null}]