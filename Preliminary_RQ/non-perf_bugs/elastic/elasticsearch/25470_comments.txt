[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/313083262","html_url":"https://github.com/elastic/elasticsearch/issues/25470#issuecomment-313083262","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25470","id":313083262,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMzA4MzI2Mg==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2017-07-05T12:03:34Z","updated_at":"2017-07-05T12:03:34Z","author_association":"MEMBER","body":"What should we do if `all_fields` is `true`? There is no analyzer in this case so should we still default `split_on_whitespace` to `false` (seems better as default does not change depending on other options) or should we set it to `true` so multi-word searches match?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/313087910","html_url":"https://github.com/elastic/elasticsearch/issues/25470#issuecomment-313087910","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25470","id":313087910,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMzA4NzkxMA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-07-05T12:26:46Z","updated_at":"2017-07-05T12:26:46Z","author_association":"CONTRIBUTOR","body":"I don't think we should change the default based on the value of `all_fields`. For instance say that the mapping has a single field. Wouldn't it be weird to have different behaviour with `all_fields:true` and `field:my_single_field`?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/313088151","html_url":"https://github.com/elastic/elasticsearch/issues/25470#issuecomment-313088151","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25470","id":313088151,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMzA4ODE1MQ==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2017-07-05T12:27:59Z","updated_at":"2017-07-05T12:27:59Z","author_association":"MEMBER","body":"agreed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/313354811","html_url":"https://github.com/elastic/elasticsearch/issues/25470#issuecomment-313354811","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25470","id":313354811,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMzM1NDgxMQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-07-06T10:09:16Z","updated_at":"2017-07-06T10:09:16Z","author_association":"MEMBER","body":"The ultimate goal is to completely remove the need for it so we could also deprecate it in 6 and never splits on whitespace. \r\nInstead the new behavior starting in 6 would be to only split on operators which is the right thing to do ?\r\n\r\nThe concerning change if we remove the option entirely is the loss of the implicit cross-fields mode when multiple fields are requested.  `split_on_whitespace` indirectly allows matches on different field for each whitespace separated token so I think it'd be nice to implement https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-multi-match-query.html#multi-match-types for `query_string` as a follow up. \r\nCurrently `best_fields` and `most_fields` multi_match type equivalents can be built with `use_dismax` option but `cross_fields` would not be possible. \r\n\r\nSo as a follow up for 6 we could deprecate `use_dismax` and adds the `type` option like in \r\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-multi-match-query.html#multi-match-types.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/313356092","html_url":"https://github.com/elastic/elasticsearch/issues/25470#issuecomment-313356092","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25470","id":313356092,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMzM1NjA5Mg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-07-06T10:15:00Z","updated_at":"2017-07-06T10:15:00Z","author_association":"CONTRIBUTOR","body":"> So as a follow up for 6 we could deprecate use_dismax and adds the type option\r\n\r\nIn general I think it's better to have the same options do the same thing across query parsers so +1 to replace `use_dismax` with `type`.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/313357447","html_url":"https://github.com/elastic/elasticsearch/issues/25470#issuecomment-313357447","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25470","id":313357447,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMzM1NzQ0Nw==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2017-07-06T10:21:16Z","updated_at":"2017-07-06T10:21:16Z","author_association":"MEMBER","body":"What should we do about the `auto_generate_phrase_queries` option? We have a check that throws an exception if `auto_generate_phrase_queries` is true and `split_on_whitespace` is false","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/313359719","html_url":"https://github.com/elastic/elasticsearch/issues/25470#issuecomment-313359719","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25470","id":313359719,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMzM1OTcxOQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-07-06T10:32:24Z","updated_at":"2017-07-06T10:32:51Z","author_association":"MEMBER","body":"Right `auto_generate_phrase_queries` is problematic. I think it can be replaced with the `match_phrase` type option. With this option a simple `query_string` query like `michael jackson` creates a phrase query if the analyzer for the field splits the free text in multiple tokens and to get the old behavior back users can just put explicit operators; `michael OR jackson` query would create a phrase query for `michael` only if  the analyzer for the field splits `michael` in multiple tokens, ...","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/313373515","html_url":"https://github.com/elastic/elasticsearch/issues/25470#issuecomment-313373515","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25470","id":313373515,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMzM3MzUxNQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-07-06T11:47:07Z","updated_at":"2017-07-06T11:47:49Z","author_association":"MEMBER","body":"We discussed internally and decided to take this major release opportunity to completely remove the ability to split on whitespace in the `query_string` in 6.x. Doing this in one step is required in order to not have the other options have different meanings depending on whether we split or nor on whitespace.\r\nSee https://github.com/elastic/elasticsearch/issues/25574 for the full proposal","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/388604271","html_url":"https://github.com/elastic/elasticsearch/issues/25470#issuecomment-388604271","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25470","id":388604271,"node_id":"MDEyOklzc3VlQ29tbWVudDM4ODYwNDI3MQ==","user":{"login":"odmby","id":31470522,"node_id":"MDQ6VXNlcjMxNDcwNTIy","avatar_url":"https://avatars3.githubusercontent.com/u/31470522?v=4","gravatar_id":"","url":"https://api.github.com/users/odmby","html_url":"https://github.com/odmby","followers_url":"https://api.github.com/users/odmby/followers","following_url":"https://api.github.com/users/odmby/following{/other_user}","gists_url":"https://api.github.com/users/odmby/gists{/gist_id}","starred_url":"https://api.github.com/users/odmby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/odmby/subscriptions","organizations_url":"https://api.github.com/users/odmby/orgs","repos_url":"https://api.github.com/users/odmby/repos","events_url":"https://api.github.com/users/odmby/events{/privacy}","received_events_url":"https://api.github.com/users/odmby/received_events","type":"User","site_admin":false},"created_at":"2018-05-13T06:13:53Z","updated_at":"2018-05-13T06:13:53Z","author_association":"NONE","body":"I just want to say that this change is very bad for most of our users who work via Kibana. For a long time they are working by querying lists of values in parenthesis (similar to \"in\" operator in SQL), and now all the behavior will change and they won't even be aware that they made an error. Why wasn't split_on_whitespace made configurable instead of making it work the exact opposite as it was up to now with no option to revert?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/388813112","html_url":"https://github.com/elastic/elasticsearch/issues/25470#issuecomment-388813112","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25470","id":388813112,"node_id":"MDEyOklzc3VlQ29tbWVudDM4ODgxMzExMg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-05-14T13:18:17Z","updated_at":"2018-05-14T13:18:17Z","author_association":"CONTRIBUTOR","body":"We are considering making it configurable on a per-field basis at #30393.","performed_via_github_app":null}]