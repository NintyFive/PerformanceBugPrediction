[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/500507633","html_url":"https://github.com/elastic/elasticsearch/issues/43058#issuecomment-500507633","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43058","id":500507633,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMDUwNzYzMw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-06-10T17:35:08Z","updated_at":"2019-06-10T17:35:08Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/500517507","html_url":"https://github.com/elastic/elasticsearch/issues/43058#issuecomment-500517507","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43058","id":500517507,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMDUxNzUwNw==","user":{"login":"Bukhtawar","id":12809319,"node_id":"MDQ6VXNlcjEyODA5MzE5","avatar_url":"https://avatars0.githubusercontent.com/u/12809319?v=4","gravatar_id":"","url":"https://api.github.com/users/Bukhtawar","html_url":"https://github.com/Bukhtawar","followers_url":"https://api.github.com/users/Bukhtawar/followers","following_url":"https://api.github.com/users/Bukhtawar/following{/other_user}","gists_url":"https://api.github.com/users/Bukhtawar/gists{/gist_id}","starred_url":"https://api.github.com/users/Bukhtawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bukhtawar/subscriptions","organizations_url":"https://api.github.com/users/Bukhtawar/orgs","repos_url":"https://api.github.com/users/Bukhtawar/repos","events_url":"https://api.github.com/users/Bukhtawar/events{/privacy}","received_events_url":"https://api.github.com/users/Bukhtawar/received_events","type":"User","site_admin":false},"created_at":"2019-06-10T18:00:19Z","updated_at":"2019-06-10T18:21:26Z","author_association":"CONTRIBUTOR","body":"Essentially a knob to control\r\n1. unassigned_primaries\r\n2. all_unassigned\r\n\r\nNewly created shards(EMPTY_STORE) should be honoring the index per node limit to avoid hotspots ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/500813525","html_url":"https://github.com/elastic/elasticsearch/issues/43058#issuecomment-500813525","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43058","id":500813525,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMDgxMzUyNQ==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2019-06-11T12:11:37Z","updated_at":"2019-06-11T12:11:37Z","author_association":"CONTRIBUTOR","body":"primary shards with an existing store are already force-allocated, independently of the `total_shards_per_node` setting.\r\n\r\n> With the setting enabled on the index if there are node failures this setting can cause primary shards to go unassigned and cluster to go RED\r\n\r\nThis is simply not true. Please provide an actual example before making such claims.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/500905679","html_url":"https://github.com/elastic/elasticsearch/issues/43058#issuecomment-500905679","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43058","id":500905679,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMDkwNTY3OQ==","user":{"login":"Bukhtawar","id":12809319,"node_id":"MDQ6VXNlcjEyODA5MzE5","avatar_url":"https://avatars0.githubusercontent.com/u/12809319?v=4","gravatar_id":"","url":"https://api.github.com/users/Bukhtawar","html_url":"https://github.com/Bukhtawar","followers_url":"https://api.github.com/users/Bukhtawar/followers","following_url":"https://api.github.com/users/Bukhtawar/following{/other_user}","gists_url":"https://api.github.com/users/Bukhtawar/gists{/gist_id}","starred_url":"https://api.github.com/users/Bukhtawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bukhtawar/subscriptions","organizations_url":"https://api.github.com/users/Bukhtawar/orgs","repos_url":"https://api.github.com/users/Bukhtawar/repos","events_url":"https://api.github.com/users/Bukhtawar/events{/privacy}","received_events_url":"https://api.github.com/users/Bukhtawar/received_events","type":"User","site_admin":false},"created_at":"2019-06-11T15:53:45Z","updated_at":"2019-06-11T15:53:45Z","author_association":"CONTRIBUTOR","body":"@ywelsch you are right a single node failure can't cause RED but a second node failure will, if all the nodes had a shard-copy of an index and I take back the unassigned primary shard part(apologies for a false alarm). First failure will cause the cluster to go YELLOW as the limit would be breached on other nodes(which otherwise would have allocated a replica on the remaining node). The second failure can cause the cluster to go RED. Do you think it makes sense to expose a knob to honor this setting only if all shards are assigned and the cluster is GREEN essentially choosing availability over performance(maybe). ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/503527648","html_url":"https://github.com/elastic/elasticsearch/issues/43058#issuecomment-503527648","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43058","id":503527648,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzUyNzY0OA==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2019-06-19T11:50:27Z","updated_at":"2019-06-19T11:50:27Z","author_association":"CONTRIBUTOR","body":"The resilience of an index to arbitrary node failures is a function of its `number_of_replicas` setting. If you need your cluster to be resilient to any two nodes failing then you must set `number_of_replicas` to at least 2. You can also use allocation awareness to make the cluster more resilient to correlated failures of multiple nodes.\r\n\r\nIt's important to respect the `total_shards_per_node` setting as a hard limit, because exceeding this setting may cause the node to run out of resources and fail, resulting in other nodes exceeding this setting and failing in turn.\r\n\r\nThat said, Elasticsearch's handling of hard allocation limits is known to be imperfect, and there are already open issues to do with it (e.g. #12273, #17213) so I think this can be closed as a duplicate of those.","performed_via_github_app":null}]