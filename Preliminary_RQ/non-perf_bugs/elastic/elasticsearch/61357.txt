{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/61357","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61357/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61357/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61357/events","html_url":"https://github.com/elastic/elasticsearch/issues/61357","id":682516148,"node_id":"MDU6SXNzdWU2ODI1MTYxNDg=","number":61357,"title":"Inconsistent fraction of a second part requirement between strict_date_optional_time_nanos and strict_date_optional_time","user":{"login":"kiju98","id":25359646,"node_id":"MDQ6VXNlcjI1MzU5NjQ2","avatar_url":"https://avatars2.githubusercontent.com/u/25359646?v=4","gravatar_id":"","url":"https://api.github.com/users/kiju98","html_url":"https://github.com/kiju98","followers_url":"https://api.github.com/users/kiju98/followers","following_url":"https://api.github.com/users/kiju98/following{/other_user}","gists_url":"https://api.github.com/users/kiju98/gists{/gist_id}","starred_url":"https://api.github.com/users/kiju98/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kiju98/subscriptions","organizations_url":"https://api.github.com/users/kiju98/orgs","repos_url":"https://api.github.com/users/kiju98/repos","events_url":"https://api.github.com/users/kiju98/events{/privacy}","received_events_url":"https://api.github.com/users/kiju98/received_events","type":"User","site_admin":false},"labels":[{"id":144797810,"node_id":"MDU6TGFiZWwxNDQ3OTc4MTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Core","name":":Core/Infra/Core","color":"0e8a16","default":false,"description":"Core issues without another label"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":1967495446,"node_id":"MDU6TGFiZWwxOTY3NDk1NDQ2","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Core/Infra","name":"Team:Core/Infra","color":"fef2c0","default":false,"description":"Meta label for core/infra team"}],"state":"closed","locked":false,"assignee":{"login":"pgomulka","id":11137008,"node_id":"MDQ6VXNlcjExMTM3MDA4","avatar_url":"https://avatars0.githubusercontent.com/u/11137008?v=4","gravatar_id":"","url":"https://api.github.com/users/pgomulka","html_url":"https://github.com/pgomulka","followers_url":"https://api.github.com/users/pgomulka/followers","following_url":"https://api.github.com/users/pgomulka/following{/other_user}","gists_url":"https://api.github.com/users/pgomulka/gists{/gist_id}","starred_url":"https://api.github.com/users/pgomulka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgomulka/subscriptions","organizations_url":"https://api.github.com/users/pgomulka/orgs","repos_url":"https://api.github.com/users/pgomulka/repos","events_url":"https://api.github.com/users/pgomulka/events{/privacy}","received_events_url":"https://api.github.com/users/pgomulka/received_events","type":"User","site_admin":false},"assignees":[{"login":"pgomulka","id":11137008,"node_id":"MDQ6VXNlcjExMTM3MDA4","avatar_url":"https://avatars0.githubusercontent.com/u/11137008?v=4","gravatar_id":"","url":"https://api.github.com/users/pgomulka","html_url":"https://github.com/pgomulka","followers_url":"https://api.github.com/users/pgomulka/followers","following_url":"https://api.github.com/users/pgomulka/following{/other_user}","gists_url":"https://api.github.com/users/pgomulka/gists{/gist_id}","starred_url":"https://api.github.com/users/pgomulka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgomulka/subscriptions","organizations_url":"https://api.github.com/users/pgomulka/orgs","repos_url":"https://api.github.com/users/pgomulka/repos","events_url":"https://api.github.com/users/pgomulka/events{/privacy}","received_events_url":"https://api.github.com/users/pgomulka/received_events","type":"User","site_admin":false}],"milestone":null,"comments":10,"created_at":"2020-08-20T08:11:58Z","updated_at":"2020-10-07T08:24:27Z","closed_at":"2020-10-07T08:24:27Z","author_association":"NONE","active_lock_reason":null,"body":"Error is thrown if date type is strict_date_optional_time_nanos and ingested data has single digit nanoseconds. I get the same error when the type is `date_nanos`, too. \r\n```\r\nPUT test-date\r\n{\r\n  \"mappings\": {\r\n    \"properties\": {\r\n      \"datetest-nano\": {\r\n        \"type\": \"date\",\r\n        \"format\": \"strict_date_optional_time_nanos\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPOST test-date/_doc/123\r\n{\r\n  \"datetest-nano\": \"2020-06-19T07:16:17.2Z\"\r\n}\r\n=>\r\n{\r\n  \"error\" : {\r\n    \"root_cause\" : [\r\n      {\r\n        \"type\" : \"mapper_parsing_exception\",\r\n        \"reason\" : \"failed to parse field [datetest-nano] of type [date] in document with id '123'. Preview of field's value: '2020-06-19T07:16:17.2Z'\"\r\n      }\r\n    ],\r\n    \"type\" : \"mapper_parsing_exception\",\r\n    \"reason\" : \"failed to parse field [datetest-nano] of type [date] in document with id '123'. Preview of field's value: '2020-06-19T07:16:17.2Z'\",\r\n    \"caused_by\" : {\r\n      \"type\" : \"illegal_argument_exception\",\r\n      \"reason\" : \"failed to parse date field [2020-06-19T07:16:17.2Z] with format [strict_date_optional_time_nanos]\",\r\n      \"caused_by\" : {\r\n        \"type\" : \"date_time_parse_exception\",\r\n        \"reason\" : \"Text '2020-06-19T07:16:17.2Z' could not be parsed, unparsed text found at index 19\"\r\n      }\r\n    }\r\n  },\r\n  \"status\" : 400\r\n}\r\n```\r\nI heard this is not a bug, since the code does enforce a minimum 3 digits nano value.\r\nHowever, `strict_date_optional_time` allow one digit fraction of a second part as below:\r\n```\r\nPUT test-date\r\n{\r\n  \"mappings\": {\r\n    \"properties\": {\r\n      \"datetest-nano\": {\r\n        \"type\": \"date\",\r\n        \"format\": \"strict_date_optional_time\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPOST test-date/_doc/123\r\n{\r\n  \"datetest-nano\": \"2020-06-19T07:16:17.2Z\"\r\n} \r\n=>\r\n{\r\n  \"_index\" : \"test-date\",\r\n  \"_type\" : \"_doc\",\r\n  \"_id\" : \"123\",\r\n  \"_version\" : 1,\r\n  \"result\" : \"created\",\r\n  \"_shards\" : {\r\n    \"total\" : 2,\r\n    \"successful\" : 1,\r\n    \"failed\" : 0\r\n  },\r\n  \"_seq_no\" : 0,\r\n  \"_primary_term\" : 1\r\n}\r\n```\r\n\r\nI think either 1) `strict_date_optional_time_nanos` should allow 1 digit nano value or 2) the documentation should mention that `strict_date_optional_time_nanos` requires a minimum 3 digit nano value while \"strict_date_optional_time\" allows 1 digit millisecond value.","closed_by":{"login":"pgomulka","id":11137008,"node_id":"MDQ6VXNlcjExMTM3MDA4","avatar_url":"https://avatars0.githubusercontent.com/u/11137008?v=4","gravatar_id":"","url":"https://api.github.com/users/pgomulka","html_url":"https://github.com/pgomulka","followers_url":"https://api.github.com/users/pgomulka/followers","following_url":"https://api.github.com/users/pgomulka/following{/other_user}","gists_url":"https://api.github.com/users/pgomulka/gists{/gist_id}","starred_url":"https://api.github.com/users/pgomulka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgomulka/subscriptions","organizations_url":"https://api.github.com/users/pgomulka/orgs","repos_url":"https://api.github.com/users/pgomulka/repos","events_url":"https://api.github.com/users/pgomulka/events{/privacy}","received_events_url":"https://api.github.com/users/pgomulka/received_events","type":"User","site_admin":false},"performed_via_github_app":null}