[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/564985733","html_url":"https://github.com/elastic/elasticsearch/issues/50135#issuecomment-564985733","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50135","id":564985733,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDk4NTczMw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-12-12T12:24:54Z","updated_at":"2019-12-12T12:24:54Z","author_association":"COLLABORATOR","body":"Pinging @elastic/ml-core (:ml/Transform)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/564988560","html_url":"https://github.com/elastic/elasticsearch/issues/50135#issuecomment-564988560","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50135","id":564988560,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDk4ODU2MA==","user":{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false},"created_at":"2019-12-12T12:33:49Z","updated_at":"2019-12-12T12:33:49Z","author_association":"MEMBER","body":"> Validate a pipeline exists when creating or updating a transform\r\n\r\nYes, 100%, I am surprised that this is not the case now.\r\n\r\n> Validate that a model exists when creating a inference processor pipeline\r\n(although reindex does not do this.)\r\n\r\nAt the inference processor level, this is not currently possible. When pipelines are created, there are no opportunities to asynchronously check an index. And we cannot pause the thread that is doing the creation as that effects the stack as a whole.\r\n\r\nThe transform might be able to do this in a round about way. But that is conflating two different features. \r\n\r\nTransforms might be able to check the first couple of docs at `_start` and prevent it starting if the first handful of docs fails?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/564996568","html_url":"https://github.com/elastic/elasticsearch/issues/50135#issuecomment-564996568","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50135","id":564996568,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDk5NjU2OA==","user":{"login":"hendrikmuhs","id":7126422,"node_id":"MDQ6VXNlcjcxMjY0MjI=","avatar_url":"https://avatars3.githubusercontent.com/u/7126422?v=4","gravatar_id":"","url":"https://api.github.com/users/hendrikmuhs","html_url":"https://github.com/hendrikmuhs","followers_url":"https://api.github.com/users/hendrikmuhs/followers","following_url":"https://api.github.com/users/hendrikmuhs/following{/other_user}","gists_url":"https://api.github.com/users/hendrikmuhs/gists{/gist_id}","starred_url":"https://api.github.com/users/hendrikmuhs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hendrikmuhs/subscriptions","organizations_url":"https://api.github.com/users/hendrikmuhs/orgs","repos_url":"https://api.github.com/users/hendrikmuhs/repos","events_url":"https://api.github.com/users/hendrikmuhs/events{/privacy}","received_events_url":"https://api.github.com/users/hendrikmuhs/received_events","type":"User","site_admin":false},"created_at":"2019-12-12T12:58:53Z","updated_at":"2019-12-12T12:58:53Z","author_association":"CONTRIBUTOR","body":"In addition to validation, error handling of the bulk index failure should be improved, related to #50122.\r\n\r\nWe already do this for script errors and circuit breaker exceptions.\r\n\r\nAfter that fix, such an error would immediately set the transform to failed without going into the retry loop.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/581824533","html_url":"https://github.com/elastic/elasticsearch/issues/50135#issuecomment-581824533","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50135","id":581824533,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MTgyNDUzMw==","user":{"login":"hendrikmuhs","id":7126422,"node_id":"MDQ6VXNlcjcxMjY0MjI=","avatar_url":"https://avatars3.githubusercontent.com/u/7126422?v=4","gravatar_id":"","url":"https://api.github.com/users/hendrikmuhs","html_url":"https://github.com/hendrikmuhs","followers_url":"https://api.github.com/users/hendrikmuhs/followers","following_url":"https://api.github.com/users/hendrikmuhs/following{/other_user}","gists_url":"https://api.github.com/users/hendrikmuhs/gists{/gist_id}","starred_url":"https://api.github.com/users/hendrikmuhs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hendrikmuhs/subscriptions","organizations_url":"https://api.github.com/users/hendrikmuhs/orgs","repos_url":"https://api.github.com/users/hendrikmuhs/repos","events_url":"https://api.github.com/users/hendrikmuhs/events{/privacy}","received_events_url":"https://api.github.com/users/hendrikmuhs/received_events","type":"User","site_admin":false},"created_at":"2020-02-04T09:44:32Z","updated_at":"2020-02-04T09:44:32Z","author_association":"CONTRIBUTOR","body":"Enhancements made:\r\n\r\n - check pipeline at validation (put, start, preview)\r\n - set the transform to failed if pipeline disappears at runtime\r\n - set the transform failed if inference pipeline processor errors with resource not found\r\n\r\nerrors are booth in `_stats` and as audits.\r\n\r\nI wonder what is left? As @benwtrent mentioned we could fail at start if the pipeline is broken. However, I would use the `_simulate` API of ingest and add this to validation.\r\n\r\n@sophiec20 anything else?\r\n\r\nI suggest to close this issue and - if needed - open separate follow up issues for further enhancements.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/581827205","html_url":"https://github.com/elastic/elasticsearch/issues/50135#issuecomment-581827205","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50135","id":581827205,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MTgyNzIwNQ==","user":{"login":"sophiec20","id":4185750,"node_id":"MDQ6VXNlcjQxODU3NTA=","avatar_url":"https://avatars2.githubusercontent.com/u/4185750?v=4","gravatar_id":"","url":"https://api.github.com/users/sophiec20","html_url":"https://github.com/sophiec20","followers_url":"https://api.github.com/users/sophiec20/followers","following_url":"https://api.github.com/users/sophiec20/following{/other_user}","gists_url":"https://api.github.com/users/sophiec20/gists{/gist_id}","starred_url":"https://api.github.com/users/sophiec20/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sophiec20/subscriptions","organizations_url":"https://api.github.com/users/sophiec20/orgs","repos_url":"https://api.github.com/users/sophiec20/repos","events_url":"https://api.github.com/users/sophiec20/events{/privacy}","received_events_url":"https://api.github.com/users/sophiec20/received_events","type":"User","site_admin":false},"created_at":"2020-02-04T09:50:56Z","updated_at":"2020-02-04T09:50:56Z","author_association":"NONE","body":"> I suggest to close this issue and - if needed - open separate follow up issues for further enhancements.\r\n\r\nAgreed. Appropriate steps have been taken to improve error handling, so closing this ticket. ","performed_via_github_app":null}]