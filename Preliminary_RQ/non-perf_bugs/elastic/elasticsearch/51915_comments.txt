[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/582315829","html_url":"https://github.com/elastic/elasticsearch/issues/51915#issuecomment-582315829","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51915","id":582315829,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjMxNTgyOQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-02-05T09:24:04Z","updated_at":"2020-02-05T09:24:04Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed (:Distributed/Engine)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/582448825","html_url":"https://github.com/elastic/elasticsearch/issues/51915#issuecomment-582448825","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51915","id":582448825,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjQ0ODgyNQ==","user":{"login":"rtkgjacobs","id":42047335,"node_id":"MDQ6VXNlcjQyMDQ3MzM1","avatar_url":"https://avatars0.githubusercontent.com/u/42047335?v=4","gravatar_id":"","url":"https://api.github.com/users/rtkgjacobs","html_url":"https://github.com/rtkgjacobs","followers_url":"https://api.github.com/users/rtkgjacobs/followers","following_url":"https://api.github.com/users/rtkgjacobs/following{/other_user}","gists_url":"https://api.github.com/users/rtkgjacobs/gists{/gist_id}","starred_url":"https://api.github.com/users/rtkgjacobs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rtkgjacobs/subscriptions","organizations_url":"https://api.github.com/users/rtkgjacobs/orgs","repos_url":"https://api.github.com/users/rtkgjacobs/repos","events_url":"https://api.github.com/users/rtkgjacobs/events{/privacy}","received_events_url":"https://api.github.com/users/rtkgjacobs/received_events","type":"User","site_admin":false},"created_at":"2020-02-05T15:01:27Z","updated_at":"2020-02-05T16:56:28Z","author_association":"NONE","body":"There are number of external projects (just listing a few we've found with our audits so far) that hit this pinch point by default as an FYI\r\n\r\n* https://github.com/vvanholl/elasticsearch-prometheus-exporter\r\n  * This one uses elastics own library https://github.com/elastic/elasticsearch/blob/master/server/src/main/java/org/elasticsearch/action/admin/indices/stats/IndexStats.java (its not clear to me if said lib will default to being 'nice' and not go after suggestion stats?  (we avoided its use to avoid having to install, version match plugins per node) \r\n\r\n* https://github.com/justwatchcom/elasticsearch_exporter\r\n  * Audit shows when a users uses `es.indices`, it hits the `/_all/_stats/` API - impact high\r\n![image](https://user-images.githubusercontent.com/42047335/73862810-14dca280-480d-11ea-9c0e-a44dcfdf2a1c.png)\r\n\r\n* https://github.com/lmenezes/cerebro\r\n  *  Audit shows this is only a minor hit when a user clicks for details on a specific index, otherwise its not polling the greed `/stats` endpoint (only asks for docs, store) - impact low\r\n   * https://github.com/lmenezes/cerebro/blob/f2ed031fd89258c6ad85d40d846f5ff1f610fe73/app/elastic/HTTPElasticClient.scala\r\n\r\n\r\nHaving the ability to have a default `_stats` call be far less abusive / greedy r/e above would be ideal. Just tossing in my vote (otherwise for our own deployment, we may be forced to fork various assets and maintain private builds now) \r\n\r\nIm sure other tools / fixtures out there can pinch others as it has our own ramping of a large scale set of clusters. \r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/582522746","html_url":"https://github.com/elastic/elasticsearch/issues/51915#issuecomment-582522746","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51915","id":582522746,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjUyMjc0Ng==","user":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"created_at":"2020-02-05T17:33:49Z","updated_at":"2020-02-05T17:33:49Z","author_association":"MEMBER","body":"+1 to cache the completion stats (especially when we have many fields). Another optimization is to not compute the completion stats if we don't have any suggest field in the mapping.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/582524451","html_url":"https://github.com/elastic/elasticsearch/issues/51915#issuecomment-582524451","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51915","id":582524451,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjUyNDQ1MQ==","user":{"login":"rtkgjacobs","id":42047335,"node_id":"MDQ6VXNlcjQyMDQ3MzM1","avatar_url":"https://avatars0.githubusercontent.com/u/42047335?v=4","gravatar_id":"","url":"https://api.github.com/users/rtkgjacobs","html_url":"https://github.com/rtkgjacobs","followers_url":"https://api.github.com/users/rtkgjacobs/followers","following_url":"https://api.github.com/users/rtkgjacobs/following{/other_user}","gists_url":"https://api.github.com/users/rtkgjacobs/gists{/gist_id}","starred_url":"https://api.github.com/users/rtkgjacobs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rtkgjacobs/subscriptions","organizations_url":"https://api.github.com/users/rtkgjacobs/orgs","repos_url":"https://api.github.com/users/rtkgjacobs/repos","events_url":"https://api.github.com/users/rtkgjacobs/events{/privacy}","received_events_url":"https://api.github.com/users/rtkgjacobs/received_events","type":"User","site_admin":false},"created_at":"2020-02-05T17:37:56Z","updated_at":"2020-02-05T17:43:17Z","author_association":"NONE","body":"> +1 to cache the completion stats (especially when we have many fields). Another optimization is to not compute the completion stats if we don't have any suggest field in the mapping.\r\nWe have turned off all things hitting variants of `/stats` API's and are still finding high management threading / queue backlogs. We confirmed our mappings do not call out or enable suggested fields. \r\n\r\nIs ES7 set to always generate completion stats during ingestion ?   Can we turn this off? It is possibly a blocker for us to upgrade to ES7 from prior (old) versions in production for us if so...  We are finding with our latest tests removing the above fixtures, we are still seeing it stand out in our hot threads.  Does x-pack monitoring hit or stimulate the gathering of completion stats? ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/582533027","html_url":"https://github.com/elastic/elasticsearch/issues/51915#issuecomment-582533027","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51915","id":582533027,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjUzMzAyNw==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2020-02-05T17:57:44Z","updated_at":"2020-02-05T18:00:14Z","author_association":"CONTRIBUTOR","body":"> Is ES7 set to always generate completion stats during ingestion ?\r\n\r\nIt's not really anything to do with ingestion, nor is it specific to version 7. By default the completion stats are computed for each stats call and [this seems to be true as far back as version 1.7](https://www.elastic.co/guide/en/elasticsearch/reference/1.7/indices-stats.html) (I haven't checked further back).\r\n\r\n> Can we turn this off?\r\n\r\nIndeed you can; if you don't need to monitor completion stats so frequently then you should exclude them from these stats requests. I can't comment on how you might configure the third-party products linked above to do this, sorry, but Elasticsearch has had support for selecting specific stats for a long long time.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/582559670","html_url":"https://github.com/elastic/elasticsearch/issues/51915#issuecomment-582559670","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51915","id":582559670,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjU1OTY3MA==","user":{"login":"rtkkroland","id":22249569,"node_id":"MDQ6VXNlcjIyMjQ5NTY5","avatar_url":"https://avatars3.githubusercontent.com/u/22249569?v=4","gravatar_id":"","url":"https://api.github.com/users/rtkkroland","html_url":"https://github.com/rtkkroland","followers_url":"https://api.github.com/users/rtkkroland/followers","following_url":"https://api.github.com/users/rtkkroland/following{/other_user}","gists_url":"https://api.github.com/users/rtkkroland/gists{/gist_id}","starred_url":"https://api.github.com/users/rtkkroland/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rtkkroland/subscriptions","organizations_url":"https://api.github.com/users/rtkkroland/orgs","repos_url":"https://api.github.com/users/rtkkroland/repos","events_url":"https://api.github.com/users/rtkkroland/events{/privacy}","received_events_url":"https://api.github.com/users/rtkkroland/received_events","type":"User","site_admin":false},"created_at":"2020-02-05T19:00:07Z","updated_at":"2020-02-05T19:00:17Z","author_association":"NONE","body":">but Elasticsearch has had support for selecting specific stats for a long long time.\r\n\r\nIs this true for `/_cluster/stats` as well? It doesn't mention it in the Guide https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-stats.html and it returns the full set of completion stats. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/582591350","html_url":"https://github.com/elastic/elasticsearch/issues/51915#issuecomment-582591350","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51915","id":582591350,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjU5MTM1MA==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2020-02-05T20:14:24Z","updated_at":"2020-02-05T20:14:24Z","author_association":"CONTRIBUTOR","body":"@rtkkroland oh dear, yes, I didn't realise we also compute completion stats for the cluster-level API but you're right I think we do:\r\n\r\nhttps://github.com/elastic/elasticsearch/blob/84dbadb20b48b4fb360ba4c09aefb9c7009ac72a/server/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java#L57-L59\r\n\r\nIt doesn't look like there are selectors for this API 😕 ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/582900835","html_url":"https://github.com/elastic/elasticsearch/issues/51915#issuecomment-582900835","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51915","id":582900835,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjkwMDgzNQ==","user":{"login":"rtkgjacobs","id":42047335,"node_id":"MDQ6VXNlcjQyMDQ3MzM1","avatar_url":"https://avatars0.githubusercontent.com/u/42047335?v=4","gravatar_id":"","url":"https://api.github.com/users/rtkgjacobs","html_url":"https://github.com/rtkgjacobs","followers_url":"https://api.github.com/users/rtkgjacobs/followers","following_url":"https://api.github.com/users/rtkgjacobs/following{/other_user}","gists_url":"https://api.github.com/users/rtkgjacobs/gists{/gist_id}","starred_url":"https://api.github.com/users/rtkgjacobs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rtkgjacobs/subscriptions","organizations_url":"https://api.github.com/users/rtkgjacobs/orgs","repos_url":"https://api.github.com/users/rtkgjacobs/repos","events_url":"https://api.github.com/users/rtkgjacobs/events{/privacy}","received_events_url":"https://api.github.com/users/rtkgjacobs/received_events","type":"User","site_admin":false},"created_at":"2020-02-06T13:16:39Z","updated_at":"2020-02-06T13:16:39Z","author_association":"NONE","body":"Some additional follow up / findings on our side. We had Netdata installed on all our cluster nodes and its default configuration hits `_cluster/stats` - and its default refresh rate seems too frequent. Removing that vastly improved our performance (several orders of magnitude). We have slightly raised the maximum threads of type:management to match our core counts to offset what 30s prometheus scrapes we run. We'll be watching closely balancing these API's use, but passing on a warning for others that might fall into our trap. \r\n\r\nStrongly encourage the cost or risks of API's like `_cluster/stats`  and `_all/stats` etc are derisked where possible. A few of us on this project have more grey hairs now. ","performed_via_github_app":null}]