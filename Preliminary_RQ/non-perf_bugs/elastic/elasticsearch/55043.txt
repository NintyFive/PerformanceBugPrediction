{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/55043","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55043/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55043/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55043/events","html_url":"https://github.com/elastic/elasticsearch/issues/55043","id":597754842,"node_id":"MDU6SXNzdWU1OTc3NTQ4NDI=","number":55043,"title":"BulkProcessor no error when dynamic is strict","user":{"login":"moifort","id":4958079,"node_id":"MDQ6VXNlcjQ5NTgwNzk=","avatar_url":"https://avatars0.githubusercontent.com/u/4958079?v=4","gravatar_id":"","url":"https://api.github.com/users/moifort","html_url":"https://github.com/moifort","followers_url":"https://api.github.com/users/moifort/followers","following_url":"https://api.github.com/users/moifort/following{/other_user}","gists_url":"https://api.github.com/users/moifort/gists{/gist_id}","starred_url":"https://api.github.com/users/moifort/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/moifort/subscriptions","organizations_url":"https://api.github.com/users/moifort/orgs","repos_url":"https://api.github.com/users/moifort/repos","events_url":"https://api.github.com/users/moifort/events{/privacy}","received_events_url":"https://api.github.com/users/moifort/received_events","type":"User","site_admin":false},"labels":[{"id":493198109,"node_id":"MDU6TGFiZWw0OTMxOTgxMDk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Java%20High%20Level%20REST%20Client","name":":Core/Features/Java High Level REST Client","color":"0e8a16","default":false,"description":"Expressive Java Client for Elasticsearch"},{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":23715,"node_id":"MDU6TGFiZWwyMzcxNQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Edocs","name":">docs","color":"db755e","default":false,"description":"General docs changes"}],"state":"closed","locked":false,"assignee":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"assignees":[{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false}],"milestone":null,"comments":11,"created_at":"2020-04-10T07:58:46Z","updated_at":"2020-04-15T15:51:27Z","closed_at":"2020-04-15T14:04:03Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version** (`bin/elasticsearch --version`): docker image `elasticsearch:7.4.2`\r\n\r\n**Plugins installed**: [] default\r\n\r\n**JVM version** (`java -version`): docker image `elasticsearch:7.4.2`\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): docker image `elasticsearch:7.4.2`\r\n\r\n**elasticsearch-rest-high-level-client** : 7.6.2 on JDK 11\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nWhen using `dynamic: strict` mapping setting: \r\n* bulk processor return success instead of error when data to save has new field.\r\n* no data is store on Elasticsearch.\r\n\r\n**Steps to reproduce**:\r\n\r\nmapping.json\r\n```json\r\n{\r\n  \"dynamic\": \"strict\",\r\n  \"properties\": {\r\n    \"id\": {\r\n      \"type\": \"long\"\r\n    },\r\n    \"name\": {\r\n      \"type\": \"text\",\r\n      \"analyzer\": \"french_light\",\r\n      \"boost\": 10\r\n    }\r\n}\r\n```\r\n\r\nstoreData.java\r\n```java\r\nclass StoreData {  \r\n  private final RestHighLevelClient client;\r\n\r\n  public seed() {\r\n    try (var bulkProcessor = BulkProcessor\r\n            .builder(client::bulkAsync, new BulkListener())\r\n            .setBulkActions(500)\r\n            .setConcurrentRequests(0)\r\n            .setGlobalIndex(\"myIndex\")\r\n            .build()) {\r\n            productDao.listIndexable(product -> {\r\n                var indexProduct = new IndexRequest()\r\n                    .id(product.getId().toString())\r\n                    .source(elasticMapper.toIndexableProductViewJson(product), XContentType.JSON);\r\n                bulkProcessor.add(indexProduct);\r\n            });\r\n        }\r\n   }\r\n\r\n  public void bulkAsync(BulkRequest request, ActionListener<BulkResponse> bulkListener) {\r\n        client.bulkAsync(request, RequestOptions.DEFAULT, bulkListener);\r\n    }\r\n\r\n}\r\n```\r\n\r\nbulkListener.java\r\n```java\r\npublic class BulkListener implements BulkProcessor.Listener {\r\n\r\n        @Override\r\n        public void beforeBulk(long executionId, BulkRequest request) {\r\n            var numberOfActions = request.numberOfActions();\r\n            LOG.trace(\"Executing bulk [{}] with {} requests\", executionId, numberOfActions);\r\n        }\r\n\r\n        @Override\r\n        public void afterBulk(long executionId, BulkRequest request, BulkResponse response) {\r\n            LOG.trace(\"Bulk [{}] completed in {} milliseconds\", executionId, response.getTook().getMillis());\r\n        }\r\n\r\n        @Override\r\n        public void afterBulk(long executionId, BulkRequest request, Throwable failure) {\r\n            LOG.error(\"Failed to execute bulk\", failure);\r\n        }\r\n    }\r\n```\r\n\r\n**Provide logs (if relevant)**:\r\n\r\nWhen I call `StoreData.seed()` with field that is no defined on `mapping.json` \r\n\r\nlog\r\n```log\r\n[2020-04-10 07:45:35,522] [elastic-product-indexer-2-thread-1] INFO  o.m.i.e.ElasticClient$BulkListener - Executing bulk [1] with 500 requests\r\n[2020-04-10 07:45:37,236] [I/O dispatcher 1] DEBUG o.e.c.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned [HTTP/1.1 200 OK]\r\n[2020-04-10 07:45:37,649] [I/O dispatcher 1] INFO  o.m.i.e.ElasticClient$BulkListener - Bulk [1] completed in 2106 milliseconds\r\n[2020-04-10 07:45:37,750] [elastic-product-indexer-2-thread-1] INFO  o.m.i.e.ElasticClient$BulkListener - Executing bulk [2] with 500 requests\r\n[2020-04-10 07:45:39,428] [I/O dispatcher 1] DEBUG o.e.c.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned [HTTP/1.1 200 OK]\r\n[2020-04-10 07:45:39,445] [I/O dispatcher 1] INFO  o.m.i.e.ElasticClient$BulkListener - Bulk [2] completed in 1694 milliseconds\r\n[2020-04-10 07:45:39,461] [elastic-product-indexer-2-thread-1] INFO  o.m.i.e.ElasticClient$BulkListener - Executing bulk [3] with 184 requests\r\n[2020-04-10 07:45:40,164] [I/O dispatcher 1] DEBUG o.e.c.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned [HTTP/1.1 200 OK]\r\n[2020-04-10 07:45:40,170] [I/O dispatcher 1] INFO  o.m.i.e.ElasticClient$BulkListener - Bulk [3] completed in 708 milliseconds\r\n```\r\n\r\nkibana\r\n```json\r\nGET myIndex/_search\r\n\r\n{\r\n  \"took\" : 0,\r\n  \"timed_out\" : false,\r\n  \"_shards\" : {\r\n    \"total\" : 1,\r\n    \"successful\" : 1,\r\n    \"skipped\" : 0,\r\n    \"failed\" : 0\r\n  },\r\n  \"hits\" : {\r\n    \"total\" : {\r\n      \"value\" : 0,\r\n      \"relation\" : \"eq\"\r\n    },\r\n    \"max_score\" : null,\r\n    \"hits\" : [ ]\r\n  }\r\n}\r\n``` \r\n\r\n","closed_by":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"performed_via_github_app":null}