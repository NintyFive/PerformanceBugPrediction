{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/41794","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41794/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41794/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41794/events","html_url":"https://github.com/elastic/elasticsearch/issues/41794","id":440064191,"node_id":"MDU6SXNzdWU0NDAwNjQxOTE=","number":41794,"title":"[CI] HttpReadWriteHandlerTests.testSuccessfulDecodeHttpRequest LEAK","user":{"login":"henningandersen","id":33268011,"node_id":"MDQ6VXNlcjMzMjY4MDEx","avatar_url":"https://avatars2.githubusercontent.com/u/33268011?v=4","gravatar_id":"","url":"https://api.github.com/users/henningandersen","html_url":"https://github.com/henningandersen","followers_url":"https://api.github.com/users/henningandersen/followers","following_url":"https://api.github.com/users/henningandersen/following{/other_user}","gists_url":"https://api.github.com/users/henningandersen/gists{/gist_id}","starred_url":"https://api.github.com/users/henningandersen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/henningandersen/subscriptions","organizations_url":"https://api.github.com/users/henningandersen/orgs","repos_url":"https://api.github.com/users/henningandersen/repos","events_url":"https://api.github.com/users/henningandersen/events{/privacy}","received_events_url":"https://api.github.com/users/henningandersen/received_events","type":"User","site_admin":false},"labels":[{"id":146854632,"node_id":"MDU6TGFiZWwxNDY4NTQ2MzI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Network","name":":Distributed/Network","color":"0e8a16","default":false,"description":"Http and internode communication implementations"},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-05-03T14:10:40Z","updated_at":"2019-05-03T19:43:49Z","closed_at":"2019-05-03T19:43:49Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"HttpReadWriteHandlerTests.testSuccessfulDecodeHttpRequest failed on my PR build here: https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+pull-request-1/13279/testReport/org.elasticsearch.http.nio/HttpReadWriteHandlerTests/testSuccessfulDecodeHttpRequest/\r\n\r\nThis reproduces easily by running test class in IntelliJ until failure (just running the method alone is not enough). Somehow every 19th run fails (but not on the same test), probably GC related (no evidence for that statement).\r\n\r\n```\r\njava.lang.AssertionError: \r\nExpected: an empty collection\r\n     but: <[LEAK: ByteBuf.release() was not called before it's garbage-collected. See http://netty.io/wiki/reference-counted-objects.html for more information.\r\nRecent access records: \r\n#1:\r\n\tio.netty.buffer.AdvancedLeakAwareByteBuf.nioBuffers(AdvancedLeakAwareByteBuf.java:724)\r\n\torg.elasticsearch.http.nio.NettyAdaptor$1.write(NettyAdaptor.java:58)\r\n\tio.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:721)\r\n\tio.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:713)\r\n\tio.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:796)\r\n\tio.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:706)\r\n\tio.netty.handler.codec.MessageToMessageEncoder.write(MessageToMessageEncoder.java:112)\r\n\tio.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:721)\r\n\tio.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:713)\r\n\tio.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:796)\r\n\tio.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:706)\r\n\tio.netty.handler.codec.MessageToMessageEncoder.write(MessageToMessageEncoder.java:112)\r\n\tio.netty.handler.codec.MessageToMessageCodec.write(MessageToMessageCodec.java:116)\r\n\tio.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:721)\r\n\tio.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:713)\r\n\tio.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:796)\r\n\tio.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:706)\r\n\torg.elasticsearch.http.nio.NioHttpPipeliningHandler.write(NioHttpPipeliningHandler.java:71)\r\n\tio.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:721)\r\n```","closed_by":{"login":"tbrooks8","id":862472,"node_id":"MDQ6VXNlcjg2MjQ3Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/862472?v=4","gravatar_id":"","url":"https://api.github.com/users/tbrooks8","html_url":"https://github.com/tbrooks8","followers_url":"https://api.github.com/users/tbrooks8/followers","following_url":"https://api.github.com/users/tbrooks8/following{/other_user}","gists_url":"https://api.github.com/users/tbrooks8/gists{/gist_id}","starred_url":"https://api.github.com/users/tbrooks8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbrooks8/subscriptions","organizations_url":"https://api.github.com/users/tbrooks8/orgs","repos_url":"https://api.github.com/users/tbrooks8/repos","events_url":"https://api.github.com/users/tbrooks8/events{/privacy}","received_events_url":"https://api.github.com/users/tbrooks8/received_events","type":"User","site_admin":false},"performed_via_github_app":null}