[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/466410460","html_url":"https://github.com/elastic/elasticsearch/issues/39314#issuecomment-466410460","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39314","id":466410460,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NjQxMDQ2MA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-02-22T14:16:35Z","updated_at":"2019-02-22T14:16:35Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/471046084","html_url":"https://github.com/elastic/elasticsearch/issues/39314#issuecomment-471046084","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39314","id":471046084,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTA0NjA4NA==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2019-03-08T19:24:21Z","updated_at":"2019-03-08T19:24:21Z","author_association":"CONTRIBUTOR","body":"The logs seem to be lost on this one. I wonder though if this can occur when there's a messy election.\r\nAssume that a node tries to become leader in term 2, and the previous state has therefore term 1. At the same time, another node tries to become leader in term 3, and publishes a state to the current node, which has not executed the `publish` method yet for becoming leader in term 2. Assume that the current node then becomes leader in term 4, before executing `publish` for term 2. In that case, the above exception will trip. One way to fix this is to adapt the condition at the beginning of `publish` from `if (mode != Mode.LEADER) {` to `if (mode != Mode.LEADER || getCurrentTerm() != clusterChangedEvent.state().term()) {` so that we don't even explore that code path. WDYT @DaveCTurner?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/471174228","html_url":"https://github.com/elastic/elasticsearch/issues/39314#issuecomment-471174228","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39314","id":471174228,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTE3NDIyOA==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2019-03-09T12:48:43Z","updated_at":"2019-03-09T12:48:43Z","author_association":"CONTRIBUTOR","body":"The assertion also failed on the cluster state version:\r\n\r\n```\r\n...,\"version\":5,\"state_uuid\":\"lQhkDmd_SPOEmT1TTAsDNQ\",...,\"cluster_coordination\":{\"term\":1,...\r\n...,\"version\":6,\"state_uuid\":\"iYC-SDemQD-T76Gy_zuyng\",...,\"cluster_coordination\":{\"term\":3,...\r\n              ^               ^^^^^^^^^^^^^^^^^^^^^^                                     ^\r\n```\r\n\r\nRejecting early based on the term (and/or version) seems reasonable to me, it's checked in `coordinationState.get().handleClientValue(clusterState);` a few lines down anyway. We could also just move the assertion to be below the call to `handleClientValue`. But there's also this:\r\n\r\n```\r\n...,\"master_node\":null,...\r\n```\r\n\r\nShould we be trying to _publish_ a cluster state with no master?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/471481228","html_url":"https://github.com/elastic/elasticsearch/issues/39314#issuecomment-471481228","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39314","id":471481228,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTQ4MTIyOA==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2019-03-11T10:16:52Z","updated_at":"2019-03-11T10:16:52Z","author_association":"CONTRIBUTOR","body":"> The assertion also failed on the cluster state version\r\nyes, this fits with my scenario above.\r\n\r\n> Should we be trying to publish a cluster state with no master?\r\nNote that the assertion `assertPreviousStateConsistency` is comparing pre-states, not the state that is to be published, and also explicitly adding the no_master_block and setting master_node to null to make both states comparable.\r\n\r\nI think a term check is sufficient here (one leader per term) and will open a PR for this.","performed_via_github_app":null}]