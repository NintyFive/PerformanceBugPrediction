{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/493","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/493/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/493/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/493/events","html_url":"https://github.com/elastic/elasticsearch/issues/493","id":406003,"node_id":"MDU6SXNzdWU0MDYwMDM=","number":493,"title":"Allow invalid values to be ignored","user":{"login":"apatrida","id":182340,"node_id":"MDQ6VXNlcjE4MjM0MA==","avatar_url":"https://avatars3.githubusercontent.com/u/182340?v=4","gravatar_id":"","url":"https://api.github.com/users/apatrida","html_url":"https://github.com/apatrida","followers_url":"https://api.github.com/users/apatrida/followers","following_url":"https://api.github.com/users/apatrida/following{/other_user}","gists_url":"https://api.github.com/users/apatrida/gists{/gist_id}","starred_url":"https://api.github.com/users/apatrida/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apatrida/subscriptions","organizations_url":"https://api.github.com/users/apatrida/orgs","repos_url":"https://api.github.com/users/apatrida/repos","events_url":"https://api.github.com/users/apatrida/events{/privacy}","received_events_url":"https://api.github.com/users/apatrida/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2010-11-08T03:22:19Z","updated_at":"2013-04-04T18:38:02Z","closed_at":"2013-04-04T18:38:02Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"For datatypes that expect a specific format, allow a variation of the type that is a \"softie\" in that it allows bad things to just be ignored.  This is important for unclean data, and although other work may allow you to write a document processing plugin to ES that can clean data (i.e. parse human readable dates into a standard form), it is sometimes likely you can have some rough data that you don't want to kill your indexing.  Especially for fields that are not that important but you want a best attempt to insert the document.\n\nYou then could also consider marking documents that have validation errors so they could be later rescanned and reindexed given the stored JSON when a cleaner is added that would possibly resolve the problem.  For example, mark the document as validation error for field XX and later search for those docs and ask the system \"reindex document <id>\" from its own stored form.\n\nSo 3 things here:\n- be able to mark a field mapping to allow invalid data to be ignored (discarded) on a field by field basis\n- have the system mark the record as not passing validation at a per-field level\n- be able to ask the system to reindex by ID using _stored JSON or even by reindex-by-query (#492)\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}