[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/197247517","html_url":"https://github.com/elastic/elasticsearch/issues/17131#issuecomment-197247517","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17131","id":197247517,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NzI0NzUxNw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-03-16T10:15:23Z","updated_at":"2016-03-16T10:15:23Z","author_association":"CONTRIBUTOR","body":"Do you mean `nested` fields or inner `object` fields?  Either way, having thousands of fields is costly, especially if those fields are sparse.  We are currently working on adding various [soft limits](https://github.com/elastic/elasticsearch/issues/11511) to things like the [number of fields](https://github.com/elastic/elasticsearch/issues/11443) you can have in an index, plus the [number of nested fields](https://github.com/elastic/elasticsearch/pull/15989) you can have in an index.\n\nUsually your data model can be reworked to use fewer fields by specifying whatever you are using for a field name today as a value instead, eg:\n\n```\n{ \"foo\": \"bar\"}\n```\n\ncould be better represented as:\n\n```\n{ \"key\": \"foo\", \"value\": bar\" }\n```\n\nAn alternative, with your current model, is to use a single field within `A` to identify documents that have an `A.*` field, eg:\n\n```\n{ \"A\": {\n    \"some_val\": \"foo\",\n    \"exists\": true\n}}\n```\n\nThen you could just query on `A.exists`.  This will be much more efficient than querying for thousands of potential terms.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/197252258","html_url":"https://github.com/elastic/elasticsearch/issues/17131#issuecomment-197252258","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17131","id":197252258,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NzI1MjI1OA==","user":{"login":"merito","id":4804161,"node_id":"MDQ6VXNlcjQ4MDQxNjE=","avatar_url":"https://avatars2.githubusercontent.com/u/4804161?v=4","gravatar_id":"","url":"https://api.github.com/users/merito","html_url":"https://github.com/merito","followers_url":"https://api.github.com/users/merito/followers","following_url":"https://api.github.com/users/merito/following{/other_user}","gists_url":"https://api.github.com/users/merito/gists{/gist_id}","starred_url":"https://api.github.com/users/merito/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merito/subscriptions","organizations_url":"https://api.github.com/users/merito/orgs","repos_url":"https://api.github.com/users/merito/repos","events_url":"https://api.github.com/users/merito/events{/privacy}","received_events_url":"https://api.github.com/users/merito/received_events","type":"User","site_admin":false},"created_at":"2016-03-16T10:31:56Z","updated_at":"2016-03-16T10:31:56Z","author_association":"NONE","body":"Yes, I mean inner objects. But still even if there is not thousands of fields I think it will be useful to have a feature to check if only the outer object exists without checking all inner objects, like in my case.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/198317071","html_url":"https://github.com/elastic/elasticsearch/issues/17131#issuecomment-198317071","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17131","id":198317071,"node_id":"MDEyOklzc3VlQ29tbWVudDE5ODMxNzA3MQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-03-18T11:34:03Z","updated_at":"2016-03-18T11:34:03Z","author_association":"CONTRIBUTOR","body":"@merito see https://github.com/elastic/elasticsearch/pull/17186\n","performed_via_github_app":null}]