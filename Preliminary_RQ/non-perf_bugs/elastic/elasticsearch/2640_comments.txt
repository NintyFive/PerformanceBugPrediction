[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/14210543","html_url":"https://github.com/elastic/elasticsearch/issues/2640#issuecomment-14210543","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2640","id":14210543,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MjEwNTQz","user":{"login":"mattweber","id":173955,"node_id":"MDQ6VXNlcjE3Mzk1NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/173955?v=4","gravatar_id":"","url":"https://api.github.com/users/mattweber","html_url":"https://github.com/mattweber","followers_url":"https://api.github.com/users/mattweber/followers","following_url":"https://api.github.com/users/mattweber/following{/other_user}","gists_url":"https://api.github.com/users/mattweber/gists{/gist_id}","starred_url":"https://api.github.com/users/mattweber/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattweber/subscriptions","organizations_url":"https://api.github.com/users/mattweber/orgs","repos_url":"https://api.github.com/users/mattweber/repos","events_url":"https://api.github.com/users/mattweber/events{/privacy}","received_events_url":"https://api.github.com/users/mattweber/received_events","type":"User","site_admin":false},"created_at":"2013-02-28T01:00:30Z","updated_at":"2013-02-28T01:00:30Z","author_association":"CONTRIBUTOR","body":"Any special reason for the rescore_query object?  Seems like something along the lines of the following would be more consistent with the api.\n\n``` javascript\ncurl -s -XPOST 'localhost:9200/_search' -d '{\n  \"query\" : {\n    \"match\" : {\n      \"field1\" : {\n        \"query\" : \"the quick brown\",\n        \"type\" : \"boolean\",\n        \"operator\" : \"OR\"\n      }\n    }\n  },\n  \"rescore\" : {\n    \"window_size\" : 50,\n    \"query_weight\" : 0.7,\n    \"rescore_query_weight\" : 1.2,\n    \"query\" : {\n      \"match\" : {\n        \"field1\" : {\n          \"query\" : \"the quick brown\",\n          \"type\" : \"phrase\",\n          \"slop\" : 2\n        }\n      }\n    }\n  }\n}'\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/14221317","html_url":"https://github.com/elastic/elasticsearch/issues/2640#issuecomment-14221317","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2640","id":14221317,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MjIxMzE3","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2013-02-28T07:52:57Z","updated_at":"2013-02-28T07:52:57Z","author_association":"CONTRIBUTOR","body":"Hey Matt,\n\nI agree this would be more consistent. The reason behind this is that there might be additional implementations for rescoring in the future that are not necessarily use a query. So the \"query\" attribute is a context marker here so we can add additional rescorers in the future or open up this api for extension more easily. Does this make sense?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/14242133","html_url":"https://github.com/elastic/elasticsearch/issues/2640#issuecomment-14242133","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2640","id":14242133,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MjQyMTMz","user":{"login":"mattweber","id":173955,"node_id":"MDQ6VXNlcjE3Mzk1NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/173955?v=4","gravatar_id":"","url":"https://api.github.com/users/mattweber","html_url":"https://github.com/mattweber","followers_url":"https://api.github.com/users/mattweber/followers","following_url":"https://api.github.com/users/mattweber/following{/other_user}","gists_url":"https://api.github.com/users/mattweber/gists{/gist_id}","starred_url":"https://api.github.com/users/mattweber/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattweber/subscriptions","organizations_url":"https://api.github.com/users/mattweber/orgs","repos_url":"https://api.github.com/users/mattweber/repos","events_url":"https://api.github.com/users/mattweber/events{/privacy}","received_events_url":"https://api.github.com/users/mattweber/received_events","type":"User","site_admin":false},"created_at":"2013-02-28T16:29:29Z","updated_at":"2013-02-28T16:29:29Z","author_association":"CONTRIBUTOR","body":"It does when I look how the parsing is implemented.  Maybe just switch query with rescore_query?  Doesn't really matter, it just seemed out of place to me when I was looking at it.\n\n``` javascript\ncurl -s -XPOST 'localhost:9200/_search' -d '{\n  \"query\" : {\n    \"match\" : {\n      \"field1\" : {\n        \"query\" : \"the quick brown\",\n        \"type\" : \"boolean\",\n        \"operator\" : \"OR\"\n      }\n    }\n  },\n  \"rescore\" : {\n    \"window_size\" : 50,\n    \"rescore_query\" : {\n      \"query\" : {\n        \"match\" : {\n          \"field1\" : {\n            \"query\" : \"the quick brown\",\n            \"type\" : \"phrase\",\n            \"slop\" : 2\n          }\n        }\n      },\n      \"query_weight\" : 0.7,\n      \"rescore_query_weight\" : 1.2\n    }\n  }\n}'\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/50322806","html_url":"https://github.com/elastic/elasticsearch/issues/2640#issuecomment-50322806","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2640","id":50322806,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzIyODA2","user":{"login":"Kaidanov","id":164266,"node_id":"MDQ6VXNlcjE2NDI2Ng==","avatar_url":"https://avatars1.githubusercontent.com/u/164266?v=4","gravatar_id":"","url":"https://api.github.com/users/Kaidanov","html_url":"https://github.com/Kaidanov","followers_url":"https://api.github.com/users/Kaidanov/followers","following_url":"https://api.github.com/users/Kaidanov/following{/other_user}","gists_url":"https://api.github.com/users/Kaidanov/gists{/gist_id}","starred_url":"https://api.github.com/users/Kaidanov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Kaidanov/subscriptions","organizations_url":"https://api.github.com/users/Kaidanov/orgs","repos_url":"https://api.github.com/users/Kaidanov/repos","events_url":"https://api.github.com/users/Kaidanov/events{/privacy}","received_events_url":"https://api.github.com/users/Kaidanov/received_events","type":"User","site_admin":false},"created_at":"2014-07-28T10:29:54Z","updated_at":"2014-07-28T10:29:54Z","author_association":"NONE","body":"how can you rescore and sort together ? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/52036667","html_url":"https://github.com/elastic/elasticsearch/issues/2640#issuecomment-52036667","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2640","id":52036667,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMDM2NjY3","user":{"login":"xritchie","id":6548681,"node_id":"MDQ6VXNlcjY1NDg2ODE=","avatar_url":"https://avatars2.githubusercontent.com/u/6548681?v=4","gravatar_id":"","url":"https://api.github.com/users/xritchie","html_url":"https://github.com/xritchie","followers_url":"https://api.github.com/users/xritchie/followers","following_url":"https://api.github.com/users/xritchie/following{/other_user}","gists_url":"https://api.github.com/users/xritchie/gists{/gist_id}","starred_url":"https://api.github.com/users/xritchie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xritchie/subscriptions","organizations_url":"https://api.github.com/users/xritchie/orgs","repos_url":"https://api.github.com/users/xritchie/repos","events_url":"https://api.github.com/users/xritchie/events{/privacy}","received_events_url":"https://api.github.com/users/xritchie/received_events","type":"User","site_admin":false},"created_at":"2014-08-13T11:28:00Z","updated_at":"2014-08-13T11:28:00Z","author_association":"NONE","body":"Hi Guys,\n\nI'm not entirely sure if I found a Bug or if the functionality is intended to work like so.\n\nBasically I have a rescore query together with multiple sort fields if I remove the sort functionality the query works as intended and sorting is done on the rescore query, If I use any kind of Sort, the rescore query is totally ignored and sorting is done on the original query score.\n\nTo put stuff into perspective the following query is sorted on the original query score and the re score query is totally ignored.\n\n```\n{\n    \"from\": 0,\n    \"size\": 10,\n    \"explain\": false,\n    \"sort\": [\"_score\", {\n        \"networks\": {\n            \"order\": \"desc\",\n            \"mode\": \"sum\"\n        }\n    }, {\n        \"rich\": {\n            \"order\": \"desc\",\n            \"mode\": \"sum\"\n        }\n    }, {\n        \"picture\": {\n            \"order\": \"desc\",\n            \"mode\": \"sum\"\n        }\n    }],\n    \"query\": {\n        \"filtered\": {\n            \"query\": {\n                \"bool\": {\n                    \"should\": [{\n                        \"constant_score\": {\n                            \"query\": {\n                                \"match\": {\n                                    \"_all\": {\n                                        \"query\": \"Daryl\"\n                                    }\n                                }\n                            },\n                            \"boost\": 1.0\n                        }\n                    }, {\n                        \"constant_score\": {\n                            \"query\": {\n                                \"match\": {\n                                    \"_all\": {\n                                        \"query\": \"Davies\"\n                                    }\n                                }\n                            },\n                            \"boost\": 1.0\n                        }\n                    }, {\n                        \"constant_score\": {\n                            \"query\": {\n                                \"match\": {\n                                    \"_all\": {\n                                        \"query\": \"php\"\n                                    }\n                                }\n                            },\n                            \"boost\": 1.0\n                        }\n                    }, {\n                        \"constant_score\": {\n                            \"query\": {\n                                \"match\": {\n                                    \"_all\": {\n                                        \"query\": \"developer\"\n                                    }\n                                }\n                            },\n                            \"boost\": 1.0\n                        }\n                    }],\n                    \"disable_coord\": 1\n                }\n            },\n            \"filter\": [{\n                \"or\": [{\n                    \"query\": {\n                        \"match\": {\n                            \"_all\": {\n                                \"query\": \"Daryl\"\n                            }\n                        }\n                    }\n                }, {\n                    \"query\": {\n                        \"match\": {\n                            \"_all\": {\n                                \"query\": \"Davies\"\n                            }\n                        }\n                    }\n                }, {\n                    \"query\": {\n                        \"match\": {\n                            \"_all\": {\n                                \"query\": \"php\"\n                            }\n                        }\n                    }\n                }, {\n                    \"query\": {\n                        \"match\": {\n                            \"_all\": {\n                                \"query\": \"developer\"\n                            }\n                        }\n                    }\n                }]\n            }]\n        }\n    },\n    \"rescore\": [{\n        \"query\": {\n            \"query_weight\": 0.0,\n            \"rescore_query_weight\": 1.0,\n            \"score_mode\": \"total\",\n            \"rescore_query\": {\n                \"constant_score\": {\n                    \"query\": {\n                        \"match_all\": {}\n                    },\n                    \"boost\": 20.0\n                }\n            }\n        },\n        \"window_size\": 50\n    }]\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/52037436","html_url":"https://github.com/elastic/elasticsearch/issues/2640#issuecomment-52037436","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2640","id":52037436,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMDM3NDM2","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-08-13T11:38:18Z","updated_at":"2014-08-13T11:38:18Z","author_association":"CONTRIBUTOR","body":"@xritchie see https://github.com/elasticsearch/elasticsearch/issues/6788\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/261453951","html_url":"https://github.com/elastic/elasticsearch/issues/2640#issuecomment-261453951","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2640","id":261453951,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTQ1Mzk1MQ==","user":{"login":"deepkg","id":4308018,"node_id":"MDQ6VXNlcjQzMDgwMTg=","avatar_url":"https://avatars3.githubusercontent.com/u/4308018?v=4","gravatar_id":"","url":"https://api.github.com/users/deepkg","html_url":"https://github.com/deepkg","followers_url":"https://api.github.com/users/deepkg/followers","following_url":"https://api.github.com/users/deepkg/following{/other_user}","gists_url":"https://api.github.com/users/deepkg/gists{/gist_id}","starred_url":"https://api.github.com/users/deepkg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deepkg/subscriptions","organizations_url":"https://api.github.com/users/deepkg/orgs","repos_url":"https://api.github.com/users/deepkg/repos","events_url":"https://api.github.com/users/deepkg/events{/privacy}","received_events_url":"https://api.github.com/users/deepkg/received_events","type":"User","site_admin":false},"created_at":"2016-11-18T05:45:48Z","updated_at":"2016-11-18T05:45:48Z","author_association":"NONE","body":"Can we provide complex queries for re-scoring?\nFor example : a function for linear sum of attributes with some weights for each attributes.\nAlso, how can be plug the response to be sorted after getting a final score(x_initial pass score + y_re-ranked score)?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/312415277","html_url":"https://github.com/elastic/elasticsearch/issues/2640#issuecomment-312415277","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2640","id":312415277,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMjQxNTI3Nw==","user":{"login":"lanpay-lulu","id":20488066,"node_id":"MDQ6VXNlcjIwNDg4MDY2","avatar_url":"https://avatars1.githubusercontent.com/u/20488066?v=4","gravatar_id":"","url":"https://api.github.com/users/lanpay-lulu","html_url":"https://github.com/lanpay-lulu","followers_url":"https://api.github.com/users/lanpay-lulu/followers","following_url":"https://api.github.com/users/lanpay-lulu/following{/other_user}","gists_url":"https://api.github.com/users/lanpay-lulu/gists{/gist_id}","starred_url":"https://api.github.com/users/lanpay-lulu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lanpay-lulu/subscriptions","organizations_url":"https://api.github.com/users/lanpay-lulu/orgs","repos_url":"https://api.github.com/users/lanpay-lulu/repos","events_url":"https://api.github.com/users/lanpay-lulu/events{/privacy}","received_events_url":"https://api.github.com/users/lanpay-lulu/received_events","type":"User","site_admin":false},"created_at":"2017-07-01T06:55:21Z","updated_at":"2017-07-01T06:57:00Z","author_association":"NONE","body":"Will rescore query drop some results that should be returned? In the definition above, I don't thik it should, but actually it can. So I was totally confused.\r\nFor example, without rescore query, the result number is 100; But with rescore query, the result number drops to 93.","performed_via_github_app":null}]