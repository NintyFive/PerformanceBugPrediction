{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/33958","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33958/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33958/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33958/events","html_url":"https://github.com/elastic/elasticsearch/issues/33958","id":362698418,"node_id":"MDU6SXNzdWUzNjI2OTg0MTg=","number":33958,"title":"Zen2 ClusterState storage","user":{"login":"andrershov","id":600624,"node_id":"MDQ6VXNlcjYwMDYyNA==","avatar_url":"https://avatars1.githubusercontent.com/u/600624?v=4","gravatar_id":"","url":"https://api.github.com/users/andrershov","html_url":"https://github.com/andrershov","followers_url":"https://api.github.com/users/andrershov/followers","following_url":"https://api.github.com/users/andrershov/following{/other_user}","gists_url":"https://api.github.com/users/andrershov/gists{/gist_id}","starred_url":"https://api.github.com/users/andrershov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrershov/subscriptions","organizations_url":"https://api.github.com/users/andrershov/orgs","repos_url":"https://api.github.com/users/andrershov/repos","events_url":"https://api.github.com/users/andrershov/events{/privacy}","received_events_url":"https://api.github.com/users/andrershov/received_events","type":"User","site_admin":false},"labels":[{"id":881394071,"node_id":"MDU6TGFiZWw4ODEzOTQwNzE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Cluster%20Coordination","name":":Distributed/Cluster Coordination","color":"0e8a16","default":false,"description":"Cluster formation and cluster state publication, including cluster membership and fault detection."},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-09-21T16:52:28Z","updated_at":"2018-12-12T10:52:54Z","closed_at":"2018-12-12T10:52:54Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In Zen, `ClusterState` is stored through `GatewayMetaState`. There are the following issues with the current approach:\r\n1) Since `GatewayMetaState` implements `ClusterStateApplier`, if there was an `IOException` during storing the state, `ClusterState` change still will be applied to in-memory node state.\r\n2) `GatewayMetaState` stores global metadata and index metadata for each index in separate files. See `MetaDataStateFormatter`. `MetaDataStateFormatter` ensures that global/index metadata is stored atomically. However, if there is a change to the global metadata and index metadata or metadata of several indices, state update could be partial.\r\n\r\nZen2 needs a reliable mechanism to store `ClusterState` without these drawbacks. Two alternative approaches were discussed:\r\n1) Instead of storing metadata in separate files, create translog for `ClusterState` diffs. Once `ClusterState.Diff` is received, persist it to the translog. There could be a background merging process that merges multiple `ClusterState` diffs together.\r\n2) Enhance existing solution, by adding the manifest file that will contain pointers to global state/index metadata files and will ensure atomicity.\r\nWhile the 1st approach is preferable in the long run, for now, we decided to go with the 2nd approach.\r\n\r\nBelow is the list of things that should be done:\r\n\r\n- [x] Migrate `MetaDataStateFormat` to Lucene directory abstraction for easier failure testing. (https://github.com/elastic/elasticsearch/pull/33989)\r\n- [x] Change `MetaDataStateFormat.write` semantics, to clearly distinguish 2 failure cases - write has failed and `loadLatestState` must return old state and write has failed and loadLatestState may return either old or new state. (https://github.com/elastic/elasticsearch/pull/34709)\r\n- [x] Add manifest file support (https://github.com/elastic/elasticsearch/pull/35049)\r\n- [x] Move `ClusterState` fields to be persisted to `MetaData` field (except `version`, which is updated very often and will go directly to Manifest). Namely, `term`, `lastCommitedConfiguration`, `lastAcceptedConfiguration` and `votingTombstones`. (https://github.com/elastic/elasticsearch/pull/35625)\r\n- [x] Implement `PersistedState` interface for Zen2. Note, `term != currentTerm` and `term` goes to `MetaData`, `currentTerm` goes to `Manifest`. (https://github.com/elastic/elasticsearch/pull/35819)\r\n- [x] Properly handle `WriteStateException` thrown by `GatewayMetaState`.\r\n\r\nAlthough points 1-3 are relevant for Zen, it's decided to make changes on Zen2 branch.\r\n\r\nRelates to #32006 ","closed_by":{"login":"andrershov","id":600624,"node_id":"MDQ6VXNlcjYwMDYyNA==","avatar_url":"https://avatars1.githubusercontent.com/u/600624?v=4","gravatar_id":"","url":"https://api.github.com/users/andrershov","html_url":"https://github.com/andrershov","followers_url":"https://api.github.com/users/andrershov/followers","following_url":"https://api.github.com/users/andrershov/following{/other_user}","gists_url":"https://api.github.com/users/andrershov/gists{/gist_id}","starred_url":"https://api.github.com/users/andrershov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrershov/subscriptions","organizations_url":"https://api.github.com/users/andrershov/orgs","repos_url":"https://api.github.com/users/andrershov/repos","events_url":"https://api.github.com/users/andrershov/events{/privacy}","received_events_url":"https://api.github.com/users/andrershov/received_events","type":"User","site_admin":false},"performed_via_github_app":null}