{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/1371","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1371/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1371/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1371/events","html_url":"https://github.com/elastic/elasticsearch/issues/1371","id":1774579,"node_id":"MDU6SXNzdWUxNzc0NTc5","number":1371,"title":"same attribute name with different mapping kind in different types","user":{"login":"fdejaeger","id":53619,"node_id":"MDQ6VXNlcjUzNjE5","avatar_url":"https://avatars0.githubusercontent.com/u/53619?v=4","gravatar_id":"","url":"https://api.github.com/users/fdejaeger","html_url":"https://github.com/fdejaeger","followers_url":"https://api.github.com/users/fdejaeger/followers","following_url":"https://api.github.com/users/fdejaeger/following{/other_user}","gists_url":"https://api.github.com/users/fdejaeger/gists{/gist_id}","starred_url":"https://api.github.com/users/fdejaeger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fdejaeger/subscriptions","organizations_url":"https://api.github.com/users/fdejaeger/orgs","repos_url":"https://api.github.com/users/fdejaeger/repos","events_url":"https://api.github.com/users/fdejaeger/events{/privacy}","received_events_url":"https://api.github.com/users/fdejaeger/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2011-09-29T12:52:05Z","updated_at":"2013-04-05T16:16:00Z","closed_at":"2013-04-05T16:16:00Z","author_association":"NONE","active_lock_reason":null,"body":"I'm creating a schema with those two types in it\n\n``` javascript\n{\n   \"albums\": {\n     \"_source\": { \"enabled\" : true },\n     \"properties\": {\n       \"location\": {\"type\": \"geo_point\"},\n       \"name\": { \"type\": \"string\"}\n     }\n   }\n}\n```\n\n``` javascript\n{\n \"users\": {\n   \"_source\" : { \"enabled\" : false },\n   \"properties\" : {\n     \"name\" : { \"type\": \"string\"},\n     \"location\": {\"type\": \"string\"}\n   }    \n }\n}\n```\n\nIt looks it's a very bad idea to have the same attribute (here 'location') with two different mapping kinds ('string' in the 'users' type, 'geopoint' in the 'albums' type).  It took me a long time to figure what the problem was because it perfectly works until we attempt to search with a `geo_bounding_box` filter.  \nIt should also be note, that no error pops if the type \"users\" stays empty.  Or, more precisely, as long as we don't push a user with a 'location' attribute (being a string).\nIf we swap the order of put mapping for the two different types, there is another behavior: it looks as if the 'albums' mapping did not have a field of kind 'geo_point'.  (the search query complains with `field [location] is not a geo_point field`)\nWhatever the order of the put mapping is, if the do a GET mapping on the whole index, we get what we put (making the problem harder to diagnose)\n\nHere is the complete script that reproduce the problem:\n\n``` sh\n#!/bin/sh\n\ncurl -XDELETE 'http://localhost:9200/foo'\necho \ncurl -XPOST 'http://localhost:9200/foo' -d '{\n  \"settings\" : {\n      \"number_of_shards\" : 1\n  }\n }'\n\n# if we swap the two mapping update, the error changes at the end.\n echo\n curl -XPUT 'http://localhost:9200/foo/albums/_mapping' -d '\n {\n   \"albums\": {\n     \"_source\": { \"enabled\" : true },\n     \"properties\": {\n       \"location\": {\"type\": \"geo_point\"},\n       \"name\": { \"type\": \"string\"}\n     }\n   }\n }\n '\necho\ncurl -XPUT 'http://localhost:9200/foo/users/_mapping' -d '\n{\n \"users\": {\n   \"_source\" : { \"enabled\" : false },\n   \"properties\" : {\n     \"name\" : { \"type\": \"string\"},\n     \"location\": {\"type\": \"string\"}\n   }    \n }\n}\n'\n\necho\n\n# comment this and the error is gone...\ncurl -XPUT 'http://localhost:9200/foo/users/1?refresh=true' -d '{\n \"name\": \"yo\",\n \"location\": \"Paris\"\n}'\n\necho\n\ncurl -XPUT 'http://localhost:9200/foo/albums/2?refresh=true' -d '{\n   \"name\": \"hi\",\n   \"location\": {\"lat\":42.3,\"lon\":2.1}\n}'\n\necho\n# echo sleeping\n# sleep 3\n\necho\n\n# This search query will generate an error:\n# \ncurl -XPOST 'http://localhost:9200/foo/albums/_search?pretty' -d '{\n  \"query\": {\n    \"filtered\": {\n      \"filter\": {\n        \"geo_bounding_box\": {\n          \"location\": {\n            \"bottom_right\": {\n              \"lon\": 5,\n              \"lat\": 30.1791692272601\n            },\n            \"top_left\": {\n              \"lon\": -1.982220703125,\n              \"lat\": 50.2658676477653\n            }\n          }\n        }\n            },\n      \"query\": {\n        \"match_all\": {\n        }\n      }\n    }\n  }\n}\n'\n```\n\nHere are the exceptions being logued\n\n```\n2011-09-29_12:50:02.29449 org.elasticsearch.search.query.QueryPhaseExecutionException: [foo][0]: query[ConstantScore(org.elasticsearch.index.search.geo.GeoBoundingBoxFilter@4136f531)],from[0],size[10]: Query Failed [Failed to execute main query]\n2011-09-29_12:50:02.29449   at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:221)\n2011-09-29_12:50:02.29450   at org.elasticsearch.search.SearchService.executeFetchPhase(SearchService.java:295)\n2011-09-29_12:50:02.29450   at org.elasticsearch.search.action.SearchServiceTransportAction.sendExecuteFetch(SearchServiceTransportAction.java:224)\n2011-09-29_12:50:02.29451   at org.elasticsearch.action.search.type.TransportSearchQueryAndFetchAction$AsyncAction.sendExecuteFirstPhase(TransportSearchQueryAndFetchAction.java:71)\n2011-09-29_12:50:02.29451   at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.performFirstPhase(TransportSearchTypeAction.java:204)\n2011-09-29_12:50:02.29452   at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.performFirstPhase(TransportSearchTypeAction.java:191)\n2011-09-29_12:50:02.29453   at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction$2.run(TransportSearchTypeAction.java:177)\n2011-09-29_12:50:02.29453   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n2011-09-29_12:50:02.29454   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n2011-09-29_12:50:02.29454   at java.lang.Thread.run(Thread.java:636)\n2011-09-29_12:50:02.29454 Caused by: java.lang.StringIndexOutOfBoundsException: String index out of range: -1\n2011-09-29_12:50:02.29455   at java.lang.String.substring(String.java:1949)\n2011-09-29_12:50:02.29455   at org.elasticsearch.index.mapper.geo.GeoPointFieldData$StringTypeLoader.collectTerm(GeoPointFieldData.java:169)\n2011-09-29_12:50:02.29456   at org.elasticsearch.index.field.data.support.FieldDataLoader.load(FieldDataLoader.java:54)\n2011-09-29_12:50:02.29456   at org.elasticsearch.index.mapper.geo.GeoPointFieldData.load(GeoPointFieldData.java:152)\n2011-09-29_12:50:02.29456   at org.elasticsearch.index.mapper.geo.GeoPointFieldDataType.load(GeoPointFieldDataType.java:51)\n2011-09-29_12:50:02.29457   at org.elasticsearch.index.mapper.geo.GeoPointFieldDataType.load(GeoPointFieldDataType.java:34)\n2011-09-29_12:50:02.29458   at org.elasticsearch.index.field.data.FieldData.load(FieldData.java:110)\n2011-09-29_12:50:02.29458   at org.elasticsearch.index.cache.field.data.support.AbstractConcurrentMapFieldDataCache.cache(AbstractConcurrentMapFieldDataCache.java:112)\n2011-09-29_12:50:02.29458   at org.elasticsearch.index.search.geo.GeoBoundingBoxFilter.getDocIdSet(GeoBoundingBoxFilter.java:65)\n2011-09-29_12:50:02.29459   at org.apache.lucene.search.DeletionAwareConstantScoreQuery$DeletionConstantWeight.scorer(DeletionAwareConstantScoreQuery.java:53)\n2011-09-29_12:50:02.29459   at org.apache.lucene.search.FilteredQuery$1.scorer(FilteredQuery.java:116)\n2011-09-29_12:50:02.29460   at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:524)\n2011-09-29_12:50:02.29461   at org.elasticsearch.search.internal.ContextIndexSearcher.search(ContextIndexSearcher.java:198)\n2011-09-29_12:50:02.29462   at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:391)\n2011-09-29_12:50:02.29463   at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:298)\n2011-09-29_12:50:02.29463   at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:286)\n2011-09-29_12:50:02.29463   at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:217)\n2011-09-29_12:50:02.29464   ... 9 more\n```\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}