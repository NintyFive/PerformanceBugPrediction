[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/542187500","html_url":"https://github.com/elastic/elasticsearch/issues/48059#issuecomment-542187500","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48059","id":542187500,"node_id":"MDEyOklzc3VlQ29tbWVudDU0MjE4NzUwMA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-10-15T12:30:31Z","updated_at":"2019-10-15T12:30:31Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search (:Search/Search)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/595781468","html_url":"https://github.com/elastic/elasticsearch/issues/48059#issuecomment-595781468","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48059","id":595781468,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTc4MTQ2OA==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2020-03-06T14:03:58Z","updated_at":"2020-03-06T14:03:58Z","author_association":"CONTRIBUTOR","body":"> Instead of expecting scripts of script queries to return a boolean, could we accept arbitrary search scripts and allow users to pass an expected value as well? \r\n\r\n@jpountz  This is not very clear to me. For example if we have a script `\"source\": \"doc['num1'].value  * 10`, is the idea that `script` query can run all different types of queries on these field values?\r\n\r\nDo you have ideas how a  potential API of this `script` query can look like? ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/595802710","html_url":"https://github.com/elastic/elasticsearch/issues/48059#issuecomment-595802710","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48059","id":595802710,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTgwMjcxMA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2020-03-06T14:52:40Z","updated_at":"2020-03-06T14:52:40Z","author_association":"CONTRIBUTOR","body":"@mayya-sharipova I think there are many options, we'd need to weigh pros and cons, e.g.\r\n - give existing queries (`term`, `range`, ...) a `script` parameter like we have on most aggregations so that they support scripts too\r\n - add more options to the existing `script` query to tell how to check whether the produced value matches\r\n - add ways to define fields as scripts as part of a search request, and allow these one-off scripted fields to be used in any query or aggregation\r\n\r\nThere might be other options I haven't thought of.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/596528379","html_url":"https://github.com/elastic/elasticsearch/issues/48059#issuecomment-596528379","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48059","id":596528379,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NjUyODM3OQ==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2020-03-09T13:37:34Z","updated_at":"2020-03-09T13:41:16Z","author_association":"CONTRIBUTOR","body":"> add ways to define fields as scripts as part of a search request, and allow these one-off scripted fields to be used in any query or aggregation\r\n\r\nI wonder if we can reuse already existing [script_fields](https://www.elastic.co/guide/en/elasticsearch/reference/7.6/search-request-body.html#request-body-search-script-fields) parameter in the query phase as well.\r\n\r\n```js\r\n{\r\n  \"query\": {\r\n    \"range\": {\r\n      \"price_in_usd\": {\r\n        \"lte\": 100\r\n      }\r\n    }\r\n  },\r\n  \"script_fields\": {\r\n    \"price_in_usd\": {\r\n      \"script\": {\r\n        \"source\": \"doc['price'].value * 1.25\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/596537441","html_url":"https://github.com/elastic/elasticsearch/issues/48059#issuecomment-596537441","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48059","id":596537441,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NjUzNzQ0MQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2020-03-09T13:54:29Z","updated_at":"2020-03-09T13:54:29Z","author_association":"CONTRIBUTOR","body":"I like the idea.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/656305300","html_url":"https://github.com/elastic/elasticsearch/issues/48059#issuecomment-656305300","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48059","id":656305300,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NjMwNTMwMA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2020-07-09T19:19:21Z","updated_at":"2020-07-09T19:19:21Z","author_association":"MEMBER","body":"We are going to introduce support for runtime fields. The first implementation of them is going to be scripted runtime fields, which will address exactly the limitations mentioned in this issue, hence I am closing this in favour of #59332 .","performed_via_github_app":null}]