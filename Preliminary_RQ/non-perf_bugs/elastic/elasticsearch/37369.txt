{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/37369","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37369/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37369/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37369/events","html_url":"https://github.com/elastic/elasticsearch/issues/37369","id":398357640,"node_id":"MDU6SXNzdWUzOTgzNTc2NDA=","number":37369,"title":"High level Rest client scroll docs are confusing","user":{"login":"j0r0","id":370737,"node_id":"MDQ6VXNlcjM3MDczNw==","avatar_url":"https://avatars1.githubusercontent.com/u/370737?v=4","gravatar_id":"","url":"https://api.github.com/users/j0r0","html_url":"https://github.com/j0r0","followers_url":"https://api.github.com/users/j0r0/followers","following_url":"https://api.github.com/users/j0r0/following{/other_user}","gists_url":"https://api.github.com/users/j0r0/gists{/gist_id}","starred_url":"https://api.github.com/users/j0r0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/j0r0/subscriptions","organizations_url":"https://api.github.com/users/j0r0/orgs","repos_url":"https://api.github.com/users/j0r0/repos","events_url":"https://api.github.com/users/j0r0/events{/privacy}","received_events_url":"https://api.github.com/users/j0r0/received_events","type":"User","site_admin":false},"labels":[{"id":493198109,"node_id":"MDU6TGFiZWw0OTMxOTgxMDk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Java%20High%20Level%20REST%20Client","name":":Core/Features/Java High Level REST Client","color":"0e8a16","default":false,"description":"Expressive Java Client for Elasticsearch"},{"id":23715,"node_id":"MDU6TGFiZWwyMzcxNQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Edocs","name":">docs","color":"db755e","default":false,"description":"General docs changes"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-01-11T16:21:03Z","updated_at":"2019-01-14T12:05:59Z","closed_at":"2019-01-14T12:05:58Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"<!-- Bug report -->\r\n\r\n**Elasticsearch version** 6.5\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`):\r\n\r\n**Scroll API example is unclear**:\r\n\r\nIt would be nice if the example is indeed *full*. The given example would skip the first batch for SearchHits as the hits are consumed after we make a scroll.\r\n\r\nExample from the website:\r\n```\r\nfinal Scroll scroll = new Scroll(TimeValue.timeValueMinutes(1L));\r\nSearchRequest searchRequest = new SearchRequest(\"posts\");\r\nsearchRequest.scroll(scroll);\r\nSearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder();\r\nsearchSourceBuilder.query(matchQuery(\"title\", \"Elasticsearch\"));\r\nsearchRequest.source(searchSourceBuilder);\r\n\r\nSearchResponse searchResponse = client.search(searchRequest, RequestOptions.DEFAULT); \r\nString scrollId = searchResponse.getScrollId();\r\nSearchHit[] searchHits = searchResponse.getHits().getHits();\r\n\r\nwhile (searchHits != null && searchHits.length > 0) { \r\n    SearchScrollRequest scrollRequest = new SearchScrollRequest(scrollId); \r\n    scrollRequest.scroll(scroll);\r\n    searchResponse = client.scroll(scrollRequest, RequestOptions.DEFAULT);\r\n    scrollId = searchResponse.getScrollId();\r\n    searchHits = searchResponse.getHits().getHits();\r\n    //CONSUME RESULTS HERE - THIS IS WRONG IMO\r\n}\r\n```\r\n\r\nProposal:\r\n\r\n```\r\nfinal Scroll scroll = new Scroll(TimeValue.timeValueMinutes(1L));\r\nSearchRequest searchRequest = new SearchRequest(\"posts\");\r\nsearchRequest.scroll(scroll);\r\nSearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder();\r\nsearchSourceBuilder.query(matchQuery(\"title\", \"Elasticsearch\"));\r\nsearchRequest.source(searchSourceBuilder);\r\n\r\nSearchResponse searchResponse = client.search(searchRequest, RequestOptions.DEFAULT); \r\nString scrollId = searchResponse.getScrollId();\r\nSearchHit[] searchHits = searchResponse.getHits().getHits();\r\n\r\nwhile (searchHits != null && searchHits.length > 0) { \r\n    //CONSUME RESULTS HERE\r\n    SearchScrollRequest scrollRequest = new SearchScrollRequest(scrollId); \r\n    scrollRequest.scroll(scroll);\r\n    searchResponse = client.scroll(scrollRequest, RequestOptions.DEFAULT);\r\n    scrollId = searchResponse.getScrollId();\r\n    searchHits = searchResponse.getHits().getHits();\r\n    \r\n}\r\n```\r\n\r\n\r\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}