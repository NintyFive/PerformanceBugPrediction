{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/20237","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20237/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20237/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20237/events","html_url":"https://github.com/elastic/elasticsearch/issues/20237","id":174104112,"node_id":"MDU6SXNzdWUxNzQxMDQxMTI=","number":20237,"title":"Add support for \"missing\" parameter to the terms aggregation \"order\"","user":{"login":"golubev","id":951364,"node_id":"MDQ6VXNlcjk1MTM2NA==","avatar_url":"https://avatars0.githubusercontent.com/u/951364?v=4","gravatar_id":"","url":"https://api.github.com/users/golubev","html_url":"https://github.com/golubev","followers_url":"https://api.github.com/users/golubev/followers","following_url":"https://api.github.com/users/golubev/following{/other_user}","gists_url":"https://api.github.com/users/golubev/gists{/gist_id}","starred_url":"https://api.github.com/users/golubev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/golubev/subscriptions","organizations_url":"https://api.github.com/users/golubev/orgs","repos_url":"https://api.github.com/users/golubev/repos","events_url":"https://api.github.com/users/golubev/events{/privacy}","received_events_url":"https://api.github.com/users/golubev/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-08-30T19:28:34Z","updated_at":"2016-10-10T09:28:48Z","closed_at":"2016-10-07T10:00:20Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"It would be nice to be able to use `missing` parameter when ordering a terms aggregation - just [like the  `missing` parameter in the `sort`](https://www.elastic.co/guide/en/elasticsearch/reference/2.3/search-request-sort.html#_missing_values).\n\nMy use case: I want to order my buckets by the `min_price` for each bucket\n\n``` json\n{\n    \"query\": {\n        \"bool\": {\n            \"filter\": [\n                \"<some filters>\"\n            ]\n        }\n    },\n    \"size\": 0,\n    \"aggregations\": {\n        \"announcements\": {\n            \"terms\": {\n                \"field\": \"ann_id\",\n                \"order\": [\n                    {\n                        \"min_price\": {\n                            \"order\": \"asc\",\n                            \"missing\": \"_last\"\n                        }\n                    }\n                ],\n                \"size\": 30\n            },\n            \"aggregations\": {\n                \"min_price\": {\"min\": {\"field\": \"price\"}},\n                \"<some other aggregations>\"\n            }\n        }\n    }\n}\n```\n\nBut when I am trying to do that, I get:\n\n```\nUnexpected token START_OBJECT for [order] in [announcements].\n```\n\nSome announcements (buckets aggregated by `ann_id`) can have no prices in the bucket's documents, so `min_price` aggregation when calculated will be equal to `null`.\n\nFurthermore, when I choose in the example above to order buckets this way:\n\n``` json\n    \"order\": [\n        {\"min_price\": \"asc\"}\n    ],\n```\n\nbuckets having `null` `min_price` are last.\nBut when I change it to be:\n\n``` json\n    \"order\": [\n        {\"min_price\": \"desc\"}\n    ],\n```\n\nbuckets having `null` `min_price` are first. And that is really strange to me.\n\nIt would be also interesting that when I am using `max_price` (`max` subaggregation) the behavior with nulls changes vice versa.\n","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}