[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/235628748","html_url":"https://github.com/elastic/elasticsearch/issues/19565#issuecomment-235628748","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19565","id":235628748,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNTYyODc0OA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-07-27T15:47:40Z","updated_at":"2016-07-27T15:47:40Z","author_association":"CONTRIBUTOR","body":"> This does mean that there is a workaround to the feature, but it's much more verbose than \"max_doc_count\": 0 and inherently slower. \n\nSure, but how frequent is this use case?  It sounds like a one off check that you might run once in a while.  I don't think we should add extra options for infrequent use cases, especially when the same result can already be achieved.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/235657755","html_url":"https://github.com/elastic/elasticsearch/issues/19565#issuecomment-235657755","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19565","id":235657755,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNTY1Nzc1NQ==","user":{"login":"pickypg","id":1501235,"node_id":"MDQ6VXNlcjE1MDEyMzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1501235?v=4","gravatar_id":"","url":"https://api.github.com/users/pickypg","html_url":"https://github.com/pickypg","followers_url":"https://api.github.com/users/pickypg/followers","following_url":"https://api.github.com/users/pickypg/following{/other_user}","gists_url":"https://api.github.com/users/pickypg/gists{/gist_id}","starred_url":"https://api.github.com/users/pickypg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pickypg/subscriptions","organizations_url":"https://api.github.com/users/pickypg/orgs","repos_url":"https://api.github.com/users/pickypg/repos","events_url":"https://api.github.com/users/pickypg/events{/privacy}","received_events_url":"https://api.github.com/users/pickypg/received_events","type":"User","site_admin":false},"created_at":"2016-07-27T17:25:15Z","updated_at":"2016-07-27T17:25:15Z","author_association":"MEMBER","body":"> I don't think we should add extra options for infrequent use cases, especially when the same result can already be achieved.\n\nIt's a fair point, but I always find it weird when we offer a \"min\" without a \"max\", or vice versa. I suspect there are other use cases beyond verification, but I'm okay with just leaving this with the workaround above for now. If anyone drives by this with a different use case, then please feel free to add it here.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/288132470","html_url":"https://github.com/elastic/elasticsearch/issues/19565#issuecomment-288132470","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19565","id":288132470,"node_id":"MDEyOklzc3VlQ29tbWVudDI4ODEzMjQ3MA==","user":{"login":"webmstr","id":4305995,"node_id":"MDQ6VXNlcjQzMDU5OTU=","avatar_url":"https://avatars1.githubusercontent.com/u/4305995?v=4","gravatar_id":"","url":"https://api.github.com/users/webmstr","html_url":"https://github.com/webmstr","followers_url":"https://api.github.com/users/webmstr/followers","following_url":"https://api.github.com/users/webmstr/following{/other_user}","gists_url":"https://api.github.com/users/webmstr/gists{/gist_id}","starred_url":"https://api.github.com/users/webmstr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/webmstr/subscriptions","organizations_url":"https://api.github.com/users/webmstr/orgs","repos_url":"https://api.github.com/users/webmstr/repos","events_url":"https://api.github.com/users/webmstr/events{/privacy}","received_events_url":"https://api.github.com/users/webmstr/received_events","type":"User","site_admin":false},"created_at":"2017-03-21T16:18:33Z","updated_at":"2017-03-21T16:18:33Z","author_association":"NONE","body":"Here's a use case: I have documents that should appear in pairs.  I want to find when they *don't* appear in pairs.  So, to be able to use \"max_doc_count\" of 1 would give me just what I need with no additional processing required.\r\n\r\nScripting it might work in your sandbox, and might even work securely in ES5, but not everyone is there and it shouldn't be an excuse to ignore features (especially ones comparable to existing features).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/456011319","html_url":"https://github.com/elastic/elasticsearch/issues/19565#issuecomment-456011319","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19565","id":456011319,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NjAxMTMxOQ==","user":{"login":"cawoodm","id":498834,"node_id":"MDQ6VXNlcjQ5ODgzNA==","avatar_url":"https://avatars2.githubusercontent.com/u/498834?v=4","gravatar_id":"","url":"https://api.github.com/users/cawoodm","html_url":"https://github.com/cawoodm","followers_url":"https://api.github.com/users/cawoodm/followers","following_url":"https://api.github.com/users/cawoodm/following{/other_user}","gists_url":"https://api.github.com/users/cawoodm/gists{/gist_id}","starred_url":"https://api.github.com/users/cawoodm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cawoodm/subscriptions","organizations_url":"https://api.github.com/users/cawoodm/orgs","repos_url":"https://api.github.com/users/cawoodm/repos","events_url":"https://api.github.com/users/cawoodm/events{/privacy}","received_events_url":"https://api.github.com/users/cawoodm/received_events","type":"User","site_admin":false},"created_at":"2019-01-21T09:49:04Z","updated_at":"2019-01-21T09:49:04Z","author_association":"CONTRIBUTOR","body":"Another example: We'd like to find all 1-hit sessions on our web server so we'd like to have a sessionId bucket and filter where count(*) = 1. In SQL this would be something like:\r\n\r\n    SELECT COUNT(*) FROM docs GROUP BY sessionId HAVING COUNT(*) = 1","performed_via_github_app":null}]