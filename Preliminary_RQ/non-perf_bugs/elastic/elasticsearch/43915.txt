{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/43915","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43915/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43915/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43915/events","html_url":"https://github.com/elastic/elasticsearch/issues/43915","id":463723622,"node_id":"MDU6SXNzdWU0NjM3MjM2MjI=","number":43915,"title":"tranlog with async type has the risk of data loss when processor dead suddenly","user":{"login":"weizijun","id":5070449,"node_id":"MDQ6VXNlcjUwNzA0NDk=","avatar_url":"https://avatars0.githubusercontent.com/u/5070449?v=4","gravatar_id":"","url":"https://api.github.com/users/weizijun","html_url":"https://github.com/weizijun","followers_url":"https://api.github.com/users/weizijun/followers","following_url":"https://api.github.com/users/weizijun/following{/other_user}","gists_url":"https://api.github.com/users/weizijun/gists{/gist_id}","starred_url":"https://api.github.com/users/weizijun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weizijun/subscriptions","organizations_url":"https://api.github.com/users/weizijun/orgs","repos_url":"https://api.github.com/users/weizijun/repos","events_url":"https://api.github.com/users/weizijun/events{/privacy}","received_events_url":"https://api.github.com/users/weizijun/received_events","type":"User","site_admin":false},"labels":[{"id":836542781,"node_id":"MDU6TGFiZWw4MzY1NDI3ODE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Engine","name":":Distributed/Engine","color":"0e8a16","default":false,"description":"Anything around managing Lucene and the Translog in an open shard."}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2019-07-03T12:26:54Z","updated_at":"2019-07-08T02:28:22Z","closed_at":"2019-07-08T02:28:22Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Feature request -->\r\n\r\n**Describe the feature**:\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 6.6.1\r\n\r\n**Plugins installed**: [analysis-icu,analysis-ik]\r\n\r\n**JVM version** (`java -version`): 11.0.2+9-LTS\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): 3.10.0-514.16.1.es01.x86_64 #1 SMP Wed Oct 17 23:14:35 CST 2018 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nwhen es datanode process dead suddenly. It may cause data loss.\r\nI found the loss reason.\r\nindices's settings is  index.translog.durability=async.\r\nwhen es datanode process dead suddenly. translog.ckp 's globalCheckpoint maybe behand translog tlog's real data.\r\nwhen recovery, TranslogSnapshot.next() will return null when readOperations > globalCheckpoint.\r\nThis will result in loss of behind translog data even if the data is complete.\r\nWhen Server down, file meybe not fsync or refresh to dsik, this maybe cause dataloss.\r\nBut Server is ok, process exception coredump, translog is complete. It can recovery full data.\r\n\r\nWill repair translog's ckp file before loading globalCheckpoint? Or recovery the whole complete translog?\r\n\r\n\r\n**Steps to reproduce**:\r\n\r\nPlease include a *minimal* but *complete* recreation of the problem, including\r\n(e.g.) index creation, mappings, settings, query etc.  The easier you make for\r\nus to reproduce it, the more likely that somebody will take the time to look at it.\r\n\r\n 1. write data.\r\n 2. kill -9 processor\r\n 3. check translog.ckp and translog-x.tlog's last seqNo.\r\n\r\n**Provide logs (if relevant)**:\r\n\r\n```\r\ntranslog.ckp\r\n00000000: 3fd7 6c17 0363 6b70 0000 0003 0000 0000  ?.l..ckp........\r\n00000010: 037d a3df 0000 60c8 0000 0000 0000 0003  .}....`.........\r\n00000020: 0000 0000 0000 6aac 0000 0000 0000 cb73  ......j........s\r\n00000030: 0000 0000 0000 cb73 0000 0000 0000 0001  .......s........\r\n00000040: ffff ffff ffff fffe c028 93e8 0000 0000  .........(......\r\n00000050: 0000 0000 e543 a1d4 0a                   .....C...\r\n\r\ntranslog-3.tlog\r\n......\r\n038575d0: 3022 2c22 7072 654f 6666 7365 7422 3a22  0\",\"preOffset\":\"\r\n038575e0: 3330 3335 3030 3131 3332 3722 7d01 2063  30350011327\"}. c\r\n038575f0: 3061 3831 3031 3935 6431 3538 6362 3739  0a810195d158cb79\r\n03857600: 6434 3934 3338 3631 3033 6330 3430 3300  d494386103c0403.\r\n03857610: 0000 0000 0000 0001 00ff ffff ffff ffff  ................\r\n03857620: ff00 0000 0000 00cb f000 0000 0000 0000  ................\r\n03857630: 0186 069c 0c0a                           ......\r\n```","closed_by":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"performed_via_github_app":null}