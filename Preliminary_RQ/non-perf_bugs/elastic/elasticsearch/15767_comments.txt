[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/169285094","html_url":"https://github.com/elastic/elasticsearch/issues/15767#issuecomment-169285094","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15767","id":169285094,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTI4NTA5NA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-01-06T10:18:35Z","updated_at":"2016-01-06T10:18:35Z","author_association":"CONTRIBUTOR","body":"Sorry but this is exactly why we have doc values so we won't add a cache for the _source document.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/169285372","html_url":"https://github.com/elastic/elasticsearch/issues/15767#issuecomment-169285372","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15767","id":169285372,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTI4NTM3Mg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-01-06T10:19:59Z","updated_at":"2016-01-06T10:19:59Z","author_association":"CONTRIBUTOR","body":"Maybe you could model your documents in such a way that you don't need the source anymore?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/169368170","html_url":"https://github.com/elastic/elasticsearch/issues/15767#issuecomment-169368170","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15767","id":169368170,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTM2ODE3MA==","user":{"login":"sumitjainn","id":657557,"node_id":"MDQ6VXNlcjY1NzU1Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/657557?v=4","gravatar_id":"","url":"https://api.github.com/users/sumitjainn","html_url":"https://github.com/sumitjainn","followers_url":"https://api.github.com/users/sumitjainn/followers","following_url":"https://api.github.com/users/sumitjainn/following{/other_user}","gists_url":"https://api.github.com/users/sumitjainn/gists{/gist_id}","starred_url":"https://api.github.com/users/sumitjainn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sumitjainn/subscriptions","organizations_url":"https://api.github.com/users/sumitjainn/orgs","repos_url":"https://api.github.com/users/sumitjainn/repos","events_url":"https://api.github.com/users/sumitjainn/events{/privacy}","received_events_url":"https://api.github.com/users/sumitjainn/received_events","type":"User","site_admin":false},"created_at":"2016-01-06T15:59:47Z","updated_at":"2016-01-06T17:15:28Z","author_association":"NONE","body":"Here's my use case: I have hotel docs which have multiple rooms and each room has day wise price and inventory.\nhotel > room > priceInventory\n\nI have filters on all three levels. Say hotels with 5 star rating, rooms with \"free wifi\" amenity and having inventory of 2 for dates d1-d2 and between price p1-p2. \n\nNow for sorting, I want to calculate minimum price from all matched nested docs. But this isn't possible with regular sort, as I cannot specify filters on multiple nested levels inside it. So I have to utilize script sorting. But inside a script accessing nested level fields is only possible with the _source field.\n\nDoc values cannot be used here. Caching _source would improve sort efficiency drastically, and will even improve efficiency of other operations where _source needs to be loaded. Indeed, it would be very useful to have this feature for many elasticsearch use cases.\n\nMapping:\n\n``` json\n        \"hotel\": {\n            \"properties\": {\n               \"name\": {\n                  \"type\": \"string\",\n               },\n               \"id\": {\n                  \"type\": \"string\",\n               },\n               \"roomTypes\": {\n                  \"type\": \"nested\",\n                  \"properties\": {\n                     \"roomCode\": {\n                        \"type\": \"string\",\n                        \"index\": \"not_analyzed\",\n                     },\n                     \"roomType\": {\n                        \"type\": \"string\",\n                        \"index\": \"not_analyzed\",\n                     },\n                     \"amenities\": {\n                          \"type\": \"string\",\n                          \"index\": \"not_analyzed\",\n                     },\n                     \"invPrice\": {\n                          \"type\": \"nested\",\n                          \"properties\": {\n                             \"date\": {\n                                \"type\": \"date\",\n                                \"format\": \"dateOptionalTime\",\n                             },\n                             \"inventory\": {\n                                \"type\": \"integer\",\n                             },\n                             \"price\": {\n                                \"type\": \"double\",\n                             }\n                          }\n                       }\n                  }\n               },\n               \"starRating\": {\n                  \"type\": \"short\",\n               }\n            }\n        }\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/169386873","html_url":"https://github.com/elastic/elasticsearch/issues/15767#issuecomment-169386873","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15767","id":169386873,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTM4Njg3Mw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-01-06T16:55:38Z","updated_at":"2016-01-06T16:55:38Z","author_association":"CONTRIBUTOR","body":"@sumitjainn You could denormalize your data in order to have a single level of nesting:\n\n```\n        \"hotel\": {\n            \"properties\": {\n               \"name\": {\n                  \"type\": \"string\",\n               },\n               \"id\": {\n                  \"type\": \"string\",\n               },\n               \"roomPrices\": {\n                  \"type\": \"nested\",\n                  \"properties\": {\n                     \"roomCode\": {\n                        \"type\": \"string\",\n                        \"index\": \"not_analyzed\",\n                     },\n                     \"roomType\": {\n                        \"type\": \"string\",\n                        \"index\": \"not_analyzed\",\n                     },\n                     \"amenities\": {\n                          \"type\": \"string\",\n                          \"index\": \"not_analyzed\",\n                     },\n                     \"date\": {\n                        \"type\": \"date\",\n                        \"format\": \"dateOptionalTime\",\n                     },\n                     \"inventory\": {\n                        \"type\": \"integer\",\n                     },\n                     \"price\": {\n                        \"type\": \"double\",\n                     }\n                  }\n               },\n               \"starRating\": {\n                  \"type\": \"short\",\n               }\n            }\n        }\n```\n\nThis will force to duplicate `roomType`, `amenities` , etc. for every price. But it will also make your queries much faster sinch they will have to perform a single join instead of two and you will be able to use nested sorting: https://www.elastic.co/guide/en/elasticsearch/guide/current/nested-sorting.html\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/169392949","html_url":"https://github.com/elastic/elasticsearch/issues/15767#issuecomment-169392949","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15767","id":169392949,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTM5Mjk0OQ==","user":{"login":"sumitjainn","id":657557,"node_id":"MDQ6VXNlcjY1NzU1Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/657557?v=4","gravatar_id":"","url":"https://api.github.com/users/sumitjainn","html_url":"https://github.com/sumitjainn","followers_url":"https://api.github.com/users/sumitjainn/followers","following_url":"https://api.github.com/users/sumitjainn/following{/other_user}","gists_url":"https://api.github.com/users/sumitjainn/gists{/gist_id}","starred_url":"https://api.github.com/users/sumitjainn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sumitjainn/subscriptions","organizations_url":"https://api.github.com/users/sumitjainn/orgs","repos_url":"https://api.github.com/users/sumitjainn/repos","events_url":"https://api.github.com/users/sumitjainn/events{/privacy}","received_events_url":"https://api.github.com/users/sumitjainn/received_events","type":"User","site_admin":false},"created_at":"2016-01-06T17:14:32Z","updated_at":"2016-01-06T17:14:32Z","author_association":"NONE","body":"@jpountz It was one of the approaches we tried, but sadly it doesn't work. The reason is the loss of association between room and invPrice. So the query to match only hotels for rooms which have inventory on 2 dates d1 and d2 (not across different rooms), is not possible. This is direct result of the fact that the grouping facilitated though nesting of all invPrice of one room under it, has been given away, while flattening.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/169400520","html_url":"https://github.com/elastic/elasticsearch/issues/15767#issuecomment-169400520","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15767","id":169400520,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQwMDUyMA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-01-06T17:43:17Z","updated_at":"2016-01-06T17:43:17Z","author_association":"CONTRIBUTOR","body":"Ok I see. I don't have a good alternative then :(\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/169404585","html_url":"https://github.com/elastic/elasticsearch/issues/15767#issuecomment-169404585","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15767","id":169404585,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQwNDU4NQ==","user":{"login":"sumitjainn","id":657557,"node_id":"MDQ6VXNlcjY1NzU1Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/657557?v=4","gravatar_id":"","url":"https://api.github.com/users/sumitjainn","html_url":"https://github.com/sumitjainn","followers_url":"https://api.github.com/users/sumitjainn/followers","following_url":"https://api.github.com/users/sumitjainn/following{/other_user}","gists_url":"https://api.github.com/users/sumitjainn/gists{/gist_id}","starred_url":"https://api.github.com/users/sumitjainn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sumitjainn/subscriptions","organizations_url":"https://api.github.com/users/sumitjainn/orgs","repos_url":"https://api.github.com/users/sumitjainn/repos","events_url":"https://api.github.com/users/sumitjainn/events{/privacy}","received_events_url":"https://api.github.com/users/sumitjainn/received_events","type":"User","site_admin":false},"created_at":"2016-01-06T17:58:25Z","updated_at":"2016-01-06T17:58:25Z","author_association":"NONE","body":"Is it not a valid feature request then? Wouldn't it benefit to have a source cache for many use cases apart from this? Can it atleast be made open for discussion?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/169408891","html_url":"https://github.com/elastic/elasticsearch/issues/15767#issuecomment-169408891","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15767","id":169408891,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQwODg5MQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-01-06T18:17:26Z","updated_at":"2016-01-06T18:17:26Z","author_association":"CONTRIBUTOR","body":"@sumitjainn I'm open for discussion as of how to solve this kind of problem, however I am -1 on the _source cache idea. Maybe you can open a new issue that explains the problem that you are trying to solve and links to the discussion that happened here?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/169411966","html_url":"https://github.com/elastic/elasticsearch/issues/15767#issuecomment-169411966","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15767","id":169411966,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQxMTk2Ng==","user":{"login":"sumitjainn","id":657557,"node_id":"MDQ6VXNlcjY1NzU1Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/657557?v=4","gravatar_id":"","url":"https://api.github.com/users/sumitjainn","html_url":"https://github.com/sumitjainn","followers_url":"https://api.github.com/users/sumitjainn/followers","following_url":"https://api.github.com/users/sumitjainn/following{/other_user}","gists_url":"https://api.github.com/users/sumitjainn/gists{/gist_id}","starred_url":"https://api.github.com/users/sumitjainn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sumitjainn/subscriptions","organizations_url":"https://api.github.com/users/sumitjainn/orgs","repos_url":"https://api.github.com/users/sumitjainn/repos","events_url":"https://api.github.com/users/sumitjainn/events{/privacy}","received_events_url":"https://api.github.com/users/sumitjainn/received_events","type":"User","site_admin":false},"created_at":"2016-01-06T18:30:02Z","updated_at":"2016-01-06T18:32:09Z","author_association":"NONE","body":"@jpountz I have created the issue, but could you please elaborate on your negative vote on caching? Does having doc values preclude any need or possibility of a _source cache? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/169463525","html_url":"https://github.com/elastic/elasticsearch/issues/15767#issuecomment-169463525","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15767","id":169463525,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQ2MzUyNQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-01-06T21:16:26Z","updated_at":"2016-01-06T21:16:26Z","author_association":"CONTRIBUTOR","body":"Elasticsearch has two ways to read field values:\n- doc values to read a couple field values from many documents, which is typically useful for sorting/aggregations\n- stored fields/_source to read as many field values as you want from a couple of documents, which is typically useful to get summaries for the top matches\n\nSo it doesn't make sense to try to optimize stored fields for the use-case that doc values have been designed for. Additionally I don't see how a cache would help for this problem.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/215331891","html_url":"https://github.com/elastic/elasticsearch/issues/15767#issuecomment-215331891","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15767","id":215331891,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNTMzMTg5MQ==","user":{"login":"sumitjainn","id":657557,"node_id":"MDQ6VXNlcjY1NzU1Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/657557?v=4","gravatar_id":"","url":"https://api.github.com/users/sumitjainn","html_url":"https://github.com/sumitjainn","followers_url":"https://api.github.com/users/sumitjainn/followers","following_url":"https://api.github.com/users/sumitjainn/following{/other_user}","gists_url":"https://api.github.com/users/sumitjainn/gists{/gist_id}","starred_url":"https://api.github.com/users/sumitjainn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sumitjainn/subscriptions","organizations_url":"https://api.github.com/users/sumitjainn/orgs","repos_url":"https://api.github.com/users/sumitjainn/repos","events_url":"https://api.github.com/users/sumitjainn/events{/privacy}","received_events_url":"https://api.github.com/users/sumitjainn/received_events","type":"User","site_admin":false},"created_at":"2016-04-28T07:15:17Z","updated_at":"2016-04-28T07:15:17Z","author_association":"NONE","body":"@jpountz I have stumbled upon another issue due to non-caching of _source:\n\nI have top level hotel doc with large number of nested docs (around 30k) with the total doc size ~ 35 MB. Now fetching any field in the response (nested or otherwise), gives me a response time of 2-6 secs with only ~20 matching docs. Response time is always > 1 sec even with <5 matching docs.\n\nNow when I used multiple stored fields instead of _source, my response times dropped to ~ 50ms. I have tested this on machine with 16 GB free memory to be used by OS for File System cache. \n\nSo, isn't this too much of a performance penalty to bear? Also, the es documentation is inaccurate, as it heavily recommends _source over stored fields, while not spelling out its limitations, found thus. \n\nAs to your last point, while we have changed our schema since then,  I don't think doc values solves the use case I had mentioned. Also I don't see why caching _source wouldn't help, wouldn't reading from memory be faster than from disk?\n","performed_via_github_app":null}]