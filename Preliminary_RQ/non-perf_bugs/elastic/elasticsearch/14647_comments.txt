[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/155489886","html_url":"https://github.com/elastic/elasticsearch/issues/14647#issuecomment-155489886","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","id":155489886,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NTQ4OTg4Ng==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2015-11-10T17:10:06Z","updated_at":"2015-11-10T17:10:06Z","author_association":"MEMBER","body":"Should we try and expand a bit more on what can be a condition and what syntax should be supported there? For instance can there be field values on the right side or only constants?\n\nI would probably change naming, if it's an if why call it compare? and I think true_processors and false_processors might get confusing, why not use simply if and else and maybe call the processor \"condition\" or something along those lines? I think we should have @clintongormley have a look at the api and validate it also :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/155571593","html_url":"https://github.com/elastic/elasticsearch/issues/14647#issuecomment-155571593","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","id":155571593,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NTU3MTU5Mw==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2015-11-10T21:24:15Z","updated_at":"2015-11-10T21:24:15Z","author_association":"CONTRIBUTOR","body":"> Should we try and expand a bit more on what can be a condition and what syntax should be supported there? For instance can there be field values on the right side or only constants?\n\nI was thinking of enabling the same mustache templating that is introduced [here](https://github.com/elastic/elasticsearch/issues/14644).\n\nan example templated field value: `{{ctx._source.department}}`\n\nThis would enable fields to be compared to other fields.\n\n```\n\"conditions\" [\n  \"first_name\": {\"neq\": \"{{ctx._source.last_name}}\"}\n]\n```\n\n> I would probably change naming, if it's an if why call it compare? and I think true_processors and false_processors might get confusing, why not use simply if and else and maybe call the processor \"condition\" or something along those lines?\n\ndo you propose something more similar to this syntax?\n\n```\n{\n  \"condition\": {\n    \"conditions\": [\n      \"field.hello\" : { \"neq\":  \"world\" },\n      \"foo\" : { \"gt\": 10 }\n    ],\n    \"if\": [...],\n    \"else\": [...]\n  }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/157567318","html_url":"https://github.com/elastic/elasticsearch/issues/14647#issuecomment-157567318","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","id":157567318,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NzU2NzMxOA==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2015-11-18T01:25:06Z","updated_at":"2015-11-18T01:25:06Z","author_association":"CONTRIBUTOR","body":"OK, @javanna @martijnvg, let me know what you think!\n\nhere is an in-progress branch of what I've come up with so far: [link](https://github.com/talevy/elasticsearch/tree/if_conditions_else_processor/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/conditional)\n\na bit about what has been done:\n\nConditionals would be described as a separate processor within the pipeline. Branches of execution would be delegated within the `ConditionalProcessor`.\n\nhere is an example ConditionalProcessor config definition:\n\n```\n{\n  \"field_conditions\": {\n    \"message\" : { \"neq\": \"hello world\" },\n    \"age\": { \"gte\": 13, \"lt\": 18 }\n  },\n  \"match\": [\n    ... processor definitions to be executed in order (if all field_conditions match) ...\n  ],\n  \"otherwise\": [\n    ... processor definitions to be executed in order (if any field condition in field_conditions fails to match) ...\n  ]\n}\n```\n\nTo not create a dependency on the metadata/mustache-templating work, this Processor will start off only supporting hardcoded values provided within the config.\n\nOne _major_ limitation of what has been done so far is that there is no \"OR\" logic anywhere... I will keep exploring to see how I could get that in. Also, all comparisons except for `neq` and `eq` require that the field values being compared are numbers.\n\n*\\* all naming is still up in the air, just trying out other names.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/157847950","html_url":"https://github.com/elastic/elasticsearch/issues/14647#issuecomment-157847950","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","id":157847950,"node_id":"MDEyOklzc3VlQ29tbWVudDE1Nzg0Nzk1MA==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2015-11-18T20:12:29Z","updated_at":"2015-11-18T20:12:29Z","author_association":"MEMBER","body":"> To not create a dependency on the metadata/mustache-templating work, this Processor will start off only supporting hardcoded values provided within the config.\n\nI think this is ok for the first version of the `condition` processor, At some point we also need to evaluate where else tempting is required and then we can get back to this.\n\n> One major limitation of what has been done so far is that there is no \"OR\" logic anywhere... \n\nMaybe we should then add an extra level to the `field_comparison`? Like this:\n\n``` json\n...\n\"field_conditions\": {\n   \"and\" : {\n       \"message\" : { \"neq\": \"hello world\" },\n       \"age\": { \"gte\": 13, \"lt\": 18 }   \n    },\n    \"or\" :  {\n      ...\n   }\n  }\n...\n```\n\nIf any comparisons are defined in the `and` element, then all must match and if there are comparisons defined in the `or` element then at least one must match.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/157906267","html_url":"https://github.com/elastic/elasticsearch/issues/14647#issuecomment-157906267","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","id":157906267,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NzkwNjI2Nw==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2015-11-19T00:16:18Z","updated_at":"2015-11-19T00:19:43Z","author_association":"CONTRIBUTOR","body":"I realize there is a huge limitation with this format...\n\na check to see if a field is either all lowercase or all uppercase for example...\n\nif we place the boolean operator outside the field map, this would not be possible since the field name is a key.\n\n``` json\n\"field_conditions\": {\n  \"or\": {\n    \"message\" : { \"eq\": \"hello world\" },\n    \"message\" : { \"eq\": \"HELLO WORLD\" }\n  }\n}\n```\n\nif we placed the boolean operator within each field, it would still not work since `eq` would appear as a key twice.\n\n``` json\n\"field_conditions\": {\n  \"message\" : { \"or\" : { \"eq\": \"hello world\", \"eq\": \"HELLO WORLD\"} }\n}\n```\n\nHow about this?\n\n``` json\n\"field_conditions\": {\n  (\"and\"|\"or\") : [\n    { \"message\" : { \"neq\" : \"hello world\" } },\n    { \"message\" : { \"neq\" : \"HELLO WORLD\" } },\n    { \"age\" : { \"gte\" : 13 } },\n    { \"age\" : { \"lt\" : 18 } }\n  ]\n}\n```\n\nthe biggest beef I have with the suggestion above is that is can look rather \nverbose when lots of relational comparisons are done against the same field...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/157909135","html_url":"https://github.com/elastic/elasticsearch/issues/14647#issuecomment-157909135","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","id":157909135,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NzkwOTEzNQ==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2015-11-19T00:33:54Z","updated_at":"2015-11-19T00:34:48Z","author_association":"CONTRIBUTOR","body":"since it is starting to grow in complexity, I thought it would be a good thought experiment to see what \na version of conditionals with nesting would look like:\n\n``` json\n\"field_conditions\": {\n  \"or\" : [\n      {\n        \"and\" : [\n          { \"teenager\" : { \"eq\" : true } },\n          { \"age\" : { \"gte\" : 13 } },\n          { \"age\" : { \"lte\" : 19 } }\n        ]\n      },\n      {\n        \"and\" : [\n          { \"teenager\" : { \"eq\" : false } },\n          { \"not\" : { \"and\" : [\n                          { \"age\" : {\"gte\" : 13} },\n                          { \"age\" : {\"lte\" : 19} }\n                    ] }\n          }\n        ]\n      }\n  ]  \n}\n```\n\nhmmm... looks like too much for me.\n\nwhat do you think?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/157960978","html_url":"https://github.com/elastic/elasticsearch/issues/14647#issuecomment-157960978","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","id":157960978,"node_id":"MDEyOklzc3VlQ29tbWVudDE1Nzk2MDk3OA==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2015-11-19T06:05:07Z","updated_at":"2015-11-19T06:05:07Z","author_association":"MEMBER","body":"This looks complex :) My idea is that the conditions don't support nesting. (all conditions need to be on the same level, so there is a list of 'and' conditions and a list of 'or' conditions) Nesting could be achieved via adding another `condition` processor in the `match` or `otherwise` part of the condition.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/157994069","html_url":"https://github.com/elastic/elasticsearch/issues/14647#issuecomment-157994069","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","id":157994069,"node_id":"MDEyOklzc3VlQ29tbWVudDE1Nzk5NDA2OQ==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2015-11-19T09:01:01Z","updated_at":"2015-11-19T09:01:01Z","author_association":"CONTRIBUTOR","body":"so, I think I have implemented most of what you meant. I'll go ahead and make a PR for it now so that it is easier to view the branch\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/158418575","html_url":"https://github.com/elastic/elasticsearch/issues/14647#issuecomment-158418575","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","id":158418575,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODQxODU3NQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-11-20T14:40:33Z","updated_at":"2015-11-20T14:40:33Z","author_association":"CONTRIBUTOR","body":"How about this:\n\n```\n{\n  \"if\": {\n    \"all\": [\n      {\"message\" : { \"==\": \"Hello\"}},\n      { \"txt\": { \"in\": [\"one\", \"ONE\"]}},\n      { \"date\": { \"lt\": \"2015\", \"gt\": \"2010\"}},\n      { \"any\": [\n        {\"status\": { \"==\": \"featured\"}},\n        { \"adult\": { \"!=\": false}}\n      ]}\n    ]\n  },\n  \"then\": [...],\n  \"else\": [...]\n}\n```\n\nSo the `if` processor takes exactly one of `all`| `any`|`none`, plus `then` and optionally `else`\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/158419426","html_url":"https://github.com/elastic/elasticsearch/issues/14647#issuecomment-158419426","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","id":158419426,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODQxOTQyNg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-11-20T14:44:15Z","updated_at":"2015-11-20T14:44:15Z","author_association":"CONTRIBUTOR","body":"oh i mixed `==` and `lt` etc...  could settle on symbol or word operators, don't mind\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/158431132","html_url":"https://github.com/elastic/elasticsearch/issues/14647#issuecomment-158431132","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","id":158431132,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODQzMTEzMg==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2015-11-20T15:24:06Z","updated_at":"2015-11-20T15:24:23Z","author_association":"CONTRIBUTOR","body":"thanks @clintongormley!\n\nOffline, we were possibly discussing a simpler processor that would only operate on a single field.\n\nhere is what that looks like: https://github.com/talevy/elasticsearch/blob/if_conditions_else_processor/docs/plugins/ingest.asciidoc#field-conditional-processor\n\n> ...\n>       { \"txt\": { \"in\": [\"one\", \"ONE\"]}}\n> ...\n\nThe statement above demonstrates something that is similar, but still lacking in the way this processor \nhandles operands. It is quite common for people do have the following conditionals in their \nlogstash configurations:\n\n```\nif (\"cdn_log\" in [tags]) {\n   ...\n}\n```\n\nSince the subject here is not a field, and instead it is a simple string value, this relationship will probably need to be supported. Since we do not yet have string templates (mustache templates) for field referencing, I think only supporting field references instead of raw string values is ok for now.\n\ndoes that make sense?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/158945026","html_url":"https://github.com/elastic/elasticsearch/issues/14647#issuecomment-158945026","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","id":158945026,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODk0NTAyNg==","user":{"login":"uboness","id":211019,"node_id":"MDQ6VXNlcjIxMTAxOQ==","avatar_url":"https://avatars3.githubusercontent.com/u/211019?v=4","gravatar_id":"","url":"https://api.github.com/users/uboness","html_url":"https://github.com/uboness","followers_url":"https://api.github.com/users/uboness/followers","following_url":"https://api.github.com/users/uboness/following{/other_user}","gists_url":"https://api.github.com/users/uboness/gists{/gist_id}","starred_url":"https://api.github.com/users/uboness/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uboness/subscriptions","organizations_url":"https://api.github.com/users/uboness/orgs","repos_url":"https://api.github.com/users/uboness/repos","events_url":"https://api.github.com/users/uboness/events{/privacy}","received_events_url":"https://api.github.com/users/uboness/received_events","type":"User","site_admin":false},"created_at":"2015-11-23T14:20:58Z","updated_at":"2015-11-23T14:20:58Z","author_association":"CONTRIBUTOR","body":"why are we trying to write a scripting language in json? this all looks off to me. We should probably just use _real_ scripts for conditions... otherwise, there's no end to this.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/160178618","html_url":"https://github.com/elastic/elasticsearch/issues/14647#issuecomment-160178618","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","id":160178618,"node_id":"MDEyOklzc3VlQ29tbWVudDE2MDE3ODYxOA==","user":{"login":"uboness","id":211019,"node_id":"MDQ6VXNlcjIxMTAxOQ==","avatar_url":"https://avatars3.githubusercontent.com/u/211019?v=4","gravatar_id":"","url":"https://api.github.com/users/uboness","html_url":"https://github.com/uboness","followers_url":"https://api.github.com/users/uboness/followers","following_url":"https://api.github.com/users/uboness/following{/other_user}","gists_url":"https://api.github.com/users/uboness/gists{/gist_id}","starred_url":"https://api.github.com/users/uboness/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uboness/subscriptions","organizations_url":"https://api.github.com/users/uboness/orgs","repos_url":"https://api.github.com/users/uboness/repos","events_url":"https://api.github.com/users/uboness/events{/privacy}","received_events_url":"https://api.github.com/users/uboness/received_events","type":"User","site_admin":false},"created_at":"2015-11-27T17:18:59Z","updated_at":"2015-11-27T17:18:59Z","author_association":"CONTRIBUTOR","body":"another option is to have the following structure:\n\n``` js\n{\n  \"condition\" : {\n    \"if\" : {\n      // a conditional structure\n    },\n    \"then\" : [\n      // a list of processor that will run if the condition is not met\n    ],\n    \"else\" : [\n      // a list of processor that will run if the condition is not met\n    ]\n  }\n}\n```\n\nwhere there can be different conditional structures:\n\n``` js\n{\n  \"if\" : {\n    \"script\" : \"_doc.key == 2\"\n  }\n}\n```\n\nor\n\n``` js\n{\n  \"if\" : {\n    \"compare_fields\" : {\n      { \"eq\" : { \"field\" : \"key\", \"value\" : \"2\"} }\n    }\n  }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/222674819","html_url":"https://github.com/elastic/elasticsearch/issues/14647#issuecomment-222674819","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","id":222674819,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMjY3NDgxOQ==","user":{"login":"byronvoorbach","id":4427161,"node_id":"MDQ6VXNlcjQ0MjcxNjE=","avatar_url":"https://avatars1.githubusercontent.com/u/4427161?v=4","gravatar_id":"","url":"https://api.github.com/users/byronvoorbach","html_url":"https://github.com/byronvoorbach","followers_url":"https://api.github.com/users/byronvoorbach/followers","following_url":"https://api.github.com/users/byronvoorbach/following{/other_user}","gists_url":"https://api.github.com/users/byronvoorbach/gists{/gist_id}","starred_url":"https://api.github.com/users/byronvoorbach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/byronvoorbach/subscriptions","organizations_url":"https://api.github.com/users/byronvoorbach/orgs","repos_url":"https://api.github.com/users/byronvoorbach/repos","events_url":"https://api.github.com/users/byronvoorbach/events{/privacy}","received_events_url":"https://api.github.com/users/byronvoorbach/received_events","type":"User","site_admin":false},"created_at":"2016-05-31T12:33:44Z","updated_at":"2016-05-31T12:34:23Z","author_association":"CONTRIBUTOR","body":"From reading this issue, I understand that there are multiple ways of implementing such a feature. Are conditionals still on the roadmap, or have you dropped this for now?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/222767508","html_url":"https://github.com/elastic/elasticsearch/issues/14647#issuecomment-222767508","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","id":222767508,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMjc2NzUwOA==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2016-05-31T17:53:40Z","updated_at":"2016-05-31T17:53:40Z","author_association":"CONTRIBUTOR","body":"@byronvoorbach. Conditionals have been pushed off the roadmap for now. The plan is to assess its use-cases after the initial release of the Ingest API.\n\nFor now, any error-related branching can be achieved via the [on_failure](https://www.elastic.co/guide/en/elasticsearch/reference/master/handling-failure-in-pipelines.html) option\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/234011308","html_url":"https://github.com/elastic/elasticsearch/issues/14647#issuecomment-234011308","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","id":234011308,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNDAxMTMwOA==","user":{"login":"eskibars","id":2246002,"node_id":"MDQ6VXNlcjIyNDYwMDI=","avatar_url":"https://avatars0.githubusercontent.com/u/2246002?v=4","gravatar_id":"","url":"https://api.github.com/users/eskibars","html_url":"https://github.com/eskibars","followers_url":"https://api.github.com/users/eskibars/followers","following_url":"https://api.github.com/users/eskibars/following{/other_user}","gists_url":"https://api.github.com/users/eskibars/gists{/gist_id}","starred_url":"https://api.github.com/users/eskibars/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eskibars/subscriptions","organizations_url":"https://api.github.com/users/eskibars/orgs","repos_url":"https://api.github.com/users/eskibars/repos","events_url":"https://api.github.com/users/eskibars/events{/privacy}","received_events_url":"https://api.github.com/users/eskibars/received_events","type":"User","site_admin":false},"created_at":"2016-07-20T16:56:05Z","updated_at":"2016-07-20T16:56:05Z","author_association":"CONTRIBUTOR","body":"I still agree with @uboness on\n\n> why are we trying to write a scripting language in json? this all looks off to me. We should probably just use real scripts for conditions... otherwise, there's no end to this.\n\nWe have a real scripting language in Elasticsearch that we've now embedded in the Ingest Node processors.  If we do this, I think all the manual `gt`, `lt`, `gte`, etc operators would create more pain than just allowing a painless script that just returns true/false\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/234022052","html_url":"https://github.com/elastic/elasticsearch/issues/14647#issuecomment-234022052","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14647","id":234022052,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNDAyMjA1Mg==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2016-07-20T17:33:22Z","updated_at":"2016-07-20T17:33:22Z","author_association":"CONTRIBUTOR","body":"@eskibars indeed, now that we have the flexibility of a real language and the boolean operators that come with it... there is no need for this.\n\nin the future, if someone wants to make a designated `bool` processor that executes another processor if the `bool_script` evaluates to true, then that is easily done with scripts.\n\nClosing\n","performed_via_github_app":null}]