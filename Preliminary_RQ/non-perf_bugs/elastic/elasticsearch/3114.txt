{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3114","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3114/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3114/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3114/events","html_url":"https://github.com/elastic/elasticsearch/issues/3114","id":14903231,"node_id":"MDU6SXNzdWUxNDkwMzIzMQ==","number":3114,"title":"return term vectors and some statistics for a document","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"labels":[{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":37906111,"node_id":"MDU6TGFiZWwzNzkwNjExMQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.0.0.Beta1","name":"v1.0.0.Beta1","color":"DDDDDD","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"assignees":[{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2013-05-29T17:53:27Z","updated_at":"2016-10-04T19:58:51Z","closed_at":"2013-06-10T10:03:16Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"This feature seems to be useful as can be seen by typing \"term vectors elasticsearch\" in google. \n\nHere is how it should work: \n\nReturns information and statistics on terms in the fields of a particular document as stored in the index.\n\n```\n    curl -XGET 'http://localhost:9200/twitter/tweet/1/_termvector?pretty=true'\n```\n\nTree types of values can be requested: term information, term statistics and field statistics.\nBy default, all term information and field statistics are returned for all fields but no term statistics.\n\nOptionally, you can specify the fields for which the information is retrieved either with a parameter in the url\n\n```\ncurl -XGET 'http://localhost:9200/twitter/tweet/1/_termvector?fields=text,...'\n```\n\nor adding by adding the requested fields in the request body (see example below).\n## YOU MUST ENABLE TERM VECTOR STORING FOR USING THE API\n\nSee [mapping](http://www.elasticsearch.org/guide/reference/mapping/core-types/) doc and the example below on how to do that.\n## Term information\n- term frequency in the field (always returned)\n- term positions (\"positions\" : true)\n- start and end offsets (\"offsets\" : true)\n- term payloads (\"payloads\" : true), as base64 encoded bytes\n\nIf the requested information wasn't stored in the index, it will be omitted without further warning.\nSee [mapping](http://www.elasticsearch.org/guide/reference/mapping/core-types/) on how to configure your index to store term vectors.\n## Term statistics\n\nSetting \"term_statistics\" to \"true\" (default is \"false\") will return\n- total term frequency (how often a term occurs in all documents)\n- document frequency (the number of documents containing the current term)\n\nBy default these values are not returned since term statistics can have a serious performance impact.\n## Field statistics\n\nSetting \"field_statistics\" to \"false\" (default is \"true\") will omit\n- document count (how many documents contain this field)\n- sum of document frequencies (the sum of document frequencies for all terms in this field)\n- sum of total term frequencies (the sum of total term frequencies of each term in this field)\n## Behavior\n\nThe term and field statistics are not accurate. Deleted documents are not taken into account. The information is only retrieved for the shard the requested document resides in. The term and field statistics are therefore only useful as relative measures whereas the absolute numbers have no meaning in this context.\n## Example\n\nFirst, we create an index that stores term vectors, payloads etc. :\n\n```\n    curl -s -XPUT 'http://localhost:9200/twitter/' -d '{\n        \"mappings\": {\n            \"tweet\": {\n                \"properties\": {\n                    \"text\": {\n                                \"type\": \"string\",\n                                \"term_vector\": \"with_positions_offsets_payloads\",\n                                \"store\" : \"yes\",\n                                \"index_analyzer\" : \"fulltext_analyzer\"\n                         },\n                     \"fullname\": {\n                                \"type\": \"string\",\n                                \"term_vector\": \"with_positions_offsets_payloads\",\n                                \"index_analyzer\" : \"fulltext_analyzer\"\n                         }\n                 }\n            }\n        },\n        \"settings\" : {\n            \"index\" : {\n                \"number_of_shards\" : 1,\n                \"number_of_replicas\" : 0\n            },\n            \"analysis\": {\n                    \"analyzer\": {\n                        \"fulltext_analyzer\": {\n                            \"type\": \"custom\",\n                            \"tokenizer\": \"whitespace\",\n                            \"filter\": [\n                                \"lowercase\",\n                                \"type_as_payload\"\n                            ]\n                        }\n                    }\n            }\n         }\n    }'\n```\n\nSecond, we add some documents:\n\n```\n    curl -XPUT 'http://localhost:9200/twitter/tweet/1?pretty=true' -d '{\n      \"fullname\" : \"John Doe\",\n      \"text\" : \"twitter test test test \"\n\n    }'\n\n    curl -XPUT 'http://localhost:9200/twitter/tweet/2?pretty=true' -d '{\n      \"fullname\" : \"Jane Doe\",\n      \"text\" : \"Another twitter test ...\"\n\n    }'\n```\n\nThe following request returns all information and statistics for field \"text\" in document \"1\" (John Doe):\n\n```\n     curl -XGET 'http://localhost:9200/twitter/tweet/1/_termvector?pretty=true' -d '{\n                    \"fields\" : [\"text\"],\n                    \"offsets\" : true,\n                    \"payloads\" : true,\n                    \"positions\" : true,\n                    \"term_statistics\" : true,\n                    \"field_statistics\" : true\n            }'\n```\n\nEquivalently, all parameters can be passed as URI parameters:\n     curl -GET 'http://localhost:9200/twitter/tweet/1/_termvector?pretty=true&fields=text&offsets=true&payloads=true&positions=true&term_statistics=true&field_statistics=true'\n\nResponse:\n\n```\n  {\n    \"_index\" : \"twitter\",\n    \"_type\" : \"tweet\",\n    \"_id\" : \"1\",\n    \"_version\" : 1,\n    \"exists\" : true,\n    \"term_vectors\" : {\n      \"text\" : {\n        \"field_statistics\" : {\n          \"sum_doc_freq\" : 6,\n          \"doc_count\" : 2,\n          \"sum_ttf\" : 8\n        },\n        \"terms\" : {\n          \"test\" : {\n            \"doc_freq\" : 2,\n            \"ttf\" : 4,\n            \"term_freq\" : 3,\n            \"pos\" : [ 1, 2, 3 ],\n            \"start\" : [ 8, 13, 18 ],\n            \"end\" : [ 12, 17, 22 ],\n            \"payload\" : [ \"d29yZA==\", \"d29yZA==\", \"d29yZA==\" ]\n          },\n          \"twitter\" : {\n            \"doc_freq\" : 2,\n            \"ttf\" : 2,\n            \"term_freq\" : 1,\n            \"pos\" : [ 0 ],\n            \"start\" : [ 0 ],\n            \"end\" : [ 7 ],\n            \"payload\" : [ \"d29yZA==\" ]\n          }\n        }\n      }\n    }\n  }\n```\n\nThis is similar to Issue #2691\n","closed_by":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"performed_via_github_app":null}