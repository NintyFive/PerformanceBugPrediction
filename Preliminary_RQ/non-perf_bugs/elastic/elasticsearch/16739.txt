{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/16739","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16739/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16739/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16739/events","html_url":"https://github.com/elastic/elasticsearch/issues/16739","id":135109084,"node_id":"MDU6SXNzdWUxMzUxMDkwODQ=","number":16739,"title":"Unable to connect with Elasticsearch with JavaConfig","user":{"login":"GlennVanSchil","id":3930037,"node_id":"MDQ6VXNlcjM5MzAwMzc=","avatar_url":"https://avatars3.githubusercontent.com/u/3930037?v=4","gravatar_id":"","url":"https://api.github.com/users/GlennVanSchil","html_url":"https://github.com/GlennVanSchil","followers_url":"https://api.github.com/users/GlennVanSchil/followers","following_url":"https://api.github.com/users/GlennVanSchil/following{/other_user}","gists_url":"https://api.github.com/users/GlennVanSchil/gists{/gist_id}","starred_url":"https://api.github.com/users/GlennVanSchil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GlennVanSchil/subscriptions","organizations_url":"https://api.github.com/users/GlennVanSchil/orgs","repos_url":"https://api.github.com/users/GlennVanSchil/repos","events_url":"https://api.github.com/users/GlennVanSchil/events{/privacy}","received_events_url":"https://api.github.com/users/GlennVanSchil/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-20T18:40:33Z","updated_at":"2016-02-20T20:01:44Z","closed_at":"2016-02-20T20:01:44Z","author_association":"NONE","active_lock_reason":null,"body":"I've found [this](http://www.scriptscoop.net/t/24321e0e3f75/spring-data-elasticsearch-transportclient-java-config.html) example on how to do it in JavaConfig. It should be something like this.\n\n``` java\npackage be.wewv.spring;\n\nimport org.elasticsearch.client.Client;\nimport org.elasticsearch.client.transport.TransportClient;\nimport org.elasticsearch.common.transport.InetSocketTransportAddress;\nimport org.elasticsearch.common.transport.TransportAddress;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.PropertySource;\nimport org.springframework.context.support.PropertySourcesPlaceholderConfigurer;\nimport org.springframework.core.env.Environment;\nimport org.springframework.core.io.ClassPathResource;\nimport org.springframework.core.io.Resource;\nimport org.springframework.data.elasticsearch.core.ElasticsearchOperations;\nimport org.springframework.data.elasticsearch.core.ElasticsearchTemplate;\nimport org.springframework.data.elasticsearch.repository.config.EnableElasticsearchRepositories;\nimport org.springframework.web.servlet.config.annotation.EnableWebMvc;\n\nimport javax.annotation.PostConstruct;\n\n/**\n * Created by Glenn on 17/01/2016.\n */\n@EnableWebMvc\n@Configuration\n@PropertySource(\"classpath:properties/application.properties\")\n@EnableElasticsearchRepositories(basePackages = \"org/springframework/data/elasticsearch/repositories\")\n@ComponentScan(basePackages = \"be.wewv\")\npublic class AppConfig {\n\n    @Value(\"${esearch.port}\")\n    int port;\n    @Value(\"${esearch.host}\")\n    String hostname;\n\n    @Bean\n    @PostConstruct\n    public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() {\n        PropertySourcesPlaceholderConfigurer configurer = new PropertySourcesPlaceholderConfigurer();\n        Resource resource = new ClassPathResource(\"properties/application.properties\");\n        configurer.setLocation(resource);\n        return configurer;\n    }\n\n    @Bean\n    public ElasticsearchOperations elasticsearchTemplate() {\n        return new ElasticsearchTemplate(client());\n    }\n\n    @Bean\n    public Client client(){\n        TransportClient client= new TransportClient(); // Error:(80, 33) \n        TransportAddress address = new InetSocketTransportAddress(hostname, port); // Error:(81, 67)\n        client.addTransportAddress(address);\n        return client;\n    }\n}\n```\n\nBut this gives me the following errors.\n\n> Error:(80, 33) java: constructor TransportClient in class org.elasticsearch.client.transport.TransportClient cannot be applied to given types;\n>   required: org.elasticsearch.common.inject.Injector\n>   found: no arguments\n>   reason: actual and formal argument lists differ in length\n> \n> Error:(81, 67) java: incompatible types: java.lang.String cannot be converted to java.net.InetAddress\n","closed_by":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"performed_via_github_app":null}