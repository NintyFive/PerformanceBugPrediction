[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94655239","html_url":"https://github.com/elastic/elasticsearch/issues/10692#issuecomment-94655239","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10692","id":94655239,"node_id":"MDEyOklzc3VlQ29tbWVudDk0NjU1MjM5","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2015-04-21T06:47:24Z","updated_at":"2015-04-21T06:47:24Z","author_association":"MEMBER","body":"Hi Michael,\n\nCan you elaborate on which API you would need and how you would implement the vector clocks? Remember that ES user a primary back up model where only accepts writes on the primary shard copy. If there is no primary available, writes will be rejected (with a default timeout of 1m). This means there is only 1 official version of each document.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94889519","html_url":"https://github.com/elastic/elasticsearch/issues/10692#issuecomment-94889519","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10692","id":94889519,"node_id":"MDEyOklzc3VlQ29tbWVudDk0ODg5NTE5","user":{"login":"schmichael","id":113362,"node_id":"MDQ6VXNlcjExMzM2Mg==","avatar_url":"https://avatars1.githubusercontent.com/u/113362?v=4","gravatar_id":"","url":"https://api.github.com/users/schmichael","html_url":"https://github.com/schmichael","followers_url":"https://api.github.com/users/schmichael/followers","following_url":"https://api.github.com/users/schmichael/following{/other_user}","gists_url":"https://api.github.com/users/schmichael/gists{/gist_id}","starred_url":"https://api.github.com/users/schmichael/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmichael/subscriptions","organizations_url":"https://api.github.com/users/schmichael/orgs","repos_url":"https://api.github.com/users/schmichael/repos","events_url":"https://api.github.com/users/schmichael/events{/privacy}","received_events_url":"https://api.github.com/users/schmichael/received_events","type":"User","site_admin":false},"created_at":"2015-04-21T17:56:25Z","updated_at":"2015-04-21T17:56:25Z","author_association":"NONE","body":"@bleskes Sure, I'm still sketching out a new system, so this feature may not be necessary.\n\nThe system involves a pipeline in which mutations are merged into documents upstream from ES using vector clocks for partial ordering. By the time documents reach the end of the pipeline for indexing they may be indexed out of order such that a document with version `A:3,B:3` is indexed _after_ a document with version `A:9,B:3`. The `A:3,B:3` version of the document should be dropped as a later version is already indexed.\n\nHowever, without a mechanism for resolving conflicts such as `A:4,B:2` vs `A:3,B:3`, a deterministic fallback algorithm would have to be used in its place (such as a simple lexicographical comparison) and undermine the consistency benefits of using vector clocks in the first place...\n\n...so I think perhaps the better solution is for a system upstream in our pipeline to generate a monotonic version number for use by the indexer. Not sure it can be done without either a lot of coordination or stale (but always moving forward in time) documents in the index, but it's probably better than adding complexity to ES.\n\nI'll go ahead and close this unless someone else can think of how vector clocks without a custom conflict resolution mechanism are safe/useful.\n","performed_via_github_app":null}]