[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/418045979","html_url":"https://github.com/elastic/elasticsearch/issues/33342#issuecomment-418045979","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33342","id":418045979,"node_id":"MDEyOklzc3VlQ29tbWVudDQxODA0NTk3OQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-09-03T08:48:29Z","updated_at":"2018-09-03T08:48:29Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/418047441","html_url":"https://github.com/elastic/elasticsearch/issues/33342#issuecomment-418047441","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33342","id":418047441,"node_id":"MDEyOklzc3VlQ29tbWVudDQxODA0NzQ0MQ==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2018-09-03T08:53:54Z","updated_at":"2018-09-03T08:53:54Z","author_association":"MEMBER","body":"@appadesai \r\n\r\n> Monitor the heap objects after every 15 minutes and you will notice buildup of BasicFuture objects with strong references from the GC root which do not get released.\r\n\r\nDo individual objects never get released (i.e. if you add logic to your tests that eventually stops the firing of requests in a hot loop) or is the overall number of these futures simply never going down?\r\n\r\nIt seems the former would be a problem while the latter is some what expected with the way the async HTTP client works in the background (you can enqueue requests quicker than they are potentially handled by the server -> your queue grows).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/418067321","html_url":"https://github.com/elastic/elasticsearch/issues/33342#issuecomment-418067321","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33342","id":418067321,"node_id":"MDEyOklzc3VlQ29tbWVudDQxODA2NzMyMQ==","user":{"login":"appadesai","id":19589270,"node_id":"MDQ6VXNlcjE5NTg5Mjcw","avatar_url":"https://avatars0.githubusercontent.com/u/19589270?v=4","gravatar_id":"","url":"https://api.github.com/users/appadesai","html_url":"https://github.com/appadesai","followers_url":"https://api.github.com/users/appadesai/followers","following_url":"https://api.github.com/users/appadesai/following{/other_user}","gists_url":"https://api.github.com/users/appadesai/gists{/gist_id}","starred_url":"https://api.github.com/users/appadesai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/appadesai/subscriptions","organizations_url":"https://api.github.com/users/appadesai/orgs","repos_url":"https://api.github.com/users/appadesai/repos","events_url":"https://api.github.com/users/appadesai/events{/privacy}","received_events_url":"https://api.github.com/users/appadesai/received_events","type":"User","site_admin":false},"created_at":"2018-09-03T10:06:17Z","updated_at":"2018-09-03T10:07:25Z","author_association":"NONE","body":"The objects eventually get cleaned up if I stop sending the requests but this behavior is not seen when there is continuous requests to ElasticSearch under load. The cleanup happens quickly if the timeout (RestClient.setMaxRetryTimeoutMillis ) is increased to 100 seconds even with continuous load.\r\n\r\nI am not sure what are you referring to as former and latter. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/418069061","html_url":"https://github.com/elastic/elasticsearch/issues/33342#issuecomment-418069061","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33342","id":418069061,"node_id":"MDEyOklzc3VlQ29tbWVudDQxODA2OTA2MQ==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2018-09-03T10:13:19Z","updated_at":"2018-09-03T10:13:35Z","author_association":"MEMBER","body":"@appadesai \r\n\r\n> The cleanup happens quickly if the timeout (RestClient.setMaxRetryTimeoutMillis ) is increased to 100 seconds even with continuous load.\r\n\r\nInteresting, will take a look and see if I can reproduce this :)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/418091669","html_url":"https://github.com/elastic/elasticsearch/issues/33342#issuecomment-418091669","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33342","id":418091669,"node_id":"MDEyOklzc3VlQ29tbWVudDQxODA5MTY2OQ==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2018-09-03T11:49:03Z","updated_at":"2018-09-03T11:49:23Z","author_association":"MEMBER","body":"@appadesai I can't find any different behaviour here depending on the client side timeout (30s vs 100s). Waht's the Java code you use for testing here? (maybe you're leaking resources somehow in your tests and trigger the different behaviour that way?)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/418247445","html_url":"https://github.com/elastic/elasticsearch/issues/33342#issuecomment-418247445","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33342","id":418247445,"node_id":"MDEyOklzc3VlQ29tbWVudDQxODI0NzQ0NQ==","user":{"login":"appadesai","id":19589270,"node_id":"MDQ6VXNlcjE5NTg5Mjcw","avatar_url":"https://avatars0.githubusercontent.com/u/19589270?v=4","gravatar_id":"","url":"https://api.github.com/users/appadesai","html_url":"https://github.com/appadesai","followers_url":"https://api.github.com/users/appadesai/followers","following_url":"https://api.github.com/users/appadesai/following{/other_user}","gists_url":"https://api.github.com/users/appadesai/gists{/gist_id}","starred_url":"https://api.github.com/users/appadesai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/appadesai/subscriptions","organizations_url":"https://api.github.com/users/appadesai/orgs","repos_url":"https://api.github.com/users/appadesai/repos","events_url":"https://api.github.com/users/appadesai/events{/privacy}","received_events_url":"https://api.github.com/users/appadesai/received_events","type":"User","site_admin":false},"created_at":"2018-09-04T05:43:00Z","updated_at":"2018-09-04T05:43:00Z","author_association":"NONE","body":"\r\n[ESClientTest.zip](https://github.com/elastic/elasticsearch/files/2347268/ESClientTest.zip)\r\n\r\n@original-brownbear I have uploaded test code that should help you reproduce the issue.\r\n\r\nYou will have to install nodejs from https://nodejs.org/en/download/ and start the dummy server as follows\r\n    `bin/node node_app.js`\r\n\r\nI have added two timeouts in the test client code (ESClientTest.java)\r\n\tprivate final int maxRetryTimeoutMillis = 30000;  //Timeout to reproduce leak\t\r\n\t//private final int maxRetryTimeoutMillis = 200000; //Timeout to fix leak\r\nUncomment each one to reproduce or avoid the issue.\r\n\r\nAlso added screen shot of the profiler to show the growth of BasicFuture objects. Notice that these objects are strongly reachable.\r\n![basicfutureleak](https://user-images.githubusercontent.com/19589270/45012041-09c48800-b005-11e8-9574-d5df10c0eb10.jpeg)\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/418395624","html_url":"https://github.com/elastic/elasticsearch/issues/33342#issuecomment-418395624","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33342","id":418395624,"node_id":"MDEyOklzc3VlQ29tbWVudDQxODM5NTYyNA==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2018-09-04T14:48:04Z","updated_at":"2018-09-04T14:48:04Z","author_association":"MEMBER","body":"Ok, I can confirm that the behaviour here is somewhat sub-optimal.\r\nIf we set a timeout smaller than the time taken by the request, then we will not interrupt the request at all only throw an exception from `org.elasticsearch.client.RestClient.SyncResponseListener#get`.\r\n=> we're leaking memory here if we are retrying requests by user code quicker than they time out on the HTTP client level because we never interrupt any requests.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/458795045","html_url":"https://github.com/elastic/elasticsearch/issues/33342#issuecomment-458795045","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33342","id":458795045,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1ODc5NTA0NQ==","user":{"login":"nathankopp","id":523769,"node_id":"MDQ6VXNlcjUyMzc2OQ==","avatar_url":"https://avatars0.githubusercontent.com/u/523769?v=4","gravatar_id":"","url":"https://api.github.com/users/nathankopp","html_url":"https://github.com/nathankopp","followers_url":"https://api.github.com/users/nathankopp/followers","following_url":"https://api.github.com/users/nathankopp/following{/other_user}","gists_url":"https://api.github.com/users/nathankopp/gists{/gist_id}","starred_url":"https://api.github.com/users/nathankopp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nathankopp/subscriptions","organizations_url":"https://api.github.com/users/nathankopp/orgs","repos_url":"https://api.github.com/users/nathankopp/repos","events_url":"https://api.github.com/users/nathankopp/events{/privacy}","received_events_url":"https://api.github.com/users/nathankopp/received_events","type":"User","site_admin":false},"created_at":"2019-01-30T03:09:28Z","updated_at":"2019-01-30T03:09:28Z","author_association":"NONE","body":"Is there any workaround for this? I am experiencing this exact same problem.  After some time, PoolingNHttpClientConnectionManager was 3GB in size! This was accumulated in the CPool leasingRequests LinkedList, containing more than 200,000 instances of BasicFuture, each at over 11KB.\r\n\r\nI need to find a solution to prevent this behavior, so that memory is cleaned up appropriately.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/458801942","html_url":"https://github.com/elastic/elasticsearch/issues/33342#issuecomment-458801942","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33342","id":458801942,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1ODgwMTk0Mg==","user":{"login":"appadesai","id":19589270,"node_id":"MDQ6VXNlcjE5NTg5Mjcw","avatar_url":"https://avatars0.githubusercontent.com/u/19589270?v=4","gravatar_id":"","url":"https://api.github.com/users/appadesai","html_url":"https://github.com/appadesai","followers_url":"https://api.github.com/users/appadesai/followers","following_url":"https://api.github.com/users/appadesai/following{/other_user}","gists_url":"https://api.github.com/users/appadesai/gists{/gist_id}","starred_url":"https://api.github.com/users/appadesai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/appadesai/subscriptions","organizations_url":"https://api.github.com/users/appadesai/orgs","repos_url":"https://api.github.com/users/appadesai/repos","events_url":"https://api.github.com/users/appadesai/events{/privacy}","received_events_url":"https://api.github.com/users/appadesai/received_events","type":"User","site_admin":false},"created_at":"2019-01-30T03:50:12Z","updated_at":"2019-01-30T03:50:12Z","author_association":"NONE","body":"We changed to maxRetryTimeout on restClient from default 30 seconds to 200\nseconds as a workaround to fix this issue.\n     RestClient.setMaxRetryTimeoutMillis(200000)\n\nOn Wed, Jan 30, 2019 at 8:40 AM nathankopp <notifications@github.com> wrote:\n\n> Is there any workaround for this? I am experiencing this exact same\n> problem. After some time, PoolingNHttpClientConnectionManager was 3GB in\n> size! This was accumulated in the CPool leasingRequests LinkedList,\n> containing more than 200,000 instances of BasicFuture, each at over 11KB.\n>\n> I need to find a solution to prevent this behavior, so that memory is\n> cleaned up appropriately.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/elastic/elasticsearch/issues/33342#issuecomment-458795045>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ASrolk2mpG3jTp0H52P0MQHpRWZv_0pqks5vIQ0ogaJpZM4WXDnr>\n> .\n>\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/458809668","html_url":"https://github.com/elastic/elasticsearch/issues/33342#issuecomment-458809668","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33342","id":458809668,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1ODgwOTY2OA==","user":{"login":"nathankopp","id":523769,"node_id":"MDQ6VXNlcjUyMzc2OQ==","avatar_url":"https://avatars0.githubusercontent.com/u/523769?v=4","gravatar_id":"","url":"https://api.github.com/users/nathankopp","html_url":"https://github.com/nathankopp","followers_url":"https://api.github.com/users/nathankopp/followers","following_url":"https://api.github.com/users/nathankopp/following{/other_user}","gists_url":"https://api.github.com/users/nathankopp/gists{/gist_id}","starred_url":"https://api.github.com/users/nathankopp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nathankopp/subscriptions","organizations_url":"https://api.github.com/users/nathankopp/orgs","repos_url":"https://api.github.com/users/nathankopp/repos","events_url":"https://api.github.com/users/nathankopp/events{/privacy}","received_events_url":"https://api.github.com/users/nathankopp/received_events","type":"User","site_admin":false},"created_at":"2019-01-30T04:41:18Z","updated_at":"2019-01-30T04:41:18Z","author_association":"NONE","body":"I'm using ES client version 6.3.2, and I don't see a setMaxRetryTimeoutMillis() method in RestClient. However, I do see a similarly-named method in RestClientBuilder, so hopefully setting that to 200000 will have the same effect.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/459544056","html_url":"https://github.com/elastic/elasticsearch/issues/33342#issuecomment-459544056","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33342","id":459544056,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1OTU0NDA1Ng==","user":{"login":"nathankopp","id":523769,"node_id":"MDQ6VXNlcjUyMzc2OQ==","avatar_url":"https://avatars0.githubusercontent.com/u/523769?v=4","gravatar_id":"","url":"https://api.github.com/users/nathankopp","html_url":"https://github.com/nathankopp","followers_url":"https://api.github.com/users/nathankopp/followers","following_url":"https://api.github.com/users/nathankopp/following{/other_user}","gists_url":"https://api.github.com/users/nathankopp/gists{/gist_id}","starred_url":"https://api.github.com/users/nathankopp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nathankopp/subscriptions","organizations_url":"https://api.github.com/users/nathankopp/orgs","repos_url":"https://api.github.com/users/nathankopp/repos","events_url":"https://api.github.com/users/nathankopp/events{/privacy}","received_events_url":"https://api.github.com/users/nathankopp/received_events","type":"User","site_admin":false},"created_at":"2019-01-31T23:17:43Z","updated_at":"2019-01-31T23:17:43Z","author_association":"NONE","body":"Increasing the maxRetryTimeout seems to have fixed our problem.  When using the longer timeout, the memory leak does not occur. I would say that this is not a case of \"sub-optimal performance\", but rather should be considered a true bug and should be fixed.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/460664606","html_url":"https://github.com/elastic/elasticsearch/issues/33342#issuecomment-460664606","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33342","id":460664606,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDY2NDYwNg==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2019-02-05T14:48:37Z","updated_at":"2019-02-05T14:48:37Z","author_association":"MEMBER","body":"agreed @nathankopp see #38425 and #38085 .","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/460930036","html_url":"https://github.com/elastic/elasticsearch/issues/33342#issuecomment-460930036","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33342","id":460930036,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDkzMDAzNg==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2019-02-06T07:49:04Z","updated_at":"2019-02-06T07:49:04Z","author_association":"MEMBER","body":"Thanks for the detailed explanation. We've got other reports of issues caused by the max retry timeout, and the more I looked into it the more I realized that this timeout mechanism did not play well with the internals of the underlying http client that we rely on. I think it's better to rely on the different timeouts exposed by the http client directly and remove this additional mechanism that ends up causing more harm than good. We have deprecated max retry timeout in 6.x, as well as increased its default value to 90 seconds (#38425) and removed it in 7.0 (#38085).","performed_via_github_app":null}]