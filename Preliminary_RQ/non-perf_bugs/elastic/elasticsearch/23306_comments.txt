[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281693168","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-281693168","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":281693168,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTY5MzE2OA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-02-22T14:59:39Z","updated_at":"2017-02-22T14:59:39Z","author_association":"CONTRIBUTOR","body":"Good point @uschindler - thanks","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281700989","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-281700989","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":281700989,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTcwMDk4OQ==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2017-02-22T15:24:51Z","updated_at":"2017-02-22T15:24:51Z","author_association":"CONTRIBUTOR","body":"I think the fix would be quite easy by using the same matching algorithm like indicesQuery does on the `doToQuery()` method:\r\n\r\n```java\r\n@Override\r\nprotected Query doToQuery(QueryShardContext context) throws IOException {\r\n    if (context.matchesIndices(indices)) {\r\n        return innerQuery.toQuery(context);\r\n    }\r\n    return noMatchQuery.toQuery(context);\r\n}\r\n```\r\n\r\nI think, `IndexFieldType` should do something similar, here the example for termQuery method (similar in the other methods like termsQuery):\r\n\r\n```java\r\n@Override\r\npublic Query termQuery(Object value, @Nullable QueryShardContext context) {\r\n    if (context.matchesIndices(new String[] { value.toString() /*or some other conversion of the term*/))) {\r\n        return Queries.newMatchAllQuery();\r\n    } else {\r\n        return Queries.newMatchNoDocsQuery(\"Index didn't match. Index queried: \" + context.index().getName() + \" vs. \" + value);\r\n    }\r\n}\r\n```\r\n\r\nI can try to provide a PR about this!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281701781","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-281701781","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":281701781,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTcwMTc4MQ==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2017-02-22T15:27:20Z","updated_at":"2017-02-22T15:35:06Z","author_association":"CONTRIBUTOR","body":"There is still the question what to do with \"filtered\" aliases. Those may already broken with indicesQuery (not verified - if the filter of alias is applied afterwards, it would work). The \"correct\" way would be to apply the filter instead of matchAllDocs.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281761286","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-281761286","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":281761286,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTc2MTI4Ng==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2017-02-22T18:40:56Z","updated_at":"2017-02-22T18:40:56Z","author_association":"CONTRIBUTOR","body":"...not so easy to fix because `context.matchesIndices` disappeared in master branch.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/287863765","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-287863765","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":287863765,"node_id":"MDEyOklzc3VlQ29tbWVudDI4Nzg2Mzc2NQ==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-03-20T19:00:36Z","updated_at":"2017-03-20T19:00:36Z","author_association":"MEMBER","body":"hey @uschindler you raise a good point which we have overlooked. The indices query bugged us for quite a while and we weren't sure how many people were using it. We need to fix the alias problem, but that doesn't require restoring the indices query. The fact that you'd need the `matchesIndices` method back for your fix means that part of the code removed should be restored, see 103984a4a16af1c12f03c631ff449a7948dde713 . The method was removed as it was left unused after the indices query removal.\r\n\r\nLet us discuss first though whether we come up with different ideas to address this.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/287866928","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-287866928","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":287866928,"node_id":"MDEyOklzc3VlQ29tbWVudDI4Nzg2NjkyOA==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2017-03-20T19:12:24Z","updated_at":"2017-03-20T19:12:24Z","author_association":"CONTRIBUTOR","body":"What was the problem with the indices query? Quite simple and straight-forward!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/302445580","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-302445580","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":302445580,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjQ0NTU4MA==","user":{"login":"sjmc7","id":743982,"node_id":"MDQ6VXNlcjc0Mzk4Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/743982?v=4","gravatar_id":"","url":"https://api.github.com/users/sjmc7","html_url":"https://github.com/sjmc7","followers_url":"https://api.github.com/users/sjmc7/followers","following_url":"https://api.github.com/users/sjmc7/following{/other_user}","gists_url":"https://api.github.com/users/sjmc7/gists{/gist_id}","starred_url":"https://api.github.com/users/sjmc7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sjmc7/subscriptions","organizations_url":"https://api.github.com/users/sjmc7/orgs","repos_url":"https://api.github.com/users/sjmc7/repos","events_url":"https://api.github.com/users/sjmc7/events{/privacy}","received_events_url":"https://api.github.com/users/sjmc7/received_events","type":"User","site_admin":false},"created_at":"2017-05-18T15:45:47Z","updated_at":"2017-05-18T15:45:47Z","author_association":"NONE","body":"We were also using the indices query with aliases so would be good to see this fixed. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/338290861","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-338290861","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":338290861,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODI5MDg2MQ==","user":{"login":"carrino","id":978139,"node_id":"MDQ6VXNlcjk3ODEzOQ==","avatar_url":"https://avatars2.githubusercontent.com/u/978139?v=4","gravatar_id":"","url":"https://api.github.com/users/carrino","html_url":"https://github.com/carrino","followers_url":"https://api.github.com/users/carrino/followers","following_url":"https://api.github.com/users/carrino/following{/other_user}","gists_url":"https://api.github.com/users/carrino/gists{/gist_id}","starred_url":"https://api.github.com/users/carrino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/carrino/subscriptions","organizations_url":"https://api.github.com/users/carrino/orgs","repos_url":"https://api.github.com/users/carrino/repos","events_url":"https://api.github.com/users/carrino/events{/privacy}","received_events_url":"https://api.github.com/users/carrino/received_events","type":"User","site_admin":false},"created_at":"2017-10-20T18:44:15Z","updated_at":"2017-10-20T18:54:17Z","author_association":"NONE","body":"+1  Was using indices query with aliases, also.  Ran into this when migrating to 6.0.0-rc1","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/338347290","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-338347290","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":338347290,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODM0NzI5MA==","user":{"login":"carrino","id":978139,"node_id":"MDQ6VXNlcjk3ODEzOQ==","avatar_url":"https://avatars2.githubusercontent.com/u/978139?v=4","gravatar_id":"","url":"https://api.github.com/users/carrino","html_url":"https://github.com/carrino","followers_url":"https://api.github.com/users/carrino/followers","following_url":"https://api.github.com/users/carrino/following{/other_user}","gists_url":"https://api.github.com/users/carrino/gists{/gist_id}","starred_url":"https://api.github.com/users/carrino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/carrino/subscriptions","organizations_url":"https://api.github.com/users/carrino/orgs","repos_url":"https://api.github.com/users/carrino/repos","events_url":"https://api.github.com/users/carrino/events{/privacy}","received_events_url":"https://api.github.com/users/carrino/received_events","type":"User","site_admin":false},"created_at":"2017-10-20T23:53:56Z","updated_at":"2017-10-20T23:53:56Z","author_association":"NONE","body":"In addition to the alias problem even if you pass all the indexes the alias could resolve to, I found another issue.\r\n\r\nBefore, the IndicesQuery would fully encapsulate the inner query and it would not get parsed on an index of the wrong type.  This means you could do a query one index with some fields and another index with another set of fields wrapping each in an IndicesQuery.  \r\n\r\nIf you convert this to a boolean with must clauses, all the boolean query is parsed even if the must index clause would fail.  This parsing can lead to number_format_exceptions. \r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/338391624","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-338391624","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":338391624,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODM5MTYyNA==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2017-10-21T12:40:04Z","updated_at":"2017-10-21T12:40:04Z","author_association":"CONTRIBUTOR","body":"Hi @carrino: I agree with you. I had the same problem. I don't fully understand why the Elasticsearch team deprecated the indices query. It is very useful and a \"term query on the index field\" is by far no replacement!!!\r\n\r\nI'd suggest to unddo the deprecation and keep the query as is. Otherwise I have to write a plugin that restores the query, which is way stupid. The whole class is only a few lines of code and brings so much phantastic usage opportunities. And there is no reason to remove it from the perspective of the backend.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/339397432","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-339397432","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":339397432,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTM5NzQzMg==","user":{"login":"carrino","id":978139,"node_id":"MDQ6VXNlcjk3ODEzOQ==","avatar_url":"https://avatars2.githubusercontent.com/u/978139?v=4","gravatar_id":"","url":"https://api.github.com/users/carrino","html_url":"https://github.com/carrino","followers_url":"https://api.github.com/users/carrino/followers","following_url":"https://api.github.com/users/carrino/following{/other_user}","gists_url":"https://api.github.com/users/carrino/gists{/gist_id}","starred_url":"https://api.github.com/users/carrino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/carrino/subscriptions","organizations_url":"https://api.github.com/users/carrino/orgs","repos_url":"https://api.github.com/users/carrino/repos","events_url":"https://api.github.com/users/carrino/events{/privacy}","received_events_url":"https://api.github.com/users/carrino/received_events","type":"User","site_admin":false},"created_at":"2017-10-25T16:55:56Z","updated_at":"2017-10-25T16:55:56Z","author_association":"NONE","body":"I was able to work around this limitation by changing bool query to short circuit if one of it's filter or must clauses finds a MatchNoDocsQuery.  I don't see any other query types that can be used to encapsulate a query on an index besides boolean being modified in this way.  Any other ideas?\r\n\r\n```\r\ndiff --git a/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java b/core/src/main/java/org/elasticsearch/index/qu\r\nindex ac57c2a..11c714e 100644\r\n--- a/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java\r\n+++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java\r\n@@ -23,6 +23,7 @@ import org.apache.lucene.search.BooleanClause;\r\n import org.apache.lucene.search.BooleanClause.Occur;\r\n import org.apache.lucene.search.BooleanQuery;\r\n import org.apache.lucene.search.MatchAllDocsQuery;\r\n+import org.apache.lucene.search.MatchNoDocsQuery;\r\n import org.apache.lucene.search.Query;\r\n import org.elasticsearch.Version;\r\n import org.elasticsearch.common.ParseField;\r\n@@ -376,10 +377,16 @@ public class BoolQueryBuilder extends AbstractQueryBuilder<BoolQueryBuilder> {\r\n     @Override\r\n     protected Query doToQuery(QueryShardContext context) throws IOException {\r\n         BooleanQuery.Builder booleanQueryBuilder = new BooleanQuery.Builder();\r\n-        addBooleanClauses(context, booleanQueryBuilder, mustClauses, BooleanClause.Occur.MUST);\r\n+        if (!addBooleanClauses(context, booleanQueryBuilder, filterClauses, BooleanClause.Occur.FILTER)) {\r\n+            return new MatchNoDocsQuery();\r\n+        }\r\n+\r\n+        if (!addBooleanClauses(context, booleanQueryBuilder, mustClauses, BooleanClause.Occur.MUST)) {\r\n+            return new MatchNoDocsQuery();\r\n+        }\r\n+\r\n         addBooleanClauses(context, booleanQueryBuilder, mustNotClauses, BooleanClause.Occur.MUST_NOT);\r\n         addBooleanClauses(context, booleanQueryBuilder, shouldClauses, BooleanClause.Occur.SHOULD);\r\n-        addBooleanClauses(context, booleanQueryBuilder, filterClauses, BooleanClause.Occur.FILTER);\r\n         BooleanQuery booleanQuery = booleanQueryBuilder.build();\r\n         if (booleanQuery.clauses().isEmpty()) {\r\n             return new MatchAllDocsQuery();\r\n@@ -395,7 +402,7 @@ public class BoolQueryBuilder extends AbstractQueryBuilder<BoolQueryBuilder> {\r\n         return adjustPureNegative ? fixNegativeQueryIfNeeded(query) : query;\r\n     }\r\n \r\n-    private static void addBooleanClauses(QueryShardContext context, BooleanQuery.Builder booleanQueryBuilder,\r\n+    private static boolean addBooleanClauses(QueryShardContext context, BooleanQuery.Builder booleanQueryBuilder,\r\n                                           List<QueryBuilder> clauses, Occur occurs) throws IOException {\r\n         for (QueryBuilder query : clauses) {\r\n             Query luceneQuery = null;\r\n@@ -409,8 +416,12 @@ public class BoolQueryBuilder extends AbstractQueryBuilder<BoolQueryBuilder> {\r\n                     luceneQuery = query.toFilter(context);\r\n                     break;\r\n             }\r\n+            if ((occurs == Occur.FILTER || occurs == Occur.MUST) && luceneQuery.equals(new MatchNoDocsQuery())) {\r\n+                return false;\r\n+            }\r\n             booleanQueryBuilder.add(new BooleanClause(luceneQuery, occurs));\r\n         }\r\n+        return true;\r\n     }\r\n \r\n     @Override\r\n\r\n```\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/339968124","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-339968124","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":339968124,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTk2ODEyNA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-10-27T13:15:42Z","updated_at":"2017-10-27T13:15:42Z","author_association":"MEMBER","body":"We finally discussed this, sorry @uschindler it took us a while to get to this! We want to fix this, but instead of restoring the removed indices query, we would prefer to try and make term query against `_index`  work with aliases.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/339991759","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-339991759","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":339991759,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTk5MTc1OQ==","user":{"login":"carrino","id":978139,"node_id":"MDQ6VXNlcjk3ODEzOQ==","avatar_url":"https://avatars2.githubusercontent.com/u/978139?v=4","gravatar_id":"","url":"https://api.github.com/users/carrino","html_url":"https://github.com/carrino","followers_url":"https://api.github.com/users/carrino/followers","following_url":"https://api.github.com/users/carrino/following{/other_user}","gists_url":"https://api.github.com/users/carrino/gists{/gist_id}","starred_url":"https://api.github.com/users/carrino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/carrino/subscriptions","organizations_url":"https://api.github.com/users/carrino/orgs","repos_url":"https://api.github.com/users/carrino/repos","events_url":"https://api.github.com/users/carrino/events{/privacy}","received_events_url":"https://api.github.com/users/carrino/received_events","type":"User","site_admin":false},"created_at":"2017-10-27T14:43:49Z","updated_at":"2017-10-27T14:43:49Z","author_association":"NONE","body":"Did you talk about the query parse encapsulation aspect at all?  Moving from indicesQuery to bool query with termQuery can result in parse errors.  Do we want to make the booleanQueryBuilder change above to prevent this regression?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/339993768","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-339993768","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":339993768,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTk5Mzc2OA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-10-27T14:50:55Z","updated_at":"2017-10-27T14:50:55Z","author_association":"MEMBER","body":"We have yet to look at implementation details, we need to try it out in practice and see what comes out code-wise. Stay tuned.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/340011503","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-340011503","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":340011503,"node_id":"MDEyOklzc3VlQ29tbWVudDM0MDAxMTUwMw==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2017-10-27T15:55:16Z","updated_at":"2017-10-27T15:55:16Z","author_association":"CONTRIBUTOR","body":"I agree with @carrino - the good thing with the indices query was the fact that the query part that was not used for the current shard/index was not parsed at all. It was therefor possible to query 2 completely different indexes with incompatible schemas and have a separate inner query on both sides of the indices query. With the current \"bool\" approach, the full query is parsed for all shards and those shards that are from an incompatible index wil fail if you hit a query with field name checking (which is the default for most queries now).\r\n\r\nIn fact the indices query was something like an if/then/else statement in the query where you were able to pass a different query to an index based on the name. With a bool query that's not possible, as the parsing stage is done before execution.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/349323913","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-349323913","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":349323913,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTMyMzkxMw==","user":{"login":"acarstoiu","id":9536601,"node_id":"MDQ6VXNlcjk1MzY2MDE=","avatar_url":"https://avatars2.githubusercontent.com/u/9536601?v=4","gravatar_id":"","url":"https://api.github.com/users/acarstoiu","html_url":"https://github.com/acarstoiu","followers_url":"https://api.github.com/users/acarstoiu/followers","following_url":"https://api.github.com/users/acarstoiu/following{/other_user}","gists_url":"https://api.github.com/users/acarstoiu/gists{/gist_id}","starred_url":"https://api.github.com/users/acarstoiu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acarstoiu/subscriptions","organizations_url":"https://api.github.com/users/acarstoiu/orgs","repos_url":"https://api.github.com/users/acarstoiu/repos","events_url":"https://api.github.com/users/acarstoiu/events{/privacy}","received_events_url":"https://api.github.com/users/acarstoiu/received_events","type":"User","site_admin":false},"created_at":"2017-12-05T14:41:58Z","updated_at":"2017-12-05T14:41:58Z","author_association":"NONE","body":"@uschindler, @carrino: As a workaround, perform the index filtering in the URL path and apply the index-specific queries ANDed with a `term` filter on **`_type`**. Be aware that `has_parent/has_child` predicates need to be run with `ignore_unmapped` set.\r\nI know that this won't work in all cases, but you have a good chance. This solves also the matter with filtered aliases.\r\n\r\n**@ developers**: Thank you for keeping our minds sharp, but people use Elasticsearch precisely because they want to get rid of the workarounds and limitations they had when searching in traditional databases.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/368685426","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-368685426","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":368685426,"node_id":"MDEyOklzc3VlQ29tbWVudDM2ODY4NTQyNg==","user":{"login":"carrino","id":978139,"node_id":"MDQ6VXNlcjk3ODEzOQ==","avatar_url":"https://avatars2.githubusercontent.com/u/978139?v=4","gravatar_id":"","url":"https://api.github.com/users/carrino","html_url":"https://github.com/carrino","followers_url":"https://api.github.com/users/carrino/followers","following_url":"https://api.github.com/users/carrino/following{/other_user}","gists_url":"https://api.github.com/users/carrino/gists{/gist_id}","starred_url":"https://api.github.com/users/carrino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/carrino/subscriptions","organizations_url":"https://api.github.com/users/carrino/orgs","repos_url":"https://api.github.com/users/carrino/repos","events_url":"https://api.github.com/users/carrino/events{/privacy}","received_events_url":"https://api.github.com/users/carrino/received_events","type":"User","site_admin":false},"created_at":"2018-02-26T23:14:18Z","updated_at":"2018-02-26T23:14:18Z","author_association":"NONE","body":"Can we add the \"regression\" label to this also as it is a regression with es6 and is blocking upgrading?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/376035210","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-376035210","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":376035210,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NjAzNTIxMA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-03-26T03:17:14Z","updated_at":"2018-03-26T03:17:14Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/402851765","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-402851765","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":402851765,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMjg1MTc2NQ==","user":{"login":"tomcallahan","id":15988488,"node_id":"MDQ6VXNlcjE1OTg4NDg4","avatar_url":"https://avatars1.githubusercontent.com/u/15988488?v=4","gravatar_id":"","url":"https://api.github.com/users/tomcallahan","html_url":"https://github.com/tomcallahan","followers_url":"https://api.github.com/users/tomcallahan/followers","following_url":"https://api.github.com/users/tomcallahan/following{/other_user}","gists_url":"https://api.github.com/users/tomcallahan/gists{/gist_id}","starred_url":"https://api.github.com/users/tomcallahan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomcallahan/subscriptions","organizations_url":"https://api.github.com/users/tomcallahan/orgs","repos_url":"https://api.github.com/users/tomcallahan/repos","events_url":"https://api.github.com/users/tomcallahan/events{/privacy}","received_events_url":"https://api.github.com/users/tomcallahan/received_events","type":"User","site_admin":false},"created_at":"2018-07-05T21:03:34Z","updated_at":"2018-07-05T21:03:34Z","author_association":"CONTRIBUTOR","body":"@talevy can you elaborate why this was labeled discuss?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/403500114","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-403500114","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":403500114,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMzUwMDExNA==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2018-07-09T14:33:04Z","updated_at":"2018-07-09T14:33:04Z","author_association":"CONTRIBUTOR","body":"@tomcallahan for sure. this latest comment https://github.com/elastic/elasticsearch/issues/23306#issuecomment-339993768 didn't make it clear that we have a known plan on how to implement this, and so during our issue cleanup I thought it was worth bringing back up to make sure there is a plan. No other reason. If it is clear that we want to do this, and there is no discussion necessary, and only implementation details, then I'm happy to remove the label","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/403502831","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-403502831","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":403502831,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMzUwMjgzMQ==","user":{"login":"tomcallahan","id":15988488,"node_id":"MDQ6VXNlcjE1OTg4NDg4","avatar_url":"https://avatars1.githubusercontent.com/u/15988488?v=4","gravatar_id":"","url":"https://api.github.com/users/tomcallahan","html_url":"https://github.com/tomcallahan","followers_url":"https://api.github.com/users/tomcallahan/followers","following_url":"https://api.github.com/users/tomcallahan/following{/other_user}","gists_url":"https://api.github.com/users/tomcallahan/gists{/gist_id}","starred_url":"https://api.github.com/users/tomcallahan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomcallahan/subscriptions","organizations_url":"https://api.github.com/users/tomcallahan/orgs","repos_url":"https://api.github.com/users/tomcallahan/repos","events_url":"https://api.github.com/users/tomcallahan/events{/privacy}","received_events_url":"https://api.github.com/users/tomcallahan/received_events","type":"User","site_admin":false},"created_at":"2018-07-09T14:41:33Z","updated_at":"2018-07-09T14:41:33Z","author_association":"CONTRIBUTOR","body":"OK, let's take off the label until we know we have something specific to examine","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/498629997","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-498629997","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":498629997,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODYyOTk5Nw==","user":{"login":"barrucadu","id":75235,"node_id":"MDQ6VXNlcjc1MjM1","avatar_url":"https://avatars0.githubusercontent.com/u/75235?v=4","gravatar_id":"","url":"https://api.github.com/users/barrucadu","html_url":"https://github.com/barrucadu","followers_url":"https://api.github.com/users/barrucadu/followers","following_url":"https://api.github.com/users/barrucadu/following{/other_user}","gists_url":"https://api.github.com/users/barrucadu/gists{/gist_id}","starred_url":"https://api.github.com/users/barrucadu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/barrucadu/subscriptions","organizations_url":"https://api.github.com/users/barrucadu/orgs","repos_url":"https://api.github.com/users/barrucadu/repos","events_url":"https://api.github.com/users/barrucadu/events{/privacy}","received_events_url":"https://api.github.com/users/barrucadu/received_events","type":"User","site_admin":false},"created_at":"2019-06-04T11:20:12Z","updated_at":"2019-06-04T11:21:41Z","author_association":"NONE","body":"Is there any plan to fix this?\r\n\r\nI've just hit this issue migrating to ES6 and have come up with the solution of, when constructing a query, first making a request to ES to get the real name of an alias.  An additional round-trip per query isn't great.\r\n\r\nOur index names don't change often, so in principle we could cache them.  But when they do we don't have a great way of signalling to the process that it needs to clear its cache, short of restarting it.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/522192020","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-522192020","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":522192020,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMjE5MjAyMA==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2019-08-17T01:17:59Z","updated_at":"2019-08-17T01:17:59Z","author_association":"MEMBER","body":"I have been looking into a fix for this. It is slightly more tricky to support now that fully-qualified index names such as `cluster:index` can be provided in cross cluster search. As a simple example, a wildcard query like `a*b*c` becomes difficult to interpret -- we could try to resolve `a*b` as the cluster name and `c` as an index alias, or `a` as the cluster name, `b*c` as the alias.\r\n\r\nWe support wildcards in qualified index names in the `_search` URL -- to me it seems we should follow the same strategy for handling wildcards, first proposed in #23893. When specifying a remote index name, we would require that the term contain a `:` to allow for distinguishing the cluster and index components. Another option would be to disallow issuing wildcard queries against the `_index` field. To me this doesn't seem like a good choice because wildcard support can be quite useful and was added in response to a customer request (#25722). Tagging @javanna and @jimczi for their thoughts on the above.\r\n\r\nFinally, I haven’t yet dug into the query parsing issue @carrino raised, but will make sure to consider it while developing a fix.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/523856253","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-523856253","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":523856253,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzg1NjI1Mw==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2019-08-22T11:01:05Z","updated_at":"2019-08-22T11:01:05Z","author_association":"MEMBER","body":"@jtibshirani thanks for looking into this. I don't think CCS comes into play here, or maybe I don't follow why it may. We have prohibited using `:` in index and aliases names, hence if an index expression contains `:` it must be because it's referring to remote clusters. On the expansion of `a*b*c` I think that should only be expanded to local indices., while if you get something like `*:a*b*c` it refers to remote clusters matching the cluster expression at the left of `:`. Does this make sense to you?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/530609262","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-530609262","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":530609262,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMDYwOTI2Mg==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2019-09-11T23:54:42Z","updated_at":"2019-09-11T23:54:50Z","author_association":"MEMBER","body":"@javanna we are in agreement, my explanation above was just confusing :) I opened #46640 to add support for aliases, and included a couple open questions in the PR description.\r\n\r\nI am not sure of the best way forward in terms of the other discrepancy (where the `indices` query avoided parsing its subqueries unless they matched the current index). I'll mark this for discussion internally and follow-up with another comment or PR.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/534683720","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-534683720","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":534683720,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNDY4MzcyMA==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2019-09-24T18:17:51Z","updated_at":"2019-09-24T18:17:51Z","author_association":"MEMBER","body":"I looked into the parsing issue and do not see a good way to address it with the current API. It has been quite some time since we deprecated and removed the `indices` query, so we are not in a good position to reverse that decision.\r\n\r\nIt would be very helpful to collect up-to-date information about the remaining problems that were cited (query parsing and filtered aliases). If anyone is still running into problems related to the `indices` query removal, please open a new issue -- this will let us dig into those problems directly and get a sense of their priority.\r\n\r\nI am going to close the issue, since we merged #46640 to address the original problem (\"Term query on _index field does not take aliases into account\"), but will keep a lookout for new related issues!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/534889876","html_url":"https://github.com/elastic/elasticsearch/issues/23306#issuecomment-534889876","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23306","id":534889876,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNDg4OTg3Ng==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2019-09-25T07:22:09Z","updated_at":"2019-09-25T07:22:09Z","author_association":"CONTRIBUTOR","body":"Hi @jtibshirani, \r\n\r\nmany thanks for fixing this! I agree for the discussion of other problems (like not evaluating the query trees that are not part of the currently seen index) to have separate issues.\r\n\r\nI think with the current approach, filtered aliases should work (I have not tested them yet), as their filter is always applied as a filter on the whole query, so you would not see documents filtered away. With indices query it was more problematic regarding parsing of query parts.","performed_via_github_app":null}]