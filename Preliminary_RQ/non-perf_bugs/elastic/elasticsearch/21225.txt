{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/21225","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21225/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21225/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21225/events","html_url":"https://github.com/elastic/elasticsearch/issues/21225","id":186401257,"node_id":"MDU6SXNzdWUxODY0MDEyNTc=","number":21225,"title":"index_out_of_bounds_exception on script_score for log( 0 ) values","user":{"login":"gibrown","id":820871,"node_id":"MDQ6VXNlcjgyMDg3MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/820871?v=4","gravatar_id":"","url":"https://api.github.com/users/gibrown","html_url":"https://github.com/gibrown","followers_url":"https://api.github.com/users/gibrown/followers","following_url":"https://api.github.com/users/gibrown/following{/other_user}","gists_url":"https://api.github.com/users/gibrown/gists{/gist_id}","starred_url":"https://api.github.com/users/gibrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gibrown/subscriptions","organizations_url":"https://api.github.com/users/gibrown/orgs","repos_url":"https://api.github.com/users/gibrown/repos","events_url":"https://api.github.com/users/gibrown/events{/privacy}","received_events_url":"https://api.github.com/users/gibrown/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2016-10-31T21:23:19Z","updated_at":"2017-03-31T15:54:35Z","closed_at":"2017-03-31T15:54:35Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Elasticsearch version**: 2.3.3\r\n\r\n**Plugins installed**:\r\n- analysis-icu             2.3.3  \r\n- analysis-kuromoji        2.3.3  \r\n- analysis-smartcn         2.3.3  \r\n- analysis-stempel         2.3.3  \r\n- delete-by-query          2.3.3  \r\n- elasticsearch-inquisitor 0.1.2  \r\n- head                     master \r\n- lang-javascript          2.3.3  \r\n- langdetect               2.3.3.0\r\n- statsd                   2.3.3.0\r\n- whatson                  0.1.3\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nThe full query is below. The important part is this script_score:\r\n\r\n```\r\n            {\r\n              \"script_score\": {\r\n                \"script\": \"_score * ( log( doc[\\\"like_count\\\"].value )  + log( doc[\\\"comment_count\\\"].value ) + log( doc[\\\"comment_like_count\\\"].value ) ) / (doc[\\\"follower_count\\\"].value+1)\"\r\n              }\r\n            },\r\n```\r\n\r\nThis was running fine for us for a quite a while. Years i think. There is the obvious problem that taking the log of zeros could be a problem, but we were never seeing any errors. However, recently, in applications where we filtered to a small subset of the data (eg 20 posts) we started getting this exception:\r\n\r\n```index_out_of_bounds_exception: docID must be >= 0 and < maxDoc=2 (got docID=2145795851)```\r\n\r\nWe don't see the problem when querying the entire document collection. Nor when looking at large sets of it. Only if we filter it down to a small subset. I'm guessing that's because the docs without likers or commenters don't get scored high enough to ever have the script applied to them?\r\n\r\nWhen I change the script_score to add one to the values the problem is fixed:\r\n\r\n```\r\n            {\r\n              \"script_score\": {\r\n                \"script\": \"_score * ( log( doc[\\\"like_count\\\"].value + 1 )  + log( doc[\\\"comment_count\\\"].value + 1 ) + log( doc[\\\"comment_like_count\\\"].value + 1 ) ) / (doc[\\\"follower_count\\\"].value+1)\"\r\n              }\r\n            },\r\n```\r\n\r\nI have a not very well supported theory that we crossed over some unique id threshold (doc id plus version? we do a lot of reindexing) in Lucene which is then resulting in the script score not working properly when the log of a doc value of zero is calculated.\r\n\r\nEven if the script is expected to throw an exception, this seems like the wrong exception to be throwing.\r\n\r\n**The index**:\r\n\r\nAbout 1.5m docs that are updated in real time. Index has been around about 6 months when we reindexed after moving from 1.x. All docs are in a single shard that has replication set to 2.\r\n\r\n**A full example query**:\r\n\r\n```\r\nGET blog_network_7-1/post/_search\r\n{\r\n  \"from\": 0,\r\n  \"size\": 20,\r\n  \"fields\": [\r\n    \"blog_id\",\r\n    \"post_id\"\r\n  ],\r\n  \"query\": {\r\n    \"filtered\": {\r\n      \"query\": {\r\n        \"function_score\": {\r\n          \"query\": {\r\n            \"filtered\": {\r\n              \"query\": {\r\n                \"bool\": {\r\n                  \"must\": [\r\n                    {\r\n                      \"match_all\": []\r\n                    }\r\n                  ],\r\n                  \"should\": [\r\n                    {\r\n                      \"terms\": {\r\n                        \"liker_ids\": [\r\n                          23314024,\r\n                          1046316,\r\n                          17643383,\r\n                          9240,\r\n                          485502,\r\n                          90227721,\r\n                          68885068,\r\n                          2469444,\r\n                          22716504,\r\n                          1428,\r\n                          1042312,\r\n                          54448701,\r\n                          50392,\r\n                          47411601,\r\n                          15707027\r\n                        ]\r\n                      }\r\n                    },\r\n                    {\r\n                      \"terms\": {\r\n                        \"commenter_ids\": [\r\n                          23314024,\r\n                          1046316,\r\n                          17643383,\r\n                          9240,\r\n                          485502,\r\n                          90227721,\r\n                          68885068,\r\n                          2469444,\r\n                          22716504,\r\n                          1428,\r\n                          1042312,\r\n                          54448701,\r\n                          50392,\r\n                          47411601,\r\n                          15707027\r\n                        ]\r\n                      }\r\n                    },\r\n                    {\r\n                      \"terms\": {\r\n                        \"comment_liker_ids\": [\r\n                          23314024,\r\n                          1046316,\r\n                          17643383,\r\n                          9240,\r\n                          485502,\r\n                          90227721,\r\n                          68885068,\r\n                          2469444,\r\n                          22716504,\r\n                          1428,\r\n                          1042312,\r\n                          54448701,\r\n                          50392,\r\n                          47411601,\r\n                          15707027\r\n                        ]\r\n                      }\r\n                    },\r\n                    {\r\n                      \"terms\": {\r\n                        \"author_id\": [\r\n                          23314024,\r\n                          1046316,\r\n                          17643383,\r\n                          9240,\r\n                          485502,\r\n                          90227721,\r\n                          68885068,\r\n                          2469444,\r\n                          22716504,\r\n                          1428,\r\n                          1042312,\r\n                          54448701,\r\n                          50392,\r\n                          47411601,\r\n                          15707027\r\n                        ]\r\n                      }\r\n                    }\r\n                  ]\r\n                }\r\n              },\r\n              \"filter\": {\r\n                \"and\": [\r\n                  {\r\n                    \"not\": {\r\n                      \"term\": {\r\n                        \"commenter_ids\": 23314024\r\n                      }\r\n                    }\r\n                  },\r\n                  {\r\n                    \"not\": {\r\n                      \"term\": {\r\n                        \"liker_ids\": 23314024\r\n                      }\r\n                    }\r\n                  },\r\n                  {\r\n                    \"not\": {\r\n                      \"term\": {\r\n                        \"author_id\": 23314024\r\n                      }\r\n                    }\r\n                  },\r\n                  {\r\n                    \"not\": {\r\n                      \"term\": {\r\n                        \"tag.name.raw\": \"afk\"\r\n                      }\r\n                    }\r\n                  },\r\n                  {\r\n                    \"not\": {\r\n                      \"term\": {\r\n                        \"type\": \"xpost\"\r\n                      }\r\n                    }\r\n                  },\r\n                  {\r\n                    \"not\": {\r\n                      \"term\": {\r\n                        \"type\": \"xcomment\"\r\n                      }\r\n                    }\r\n                  },\r\n                  {\r\n                    \"range\": {\r\n                      \"like_count\": {\r\n                        \"gte\": \"0\"\r\n                      }\r\n                    }\r\n                  },\r\n                  {\r\n                    \"range\": {\r\n                      \"comment_count\": {\r\n                        \"gte\": \"0\"\r\n                      }\r\n                    }\r\n                  },\r\n                  {\r\n                    \"range\": {\r\n                      \"comment_like_count\": {\r\n                        \"gte\": \"0\"\r\n                      }\r\n                    }\r\n                  },\r\n                  {\r\n                    \"range\": {\r\n                      \"follower_count\": {\r\n                        \"gte\": \"0\"\r\n                      }\r\n                    }\r\n                  },\r\n                  {\r\n                    \"terms\": {\r\n                      \"blog_id\": [\r\n                        94879182,\r\n                        94883249,\r\n                        94888739,\r\n                        95118923,\r\n                        95158949,\r\n                        95165387,\r\n                        95173097,\r\n                        95157922,\r\n                        94880314,\r\n                        95164523,\r\n                        95165179,\r\n                        95182281,\r\n                        94882245,\r\n                        95183931,\r\n                        95540635,\r\n                        97339834,\r\n                        101514422,\r\n                        104797320,\r\n                        100850061,\r\n                        95184966,\r\n                        99486033,\r\n                        98380368,\r\n                        96562278,\r\n                        96013637,\r\n                        98153037,\r\n                        104515961,\r\n                        106101810,\r\n                        106129870\r\n                      ]\r\n                    }\r\n                  },\r\n                  {\r\n                    \"range\": {\r\n                      \"date_gmt\": {\r\n                        \"gte\": \"2016-10-29\"\r\n                      }\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          },\r\n          \"boost\": 10,\r\n          \"functions\": [\r\n            {\r\n              \"script_score\": {\r\n                \"script\": \"_score * ( log( doc[\\\"like_count\\\"].value )  + log( doc[\\\"comment_count\\\"].value ) + log( doc[\\\"comment_like_count\\\"].value ) ) / (doc[\\\"follower_count\\\"].value+1)\"\r\n              }\r\n            },\r\n            {\r\n              \"gauss\": {\r\n                \"date_gmt\": {\r\n                  \"origin\": \"2016-10-31\",\r\n                  \"scale\": \"5d\",\r\n                  \"decay\": 0.99999\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"score_mode\": \"multiply\",\r\n          \"boost_mode\": \"replace\"\r\n        }\r\n      },\r\n      \"filter\": {\r\n        \"bool\": {\r\n          \"must\": [\r\n            {\r\n              \"match_all\": {}\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"timeout\": \"2s\"\r\n}\r\n```\r\n\r\n**Log Message**:\r\n\r\n```\r\n[2016-10-31 20:31:46,901][DEBUG][action.search            ] [...] [blog_network_7-1][0], node[R4tr57I8SuymNEaQkgPw3w], [R], v[25], s[STARTED], a[id=U8msVTsnSKSqFMZ4q2jLyg]: Failed to execute [org.elasticsearch.action.search.SearchRequest@25c2b489]\r\nRemoteTransportException[[...][192.0.88.15:9303][indices:data/read/search[phase/query+fetch]]]; nested: NotSerializableExceptionWrapper[index_out_of_bounds_exception: docID must be >= 0 and < maxDoc=1 (got docID=2145795938)];\r\nCaused by: NotSerializableExceptionWrapper[index_out_of_bounds_exception: docID must be >= 0 and < maxDoc=1 (got docID=2145795938)]\r\n\tat org.apache.lucene.index.CodecReader.checkBounds(CodecReader.java:96)\r\n\tat org.apache.lucene.index.CodecReader.document(CodecReader.java:80)\r\n\tat org.apache.lucene.index.FilterLeafReader.document(FilterLeafReader.java:405)\r\n\tat org.elasticsearch.search.fetch.FetchPhase.loadStoredFields(FetchPhase.java:413)\r\n\tat org.elasticsearch.search.fetch.FetchPhase.createSearchHit(FetchPhase.java:213)\r\n\tat org.elasticsearch.search.fetch.FetchPhase.execute(FetchPhase.java:178)\r\n\tat org.elasticsearch.search.SearchService.executeFetchPhase(SearchService.java:480)\r\n\tat org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryFetchTransportHandler.messageReceived(SearchServiceTransportAction.java:392)\r\n\tat org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryFetchTransportHandler.messageReceived(SearchServiceTransportAction.java:389)\r\n\tat org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)\r\n\tat org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:75)\r\n\tat org.elasticsearch.transport.netty.MessageChannelHandler$RequestHandler.doRun(MessageChannelHandler.java:300)\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n```\r\n\r\n**Describe the feature**:\r\n\r\nSorting blog posts based on user similarity.\r\n","closed_by":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"performed_via_github_app":null}