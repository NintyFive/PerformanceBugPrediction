[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/54012342","html_url":"https://github.com/elastic/elasticsearch/issues/7515#issuecomment-54012342","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7515","id":54012342,"node_id":"MDEyOklzc3VlQ29tbWVudDU0MDEyMzQy","user":{"login":"hxuanji","id":4996057,"node_id":"MDQ6VXNlcjQ5OTYwNTc=","avatar_url":"https://avatars0.githubusercontent.com/u/4996057?v=4","gravatar_id":"","url":"https://api.github.com/users/hxuanji","html_url":"https://github.com/hxuanji","followers_url":"https://api.github.com/users/hxuanji/followers","following_url":"https://api.github.com/users/hxuanji/following{/other_user}","gists_url":"https://api.github.com/users/hxuanji/gists{/gist_id}","starred_url":"https://api.github.com/users/hxuanji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hxuanji/subscriptions","organizations_url":"https://api.github.com/users/hxuanji/orgs","repos_url":"https://api.github.com/users/hxuanji/repos","events_url":"https://api.github.com/users/hxuanji/events{/privacy}","received_events_url":"https://api.github.com/users/hxuanji/received_events","type":"User","site_admin":false},"created_at":"2014-09-01T03:30:03Z","updated_at":"2014-09-01T03:30:03Z","author_association":"NONE","body":"Hi Paulo and everyone,\n\nI just ran a few tests and also have same questions about it. \nThe situation can be produced by the gist: https://gist.github.com/hxuanji/d941c21fc75648ce7ba4\n\nOn the ES 1.3.2, the empty string cannot be find and the gist above can only find one document `{\"name\": null}`. And its explanation is \n`ConstantScore(cache(NotFilter(cache(BooleanFilter(_field_names:name)))))`\n\nBut on the ES 1.0.1, the final result of the gist can both find the empty-string and null-value documents. Also its explanation is \n`ConstantScore(cache(NotFilter(cache(BooleanFilter(name:[* TO *])))))`.\n\nIt seems the parsing rule changed, `_field_names` seems not consider some special null cases on the ES 1.3.2 ?! \nAnd this `_field_names` added from  #5659.\n\nAny ideas?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/54023841","html_url":"https://github.com/elastic/elasticsearch/issues/7515#issuecomment-54023841","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7515","id":54023841,"node_id":"MDEyOklzc3VlQ29tbWVudDU0MDIzODQx","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-09-01T06:40:16Z","updated_at":"2014-09-01T06:40:16Z","author_association":"CONTRIBUTOR","body":"I think this is a duplicate of https://github.com/elasticsearch/elasticsearch/issues/7348 ?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/54033271","html_url":"https://github.com/elastic/elasticsearch/issues/7515#issuecomment-54033271","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7515","id":54033271,"node_id":"MDEyOklzc3VlQ29tbWVudDU0MDMzMjcx","user":{"login":"hxuanji","id":4996057,"node_id":"MDQ6VXNlcjQ5OTYwNTc=","avatar_url":"https://avatars0.githubusercontent.com/u/4996057?v=4","gravatar_id":"","url":"https://api.github.com/users/hxuanji","html_url":"https://github.com/hxuanji","followers_url":"https://api.github.com/users/hxuanji/followers","following_url":"https://api.github.com/users/hxuanji/following{/other_user}","gists_url":"https://api.github.com/users/hxuanji/gists{/gist_id}","starred_url":"https://api.github.com/users/hxuanji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hxuanji/subscriptions","organizations_url":"https://api.github.com/users/hxuanji/orgs","repos_url":"https://api.github.com/users/hxuanji/repos","events_url":"https://api.github.com/users/hxuanji/events{/privacy}","received_events_url":"https://api.github.com/users/hxuanji/received_events","type":"User","site_admin":false},"created_at":"2014-09-01T08:23:34Z","updated_at":"2014-09-01T08:23:34Z","author_association":"NONE","body":"Hi @jprante,\n\nYes, I think so.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/54059855","html_url":"https://github.com/elastic/elasticsearch/issues/7515#issuecomment-54059855","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7515","id":54059855,"node_id":"MDEyOklzc3VlQ29tbWVudDU0MDU5ODU1","user":{"login":"paulovictorv","id":2207574,"node_id":"MDQ6VXNlcjIyMDc1NzQ=","avatar_url":"https://avatars1.githubusercontent.com/u/2207574?v=4","gravatar_id":"","url":"https://api.github.com/users/paulovictorv","html_url":"https://github.com/paulovictorv","followers_url":"https://api.github.com/users/paulovictorv/followers","following_url":"https://api.github.com/users/paulovictorv/following{/other_user}","gists_url":"https://api.github.com/users/paulovictorv/gists{/gist_id}","starred_url":"https://api.github.com/users/paulovictorv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulovictorv/subscriptions","organizations_url":"https://api.github.com/users/paulovictorv/orgs","repos_url":"https://api.github.com/users/paulovictorv/repos","events_url":"https://api.github.com/users/paulovictorv/events{/privacy}","received_events_url":"https://api.github.com/users/paulovictorv/received_events","type":"User","site_admin":false},"created_at":"2014-09-01T13:39:03Z","updated_at":"2014-09-01T13:39:03Z","author_association":"NONE","body":"Does adding an `empty` filter sounds silly? I think there's some good use cases for this.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/158668403","html_url":"https://github.com/elastic/elasticsearch/issues/7515#issuecomment-158668403","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7515","id":158668403,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODY2ODQwMw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-11-21T18:16:23Z","updated_at":"2015-11-21T18:16:23Z","author_association":"CONTRIBUTOR","body":"Here's a workaround:\n\n```\nPUT t/t/1\n{\n  \"textContent\": \"\"\n}\n\nPUT t/t/2\n{\n  \"textContent\": \"foo\"\n}\n\nGET t/t/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"exists\": {\n            \"field\": \"textContent\"\n          }\n        }\n      ],\n      \"must_not\": [\n        {\n          \"wildcard\": {\n            \"textContent\": \"*\"\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\nNot optimal, but it works\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/356327964","html_url":"https://github.com/elastic/elasticsearch/issues/7515#issuecomment-356327964","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7515","id":356327964,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NjMyNzk2NA==","user":{"login":"davidhesson","id":25374197,"node_id":"MDQ6VXNlcjI1Mzc0MTk3","avatar_url":"https://avatars1.githubusercontent.com/u/25374197?v=4","gravatar_id":"","url":"https://api.github.com/users/davidhesson","html_url":"https://github.com/davidhesson","followers_url":"https://api.github.com/users/davidhesson/followers","following_url":"https://api.github.com/users/davidhesson/following{/other_user}","gists_url":"https://api.github.com/users/davidhesson/gists{/gist_id}","starred_url":"https://api.github.com/users/davidhesson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidhesson/subscriptions","organizations_url":"https://api.github.com/users/davidhesson/orgs","repos_url":"https://api.github.com/users/davidhesson/repos","events_url":"https://api.github.com/users/davidhesson/events{/privacy}","received_events_url":"https://api.github.com/users/davidhesson/received_events","type":"User","site_admin":false},"created_at":"2018-01-09T16:02:32Z","updated_at":"2018-01-09T16:02:32Z","author_association":"NONE","body":"You're a life saver @clintongormley ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/437471090","html_url":"https://github.com/elastic/elasticsearch/issues/7515#issuecomment-437471090","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7515","id":437471090,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNzQ3MTA5MA==","user":{"login":"JnBrymn-EB","id":11304245,"node_id":"MDQ6VXNlcjExMzA0MjQ1","avatar_url":"https://avatars1.githubusercontent.com/u/11304245?v=4","gravatar_id":"","url":"https://api.github.com/users/JnBrymn-EB","html_url":"https://github.com/JnBrymn-EB","followers_url":"https://api.github.com/users/JnBrymn-EB/followers","following_url":"https://api.github.com/users/JnBrymn-EB/following{/other_user}","gists_url":"https://api.github.com/users/JnBrymn-EB/gists{/gist_id}","starred_url":"https://api.github.com/users/JnBrymn-EB/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JnBrymn-EB/subscriptions","organizations_url":"https://api.github.com/users/JnBrymn-EB/orgs","repos_url":"https://api.github.com/users/JnBrymn-EB/repos","events_url":"https://api.github.com/users/JnBrymn-EB/events{/privacy}","received_events_url":"https://api.github.com/users/JnBrymn-EB/received_events","type":"User","site_admin":false},"created_at":"2018-11-09T19:35:38Z","updated_at":"2018-11-09T19:35:38Z","author_association":"NONE","body":"I want to do the inverse of this:\r\n\r\n```json\r\n\"query\": {\r\n  \"bool\": {\r\n    \"filter\": {\r\n      \"wildcard\": {\r\n      \"name\": \"*\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAnd it appears to work. Any document with a name matches and any doc with null or '' name does not match. But I don't know why it works! I thought that the wildcard filter expands * to some number of terms so that if I have, say, 9999 terms in the name field, if I index a document with name = \"zzzzzzzzzzzzebra\" then that will be well past the term expansion and it shouldn't match. But it does. Why?\r\n\r\nSomehow I guess it's doing the `constant_score` thing [here](https://www.elastic.co/guide/en/elasticsearch/reference/2.3/query-dsl-multi-term-rewrite.html) and it's using the variant that doesn't hit the 1024 clause error. But how does that work? How can you look up anything in the index w/o having a `should` clause with all the terms inside of it?\r\n\r\n@clintongormley ?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/698783283","html_url":"https://github.com/elastic/elasticsearch/issues/7515#issuecomment-698783283","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7515","id":698783283,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODc4MzI4Mw==","user":{"login":"apuppy","id":6140347,"node_id":"MDQ6VXNlcjYxNDAzNDc=","avatar_url":"https://avatars1.githubusercontent.com/u/6140347?v=4","gravatar_id":"","url":"https://api.github.com/users/apuppy","html_url":"https://github.com/apuppy","followers_url":"https://api.github.com/users/apuppy/followers","following_url":"https://api.github.com/users/apuppy/following{/other_user}","gists_url":"https://api.github.com/users/apuppy/gists{/gist_id}","starred_url":"https://api.github.com/users/apuppy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apuppy/subscriptions","organizations_url":"https://api.github.com/users/apuppy/orgs","repos_url":"https://api.github.com/users/apuppy/repos","events_url":"https://api.github.com/users/apuppy/events{/privacy}","received_events_url":"https://api.github.com/users/apuppy/received_events","type":"User","site_admin":false},"created_at":"2020-09-25T07:56:15Z","updated_at":"2020-09-25T07:56:43Z","author_association":"NONE","body":"Now it's 2020. Still not found a better solution for \"field is not the empty string\". \r\nUsed the following solution, but is this the really good practice?\r\n```\r\n{\r\n\"wildcard\":{\"field_name\":\"*\"}\r\n}\r\n```","performed_via_github_app":null}]