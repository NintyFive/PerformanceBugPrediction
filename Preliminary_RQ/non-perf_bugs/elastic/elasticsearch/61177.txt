{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/61177","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61177/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61177/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61177/events","html_url":"https://github.com/elastic/elasticsearch/issues/61177","id":679628411,"node_id":"MDU6SXNzdWU2Nzk2Mjg0MTE=","number":61177,"title":"A bug on old discovery mode","user":{"login":"Charele","id":42658390,"node_id":"MDQ6VXNlcjQyNjU4Mzkw","avatar_url":"https://avatars2.githubusercontent.com/u/42658390?v=4","gravatar_id":"","url":"https://api.github.com/users/Charele","html_url":"https://github.com/Charele","followers_url":"https://api.github.com/users/Charele/followers","following_url":"https://api.github.com/users/Charele/following{/other_user}","gists_url":"https://api.github.com/users/Charele/gists{/gist_id}","starred_url":"https://api.github.com/users/Charele/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Charele/subscriptions","organizations_url":"https://api.github.com/users/Charele/orgs","repos_url":"https://api.github.com/users/Charele/repos","events_url":"https://api.github.com/users/Charele/events{/privacy}","received_events_url":"https://api.github.com/users/Charele/received_events","type":"User","site_admin":false},"labels":[{"id":881394071,"node_id":"MDU6TGFiZWw4ODEzOTQwNzE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Cluster%20Coordination","name":":Distributed/Cluster Coordination","color":"0e8a16","default":false,"description":"Cluster formation and cluster state publication, including cluster membership and fault detection."},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":1967496670,"node_id":"MDU6TGFiZWwxOTY3NDk2Njcw","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Distributed","name":"Team:Distributed","color":"fef2c0","default":false,"description":"Meta label for distributed team"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-08-15T19:17:46Z","updated_at":"2020-08-17T14:36:39Z","closed_at":"2020-08-17T14:36:39Z","author_association":"NONE","active_lock_reason":null,"body":"We know we can continue to use old discovery mode by setting:\r\ndiscovery.type: legacy-zen\r\n\r\nBug I find a question on it,when you create a index(5 shards)\r\nit throws the exception:\r\n\r\n\r\n[2020-08-16T02:53:12,323][WARN ][o.e.i.IndexService       ] [es0] [a] failed to write dangling indices state for index [a/9mZKbl38Q0mA6IAu1vmE6A]\r\norg.elasticsearch.gateway.WriteStateException: failed to write state to the first location tmp file C:\\apps\\es0\\data\\nodes\\0\\indices\\9mZKbl38Q0mA6IAu1vmE6A\\state-6.st.tmp\r\n        at org.elasticsearch.gateway.MetadataStateFormat.writeStateToFirstLocation(MetadataStateFormat.java:127) ~[elasticsearch-7.8.1.jar:7.8.1]\r\n        at org.elasticsearch.gateway.MetadataStateFormat.write(MetadataStateFormat.java:243) ~[elasticsearch-7.8.1.jar:7.8.1]\r\n        at org.elasticsearch.gateway.MetadataStateFormat.writeAndCleanup(MetadataStateFormat.java:185) ~[elasticsearch-7.8.1.jar:7.8.1]\r\n        at org.elasticsearch.index.IndexService.writeDanglingIndicesInfo(IndexService.java:348) [elasticsearch-7.8.1.jar:7.8.1]\r\n        at org.elasticsearch.indices.IndicesService$6.doRun(IndicesService.java:1603) [elasticsearch-7.8.1.jar:7.8.1]\r\n        at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:695) [elasticsearch-7.8.1.jar:7.8.1]\r\n        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-7.8.1.jar:7.8.1]\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) [?:?]\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) [?:?]\r\n        at java.lang.Thread.run(Thread.java:832) [?:?]\r\nCaused by: java.nio.file.FileAlreadyExistsException: C:\\apps\\es0\\data\\nodes\\0\\indices\\9mZKbl38Q0mA6IAu1vmE6A\\_state\\state-6.st.tmp\r\n        at sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:87) ~[?:?]\r\n        at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103) ~[?:?]\r\n        at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108) ~[?:?]\r\n        at sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:235) ~[?:?]\r\n        at java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:478) ~[?:?]\r\n        at java.nio.file.Files.newOutputStream(Files.java:224) ~[?:?]\r\n        at org.apache.lucene.store.FSDirectory$FSIndexOutput.<init>(FSDirectory.java:410) ~[lucene-core-8.5.1.jar:8.5.1 edb9fc409398f2c3446883f9f80595c884d245d0 - ivera - 2020-04-08 08:55:42]\r\n        at org.apache.lucene.store.FSDirectory$FSIndexOutput.<init>(FSDirectory.java:406) ~[lucene-core-8.5.1.jar:8.5.1 edb9fc409398f2c3446883f9f80595c884d245d0 - ivera - 2020-04-08 08:55:42]\r\n        at org.apache.lucene.store.FSDirectory.createOutput(FSDirectory.java:254) ~[lucene-core-8.5.1.jar:8.5.1 edb9fc409398f2c3446883f9f80595c884d245d0 - ivera - 2020-04-08 08:55:42]\r\n        at org.elasticsearch.gateway.MetadataStateFormat.writeStateToFirstLocation(MetadataStateFormat.java:107) ~[elasticsearch-7.8.1.jar:7.8.1]\r\n        ... 9 more\r\n\r\nThe old discovery mode will add the \"GatewayClusterApplier\", it will write the index meta data,\r\nbut we know the \"dangling process\" will also write the index., \r\n\r\nSo two threads handle same index meta data concurrently, the error happen...\r\n\r\nThread[elasticsearch[es0][DanglingIndices#updateTask][T#1],5,main]\r\nThread[elasticsearch[es0][clusterApplierService#updateTask][T#1],5,main]\r\n\r\nI can resolve it by setting \"gateway.write_dangling_indices_info: false\",\r\nI want to know do we have another better solution?(If I keep using old discovery mode)","closed_by":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"performed_via_github_app":null}