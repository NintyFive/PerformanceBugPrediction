{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/33888","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33888/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33888/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33888/events","html_url":"https://github.com/elastic/elasticsearch/issues/33888","id":362138845,"node_id":"MDU6SXNzdWUzNjIxMzg4NDU=","number":33888,"title":"Replicate closed indices","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"labels":[{"id":836504707,"node_id":"MDU6TGFiZWw4MzY1MDQ3MDc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Distributed","name":":Distributed/Distributed","color":"0e8a16","default":false,"description":"A catch all label for anything in the Distributed Area. If you aren't sure, use this one."},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null},{"id":1222918656,"node_id":"MDU6TGFiZWwxMjIyOTE4NjU2","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v7.2.0","name":"v7.2.0","color":"DDDDDD","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"assignees":[{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2018-09-20T11:13:29Z","updated_at":"2019-05-23T19:00:08Z","closed_at":"2019-05-23T18:59:31Z","author_association":"MEMBER","active_lock_reason":null,"body":"Closed indices currently have the downside that they are not replicated, so it's possible for an index to be closed, then the data lost because the node was terminated without saving the data.\r\n\r\nWe'd like to be able to close indices to remove any memory overhead of them, but still have the indices available for replication.\r\n\r\nSteps to accomplish this (not necessarily in order):\r\n\r\nRouting Table\r\n- [x] Keep closed indices in the routing table and reinitialize shards when closing an index (#38024)\r\n- [x] Add the no op engine (from #31141) and plug it as the default engine for closed index shards (#33903)\r\n- [x] Change the Gateway service to create routing table also for closed indices (#39249)\r\n- [x] Adapt the Synced Flush Service to work when routing table exist for closed indices (#37691)\r\n- [x] Ignore shard started requests when primary term does not match (#37899)\r\n- [x] Change IndexService so that it does not instantiates a mapper service/ index analyzers for closed indices (#40423)\r\n\r\nOpen/Close Index APIs\r\n- [x] Close Index API should wait for closed shards to be started after an index is closed (#38854 )\r\n- [x] Before closing an index, the Close Index API should mark the index as read-only, wait for replication operations to be terminated, flush the index and then close it (#36354). It requires:\r\n- [x] Change IndexShardOperationPermits.asyncBlockOperations to use an action listener with a Releasable (#34902)\r\n- [x] Add methods to IndexShard that allow to acquire all index operations permits (#35540)\r\n- [x] Transport Replication Action must check blocks while having the index operation permit (#35332, #35795, #36116)\r\n- [x] Add new type of TransportReplicationAction that can acquire all index operations permits during execution (#36249)\r\n- [x] Add unique id to cluster block (#36775)\r\n- [x] Release fresh listeners created by `?refresh=wait_for` when close indices or relocating shards (#36835)\r\n- [x] Close Index API should force a flush if a sync is needed (#37961)\r\n- [x] Close Index API should issue a synced-flush so recoveries can be noop (#41400)\r\n- [x] Remove index routing table of closed indices in mixed versions clusters (#38955)\r\n- [x] What if the primaries are not all allocated? The verification step cannot go through or shards might not be properly flushed. Should we close the close index API? Should we allocate an empty routing table that cannot be allocated at all? (#40867) Perhaps add a \"force\" option to close index API so that by default the closing fails on unallocated primaries, but is ignored when explicitly forcing it. (We discussed this during GAH and agreed not to make this change. Users can reopen the closed index in this case).\r\n- [x] Improve Close Index and Freeze Index responses to report acknowledgments and shard failures per indices (and adapt High Level Rest client) (https://github.com/elastic/elasticsearch/pull/39687) (We still need to adopt this enhancement in HLRC).\r\n- [x]  Flush shard at the end of recovery (so that newly recovered replica shard that are not yet in the in-sync allocations ids have 0 operations in translog if they are later opened as frozen) and add a test that closes an index under complex situations (e.g. network partitions) and checks that we can always allocate a \"closed\" or \"frozen\" primary. This is also the case with relocating shards (see https://github.com/elastic/elasticsearch/pull/37348#discussion_r247082240) (https://github.com/elastic/elasticsearch/pull/41660)\r\n\r\nEngine/Translog\r\n- [x] Add NoOpEngine as engine implementation to use for closed shards (#33903)\r\n- [x] Ensure that max seq # is equal to the global checkpoint when creating ReadOnlyEngines(#37426)\r\n- [x] Relax NoOpEngine constraints on translog (#37413)\r\n- [x] ReadOnlyEngine should update translog recovery state information (#39238)\r\n- [x] Should we clean/trim the translog when an index is closed?  (https://github.com/elastic/elasticsearch/issues/42445)\r\n- [x] Should we enforce a single index commit when an index is closed? (see [comment](https://github.com/elastic/elasticsearch/pull/38024/files#r252732420)) (https://github.com/elastic/elasticsearch/issues/42445)\r\n\r\nTests\r\n- [x] Add test for peer recovery of closed shard (#38421)\r\n- [x] Add test for replica-to-primary promotion of closed shard (#39110)\r\n- [x] Add test for closed indices and full cluster restart (#39249)\r\n- [x] Add test for closed indices and shard allocation filtering/awareness (#39186)\r\n- [x] Add test for closed indices and Cluster Reroute API (#39186) (#38421)\r\n- [x] Test restoring a snapshot into a closed index\r\n- [x] Handle rolling upgrade from a version of ES that does not allocated closed indices to a version that does (maybe just an allocation decider that prevents the closed index shards to be assigned as long as all node are not on the current version?)\r\n- [x] Adapt IndexShardIT.testIndexCanChangeCustomDataPath() to closed indices (#38327)\r\n- [x] Adapt IndicesServicesTests.testPendingTasks() to closed indices (#38326)\r\n- [x] Test the Cluster Shard Allocation Explain API with closed indices (#38631)\r\n- [x] Test that the \"direct close\" method still work in 7.x (removed in 8.0 with #38955, see https://github.com/elastic/elasticsearch/pull/38955/files#r257718054)\r\n\r\nOthers\r\n- [x] Cluster Reroute API and force allocation of closed primary shard (#42458)?\r\n- [x] Cluster Health API and closed indices (#39364)\r\n- [x] Recovery API and closed indices (#38421)\r\n- [x] Indices Stats for closed indices will report 0 docs for closed indices/shards (#34079 #39698)\r\n- [x] TransportUnfollowAction should increase settings version (#37859)\r\n- [x] Freezing an index should increase its index settings version (#37813)\r\n- [x]  RestoreService should update primary terms when restoring shards of existing indices (#38177)\r\n- [x] Do not schedule refresh/translog fsync/translog trim/globalcheckpoint sync tasks for closed indices (#38329)\r\n- [x] Investigate the behavior of retention leases sync task with replicated closed indices (see https://github.com/elastic/elasticsearch/pull/38329#discussion_r255407823) (won't do)\r\n- [x] Closing an index was sometimes used to change the custom data path setting (see #38327) but with replicated closed indices it means copying files of a live index. We can maybe extend the shrink/split API to do this instead or maybe just don't support changing the setting. (We discussed and agreed not to implement this feature for now given its complexity. We will revisit it in the future.)\r\n- [x] Investigate how to snapshot closed indices (#39644)\r\n- [x] How to integrate closed replicated indices with closed follower indices (see https://github.com/elastic/elasticsearch/pull/38767#issuecomment-463095506) (https://github.com/elastic/elasticsearch/issues/42442)\r\n- [x] GlobalCheckpointSyncAction triggers some warnings in logs after a replica to primary promotion. Should we just prevent maybeSyncGlobalCheckpoint() to be executed if the shard is closed? (#41874)","closed_by":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"performed_via_github_app":null}