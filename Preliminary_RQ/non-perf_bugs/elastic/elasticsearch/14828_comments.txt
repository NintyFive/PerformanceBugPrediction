[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/158016366","html_url":"https://github.com/elastic/elasticsearch/issues/14828#issuecomment-158016366","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14828","id":158016366,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODAxNjM2Ng==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-11-19T10:26:19Z","updated_at":"2015-11-19T10:26:19Z","author_association":"CONTRIBUTOR","body":"The issue reproduces for me. It seems to be because we try to upgrade the mappings before plugins have a chance to register mappers. So any mappers that are registered through a plugin are affected by this problem.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/158019173","html_url":"https://github.com/elastic/elasticsearch/issues/14828#issuecomment-158019173","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14828","id":158019173,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODAxOTE3Mw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-11-19T10:41:35Z","updated_at":"2015-11-19T10:41:35Z","author_association":"CONTRIBUTOR","body":"@rjernst @imotov Any ideas if/how we can fix it?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/158020306","html_url":"https://github.com/elastic/elasticsearch/issues/14828#issuecomment-158020306","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14828","id":158020306,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODAyMDMwNg==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2015-11-19T10:47:26Z","updated_at":"2015-11-19T10:47:26Z","author_association":"MEMBER","body":"I think we need to move registering mappers to the node level (which makes sense anyways).  Instead of getting the mapper service to register them, the mapper service should take in all the custom types as args. I'm not sure if it will directly fix the issue, but at least then it seems like it should be possible. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/158035899","html_url":"https://github.com/elastic/elasticsearch/issues/14828#issuecomment-158035899","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14828","id":158035899,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODAzNTg5OQ==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2015-11-19T11:59:06Z","updated_at":"2015-11-19T11:59:06Z","author_association":"MEMBER","body":"> It seems to be because we try to upgrade the mappings before plugins have a chance to register mappers. So any mappers that are registered through a plugin are affected by this problem.\n\n++ That explains as well issues we have seen for mapper attachments plugin. See https://github.com/elastic/elasticsearch-mapper-attachments/issues/180\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/158461064","html_url":"https://github.com/elastic/elasticsearch/issues/14828#issuecomment-158461064","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14828","id":158461064,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODQ2MTA2NA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-11-20T17:04:27Z","updated_at":"2015-11-20T17:04:27Z","author_association":"CONTRIBUTOR","body":"> I think we need to move registering mappers to the node level\n\nI opened #14896 for this.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/159653609","html_url":"https://github.com/elastic/elasticsearch/issues/14828#issuecomment-159653609","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14828","id":159653609,"node_id":"MDEyOklzc3VlQ29tbWVudDE1OTY1MzYwOQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-11-25T15:59:16Z","updated_at":"2015-11-25T15:59:16Z","author_association":"CONTRIBUTOR","body":"This has been fixed by #14896 and then I added tests in #14977. This will be fixed as of 2.1.1. I considered backporting to 2.0 as well but there were so many conflicts that I got a bit afraid of doing more harm than good by introducing new bugs.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/165955063","html_url":"https://github.com/elastic/elasticsearch/issues/14828#issuecomment-165955063","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14828","id":165955063,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NTk1NTA2Mw==","user":{"login":"jmreymond","id":8809413,"node_id":"MDQ6VXNlcjg4MDk0MTM=","avatar_url":"https://avatars3.githubusercontent.com/u/8809413?v=4","gravatar_id":"","url":"https://api.github.com/users/jmreymond","html_url":"https://github.com/jmreymond","followers_url":"https://api.github.com/users/jmreymond/followers","following_url":"https://api.github.com/users/jmreymond/following{/other_user}","gists_url":"https://api.github.com/users/jmreymond/gists{/gist_id}","starred_url":"https://api.github.com/users/jmreymond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmreymond/subscriptions","organizations_url":"https://api.github.com/users/jmreymond/orgs","repos_url":"https://api.github.com/users/jmreymond/repos","events_url":"https://api.github.com/users/jmreymond/events{/privacy}","received_events_url":"https://api.github.com/users/jmreymond/received_events","type":"User","site_admin":false},"created_at":"2015-12-19T06:37:22Z","updated_at":"2015-12-19T06:37:22Z","author_association":"NONE","body":"same issue in 2.1.1\nroot@dedi:/usr/share/elasticsearch# ./bin/plugin list\nInstalled plugins in /usr/share/elasticsearch/plugins:\n    - marvel-agent\n    - license\n    - mapper-attachments\n\n[2015-12-19 07:31:59,246][INFO ][node                     ] [Manta] version[2.1.1], pid[28723], build[40e2c53/2015-12-15T13:05:55Z]\n[2015-12-19 07:31:59,247][INFO ][node                     ] [Manta] initializing ...\n[2015-12-19 07:32:00,314][INFO ][plugins                  ] [Manta] loaded [license, marvel-agent, mapper-attachments], sites []\n[2015-12-19 07:32:00,356][INFO ][env                      ] [Manta] using [1] data paths, mounts [[/home (/dev/sda4)]], net usable_space [641.6gb], net total_space [857.8gb], spins? [possibly], types [ext4]\n[2015-12-19 07:32:04,427][ERROR][gateway                  ] [Manta] failed to read local state, exiting...\njava.lang.IllegalStateException: unable to upgrade the mappings for the index [evol2], reason: [Mapper for [docsfile] conflicts with existing mapping in other types:\n[mapper [docsfile.content] cannot be changed from type [string] to [attachment]]]\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:339)\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.upgradeIndexMetaData(MetaDataIndexUpgradeService.java:116)\n    at org.elasticsearch.gateway.GatewayMetaState.pre20Upgrade(GatewayMetaState.java:228)\n    at org.elasticsearch.gateway.GatewayMetaState.<init>(GatewayMetaState.java:87)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:422)\n    at org.elasticsearch.common.inject.DefaultConstructionProxyFactory$1.newInstance(DefaultConstructionProxyFactory.java:56)\n    at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:86)\n    at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:104)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:47)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:887)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:43)\n    at org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:59)\n    at org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:46)\n    at org.elasticsearch.common.inject.SingleParameterInjector.inject(SingleParameterInjector.java:42)\n    at org.elasticsearch.common.inject.SingleParameterInjector.getAll(SingleParameterInjector.java:66)\n    at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:85)\n    at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:104)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:47)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:887)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:43)\n    at org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:59)\n    at org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:46)\n    at org.elasticsearch.common.inject.SingleParameterInjector.inject(SingleParameterInjector.java:42)\n    at org.elasticsearch.common.inject.SingleParameterInjector.getAll(SingleParameterInjector.java:66)\n    at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:85)\n    at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:104)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:47)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:887)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:43)\n    at org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:59)\n    at org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:46)\n    at org.elasticsearch.common.inject.InjectorBuilder$1.call(InjectorBuilder.java:201)\n    at org.elasticsearch.common.inject.InjectorBuilder$1.call(InjectorBuilder.java:193)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:880)\n    at org.elasticsearch.common.inject.InjectorBuilder.loadEagerSingletons(InjectorBuilder.java:193)\n    at org.elasticsearch.common.inject.InjectorBuilder.injectDynamically(InjectorBuilder.java:175)\n    at org.elasticsearch.common.inject.InjectorBuilder.build(InjectorBuilder.java:110)\n    at org.elasticsearch.common.inject.Guice.createInjector(Guice.java:93)\n    at org.elasticsearch.common.inject.Guice.createInjector(Guice.java:70)\n    at org.elasticsearch.common.inject.ModulesBuilder.createInjector(ModulesBuilder.java:46)\n    at org.elasticsearch.node.Node.<init>(Node.java:200)\n    at org.elasticsearch.node.Node.<init>(Node.java:128)\n    at org.elasticsearch.node.NodeBuilder.build(NodeBuilder.java:145)\n    at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:178)\n    at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:285)\n    at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:35)\nCaused by: java.lang.IllegalArgumentException: Mapper for [docsfile] conflicts with existing mapping in other types:\n[mapper [docsfile.content] cannot be changed from type [string] to [attachment]]\n    at org.elasticsearch.index.mapper.FieldTypeLookup.checkCompatibility(FieldTypeLookup.java:117)\n    at org.elasticsearch.index.mapper.MapperService.checkNewMappersCompatibility(MapperService.java:368)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:319)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:265)\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:333)\n    ... 48 more\n[2015-12-19 07:32:04,659][ERROR][gateway                  ] [Manta] failed to read local state, exiting...\njava.lang.IllegalStateException: unable to upgrade the mappings for the index [evol2], reason: [Mapper for [docsfile] conflicts with existing mapping in other types:\n[mapper [docsfile.content] cannot be changed from type [string] to [attachment]]]\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:339)\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.upgradeIndexMetaData(MetaDataIndexUpgradeService.java:116)\n    at org.elasticsearch.gateway.GatewayMetaState.pre20Upgrade(GatewayMetaState.java:228)\n    at org.elasticsearch.gateway.GatewayMetaState.<init>(GatewayMetaState.java:87)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:422)\n    at org.elasticsearch.common.inject.DefaultConstructionProxyFactory$1.newInstance(DefaultConstructionProxyFactory.java:56)\n    at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:86)\n    at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:104)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:47)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:887)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:43)\n    at org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:59)\n    at org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:46)\n    at org.elasticsearch.common.inject.SingleParameterInjector.inject(SingleParameterInjector.java:42)\n    at org.elasticsearch.common.inject.SingleParameterInjector.getAll(SingleParameterInjector.java:66)\n    at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:85)\n    at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:104)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:47)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:887)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:43)\n    at org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:59)\n    at org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:46)\n    at org.elasticsearch.common.inject.InjectorBuilder$1.call(InjectorBuilder.java:201)\n    at org.elasticsearch.common.inject.InjectorBuilder$1.call(InjectorBuilder.java:193)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:880)\n    at org.elasticsearch.common.inject.InjectorBuilder.loadEagerSingletons(InjectorBuilder.java:193)\n    at org.elasticsearch.common.inject.InjectorBuilder.injectDynamically(InjectorBuilder.java:175)\n    at org.elasticsearch.common.inject.InjectorBuilder.build(InjectorBuilder.java:110)\n    at org.elasticsearch.common.inject.Guice.createInjector(Guice.java:93)\n    at org.elasticsearch.common.inject.Guice.createInjector(Guice.java:70)\n    at org.elasticsearch.common.inject.ModulesBuilder.createInjector(ModulesBuilder.java:46)\n    at org.elasticsearch.node.Node.<init>(Node.java:200)\n    at org.elasticsearch.node.Node.<init>(Node.java:128)\n    at org.elasticsearch.node.NodeBuilder.build(NodeBuilder.java:145)\n    at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:178)\n    at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:285)\n    at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:35)\nCaused by: java.lang.IllegalArgumentException: Mapper for [docsfile] conflicts with existing mapping in other types:\n[mapper [docsfile.content] cannot be changed from type [string] to [attachment]]\n    at org.elasticsearch.index.mapper.FieldTypeLookup.checkCompatibility(FieldTypeLookup.java:117)\n    at org.elasticsearch.index.mapper.MapperService.checkNewMappersCompatibility(MapperService.java:368)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:319)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:265)\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:333)\n    ... 39 more\n[2015-12-19 07:32:04,808][ERROR][gateway                  ] [Manta] failed to read local state, exiting...\njava.lang.IllegalStateException: unable to upgrade the mappings for the index [evol2], reason: [Mapper for [docsfile] conflicts with existing mapping in other types:\n[mapper [docsfile.content] cannot be changed from type [string] to [attachment]]]\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:339)\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.upgradeIndexMetaData(MetaDataIndexUpgradeService.java:116)\n    at org.elasticsearch.gateway.GatewayMetaState.pre20Upgrade(GatewayMetaState.java:228)\n    at org.elasticsearch.gateway.GatewayMetaState.<init>(GatewayMetaState.java:87)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:422)\n    at org.elasticsearch.common.inject.DefaultConstructionProxyFactory$1.newInstance(DefaultConstructionProxyFactory.java:56)\n    at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:86)\n    at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:104)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:47)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:887)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:43)\n    at org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:59)\n    at org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:46)\n    at org.elasticsearch.common.inject.InjectorBuilder$1.call(InjectorBuilder.java:201)\n    at org.elasticsearch.common.inject.InjectorBuilder$1.call(InjectorBuilder.java:193)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:880)\n    at org.elasticsearch.common.inject.InjectorBuilder.loadEagerSingletons(InjectorBuilder.java:193)\n    at org.elasticsearch.common.inject.InjectorBuilder.injectDynamically(InjectorBuilder.java:175)\n    at org.elasticsearch.common.inject.InjectorBuilder.build(InjectorBuilder.java:110)\n    at org.elasticsearch.common.inject.Guice.createInjector(Guice.java:93)\n    at org.elasticsearch.common.inject.Guice.createInjector(Guice.java:70)\n    at org.elasticsearch.common.inject.ModulesBuilder.createInjector(ModulesBuilder.java:46)\n    at org.elasticsearch.node.Node.<init>(Node.java:200)\n    at org.elasticsearch.node.Node.<init>(Node.java:128)\n    at org.elasticsearch.node.NodeBuilder.build(NodeBuilder.java:145)\n    at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:178)\n    at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:285)\n    at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:35)\nCaused by: java.lang.IllegalArgumentException: Mapper for [docsfile] conflicts with existing mapping in other types:\n[mapper [docsfile.content] cannot be changed from type [string] to [attachment]]\n    at org.elasticsearch.index.mapper.FieldTypeLookup.checkCompatibility(FieldTypeLookup.java:117)\n    at org.elasticsearch.index.mapper.MapperService.checkNewMappersCompatibility(MapperService.java:368)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:319)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:265)\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:333)\n    ... 30 more\n[2015-12-19 07:32:04,824][ERROR][bootstrap                ] Guice Exception: java.lang.IllegalStateException: unable to upgrade the mappings for the index [evol2], reason: [Mapper for [docsfile] conflicts with existing mapping in other types:\n[mapper [docsfile.content] cannot be changed from type [string] to [attachment]]]\nLikely root cause: java.lang.IllegalArgumentException: Mapper for [docsfile] conflicts with existing mapping in other types:\n[mapper [docsfile.content] cannot be changed from type [string] to [attachment]]\n    at org.elasticsearch.index.mapper.FieldTypeLookup.checkCompatibility(FieldTypeLookup.java:117)\n    at org.elasticsearch.index.mapper.MapperService.checkNewMappersCompatibility(MapperService.java:368)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:319)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:265)\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.checkMappingsCompatibility(MetaDataIndexUpgradeService.java:333)\n    at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.upgradeIndexMetaData(MetaDataIndexUpgradeService.java:116)\n    at org.elasticsearch.gateway.GatewayMetaState.pre20Upgrade(GatewayMetaState.java:228)\n    at org.elasticsearch.gateway.GatewayMetaState.<init>(GatewayMetaState.java:87)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:422)\n    at <<<guice>>>\n    at org.elasticsearch.node.Node.<init>(Node.java:200)\n    at org.elasticsearch.node.Node.<init>(Node.java:128)\n    at org.elasticsearch.node.NodeBuilder.build(NodeBuilder.java:145)\n    at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:178)\n    at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:285)\n    at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:35)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/165957678","html_url":"https://github.com/elastic/elasticsearch/issues/14828#issuecomment-165957678","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14828","id":165957678,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NTk1NzY3OA==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2015-12-19T07:34:53Z","updated_at":"2015-12-19T07:34:53Z","author_association":"MEMBER","body":"@jmreymond could you open a new issue about this? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/166245909","html_url":"https://github.com/elastic/elasticsearch/issues/14828#issuecomment-166245909","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14828","id":166245909,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NjI0NTkwOQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-12-21T09:31:15Z","updated_at":"2015-12-21T09:31:15Z","author_association":"CONTRIBUTOR","body":"@jmreymond @dadoonet This is a different issue actually:\n\n```\nunable to upgrade the mappings for the index [evol2], reason: [Mapper for [docsfile] conflicts with existing mapping in other types:\n[mapper [docsfile.content] cannot be changed from type [string] to [attachment]]]\n```\n\nThe `evol2` index has at least two types, one of them is declaring `docsfile.content` as a `string` field and another type is declaring it as an `attachment` field. This kind of configuration caused bad bugs in elasticsearch 1.x, which is why it is not supported  anymore as of version 2.0 and the only fix is to reindex your data in different indices.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/166294728","html_url":"https://github.com/elastic/elasticsearch/issues/14828#issuecomment-166294728","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14828","id":166294728,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NjI5NDcyOA==","user":{"login":"maksutspahi","id":4736471,"node_id":"MDQ6VXNlcjQ3MzY0NzE=","avatar_url":"https://avatars1.githubusercontent.com/u/4736471?v=4","gravatar_id":"","url":"https://api.github.com/users/maksutspahi","html_url":"https://github.com/maksutspahi","followers_url":"https://api.github.com/users/maksutspahi/followers","following_url":"https://api.github.com/users/maksutspahi/following{/other_user}","gists_url":"https://api.github.com/users/maksutspahi/gists{/gist_id}","starred_url":"https://api.github.com/users/maksutspahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maksutspahi/subscriptions","organizations_url":"https://api.github.com/users/maksutspahi/orgs","repos_url":"https://api.github.com/users/maksutspahi/repos","events_url":"https://api.github.com/users/maksutspahi/events{/privacy}","received_events_url":"https://api.github.com/users/maksutspahi/received_events","type":"User","site_admin":false},"created_at":"2015-12-21T12:32:23Z","updated_at":"2015-12-21T12:32:23Z","author_association":"NONE","body":"Hello, I could not figure out how to make this work with java client api in 2.1.1 when using local node which I am using for integration tests. \nMy settings:\n\n```\nSettings settings = Settings.put(\"plugin.types\", MapperMurmur3Plugin.class.getName())\n```\n\nWith the local node:\n\n```\nNode node = nodeBuilder()\n                .settings(settings)\n                .local(true).node();\n```\n\nWhile index creation it gives me :\n\n```\nCaused by: org.elasticsearch.index.mapper.MapperParsingException: no handler for type [murmur3] declared on field [hash]\n    at org.elasticsearch.index.mapper.core.TypeParsers.parseMultiField(TypeParsers.java:362) ~[elasticsearch-2.1.1.jar:2.1.1]\n    at org.elasticsearch.index.mapper.core.StringFieldMapper$TypeParser.parse(StringFieldMapper.java:203) ~[elasticsearch-2.1.1.jar:2.1.1]\n    at org.elasticsearch.index.mapper.object.ObjectMapper$TypeParser.parseProperties(ObjectMapper.java:310) ~[elasticsearch-2.1.1.jar:2.1.1]\n    at org.elasticsearch.index.mapper.object.ObjectMapper$TypeParser.parseObjectOrDocumentTypeProperties(ObjectMapper.java:223) ~[elasticsearch-2.1.1.jar:2.1.1]\n    at org.elasticsearch.index.mapper.object.RootObjectMapper$TypeParser.parse(RootObjectMapper.java:139) ~[elasticsearch-2.1.1.jar:2.1.1]\n    at org.elasticsearch.index.mapper.DocumentMapperParser.parse(DocumentMapperParser.java:140) ~[elasticsearch-2.1.1.jar:2.1.1]\n    at org.elasticsearch.index.mapper.DocumentMapperParser.parseCompressed(DocumentMapperParser.java:121) ~[elasticsearch-2.1.1.jar:2.1.1]\n    at org.elasticsearch.index.mapper.MapperService.parse(MapperService.java:391) ~[elasticsearch-2.1.1.jar:2.1.1]\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:265) ~[elasticsearch-2.1.1.jar:2.1.1]\n    at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$2.execute(MetaDataCreateIndexService.java:378) ~[elasticsearch-2.1.1.jar:2.1.1]\n```\n\nMy mapping is same as I posted in the first comment.\n\nThis error does not happen in 2.0.0 client. Is it related with this issue or am I not registering the plugin in the correct way ?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/166305093","html_url":"https://github.com/elastic/elasticsearch/issues/14828#issuecomment-166305093","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14828","id":166305093,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NjMwNTA5Mw==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2015-12-21T13:25:48Z","updated_at":"2015-12-21T13:25:48Z","author_association":"MEMBER","body":"@maksutspahi You can not start a plugin like this from 2.1.\nRead also this: https://discuss.elastic.co/t/es-plugin-add-to-node-server-programmatically/37616/5\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/166535987","html_url":"https://github.com/elastic/elasticsearch/issues/14828#issuecomment-166535987","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14828","id":166535987,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NjUzNTk4Nw==","user":{"login":"maksutspahi","id":4736471,"node_id":"MDQ6VXNlcjQ3MzY0NzE=","avatar_url":"https://avatars1.githubusercontent.com/u/4736471?v=4","gravatar_id":"","url":"https://api.github.com/users/maksutspahi","html_url":"https://github.com/maksutspahi","followers_url":"https://api.github.com/users/maksutspahi/followers","following_url":"https://api.github.com/users/maksutspahi/following{/other_user}","gists_url":"https://api.github.com/users/maksutspahi/gists{/gist_id}","starred_url":"https://api.github.com/users/maksutspahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maksutspahi/subscriptions","organizations_url":"https://api.github.com/users/maksutspahi/orgs","repos_url":"https://api.github.com/users/maksutspahi/repos","events_url":"https://api.github.com/users/maksutspahi/events{/privacy}","received_events_url":"https://api.github.com/users/maksutspahi/received_events","type":"User","site_admin":false},"created_at":"2015-12-22T07:07:52Z","updated_at":"2015-12-22T07:07:52Z","author_association":"NONE","body":"Thank you that worked. Also this bug seems fixed in 2.1.1 thanks.\n","performed_via_github_app":null}]