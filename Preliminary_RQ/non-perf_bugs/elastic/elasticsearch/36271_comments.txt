[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/444534626","html_url":"https://github.com/elastic/elasticsearch/issues/36271#issuecomment-444534626","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36271","id":444534626,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NDUzNDYyNg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-12-05T15:51:37Z","updated_at":"2018-12-05T15:51:37Z","author_association":"COLLABORATOR","body":"Pinging @elastic/ml-core","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/444831583","html_url":"https://github.com/elastic/elasticsearch/issues/36271#issuecomment-444831583","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36271","id":444831583,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NDgzMTU4Mw==","user":{"login":"dimitris-athanasiou","id":9351617,"node_id":"MDQ6VXNlcjkzNTE2MTc=","avatar_url":"https://avatars3.githubusercontent.com/u/9351617?v=4","gravatar_id":"","url":"https://api.github.com/users/dimitris-athanasiou","html_url":"https://github.com/dimitris-athanasiou","followers_url":"https://api.github.com/users/dimitris-athanasiou/followers","following_url":"https://api.github.com/users/dimitris-athanasiou/following{/other_user}","gists_url":"https://api.github.com/users/dimitris-athanasiou/gists{/gist_id}","starred_url":"https://api.github.com/users/dimitris-athanasiou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dimitris-athanasiou/subscriptions","organizations_url":"https://api.github.com/users/dimitris-athanasiou/orgs","repos_url":"https://api.github.com/users/dimitris-athanasiou/repos","events_url":"https://api.github.com/users/dimitris-athanasiou/events{/privacy}","received_events_url":"https://api.github.com/users/dimitris-athanasiou/received_events","type":"User","site_admin":false},"created_at":"2018-12-06T10:53:14Z","updated_at":"2018-12-06T10:53:14Z","author_association":"CONTRIBUTOR","body":"This is an interesting problem. The `.ml-state` index is created from a template when the first state document is being indexed. This means it requires at least one job was created and run up to the point it persists its state (in particular, up to the point the job was closed or enough time passed for a periodic persist to occur).\r\n\r\nIn addition, when a job is opened, we validate that the `.ml-state` index primary shards are active **if the index exists**. The reason we need to do this validation is to ensure that when a job is relocated, allocation will be delayed until the `.ml-state` (and other needed indices) are available. This is crucial as in case of nodes dropping it is highly possible the cluster will also miss data nodes, some of them containing shards of the ML indices.\r\n\r\nHaving explained the above, we can now understand why the reported problem happens. The flow of the recognizer is as follows:\r\n\r\n- Create all jobs\r\n- Create all datafeeds\r\n- Serially open each job and start its datafeed\r\n\r\nThe last bit is key as it means that by the time we open the 2nd, 3rd, etc. job, the previous are already running. Then it is possible that timing gives rise to the issue. One of the previous jobs starts persisting its state while another job is being created. The `.ml-state` index exists in time for the validation but it has just been created so its primaries are not active yet and the validation fails.\r\n\r\nNote this specific scenario may only happen once: when the cluster is new.  I will try to list options for solving this in a subsequent comment.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/444842180","html_url":"https://github.com/elastic/elasticsearch/issues/36271#issuecomment-444842180","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36271","id":444842180,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NDg0MjE4MA==","user":{"login":"dimitris-athanasiou","id":9351617,"node_id":"MDQ6VXNlcjkzNTE2MTc=","avatar_url":"https://avatars3.githubusercontent.com/u/9351617?v=4","gravatar_id":"","url":"https://api.github.com/users/dimitris-athanasiou","html_url":"https://github.com/dimitris-athanasiou","followers_url":"https://api.github.com/users/dimitris-athanasiou/followers","following_url":"https://api.github.com/users/dimitris-athanasiou/following{/other_user}","gists_url":"https://api.github.com/users/dimitris-athanasiou/gists{/gist_id}","starred_url":"https://api.github.com/users/dimitris-athanasiou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dimitris-athanasiou/subscriptions","organizations_url":"https://api.github.com/users/dimitris-athanasiou/orgs","repos_url":"https://api.github.com/users/dimitris-athanasiou/repos","events_url":"https://api.github.com/users/dimitris-athanasiou/events{/privacy}","received_events_url":"https://api.github.com/users/dimitris-athanasiou/received_events","type":"User","site_admin":false},"created_at":"2018-12-06T11:34:16Z","updated_at":"2018-12-06T11:34:16Z","author_association":"CONTRIBUTOR","body":"I am listing solutions I could come up with here. I have a clear favourite after discussing this with some folk from the elasticsearch team but I'll list the others too (even the bad ones).\r\n\r\n- Change the UI to first open all jobs and then start the datafeeds\r\n\r\nThis is a superficial solution. It would fix the problem with our QA tests. It would also reduce the chances of the problem happening to our users. But it doesn't prevent the problem happening in some other way.\r\n\r\n- Skip the primary-shard-active validation when a job is opened for the first time.\r\n\r\nWhen the very first job is opened we don't do that check as the `.ml-state` index does not exist. We could remove the check entirely when jobs are opened (as opposed to jobs being reallocated). \r\n\r\n- Wait for yellow status for the indices we need\r\n\r\nThis seems to be the most suitable solution. The index health API allows us to do this easily. Note that we cannot do that during the node selection as that should not be blocking. But we can do it in the master operation of `TransportOpenJobAction` before we start the persistent task. It would still be possible that the index becomes unassigned by the time we try to assign the job but that would imply perturbations in the cluster and it would probably be ok to fail opening the job.\r\n\r\nWhat are your thoughts @elastic/ml-core ?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/445386578","html_url":"https://github.com/elastic/elasticsearch/issues/36271#issuecomment-445386578","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36271","id":445386578,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NTM4NjU3OA==","user":{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false},"created_at":"2018-12-07T22:34:15Z","updated_at":"2018-12-07T22:34:15Z","author_association":"MEMBER","body":"I second the the `Wait for yellow status for the indices we need`. \r\n\r\nThis is essentially what we are doing anyways, except we are relying on the user to wait an amount of time before opening a second job.\r\n\r\nIf the status persists to not be at least yellow (with some acceptable timeout), or if it downgrades before the persistent task can be assigned to a node, throwing an error is acceptable (as you have stated). \r\n\r\nUnanswered question:\r\n* How long should we wait for the indices to be in the yellow status?\r\n* From where is this timeout value provided?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/445773234","html_url":"https://github.com/elastic/elasticsearch/issues/36271#issuecomment-445773234","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36271","id":445773234,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NTc3MzIzNA==","user":{"login":"dimitris-athanasiou","id":9351617,"node_id":"MDQ6VXNlcjkzNTE2MTc=","avatar_url":"https://avatars3.githubusercontent.com/u/9351617?v=4","gravatar_id":"","url":"https://api.github.com/users/dimitris-athanasiou","html_url":"https://github.com/dimitris-athanasiou","followers_url":"https://api.github.com/users/dimitris-athanasiou/followers","following_url":"https://api.github.com/users/dimitris-athanasiou/following{/other_user}","gists_url":"https://api.github.com/users/dimitris-athanasiou/gists{/gist_id}","starred_url":"https://api.github.com/users/dimitris-athanasiou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dimitris-athanasiou/subscriptions","organizations_url":"https://api.github.com/users/dimitris-athanasiou/orgs","repos_url":"https://api.github.com/users/dimitris-athanasiou/repos","events_url":"https://api.github.com/users/dimitris-athanasiou/events{/privacy}","received_events_url":"https://api.github.com/users/dimitris-athanasiou/received_events","type":"User","site_admin":false},"created_at":"2018-12-10T10:51:29Z","updated_at":"2018-12-10T10:51:29Z","author_association":"CONTRIBUTOR","body":"> How long should we wait for the indices to be in the yellow status?\r\n\r\nThe default timeout for the health status API is 30 seconds. That should be more than enough for a healthy cluster to activate the primaries of a freshly created index.\r\n\r\n> From where is this timeout value provided?\r\n\r\nThat is a good question. We could reuse the open job request's timeout. But then we need to do more work to properly account for the timeout through the action's different steps. Unfortunately, the infrastructure to do this properly isn't quite there. We give it a try, just accumulate timeouts, or just apply the default timeout separately from the action's timeout. The first one should be the correct behaviour but we need to balance out effort making this call.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/445819248","html_url":"https://github.com/elastic/elasticsearch/issues/36271#issuecomment-445819248","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36271","id":445819248,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NTgxOTI0OA==","user":{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false},"created_at":"2018-12-10T13:43:13Z","updated_at":"2018-12-10T13:43:13Z","author_association":"MEMBER","body":">The first one should be the correct behaviour but we need to balance out effort making this call.\r\n\r\nI agree, since the default timeout for waiting against the health status API is 30 seconds, that is probably OK. \r\n\r\nThe only thing that *SLIGHTLY* concerns me is when the user sets the timeout on the API to less than 30 seconds. \r\n\r\nHowever, that should be rare as the default value is high (30 min) and this would nudge users to providing a higher timeout value where an additional 30 seconds of wait would not be that big of an issue. \r\n\r\nI say lets keep it simple and not worry about accumulating the timeouts just yet. If this turns out to be painful, then we can do the extra work on down the line. I think the bigger concern is that this particular bug even exists. An API not timing out exactly when you request it to seems like a smaller issue to me.  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/459027951","html_url":"https://github.com/elastic/elasticsearch/issues/36271#issuecomment-459027951","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36271","id":459027951,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1OTAyNzk1MQ==","user":{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false},"created_at":"2019-01-30T17:13:29Z","updated_at":"2019-01-30T17:13:29Z","author_association":"MEMBER","body":"@pheyos This issue should be fix due to: https://github.com/elastic/elasticsearch/pull/37483\r\n\r\nCan you verify?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/459324962","html_url":"https://github.com/elastic/elasticsearch/issues/36271#issuecomment-459324962","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36271","id":459324962,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1OTMyNDk2Mg==","user":{"login":"pheyos","id":1945390,"node_id":"MDQ6VXNlcjE5NDUzOTA=","avatar_url":"https://avatars0.githubusercontent.com/u/1945390?v=4","gravatar_id":"","url":"https://api.github.com/users/pheyos","html_url":"https://github.com/pheyos","followers_url":"https://api.github.com/users/pheyos/followers","following_url":"https://api.github.com/users/pheyos/following{/other_user}","gists_url":"https://api.github.com/users/pheyos/gists{/gist_id}","starred_url":"https://api.github.com/users/pheyos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pheyos/subscriptions","organizations_url":"https://api.github.com/users/pheyos/orgs","repos_url":"https://api.github.com/users/pheyos/repos","events_url":"https://api.github.com/users/pheyos/events{/privacy}","received_events_url":"https://api.github.com/users/pheyos/received_events","type":"User","site_admin":false},"created_at":"2019-01-31T12:23:09Z","updated_at":"2019-01-31T12:23:09Z","author_association":"NONE","body":"@benwtrent I've tried in diverse test environments, but with your fix I was not able to reproduce this issue any more :tada: thanks for fixing this!","performed_via_github_app":null}]