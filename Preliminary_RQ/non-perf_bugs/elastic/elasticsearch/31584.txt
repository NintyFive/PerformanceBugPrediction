{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/31584","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31584/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31584/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31584/events","html_url":"https://github.com/elastic/elasticsearch/issues/31584","id":335920573,"node_id":"MDU6SXNzdWUzMzU5MjA1NzM=","number":31584,"title":"FR: Connection metadata file option","user":{"login":"chriswhite199","id":1356204,"node_id":"MDQ6VXNlcjEzNTYyMDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1356204?v=4","gravatar_id":"","url":"https://api.github.com/users/chriswhite199","html_url":"https://github.com/chriswhite199","followers_url":"https://api.github.com/users/chriswhite199/followers","following_url":"https://api.github.com/users/chriswhite199/following{/other_user}","gists_url":"https://api.github.com/users/chriswhite199/gists{/gist_id}","starred_url":"https://api.github.com/users/chriswhite199/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chriswhite199/subscriptions","organizations_url":"https://api.github.com/users/chriswhite199/orgs","repos_url":"https://api.github.com/users/chriswhite199/repos","events_url":"https://api.github.com/users/chriswhite199/events{/privacy}","received_events_url":"https://api.github.com/users/chriswhite199/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-06-26T17:28:26Z","updated_at":"2018-06-27T12:47:47Z","closed_at":"2018-06-27T01:58:47Z","author_association":"NONE","active_lock_reason":null,"body":"**JSON Connection File**\r\n\r\nWould it be possible to add a CLI option, similar to the `-p` PID file option, to output a connection metadata file (say JSON), with connection information (hostname, port) for the HTTP (and while it's still around / not-quite-deprecated-yet, Transport too):\r\n\r\n`bin/elasticsearch -c/tmp/es-connection.json -p/tmp/es.pid`\r\n\r\n```json\r\n{\r\n   \"transport_bound_addresses\": [ \"127.0.0.1:9300\" ],\r\n   \"http_bound_addresses\": [ \"127.0.0.1:9200\" ]\r\n}\r\n```\r\n\r\nThis is particularly useful when spinning up an ES node for integration testing purposes (esp now running embedded node is not supported).\r\n\r\nGranted, you can start the node passing in the desired ports for both HTTP and Transport, but the specific use case i'm targetting is running integration tests on a CI server, where multiple integration tests might be running in parallel - so i can't hard code a port for conflict reasons.\r\n\r\nIn my case, i'm using the `-Ehttp.port=9200-9300` CLI argument to get the first free port, but at the moment i have to parse the log file for the spun up node to extract the actual port used (which is brittle if the Logger name, `TransportClient` and `HttpServerTransport` changes, or the strings used in BoundAddress.toString() change - `bound_addresses`)\r\n\r\nIf there was a connection metadata file, then this would be much easier and certainly less brittle to future changes\r\n\r\nFor background: https://discuss.elastic.co/t/discovering-dynamic-port-assignment/137328","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}