{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/38586","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38586/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38586/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38586/events","html_url":"https://github.com/elastic/elasticsearch/issues/38586","id":407900150,"node_id":"MDU6SXNzdWU0MDc5MDAxNTA=","number":38586,"title":"Elasticsearch throws 503 SERVICE_UNAVAILABLE instead of 429 TOO_MANY_REQUESTS","user":{"login":"jainankitk","id":8193480,"node_id":"MDQ6VXNlcjgxOTM0ODA=","avatar_url":"https://avatars2.githubusercontent.com/u/8193480?v=4","gravatar_id":"","url":"https://api.github.com/users/jainankitk","html_url":"https://github.com/jainankitk","followers_url":"https://api.github.com/users/jainankitk/followers","following_url":"https://api.github.com/users/jainankitk/following{/other_user}","gists_url":"https://api.github.com/users/jainankitk/gists{/gist_id}","starred_url":"https://api.github.com/users/jainankitk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jainankitk/subscriptions","organizations_url":"https://api.github.com/users/jainankitk/orgs","repos_url":"https://api.github.com/users/jainankitk/repos","events_url":"https://api.github.com/users/jainankitk/events{/privacy}","received_events_url":"https://api.github.com/users/jainankitk/received_events","type":"User","site_admin":false},"labels":[{"id":152517143,"node_id":"MDU6TGFiZWwxNTI1MTcxNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/REST%20API","name":":Core/Infra/REST API","color":"0e8a16","default":false,"description":"REST infrastructure and utilities"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2019-02-07T21:14:31Z","updated_at":"2019-03-08T16:29:14Z","closed_at":"2019-03-08T16:08:56Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 6.2.3\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`): 10.0.2\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): 4.14.62-65.117.amzn1.x86_64\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nElasticsearch returns 503 SERVICE_UNAVAILABLE instead of 429 TOO_MANY_REQUESTS if EsRejectedExecutionException happens during the fetch phase.\r\nThis is not server side issue and 429 is the right status code to let client know about throttling\r\n\r\n**Steps to reproduce**:\r\n\r\nSince, error is hard to reproduce without sending lot of requests, below approach can be used to mock the issue.\r\n\r\n 1. Add following code snippet to line 99 of EsThreadPoolExecutor.java\r\n```\r\nfor (StackTraceElement ste : Thread.currentThread().getStackTrace()) {\r\n      if (ste.toString().contains(\"org.elasticsearch.action.search.FetchSearchPhase\")) {\r\n          throw new EsRejectedExecutionException(\"Thread pool exception during fetch phase\");\r\n      }\r\n}\r\n```\r\nThis ensures that execution for fetch phase is rejected irrespective of thread_pool and queue size\r\n \r\n2. Compile the jar using gradle and start elasticsearch cluster with new jar\r\n3. Create test-index, add some data and run query requesting documents from stored fields\r\n4. 503 Unavailable error comes\r\n```\r\n* Connected to localhost (127.0.0.1) port 9200 (#0)\r\n> POST /test-index/_search?request_cache=false&pretty HTTP/1.1\r\n> Host: localhost:9200\r\n> User-Agent: curl/7.53.1\r\n> Accept: */*\r\n> Content-Type: application/json\r\n> Content-Length: 343\r\n> \r\n} [343 bytes data]\r\n* upload completely sent off: 343 out of 343 bytes\r\n< HTTP/1.1 503 Service Unavailable\r\n< content-type: application/json; charset=UTF-8\r\n< content-length: 340\r\n< \r\n{ [340 bytes data]\r\n* Connection #0 to host localhost left intact\r\n{\r\n  \"error\" : {\r\n    \"root_cause\" : [ ],\r\n    \"type\" : \"search_phase_execution_exception\",\r\n    \"reason\" : \"\",\r\n    \"phase\" : \"fetch\",\r\n    \"grouped\" : true,\r\n    \"failed_shards\" : [ ],\r\n    \"caused_by\" : {\r\n      \"type\" : \"es_rejected_execution_exception\",\r\n      \"reason\" : \"Thread pool exception during fetch phase\"\r\n    }\r\n  },\r\n  \"status\" : 503\r\n}\r\n```\r\n**Provide logs (if relevant)**:\r\nBelow is the stack trace\r\n```\r\n[2019-02-07T17:52:43,917][WARN ][r.suppressed             ] path: /test-index/_search, params: {pretty=, index=test-index, request_cache=false}\r\norg.elasticsearch.action.search.SearchPhaseExecutionException:\r\n        at org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseFailure(AbstractSearchAsyncAction.java:274) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.FetchSearchPhase$1.onFailure(FetchSearchPhase.java:92) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.common.util.concurrent.AbstractRunnable.onRejection(AbstractRunnable.java:63) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.onRejection(ThreadContext.java:662) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.common.util.concurrent.TimedRunnable.onRejection(TimedRunnable.java:50) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor.doExecute(EsThreadPoolExecutor.java:109) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.common.util.concurrent.QueueResizingEsThreadPoolExecutor.doExecute(QueueResizingEsThreadPoolExecutor.java:88) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor.execute(EsThreadPoolExecutor.java:93) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.AbstractSearchAsyncAction.execute(AbstractSearchAsyncAction.java:289) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.FetchSearchPhase.run(FetchSearchPhase.java:81) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.AbstractSearchAsyncAction.executePhase(AbstractSearchAsyncAction.java:146) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.AbstractSearchAsyncAction.executeNextPhase(AbstractSearchAsyncAction.java:140) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseDone(AbstractSearchAsyncAction.java:243) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.InitialSearchPhase.successfulShardExecution(InitialSearchPhase.java:251) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.InitialSearchPhase.onShardResult(InitialSearchPhase.java:239) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.InitialSearchPhase.access$200(InitialSearchPhase.java:49) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.InitialSearchPhase$2.lambda$innerOnResponse$0(InitialSearchPhase.java:212) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.InitialSearchPhase.maybeFork(InitialSearchPhase.java:171) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.InitialSearchPhase.access$000(InitialSearchPhase.java:49) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.InitialSearchPhase$2.innerOnResponse(InitialSearchPhase.java:212) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.SearchActionListener.onResponse(SearchActionListener.java:45) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.SearchActionListener.onResponse(SearchActionListener.java:29) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.SearchExecutionStatsCollector.onResponse(SearchExecutionStatsCollector.java:68) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.SearchExecutionStatsCollector.onResponse(SearchExecutionStatsCollector.java:36) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.ActionListenerResponseHandler.handleResponse(ActionListenerResponseHandler.java:46) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.SearchTransportService$ConnectionCountingHandler.handleResponse(SearchTransportService.java:518) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleResponse(TransportService.java:1091) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.transport.TransportService$DirectResponseChannel.processResponse(TransportService.java:1160) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.transport.TransportService$DirectResponseChannel.sendResponse(TransportService.java:1150) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.transport.TransportService$DirectResponseChannel.sendResponse(TransportService.java:1139) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.transport.TaskTransportChannel.sendResponse(TaskTransportChannel.java:54) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.SearchTransportService$6$1.onResponse(SearchTransportService.java:376) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.action.search.SearchTransportService$6$1.onResponse(SearchTransportService.java:372) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.search.SearchService$2.onResponse(SearchService.java:316) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.search.SearchService$2.onResponse(SearchService.java:312) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.search.SearchService$3.doRun(SearchService.java:1002) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:672) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.common.util.concurrent.TimedRunnable.doRun(TimedRunnable.java:41) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-6.2.3.jar:6.2.3]\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135) [?:?]\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) [?:?]\r\n        at java.lang.Thread.run(Thread.java:844) [?:?]\r\nCaused by: org.elasticsearch.common.util.concurrent.EsRejectedExecutionException: Thread pool exception during fetch phase\r\n        at org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor.doExecute(EsThreadPoolExecutor.java:101) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n        ... 37 more\r\n```\r\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}