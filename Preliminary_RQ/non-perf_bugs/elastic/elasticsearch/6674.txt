{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/6674","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6674/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6674/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6674/events","html_url":"https://github.com/elastic/elasticsearch/issues/6674","id":36959734,"node_id":"MDU6SXNzdWUzNjk1OTczNA==","number":6674,"title":"Wildcards for fields in fuzzy like this query","user":{"login":"klappvisor","id":1488028,"node_id":"MDQ6VXNlcjE0ODgwMjg=","avatar_url":"https://avatars2.githubusercontent.com/u/1488028?v=4","gravatar_id":"","url":"https://api.github.com/users/klappvisor","html_url":"https://github.com/klappvisor","followers_url":"https://api.github.com/users/klappvisor/followers","following_url":"https://api.github.com/users/klappvisor/following{/other_user}","gists_url":"https://api.github.com/users/klappvisor/gists{/gist_id}","starred_url":"https://api.github.com/users/klappvisor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/klappvisor/subscriptions","organizations_url":"https://api.github.com/users/klappvisor/orgs","repos_url":"https://api.github.com/users/klappvisor/repos","events_url":"https://api.github.com/users/klappvisor/events{/privacy}","received_events_url":"https://api.github.com/users/klappvisor/received_events","type":"User","site_admin":false},"labels":[{"id":92913858,"node_id":"MDU6TGFiZWw5MjkxMzg1OA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/good%20first%20issue","name":"good first issue","color":"07569b","default":true,"description":"low hanging fruit"}],"state":"closed","locked":false,"assignee":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"assignees":[{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2014-07-02T08:01:28Z","updated_at":"2015-11-21T15:33:19Z","closed_at":"2015-11-21T15:33:19Z","author_association":"NONE","active_lock_reason":null,"body":"Right now you can use fields property in fuzzy like this query to specify list of fields to query against, but if your documents have nested objects inside and you want to search only against all fields inside particular nested object, you have to specify list of all properties with full path. For example with the following document:\n\n```\n{\"id\": \"some_id\",\n\"en\": {\n    \"title\": \"en_title\",\n    \"description\": \"en_description\",\n    /* ... */\n},\n\"nl\": {\n    \"title\": \"nl_title\",\n    \"description\": \"nl_description\",\n    /* ... */\n}}\n```\n\nIn some cases you want to search only through **en** subdocument, then fuzzy like this should be:\n\n```\n{\"query\": {\n    \"flt\": {\n        \"like_text\": \"search string\",\n        \"fields\": [ \"en.title\", \"en.description\", /* all other fields under en */ ]\n}}}\n```\n\nIt would be convenient to use wildcards to specify fields especially if you don't have defined list of fields here or list is too big, to have query like this:\n\n```\n{\"query\": {\n    \"flt\": {\n        \"like_text\": \"search string\",\n        \"fields\": [ \"en.*\" ]\n}}}\n```\n\nMay be it's worth to add include/exclude patterns. It's more or less the same feature as for _source: [source filtering](http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-request-source-filtering.html)\n\n```\n{\"query\": {\n    \"flt\": {\n        \"like_text\": \"search string\",\n        \"fields\": {\n            \"include\": [ \"obj1.*\", \"obj2.*\" ],\n            \"exclude\": [ \"categories.*\" ]\n}}}}\n```\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}