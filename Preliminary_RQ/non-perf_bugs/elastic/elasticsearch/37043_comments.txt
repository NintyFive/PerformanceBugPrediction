[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/450651635","html_url":"https://github.com/elastic/elasticsearch/issues/37043#issuecomment-450651635","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37043","id":450651635,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MDY1MTYzNQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-12-31T14:27:04Z","updated_at":"2018-12-31T14:27:04Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/463776636","html_url":"https://github.com/elastic/elasticsearch/issues/37043#issuecomment-463776636","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37043","id":463776636,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mzc3NjYzNg==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2019-02-14T20:14:14Z","updated_at":"2019-02-14T20:14:14Z","author_association":"CONTRIBUTOR","body":"@jpountz  Do we want to expose `LongDistanceFeatureQuery` in elasticsearch and create a corresponding QueryBuilder for it?  For example :\r\n\r\n```js\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"filter\": [\r\n        {\r\n          \"match\": {\r\n            \"content\": \"2016\"\r\n          }\r\n        }\r\n      ],\r\n      \"should\": [\r\n        {\r\n          \"long_distance_rank_feature\": {\r\n            \"field\": \"timestamp\",\r\n            \"boost\": 2,\r\n            \"pivot\" : 10,\r\n            \"origin\" : 1550175141321\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/463791698","html_url":"https://github.com/elastic/elasticsearch/issues/37043#issuecomment-463791698","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37043","id":463791698,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mzc5MTY5OA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2019-02-14T20:53:55Z","updated_at":"2019-02-14T20:53:55Z","author_association":"CONTRIBUTOR","body":"I think we should (#33382). But for this particular issue the idea is to rewrite the search request _under the hood_ to something that returns the same hits but runs faster.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/464025981","html_url":"https://github.com/elastic/elasticsearch/issues/37043#issuecomment-464025981","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37043","id":464025981,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NDAyNTk4MQ==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2019-02-15T12:10:45Z","updated_at":"2019-02-15T12:11:48Z","author_association":"CONTRIBUTOR","body":"@jpountz  thanks for reminding about #33382.  \r\n\r\n> But for this particular issue the idea is to rewrite the search request _under the hood_ to something that returns the same hits but runs faster.\r\n\r\nRight,  I was trying to do rewrite in `SearchSourceBuilder::rewrite` method, and noticed first we will need a `QueryBuilder` for `LongDistanceFeatureQuery`.\r\n\r\n```java\r\nfinal long origin = (sort.order() == SortOrder.DESC) ? Long.MAX_VALUE : Long.MIN_VALUE;\r\nfinal long pivotDistance = 5;  // ? not sure what to choose for pivot distance\r\nQuery query = LongPoint.newDistanceFeatureQuery(fieldName, 1, origin, pivotDistance);\r\n\r\nBoolQueryBuilder rewritten = new BoolQueryBuilder();\r\nrewritten.should();  // need a QueryBuilder for DistanceFeatureQuery to insert it here\r\nrewritten.filter(queryBuilder); // filter for original query\r\n```\r\n\r\nI guess the plan is first to implement  #33382","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/464047929","html_url":"https://github.com/elastic/elasticsearch/issues/37043#issuecomment-464047929","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37043","id":464047929,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NDA0NzkyOQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2019-02-15T13:19:08Z","updated_at":"2019-02-15T13:19:08Z","author_association":"CONTRIBUTOR","body":"> do rewrite in `SearchSourceBuilder::rewrite`\r\n\r\nIn my opinion one challenge with this optimization is that we also need to modify the produced `FieldDoc.fields` to remove the first element. I suspect implementing this optimization in SearchSourceBuilder#rewrite is going to make it challenging to also modify the produced TopFieldDocs when appropriate. It might have downsides that I haven't though about, but my initial idea was to do it in QueryPhase#execute by modifying the query before execute runs, and modifying the produced top docs before they are set on the search context.\r\n\r\n> not sure what to choose for pivot distance\r\n\r\nThe tricky bit with origin and pivotDistance is that we should pick values that make it unlikely that different long values map to the same float score. We'd probably need to use either the min or max value on the shard as the origin, and something in the order of (max-min)/2 for the pivot value.\r\n\r\n> I guess the plan is first to implement #33382\r\n\r\nThat works for me if that makes things easier.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/468832636","html_url":"https://github.com/elastic/elasticsearch/issues/37043#issuecomment-468832636","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37043","id":468832636,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2ODgzMjYzNg==","user":{"login":"dvisztempacct","id":37460069,"node_id":"MDQ6VXNlcjM3NDYwMDY5","avatar_url":"https://avatars3.githubusercontent.com/u/37460069?v=4","gravatar_id":"","url":"https://api.github.com/users/dvisztempacct","html_url":"https://github.com/dvisztempacct","followers_url":"https://api.github.com/users/dvisztempacct/followers","following_url":"https://api.github.com/users/dvisztempacct/following{/other_user}","gists_url":"https://api.github.com/users/dvisztempacct/gists{/gist_id}","starred_url":"https://api.github.com/users/dvisztempacct/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dvisztempacct/subscriptions","organizations_url":"https://api.github.com/users/dvisztempacct/orgs","repos_url":"https://api.github.com/users/dvisztempacct/repos","events_url":"https://api.github.com/users/dvisztempacct/events{/privacy}","received_events_url":"https://api.github.com/users/dvisztempacct/received_events","type":"User","site_admin":false},"created_at":"2019-03-01T22:24:20Z","updated_at":"2019-03-01T22:24:20Z","author_association":"NONE","body":"I was linked to this issue by very helpful people at the elasticon ama booth.\r\n\r\nDo I understand correctly that this enhancement would mean I could avoid the big sort-all-matching-documents operation when I want to sort by the value from a single field?\r\n\r\nThat would be a massive performance improvement for me!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/468834147","html_url":"https://github.com/elastic/elasticsearch/issues/37043#issuecomment-468834147","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37043","id":468834147,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2ODgzNDE0Nw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2019-03-01T22:30:54Z","updated_at":"2019-03-01T22:30:54Z","author_association":"CONTRIBUTOR","body":"@dvisztempacct You got it right.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/468837374","html_url":"https://github.com/elastic/elasticsearch/issues/37043#issuecomment-468837374","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37043","id":468837374,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2ODgzNzM3NA==","user":{"login":"dvisztempacct","id":37460069,"node_id":"MDQ6VXNlcjM3NDYwMDY5","avatar_url":"https://avatars3.githubusercontent.com/u/37460069?v=4","gravatar_id":"","url":"https://api.github.com/users/dvisztempacct","html_url":"https://github.com/dvisztempacct","followers_url":"https://api.github.com/users/dvisztempacct/followers","following_url":"https://api.github.com/users/dvisztempacct/following{/other_user}","gists_url":"https://api.github.com/users/dvisztempacct/gists{/gist_id}","starred_url":"https://api.github.com/users/dvisztempacct/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dvisztempacct/subscriptions","organizations_url":"https://api.github.com/users/dvisztempacct/orgs","repos_url":"https://api.github.com/users/dvisztempacct/repos","events_url":"https://api.github.com/users/dvisztempacct/events{/privacy}","received_events_url":"https://api.github.com/users/dvisztempacct/received_events","type":"User","site_admin":false},"created_at":"2019-03-01T22:45:44Z","updated_at":"2019-03-01T22:45:44Z","author_association":"NONE","body":"@jpountz thank you! I'm very much looking forward to this!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/470288375","html_url":"https://github.com/elastic/elasticsearch/issues/37043#issuecomment-470288375","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37043","id":470288375,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDI4ODM3NQ==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2019-03-06T21:41:14Z","updated_at":"2019-03-06T21:47:25Z","author_association":"CONTRIBUTOR","body":"@jpountz I have implemented a [draft PR](https://github.com/elastic/elasticsearch/pull/39770) for the query conversion, but encountered the following problem:\r\n\r\nSetting origin to `Long.MAX_VALUE` or `Long.MIN_VALUE`, when documents' fields have small long values produces very tiny scores that they become undifferentiable:\r\n\r\nFor example, if my index has 3 docs with values: 111, 555, 999, I will get these results:\r\n`origin`: 9223372036854775807\r\n`pivot`: 444\r\nAs `score= pivot / (pivot + |origin - docValue|)`, and since `origin` is huge, scores become super tiny - close to 0 and undifferentiable.\r\n\r\n```js\r\n\"max_score\": 4.8138576E-17,\r\n    \"hits\": [\r\n      {\r\n        \"_index\": \"index1\",\r\n        \"_type\": \"_doc\",\r\n        \"_id\": \"1\",\r\n        \"_score\": 4.8138576E-17,\r\n        \"_source\": {\r\n          \"my_text\": \"text1\",\r\n          \"my_long\": 555,\r\n          \"my_int\": 555\r\n        }\r\n      },\r\n      {\r\n        \"_index\": \"index1\",\r\n        \"_type\": \"_doc\",\r\n        \"_id\": \"2\",\r\n        \"_score\": 4.8138576E-17,\r\n        \"_source\": {\r\n          \"my_text\": \"text1\",\r\n          \"my_long\": 999,\r\n          \"my_int\": 999\r\n        }\r\n      },\r\n      {\r\n        \"_index\": \"index1\",\r\n        \"_type\": \"_doc\",\r\n        \"_id\": \"3\",\r\n        \"_score\": 4.8138576E-17,\r\n        \"_source\": {\r\n          \"my_text\": \"text1\",\r\n          \"my_long\": 111,\r\n          \"my_int\": 111\r\n        }\r\n      }\r\n    ]\r\n```\r\n______\r\n\r\nWe need to set `origin` differently. Maximum value for the index on all shards? @jpountz  what do you think?\r\n\r\nAlso I am not sure that it is right that pivot values are different on different shards. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/470439630","html_url":"https://github.com/elastic/elasticsearch/issues/37043#issuecomment-470439630","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37043","id":470439630,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQzOTYzMA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2019-03-07T08:53:10Z","updated_at":"2019-03-07T08:53:10Z","author_association":"CONTRIBUTOR","body":"I had mentioned this issue in the description of this issue:\r\n\r\n> There are a number of details to sort out, like [...] maybe tak[ing] the maximum value of the field rather than Long.MAX_VALUE to avoid defeating the optimization because most scores would be equal after casting to a float\r\n\r\n> We need to set origin differently. Maximum value for the index on all shards? @jpountz what do you think?\r\n\r\n+1 to try it out. For what it's worth, not all shards need to have the same values for `origin` and `pivot` since we won't return the produced scores to the coordinating node anyway.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/502851520","html_url":"https://github.com/elastic/elasticsearch/issues/37043#issuecomment-502851520","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37043","id":502851520,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjg1MTUyMA==","user":{"login":"dvisztempacct","id":37460069,"node_id":"MDQ6VXNlcjM3NDYwMDY5","avatar_url":"https://avatars3.githubusercontent.com/u/37460069?v=4","gravatar_id":"","url":"https://api.github.com/users/dvisztempacct","html_url":"https://github.com/dvisztempacct","followers_url":"https://api.github.com/users/dvisztempacct/followers","following_url":"https://api.github.com/users/dvisztempacct/following{/other_user}","gists_url":"https://api.github.com/users/dvisztempacct/gists{/gist_id}","starred_url":"https://api.github.com/users/dvisztempacct/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dvisztempacct/subscriptions","organizations_url":"https://api.github.com/users/dvisztempacct/orgs","repos_url":"https://api.github.com/users/dvisztempacct/repos","events_url":"https://api.github.com/users/dvisztempacct/events{/privacy}","received_events_url":"https://api.github.com/users/dvisztempacct/received_events","type":"User","site_admin":false},"created_at":"2019-06-17T21:08:01Z","updated_at":"2019-06-17T21:08:01Z","author_association":"NONE","body":"Hi all :)\r\n\r\nI see that PR #39770 has been merged!\r\n\r\nAny idea when / which release this will be a part of?\r\n\r\nBut I notice that it was merged into a feature branch, and it does not appear that that branch has been merged into master.\r\n\r\nWhat does the roadmap look like for this?\r\n\r\nThanks!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/503444292","html_url":"https://github.com/elastic/elasticsearch/issues/37043#issuecomment-503444292","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37043","id":503444292,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzQ0NDI5Mg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2019-06-19T07:35:05Z","updated_at":"2019-06-19T07:35:05Z","author_association":"CONTRIBUTOR","body":"@dvisztempacct Hi Don, we don't know yet when it will be released. The idea looks promising but it also has some worst-case scenarios that makes sorting perform slower than a naive sort, for instance if you search for the most recent documents and the index is ordered by increasing timestamp (either explicitly via index sorting, or implicitly because index order correlates with timestamp - which is typical when indexing logs). We have a couple ideas to work around this such as shuffling the order of segments at collection time or disabling the optimization based on heuristics, that we need to explore further.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/503718310","html_url":"https://github.com/elastic/elasticsearch/issues/37043#issuecomment-503718310","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37043","id":503718310,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzcxODMxMA==","user":{"login":"dvisztempacct","id":37460069,"node_id":"MDQ6VXNlcjM3NDYwMDY5","avatar_url":"https://avatars3.githubusercontent.com/u/37460069?v=4","gravatar_id":"","url":"https://api.github.com/users/dvisztempacct","html_url":"https://github.com/dvisztempacct","followers_url":"https://api.github.com/users/dvisztempacct/followers","following_url":"https://api.github.com/users/dvisztempacct/following{/other_user}","gists_url":"https://api.github.com/users/dvisztempacct/gists{/gist_id}","starred_url":"https://api.github.com/users/dvisztempacct/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dvisztempacct/subscriptions","organizations_url":"https://api.github.com/users/dvisztempacct/orgs","repos_url":"https://api.github.com/users/dvisztempacct/repos","events_url":"https://api.github.com/users/dvisztempacct/events{/privacy}","received_events_url":"https://api.github.com/users/dvisztempacct/received_events","type":"User","site_admin":false},"created_at":"2019-06-19T19:40:35Z","updated_at":"2019-06-19T19:40:35Z","author_association":"NONE","body":"@jpountz Thanks for the update :)\r\n\r\nIn the meantime, is there another way to accomplish this kind of optimization? Right now for a large number of matching documents, my relational databases are much faster options than ES for some of my queries.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/528486080","html_url":"https://github.com/elastic/elasticsearch/issues/37043#issuecomment-528486080","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37043","id":528486080,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODQ4NjA4MA==","user":{"login":"dvisztempacct","id":37460069,"node_id":"MDQ6VXNlcjM3NDYwMDY5","avatar_url":"https://avatars3.githubusercontent.com/u/37460069?v=4","gravatar_id":"","url":"https://api.github.com/users/dvisztempacct","html_url":"https://github.com/dvisztempacct","followers_url":"https://api.github.com/users/dvisztempacct/followers","following_url":"https://api.github.com/users/dvisztempacct/following{/other_user}","gists_url":"https://api.github.com/users/dvisztempacct/gists{/gist_id}","starred_url":"https://api.github.com/users/dvisztempacct/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dvisztempacct/subscriptions","organizations_url":"https://api.github.com/users/dvisztempacct/orgs","repos_url":"https://api.github.com/users/dvisztempacct/repos","events_url":"https://api.github.com/users/dvisztempacct/events{/privacy}","received_events_url":"https://api.github.com/users/dvisztempacct/received_events","type":"User","site_admin":false},"created_at":"2019-09-05T17:25:16Z","updated_at":"2019-09-05T17:25:16Z","author_association":"NONE","body":"Any updates? :D","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/528752098","html_url":"https://github.com/elastic/elasticsearch/issues/37043#issuecomment-528752098","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37043","id":528752098,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODc1MjA5OA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2019-09-06T07:52:37Z","updated_at":"2019-09-06T07:52:37Z","author_association":"MEMBER","body":"Hi Don, sorry that it took so long but we made good progress over the past month even though some bits are still missing. We're now focusing on a change in Lucene to allow sharing the minimum score between leaf collectors but that's not a simple one so we don't know when it will be ready yet. We'll update this issue as soon as we have something in Lucene. Stay tuned ;)","performed_via_github_app":null}]