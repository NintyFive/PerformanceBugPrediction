[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/594058379","html_url":"https://github.com/elastic/elasticsearch/issues/53064#issuecomment-594058379","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53064","id":594058379,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDA1ODM3OQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-03-03T17:02:59Z","updated_at":"2020-03-03T17:02:59Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed (:Distributed/Cluster Coordination)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/595223455","html_url":"https://github.com/elastic/elasticsearch/issues/53064#issuecomment-595223455","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53064","id":595223455,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTIyMzQ1NQ==","user":{"login":"henningandersen","id":33268011,"node_id":"MDQ6VXNlcjMzMjY4MDEx","avatar_url":"https://avatars2.githubusercontent.com/u/33268011?v=4","gravatar_id":"","url":"https://api.github.com/users/henningandersen","html_url":"https://github.com/henningandersen","followers_url":"https://api.github.com/users/henningandersen/followers","following_url":"https://api.github.com/users/henningandersen/following{/other_user}","gists_url":"https://api.github.com/users/henningandersen/gists{/gist_id}","starred_url":"https://api.github.com/users/henningandersen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/henningandersen/subscriptions","organizations_url":"https://api.github.com/users/henningandersen/orgs","repos_url":"https://api.github.com/users/henningandersen/repos","events_url":"https://api.github.com/users/henningandersen/events{/privacy}","received_events_url":"https://api.github.com/users/henningandersen/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T13:16:37Z","updated_at":"2020-03-05T13:16:37Z","author_association":"CONTRIBUTOR","body":"Adding a sleep when marking nodes faulty makes this reproduce 7/10 times on my CI:\r\n\r\n```\r\ndiff --git a/server/src/main/java/org/elasticsearch/cluster/coordination/FollowersChecker.java b/server/src/main/java/org/elasticsearch/cluster/coordination/FollowersChecker.java\r\nindex 390b7a4cbde..0795b7bfc64 100644\r\n--- a/server/src/main/java/org/elasticsearch/cluster/coordination/FollowersChecker.java\r\n+++ b/server/src/main/java/org/elasticsearch/cluster/coordination/FollowersChecker.java\r\n@@ -354,6 +354,11 @@ public class FollowersChecker {\r\n             transportService.getThreadPool().generic().execute(new Runnable() {\r\n                 @Override\r\n                 public void run() {\r\n+                    try {\r\n+                        Thread.sleep(10);\r\n+                    } catch (InterruptedException e) {\r\n+                        e.printStackTrace();\r\n+                    }\r\n                     synchronized (mutex) {\r\n                         if (running() == false) {\r\n                             logger.trace(\"{} no longer running, not marking faulty\", FollowerChecker.this);\r\n```\r\n\r\nWill find a workaround for this specific case.\r\n\r\nWe discussed this at distributed sync and the issue is that any disruption style test risk seeing nodes disconnect after the disruption has been stopped, since the follower check's marking faulty can be delayed. We saw no easy general solution to this, but discussed following:\r\n\r\n* Wait until all transport requests have been responded to.\r\n* Wait until all threads are idle (or at least all current processing is done). This is tricky with netty and other threads outside `ThreadPool`\r\n* assertBusy all the things or similar. We might need an assertBusy ignoring other exceptions than assertions.","performed_via_github_app":null}]