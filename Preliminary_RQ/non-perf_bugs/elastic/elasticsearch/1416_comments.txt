[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/2493212","html_url":"https://github.com/elastic/elasticsearch/issues/1416#issuecomment-2493212","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1416","id":2493212,"node_id":"MDEyOklzc3VlQ29tbWVudDI0OTMyMTI=","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2011-10-22T23:32:27Z","updated_at":"2011-10-22T23:32:27Z","author_association":"MEMBER","body":"Setting the indices to execute on each one is problematic, but we can introduce a new query type, called `indices` that will wrap another query and be executed when it matches the indices provided. I will update the issue to reflect that.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/2834050","html_url":"https://github.com/elastic/elasticsearch/issues/1416#issuecomment-2834050","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1416","id":2834050,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MzQwNTA=","user":{"login":"poblish","id":152762,"node_id":"MDQ6VXNlcjE1Mjc2Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/152762?v=4","gravatar_id":"","url":"https://api.github.com/users/poblish","html_url":"https://github.com/poblish","followers_url":"https://api.github.com/users/poblish/followers","following_url":"https://api.github.com/users/poblish/following{/other_user}","gists_url":"https://api.github.com/users/poblish/gists{/gist_id}","starred_url":"https://api.github.com/users/poblish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/poblish/subscriptions","organizations_url":"https://api.github.com/users/poblish/orgs","repos_url":"https://api.github.com/users/poblish/repos","events_url":"https://api.github.com/users/poblish/events{/privacy}","received_events_url":"https://api.github.com/users/poblish/received_events","type":"User","site_admin":false},"created_at":"2011-11-22T13:04:16Z","updated_at":"2011-11-22T13:06:13Z","author_association":"NONE","body":"Hi Shay,\n\nThanks for your work on this. I assumed it was working, but now I'm not so sure. My generated query is looking like:\n\n```\n\"query\": {\n  \"bool\": {\n    \"should\": {\n      \"custom_boost_factor\": {\n        \"query\": {\n        \"match_all\": {}\n    },\n    \"indices\": [\n        \"simpleflag\",\n        \"favouriteflag\"\n        ]\n       }\n    }\n  }\n}\n```\n\n... it doesn't seem that the inner query is actually being wrapped by an outer indices query. I'm using the right QueryBuilders.indicesQuery(...) method, though. Is this the expected output?\n\nAlso, I imagined that the result of running the above across _all indices would be to only return all records for the specificed indices only, but as I understand it I'm going to get all from those because of my match_all, _plus_ all from every other index too, because match_all is used for everything not in \"indices: []\".\n\nI think that having something like \"match_none\" would make more sense for indices not specified in the subquery's list. That would allow me to run global-style queries across _all indices, but give the subqueries a real chance to filter down by index, without pulling in unwanted documents from the indices they didn't specify.\n\nWDYT?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/2834513","html_url":"https://github.com/elastic/elasticsearch/issues/1416#issuecomment-2834513","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1416","id":2834513,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MzQ1MTM=","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2011-11-22T13:57:09Z","updated_at":"2011-11-22T13:58:20Z","author_association":"MEMBER","body":"Heya, its a bug in the indices query builder, that uses the `custom_boost_factor` by mistake. You can build it yourself for now, I will push a fix. Here is the issue: https://github.com/elasticsearch/elasticsearch/issues/1485.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/2842207","html_url":"https://github.com/elastic/elasticsearch/issues/1416#issuecomment-2842207","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1416","id":2842207,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDIyMDc=","user":{"login":"poblish","id":152762,"node_id":"MDQ6VXNlcjE1Mjc2Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/152762?v=4","gravatar_id":"","url":"https://api.github.com/users/poblish","html_url":"https://github.com/poblish","followers_url":"https://api.github.com/users/poblish/followers","following_url":"https://api.github.com/users/poblish/following{/other_user}","gists_url":"https://api.github.com/users/poblish/gists{/gist_id}","starred_url":"https://api.github.com/users/poblish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/poblish/subscriptions","organizations_url":"https://api.github.com/users/poblish/orgs","repos_url":"https://api.github.com/users/poblish/repos","events_url":"https://api.github.com/users/poblish/events{/privacy}","received_events_url":"https://api.github.com/users/poblish/received_events","type":"User","site_admin":false},"created_at":"2011-11-22T22:58:11Z","updated_at":"2011-11-23T01:11:13Z","author_association":"NONE","body":"Thanks, I'm trying a newly-built snapshot, but I'm not seeing any difference: the query certainly changes, but no difference in the results for any query I try.\n\n```\ncurl -XGET '10.10.10.101:9200/_all/default/_search' -d '{\n    \"query\": {\n        \"indices\": {\n            \"query\": {\n                \"match_all\": {}\n            },\n            \"indices\": [\n                \"simpleflag\", \"favouriteflag\", \"articleversion\", \"articlerating\",\"followrelationship\", \"groupevent\", \"assertionflag\"\n            ]\n        }\n    }\n}'\n```\n\nSo, with the above, I'm expecting the indices wrapper query to give me back a small number of results (every doc in _those few_ indices), but I'm actually getting every single doc in _all_ indices returned.\n\n(I know I could rewrite the above to do without `indices{}`, but this is just the simplest possible case.)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/2845693","html_url":"https://github.com/elastic/elasticsearch/issues/1416#issuecomment-2845693","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1416","id":2845693,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDU2OTM=","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2011-11-23T07:10:05Z","updated_at":"2011-11-23T07:10:05Z","author_association":"MEMBER","body":"The query you posted in this form does not make sense. The `indices` query will use the query you provided internally when its executed on one of the listed indices, and _match_all_ when it does not match one of those indices, which, if I remember, is what you were after.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/2846625","html_url":"https://github.com/elastic/elasticsearch/issues/1416#issuecomment-2846625","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1416","id":2846625,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDY2MjU=","user":{"login":"poblish","id":152762,"node_id":"MDQ6VXNlcjE1Mjc2Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/152762?v=4","gravatar_id":"","url":"https://api.github.com/users/poblish","html_url":"https://github.com/poblish","followers_url":"https://api.github.com/users/poblish/followers","following_url":"https://api.github.com/users/poblish/following{/other_user}","gists_url":"https://api.github.com/users/poblish/gists{/gist_id}","starred_url":"https://api.github.com/users/poblish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/poblish/subscriptions","organizations_url":"https://api.github.com/users/poblish/orgs","repos_url":"https://api.github.com/users/poblish/repos","events_url":"https://api.github.com/users/poblish/events{/privacy}","received_events_url":"https://api.github.com/users/poblish/received_events","type":"User","site_admin":false},"created_at":"2011-11-23T09:31:55Z","updated_at":"2011-11-23T09:31:55Z","author_association":"NONE","body":"This takes us back to the first comment I left here yesterday. It looks like what I really need is not in fact _match_all_ for indices not in the `indices[]` section, but \"match none\". In the example above I _only_ care about the results within the `indices{}` query - I don't want anything else whatsoever. What Compass did was perfect for me :-)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/2846951","html_url":"https://github.com/elastic/elasticsearch/issues/1416#issuecomment-2846951","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1416","id":2846951,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDY5NTE=","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2011-11-23T10:10:47Z","updated_at":"2011-11-23T10:10:47Z","author_association":"MEMBER","body":"When do you really need match_none? I mean, if its match_none, in your example, why not just query those indices (instead of using `_all`) and thats it?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/2847232","html_url":"https://github.com/elastic/elasticsearch/issues/1416#issuecomment-2847232","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1416","id":2847232,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDcyMzI=","user":{"login":"poblish","id":152762,"node_id":"MDQ6VXNlcjE1Mjc2Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/152762?v=4","gravatar_id":"","url":"https://api.github.com/users/poblish","html_url":"https://github.com/poblish","followers_url":"https://api.github.com/users/poblish/followers","following_url":"https://api.github.com/users/poblish/following{/other_user}","gists_url":"https://api.github.com/users/poblish/gists{/gist_id}","starred_url":"https://api.github.com/users/poblish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/poblish/subscriptions","organizations_url":"https://api.github.com/users/poblish/orgs","repos_url":"https://api.github.com/users/poblish/repos","events_url":"https://api.github.com/users/poblish/events{/privacy}","received_events_url":"https://api.github.com/users/poblish/received_events","type":"User","site_admin":false},"created_at":"2011-11-23T10:46:44Z","updated_at":"2011-11-23T10:46:44Z","author_association":"NONE","body":"The above was the simplest possible case. In reality my app will be receiving custom, configurable queries like the following, and turning them (programatically) into suitably nested queries to pass to ES:\n- get me all documents where { either John or Jane Smith} is mentioned in an article, performed an action, was tagged, etc.\n- get me a list/count of all tags, flags, etc.\n\nThere are some cases where setting the overall indices helps, but in general I have to search against _all, relying on the individual bool() subqueries to control which (of the 50 or so) indices are used. Compass achieved this beautifully. One way of looking at this is that I want to use my subqueries to build up from _nothing_. What `indices{}` currently does is filter down from _everything_.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/2851424","html_url":"https://github.com/elastic/elasticsearch/issues/1416#issuecomment-2851424","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1416","id":2851424,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE0MjQ=","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2011-11-23T17:04:13Z","updated_at":"2011-11-23T17:04:13Z","author_association":"MEMBER","body":"I still don't understand why you would need one that does not match, maybe in should clauses in a boolean query... . Opened #1492.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/2872672","html_url":"https://github.com/elastic/elasticsearch/issues/1416#issuecomment-2872672","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1416","id":2872672,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NzI2NzI=","user":{"login":"poblish","id":152762,"node_id":"MDQ6VXNlcjE1Mjc2Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/152762?v=4","gravatar_id":"","url":"https://api.github.com/users/poblish","html_url":"https://github.com/poblish","followers_url":"https://api.github.com/users/poblish/followers","following_url":"https://api.github.com/users/poblish/following{/other_user}","gists_url":"https://api.github.com/users/poblish/gists{/gist_id}","starred_url":"https://api.github.com/users/poblish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/poblish/subscriptions","organizations_url":"https://api.github.com/users/poblish/orgs","repos_url":"https://api.github.com/users/poblish/repos","events_url":"https://api.github.com/users/poblish/events{/privacy}","received_events_url":"https://api.github.com/users/poblish/received_events","type":"User","site_admin":false},"created_at":"2011-11-25T09:19:15Z","updated_at":"2011-11-25T09:19:15Z","author_association":"NONE","body":"Great, this is now working perfectly - many thanks!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/4535913","html_url":"https://github.com/elastic/elasticsearch/issues/1416#issuecomment-4535913","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1416","id":4535913,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzU5MTM=","user":{"login":"folke","id":292349,"node_id":"MDQ6VXNlcjI5MjM0OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/292349?v=4","gravatar_id":"","url":"https://api.github.com/users/folke","html_url":"https://github.com/folke","followers_url":"https://api.github.com/users/folke/followers","following_url":"https://api.github.com/users/folke/following{/other_user}","gists_url":"https://api.github.com/users/folke/gists{/gist_id}","starred_url":"https://api.github.com/users/folke/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/folke/subscriptions","organizations_url":"https://api.github.com/users/folke/orgs","repos_url":"https://api.github.com/users/folke/repos","events_url":"https://api.github.com/users/folke/events{/privacy}","received_events_url":"https://api.github.com/users/folke/received_events","type":"User","site_admin":false},"created_at":"2012-03-16T08:45:36Z","updated_at":"2012-03-16T08:45:36Z","author_association":"NONE","body":"Any chance \"indices\" could be added as a filter as well?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/4555008","html_url":"https://github.com/elastic/elasticsearch/issues/1416#issuecomment-4555008","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1416","id":4555008,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NTUwMDg=","user":{"login":"medcl","id":64487,"node_id":"MDQ6VXNlcjY0NDg3","avatar_url":"https://avatars0.githubusercontent.com/u/64487?v=4","gravatar_id":"","url":"https://api.github.com/users/medcl","html_url":"https://github.com/medcl","followers_url":"https://api.github.com/users/medcl/followers","following_url":"https://api.github.com/users/medcl/following{/other_user}","gists_url":"https://api.github.com/users/medcl/gists{/gist_id}","starred_url":"https://api.github.com/users/medcl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/medcl/subscriptions","organizations_url":"https://api.github.com/users/medcl/orgs","repos_url":"https://api.github.com/users/medcl/repos","events_url":"https://api.github.com/users/medcl/events{/privacy}","received_events_url":"https://api.github.com/users/medcl/received_events","type":"User","site_admin":false},"created_at":"2012-03-17T16:11:41Z","updated_at":"2012-03-17T16:11:41Z","author_association":"MEMBER","body":"++1\n","performed_via_github_app":null}]