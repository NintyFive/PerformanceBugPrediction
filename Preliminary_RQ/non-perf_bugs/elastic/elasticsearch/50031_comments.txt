[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/564053950","html_url":"https://github.com/elastic/elasticsearch/issues/50031#issuecomment-564053950","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50031","id":564053950,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDA1Mzk1MA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-12-10T14:20:38Z","updated_at":"2019-12-10T14:20:38Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-features (:Core/Features/ILM+SLM)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/573307916","html_url":"https://github.com/elastic/elasticsearch/issues/50031#issuecomment-573307916","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50031","id":573307916,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzMwNzkxNg==","user":{"login":"BogdanSukonnov","id":49834667,"node_id":"MDQ6VXNlcjQ5ODM0NjY3","avatar_url":"https://avatars2.githubusercontent.com/u/49834667?v=4","gravatar_id":"","url":"https://api.github.com/users/BogdanSukonnov","html_url":"https://github.com/BogdanSukonnov","followers_url":"https://api.github.com/users/BogdanSukonnov/followers","following_url":"https://api.github.com/users/BogdanSukonnov/following{/other_user}","gists_url":"https://api.github.com/users/BogdanSukonnov/gists{/gist_id}","starred_url":"https://api.github.com/users/BogdanSukonnov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BogdanSukonnov/subscriptions","organizations_url":"https://api.github.com/users/BogdanSukonnov/orgs","repos_url":"https://api.github.com/users/BogdanSukonnov/repos","events_url":"https://api.github.com/users/BogdanSukonnov/events{/privacy}","received_events_url":"https://api.github.com/users/BogdanSukonnov/received_events","type":"User","site_admin":false},"created_at":"2020-01-11T11:22:30Z","updated_at":"2020-01-11T11:22:30Z","author_association":"NONE","body":"can I take this issue?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/573334499","html_url":"https://github.com/elastic/elasticsearch/issues/50031#issuecomment-573334499","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50031","id":573334499,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzMzNDQ5OQ==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2020-01-11T17:03:55Z","updated_at":"2020-01-12T23:03:50Z","author_association":"MEMBER","body":"Certainly, let me know if you have any questions.\r\n\r\nOn Sat, Jan 11, 2020 at 4:22 AM Bogdan Sukonnov <notifications@github.com>\r\nwrote:\r\n\r\n> can I take this issue?\r\n>","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/573443060","html_url":"https://github.com/elastic/elasticsearch/issues/50031#issuecomment-573443060","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50031","id":573443060,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzQ0MzA2MA==","user":{"login":"BogdanSukonnov","id":49834667,"node_id":"MDQ6VXNlcjQ5ODM0NjY3","avatar_url":"https://avatars2.githubusercontent.com/u/49834667?v=4","gravatar_id":"","url":"https://api.github.com/users/BogdanSukonnov","html_url":"https://github.com/BogdanSukonnov","followers_url":"https://api.github.com/users/BogdanSukonnov/followers","following_url":"https://api.github.com/users/BogdanSukonnov/following{/other_user}","gists_url":"https://api.github.com/users/BogdanSukonnov/gists{/gist_id}","starred_url":"https://api.github.com/users/BogdanSukonnov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BogdanSukonnov/subscriptions","organizations_url":"https://api.github.com/users/BogdanSukonnov/orgs","repos_url":"https://api.github.com/users/BogdanSukonnov/repos","events_url":"https://api.github.com/users/BogdanSukonnov/events{/privacy}","received_events_url":"https://api.github.com/users/BogdanSukonnov/received_events","type":"User","site_admin":false},"created_at":"2020-01-12T18:26:05Z","updated_at":"2020-01-12T18:26:05Z","author_association":"NONE","body":"@dakrone , @ruflin I don't understand what would be the response for new policy, and no exception part. Are you expect just 404 response? Can you, please give me an example of expected behavior in another API's?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/573467615","html_url":"https://github.com/elastic/elasticsearch/issues/50031#issuecomment-573467615","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50031","id":573467615,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzQ2NzYxNQ==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2020-01-12T23:04:33Z","updated_at":"2020-01-12T23:04:33Z","author_association":"MEMBER","body":"I would expect a 200 response if the policy exists, a 404 if it does not (with no body for either).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/573830414","html_url":"https://github.com/elastic/elasticsearch/issues/50031#issuecomment-573830414","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50031","id":573830414,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzgzMDQxNA==","user":{"login":"BogdanSukonnov","id":49834667,"node_id":"MDQ6VXNlcjQ5ODM0NjY3","avatar_url":"https://avatars2.githubusercontent.com/u/49834667?v=4","gravatar_id":"","url":"https://api.github.com/users/BogdanSukonnov","html_url":"https://github.com/BogdanSukonnov","followers_url":"https://api.github.com/users/BogdanSukonnov/followers","following_url":"https://api.github.com/users/BogdanSukonnov/following{/other_user}","gists_url":"https://api.github.com/users/BogdanSukonnov/gists{/gist_id}","starred_url":"https://api.github.com/users/BogdanSukonnov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BogdanSukonnov/subscriptions","organizations_url":"https://api.github.com/users/BogdanSukonnov/orgs","repos_url":"https://api.github.com/users/BogdanSukonnov/repos","events_url":"https://api.github.com/users/BogdanSukonnov/events{/privacy}","received_events_url":"https://api.github.com/users/BogdanSukonnov/received_events","type":"User","site_admin":false},"created_at":"2020-01-13T19:29:45Z","updated_at":"2020-01-13T19:29:45Z","author_association":"NONE","body":"@dakrone thanks, that I can do. What I am struggling to figure out is how to response with 404 without exception. Only way I find to response with 404 is to call `listener.onFailure(new ResourceNotFoundException(...` and this will be an exception in logs, which we here try to avoid. So I need to call `listener.onResponse(...` that will return 404 somehow. I'm stuck here, can you give me some advice? ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/573873050","html_url":"https://github.com/elastic/elasticsearch/issues/50031#issuecomment-573873050","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50031","id":573873050,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Mzg3MzA1MA==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2020-01-13T21:12:51Z","updated_at":"2020-01-13T21:12:51Z","author_association":"MEMBER","body":"@BogdanSukonnov sorry, I misunderstood what you were asking. I tested this locally, and all that is actually needed is to add the line:\r\n\r\n```java\r\ncontroller.registerHandler(RestRequest.Method.HEAD, \"/_ilm/policy/{name}\", this);\r\n```\r\n\r\nAnd that's it. ES will automatically handle the response elision for you. So it'd just be this line and then a test for the functionality.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/573995518","html_url":"https://github.com/elastic/elasticsearch/issues/50031#issuecomment-573995518","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50031","id":573995518,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Mzk5NTUxOA==","user":{"login":"BogdanSukonnov","id":49834667,"node_id":"MDQ6VXNlcjQ5ODM0NjY3","avatar_url":"https://avatars2.githubusercontent.com/u/49834667?v=4","gravatar_id":"","url":"https://api.github.com/users/BogdanSukonnov","html_url":"https://github.com/BogdanSukonnov","followers_url":"https://api.github.com/users/BogdanSukonnov/followers","following_url":"https://api.github.com/users/BogdanSukonnov/following{/other_user}","gists_url":"https://api.github.com/users/BogdanSukonnov/gists{/gist_id}","starred_url":"https://api.github.com/users/BogdanSukonnov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BogdanSukonnov/subscriptions","organizations_url":"https://api.github.com/users/BogdanSukonnov/orgs","repos_url":"https://api.github.com/users/BogdanSukonnov/repos","events_url":"https://api.github.com/users/BogdanSukonnov/events{/privacy}","received_events_url":"https://api.github.com/users/BogdanSukonnov/received_events","type":"User","site_admin":false},"created_at":"2020-01-14T04:32:04Z","updated_at":"2020-01-14T04:32:04Z","author_association":"NONE","body":"@dakrone it's great! Thanks! I'll try. Can't believe this is so simple :)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/575909439","html_url":"https://github.com/elastic/elasticsearch/issues/50031#issuecomment-575909439","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50031","id":575909439,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTkwOTQzOQ==","user":{"login":"BogdanSukonnov","id":49834667,"node_id":"MDQ6VXNlcjQ5ODM0NjY3","avatar_url":"https://avatars2.githubusercontent.com/u/49834667?v=4","gravatar_id":"","url":"https://api.github.com/users/BogdanSukonnov","html_url":"https://github.com/BogdanSukonnov","followers_url":"https://api.github.com/users/BogdanSukonnov/followers","following_url":"https://api.github.com/users/BogdanSukonnov/following{/other_user}","gists_url":"https://api.github.com/users/BogdanSukonnov/gists{/gist_id}","starred_url":"https://api.github.com/users/BogdanSukonnov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BogdanSukonnov/subscriptions","organizations_url":"https://api.github.com/users/BogdanSukonnov/orgs","repos_url":"https://api.github.com/users/BogdanSukonnov/repos","events_url":"https://api.github.com/users/BogdanSukonnov/events{/privacy}","received_events_url":"https://api.github.com/users/BogdanSukonnov/received_events","type":"User","site_admin":false},"created_at":"2020-01-18T15:37:39Z","updated_at":"2020-01-18T15:37:39Z","author_association":"NONE","body":"@dakrone OK, it's not so simple. It's maybe easy to get 404 response like always, when endpoint is not properly registered. But as soon as I implemented all necessary classes to receive 200 response for existing policy,   the only way to answer with 404 for non-existing policy is to throw a ResourceNotFoundException exception. That lead to dirty logs, and it is not a desirable result in terms of this issue.\r\nI found another way to solve this problem, without exception. It involves consuming parameters from RestRequest only if the policy is present, so when the policy name not found, ES does not consume request parameters and treat request as bad. But the response for non-existing policy will be 400 Bad Request. Is this OK?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/576008510","html_url":"https://github.com/elastic/elasticsearch/issues/50031#issuecomment-576008510","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50031","id":576008510,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NjAwODUxMA==","user":{"login":"BogdanSukonnov","id":49834667,"node_id":"MDQ6VXNlcjQ5ODM0NjY3","avatar_url":"https://avatars2.githubusercontent.com/u/49834667?v=4","gravatar_id":"","url":"https://api.github.com/users/BogdanSukonnov","html_url":"https://github.com/BogdanSukonnov","followers_url":"https://api.github.com/users/BogdanSukonnov/followers","following_url":"https://api.github.com/users/BogdanSukonnov/following{/other_user}","gists_url":"https://api.github.com/users/BogdanSukonnov/gists{/gist_id}","starred_url":"https://api.github.com/users/BogdanSukonnov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BogdanSukonnov/subscriptions","organizations_url":"https://api.github.com/users/BogdanSukonnov/orgs","repos_url":"https://api.github.com/users/BogdanSukonnov/repos","events_url":"https://api.github.com/users/BogdanSukonnov/events{/privacy}","received_events_url":"https://api.github.com/users/BogdanSukonnov/received_events","type":"User","site_admin":false},"created_at":"2020-01-19T14:09:01Z","updated_at":"2020-01-19T14:09:01Z","author_association":"NONE","body":"No, unfortunately, it's not working, too. Looks that I can't solve this issue. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/576019555","html_url":"https://github.com/elastic/elasticsearch/issues/50031#issuecomment-576019555","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50031","id":576019555,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NjAxOTU1NQ==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2020-01-19T16:05:31Z","updated_at":"2020-01-19T16:05:31Z","author_association":"CONTRIBUTOR","body":"I think a `ResourceNotFoundException` is appropriate, and I think the logging you are seeing is only at `DEBUG` level so that's ok. I opened #51198 to discuss the possibility of not emitting `DEBUG`-level logging by default like this.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/576037411","html_url":"https://github.com/elastic/elasticsearch/issues/50031#issuecomment-576037411","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50031","id":576037411,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NjAzNzQxMQ==","user":{"login":"BogdanSukonnov","id":49834667,"node_id":"MDQ6VXNlcjQ5ODM0NjY3","avatar_url":"https://avatars2.githubusercontent.com/u/49834667?v=4","gravatar_id":"","url":"https://api.github.com/users/BogdanSukonnov","html_url":"https://github.com/BogdanSukonnov","followers_url":"https://api.github.com/users/BogdanSukonnov/followers","following_url":"https://api.github.com/users/BogdanSukonnov/following{/other_user}","gists_url":"https://api.github.com/users/BogdanSukonnov/gists{/gist_id}","starred_url":"https://api.github.com/users/BogdanSukonnov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BogdanSukonnov/subscriptions","organizations_url":"https://api.github.com/users/BogdanSukonnov/orgs","repos_url":"https://api.github.com/users/BogdanSukonnov/repos","events_url":"https://api.github.com/users/BogdanSukonnov/events{/privacy}","received_events_url":"https://api.github.com/users/BogdanSukonnov/received_events","type":"User","site_admin":false},"created_at":"2020-01-19T19:22:34Z","updated_at":"2020-01-19T19:22:34Z","author_association":"NONE","body":"@DaveCTurner thanks, but this behavior is already implemented for Get method. Is there any point to do basically the same just to have another HTTP method?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/576178002","html_url":"https://github.com/elastic/elasticsearch/issues/50031#issuecomment-576178002","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50031","id":576178002,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NjE3ODAwMg==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2020-01-20T09:11:01Z","updated_at":"2020-01-20T09:11:01Z","author_association":"CONTRIBUTOR","body":"That question is best directed back at @ruflin. Nicolas, `HEAD /_ilm/policy/{name}` would throw the same exception as `GET /_ilm/policy/{name}`. Is your issue simply that this exception is logged, or do you need `HEAD` to work here? The exception logging is deliberate (today) but we are discussing changing it in #51198.\r\n\r\nAdditionally, checking whether the policy exists and then creating it is racy: someone else might create the policy in between those two calls. Do you need the ability to atomically `PUT` a policy **only if it doesn't exist**?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/576591656","html_url":"https://github.com/elastic/elasticsearch/issues/50031#issuecomment-576591656","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50031","id":576591656,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NjU5MTY1Ng==","user":{"login":"ruflin","id":244900,"node_id":"MDQ6VXNlcjI0NDkwMA==","avatar_url":"https://avatars3.githubusercontent.com/u/244900?v=4","gravatar_id":"","url":"https://api.github.com/users/ruflin","html_url":"https://github.com/ruflin","followers_url":"https://api.github.com/users/ruflin/followers","following_url":"https://api.github.com/users/ruflin/following{/other_user}","gists_url":"https://api.github.com/users/ruflin/gists{/gist_id}","starred_url":"https://api.github.com/users/ruflin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruflin/subscriptions","organizations_url":"https://api.github.com/users/ruflin/orgs","repos_url":"https://api.github.com/users/ruflin/repos","events_url":"https://api.github.com/users/ruflin/events{/privacy}","received_events_url":"https://api.github.com/users/ruflin/received_events","type":"User","site_admin":false},"created_at":"2020-01-21T09:22:08Z","updated_at":"2020-01-21T09:22:08Z","author_association":"CONTRIBUTOR","body":"What I expected is the same behaviour as with the index API. When I use `HEAD /foo` for the index foo and it does not exist, nothing shows up in the logs which is what I expected. If in my code I want to check for 5 ILM policies to exist, the users gets a lot of information logged if they don't exist which I think might be confusing. `GET /_ilm/policy/?filter_path={name}` does what I expect. \r\n\r\nI'm not really concerned here about the race condition part.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/576614022","html_url":"https://github.com/elastic/elasticsearch/issues/50031#issuecomment-576614022","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50031","id":576614022,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NjYxNDAyMg==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2020-01-21T10:19:34Z","updated_at":"2020-01-21T10:19:34Z","author_association":"CONTRIBUTOR","body":"Ok, thanks for the clarification. TBH it's a bit strange that `HEAD /foo` doesn't log anything if the index isn't found since it does throw an exception internally, but this is how it is today. Since the fundamental problem here is just the excessive logging, I think that #51198 will fix this.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/578697341","html_url":"https://github.com/elastic/elasticsearch/issues/50031#issuecomment-578697341","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50031","id":578697341,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODY5NzM0MQ==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2020-01-27T11:03:21Z","updated_at":"2020-01-27T11:03:21Z","author_association":"CONTRIBUTOR","body":"Addressed by #51459.","performed_via_github_app":null}]