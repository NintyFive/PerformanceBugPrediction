{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/9280","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9280/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9280/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9280/events","html_url":"https://github.com/elastic/elasticsearch/issues/9280","id":54240664,"node_id":"MDU6SXNzdWU1NDI0MDY2NA==","number":9280,"title":"Deeply nested aggregations treated like unnested document aggregations","user":{"login":"pickypg","id":1501235,"node_id":"MDQ6VXNlcjE1MDEyMzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1501235?v=4","gravatar_id":"","url":"https://api.github.com/users/pickypg","html_url":"https://github.com/pickypg","followers_url":"https://api.github.com/users/pickypg/followers","following_url":"https://api.github.com/users/pickypg/following{/other_user}","gists_url":"https://api.github.com/users/pickypg/gists{/gist_id}","starred_url":"https://api.github.com/users/pickypg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pickypg/subscriptions","organizations_url":"https://api.github.com/users/pickypg/orgs","repos_url":"https://api.github.com/users/pickypg/repos","events_url":"https://api.github.com/users/pickypg/events{/privacy}","received_events_url":"https://api.github.com/users/pickypg/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"assignees":[{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2015-01-13T20:02:17Z","updated_at":"2015-01-26T11:24:39Z","closed_at":"2015-01-26T11:24:39Z","author_association":"MEMBER","active_lock_reason":null,"body":"Given this \"small\" example, you can create the mapping, index two simple documents, and aggregate against it. This was tested on 1.4.2 (and internally reported on 1.3.1).\n\nThe mapping defines two nested objects -- one within the other (`comments` and `comments.tags`). The `dates` object just contains some queried and basic aggregated details.\n\nThe data is setup so that it should be immediately obvious if it's wrong or not. Each comment is given a unique ID with `comments.cid` (1, 2, 3, and 4). Only the odd-numbered (1 and 3) comments have tags added to them. The even-numbered (2 and 4) comments have a `comments.identifier` meant to be found in the aggregation. The tags are given unique IDs that reflect their parent comment with `comments.tags.tid` (22 and 44; extended versions of cid just to be unique to avoid confusion).\n\nThere are two nested aggregations toward the bottom of the aggregation, and the inner one is unexpectedly passed the tag associated with `comments.cid` of `2` even though that comment does not match parent aggregations (as evidenced by printouts on the command line seen after the setup)!\n\n```\n# Delete the index/mapping\nDELETE /agg-test\n\nPUT /agg-test\n{\n  \"mappings\": {\n    \"provider\": {\n      \"properties\": {\n        \"comments\": {\n          \"type\": \"nested\",\n          \"properties\": {\n            \"cid\": {\n              \"type\": \"long\"\n            },\n            \"identifier\": {\n              \"type\": \"string\",\n              \"index\": \"not_analyzed\"\n            },\n            \"tags\": {\n              \"type\": \"nested\",\n              \"properties\": {\n                \"tid\": {\n                  \"type\": \"long\"\n                },\n                \"name\": {\n                  \"type\": \"string\",\n                  \"index\": \"not_analyzed\"\n                }\n              }\n            }\n          }\n        },\n        \"dates\": {\n          \"properties\": {\n            \"day\": {\n              \"type\": \"date\",\n              \"format\": \"dateOptionalTime\"\n            },\n            \"month\": {\n              \"properties\": {\n                \"end\": {\n                  \"type\": \"date\",\n                  \"format\": \"dateOptionalTime\"\n                },\n                \"label\": {\n                  \"type\": \"string\",\n                  \"index\": \"not_analyzed\"\n                },\n                \"start\": {\n                  \"type\": \"date\",\n                  \"format\": \"dateOptionalTime\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n# Feed 2 documents.\nPOST /agg-test/provider/_bulk\n{\"index\": {\"_id\": \"12208\"}}\n{\"_id\": 12208, \"dates\": {\"month\": {\"label\": \"2014-11\", \"end\": \"2014-11-30\", \"start\": \"2014-11-01\"}, \"day\": \"2014-11-30\"}, \"comments\": [{\"cid\": 3,\"identifier\": \"29111\"}, {\"cid\": 4,\"tags\": [{\"tid\" :44,\"name\": \"Roles\"}], \"identifier\": \"29101\"}]}\n{\"index\": {\"_id\": \"12222\"}}\n{\"_id\": 12222, \"dates\": {\"month\": {\"label\": \"2014-12\", \"end\": \"2014-12-31\", \"start\": \"2014-12-01\"}, \"day\": \"2014-12-03\"}, \"comments\": [{\"cid\": 1, \"identifier\": \"29111\"}, {\"cid\": 2,\"tags\": [{\"tid\" : 22, \"name\": \"DataChannels\"}], \"identifier\": \"29101\"}]}\n\n# Verify the mappings if you want \nGET /agg-test/_mappings\n\n# Run query, it should return no comments.tags because no comment has identifier 29111 _and_ a tag, but it will a tag!\nGET /agg-test/provider/_search\n{\n  \"aggregations\": {\n    \"startDate\": {\n      \"terms\": {\n        \"field\": \"dates.month.start\",\n        \"size\": 50\n      },\n      \"aggregations\": {\n        \"endDate\": {\n          \"terms\": {\n            \"field\": \"dates.month.end\",\n            \"size\": 50\n          },\n          \"aggregations\": {\n            \"period\": {\n              \"terms\": {\n                \"field\": \"dates.month.label\",\n                \"size\": 50\n              },\n              \"aggregations\": {\n                \"ctxt_idfier_nested\": {\n                  \"nested\": {\n                    \"path\": \"comments\"\n                  },\n                  \"aggregations\": {\n                    \"comment_filter\": {\n                      \"filter\": {\n                        \"term\": {\n                          \"comments.identifier\": \"29111\"\n                        }\n                      },\n                      \"aggregations\": {\n                        \"comment_script\": {\n                          \"terms\": {\n                            \"script\": \"println \\\"Comment Map: ${doc.get('cid')}\\\"; println \\\"ID: ${doc['comments.cid'].value}\\\"; return doc['comments.identifier'].value\",\n                            \"size\": 50\n                          }\n                        },\n                        \"nested_tags\": {\n                          \"nested\": {\n                            \"path\": \"comments.tags\"\n                          },\n                          \"aggregations\": {\n                            \"tag_script\": {\n                              \"terms\": {\n                                \"script\": \"println \\\"Tag Map: ${doc.get('tid')}\\\"; println \\\"ID: ${doc['comments.tags.tid'].value}\\\"; return doc['comments.tags.name'].value\",\n                                \"size\": 50\n                              }\n                            },\n                            \"tag\": {\n                              \"terms\": {\n                                \"field\": \"comments.tags.name\",\n                                \"size\": 50\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nThe scripts exist to verify steps along the way, but this prints out (on the ES node's command line):\n\n```\nComment Map: [3]\nID: 3\nComment Map: [1]\nID: 1\nTag Map: [22]\nID: 22\n```\n\nSince `Comment Map: [2]\\nID: 2` never appeared in the output, there is no reason that the Tag should have been processed!\n\nWhat's more baffling is that you can remove the top two aggregations and it will execute properly:\n\n```\nGET /agg-test/provider/_search\n{\n  \"aggregations\": {\n    \"period\": {\n      \"terms\": {\n        \"field\": \"dates.month.label\",\n        \"size\": 50\n      },\n      \"aggregations\": {\n        \"ctxt_idfier_nested\": {\n          \"nested\": {\n            \"path\": \"comments\"\n          },\n          \"aggregations\": {\n            \"comment_filter\": {\n              \"filter\": {\n                \"term\": {\n                  \"comments.identifier\": \"29111\"\n                }\n              },\n              \"aggregations\": {\n                \"comment_script\": {\n                  \"terms\": {\n                    \"script\": \"println \\\"Comment Map: ${doc.get('cid')}\\\"; println \\\"ID: ${doc['comments.cid'].value}\\\"; return doc['comments.identifier'].value\",\n                    \"size\": 50\n                  }\n                },\n                \"nested_tags\": {\n                  \"nested\": {\n                    \"path\": \"comments.tags\"\n                  },\n                  \"aggregations\": {\n                    \"tag_script\": {\n                      \"terms\": {\n                        \"script\": \"println \\\"Tag Map: ${doc.get('tid')}\\\"; println \\\"ID: ${doc['comments.tags.tid'].value}\\\"; return doc['comments.tags.name'].value\",\n                        \"size\": 50\n                      }\n                    },\n                    \"tag\": {\n                      \"terms\": {\n                        \"field\": \"comments.tags.name\",\n                        \"size\": 50\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nPrints out \n\n```\nComment Map: [3]\nID: 3\nComment Map: [1]\nID: 1\n```\n\nWithout improperly finding any tags.\n\nEDITED: I fixed the mapping, which must have been copy/pasted wrong.\n","closed_by":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"performed_via_github_app":null}