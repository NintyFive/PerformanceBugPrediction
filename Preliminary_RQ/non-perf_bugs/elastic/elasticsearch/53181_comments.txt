[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/595375562","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-595375562","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":595375562,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTM3NTU2Mg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T18:22:39Z","updated_at":"2020-03-05T18:22:39Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search (:Search/Mapping)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/597166621","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-597166621","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":597166621,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NzE2NjYyMQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2020-03-10T15:59:48Z","updated_at":"2020-03-10T15:59:48Z","author_association":"CONTRIBUTOR","body":"Relates to #53020","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/612671130","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-612671130","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":612671130,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMjY3MTEzMA==","user":{"login":"epixa","id":53814,"node_id":"MDQ6VXNlcjUzODE0","avatar_url":"https://avatars0.githubusercontent.com/u/53814?v=4","gravatar_id":"","url":"https://api.github.com/users/epixa","html_url":"https://github.com/epixa","followers_url":"https://api.github.com/users/epixa/followers","following_url":"https://api.github.com/users/epixa/following{/other_user}","gists_url":"https://api.github.com/users/epixa/gists{/gist_id}","starred_url":"https://api.github.com/users/epixa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epixa/subscriptions","organizations_url":"https://api.github.com/users/epixa/orgs","repos_url":"https://api.github.com/users/epixa/repos","events_url":"https://api.github.com/users/epixa/events{/privacy}","received_events_url":"https://api.github.com/users/epixa/received_events","type":"User","site_admin":false},"created_at":"2020-04-12T20:24:01Z","updated_at":"2020-04-12T20:24:01Z","author_association":"MEMBER","body":"Would the solution put into place to address text/keyword multi-fields also handle wildcards? In discussions I've seen it assumed that it would, but I wanted to clarify.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/612674671","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-612674671","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":612674671,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMjY3NDY3MQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2020-04-12T20:55:34Z","updated_at":"2020-04-12T20:55:34Z","author_association":"CONTRIBUTOR","body":"Hopefully `wildcard` is going to be less subject to this issue, as I can't think of many reasons to map a field both as `wildcard` and `keyword`, since they support the same operations, or `wildcard` and `text`, since `wildcard` can do infix search already. That said, if you have plans to use multi-fields with a `wilcard` field, we'd be interested to know more.\r\n\r\nECS has some fields that are mapped as `keyword` / `text` that we plan to migrate as `keyword`. I believe we'll need to think about dedicated migration paths for this case since removing the `text` multi-field would be a breaking change. For instance, one idea that has been raised is whether `wildcard` fields could create a virtual `text` subfield that emulates the behavior of a `text` field to ease this transition. This requires more thought and we might end up with a different approach but I thought sharing this example would help explain the kind of solution that we're considering.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/613052221","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-613052221","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":613052221,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMzA1MjIyMQ==","user":{"login":"epixa","id":53814,"node_id":"MDQ6VXNlcjUzODE0","avatar_url":"https://avatars0.githubusercontent.com/u/53814?v=4","gravatar_id":"","url":"https://api.github.com/users/epixa","html_url":"https://github.com/epixa","followers_url":"https://api.github.com/users/epixa/followers","following_url":"https://api.github.com/users/epixa/following{/other_user}","gists_url":"https://api.github.com/users/epixa/gists{/gist_id}","starred_url":"https://api.github.com/users/epixa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epixa/subscriptions","organizations_url":"https://api.github.com/users/epixa/orgs","repos_url":"https://api.github.com/users/epixa/repos","events_url":"https://api.github.com/users/epixa/events{/privacy}","received_events_url":"https://api.github.com/users/epixa/received_events","type":"User","site_admin":false},"created_at":"2020-04-13T19:20:22Z","updated_at":"2020-04-13T19:20:22Z","author_association":"MEMBER","body":"Are `wildcard` fields just a superset of `keyword` in terms of features? I may have been mistaken, but I thought simply switching from keyword to wildcard would result in feature loss for aggregations and such. Admittedly I don't have a concrete example.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/613272782","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-613272782","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":613272782,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMzI3Mjc4Mg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2020-04-14T07:26:52Z","updated_at":"2020-04-14T07:26:52Z","author_association":"CONTRIBUTOR","body":"@epixa As we've been thinking about how to migrate from existing mappings to `wildcard`, we agreed that it would be much easier if `wildcard` supported the same operations `keyword` using the same semantics. It supports `match` queries, `terms` aggregations, sorting, etc. with the same semantics as `keyword`. However it takes a different approach to indexing that makes it slower at exact queries or aggregations, but faster at wildcard/regexp queries on high-cardinality fields.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/613587907","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-613587907","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":613587907,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMzU4NzkwNw==","user":{"login":"webmat","id":2300,"node_id":"MDQ6VXNlcjIzMDA=","avatar_url":"https://avatars1.githubusercontent.com/u/2300?v=4","gravatar_id":"","url":"https://api.github.com/users/webmat","html_url":"https://github.com/webmat","followers_url":"https://api.github.com/users/webmat/followers","following_url":"https://api.github.com/users/webmat/following{/other_user}","gists_url":"https://api.github.com/users/webmat/gists{/gist_id}","starred_url":"https://api.github.com/users/webmat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/webmat/subscriptions","organizations_url":"https://api.github.com/users/webmat/orgs","repos_url":"https://api.github.com/users/webmat/repos","events_url":"https://api.github.com/users/webmat/events{/privacy}","received_events_url":"https://api.github.com/users/webmat/received_events","type":"User","site_admin":false},"created_at":"2020-04-14T17:53:10Z","updated_at":"2020-04-14T17:53:35Z","author_association":"NONE","body":"I'd like to point out that ECS went with the reverse convention, on how to index strings. Since ECS started around monitoring, rather than full text search, the default datatype is `keyword` for string fields. Then only a few fields have a `.text` multi-field added (less than 20, iirc).\r\n\r\nI'm pointing this out because here we're talking about potentially building a shorthand notation that encodes the Elasticsearch default. As the proposal stands, it couldn't be used by users who are trying to build ECS-compatible indices.\r\n\r\n> * Update default dynamic mappings to create this field for strings instead of the current text + sub keyword mapping.\r\n\r\nI'm not sure I understand the 3rd point in the body of the issue. \"This field\": are we talking about wildcard?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614548316","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-614548316","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":614548316,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDU0ODMxNg==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2020-04-16T10:02:50Z","updated_at":"2020-04-16T10:02:50Z","author_association":"MEMBER","body":"@webmat The idea here would be that ECS would not need to define multi-fields at all. ECS would define the field type as `text_keyword` (or whatever name we come up with) with no multi-fields. Internally Elasticsearch would handle the fact that there is a text field and a keyword field underlying the field type but to the user it would appear as one field with no multi-fields. The idea here is that users should not need to worry about whether they need the keyword or text form of the field and so just reference the field in one way and Elasticsearch should figure out which underlying field (text or keyword) is the right one to use (so whether its used in an aggregation, in a free text query, an exact match query, etc.)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614699731","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-614699731","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":614699731,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDY5OTczMQ==","user":{"login":"webmat","id":2300,"node_id":"MDQ6VXNlcjIzMDA=","avatar_url":"https://avatars1.githubusercontent.com/u/2300?v=4","gravatar_id":"","url":"https://api.github.com/users/webmat","html_url":"https://github.com/webmat","followers_url":"https://api.github.com/users/webmat/followers","following_url":"https://api.github.com/users/webmat/following{/other_user}","gists_url":"https://api.github.com/users/webmat/gists{/gist_id}","starred_url":"https://api.github.com/users/webmat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/webmat/subscriptions","organizations_url":"https://api.github.com/users/webmat/orgs","repos_url":"https://api.github.com/users/webmat/repos","events_url":"https://api.github.com/users/webmat/events{/privacy}","received_events_url":"https://api.github.com/users/webmat/received_events","type":"User","site_admin":false},"created_at":"2020-04-16T14:47:22Z","updated_at":"2020-04-16T14:47:36Z","author_association":"NONE","body":"This makes sense, and would indeed be a good simplification. But this would force all string fields defined this way to be indexed both ways?\r\n\r\nECS followed the Beats convention of trying to do `keyword` only as much as possible, for performance reasons.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/624185440","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-624185440","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":624185440,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDE4NTQ0MA==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2020-05-05T17:09:48Z","updated_at":"2020-05-05T17:09:48Z","author_association":"CONTRIBUTOR","body":"Instead of introducing a new `exact_match`  query, can we use `term` query for exact matching and make `term` query fail on text fields with a message  like \"use match query instead\"?  \r\n\r\n----\r\nI like the idea of having a new `text_keyword` field, which is a wrapper around a text and a subfield `keyword` field and queries/aggs are delegated to one of those fields automatically.\r\n\r\nAnother way to organize `text_keyword` is to index both the exact  form and tokenized form into the same Lucene field. This is inspired by the new `wildcard` field. The exact form can be surrounded by some fake symbols, e.g. \"0<exact_value>00\".  If exact and tokenized form are the same, we can only keep the exact value, which will allow us to save space for many solution fields that mostly single-valued. \r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/624234069","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-624234069","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":624234069,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIzNDA2OQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2020-05-05T18:38:54Z","updated_at":"2020-05-05T18:38:54Z","author_association":"CONTRIBUTOR","body":"> this would force all string fields defined this way to be indexed both ways\r\n\r\nOnly if you want to support both text search (provided by `text`) and exact match/sorting/aggregations (provided by `keyword`).\r\n\r\n> can we use term query for exact matching and make term query fail on text fields with a message like \"use match query instead\"?\r\n\r\nWe could.\r\n\r\n> index both the exact form and tokenized form into the same Lucene field\r\n\r\nThe space saving idea is interesting. I wonder if that would cause problems. Preserving support for scoring and multi-term queries would be challenging but I believe it could work?\r\n\r\nA problem with the proposal of this issue that we identified when discussing the `wildcard` field is  that we might need variants of the fuzzy, wildcard, regexp, ... queries as well if we want to be consistent in the way that we treat matching individual tokens vs. full values, which might not be scalable.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/624303036","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-624303036","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":624303036,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDMwMzAzNg==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2020-05-05T20:59:22Z","updated_at":"2020-05-05T20:59:22Z","author_association":"CONTRIBUTOR","body":"> A problem with the proposal of this issue that we identified when discussing the wildcard field is that we might need variants of the fuzzy, wildcard, regexp, ... queries as well if we want to be consistent in the way that we treat matching individual tokens vs. full values, which might not be scalable.\r\n\r\nThis, indeed a substantial problem, and makes this proposal not worth it.\r\n\r\n\r\n> fuzzy, wildcard, regexp\r\n\r\nSpeaking of these queries, if we go with a text field and a `keyword` subfield, do these queries apply only to `keyword` subfield? or it will be applied across two fields (boolean OR/multi-match)?\r\n\r\n> Preserving support for scoring\r\n\r\nIt seems that most queries used in observability solutions are not concerned about textual scoring, but only filtering.  \r\n\r\n---\r\nAnother idea to optimize space could be to have  a text field and a `keyword` subfield as we planned,  always index a field value to the keyword field, but only index it into the text field only if its analyzed version is different. \r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/624487594","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-624487594","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":624487594,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDQ4NzU5NA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2020-05-06T07:29:20Z","updated_at":"2020-05-06T07:29:20Z","author_association":"CONTRIBUTOR","body":"> Speaking of these queries, if we go with a text field and a keyword subfield, do these queries apply only to keyword subfield? or it will be applied across two fields (boolean OR/multi-match)?\r\n\r\nThis is the question that helped us discover this problem. :)\r\n\r\n> It seems that most queries used in observability solutions are not concerned about textual scoring, but only filtering.\r\n\r\nAgreed.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/635524267","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-635524267","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":635524267,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNTUyNDI2Nw==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2020-05-28T18:37:11Z","updated_at":"2020-05-28T18:37:11Z","author_association":"CONTRIBUTOR","body":"We had a team discussion, and we are in favour to  proceed with a `text_keyword` field:\r\n- this will be a single field on the elasticsearch side \r\n- internally it will be mapped to two Lucene fields: keyword and text field.\r\n- all term-level queries (term, fuzzy, wildcard, prefix, range, new exact_match query) will be delegate to the internal keyword field\r\n- all full-text queries will be delegated to the internal text field\r\n- aggs will be run on the internal keyword field\r\n- `doc_values` mapping parameter will be applied to the internal keyword field and can be disabled\r\n- `index_options` will be applied to the text field\r\n- `enabled` parameter will be applied to both fields (if  a user need to disable keyword or text, they should use traditional text/keyword fields).\r\n\r\nSome things still left for the discussion:\r\n- should we allow user's access to the individual internal fields (for example a user wants to run a term query on the internal text field)?\r\n- what about `significant_terms` agg that can potentially be run both on text or keyword field? should we run it only on the keyword field?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/635988399","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-635988399","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":635988399,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNTk4ODM5OQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2020-05-29T14:00:57Z","updated_at":"2020-05-29T14:00:57Z","author_association":"CONTRIBUTOR","body":">what about significant_terms agg that can potentially be run both on text or keyword field? should we run it only on the keyword field?\r\n\r\nThe `significant_text` agg is designed for `text` fields (typically based on samples of top hits using `sampler` agg, re-analyzes source on the fly). \r\nThe `significant_terms` agg typically targets `keyword` fields (accessing doc values.). It can target `text` fields too but we advise against it because it requires fielddata. \r\n\r\nI'd be happy to see us formalise these patterns by making them only target their respective field types.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/637026197","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-637026197","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":637026197,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNzAyNjE5Nw==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2020-06-01T18:20:07Z","updated_at":"2020-06-01T18:20:07Z","author_association":"MEMBER","body":"I had a couple questions about the proposal:\r\n* I'm curious about example cases where we see `text_keyword` being useful. The newly-introduced `wildcard` field might cover many cases in which the text + keyword multifield was previously helpful.  (Perhaps we just really like the out-of-the-box experience it provides and want to use `text_keyword` as the dynamic mapping type for strings?)\r\n* I wonder if we should be adding another string field type whose use + configuration overlaps a lot with existing ones. I'm worried that it's slowly becoming overwhelming for users to understand all the field types we offer and which ones to use to model their data. Did we consider alternatives like adding an option on the `text` field type, something like `index_exact`?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/637048720","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-637048720","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":637048720,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNzA0ODcyMA==","user":{"login":"webmat","id":2300,"node_id":"MDQ6VXNlcjIzMDA=","avatar_url":"https://avatars1.githubusercontent.com/u/2300?v=4","gravatar_id":"","url":"https://api.github.com/users/webmat","html_url":"https://github.com/webmat","followers_url":"https://api.github.com/users/webmat/followers","following_url":"https://api.github.com/users/webmat/following{/other_user}","gists_url":"https://api.github.com/users/webmat/gists{/gist_id}","starred_url":"https://api.github.com/users/webmat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/webmat/subscriptions","organizations_url":"https://api.github.com/users/webmat/orgs","repos_url":"https://api.github.com/users/webmat/repos","events_url":"https://api.github.com/users/webmat/events{/privacy}","received_events_url":"https://api.github.com/users/webmat/received_events","type":"User","site_admin":false},"created_at":"2020-06-01T19:09:00Z","updated_at":"2020-06-01T19:09:00Z","author_association":"NONE","body":"I think @jtibshirani makes a good point. In ECS we added a `.text` multi-field to some keyword fields as a way to work around not having `wildcard` and query-time case insensitivity. When both of these are widely available, I think the need to for these multi-fields in ECS will mostly go away.\r\n\r\nOne place I think indexing both as `keyword` and `text` is still very useful is for initial dataset exploration, however.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/637366020","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-637366020","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":637366020,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNzM2NjAyMA==","user":{"login":"astefan","id":893749,"node_id":"MDQ6VXNlcjg5Mzc0OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/893749?v=4","gravatar_id":"","url":"https://api.github.com/users/astefan","html_url":"https://github.com/astefan","followers_url":"https://api.github.com/users/astefan/followers","following_url":"https://api.github.com/users/astefan/following{/other_user}","gists_url":"https://api.github.com/users/astefan/gists{/gist_id}","starred_url":"https://api.github.com/users/astefan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/astefan/subscriptions","organizations_url":"https://api.github.com/users/astefan/orgs","repos_url":"https://api.github.com/users/astefan/repos","events_url":"https://api.github.com/users/astefan/events{/privacy}","received_events_url":"https://api.github.com/users/astefan/received_events","type":"User","site_admin":false},"created_at":"2020-06-02T08:03:26Z","updated_at":"2020-06-02T08:03:26Z","author_association":"CONTRIBUTOR","body":"Another interesting point that @jtibshirani is bringing forth, and which I've been thinking about as well, is the possibly overwhelming growing list of field types we offer. I _think_ I understand the need for the new field types, and I've been loosely monitoring their addition more or less from an user point of view (finding out a new field type is being added, on the surface understanding the need for it and then just looking at the docs). And there are a lot of \"specialized\" field types out there, the later ones being added more from an \"internal\" usage need imho.\r\n\r\nI'd be curious if anyone else is thinking the same ^ and if we could better handle the way users look at our growing list of field types in the future. An example would be the way we document the field types. Now, almost all non-core field types are under the \"specialized\" section. I would argue that the IP field, for example, shouldn't be in the \"specialized\" section, but maybe in the \"core\" one. It has a long history, it's fairly easy to understand and it doesn't require an edge case scenario to be used (like it happens with most of the other specialized field types). I would even push this further and suggest a new field types section - \"Advanced\", maybe - where _flattened_, _constant_keyword_, _histogram_... should be moved.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/637390144","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-637390144","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":637390144,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNzM5MDE0NA==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2020-06-02T08:45:24Z","updated_at":"2020-06-02T08:45:24Z","author_association":"CONTRIBUTOR","body":"For me the biggest shift I've seen in requirements is the move away from traditional ideas of indexing human-authored text to indexing machine-generated text.\r\nTraditionally tokenisation was useful normalisation that did all of the following:\r\n\r\n1) Breaking strings into words by splitting on punctuation\r\n2) Lowercasing\r\n3) Removing plurals, past tense etc (ie stemming)\r\n4) Injecting useful synonyms.\r\n\r\nWhile useful on prose, none of the above is helpful when searching stacktraces, weblogs etc.\r\nWe just want matching on arbitrary parts of character sequences - which is where the wildcard field comes in. It marks a break with token-based matching. Users no longer need to think of the indexed terms defined by a choice of Analyzer (whose logic is often a black box to most).\r\n\r\nThis distinction between indexing for prose and indexing for exact-matching is perhaps the biggest change to reflect in our mapping choices. \r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/637706260","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-637706260","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":637706260,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNzcwNjI2MA==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2020-06-02T17:48:53Z","updated_at":"2020-06-02T18:22:24Z","author_association":"MEMBER","body":"@astefan I also think improving the documentation on field types could be a big help to our users. I filed #57548 based on your thoughts -- we can continue the discussion there to keep this issue focused on text/ keyword mappings.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/638267185","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-638267185","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":638267185,"node_id":"MDEyOklzc3VlQ29tbWVudDYzODI2NzE4NQ==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2020-06-03T15:20:30Z","updated_at":"2020-06-03T15:20:30Z","author_association":"CONTRIBUTOR","body":"> I'm curious about example cases where we see text_keyword being useful. The newly-introduced wildcard field might cover many cases in which the text + keyword multifield was previously helpful. (Perhaps we just really like the out-of-the-box experience it provides and want to use text_keyword as the dynamic mapping type for strings?)\r\n\r\n@jtibshirani  Indeed, `wildcard` is very useful for ECS and logging solutions, but being special \"keyword\" type, it doesn't deal with full-text search. I think with the main goal of a  new `text_keyword` field is to substitute text/keyword multi-field for a dynamic string mapping (as you correctly noticed). The benefits of this are following:\r\n-   Make automatic decisions what sub-field to use for term queries, full text queries, agg instead of asking this from a user in Kibana or through query DSL. This will lead to easier adoption of elasticsearch for new users. \r\n -  Easing pain to deal with multi-fields. New users get confused what is X.keyword field.  Solutions ( we may still have some multifields in them even most fields are indexed as wildcards) have to make decisions which field of the multifields to use (e.g. SQL *, = operators), this decisions will be dealt on the es side.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/644287841","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-644287841","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":644287841,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NDI4Nzg0MQ==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2020-06-15T18:09:50Z","updated_at":"2020-06-15T18:09:50Z","author_association":"MEMBER","body":">  I think with the main goal of a new text_keyword field is to substitute text/keyword multi-field for a dynamic string mapping (as you correctly noticed). The benefits of this are following...\r\n\r\nThanks @mayya-sharipova, this makes sense! If this is the main use case it would be nice to verify that we plan to make this change (starting to use a combined text/keyword for dynamic string mappings, instead of say switching to `wildcard`).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/646266467","html_url":"https://github.com/elastic/elasticsearch/issues/53181#issuecomment-646266467","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53181","id":646266467,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NjI2NjQ2Nw==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2020-06-18T19:37:27Z","updated_at":"2020-06-18T19:37:27Z","author_association":"CONTRIBUTOR","body":"We had a discussion within the search team and have decided the following:\r\n- Use term-based queries for exact match for the [keyword family](https://github.com/elastic/elasticsearch/pull/58315)\r\n- We are going to [add multi-fields info into the fields caps](https://github.com/elastic/elasticsearch/issues/58357). This should help to forward exact match queries to specific field types.\r\n\r\nI am closing this issue because: \r\n- we don't plan to introduce a new exact_match query\r\n- with a new multi-fields info in the fields caps it will be easier to forward queries/aggs to the corresponding fields; this makes a proposal for a joint `text_keyword` field less attractive.  We may later re-consider `text_keyword` field type if it brings savings in space.","performed_via_github_app":null}]