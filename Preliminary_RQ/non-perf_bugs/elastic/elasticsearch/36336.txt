{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/36336","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36336/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36336/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36336/events","html_url":"https://github.com/elastic/elasticsearch/issues/36336","id":388401366,"node_id":"MDU6SXNzdWUzODg0MDEzNjY=","number":36336,"title":"Creation of indexes fail with a 404 because a PUT happens _too soon_","user":{"login":"AlexisWilke","id":1028617,"node_id":"MDQ6VXNlcjEwMjg2MTc=","avatar_url":"https://avatars3.githubusercontent.com/u/1028617?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexisWilke","html_url":"https://github.com/AlexisWilke","followers_url":"https://api.github.com/users/AlexisWilke/followers","following_url":"https://api.github.com/users/AlexisWilke/following{/other_user}","gists_url":"https://api.github.com/users/AlexisWilke/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexisWilke/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexisWilke/subscriptions","organizations_url":"https://api.github.com/users/AlexisWilke/orgs","repos_url":"https://api.github.com/users/AlexisWilke/repos","events_url":"https://api.github.com/users/AlexisWilke/events{/privacy}","received_events_url":"https://api.github.com/users/AlexisWilke/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-12-06T21:16:57Z","updated_at":"2018-12-11T07:10:51Z","closed_at":"2018-12-07T06:26:21Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version:** 6.2.3.7\r\n\r\n**Plugins installed**: none\r\n\r\n**JVM version:**\r\n\r\n    java version \"1.8.0_91\"\r\n    Java(TM) SE Runtime Environment (build 1.8.0_91-b14)\r\n    Java HotSpot(TM) 64-Bit Server VM (build 25.91-b14, mixed mode)\r\n\r\n**OS version:**\r\n\r\nLatest of Ubuntu 16.04\r\n\r\n    Linux tristan 4.4.0-140-generic #166-Ubuntu SMP Wed Nov 14 20:09:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nI use [express-cassandra](https://github.com/masumsoft/express-cassandra) to manage one Elassandra node. While testing, I like to reset my database over and over again. So I stop the running instance, delete the `data` folder, and restart Elassandra many times.\r\n\r\nMy installation has just 3 models and yet when I run my code that creates those three models, I get a 404 about a missing index. If you look at the sequence of commands generated in the `elasticsearch/src/lib/transport.js` file, we can see that the `PUT ...` used to create the index exists, only the code attempting to setup the mapping fails saying that one of those indexes is missing.\r\n\r\nTo see the commands sent to the REST interface of ElasticSearch, I added the following around line 213 of `transport.js`:\r\n\r\n    console.log('----------------------------- elasticsearch request')\r\n    console.log(params.req)\r\n\r\nThe output of which is shown in the Logs section below.\r\n\r\nJust an idea, but it looks to me as if the code was running in parallel and that could be what causes the problem. Not the parallelism itself, but the fact that it slows down everything and timings are out of whack giving the system _a chance_ to send the `PUT ...` for the mapping too soon. On the other hand, if you return a positive response before a newly created index is accessible, it's definitely asking for trouble.\r\n\r\n**Steps to reproduce**:\r\n\r\nHere is my CQL schema:\r\n\r\n    CREATE KEYSPACE my_search WITH replication = {'class': 'NetworkTopologyStrategy', 'DC1': '1'}  AND durable_writes = true;\r\n\r\n    CREATE TABLE my_search.table1 (\r\n        id uuid PRIMARY KEY,\r\n        authenticated boolean,\r\n        date timestamp,\r\n        data text\r\n    ) WITH bloom_filter_fp_chance = 0.01\r\n        AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}\r\n        AND comment = ''\r\n        AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}\r\n        AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}\r\n        AND crc_check_chance = 1.0\r\n        AND dclocal_read_repair_chance = 0.1\r\n        AND default_time_to_live = 0\r\n        AND gc_grace_seconds = 864000\r\n        AND max_index_interval = 2048\r\n        AND memtable_flush_period_in_ms = 0\r\n        AND min_index_interval = 128\r\n        AND read_repair_chance = 0.0\r\n        AND speculative_retry = '99PERCENTILE';\r\n\r\n    CREATE TABLE my_search.table2 (\r\n        id uuid PRIMARY KEY,\r\n        ref uuid,\r\n        name text,\r\n        value text\r\n    ) WITH bloom_filter_fp_chance = 0.01\r\n        AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}\r\n        AND comment = ''\r\n        AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}\r\n        AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}\r\n        AND crc_check_chance = 1.0\r\n        AND dclocal_read_repair_chance = 0.1\r\n        AND default_time_to_live = 0\r\n        AND gc_grace_seconds = 864000\r\n        AND max_index_interval = 2048\r\n        AND memtable_flush_period_in_ms = 0\r\n        AND min_index_interval = 128\r\n        AND read_repair_chance = 0.0\r\n        AND speculative_retry = '99PERCENTILE';\r\n\r\n    CREATE TABLE my_search.table3 (\r\n        id uuid PRIMARY KEY,\r\n        data text,\r\n        ref uuid,\r\n        date timestamp,\r\n        info map<text, text>\r\n    ) WITH bloom_filter_fp_chance = 0.01\r\n        AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}\r\n        AND comment = ''\r\n        AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}\r\n        AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}\r\n        AND crc_check_chance = 1.0\r\n        AND dclocal_read_repair_chance = 0.1\r\n        AND default_time_to_live = 0\r\n        AND gc_grace_seconds = 864000\r\n        AND max_index_interval = 2048\r\n        AND memtable_flush_period_in_ms = 0\r\n        AND min_index_interval = 128\r\n        AND read_repair_chance = 0.0\r\n        AND speculative_retry = '99PERCENTILE';\r\n\r\n\r\nAnd here is my script that runs cqlsh to create the schema and immediately runs the various GET, HEAD, PUT commands pretty much the same way as `express-cassandra` does.\r\n\r\n(Obviously `express-cassandra` uses the `HEAD` to know what to do next, my script here just doesn't check anything. It expects the database to be _brand new_ i.e. if not brand new, stop the database, delete the `data` folder if it exists, and restart the database, wait for it to be up and ready, then start this script.)\r\n\r\n    #!/bin/sh\r\n\r\n    contrib/elassandra-6.2.3.7/bin/cqlsh -f tmp/schema.cql\r\n\r\n    curl -XGET 'http://127.0.0.1:9200/_nodes/_all/http?filter_path=nodes.*.http.publish_address,nodes.*.name,nodes.*.hostname,nodes.*.host,nodes.*.version' ; echo\r\n\r\n    curl --head 'http://127.0.0.1:9200/my_search' ; echo\r\n    curl -XPUT -H 'Content-Type: application/json' 'http://localhost:9200/my_search' -d '{\"settings\":{\"keyspace\":\"my_search\",\"index\":{\"number_of_shards\":\"1\"}},\"index\":{\"number_of_shards\":1}}' ; echo\r\n\r\n    (\r\n    curl --head 'http://127.0.0.1:9200/my_search_table1' ; echo\r\n    curl -XPUT -H 'Content-Type: application/json' 'http://localhost:9200/my_search_table1' -d '{\"settings\":{\"keyspace\":\"my_search\",\"index\":{\"number_of_shards\":\"1\"}},\"index\":{\"number_of_shards\":1}}' ; echo\r\n    curl -XPUT -H 'Content-Type: application/json' 'http://localhost:9200/my_search_table1/_mapping/table1' -d '{\"properties\":{\"id\":{\"type\":\"keyword\",\"cql_collection\":\"singleton\",\"cql_partition_key\":true,\"cql_primary_key_order\":0},\"date\":{\"type\":\"date\",\"cql_collection\":\"singleton\"},\"data\":{\"type\":\"text\",\"cql_collection\":\"singleton\",\"index\":true},\"authenticated\":{\"type\":\"boolean\",\"cql_collection\":\"singleton\"}}}' ; echo\r\n    )&\r\n\r\n    (\r\n    curl --head 'http://127.0.0.1:9200/my_search_table2' ; echo\r\n    curl -XPUT -H 'Content-Type: application/json' 'http://localhost:9200/my_search_table2' -d '{\"settings\":{\"keyspace\":\"my_search\",\"index\":{\"number_of_shards\":\"1\"}},\"index\":{\"number_of_shards\":1}}' ; echo\r\n    curl -XPUT -H 'Content-Type: application/json' 'http://localhost:9200/my_search_table2/_mapping/table2' -d '{\"properties\":{\"id\":{\"type\":\"keyword\",\"cql_collection\":\"singleton\",\"cql_partition_key\":true,\"cql_primary_key_order\":0},\"ref\":{\"type\":\"keyword\",\"cql_collection\":\"singleton\"},\"name\":{\"type\":\"keyword\",\"cql_collection\":\"singleton\"},\"value\":{\"type\":\"text\",\"cql_collection\":\"singleton\",\"index\":true}}}' ; echo\r\n    )&\r\n\r\n    (\r\n    curl --head 'http://127.0.0.1:9200/my_search_table3' ; echo\r\n    curl -XPUT -H 'Content-Type: application/json' 'http://localhost:9200/my_search_table3' -d '{\"settings\":{\"keyspace\":\"my_search\",\"index\":{\"number_of_shards\":\"1\"}},\"index\":{\"number_of_shards\":1}}' ; echo\r\n    curl -XPUT -H 'Content-Type: application/json' 'http://localhost:9200/my_search_table3/_mapping/table3' -d '{\"properties\":{\"id\":{\"type\":\"keyword\",\"cql_collection\":\"singleton\",\"cql_partition_key\":true,\"cql_primary_key_order\":0},\"ref\":{\"type\":\"keyword\",\"cql_collection\":\"singleton\"},\"date\":{\"type\":\"date\",\"cql_collection\":\"singleton\"},\"data\":{\"type\":\"text\",\"cql_collection\":\"singleton\",\"index\":true}}}' ; echo\r\n    )&\r\n\r\n    wait\r\n\r\n**IMPORTANT NOTE:** In my `express-cassandra` code I setup all timeout values to 1h instead of the various defaults it uses (12 to 30 seconds) to at least I can avoid time outs.\r\n\r\n**Logs:**\r\n\r\n_note: this is the log from my actual software, opposed to the logs I would get from the script above. The order may vary and which table index generates the 404 error(s) may vary as well._\r\n\r\n    ----------------------------- elasticsearch request\r\n    { method: 'GET',\r\n      path: '/_nodes/_all/http',\r\n      query:\r\n       { filter_path:\r\n          'nodes.*.http.publish_address,nodes.*.name,nodes.*.hostname,nodes.*.host,nodes.*.version' },\r\n      body: undefined,\r\n      headers: {} }\r\n    ----------------------------- elasticsearch request\r\n    { method: 'HEAD',\r\n      path: '/my_search',\r\n      query: {},\r\n      body: undefined,\r\n      headers: {} }\r\n    ----------------------------- elasticsearch request\r\n    { method: 'PUT',\r\n      path: '/my_search',\r\n      query: {},\r\n      body:\r\n       '{\"settings\":{\"keyspace\":\"my_search\",\"index\":{\"number_of_shards\":\"1\"}},\"index\":{\"number_of_shards\":1}}',\r\n      headers: { 'content-type': 'application/json' } }\r\n    ----------------------------- elasticsearch request\r\n    { method: 'HEAD',\r\n      path: '/my_search_table1',\r\n      query: {},\r\n      body: undefined,\r\n      headers: {} }\r\n    ----------------------------- elasticsearch request\r\n    { method: 'PUT',\r\n      path: '/my_search_table1',\r\n      query: {},\r\n      body:\r\n       '{\"settings\":{\"keyspace\":\"my_search\",\"index\":{\"number_of_shards\":\"1\"}},\"index\":{\"number_of_shards\":1}}',\r\n      headers: { 'content-type': 'application/json' } }\r\n    ----------------------------- elasticsearch request\r\n    { method: 'PUT',\r\n      path: '/my_search_table1/_mapping/table1',\r\n      query: {},\r\n      body:\r\n       '{\"properties\":{\"primary_key\":{\"type\":\"keyword\",\"cql_collection\":\"singleton\",\"cql_partition_key\":true,\"cql_primary_key_order\":0},\"created_date\":{\"type\":\"date\",\"cql_collection\":\"singleton\"},\"url\":{\"type\":\"text\",\"cql_collection\":\"singleton\",\"index\":true},\"authenticated\":{\"type\":\"boolean\",\"cql_collection\":\"singleton\"}}}',\r\n      headers: { 'content-type': 'application/json' } }\r\n    ----------------------------- elasticsearch request\r\n    { method: 'HEAD',\r\n      path: '/my_search_table2',\r\n      query: {},\r\n      body: undefined,\r\n      headers: {} }\r\n    ----------------------------- elasticsearch request\r\n    { method: 'PUT',\r\n      path: '/my_search_table2',\r\n      query: {},\r\n      body:\r\n       '{\"settings\":{\"keyspace\":\"my_search\",\"index\":{\"number_of_shards\":\"1\"}},\"index\":{\"number_of_shards\":1}}',\r\n      headers: { 'content-type': 'application/json' } }\r\n    ----------------------------- elasticsearch request\r\n    { method: 'HEAD',\r\n      path: '/my_search_table3',\r\n      query: {},\r\n      body: undefined,\r\n      headers: {} }\r\n    ----------------------------- elasticsearch request\r\n    { method: 'PUT',\r\n      path: '/my_search_table3',\r\n      query: {},\r\n      body:\r\n       '{\"settings\":{\"keyspace\":\"my_search\",\"index\":{\"number_of_shards\":\"1\"}},\"index\":{\"number_of_shards\":1}}',\r\n      headers: { 'content-type': 'application/json' } }\r\n    ----------------------------- elasticsearch request\r\n    { method: 'PUT',\r\n      path: '/my_search_table2/_mapping/table2',\r\n      query: {},\r\n      body:\r\n       '{\"properties\":{\"id\":{\"type\":\"keyword\",\"cql_collection\":\"singleton\",\"cql_partition_key\":true,\"cql_primary_key_order\":0},\"ref\":{\"type\":\"keyword\",\"cql_collection\":\"singleton\"},\"name\":{\"type\":\"keyword\",\"cql_collection\":\"singleton\"},\"value\":{\"type\":\"text\",\"cql_collection\":\"singleton\",\"index\":true}}}',\r\n      headers: { 'content-type': 'application/json' } }\r\n    { Error: [index_not_found_exception] no such index, with { resource.type=\"index_or_alias\" & resource.id=\"my_search_table2\" & index_uuid=\"_na_\" & index=\"my_search_table2\" }\r\n        at respond (.../my_search/node_modules/elasticsearch/src/lib/transport.js:310:15)\r\n        at checkRespForFailure (.../my_search/node_modules/elasticsearch/src/lib/transport.js:269:7)\r\n        at HttpConnector.<anonymous> (.../my_search/node_modules/elasticsearch/src/lib/connectors/http.js:165:7)\r\n        at IncomingMessage.wrapper (.../my_search/node_modules/lodash/lodash.js:4935:19)\r\n        at IncomingMessage.emit (events.js:187:15)\r\n        at endReadableNT (_stream_readable.js:1094:12)\r\n        at process._tickCallback (internal/process/next_tick.js:63:19)\r\n      status: 404,\r\n      displayName: 'NotFound',\r\n      message:\r\n       '[index_not_found_exception] no such index, with { resource.type=\"index_or_alias\" & resource.id=\"my_search_table2\" & index_uuid=\"_na_\" & index=\"my_search_table2\" }',\r\n      path: '/my_search_table2/_mapping/table2',\r\n      query: {},\r\n      body:\r\n       '{\"properties\":{\"id\":{\"type\":\"keyword\",\"cql_collection\":\"singleton\",\"cql_partition_key\":true,\"cql_primary_key_order\":0},\"ref\":{\"type\":\"keyword\",\"cql_collection\":\"singleton\"},\"name\":{\"type\":\"keyword\",\"cql_collection\":\"singleton\"},\"value\":{\"type\":\"text\",\"cql_collection\":\"singleton\",\"index\":true}}}',\r\n      statusCode: 404,\r\n      response:\r\n       '{\"error\":{\"root_cause\":[{\"type\":\"index_not_found_exception\",\"reason\":\"no such index\",\"resource.type\":\"index_or_alias\",\"resource.id\":\"my_search_table2\",\"index_uuid\":\"_na_\",\"index\":\"my_search_table2\"}],\"type\":\"index_not_found_exception\",\"reason\":\"no such index\",\"resource.type\":\"index_or_alias\",\"resource.id\":\"my_search_table2\",\"index_uuid\":\"_na_\",\"index\":\"my_search_table2\"},\"status\":404}',\r\n      toString: [Function],\r\n      toJSON: [Function] }\r\n","closed_by":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"performed_via_github_app":null}