{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3495","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3495/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3495/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3495/events","html_url":"https://github.com/elastic/elasticsearch/issues/3495","id":17995568,"node_id":"MDU6SXNzdWUxNzk5NTU2OA==","number":3495,"title":"Using a missing filter for attributes of a nested object always returns an empty set","user":{"login":"pfleidi","id":118549,"node_id":"MDQ6VXNlcjExODU0OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/118549?v=4","gravatar_id":"","url":"https://api.github.com/users/pfleidi","html_url":"https://github.com/pfleidi","followers_url":"https://api.github.com/users/pfleidi/followers","following_url":"https://api.github.com/users/pfleidi/following{/other_user}","gists_url":"https://api.github.com/users/pfleidi/gists{/gist_id}","starred_url":"https://api.github.com/users/pfleidi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pfleidi/subscriptions","organizations_url":"https://api.github.com/users/pfleidi/orgs","repos_url":"https://api.github.com/users/pfleidi/repos","events_url":"https://api.github.com/users/pfleidi/events{/privacy}","received_events_url":"https://api.github.com/users/pfleidi/received_events","type":"User","site_admin":true},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"assignees":[{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false}],"milestone":null,"comments":9,"created_at":"2013-08-13T13:15:12Z","updated_at":"2019-01-15T10:54:46Z","closed_at":"2015-10-14T13:16:06Z","author_association":"NONE","active_lock_reason":null,"body":"Hi there,\n\nI was trying to use the `exists`/`missing` filters when I stumbled upon this behavior: When I use the `missing` filter for nested objects, it always returns an empty set if the containing nested object is missing, too.\n\nHere is my document mapping:\n\n``` javascript\n{\n  \"site\": {\n    \"properties\": {\n      \"host\": {\n        \"type\": \"string\",\n        \"index\": \"not_analyzed\",\n        \"omit_norms\": true,\n        \"index_options\": \"docs\"\n      },\n      \"ip\": {,\n        \"type\": \"string\",\n        \"index\": \"not_analyzed\",\n        \"omit_norms\": true,\n        \"index_options\": \"docs\"\n      },\n      ...\n      \"modules\": {\n        \"type\": \"nested\",\n        \"properties\": {\n          \"module_id\": {\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"index\": \"not_analyzed\",\n            \"omit_norms\": true,\n            \"index_options\": \"docs\"\n          },\n          ...\n        }\n      }\n    }\n  }\n}\n```\n\nMy Document looks like this:\n\n``` javascript\n{\n  \"host\": \"6c1bb1fb58e8c48cabbd1e4382e55871f31ad776.com\",\n  \"ip\" : \"0.0.0.0\",\n  ...\n  \"modules\": [ ]\n}\n```\n\nIf I now use a query with a  nested filter to select every document where modules.name is missing, I only get an empty set.\n\n``` javascript\n{\n  \"query\": {\n    \"filtered\": {\n      \"query\": { \"match_all\": { } },\n\n      \"filter\": {\n        \"nested\": {\n          \"path\": \"modules\",\n          \"query\": {\n            \"filtered\": {\n              \"query\": { \"match_all\": { } },\n\n              \"filter\": {\n                \"missing\": { \"field\": \"modules.name\" }\n              }\n\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nIt seems to work if I submit a document which contains a module:\n\n``` javascript\n{\n  \"host\": \"6c1bb1fb58e8c48cabbd1e4382e55871f31ad776.com\",\n  \"ip\" : \"0.0.0.0\",\n  ...\n  \"modules\": [ { \"version\" : \"foo\" } ]\n}\n\n```\n\nWhen using documents where the modules object isn't empty, use a `missing` filter which looks for \"deeper\" missing attributes seems to work, too.\n\n``` javascript\n{\n  \"query\": {\n    \"filtered\": {\n      \"query\": { \"match_all\": { } },\n\n      \"filter\": {\n        \"nested\": {\n          \"path\": \"modules\",\n          \"query\": {\n            \"filtered\": {\n              \"query\": { \"match_all\": { } },\n\n              \"filter\": {\n                \"missing\": { \"field\": \"modules.foo.bar.baz\" }\n              }\n\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nI was expecting, that a `missing` filter also returns documents if the containing nested object is missing or empty.\n\nUpdate: Wrapping an `exists` filter in a `not` filter doesn't return any documents, either.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}