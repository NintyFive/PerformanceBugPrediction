[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/533184765","html_url":"https://github.com/elastic/elasticsearch/issues/46877#issuecomment-533184765","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46877","id":533184765,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMzE4NDc2NQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-09-19T15:28:37Z","updated_at":"2019-09-19T15:28:37Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-analytics-geo","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/533198531","html_url":"https://github.com/elastic/elasticsearch/issues/46877#issuecomment-533198531","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46877","id":533198531,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMzE5ODUzMQ==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-09-19T16:01:15Z","updated_at":"2019-09-19T16:01:15Z","author_association":"MEMBER","body":"Hmm...I think the `missing` bucket is probably the way to go.  I haven't looked to see the technical impact, but at least philosophically, we might be treading into dangerous waters if we allow \"casting\" values to unexpected data types.  E.g. numeric fields return numeric buckets, and so `missing` needs to be numeric.  Ditto to strings, booleans, etc.\r\n\r\nAllowing non-datatype values could be unexpected for a client that is expecting all data types to be the same.  We've slowly been trying to remove leniency from APIs since they often cause subtle issues, and this feels like it might go the other direction.\r\n\r\nI'll mark this as team-discuss and see what the wider team thinks.  Thanks for raising the issue!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/648972791","html_url":"https://github.com/elastic/elasticsearch/issues/46877#issuecomment-648972791","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46877","id":648972791,"node_id":"MDEyOklzc3VlQ29tbWVudDY0ODk3Mjc5MQ==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2020-06-24T17:53:48Z","updated_at":"2020-06-24T17:53:48Z","author_association":"MEMBER","body":"We talked about this a long time ago but I forgot to update: we chatted and decided not to implement this.  We definitely saw the  utility, but the way things are handled internally means it is a nightmare to deal with technically (since different shards can potentially have different types, it gets very difficult quickly when dealing with different types on the fields and unmapped/missing/scripts).  \r\n\r\nSince then, we've actually been putting a lot of work into _removing_ leniency, since that's a big source of subtle edge-case bugs.  So this would be a bit of a step backwards in that regard.\r\n\r\nOn the upside, this can be handled with the `missing` aggregation as previously mentioned, so the functionality is there just in a different part of the response.\r\n\r\nGoing to close, apologies again for the long delay!","performed_via_github_app":null}]