[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/379664447","html_url":"https://github.com/elastic/elasticsearch/issues/29420#issuecomment-379664447","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29420","id":379664447,"node_id":"MDEyOklzc3VlQ29tbWVudDM3OTY2NDQ0Nw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-04-09T07:46:47Z","updated_at":"2018-04-09T07:46:47Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/380997313","html_url":"https://github.com/elastic/elasticsearch/issues/29420#issuecomment-380997313","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29420","id":380997313,"node_id":"MDEyOklzc3VlQ29tbWVudDM4MDk5NzMxMw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-04-13T01:58:45Z","updated_at":"2018-04-13T01:58:45Z","author_association":"MEMBER","body":"Historically this arose because we use to use the index name as the name of the directory on disk. Since Elasticsearch can run on case-insensitive filesystems, that would mean `a` and `A` would map to the same directory on disk and that's horrible if these are meant to be different indices.\r\n\r\nThe historical reason is indeed relic of the past now that we no longer use the index name as the name of the directory on disk; instead, we use an index UUID.\r\n\r\nThat said, we think that it is trappy that we could have two indices in the cluster whose name differs only by case: `a` and `A`. It means the user could be a typo or application bug away from searching the wrong index. That is bad, we don't like that. As such, we are going to reject this feature request. Additionally, we are going to revisit how we handle index names in general (the cafÃ© problem: the sequence of bytes 0x63 0x61 0x66 0xe9 and 0x63 0x61 0x66 0x65 0x0301 display identically (small e with acute versus e followed by combining acute accent)) and consider only allowing lowercase alpha, numbers, and a few special characters such as `_` and `-`: #29503\r\n\r\nFor your specific case:\r\n\r\n> For use cases that have index name format like: \"user-{base64_user_id}\"\r\n\r\nWe tend to frown upon an index per tenant. It leads to many small indices and we think that is a bad practice.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/381031676","html_url":"https://github.com/elastic/elasticsearch/issues/29420#issuecomment-381031676","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29420","id":381031676,"node_id":"MDEyOklzc3VlQ29tbWVudDM4MTAzMTY3Ng==","user":{"login":"xfumihiro","id":12194969,"node_id":"MDQ6VXNlcjEyMTk0OTY5","avatar_url":"https://avatars2.githubusercontent.com/u/12194969?v=4","gravatar_id":"","url":"https://api.github.com/users/xfumihiro","html_url":"https://github.com/xfumihiro","followers_url":"https://api.github.com/users/xfumihiro/followers","following_url":"https://api.github.com/users/xfumihiro/following{/other_user}","gists_url":"https://api.github.com/users/xfumihiro/gists{/gist_id}","starred_url":"https://api.github.com/users/xfumihiro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xfumihiro/subscriptions","organizations_url":"https://api.github.com/users/xfumihiro/orgs","repos_url":"https://api.github.com/users/xfumihiro/repos","events_url":"https://api.github.com/users/xfumihiro/events{/privacy}","received_events_url":"https://api.github.com/users/xfumihiro/received_events","type":"User","site_admin":false},"created_at":"2018-04-13T05:55:22Z","updated_at":"2018-04-13T05:57:02Z","author_association":"NONE","body":"@jasontedor thanks for the detailed reply!\r\n\r\nIn my case, index-per-user is needed for providing user specific suggestions.\r\nIs there a better way to do this?\r\nDo Context Suggester support large number of Categories?\r\n\r\nhttps://discuss.elastic.co/t/problem-with-context-suggester-when-a-document-has-more-than-256-categories/21875\r\nhttps://discuss.elastic.co/t/context-suggester-large-number-of-categories/22013\r\nhttps://stackoverflow.com/questions/46657331/elastic-search-context-suggester-large-number-of-categories\r\nhttps://gist.github.com/goldmar/2c3f64575df420a5413a\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/381206716","html_url":"https://github.com/elastic/elasticsearch/issues/29420#issuecomment-381206716","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29420","id":381206716,"node_id":"MDEyOklzc3VlQ29tbWVudDM4MTIwNjcxNg==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-04-13T17:30:15Z","updated_at":"2018-04-13T17:30:15Z","author_association":"MEMBER","body":"@xfumihiro For that question, please use the [forum](https://discuss.elastic.co).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/420816933","html_url":"https://github.com/elastic/elasticsearch/issues/29420#issuecomment-420816933","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29420","id":420816933,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMDgxNjkzMw==","user":{"login":"veleek","id":1055021,"node_id":"MDQ6VXNlcjEwNTUwMjE=","avatar_url":"https://avatars3.githubusercontent.com/u/1055021?v=4","gravatar_id":"","url":"https://api.github.com/users/veleek","html_url":"https://github.com/veleek","followers_url":"https://api.github.com/users/veleek/followers","following_url":"https://api.github.com/users/veleek/following{/other_user}","gists_url":"https://api.github.com/users/veleek/gists{/gist_id}","starred_url":"https://api.github.com/users/veleek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/veleek/subscriptions","organizations_url":"https://api.github.com/users/veleek/orgs","repos_url":"https://api.github.com/users/veleek/repos","events_url":"https://api.github.com/users/veleek/events{/privacy}","received_events_url":"https://api.github.com/users/veleek/received_events","type":"User","site_admin":false},"created_at":"2018-09-12T22:19:59Z","updated_at":"2018-09-12T22:19:59Z","author_association":"NONE","body":"@jasontedor - There don't appear to be any similar naming restrictions for aliases, so that means that I can have a collection with the name \"cars_v1\" with the alias \"Cars\".  Then if you write to \"cars\" it will just create a new collection.  Is there any reason not to have the same restriction on alias names, or conversely not allow the same freedom as alias names when naming collections?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/469200152","html_url":"https://github.com/elastic/elasticsearch/issues/29420#issuecomment-469200152","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29420","id":469200152,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTIwMDE1Mg==","user":{"login":"fairOrgAdmin","id":43405547,"node_id":"MDQ6VXNlcjQzNDA1NTQ3","avatar_url":"https://avatars1.githubusercontent.com/u/43405547?v=4","gravatar_id":"","url":"https://api.github.com/users/fairOrgAdmin","html_url":"https://github.com/fairOrgAdmin","followers_url":"https://api.github.com/users/fairOrgAdmin/followers","following_url":"https://api.github.com/users/fairOrgAdmin/following{/other_user}","gists_url":"https://api.github.com/users/fairOrgAdmin/gists{/gist_id}","starred_url":"https://api.github.com/users/fairOrgAdmin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fairOrgAdmin/subscriptions","organizations_url":"https://api.github.com/users/fairOrgAdmin/orgs","repos_url":"https://api.github.com/users/fairOrgAdmin/repos","events_url":"https://api.github.com/users/fairOrgAdmin/events{/privacy}","received_events_url":"https://api.github.com/users/fairOrgAdmin/received_events","type":"User","site_admin":false},"created_at":"2019-03-04T10:25:00Z","updated_at":"2019-03-04T10:25:00Z","author_association":"NONE","body":"> Historically this arose because we use to use the index name as the name of the directory on disk. Since Elasticsearch can run on case-insensitive filesystems, that would mean `a` and `A` would map to the same directory on disk and that's horrible if these are meant to be different indices.\r\n> \r\n> The historical reason is indeed relic of the past now that we no longer use the index name as the name of the directory on disk; instead, we use an index UUID.\r\n> \r\n> That said, we think that it is trappy that we could have two indices in the cluster whose name differs only by case: `a` and `A`. It means the user could be a typo or application bug away from searching the wrong index. That is bad, we don't like that. As such, we are going to reject this feature request. Additionally, we are going to revisit how we handle index names in general (the cafÃ© problem: the sequence of bytes 0x63 0x61 0x66 0xe9 and 0x63 0x61 0x66 0x65 0x0301 display identically (small e with acute versus e followed by combining acute accent)) and consider only allowing lowercase alpha, numbers, and a few special characters such as `_` and `-`: #29503\r\n> \r\n> For your specific case:\r\n> \r\n> > For use cases that have index name format like: \"user-{base64_user_id}\"\r\n> \r\n> We tend to frown upon an index per tenant. It leads to many small indices and we think that is a bad practice.\r\n\r\n@jasontedor Apologies upfront, since I'll disagree with this line of reasoning severely... \r\nIts presumptuous and dictatorial... Trying to guess upfront the types of mistakes people might make is a complex undertaking and finding a simple answer to that just creates problems. \r\nFor example, it is correct that users might make a typo between 'a' and 'A' if they create these indexes by hand. \r\nIt is also true that another group of users might not be owners of the Index name generation and might be using \"business significant\" IDs from other systems as Index names. These users will be forced to to do a toLower() while creating indexes via the API. Additionally they'll be forced to maintain a mapping between original and ES IDs.\r\nAnd I suspect the size of the second group of users will be larger compared to the first over time.","performed_via_github_app":null}]