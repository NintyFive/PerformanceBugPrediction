[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/175585836","html_url":"https://github.com/elastic/elasticsearch/issues/16259#issuecomment-175585836","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16259","id":175585836,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NTU4NTgzNg==","user":{"login":"rendel","id":4909531,"node_id":"MDQ6VXNlcjQ5MDk1MzE=","avatar_url":"https://avatars1.githubusercontent.com/u/4909531?v=4","gravatar_id":"","url":"https://api.github.com/users/rendel","html_url":"https://github.com/rendel","followers_url":"https://api.github.com/users/rendel/followers","following_url":"https://api.github.com/users/rendel/following{/other_user}","gists_url":"https://api.github.com/users/rendel/gists{/gist_id}","starred_url":"https://api.github.com/users/rendel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rendel/subscriptions","organizations_url":"https://api.github.com/users/rendel/orgs","repos_url":"https://api.github.com/users/rendel/repos","events_url":"https://api.github.com/users/rendel/events{/privacy}","received_events_url":"https://api.github.com/users/rendel/received_events","type":"User","site_admin":false},"created_at":"2016-01-27T12:01:54Z","updated_at":"2016-01-27T12:01:54Z","author_association":"CONTRIBUTOR","body":"Related to #16031 \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/175591537","html_url":"https://github.com/elastic/elasticsearch/issues/16259#issuecomment-175591537","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16259","id":175591537,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NTU5MTUzNw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-01-27T12:24:34Z","updated_at":"2016-01-27T12:24:34Z","author_association":"CONTRIBUTOR","body":"@rendel i'm curious as to how you figured out that your queries are heavy to construct on small segments?  That seems counterintuitive.  Could you provide some examples?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/175597258","html_url":"https://github.com/elastic/elasticsearch/issues/16259#issuecomment-175597258","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16259","id":175597258,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NTU5NzI1OA==","user":{"login":"rendel","id":4909531,"node_id":"MDQ6VXNlcjQ5MDk1MzE=","avatar_url":"https://avatars1.githubusercontent.com/u/4909531?v=4","gravatar_id":"","url":"https://api.github.com/users/rendel","html_url":"https://github.com/rendel","followers_url":"https://api.github.com/users/rendel/followers","following_url":"https://api.github.com/users/rendel/following{/other_user}","gists_url":"https://api.github.com/users/rendel/gists{/gist_id}","starred_url":"https://api.github.com/users/rendel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rendel/subscriptions","organizations_url":"https://api.github.com/users/rendel/orgs","repos_url":"https://api.github.com/users/rendel/repos","events_url":"https://api.github.com/users/rendel/events{/privacy}","received_events_url":"https://api.github.com/users/rendel/received_events","type":"User","site_admin":false},"created_at":"2016-01-27T12:37:12Z","updated_at":"2016-01-27T12:37:12Z","author_association":"CONTRIBUTOR","body":"Hi @clintongormley \n\nwe have developed a custom query which embeds a large number of terms to perform a semi-join between indexes (see [siren-join plugin](https://github.com/sirensolutions/siren-join)). The terms are encoded in a byte array for performance consideration, and decoded lazily at query execution time. The decoding of the terms is the heavy part. We are caching them using a cache key. The issue now is that this decoding is always done for small segments. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/175783551","html_url":"https://github.com/elastic/elasticsearch/issues/16259#issuecomment-175783551","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16259","id":175783551,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NTc4MzU1MQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-01-27T18:29:49Z","updated_at":"2016-01-27T18:29:49Z","author_association":"CONTRIBUTOR","body":"If a query is slow when it is not cached, I don't think the cache is to blame. It is something that users would hit anyway after a merge or a restart. I actually think not caching on small segments is _very_ important as:\n- it does not affect performance with regular queries\n- it makes memory accounting more accurate (it is easier to account memory usage for a few large cache entries that many tiny entries)\n- it avoids cache churn due to NRT search.\n\nWhile I think there are things to improve based on the feedback that was given in #16031, I don't think we should make it possible to cache on all segments.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/176724060","html_url":"https://github.com/elastic/elasticsearch/issues/16259#issuecomment-176724060","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16259","id":176724060,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjcyNDA2MA==","user":{"login":"rendel","id":4909531,"node_id":"MDQ6VXNlcjQ5MDk1MzE=","avatar_url":"https://avatars1.githubusercontent.com/u/4909531?v=4","gravatar_id":"","url":"https://api.github.com/users/rendel","html_url":"https://github.com/rendel","followers_url":"https://api.github.com/users/rendel/followers","following_url":"https://api.github.com/users/rendel/following{/other_user}","gists_url":"https://api.github.com/users/rendel/gists{/gist_id}","starred_url":"https://api.github.com/users/rendel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rendel/subscriptions","organizations_url":"https://api.github.com/users/rendel/orgs","repos_url":"https://api.github.com/users/rendel/repos","events_url":"https://api.github.com/users/rendel/events{/privacy}","received_events_url":"https://api.github.com/users/rendel/received_events","type":"User","site_admin":false},"created_at":"2016-01-29T12:07:58Z","updated_at":"2016-01-29T12:07:58Z","author_association":"CONTRIBUTOR","body":"@jpountz I would agree that for mainstream cases - the standard Lucene queries - should not be cached on small segments and that the new caching policy is well adapted for those kind of queries. However, there exist very legitimate cases, when this policy is too restrictive. We are not asking to change the high-level api (e.g., query dsl) but just to give that option at low level for advanced users that - like us - are building on top of Elasticsearch.\n\nSomething at the java Lucene Query api level, where people creating a new custom Lucene Query can have somehow some control on the cache policy. Maybe this is something that should be implemented at a Lucene level instead of Elasticsearch ?\n\nWithout such a control, we would have to fallback to alternative options that are not very optimal:\n- tell users to activate the `index.queries.cache.everything: true` setting (but this means that standard queries will not benefit anymore from the cache optimisations introduced by the new caching policy)\n- add and manage a secondary query cache that will cache our custom queries (but this adds unnecessary complexity)\n- be able to change the cache implementation of elasticsearch to introduce our own (but this does not look possible at the moment - we would have to fork elasticsearch)\n  What would be the other fallback options available to us ?\n","performed_via_github_app":null}]