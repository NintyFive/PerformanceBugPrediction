{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/26198","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26198/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26198/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26198/events","html_url":"https://github.com/elastic/elasticsearch/issues/26198","id":250010557,"node_id":"MDU6SXNzdWUyNTAwMTA1NTc=","number":26198,"title":"Dockerized Elasticsearch instance crashes when receiving request","user":{"login":"algestam","id":133108,"node_id":"MDQ6VXNlcjEzMzEwOA==","avatar_url":"https://avatars2.githubusercontent.com/u/133108?v=4","gravatar_id":"","url":"https://api.github.com/users/algestam","html_url":"https://github.com/algestam","followers_url":"https://api.github.com/users/algestam/followers","following_url":"https://api.github.com/users/algestam/following{/other_user}","gists_url":"https://api.github.com/users/algestam/gists{/gist_id}","starred_url":"https://api.github.com/users/algestam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/algestam/subscriptions","organizations_url":"https://api.github.com/users/algestam/orgs","repos_url":"https://api.github.com/users/algestam/repos","events_url":"https://api.github.com/users/algestam/events{/privacy}","received_events_url":"https://api.github.com/users/algestam/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":356863226,"node_id":"MDU6TGFiZWwzNTY4NjMyMjY=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Pioneer%20Program","name":"Pioneer Program","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"assignees":[{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false}],"milestone":null,"comments":14,"created_at":"2017-08-14T12:01:39Z","updated_at":"2017-09-13T10:16:28Z","closed_at":"2017-09-13T10:16:28Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):\r\n\r\nVersion: 6.0.0-beta1, Build: 896afa4/2017-08-03T23:14:26.258Z, JVM: 1.8.0_144\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`):\r\n\r\njava version \"1.8.0_144\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_144-b01)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.144-b01, mixed mode)\r\n\r\n**OS version** (`uname -a` if on a Unix-like system):\r\n\r\nLinux 816fd3d99829 4.4.0-91-generic #114-Ubuntu SMP Tue Aug 8 11:56:56 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nI'm running Elasticsearch within a docker container (Docker version 17.05.0-ce, build 89658be). Have used older versions up to Elasticsearch 5.5.1 with the same setup without any problems.\r\n\r\nWhen testing to run Elasticsearch 6.0.0-beta1 I have faced an issue that I haven't seem before. The issue is that Elasticsearch crashes when receiving a request.\r\n\r\nWhen starting up the Elasticsearch container, it starts up and Elasticsearch health status seems ok by looking in the logs as it states `Cluster health status changed from [RED] to [YELLOW]` and only a single Elasticsearch instance is running.\r\n\r\nRunning a simple API  towards the elasticsearch instance works fine:\r\n\r\n```\r\nuser@host:/elasticsearch# curl localhost:9200/\r\n{\r\n  \"name\" : \"dvphuFi\",\r\n  \"cluster_name\" : \"elasticsearch-logs\",\r\n  \"cluster_uuid\" : \"k8QHY2SRTsyZn8sLo5vNRw\",\r\n  \"version\" : {\r\n    \"number\" : \"6.0.0-beta1\",\r\n    \"build_hash\" : \"896afa4\",\r\n    \"build_date\" : \"2017-08-03T23:14:26.258Z\",\r\n    \"build_snapshot\" : false,\r\n    \"lucene_version\" : \"7.0.0\",\r\n    \"minimum_wire_compatibility_version\" : \"5.6.0\",\r\n    \"minimum_index_compatibility_version\" : \"5.0.0\"\r\n  },\r\n  \"tagline\" : \"You Know, for Search\"\r\n}\r\n```\r\n\r\nHowever, running any query will cause the Elasticsearch instance to crash:\r\n\r\n```\r\nuser@host:/elasticsearch# curl localhost:9200/_search?q=test\r\ncurl: (52) Empty reply from server\r\n```\r\n\r\nThe following steps was done in order to get the system working again after the error started happening:\r\n1. Stop, remove and restart the docker image -> Error still occurred\r\n2. Restarting the Docker deamon (via `service docker restart` -> Error still occurred\r\n3. Restarting the Linux host -> Error still occurred\r\n4. Deleting the Elasticsearch data dir -> System works ok again, however data needs to be re-indexed\r\n\r\nMore logs will be attached as a comment to this issue.\r\n\r\nBelow is an excerpt from the logs:\r\n\r\n```\r\n[2017-08-14T11:20:27,152][INFO ][o.e.n.Node               ] [] initializing ...\r\n[2017-08-14T11:20:27,257][INFO ][o.e.e.NodeEnvironment    ] [dvphuFi] using [1] data paths, mounts [[/data (/dev/sda1)]], net usable_space [14.5gb], net total_space [31.3gb], types [ext4]\r\n[2017-08-14T11:20:27,257][INFO ][o.e.e.NodeEnvironment    ] [dvphuFi] heap size [3.8gb], compressed ordinary object pointers [true]\r\n[2017-08-14T11:20:27,591][INFO ][o.e.n.Node               ] node name [dvphuFi] derived from node ID [dvphuFiRT8aEJicgCiXprg]; set [node.name] to override\r\n[2017-08-14T11:20:27,591][INFO ][o.e.n.Node               ] version[6.0.0-beta1], pid[14], build[896afa4/2017-08-03T23:14:26.258Z], OS[Linux/4.4.0-91-generic/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_144/25.144-b01]\r\n[2017-08-14T11:20:27,592][INFO ][o.e.n.Node               ] JVM arguments [-Xms4g, -Xmx4g, -Dlog4j2.disable.jmx=true, -Des.path.home=/elasticsearch, -Des.path.conf=/elasticsearch/config]\r\n[2017-08-14T11:20:27,592][WARN ][o.e.n.Node               ] version [6.0.0-beta1] is a pre-release version of Elasticsearch and is not suitable for production\r\n[2017-08-14T11:20:28,200][INFO ][o.e.p.PluginsService     ] [dvphuFi] loaded module [aggs-matrix-stats]\r\n[2017-08-14T11:20:28,200][INFO ][o.e.p.PluginsService     ] [dvphuFi] loaded module [analysis-common]\r\n[2017-08-14T11:20:28,201][INFO ][o.e.p.PluginsService     ] [dvphuFi] loaded module [ingest-common]\r\n[2017-08-14T11:20:28,201][INFO ][o.e.p.PluginsService     ] [dvphuFi] loaded module [lang-expression]\r\n[2017-08-14T11:20:28,201][INFO ][o.e.p.PluginsService     ] [dvphuFi] loaded module [lang-mustache]\r\n[2017-08-14T11:20:28,202][INFO ][o.e.p.PluginsService     ] [dvphuFi] loaded module [lang-painless]\r\n[2017-08-14T11:20:28,202][INFO ][o.e.p.PluginsService     ] [dvphuFi] loaded module [parent-join]\r\n[2017-08-14T11:20:28,202][INFO ][o.e.p.PluginsService     ] [dvphuFi] loaded module [percolator]\r\n[2017-08-14T11:20:28,202][INFO ][o.e.p.PluginsService     ] [dvphuFi] loaded module [reindex]\r\n[2017-08-14T11:20:28,202][INFO ][o.e.p.PluginsService     ] [dvphuFi] loaded module [repository-url]\r\n[2017-08-14T11:20:28,202][INFO ][o.e.p.PluginsService     ] [dvphuFi] loaded module [transport-netty4]\r\n[2017-08-14T11:20:28,203][INFO ][o.e.p.PluginsService     ] [dvphuFi] loaded module [tribe]\r\n[2017-08-14T11:20:28,203][INFO ][o.e.p.PluginsService     ] [dvphuFi] no plugins loaded\r\n[2017-08-14T11:20:29,526][INFO ][o.e.d.DiscoveryModule    ] [dvphuFi] using discovery type [zen]\r\n[2017-08-14T11:20:30,304][INFO ][o.e.n.Node               ] initialized\r\n[2017-08-14T11:20:30,305][INFO ][o.e.n.Node               ] [dvphuFi] starting ...\r\n[2017-08-14T11:20:30,336][INFO ][i.n.u.i.PlatformDependent] Your platform does not provide complete low-level API for accessing direct buffers reliably. Unless explicitly requested, heap buffer will always be preferred to avoid potential system instability.\r\n[2017-08-14T11:20:30,431][INFO ][o.e.t.TransportService   ] [dvphuFi] publish_address {172.18.0.10:9300}, bound_addresses {0.0.0.0:9300}\r\n[2017-08-14T11:20:30,440][INFO ][o.e.b.BootstrapChecks    ] [dvphuFi] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks\r\n[2017-08-14T11:20:33,486][INFO ][o.e.c.s.MasterService    ] [dvphuFi] zen-disco-elected-as-master ([0] nodes joined), reason: new_master {dvphuFi}{dvphuFiRT8aEJicgCiXprg}{riLrClxxSlugm8Ks7PMClg}{172.18.0.10}{172.18.0.10:9300}\r\n[2017-08-14T11:20:33,492][INFO ][o.e.c.s.ClusterApplierService] [dvphuFi] new_master {dvphuFi}{dvphuFiRT8aEJicgCiXprg}{riLrClxxSlugm8Ks7PMClg}{172.18.0.10}{172.18.0.10:9300}, reason: apply cluster state (from master [master {dvphuFi}{dvphuFiRT8aEJicgCiXprg}{riLrClxxSlugm8Ks7PMClg}{172.18.0.10}{172.18.0.10:9300} committed version [1] source [zen-disco-elected-as-master ([0] nodes joined)]])\r\n[2017-08-14T11:20:33,526][INFO ][o.e.h.n.Netty4HttpServerTransport] [dvphuFi] publish_address {172.18.0.10:9200}, bound_addresses {0.0.0.0:9200}\r\n[2017-08-14T11:20:33,526][INFO ][o.e.n.Node               ] [dvphuFi] started\r\n[2017-08-14T11:20:35,029][INFO ][o.e.g.GatewayService     ] [dvphuFi] recovered [125] indices into cluster_state\r\n[2017-08-14T11:20:45,558][INFO ][o.e.c.r.a.AllocationService] [dvphuFi] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[logstash-logs-2017.08.09][2], [logstash-logs-2017.08.09][3]] ...]).\r\n[2017-08-14T11:31:18,825][ERROR][o.e.t.n.Netty4Utils      ] fatal error on the network layer\r\n        at org.elasticsearch.transport.netty4.Netty4Utils.maybeDie(Netty4Utils.java:179)\r\n        at org.elasticsearch.http.netty4.Netty4HttpRequestHandler.exceptionCaught(Netty4HttpRequestHandler.java:81)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:285)\r\n        at io.netty.channel.AbstractChannelHandlerContext.notifyHandlerException(AbstractChannelHandlerContext.java:850)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:364)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        at org.elasticsearch.http.netty4.pipelining.HttpPipeliningHandler.channelRead(HttpPipeliningHandler.java:63)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\r\n        at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\n        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:544)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n[2017-08-14T11:31:18,839][WARN ][o.e.h.n.Netty4HttpServerTransport] [dvphuFi] caught exception while handling client http traffic, closing connection [id: 0x423a8b89, L:/127.0.0.1:9200 - R:/127.0.0.1:44298]\r\njava.lang.StackOverflowError: null\r\n        at com.carrotsearch.hppc.ObjectObjectHashMap.<init>(ObjectObjectHashMap.java:123) ~[hppc-0.7.1.jar:?]\r\n...\r\n...\r\n...\r\n```\r\n\r\nFull log is attached below.\r\n\r\n**Steps to reproduce**:\r\n\r\nPlease include a *minimal* but *complete* recreation of the problem, including\r\n(e.g.) index creation, mappings, settings, query etc.  The easier you make for\r\nus to reproduce it, the more likely that somebody will take the time to look at it.\r\n\r\n 1. Start and run Elasticsearch within a Docker container\r\n 2. Run a query against the Elasticsearch instance such as `/_search?q=test`\r\n 3. Elasticsearch crashes with a stacktrace in the logs (see below)\r\n\r\n**Provide logs (if relevant)**:\r\n\r\nLogs will be added as a comment.\r\n","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}