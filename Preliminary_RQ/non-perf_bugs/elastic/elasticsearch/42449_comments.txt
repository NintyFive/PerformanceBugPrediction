[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/495261376","html_url":"https://github.com/elastic/elasticsearch/issues/42449#issuecomment-495261376","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42449","id":495261376,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTI2MTM3Ng==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-05-23T15:13:15Z","updated_at":"2019-05-23T15:13:15Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-features","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/496618029","html_url":"https://github.com/elastic/elasticsearch/issues/42449#issuecomment-496618029","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42449","id":496618029,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NjYxODAyOQ==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2019-05-28T17:43:24Z","updated_at":"2019-05-28T17:43:24Z","author_association":"MEMBER","body":"> The Rollover API does support index name date math, but ILM does not.\r\n\r\nThis isn't right, ILM does support index name date math just like rollover does, it requires that the index name be created with date math, for instance:\r\n\r\n```json\r\nPUT _ilm/policy/roll\r\n{\r\n  \"policy\": {\r\n    \"phases\": {\r\n      \"hot\": {\r\n        \"actions\": {\r\n          \"rollover\": {\r\n            \"max_age\": \"10s\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPUT _template/roll\r\n{\r\n  \"index_patterns\": [\"roll-*\"],\r\n  \"settings\": {\r\n    \"number_of_shards\": 1,\r\n    \"number_of_replicas\": 0,\r\n    \"index.lifecycle.name\": \"roll\",\r\n    \"index.lifecycle.rollover_alias\": \"roll-alias\"\r\n  }\r\n}\r\n\r\nPUT /_cluster/settings\r\n{\r\n  \"transient\": {\r\n    \"indices.lifecycle.poll_interval\": \"10s\"\r\n  }\r\n}\r\n\r\nPUT /%3Croll-%7Bnow%2Fs%7Byyyy-MM-dd-HH-mm-ss%7D%7D-1%3E\r\n{\r\n  \"aliases\": {\r\n    \"roll-alias\":{\r\n      \"is_write_index\": true\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nCreates indices that follow the date math as they are rolled over.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/528902698","html_url":"https://github.com/elastic/elasticsearch/issues/42449#issuecomment-528902698","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42449","id":528902698,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODkwMjY5OA==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2019-09-06T15:33:18Z","updated_at":"2019-09-06T15:33:18Z","author_association":"MEMBER","body":"We have a plan for addressing situation like this, I'll outline the general plan (which may shift as implementation proceeds).\r\n\r\nStep one is to add a setting, `index.lifecycle.origination_date` that a user can set on an index, if this is set, ILM will use this date to calculate the index age for its phase transitions. This allows a user to manually create an \"old\" index with an old origination date when indexing older data. This custom origination date should also be exposed in the ILM explain output for an index.\r\n\r\nStep two is to add another index setting allowing the origination date setting to be automatically configured on index creation based on some pattern in the index name. We haven't yet decided how to parse the index name, or whether this should be template level or index level. This would allow us to automate setting the origination date for newly created indices containing older data.\r\n\r\n@andreidan is going to start working on step one.","performed_via_github_app":null}]