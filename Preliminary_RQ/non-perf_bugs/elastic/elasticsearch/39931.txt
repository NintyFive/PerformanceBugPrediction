{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/39931","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39931/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39931/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39931/events","html_url":"https://github.com/elastic/elasticsearch/issues/39931","id":419578433,"node_id":"MDU6SXNzdWU0MTk1Nzg0MzM=","number":39931,"title":"SQL: wrong query when LIKE and NOT LIKE are used together with aggregate functions ","user":{"login":"broodfusion","id":11618564,"node_id":"MDQ6VXNlcjExNjE4NTY0","avatar_url":"https://avatars0.githubusercontent.com/u/11618564?v=4","gravatar_id":"","url":"https://api.github.com/users/broodfusion","html_url":"https://github.com/broodfusion","followers_url":"https://api.github.com/users/broodfusion/followers","following_url":"https://api.github.com/users/broodfusion/following{/other_user}","gists_url":"https://api.github.com/users/broodfusion/gists{/gist_id}","starred_url":"https://api.github.com/users/broodfusion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/broodfusion/subscriptions","organizations_url":"https://api.github.com/users/broodfusion/orgs","repos_url":"https://api.github.com/users/broodfusion/repos","events_url":"https://api.github.com/users/broodfusion/events{/privacy}","received_events_url":"https://api.github.com/users/broodfusion/received_events","type":"User","site_admin":false},"labels":[{"id":912794284,"node_id":"MDU6TGFiZWw5MTI3OTQyODQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Query%20Languages/SQL","name":":Query Languages/SQL","color":"0e8a16","default":false,"description":"SQL querying"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"astefan","id":893749,"node_id":"MDQ6VXNlcjg5Mzc0OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/893749?v=4","gravatar_id":"","url":"https://api.github.com/users/astefan","html_url":"https://github.com/astefan","followers_url":"https://api.github.com/users/astefan/followers","following_url":"https://api.github.com/users/astefan/following{/other_user}","gists_url":"https://api.github.com/users/astefan/gists{/gist_id}","starred_url":"https://api.github.com/users/astefan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/astefan/subscriptions","organizations_url":"https://api.github.com/users/astefan/orgs","repos_url":"https://api.github.com/users/astefan/repos","events_url":"https://api.github.com/users/astefan/events{/privacy}","received_events_url":"https://api.github.com/users/astefan/received_events","type":"User","site_admin":false},"assignees":[{"login":"astefan","id":893749,"node_id":"MDQ6VXNlcjg5Mzc0OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/893749?v=4","gravatar_id":"","url":"https://api.github.com/users/astefan","html_url":"https://github.com/astefan","followers_url":"https://api.github.com/users/astefan/followers","following_url":"https://api.github.com/users/astefan/following{/other_user}","gists_url":"https://api.github.com/users/astefan/gists{/gist_id}","starred_url":"https://api.github.com/users/astefan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/astefan/subscriptions","organizations_url":"https://api.github.com/users/astefan/orgs","repos_url":"https://api.github.com/users/astefan/repos","events_url":"https://api.github.com/users/astefan/events{/privacy}","received_events_url":"https://api.github.com/users/astefan/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2019-03-11T16:57:37Z","updated_at":"2019-03-21T15:23:38Z","closed_at":"2019-03-21T09:42:19Z","author_association":"NONE","active_lock_reason":null,"body":"<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): `6.6.1`\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`): \r\n```\r\njava version \"1.8.0_181\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_181-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)\r\n```\r\n\r\n**OS version** (`uname -a` if on a Unix-like system):\r\n`macOS Mojave 10.14.3`\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nNot sure if this is a current limitation as I could not find any documentation explicitly stating this **issue** as described below:\r\n\r\nWhen performing an SQL query using aggregate functions such as COUNT(), AVG() with `LIKE` and `NOT LIKE`, the actual performed query is not as expected.\r\n\r\nUsing the `translate` API, we can see the issue more clearly in Kibana:\r\n```\r\nPOST /_xpack/sql/translate\r\n{\r\n  \"query\": \"SELECT COUNT(*), station.keyword as station FROM call WHERE station.keyword LIKE 'B 4E%' and station.keyword NOT LIKE 'B 4E D%' GROUP BY station.keyword\"\r\n}\r\n```\r\nIn the below response, we see that the wildcard in `must` and wildcard in `must_not` are exactly the same. Therefore the expected query data will not be returned correctly.\r\n\r\n**Response:**\r\n```\r\n{\r\n  \"size\" : 0,\r\n  \"query\" : {\r\n    \"bool\" : {\r\n      \"must\" : [\r\n        {\r\n          \"wildcard\" : {\r\n            \"station.keyword\" : {\r\n              \"wildcard\" : \"B 4E*\",\r\n              \"boost\" : 1.0\r\n            }\r\n          }\r\n        },\r\n        {\r\n          \"bool\" : {\r\n            \"must_not\" : [\r\n              {\r\n                \"wildcard\" : {\r\n                  \"station.keyword\" : {\r\n                    \"wildcard\" : \"B 4E*\",\r\n                    \"boost\" : 1.0\r\n                  }\r\n                }\r\n              }\r\n            ],\r\n            \"adjust_pure_negative\" : true,\r\n            \"boost\" : 1.0\r\n          }\r\n        }\r\n      ],\r\n      \"adjust_pure_negative\" : true,\r\n      \"boost\" : 1.0\r\n    }\r\n  },\r\n  \"_source\" : false,\r\n  \"stored_fields\" : \"_none_\",\r\n  \"aggregations\" : {\r\n    \"groupby\" : {\r\n      \"composite\" : {\r\n        \"size\" : 1000,\r\n        \"sources\" : [\r\n          {\r\n            \"21587\" : {\r\n              \"terms\" : {\r\n                \"field\" : \"station.keyword\",\r\n                \"missing_bucket\" : true,\r\n                \"order\" : \"asc\"\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n**Expected:**\r\n```\r\n{\r\n  \"size\" : 0,\r\n  \"query\" : {\r\n    \"bool\" : {\r\n      \"must\" : [\r\n        {\r\n          \"wildcard\" : {\r\n            \"station.keyword\" : {\r\n              \"wildcard\" : \"B 4E*\",\r\n              \"boost\" : 1.0\r\n            }\r\n          }\r\n        },\r\n        {\r\n          \"bool\" : {\r\n            \"must_not\" : [\r\n              {\r\n                \"wildcard\" : {\r\n                  \"station.keyword\" : {\r\n                    \"wildcard\" : \"B 4E D*\",\r\n                    \"boost\" : 1.0\r\n                  }\r\n                }\r\n              }\r\n            ],\r\n            \"adjust_pure_negative\" : true,\r\n            \"boost\" : 1.0\r\n          }\r\n        }\r\n      ],\r\n      \"adjust_pure_negative\" : true,\r\n      \"boost\" : 1.0\r\n    }\r\n  },\r\n  \"_source\" : false,\r\n  \"stored_fields\" : \"_none_\",\r\n  \"aggregations\" : {\r\n    \"groupby\" : {\r\n      \"composite\" : {\r\n        \"size\" : 1000,\r\n        \"sources\" : [\r\n          {\r\n            \"21587\" : {\r\n              \"terms\" : {\r\n                \"field\" : \"station.keyword\",\r\n                \"missing_bucket\" : true,\r\n                \"order\" : \"asc\"\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n**Steps to reproduce**:\r\n\r\nPlease include a *minimal* but *complete* recreation of the problem, including\r\n(e.g.) index creation, mappings, settings, query etc.  The easier you make for\r\nus to reproduce it, the more likely that somebody will take the time to look at it.\r\n\r\n 1. create an index named `call` and a field `station` that has mapping:\r\n```\r\n\"station\" : {\r\n            \"type\" : \"text\",\r\n            \"fields\" : {\r\n              \"keyword\" : {\r\n                \"type\" : \"keyword\",\r\n                \"ignore_above\" : 256\r\n              }\r\n            }\r\n          }\r\n```\r\n\r\n 2. Seed some data for `station` (optional)\r\n```\r\nB 4E Ph 1\r\nB 4E Ph 2\r\nB 4E D Ph 1\r\n```\r\n 3. Using the `translate` API, check the result of using the below\r\n```\r\nPOST /_xpack/sql/translate\r\n{\r\n  \"query\": \"SELECT COUNT(*), station.keyword as station FROM call WHERE station.keyword LIKE 'B 4E%' and station.keyword NOT LIKE 'B 4E D%' GROUP BY station.keyword\"\r\n}\r\n```\r\n\r\n\r\n**Provide logs (if relevant)**:\r\n\r\n","closed_by":{"login":"astefan","id":893749,"node_id":"MDQ6VXNlcjg5Mzc0OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/893749?v=4","gravatar_id":"","url":"https://api.github.com/users/astefan","html_url":"https://github.com/astefan","followers_url":"https://api.github.com/users/astefan/followers","following_url":"https://api.github.com/users/astefan/following{/other_user}","gists_url":"https://api.github.com/users/astefan/gists{/gist_id}","starred_url":"https://api.github.com/users/astefan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/astefan/subscriptions","organizations_url":"https://api.github.com/users/astefan/orgs","repos_url":"https://api.github.com/users/astefan/repos","events_url":"https://api.github.com/users/astefan/events{/privacy}","received_events_url":"https://api.github.com/users/astefan/received_events","type":"User","site_admin":false},"performed_via_github_app":null}