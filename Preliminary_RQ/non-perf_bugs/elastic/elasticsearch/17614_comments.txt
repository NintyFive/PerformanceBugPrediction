[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/207482889","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-207482889","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":207482889,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNzQ4Mjg4OQ==","user":{"login":"rashidkpc","id":1250387,"node_id":"MDQ6VXNlcjEyNTAzODc=","avatar_url":"https://avatars1.githubusercontent.com/u/1250387?v=4","gravatar_id":"","url":"https://api.github.com/users/rashidkpc","html_url":"https://github.com/rashidkpc","followers_url":"https://api.github.com/users/rashidkpc/followers","following_url":"https://api.github.com/users/rashidkpc/following{/other_user}","gists_url":"https://api.github.com/users/rashidkpc/gists{/gist_id}","starred_url":"https://api.github.com/users/rashidkpc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rashidkpc/subscriptions","organizations_url":"https://api.github.com/users/rashidkpc/orgs","repos_url":"https://api.github.com/users/rashidkpc/repos","events_url":"https://api.github.com/users/rashidkpc/events{/privacy}","received_events_url":"https://api.github.com/users/rashidkpc/received_events","type":"User","site_admin":false},"created_at":"2016-04-08T15:36:10Z","updated_at":"2016-04-08T15:36:10Z","author_association":"NONE","body":"If and when you decide if you're going to do this, please open an issue on kibana. We currently support this in the UI so we'll need to issue a deprecation notice well in advance\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/207573400","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-207573400","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":207573400,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNzU3MzQwMA==","user":{"login":"rashidkpc","id":1250387,"node_id":"MDQ6VXNlcjEyNTAzODc=","avatar_url":"https://avatars1.githubusercontent.com/u/1250387?v=4","gravatar_id":"","url":"https://api.github.com/users/rashidkpc","html_url":"https://github.com/rashidkpc","followers_url":"https://api.github.com/users/rashidkpc/followers","following_url":"https://api.github.com/users/rashidkpc/following{/other_user}","gists_url":"https://api.github.com/users/rashidkpc/gists{/gist_id}","starred_url":"https://api.github.com/users/rashidkpc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rashidkpc/subscriptions","organizations_url":"https://api.github.com/users/rashidkpc/orgs","repos_url":"https://api.github.com/users/rashidkpc/repos","events_url":"https://api.github.com/users/rashidkpc/events{/privacy}","received_events_url":"https://api.github.com/users/rashidkpc/received_events","type":"User","site_admin":false},"created_at":"2016-04-08T19:40:35Z","updated_at":"2016-04-08T19:41:28Z","author_association":"NONE","body":"Oh, also, I'm +1 on this, its confusing and rarely useful anyway. If we're going to deprecate it pre-5.0.0, which I'd prefer, let me know.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/226802533","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-226802533","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":226802533,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNjgwMjUzMw==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-06-17T15:35:05Z","updated_at":"2016-06-17T15:35:05Z","author_association":"MEMBER","body":"Since this requires some changes in Kibana I've reverted the removal. Though it is now deprecated in 2.x/2.4.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241716709","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-241716709","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":241716709,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTcxNjcwOQ==","user":{"login":"jccq","id":4949704,"node_id":"MDQ6VXNlcjQ5NDk3MDQ=","avatar_url":"https://avatars2.githubusercontent.com/u/4949704?v=4","gravatar_id":"","url":"https://api.github.com/users/jccq","html_url":"https://github.com/jccq","followers_url":"https://api.github.com/users/jccq/followers","following_url":"https://api.github.com/users/jccq/following{/other_user}","gists_url":"https://api.github.com/users/jccq/gists{/gist_id}","starred_url":"https://api.github.com/users/jccq/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jccq/subscriptions","organizations_url":"https://api.github.com/users/jccq/orgs","repos_url":"https://api.github.com/users/jccq/repos","events_url":"https://api.github.com/users/jccq/events{/privacy}","received_events_url":"https://api.github.com/users/jccq/received_events","type":"User","site_admin":false},"created_at":"2016-08-23T12:37:25Z","updated_at":"2016-08-23T12:37:25Z","author_association":"NONE","body":"Frankly i know people who were using this actually i'd say rely on this e.g. to spot anomalies,  if the only problem is that it wasnt working very well, could you just not have clarified in the docs? i mean so many things in Elasticsearch dont really return the right number\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241717946","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-241717946","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":241717946,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTcxNzk0Ng==","user":{"login":"jccq","id":4949704,"node_id":"MDQ6VXNlcjQ5NDk3MDQ=","avatar_url":"https://avatars2.githubusercontent.com/u/4949704?v=4","gravatar_id":"","url":"https://api.github.com/users/jccq","html_url":"https://github.com/jccq","followers_url":"https://api.github.com/users/jccq/followers","following_url":"https://api.github.com/users/jccq/following{/other_user}","gists_url":"https://api.github.com/users/jccq/gists{/gist_id}","starred_url":"https://api.github.com/users/jccq/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jccq/subscriptions","organizations_url":"https://api.github.com/users/jccq/orgs","repos_url":"https://api.github.com/users/jccq/repos","events_url":"https://api.github.com/users/jccq/events{/privacy}","received_events_url":"https://api.github.com/users/jccq/received_events","type":"User","site_admin":false},"created_at":"2016-08-23T12:42:56Z","updated_at":"2016-08-23T12:42:56Z","author_association":"NONE","body":"unless there is an alternative for that use cases of course, is there? e.g. what are the least frequent MD5s executed across the logs\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243454352","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-243454352","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":243454352,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzQ1NDM1Mg==","user":{"login":"djschny","id":129643,"node_id":"MDQ6VXNlcjEyOTY0Mw==","avatar_url":"https://avatars0.githubusercontent.com/u/129643?v=4","gravatar_id":"","url":"https://api.github.com/users/djschny","html_url":"https://github.com/djschny","followers_url":"https://api.github.com/users/djschny/followers","following_url":"https://api.github.com/users/djschny/following{/other_user}","gists_url":"https://api.github.com/users/djschny/gists{/gist_id}","starred_url":"https://api.github.com/users/djschny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/djschny/subscriptions","organizations_url":"https://api.github.com/users/djschny/orgs","repos_url":"https://api.github.com/users/djschny/repos","events_url":"https://api.github.com/users/djschny/events{/privacy}","received_events_url":"https://api.github.com/users/djschny/received_events","type":"User","site_admin":false},"created_at":"2016-08-30T14:19:01Z","updated_at":"2016-08-30T14:19:01Z","author_association":"CONTRIBUTOR","body":"For folks that have small datasets this is still useful and does not hurt anything to my knowledge. I do not understand why this is being removed as well. I plead to have this kept and enhance the docs and/or add a check based upon the size or cardinality of the field perhaps.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243955399","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-243955399","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":243955399,"node_id":"MDEyOklzc3VlQ29tbWVudDI0Mzk1NTM5OQ==","user":{"login":"nich07as","id":8389292,"node_id":"MDQ6VXNlcjgzODkyOTI=","avatar_url":"https://avatars3.githubusercontent.com/u/8389292?v=4","gravatar_id":"","url":"https://api.github.com/users/nich07as","html_url":"https://github.com/nich07as","followers_url":"https://api.github.com/users/nich07as/followers","following_url":"https://api.github.com/users/nich07as/following{/other_user}","gists_url":"https://api.github.com/users/nich07as/gists{/gist_id}","starred_url":"https://api.github.com/users/nich07as/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nich07as/subscriptions","organizations_url":"https://api.github.com/users/nich07as/orgs","repos_url":"https://api.github.com/users/nich07as/repos","events_url":"https://api.github.com/users/nich07as/events{/privacy}","received_events_url":"https://api.github.com/users/nich07as/received_events","type":"User","site_admin":false},"created_at":"2016-09-01T02:01:39Z","updated_at":"2016-09-01T02:01:39Z","author_association":"NONE","body":"I've worked with a few customers who uses the ascending count to determine what are the least popular items and also the occasional outliers. Agree that it might be inaccurate over large datasets but would be helpful on smaller samples and doesn't hurt to keep it around as @djschny suggests.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243984104","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-243984104","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":243984104,"node_id":"MDEyOklzc3VlQ29tbWVudDI0Mzk4NDEwNA==","user":{"login":"jccq","id":4949704,"node_id":"MDQ6VXNlcjQ5NDk3MDQ=","avatar_url":"https://avatars2.githubusercontent.com/u/4949704?v=4","gravatar_id":"","url":"https://api.github.com/users/jccq","html_url":"https://github.com/jccq","followers_url":"https://api.github.com/users/jccq/followers","following_url":"https://api.github.com/users/jccq/following{/other_user}","gists_url":"https://api.github.com/users/jccq/gists{/gist_id}","starred_url":"https://api.github.com/users/jccq/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jccq/subscriptions","organizations_url":"https://api.github.com/users/jccq/orgs","repos_url":"https://api.github.com/users/jccq/repos","events_url":"https://api.github.com/users/jccq/events{/privacy}","received_events_url":"https://api.github.com/users/jccq/received_events","type":"User","site_admin":false},"created_at":"2016-09-01T06:01:50Z","updated_at":"2016-09-01T06:01:50Z","author_association":"NONE","body":"The point is.. what is the replacement really? sure its inaccurate but is\nthere any other way to achieve something like this? i dont think so. Thus\nthe big damage in removing vs... simply explaining the limitation.\n\nOn Thu, Sep 1, 2016 at 3:02 AM, nich07as notifications@github.com wrote:\n\n> I've worked with a few customers who uses the ascending count to determine\n> what are the least popular items and also the occasional outliers. Agree\n> that it might be inaccurate over large datasets but would be helpful on\n> smaller samples and doesn't hurt to keep it around as @djschny\n> https://github.com/djschny suggests.\n> \n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> https://github.com/elastic/elasticsearch/issues/17614#issuecomment-243955399,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AEuGyLkuCM3oiAkuqValXtEn93axFcJnks5qljJGgaJpZM4IC2Tl\n> .\n\n## \n\nGiovanni Tummarello\nCEO - SIREn Solutions\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244093885","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-244093885","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":244093885,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDA5Mzg4NQ==","user":{"login":"jayswan","id":1278825,"node_id":"MDQ6VXNlcjEyNzg4MjU=","avatar_url":"https://avatars2.githubusercontent.com/u/1278825?v=4","gravatar_id":"","url":"https://api.github.com/users/jayswan","html_url":"https://github.com/jayswan","followers_url":"https://api.github.com/users/jayswan/followers","following_url":"https://api.github.com/users/jayswan/following{/other_user}","gists_url":"https://api.github.com/users/jayswan/gists{/gist_id}","starred_url":"https://api.github.com/users/jayswan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jayswan/subscriptions","organizations_url":"https://api.github.com/users/jayswan/orgs","repos_url":"https://api.github.com/users/jayswan/repos","events_url":"https://api.github.com/users/jayswan/events{/privacy}","received_events_url":"https://api.github.com/users/jayswan/received_events","type":"User","site_admin":true},"created_at":"2016-09-01T14:20:50Z","updated_at":"2016-09-01T14:20:50Z","author_association":"NONE","body":"We use this extensively to find outliers in log data. Usually in large data sets you can filter out the most common items before performing the aggregation, so loss of accuracy isn't a big problem.\n\nRemoving this feature is a huge problem for logging use cases -- nearly crippling, IMO.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244110791","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-244110791","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":244110791,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDExMDc5MQ==","user":{"login":"jayswan","id":1278825,"node_id":"MDQ6VXNlcjEyNzg4MjU=","avatar_url":"https://avatars2.githubusercontent.com/u/1278825?v=4","gravatar_id":"","url":"https://api.github.com/users/jayswan","html_url":"https://github.com/jayswan","followers_url":"https://api.github.com/users/jayswan/followers","following_url":"https://api.github.com/users/jayswan/following{/other_user}","gists_url":"https://api.github.com/users/jayswan/gists{/gist_id}","starred_url":"https://api.github.com/users/jayswan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jayswan/subscriptions","organizations_url":"https://api.github.com/users/jayswan/orgs","repos_url":"https://api.github.com/users/jayswan/repos","events_url":"https://api.github.com/users/jayswan/events{/privacy}","received_events_url":"https://api.github.com/users/jayswan/received_events","type":"User","site_admin":true},"created_at":"2016-09-01T15:12:28Z","updated_at":"2016-09-01T15:12:28Z","author_association":"NONE","body":"Furthermore: in exploratory log analysis the exact content of the tails often doesn't matter as much as the general _kinds_ of things in the tails.\n\nAs an example, I just used this feature to reduce the set \"interesting\" documents in an index of about 6 million logs from 1.5 million to about 100 over the course of 5 minutes by iteratively excluding categories of things I found in the tails.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244111106","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-244111106","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":244111106,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDExMTEwNg==","user":{"login":"henrikjohansen","id":1473308,"node_id":"MDQ6VXNlcjE0NzMzMDg=","avatar_url":"https://avatars3.githubusercontent.com/u/1473308?v=4","gravatar_id":"","url":"https://api.github.com/users/henrikjohansen","html_url":"https://github.com/henrikjohansen","followers_url":"https://api.github.com/users/henrikjohansen/followers","following_url":"https://api.github.com/users/henrikjohansen/following{/other_user}","gists_url":"https://api.github.com/users/henrikjohansen/gists{/gist_id}","starred_url":"https://api.github.com/users/henrikjohansen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/henrikjohansen/subscriptions","organizations_url":"https://api.github.com/users/henrikjohansen/orgs","repos_url":"https://api.github.com/users/henrikjohansen/repos","events_url":"https://api.github.com/users/henrikjohansen/events{/privacy}","received_events_url":"https://api.github.com/users/henrikjohansen/received_events","type":"User","site_admin":false},"created_at":"2016-09-01T15:13:24Z","updated_at":"2016-09-01T15:13:24Z","author_association":"NONE","body":"@colings86 @jimferenczi ... this is a rather poor decision for a number of use-cases where finding rare occasions is important. It severely impacts security analytics for example.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244114209","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-244114209","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":244114209,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDExNDIwOQ==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2016-09-01T15:22:35Z","updated_at":"2016-09-01T15:22:46Z","author_association":"MEMBER","body":"> very hard to return the correct top buckets and counts\n\nI want to explain this a bit more as I don't think its really clear on the description above (apologies for that)\n\nThe problem here isn't that the counts can be wrong, the problem is that there is currently no bound on how wrong the counts can be (and no way to know what the error might be). To explain this consider the following example.\n\nImagine we are looking for the top 5 terms in a field across 3 shards ordered by ascending count. The terms aggregation goes and retrieves the top 5 terms from each shard and then merges them together (in practice it actually retrieves more than the top 5 from each shard but for the purposes of this example lets assume `size` and `shard_size` are the same). The shards might return the following:\n\n| Shard 1 | Shard 2 | Shard 3 |\n| --- | --- | --- |\n| a (1) | a (1) | a (1) |\n| b (1) | c (1) | b (1) |\n| d (1) | d (1) | f (1) |\n| g (2) | f (2) | i (1) |\n| h (9) | g (2) | j (2) |\n\nWhen merged on the reduce node this will produce the final list of:\n- c (1)\n- i (1)\n- d (2)\n- b (2)\n- j (2)\n- a (3)\n- f (3)\n- g (4)\n- h (9)\n\nSo the final top 5 will be:\n- c (1)\n- i (1)\n- d (2)\n- b (2)\n- j (2)\n\nWhich seems great until you look into the results from the shards a bit closer.\n\nThe counts returned from each shard are 100% accurate so if a shard says it has 1 document with the term `a` it only has one document with the term `a`. But its the information thats not returned from the shard that leads to issues. From the shard results above we can see that `a` is returned from every shard so we know that the document count for `a` is completely accurate. But if we now look at `d` we can see that it was only returned form shards 1 and 2. We don't know whether Shard 3 doesn't have any documents containing `d` or whether `d` just didn't make it into the top 5 terms on Shard 3 (i.e. whether there are 0 or > 2 documents containing `d` on the shard). It could be that shard 3 happens to have 100 documents containing `d` but it just wasn't returned in the top N list.\n\nThe [`terms` aggregation documentation](https://www.elastic.co/guide/en/elasticsearch/reference/2.4/search-aggregations-bucket-terms-aggregation.html#search-aggregations-bucket-terms-aggregation-approximate-counts) tries to explain how with descending count ordering we can calculate the worst case error in the doc_count by using the doc_count of the last term returned on each shard. But in the case of ascending order the doc_count a terms could have on a shard that didn't return it could be anything, all we know is that it's either 0 or greater than or equal to the doc_count of the last term returned by each shard.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244115995","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-244115995","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":244115995,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDExNTk5NQ==","user":{"login":"djschny","id":129643,"node_id":"MDQ6VXNlcjEyOTY0Mw==","avatar_url":"https://avatars0.githubusercontent.com/u/129643?v=4","gravatar_id":"","url":"https://api.github.com/users/djschny","html_url":"https://github.com/djschny","followers_url":"https://api.github.com/users/djschny/followers","following_url":"https://api.github.com/users/djschny/following{/other_user}","gists_url":"https://api.github.com/users/djschny/gists{/gist_id}","starred_url":"https://api.github.com/users/djschny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/djschny/subscriptions","organizations_url":"https://api.github.com/users/djschny/orgs","repos_url":"https://api.github.com/users/djschny/repos","events_url":"https://api.github.com/users/djschny/events{/privacy}","received_events_url":"https://api.github.com/users/djschny/received_events","type":"User","site_admin":false},"created_at":"2016-09-01T15:27:58Z","updated_at":"2016-09-01T15:27:58Z","author_association":"CONTRIBUTOR","body":"This is still relevant and accurate when you are searching an index with only 1 shard correct?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244117138","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-244117138","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":244117138,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDExNzEzOA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-09-01T15:31:19Z","updated_at":"2016-09-01T15:31:19Z","author_association":"CONTRIBUTOR","body":"@djschny we're not building a product that only works on one shard and breaks at scale.  This is a really important part of how we make decisions: whatever we build must scale.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244119248","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-244119248","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":244119248,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDExOTI0OA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-09-01T15:37:44Z","updated_at":"2016-09-01T15:37:44Z","author_association":"CONTRIBUTOR","body":"> We don't know whether Shard 3 doesn't have any documents containing d or whether d just didn't make it into the top 5 terms on Shard 3\n\nMaybe rename `ascending` to `ascending_candidates` to make it super clear that these _might_ be rare events? I think given this explanation this could still be useful but pretty trap-ish as named.\n\nI think it is interesting that you could use `_routing` to make this properly accurate again. You'd have to use it when indexing the data and the data has to be amenable to it, but it is a thing.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244123780","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-244123780","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":244123780,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDEyMzc4MA==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2016-09-01T15:51:41Z","updated_at":"2016-09-01T15:57:43Z","author_association":"MEMBER","body":"> Maybe rename ascending to ascending_candidates to make it super clear that these might be rare events? I think given this explanation this could still be useful but pretty trap-ish as named.\n\nPersonally I think it's trap-ish regardless of what we name it. If the index has 20 shards and 19 of them have 1000 docs containing a particular term but 1 has only 1 document then the term is _likely_ to be returned as rare even though it is in fact not even slightly rare. That seems very trappy to me whatever we call the option. Consider also in that case you could get into the situation where the term appears in top N list for both doc_count descending and doc_count ascending because with doc_count descending with a doc count of 19000 it could be one of the most popular terms.\n\nOn time based indices this situation could be more likely if a term first appears at the end of a indexes time period but is actually very popular. In that case when searching over a period that rides over this period you could be returned the term as rare when in fact it's not rare at all in the context you are looking at\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244187351","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-244187351","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":244187351,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDE4NzM1MQ==","user":{"login":"djschny","id":129643,"node_id":"MDQ6VXNlcjEyOTY0Mw==","avatar_url":"https://avatars0.githubusercontent.com/u/129643?v=4","gravatar_id":"","url":"https://api.github.com/users/djschny","html_url":"https://github.com/djschny","followers_url":"https://api.github.com/users/djschny/followers","following_url":"https://api.github.com/users/djschny/following{/other_user}","gists_url":"https://api.github.com/users/djschny/gists{/gist_id}","starred_url":"https://api.github.com/users/djschny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/djschny/subscriptions","organizations_url":"https://api.github.com/users/djschny/orgs","repos_url":"https://api.github.com/users/djschny/repos","events_url":"https://api.github.com/users/djschny/events{/privacy}","received_events_url":"https://api.github.com/users/djschny/received_events","type":"User","site_admin":false},"created_at":"2016-09-01T19:33:59Z","updated_at":"2016-09-01T19:33:59Z","author_association":"CONTRIBUTOR","body":"> @djschny we're not building a product that only works on one shard and breaks at scale. This is a really important part of how we make decisions: whatever we build must scale.\n\nI can completely understand that for investing time into new features. But this feature is pre-existing and it does have usefulness. If we follow this at such a strict line then we should deprecate and remove terms aggregation in general and also cardinality because they have similar behavior to what is discussed here in regards to accuracy and scalability (as defined here). However I assume (or hope) that those are not in consideration for removal as well.\n\n@colings86 thank you for the detailed explanation, however the behavior described is not what is in question. The topic at hand here is that yes, most people are perfectly fine with all the pitfalls of this. This feature is not perfect and that is fine. It still helps solve problems. And we don't have an alternative to it either.\n\nThis is not an issue where it has the potential to affect the health of the cluster (unless I missed that point) like other scalability items (fielddata, large mappings, etc.) do. So to consider this a scalability issue I just don't see.\n\nThe most practical thing here seems like a combination of what people have mentioned in this thread. For example:\n- renaming the sort to be `ascending_candidates` name as @nik9000 mentions\n- increasing warnings in the documentation as @jccq mentions\n- and perhaps keeping Kibana warnings there that talk about inaccuracy\n\nI'm all for removing things that are truly dangerous for the health of the system/cluster, but want to make sure we do not cut too far. IMO this is a cut too far.\n\nI hope accurately was able to articulate the reasons behind my earlier terse remarks.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244320361","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-244320361","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":244320361,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDMyMDM2MQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-09-02T08:54:17Z","updated_at":"2016-09-02T08:54:17Z","author_association":"CONTRIBUTOR","body":"@djschny Even though these aggs are potentially inaccurate, there is a fine line between returning a good estimation and a number that is not unlikely to be completely off. The motivation here was to remove a trap. Now, there seems to be significant push back so I'd be fine to reconsider and solve it by documentation, but please please please do not put in into the same bucket as sorting by descending count or the cardinality aggregation, these are very different issues.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/254195586","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-254195586","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":254195586,"node_id":"MDEyOklzc3VlQ29tbWVudDI1NDE5NTU4Ng==","user":{"login":"mlawler004","id":22887781,"node_id":"MDQ6VXNlcjIyODg3Nzgx","avatar_url":"https://avatars0.githubusercontent.com/u/22887781?v=4","gravatar_id":"","url":"https://api.github.com/users/mlawler004","html_url":"https://github.com/mlawler004","followers_url":"https://api.github.com/users/mlawler004/followers","following_url":"https://api.github.com/users/mlawler004/following{/other_user}","gists_url":"https://api.github.com/users/mlawler004/gists{/gist_id}","starred_url":"https://api.github.com/users/mlawler004/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mlawler004/subscriptions","organizations_url":"https://api.github.com/users/mlawler004/orgs","repos_url":"https://api.github.com/users/mlawler004/repos","events_url":"https://api.github.com/users/mlawler004/events{/privacy}","received_events_url":"https://api.github.com/users/mlawler004/received_events","type":"User","site_admin":false},"created_at":"2016-10-17T12:38:38Z","updated_at":"2016-10-17T12:38:38Z","author_association":"NONE","body":"Another vote for keeping this functionality available in some shape or form. There are lots of different uses cases for ES. We use ES on enterprise scale (million(s) of records, not billions), and we use this for outlier detection in some circumstances, We're ok with it not being accurate some times.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265623256","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-265623256","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":265623256,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTYyMzI1Ng==","user":{"login":"anhlqn","id":3209539,"node_id":"MDQ6VXNlcjMyMDk1Mzk=","avatar_url":"https://avatars0.githubusercontent.com/u/3209539?v=4","gravatar_id":"","url":"https://api.github.com/users/anhlqn","html_url":"https://github.com/anhlqn","followers_url":"https://api.github.com/users/anhlqn/followers","following_url":"https://api.github.com/users/anhlqn/following{/other_user}","gists_url":"https://api.github.com/users/anhlqn/gists{/gist_id}","starred_url":"https://api.github.com/users/anhlqn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anhlqn/subscriptions","organizations_url":"https://api.github.com/users/anhlqn/orgs","repos_url":"https://api.github.com/users/anhlqn/repos","events_url":"https://api.github.com/users/anhlqn/events{/privacy}","received_events_url":"https://api.github.com/users/anhlqn/received_events","type":"User","site_admin":false},"created_at":"2016-12-08T01:06:28Z","updated_at":"2016-12-08T01:06:28Z","author_association":"NONE","body":"+1 for keeping this feature around. We use it to look for the few emails that come from random countries that should not be in the picture. There are also many other use cases in log monitoring and analysis.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/302880330","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-302880330","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":302880330,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjg4MDMzMA==","user":{"login":"epixa","id":53814,"node_id":"MDQ6VXNlcjUzODE0","avatar_url":"https://avatars0.githubusercontent.com/u/53814?v=4","gravatar_id":"","url":"https://api.github.com/users/epixa","html_url":"https://github.com/epixa","followers_url":"https://api.github.com/users/epixa/followers","following_url":"https://api.github.com/users/epixa/following{/other_user}","gists_url":"https://api.github.com/users/epixa/gists{/gist_id}","starred_url":"https://api.github.com/users/epixa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epixa/subscriptions","organizations_url":"https://api.github.com/users/epixa/orgs","repos_url":"https://api.github.com/users/epixa/repos","events_url":"https://api.github.com/users/epixa/events{/privacy}","received_events_url":"https://api.github.com/users/epixa/received_events","type":"User","site_admin":false},"created_at":"2017-05-20T15:34:48Z","updated_at":"2017-05-20T15:34:48Z","author_association":"MEMBER","body":"@clintongormley @colings86 @jimczi Are there any plans to continue with this for 6.0?  It looks stalled at the moment, but I want to make sure we remove the feature from Kibana if it is being removed from Elasticsearch as well.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/303013380","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-303013380","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":303013380,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMzAxMzM4MA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-05-22T06:48:15Z","updated_at":"2017-05-22T06:48:15Z","author_association":"MEMBER","body":"@epixa there is no plan and it seems that this functionality is important for some use cases.\r\nAs @jpountz said we can solve this with documentation, explaining that ascending count sort is not accurate and does not give any hint regarding the level of errors.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/303107541","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-303107541","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":303107541,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMzEwNzU0MQ==","user":{"login":"epixa","id":53814,"node_id":"MDQ6VXNlcjUzODE0","avatar_url":"https://avatars0.githubusercontent.com/u/53814?v=4","gravatar_id":"","url":"https://api.github.com/users/epixa","html_url":"https://github.com/epixa","followers_url":"https://api.github.com/users/epixa/followers","following_url":"https://api.github.com/users/epixa/following{/other_user}","gists_url":"https://api.github.com/users/epixa/gists{/gist_id}","starred_url":"https://api.github.com/users/epixa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epixa/subscriptions","organizations_url":"https://api.github.com/users/epixa/orgs","repos_url":"https://api.github.com/users/epixa/repos","events_url":"https://api.github.com/users/epixa/events{/privacy}","received_events_url":"https://api.github.com/users/epixa/received_events","type":"User","site_admin":false},"created_at":"2017-05-22T13:57:19Z","updated_at":"2017-05-22T13:57:31Z","author_association":"MEMBER","body":"@jimczi Thanks for the update.  Any reason why we can't close this then?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/316180942","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-316180942","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":316180942,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjE4MDk0Mg==","user":{"login":"IdanWo","id":20516325,"node_id":"MDQ6VXNlcjIwNTE2MzI1","avatar_url":"https://avatars1.githubusercontent.com/u/20516325?v=4","gravatar_id":"","url":"https://api.github.com/users/IdanWo","html_url":"https://github.com/IdanWo","followers_url":"https://api.github.com/users/IdanWo/followers","following_url":"https://api.github.com/users/IdanWo/following{/other_user}","gists_url":"https://api.github.com/users/IdanWo/gists{/gist_id}","starred_url":"https://api.github.com/users/IdanWo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IdanWo/subscriptions","organizations_url":"https://api.github.com/users/IdanWo/orgs","repos_url":"https://api.github.com/users/IdanWo/repos","events_url":"https://api.github.com/users/IdanWo/events{/privacy}","received_events_url":"https://api.github.com/users/IdanWo/received_events","type":"User","site_admin":false},"created_at":"2017-07-18T20:03:13Z","updated_at":"2017-07-18T21:11:30Z","author_association":"NONE","body":"Hey, @colings86 . Can you please explain why increasing `shard_size` isn't good enough for ordering in all kinds of ways? I know that ElasticSearch can't tell about the error bounds in some cases, but if I don't rely on it and make my own tests and know how many documents I need to take from each shard by using `shard_size` - then will I be able to always be 100% accurate? For example: making the `shard_size` equal to the `size` (on which `sum_other_doc_count` is always 0). To be concrete, we make `terms aggregations`, which is ordered by a sub `reverse_nested` aggregation and then sub `value_count` aggregation.\r\n\r\nIn addition, why using the `shard_size` isn't scaled horizontally? If I need to take a lot of documents from each shard, I can split the index to more shards and assign them to more nodes (at setup time, of course). The shard_size would be the same, that's true, but each shard would be less in size/documents count.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/316329809","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-316329809","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":316329809,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjMyOTgwOQ==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2017-07-19T09:37:59Z","updated_at":"2017-07-19T09:37:59Z","author_association":"MEMBER","body":"@IdanWo Increasing `shard_size` is only good enough if you can guarantee that the `shard_size` is big enough that all of the terms are returned from each shard. Although this may work for low cardinality fields and/or when the number of shards is relatively small, it does not scale well with number of shards or cardinality of the field. It is true though that in the single shard case and in the case where `shard_size > number_terms_buckets_created` on every shard the results will be 100% accurate with any ordering. \r\n\r\nAlthough you can indeed split the data across shards you still need to return `number_of_shards * shard_size` buckets to the coordinating node for the reduce phase in order to get the final result. This means that even though the work on the shards is decreased by splitting the work across more of them, for the same `shard_size` more shards means that the coordinating node has to hold more in memory (the response form each shard) and do more work during the reduce phase.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/316979109","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-316979109","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":316979109,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjk3OTEwOQ==","user":{"login":"IdanWo","id":20516325,"node_id":"MDQ6VXNlcjIwNTE2MzI1","avatar_url":"https://avatars1.githubusercontent.com/u/20516325?v=4","gravatar_id":"","url":"https://api.github.com/users/IdanWo","html_url":"https://github.com/IdanWo","followers_url":"https://api.github.com/users/IdanWo/followers","following_url":"https://api.github.com/users/IdanWo/following{/other_user}","gists_url":"https://api.github.com/users/IdanWo/gists{/gist_id}","starred_url":"https://api.github.com/users/IdanWo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IdanWo/subscriptions","organizations_url":"https://api.github.com/users/IdanWo/orgs","repos_url":"https://api.github.com/users/IdanWo/repos","events_url":"https://api.github.com/users/IdanWo/events{/privacy}","received_events_url":"https://api.github.com/users/IdanWo/received_events","type":"User","site_admin":false},"created_at":"2017-07-21T11:38:58Z","updated_at":"2017-07-21T18:29:10Z","author_association":"NONE","body":"@colings86 , thanks for the excellent explanation! I understand the circumstances, BUT I believe that something isn't right with the design decisions made: I don't understand why `terms aggregation` is considered a memory intensive operation where as `cross cluster search` - which is potentially much memory intensive since it obviously involves multiple indices with multiple shards that return responses to the coordinating node, is considered okay. In cross cluster search the design decision wasn't to limit the request (the request's query or the number of involved shards in the request), but to return batched results to the coordinating node. Why can't we make something similar here? And why actually this improvement doesn't help solving the current issue with a large `shard_size` in terms aggregation?\r\n\r\nTherefore, it seems that there is a motivation to support cross cluster search but a low motivation to support full terms aggregations - although technologically they are quite the same in aspects of performance issues. It seems to me that increasing the `shard_size` in a request to a single index, is by far less dangerous than making a request to unlimited number of shards at once. How come sometimes the default is unlimited (`action.search.shard_count.limit` is unlimited) and sometime its nothing and has to be configured (`size:0` in terms aggregations is deprecated). Making a terms aggregation in 1000 shards for `size:300` is worse than a terms aggregation with `size: 0` on 1 index with 10 shards and 200 unique buckets only.\r\n\r\nThis is taken from the [Elasticsearch 5.4.0 released ](https://www.elastic.co/blog/elasticsearch-5-4-0-released) blog post (talking about [#23946](https://github.com/elastic/elasticsearch/pull/23946)):\r\n> That said, it is quite easy to reach the 1,000 shard limit, especially with the recent release of Cross Cluster Search. As of 5.4.0, Top-N search results and aggregations are reduced in batches of 512, which puts an upper limit on the amount of memory used on the coordinating node, which has allowed us to set the shard soft limit to unlimited by default.\r\n\r\nThis is taken from the [Tribe Nodes & Cross-Cluster Search](https://www.elastic.co/blog/tribe-nodes-and-cross-cluster-search-the-future-of-federated-search-in-elasticsearch) blog post (pay attention to what is considered a good user experience here):\r\n> Now with the addition of cross cluster search where we are emphasizing searches across many, many shards, having such a soft limit isn’t providing a good user experience after all. In order to eliminate the impact of querying a large number of shards, the coordinating node now reduces aggregations in batches of 512 results down to a single aggregation object while it’s waiting for more results to arrive. This upcoming improvement was the initial step to eventually remove the soft limit altogether. The upcoming 5.4.0 release will also allow to reduce the top-N documents in batches. With these two major memory consumers under control, we now default the action.search.shard_count.limit setting to unlimited. This allows users to still limit and protect their searches in the number of shards while  providing a good user experience for other users. When you perform a search request, the node which receives the request becomes the coordinating node which is in charge of forwarding the shard-level requests to the appropriate data nodes, collecting the results, and merging them into a single result set. The memory use on the coordinating node varies according to the number of involved shards. Previous, we had added a 1,000 shard soft limit to try to prevent coordinating nodes from using too much memory.\r\n\r\n**Remark:**\r\nI can agree that sometimes it's better to stop the use of a bad-practice, instead of enabling it and support its consequences.  Personally, I sort terms in descending order but via a sub aggregation - which is also discouraged.  But, I really have to do it. So I i'm keep using `shard_size:  20000`, depending on the terms field, which acts okay until now in our environment (600-800 ms at most for a query, but in most of the times the real number of buckets is considerately lower than 20,000, and is more like 300).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/330077447","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-330077447","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":330077447,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMDA3NzQ0Nw==","user":{"login":"theflakes","id":6267014,"node_id":"MDQ6VXNlcjYyNjcwMTQ=","avatar_url":"https://avatars3.githubusercontent.com/u/6267014?v=4","gravatar_id":"","url":"https://api.github.com/users/theflakes","html_url":"https://github.com/theflakes","followers_url":"https://api.github.com/users/theflakes/followers","following_url":"https://api.github.com/users/theflakes/following{/other_user}","gists_url":"https://api.github.com/users/theflakes/gists{/gist_id}","starred_url":"https://api.github.com/users/theflakes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theflakes/subscriptions","organizations_url":"https://api.github.com/users/theflakes/orgs","repos_url":"https://api.github.com/users/theflakes/repos","events_url":"https://api.github.com/users/theflakes/events{/privacy}","received_events_url":"https://api.github.com/users/theflakes/received_events","type":"User","site_admin":false},"created_at":"2017-09-17T19:31:19Z","updated_at":"2017-09-17T19:44:41Z","author_association":"NONE","body":"As others have noted, sorting in ascending order is critical for exploratory data analysis and simple cyber security hunting for LFO events.\r\n\r\nI'm probably going to expose my ignorance of ES under the hood cause I am ignorant there.  Could a recursive comparison of the aggregate of all shard results help bring more confidence to the returned results?  Possibly with sub-queries of certain results in question to specific shards capped at X number of allowed sub-aggregations?  I'm sure there are serious performance considerations involved there that my ignorance of ES doesn't make me fully appreciative of.\r\n\r\nAgain, with all that said, I'll re-emphasize the criticality of ascending search order in many data types I deal with in my work.  What concerns me here are not just removing the capability but also the confidence level of the currently returned results when querying across multiple shards, if I'm understanding this correctly.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/373689578","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-373689578","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":373689578,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MzY4OTU3OA==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2018-03-16T11:45:02Z","updated_at":"2018-03-16T11:46:30Z","author_association":"CONTRIBUTOR","body":"Since 5.2 elasticsearch has had support for [partitioning](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/search-aggregations-bucket-terms-aggregation.html#_filtering_values_with_partitions) in the terms aggs.\r\n\r\nFor those searching for low-frequency events with accuracy they should use multiple search requests, using  an appropriate choice for number of partitions (the documentation for terms partitioning describes how to do this). Essentially you have to ensure numTermsReturned < `size` setting in the terms agg.\r\n\r\n@colings86 given people have a genuine use for this and we have a workaround which maintains accuracy maybe we can keep the reverse-sort feature but error if we determine accuracy is potentially compromised and point to the solution?\r\n\r\ncc @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/393884606","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-393884606","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":393884606,"node_id":"MDEyOklzc3VlQ29tbWVudDM5Mzg4NDYwNg==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2018-06-01T13:42:55Z","updated_at":"2018-06-01T13:42:55Z","author_association":"MEMBER","body":"Hey all.  I linked to https://github.com/elastic/elasticsearch/issues/20586 a while ago, but never explicitly commented about it.\r\n\r\nWe think we've devised an aggregation that will allow aggregating \"Rare Terms\" in a way that, while not 100% accurate, will provide bounded errors (unlike sorting by count ascending).  Our plan is to implement the Rare Terms agg so that there's a path to providing this functionality in a more predictable, bounded manner... and then look into deprecating sorting ascending from Terms agg.\r\n\r\nStill no timeline/ETA, but wanted to update everyone about what we were thinking.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/393886004","html_url":"https://github.com/elastic/elasticsearch/issues/17614#issuecomment-393886004","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17614","id":393886004,"node_id":"MDEyOklzc3VlQ29tbWVudDM5Mzg4NjAwNA==","user":{"login":"jccq","id":4949704,"node_id":"MDQ6VXNlcjQ5NDk3MDQ=","avatar_url":"https://avatars2.githubusercontent.com/u/4949704?v=4","gravatar_id":"","url":"https://api.github.com/users/jccq","html_url":"https://github.com/jccq","followers_url":"https://api.github.com/users/jccq/followers","following_url":"https://api.github.com/users/jccq/following{/other_user}","gists_url":"https://api.github.com/users/jccq/gists{/gist_id}","starred_url":"https://api.github.com/users/jccq/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jccq/subscriptions","organizations_url":"https://api.github.com/users/jccq/orgs","repos_url":"https://api.github.com/users/jccq/repos","events_url":"https://api.github.com/users/jccq/events{/privacy}","received_events_url":"https://api.github.com/users/jccq/received_events","type":"User","site_admin":false},"created_at":"2018-06-01T13:48:04Z","updated_at":"2018-06-01T13:48:04Z","author_association":"NONE","body":"uber cool!","performed_via_github_app":null}]