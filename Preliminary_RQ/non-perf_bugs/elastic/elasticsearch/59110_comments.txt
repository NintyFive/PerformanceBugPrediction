[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/656025366","html_url":"https://github.com/elastic/elasticsearch/issues/59110#issuecomment-656025366","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59110","id":656025366,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NjAyNTM2Ng==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-07-09T09:41:01Z","updated_at":"2020-07-09T09:41:01Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search (:Search/Search)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/656027293","html_url":"https://github.com/elastic/elasticsearch/issues/59110#issuecomment-656027293","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59110","id":656027293,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NjAyNzI5Mw==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2020-07-09T09:45:14Z","updated_at":"2020-07-09T09:46:17Z","author_association":"CONTRIBUTOR","body":"@casertap does this also happen with a `max` that not a multiple of 8, e.g. `7` or `29`? I'm wondering if your `created_at` field contains dates that are all multiples of 8 so they all land in the first slice. For instance, they might all be rounded to the nearest second but represented in milliseconds so they're all divisible by 1000.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/656072647","html_url":"https://github.com/elastic/elasticsearch/issues/59110#issuecomment-656072647","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59110","id":656072647,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NjA3MjY0Nw==","user":{"login":"casertap","id":284394,"node_id":"MDQ6VXNlcjI4NDM5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/284394?v=4","gravatar_id":"","url":"https://api.github.com/users/casertap","html_url":"https://github.com/casertap","followers_url":"https://api.github.com/users/casertap/followers","following_url":"https://api.github.com/users/casertap/following{/other_user}","gists_url":"https://api.github.com/users/casertap/gists{/gist_id}","starred_url":"https://api.github.com/users/casertap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/casertap/subscriptions","organizations_url":"https://api.github.com/users/casertap/orgs","repos_url":"https://api.github.com/users/casertap/repos","events_url":"https://api.github.com/users/casertap/events{/privacy}","received_events_url":"https://api.github.com/users/casertap/received_events","type":"User","site_admin":false},"created_at":"2020-07-09T11:28:05Z","updated_at":"2020-07-09T11:28:05Z","author_association":"NONE","body":"Thanks @DaveCTurner for your response.\r\n\r\nI ran a few experiments to try to debug this.\r\n\r\nEach of the following queries creates a slice with `id: 0` and then with `id: 1`. \r\n\r\nRemove the `field` from slice creation to use the default _id (eg. vst_3497636_all, vst_2373825_all, ... ) (keep max: 8 size: 1000)\r\n```\r\ncurl -XPOST \"http://localhost:9202/products_dev/_search?scroll=10m\" -H 'Content-Type: application/json' -d '{\"slice\": {\"id\": 0, \"max\": 8}, \"size\": 1000}' | jq '.hits.total.value'\r\n7500\r\ncurl -XPOST \"http://localhost:9202/products_dev/_search?scroll=10m\" -H 'Content-Type: application/json' -d '{\"slice\": {\"id\": 1, \"max\": 8}, \"size\": 1000}' | jq '.hits.total.value'\r\n0\r\n```\r\n\r\nTry `max: 7` slices with `size: 999` on `_id`\r\n```\r\ncurl -XPOST \"http://localhost:9202/products_dev/_search?scroll=10m\" -H 'Content-Type: application/json' -d '{\"slice\": {\"id\": 0, \"max\": 7}, \"size\": 999}' | jq '.hits.total.value'\r\n9500\r\n\r\ncurl -XPOST \"http://localhost:9202/products_dev/_search?scroll=10m\" -H 'Content-Type: application/json' -d '{\"slice\": {\"id\": 1, \"max\": 7}, \"size\": 999}' | jq '.hits.total.value'\r\n0\r\n```\r\n\r\nTry an integer timestamp field `created_at_day_timestamp` that vary 148 times\r\n\r\nthe query for the number of distinct values\r\n```\r\nJSON='{\"aggs\" : {\"type_count\" : {\"cardinality\" : {\"field\" : \"created_at_day_timestamp\"} } }, \"size\": 0 }'\r\ncurl -XPOST \"http://localhost:9202/products_dev/_search\" -H 'Content-Type: application/json' -d \"$JSON\"\r\n\r\n{\"took\":11,\"timed_out\":false,\"_shards\":{\"total\":8,\"successful\":8,\"skipped\":0,\"failed\":0},\"hits\":{\"total\":{\"value\":9500,\"relation\":\"eq\"},\"max_score\":null,\"hits\":[]},\"aggregations\":{\"type_count\":{\"value\":148}}}% \r\n```\r\nSome actual values for here\r\n```\r\ncurl -H 'Content-Type: application/json' -XGET \"http://localhost:9202/products_dev/_search\" -d'\r\n{\r\n  \"aggs\" : {\r\n    \"distinct\" : {\r\n      \"terms\" : { \"field\" : \"created_at_day_timestamp\", \"size\":10 } \r\n    }\r\n  }, \r\n  \"size\": 0\r\n}' | jq '.aggregations.distinct.buckets[] | \\(.key)'\r\n1585958400000\r\n1587168000000\r\n1587686400000\r\n1569801600000\r\n1587254400000\r\n1593216000000\r\n1589846400000\r\n1591228800000\r\n1592265600000\r\n1581984000000\r\n```\r\n\r\ncreate a scroll using this `created_at_day_timestamp` field  `max: 7` slices with `size: 999` \r\n```\r\ncurl -XPOST \"http://localhost:9202/products_dev/_search?scroll=10m\" -H 'Content-Type: application/json' -d '{\"slice\": {\"field\": \"created_at_day_timestamp\", \"id\": 0, \"max\": 7}, \"size\": 999}' | jq '.hits.total.value'\r\n9500\r\ncurl -XPOST \"http://localhost:9202/products_dev/_search?scroll=10m\" -H 'Content-Type: application/json' -d '{\"slice\": {\"field\": \"created_at_day_timestamp\", \"id\": 1, \"max\": 7}, \"size\": 999}' | jq '.hits.total.value'\r\n0\r\n```\r\nexplicitly set _id\r\n```\r\ncurl -XPOST \"http://localhost:9202/products_dev/_search?scroll=10m\" -H 'Content-Type: application/json' -d '{\"slice\": {\"field\": \"_id\", \"id\": 0, \"max\": 7}, \"size\": 999}' | jq '.hits.total.value'\r\n9500\r\ncurl -XPOST \"http://localhost:9202/products_dev/_search?scroll=10m\" -H 'Content-Type: application/json' -d '{\"slice\": {\"field\": \"_id\", \"id\": 1, \"max\": 7}, \"size\": 999}' | jq '.hits.total.value'\r\n0\r\n```\r\nI copy-paste here the actual result of the last query\r\n```\r\n{\"_scroll_id\":\"DnF1ZXJ5VGhlbkZldGNoCAAAAAAAAABpFm8xZzNCSS1WUlIycGdkb25Eb0RCSWcAAAAAAAAAahZvMWczQkktVlJSMnBnZG9uRG9EQklnAAAAAAAAAGsWbzFnM0JJLVZSUjJwZ2RvbkRvREJJZwAAAAAAAABsFm8xZzNCSS1WUlIycGdkb25Eb0RCSWcAAAAAAAAAbRZvMWczQkktVlJSMnBnZG9uRG9EQklnAAAAAAAAAG4WbzFnM0JJLVZSUjJwZ2RvbkRvREJJZwAAAAAAAABvFm8xZzNCSS1WUlIycGdkb25Eb0RCSWcAAAAAAAAAcBZvMWczQkktVlJSMnBnZG9uRG9EQkln\",\"took\":1,\"timed_out\":false,\"_shards\":{\"total\":8,\"successful\":8,\"skipped\":0,\"failed\":0},\"hits\":{\"total\":{\"value\":0,\"relation\":\"eq\"},\"max_score\":null,\"hits\":[]}}% \r\n```\r\n\r\nI tried to recreate the slice decision algo with this java code on the `_id` field using 8 slices\r\n```\r\n        String Str = new String(\"vst_3497636_all\");\r\n        int slice = Math.floorMod(Str.hashCode(), 8);\r\n        System.out.println(\"Hashcode for \"+ Str +\" :\" + Str.hashCode() + \" slice: \"+ slice);\r\n        String Str2 = new String(\"vst_2373825_all\");\r\n        int slice2 = Math.floorMod(Str2.hashCode(), 8);\r\n        System.out.println(\"Hashcode for \"+ Str2 +\" :\" + Str2.hashCode() + \" slice: \"+ slice2);\r\n```\r\n\r\nI get 2 different slices already but this algo my not be the actual one used by elasticsearch\r\n```\r\nHashcode for vst_3497636_all :-270199692 slice: 4\r\nHashcode for vst_2373825_all :112387448 slice: 0\r\n```\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/656077225","html_url":"https://github.com/elastic/elasticsearch/issues/59110#issuecomment-656077225","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59110","id":656077225,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NjA3NzIyNQ==","user":{"login":"casertap","id":284394,"node_id":"MDQ6VXNlcjI4NDM5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/284394?v=4","gravatar_id":"","url":"https://api.github.com/users/casertap","html_url":"https://github.com/casertap","followers_url":"https://api.github.com/users/casertap/followers","following_url":"https://api.github.com/users/casertap/following{/other_user}","gists_url":"https://api.github.com/users/casertap/gists{/gist_id}","starred_url":"https://api.github.com/users/casertap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/casertap/subscriptions","organizations_url":"https://api.github.com/users/casertap/orgs","repos_url":"https://api.github.com/users/casertap/repos","events_url":"https://api.github.com/users/casertap/events{/privacy}","received_events_url":"https://api.github.com/users/casertap/received_events","type":"User","site_admin":false},"created_at":"2020-07-09T11:39:15Z","updated_at":"2020-07-09T11:39:15Z","author_association":"NONE","body":"Sorry my local index had now only 9500 documents. Let me add more documents, I will run a `/_cat/shards` and let you know if any of the previous queries worked better","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/656085804","html_url":"https://github.com/elastic/elasticsearch/issues/59110#issuecomment-656085804","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59110","id":656085804,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NjA4NTgwNA==","user":{"login":"casertap","id":284394,"node_id":"MDQ6VXNlcjI4NDM5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/284394?v=4","gravatar_id":"","url":"https://api.github.com/users/casertap","html_url":"https://github.com/casertap","followers_url":"https://api.github.com/users/casertap/followers","following_url":"https://api.github.com/users/casertap/following{/other_user}","gists_url":"https://api.github.com/users/casertap/gists{/gist_id}","starred_url":"https://api.github.com/users/casertap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/casertap/subscriptions","organizations_url":"https://api.github.com/users/casertap/orgs","repos_url":"https://api.github.com/users/casertap/repos","events_url":"https://api.github.com/users/casertap/events{/privacy}","received_events_url":"https://api.github.com/users/casertap/received_events","type":"User","site_admin":false},"created_at":"2020-07-09T12:00:38Z","updated_at":"2020-07-09T12:03:00Z","author_association":"NONE","body":"My local index had so few documents, most of the documents were saved in 1 shard\r\n\r\nI tried a bigger index and got some better results\r\n7\r\n```\r\ncurl -XPOST \"http://localhost:9200/products_ingest_2020-07-09_10-44-00/_search?scroll=10m\" -H 'Content-Type: application/json' -d '{\"slice\": {\"id\": 0, \"max\": 7}, \"size\": 999}' | jq '.hits.total.value'\r\n1315482\r\ncurl -XPOST \"http://localhost:9200/products_ingest_2020-07-09_10-44-00/_search?scroll=10m\" -H 'Content-Type: application/json' -d '{\"slice\": {\"id\": 1, \"max\": 7}, \"size\": 999}' | jq '.hits.total.value'\r\n656709\r\ncurl -XPOST \"http://localhost:9200/products_ingest_2020-07-09_10-44-00/_search?scroll=10m\" -H 'Content-Type: application/json' -d '{\"slice\": {\"id\": 2, \"max\": 7}, \"size\": 999}' | jq '.hits.total.value'\r\n657589\r\n```\r\n8\r\n```\r\ncurl -XPOST \"http://localhost:9200/products_ingest_2020-07-09_10-44-00/_search?scroll=10m\" -H 'Content-Type: application/json' -d '{\"slice\": {\"id\": 0, \"max\": 8}, \"size\": 1000}' | jq '.hits.total.value'\r\n657406\r\ncurl -XPOST \"http://localhost:9200/products_ingest_2020-07-09_10-44-00/_search?scroll=10m\" -H 'Content-Type: application/json' -d '{\"slice\": {\"id\": 1, \"max\": 8}, \"size\": 1000}' | jq '.hits.total.value'\r\n656709\r\n```\r\nThanks for your help","performed_via_github_app":null}]