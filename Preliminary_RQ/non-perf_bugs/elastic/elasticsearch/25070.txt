{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/25070","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25070/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25070/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25070/events","html_url":"https://github.com/elastic/elasticsearch/issues/25070","id":233846685,"node_id":"MDU6SXNzdWUyMzM4NDY2ODU=","number":25070,"title":"Term Vector With BiGrams in Nested Object","user":{"login":"vishva2005","id":9486297,"node_id":"MDQ6VXNlcjk0ODYyOTc=","avatar_url":"https://avatars2.githubusercontent.com/u/9486297?v=4","gravatar_id":"","url":"https://api.github.com/users/vishva2005","html_url":"https://github.com/vishva2005","followers_url":"https://api.github.com/users/vishva2005/followers","following_url":"https://api.github.com/users/vishva2005/following{/other_user}","gists_url":"https://api.github.com/users/vishva2005/gists{/gist_id}","starred_url":"https://api.github.com/users/vishva2005/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vishva2005/subscriptions","organizations_url":"https://api.github.com/users/vishva2005/orgs","repos_url":"https://api.github.com/users/vishva2005/repos","events_url":"https://api.github.com/users/vishva2005/events{/privacy}","received_events_url":"https://api.github.com/users/vishva2005/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-06-06T10:27:23Z","updated_at":"2018-02-14T13:44:05Z","closed_at":"2017-06-09T13:10:57Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Feature request -->\r\n\r\n**Describe the feature**:\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version**: 5.2.1\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`): 1.8.0_101\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): Ubuntu 14.04.4 LTS\r\n\r\n**Description of the problem including expected versus actual behavior**: When creating term vectors for a nested document with bigrams, the result is always a unigram if term vectors are dynamically evaluated, if they are evaluated and stored, result is an empty array. However same works for fields in non-nested document\r\n\r\n**Steps to reproduce**:\r\n\r\nI have a a document which contains a subdocument, as such I have made the subdocument a nested property of the document. Now i need to find term vectors for the sub document. My terms can be unigrams or bigrams, hence I created an analyzer with shingle filter. The setting for the index is as follows\r\n```\r\n{\r\n  \"settings\": {\r\n    \"analysis\": {\r\n      \"filter\": {\r\n        \"light_english_stemmer\": {\r\n\t\t  \"type\":       \"stemmer\",\r\n          \"language\":   \"light_english\" \r\n        },\r\n        \"filter_shingle\":{\r\n\t\t   \"type\":\"shingle\",\r\n\t\t   \"max_shingle_size\":3,\r\n\t\t   \"min_shingle_size\":2,\r\n\t\t   \"output_unigrams\":\"true\",\r\n\t\t   \"filler_token\" : \"\"\r\n\t\t}\r\n      },\r\n      \"analyzer\": {\r\n        \"keyword_discovery_analyzer\": {\r\n          \"tokenizer\":  \"standard\",\r\n          \"char_filter\":  [ \"html_strip\" ],\r\n          \"filter\": [\r\n            \"lowercase\",\r\n            \"filter_shingle\",\r\n            \"light_english_stemmer\"\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"mappings\": {\r\n  \t\"doc\" : {\r\n  \t\t\"properties\" : {\r\n  \t\t\t\"name\" : {\r\n  \t\t\t\t\"type\" : \"text\"\r\n  \t\t\t},\r\n  \t\t\t\"description\" : {\r\n  \t\t\t\t\"type\" : \"text\",\r\n  \t\t\t\t\"analyzer\" : \"indexing_analyzer\",\r\n  \t\t\t\t\"search_analyzer\": \"search_analyzer\",\r\n  \t\t\t\t\"fields\" : {\r\n  \t\t\t\t\t\"termVec\": { \r\n\t\t              \"type\" : \"text\",\r\n\t\t              \"term_vector\": \"yes\",\r\n\t\t\t          \"store\" : true,\r\n\t\t\t          \"analyzer\" : \"keyword_discovery_analyzer\"\r\n\t\t            }\r\n  \t\t\t\t}\r\n  \t\t\t},\r\n  \t\t\t\"subDoc\" : {\r\n  \t\t\t\t\"type\" : \"nested\",\r\n  \t\t\t\t\"properties\" : {\r\n  \t\t\t\t\t\"name\" : {\r\n\t\t  \t\t\t\t\"type\" : \"text\",\r\n\t\t  \t\t\t\t\"fields\" : {\r\n\t\t\t\t\t\t\t\"termVec\": { \r\n\t\t\t\t              \"type\" : \"text\",\r\n\t\t\t\t              \"term_vector\": \"yes\",\r\n\t\t\t\t\t          \"store\" : true,\r\n\t\t\t\t\t          \"analyzer\" : \"keyword_discovery_analyzer\"\r\n\t\t\t\t            }\r\n  \t\t\t\t\t\t}\r\n\t\t  \t\t\t},\r\n\t\t  \t\t\t\"description\" : {\r\n\t\t  \t\t\t\t\"type\" : \"text\",\r\n\t\t  \t\t\t\t\"fields\" : {\r\n\t\t\t\t\t\t\t\"termVec\": { \r\n\t\t\t\t              \"type\" : \"text\",\r\n\t\t\t\t              \"term_vector\": \"yes\",\r\n\t\t\t\t\t          \"store\" : true,\r\n\t\t\t\t\t          \"analyzer\" : \"keyword_discovery_analyzer\"\r\n\t\t\t\t            }\r\n  \t\t\t\t\t\t}\r\n\t\t  \t\t\t}\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t}\r\n  \t}\r\n  }\r\n}\r\n```\r\n\r\nWhen i execute request\r\n\r\n```\r\nGET /_termvectors\r\n{\r\n\"fields\" : [\"subDoc.name.termVec\"],\r\n\"offsets\" : false,\r\n\"payloads\" : false,\r\n\"positions\" : false,\r\n\"term_statistics\" : true,\r\n\"field_statistics\" : true,\r\n\"filter\" :{\r\n\"max_num_terms\" : 4\r\n}\r\n}\r\n```\r\n\r\nI get empty result. However if instead of the above query i run the following, \r\n```\r\nGET /12631946/_termvectors\r\n{\r\n\"fields\" : [\"subDoc.name\"],\r\n\"offsets\" : false,\r\n\"payloads\" : false,\r\n\"positions\" : false,\r\n\"term_statistics\" : true,\r\n\"field_statistics\" : true,\r\n\"per_field_analyzer\" : {\r\n\"name\": \"keyword_discovery_analyzer\"\r\n},\r\n\"filter\" :{\r\n\"max_num_terms\" : 15\r\n}\r\n}\r\n```\r\n","closed_by":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"performed_via_github_app":null}