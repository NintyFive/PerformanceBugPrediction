[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/428870162","html_url":"https://github.com/elastic/elasticsearch/issues/34389#issuecomment-428870162","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34389","id":428870162,"node_id":"MDEyOklzc3VlQ29tbWVudDQyODg3MDE2Mg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-10-11T08:38:21Z","updated_at":"2018-10-11T08:38:21Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/430288139","html_url":"https://github.com/elastic/elasticsearch/issues/34389#issuecomment-430288139","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34389","id":430288139,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMDI4ODEzOQ==","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"created_at":"2018-10-16T15:42:14Z","updated_at":"2018-10-16T15:42:14Z","author_association":"MEMBER","body":"I think we need a migration plan for Response objects. As far as I can tell we are missing the framework for an `ActionResponse` to implement a `readFrom` method that throws a `UnsupportedOperationException` and use the constructor that takes a `StreamInput`.\r\n\r\n> make instance variables final\r\n> Remove the empty constructor. Assuming there is an empty constructor just for Streamable, and not for something like request builders for the transport client, it should be possible. Otherwise, leave it be :(\r\n\r\nI do wonder if this is the right time to make these objects immutable; if there is a builder we can add mutable fields in the builder and build the immutable request object upon calling `request()`?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/430295994","html_url":"https://github.com/elastic/elasticsearch/issues/34389#issuecomment-430295994","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34389","id":430295994,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMDI5NTk5NA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2018-10-16T16:02:44Z","updated_at":"2018-10-16T16:02:44Z","author_association":"CONTRIBUTOR","body":"Are you saying you'd like to make these objects immutable as we go? I'm on board with that, though superclasses make that hard. But it is still a nice goal.\r\n\r\nMaybe not for (some) requests though, because we still use them in the high level rest client and transport client. Once we've stopped using them in the high level rest client I think we should make them immutable.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/430296303","html_url":"https://github.com/elastic/elasticsearch/issues/34389#issuecomment-430296303","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34389","id":430296303,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMDI5NjMwMw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-10-16T16:03:38Z","updated_at":"2018-10-16T16:03:38Z","author_association":"MEMBER","body":"> Once we've stopped using them in the high level rest client I think we should make them immutable.\r\n\r\nI think we need a refactoring meta-issue for this effort too.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/430307281","html_url":"https://github.com/elastic/elasticsearch/issues/34389#issuecomment-430307281","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34389","id":430307281,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMDMwNzI4MQ==","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"created_at":"2018-10-16T16:35:00Z","updated_at":"2018-10-16T16:35:21Z","author_association":"MEMBER","body":"> Are you saying you'd like to make these objects immutable as we go? I'm on board with that, though superclasses make that hard. But it is still a nice goal.\r\n\r\nYes I would like to do it as much as possible and understand that in some places it might not be worth trying to do as we go like if there are superclasses that conflict with making things immutable. It has always bothered me that request/responses could be mutable.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/433553875","html_url":"https://github.com/elastic/elasticsearch/issues/34389#issuecomment-433553875","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34389","id":433553875,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMzU1Mzg3NQ==","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"created_at":"2018-10-26T21:54:49Z","updated_at":"2018-10-26T21:54:49Z","author_association":"MEMBER","body":"> I think we need a migration plan for Response objects.\r\n\r\nWith the incorporation of #34655, Response objects can now use the `Writeable.Reader` interface. This is an opt-in change. For example, look at `ClusterSearchShardsResponse`. A constructor has been added that accepts a  `StreamInput`:\r\n\r\nhttps://github.com/elastic/elasticsearch/blob/052dfa5646592ffbdcfd5ede2aaf68e4de0baf1a/server/src/main/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsResponse.java#L45-L62\r\n\r\nThe `readFrom` method throws an `UnsupportedOperationException`:\r\n\r\nhttps://github.com/elastic/elasticsearch/blob/052dfa5646592ffbdcfd5ede2aaf68e4de0baf1a/server/src/main/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsResponse.java#L64-L67\r\n\r\nThe action class, `ClusterSearchShardsAction`, needs to be updated to make use of the `Writeable.Reader` interface:\r\n\r\nhttps://github.com/elastic/elasticsearch/blob/052dfa5646592ffbdcfd5ede2aaf68e4de0baf1a/server/src/main/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsAction.java#L39-L42\r\n\r\nFinally, the `newResponse` method on the action is updated to throw an `UnsupportedOperationException`:\r\n\r\nhttps://github.com/elastic/elasticsearch/blob/052dfa5646592ffbdcfd5ede2aaf68e4de0baf1a/server/src/main/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsAction.java#L34-L37","performed_via_github_app":null}]