{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/1383","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1383/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1383/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1383/events","html_url":"https://github.com/elastic/elasticsearch/issues/1383","id":1851935,"node_id":"MDU6SXNzdWUxODUxOTM1","number":1383,"title":"Expose matching nested docs to the query and sort","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2011-10-08T10:43:58Z","updated_at":"2013-05-30T17:01:37Z","closed_at":"2013-05-10T15:06:46Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hiya\n\nI have a use case for nested docs which, currently, can not be supported easily.\n\nFor instance, have a look at this doc:\n\n```\n{\n  \"location\" : { \"lat\" : \"8.31667\", \"lon\" : \"52.38333\" },\n  \"parent_ids\" : [ \"2862926\", \"2921044\" ],\n  \"contexts\" : [ {\n        \"context\" : \"/en\",\n        \"rank\" : 2,\n        \"tokens\" : [ \n            { \"tokens\" : [ \"steinbrink\" ] },\n            { \"tokens\" : [ \"steinbrink\", \"germany\" ] }\n        ],\n        \"label\" : {\n           \"short\" : \"Steinbrink\",\n           \"long\" : \"Steinbrink, Germany\"\n        }\n     },\n     {\n        \"context\" : \"/de\",\n        \"rank\" : 3,\n        \"tokens\" : [ \n            { \"tokens\" : [ \"steinbrink\" ] },\n            { \"tokens\" : [ \"steinbrink\", \"deutschland\" ] }\n        ],\n        \"label\" : {\n           \"short\" : \"Steinbrink\",\n           \"long\" : \"Steinbrink, Deutschland\"\n        }\n     }\n  ]\n}\n```\n\n`contexts` and `tokens` are both nested docs.\n\nI would like to run query like:\n- filter by `contexts.context == '/de'`\n- sort by:\n  - `contexts.context.rank desc`\n  - `contexts.label.short asc`\n\nbut of course I have no way of pulling out the single matching context and using the values in that sub-doc.\n\nI could use a script sort like the horribly inefficient:\n\n```\n{\n   \"sort\" : [\n      {\n         \"params\" : {\n            \"name\" : \"/de\"\n         },\n         \"_script\" : {\n            \"script\" : \"for (context: contexts) { if (context.context == name) { return context.rank }}\",\n            \"order\" : \"desc\",\n            \"type\" : \"number\"\n         }\n      },\n      {\n         \"_script\" : {\n            \"params\" : {\n               \"name\" : \"/de\"\n            },\n            \"script\" : \"for (context: contexts) { if (context.context == name) { return context.label.short }}\",\n            \"order\" : \"asc\",\n            \"type\" : \"string\"\n         }\n      }\n   ]\n}\n```\n\nOr I may want to do:\n- filter by `context=='/de'`\n- find doc with tokens that best match `stein*`\n- return the `tokens` that match best as a field\n\nOr have a slightly different doc structure:\n\n```\n\"tokens\" : [ \n    { \n        \"label\": \"Steinbrink\",\n        \"tokens\" : [ \"steinbrink\" ] \n    },\n    { \n        \"label\": \"Steinbrink, Germany\",\n        \"tokens\" : [ \"steinbrink, germany\" ] \n    },\n],\n```\n\nand return the `label` associated with the `tokens` that best match. \n\nEven with a script, I couldn't find the best matching `tokens`.\n\nIn this example, I only have two contexts, and so could have changed the doc structure to something like:\n\n```\ncontexts: {\n  en: {....},\n  de: {....}\n}\n```\n\nBut I have other use cases where I have hundreds of contexts, which would result in thousands of fields.\n\nWould it be possible to add functionality to:\n- expose the best matching child (or children, with the best matching first in an array) in a `_scope` so we could do something like:\n  \n  \"sort\": [\n      { \"_child.myscope[0].rank\": \"desc\" }, \n      { \"_child.myscope[0].label.short\": \"asc\"}\n  ],\n  \"fields\": [ \"_child.otherscope[0],tokens.label\" ]\n- return the scores for matching children in a `_scope` eg:\n  \n  { \"children\": \n      {\n           \"myscope\": [5,3,0,2,0],\n           \"otherscope\": [0,1,0]\n      }\n  }\n\nNot sure how feasible this is, and if it is feasible, there is probably a much more elegant way of doing it.\n\nthanks\n\nclint\n","closed_by":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"performed_via_github_app":null}