{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/7975","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7975/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7975/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7975/events","html_url":"https://github.com/elastic/elasticsearch/issues/7975","id":44810354,"node_id":"MDU6SXNzdWU0NDgxMDM1NA==","number":7975,"title":"trying to perform a terms aggregation","user":{"login":"hodgezappa","id":6883862,"node_id":"MDQ6VXNlcjY4ODM4NjI=","avatar_url":"https://avatars1.githubusercontent.com/u/6883862?v=4","gravatar_id":"","url":"https://api.github.com/users/hodgezappa","html_url":"https://github.com/hodgezappa","followers_url":"https://api.github.com/users/hodgezappa/followers","following_url":"https://api.github.com/users/hodgezappa/following{/other_user}","gists_url":"https://api.github.com/users/hodgezappa/gists{/gist_id}","starred_url":"https://api.github.com/users/hodgezappa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hodgezappa/subscriptions","organizations_url":"https://api.github.com/users/hodgezappa/orgs","repos_url":"https://api.github.com/users/hodgezappa/repos","events_url":"https://api.github.com/users/hodgezappa/events{/privacy}","received_events_url":"https://api.github.com/users/hodgezappa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-10-03T14:48:19Z","updated_at":"2014-10-15T10:02:32Z","closed_at":"2014-10-15T10:02:32Z","author_association":"NONE","active_lock_reason":null,"body":"I’m trying to perform a terms aggregation using elastic search 1.3.4 using NEST 1.0.3. I want my results to include bucket items with counts of 0 if that’s the case rather than ES throwing them away. My query is below as is the JSON it results in. My ElasticSearch cluster has 1 node which consists of two indexes which are exact copies of each other, they are each on their own primary shard.\n\nMy C# Nest.SearchDescriptor nestQuery = new Nest.SearchDescriptor() .Type(\"fieldOne\") .Query(q => q.Term(\"fieldTwo\", this.fieldTwo) && q.Term(\"fieldThree\", 1) ) .Aggregations(a => a .Terms(\"my_agg\", t => t.Field(\"fieldFour.ID\") .Size(Int16.MaxValue).MinimumDocumentCount(0)));\nstring json = Encoding.UTF8.GetString(new Nest.ElasticClient()\n.Serializer.Serialize(nestQuery));\n\nNest.ISearchResponse<object> result = ESUtil.ExecuteNestQuery(nestQuery);\n\nNest.Bucket aggregationsBucket = \n((Nest.Bucket)result.Aggregations[\"my_agg\"] as Nest.Bucket);\nvar bucketitems =\naggregationsBucket.Items.Cast<Nest.KeyItem>()\n.ToDictionary(key => key.Key, e => e.DocCount);\n\nThe json this results in (and subsequently submits) is: { \"aggs\": { \"my_agg\": { \"terms\": { \"field\": \"fieldFour.ID\", \"size\": 32767, \"min_doc_count\": 0 } } }, \"query\": { \"bool\": { \"must\": [ { \"term\": { \"fieldTwo\": { \"value\": 4 } } }, { \"term\": { \"fieldThree\": { \"value\": 1 } } } ] } } }\n\nThe above results in 19 bucket items being returned when there should be 20, so it appears to be throwing one away for some reason. If I change one of my values so that the results should be 6 bucket items I still get 19 bucket items being returned with the correct 6 amongst them and 13 with a count of zero. How can I get it to return the correct amount of bucket items? i.e. 20 and 6 in the two scenarios mentioned above.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}