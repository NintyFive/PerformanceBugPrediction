{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/8619","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8619/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8619/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8619/events","html_url":"https://github.com/elastic/elasticsearch/issues/8619","id":49845826,"node_id":"MDU6SXNzdWU0OTg0NTgyNg==","number":8619,"title":"Cluster unresponsive when ec2 node is shutdown","user":{"login":"ChrisZieba","id":2230570,"node_id":"MDQ6VXNlcjIyMzA1NzA=","avatar_url":"https://avatars1.githubusercontent.com/u/2230570?v=4","gravatar_id":"","url":"https://api.github.com/users/ChrisZieba","html_url":"https://github.com/ChrisZieba","followers_url":"https://api.github.com/users/ChrisZieba/followers","following_url":"https://api.github.com/users/ChrisZieba/following{/other_user}","gists_url":"https://api.github.com/users/ChrisZieba/gists{/gist_id}","starred_url":"https://api.github.com/users/ChrisZieba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ChrisZieba/subscriptions","organizations_url":"https://api.github.com/users/ChrisZieba/orgs","repos_url":"https://api.github.com/users/ChrisZieba/repos","events_url":"https://api.github.com/users/ChrisZieba/events{/privacy}","received_events_url":"https://api.github.com/users/ChrisZieba/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-11-24T00:05:22Z","updated_at":"2014-12-03T22:34:52Z","closed_at":"2014-11-25T07:05:04Z","author_association":"NONE","active_lock_reason":null,"body":"I'm not sure if this is a configuration error, hoping someone can shed some light.\n\nI have a cluster with 3 nodes, and when I shut down one ec2 instance the other nodes become unresponsive. I am running 3 c3.large AMI (2014.09) ec2 instances with a pretty standard Elasticsearch configuration. Java version is \"1.7.0_71\", and ES version is \"1.4.0\". I'm using version \"2.4.0\" of the aws cloud plugin for node discovery. Each instance is running one copy of Elasticsearch on port 9200/9300, and I am using nginx as a reverse proxy. The cluster works great, new nodes are added without any problem, the only problem is when a node is shutting down. For a minute or two while a node is shutting down the requests to any other node timeout.  Once the node shuts down completely, the other two nodes become responsive again and the cluster goes back online. \n\n**How to repeat.**\n- launch 3 instances (instance1, instance2, instance3)\n- when all 3 nodes are online and the cluster is active add some data to an index\n- stop ec2 instance1 and run a `ab` against instance2\n  \n  ```\n  ab -n 30000 -c 5 -A test:test \"http://<ip address of instance 2>/twitter/tweet/1/\"\n  ```\n\nThe benchmarking will halt at some point while `instance1` is shutting down and print out the errors:\n\n```\nCompleted 3000 requests\nCompleted 6000 requests\napr_socket_recv: Connection timed out (110)\napr_poll: The timeout specified has expired (70007)\n```\n\nThis is also visisble when making web requests to any of the nodes. The request will not finish or the status of the cluster will be \"503\".\n\nHere are the config files I am using:\n\n**elasticseach**\n\n```\n# Additional Java OPTS\n#ES_JAVA_OPTS=\n\n# Maximum number of open files\nMAX_OPEN_FILES=65535\n\n# Maximum amount of locked memory\nMAX_LOCKED_MEMORY=unlimited\n\n# Maximum number of VMA (Virtual Memory Areas) a process can own\nMAX_MAP_COUNT=262144\n\n# Elasticsearch log directory\nLOG_DIR=/var/log/elasticsearch\n\n# Elasticsearch data directory\nDATA_DIR=/tmp\n\n# Elasticsearch work directory\nWORK_DIR=/tmp/elasticsearch\n\n# Elasticsearch conf directory\nCONF_DIR=/etc/elasticsearch\n\n# Elasticsearch configuration file (elasticsearch.yml)\nCONF_FILE=/etc/elasticsearch/elasticsearch.yml\n\n# User to run as, change this to a specific elasticsearch user if possible\n# Also make sure, this user can write into the log directories in case you change them\n# This setting only works for the init script, but has to be configured separately for systemd startup\nES_USER=elasticsearch\n\n# Configure restart on package upgrade (true, every other setting will lead to not restarting)\nRESTART_ON_UPGRADE=true\n```\n\n**elasticsearch.yml**\n\n```\ncluster.name: ls-elasticsearch\nnode.master: true\nnode.data: true\npath.data: /tmp\nplugin.mandatory: cloud-aws\n\nbootstrap.mlockall: true\ntransport.tcp.port: 9300\nhttp.port: 9200\nhttp.max_content_length: 100mb\ngateway.expected_nodes: 3\n\ndiscovery.type: ec2\ndiscovery.zen.minimum_master_nodes: 2\ndiscovery.zen.ping.multicast.enabled: false\n\ncloud.aws.access_key: <removed>\ncloud.aws.secret_key: <removed>\ncloud.aws.region: us-west-2\n\ndiscovery.ec2.groups: ls-elasticsearch\ndiscovery.ec2.host_type: private_ip\n\nindex.search.slowlog.threshold.query.warn: 10s\nindex.search.slowlog.threshold.query.info: 5s\nindex.search.slowlog.threshold.query.debug: 2s\nindex.search.slowlog.threshold.query.trace: 500ms\n\nindex.search.slowlog.threshold.fetch.warn: 1s\nindex.search.slowlog.threshold.fetch.info: 800ms\nindex.search.slowlog.threshold.fetch.debug: 500ms\nindex.search.slowlog.threshold.fetch.trace: 200ms\n\nindex.indexing.slowlog.threshold.index.warn: 10s\nindex.indexing.slowlog.threshold.index.info: 5s\nindex.indexing.slowlog.threshold.index.debug: 2s\nindex.indexing.slowlog.threshold.index.trace: 500ms\n\naction.disable_delete_all_indices: true\n```\n\nThe only errors I see in the logs of instance2, while instance1 is shutting down are connection timeout exceptions. I have the log set to debug.\n\n```\n[2014-11-23 21:59:11,869][TRACE][discovery.zen.ping.unicast] [search5] [1] failed to connect to [#zen_unicast_6_#cloud-i-793f208d-0#][search5][inet[/10.27.134.11:9300]]\norg.elasticsearch.transport.ConnectTransportException: [][inet[/10.27.134.11:9300]] connect_timeout[30s]\n        at org.elasticsearch.transport.netty.NettyTransport.connectToChannelsLight(NettyTransport.java:772)\n        at org.elasticsearch.transport.netty.NettyTransport.connectToNode(NettyTransport.java:737)\n        at org.elasticsearch.transport.netty.NettyTransport.connectToNodeLight(NettyTransport.java:709)\n        at org.elasticsearch.transport.TransportService.connectToNodeLight(TransportService.java:154)\n        at org.elasticsearch.discovery.zen.ping.unicast.UnicastZenPing$3.run(UnicastZenPing.java:372)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:745)\nCaused by: java.net.ConnectException: Connection refused: /10.27.134.11:9300\n        at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)\n        at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)\n        at org.elasticsearch.common.netty.channel.socket.nio.NioClientBoss.connect(NioClientBoss.java:152)\n        at org.elasticsearch.common.netty.channel.socket.nio.NioClientBoss.processSelectedKeys(NioClientBoss.java:105)\n        at org.elasticsearch.common.netty.channel.socket.nio.NioClientBoss.process(NioClientBoss.java:79)\n        at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:318)\n        at org.elasticsearch.common.netty.channel.socket.nio.NioClientBoss.run(NioClientBoss.java:42)\n        at org.elasticsearch.common.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\n        at org.elasticsearch.common.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\n        ... 3 more\n```\n\nDoes anybody see any issues here?\n","closed_by":{"login":"ChrisZieba","id":2230570,"node_id":"MDQ6VXNlcjIyMzA1NzA=","avatar_url":"https://avatars1.githubusercontent.com/u/2230570?v=4","gravatar_id":"","url":"https://api.github.com/users/ChrisZieba","html_url":"https://github.com/ChrisZieba","followers_url":"https://api.github.com/users/ChrisZieba/followers","following_url":"https://api.github.com/users/ChrisZieba/following{/other_user}","gists_url":"https://api.github.com/users/ChrisZieba/gists{/gist_id}","starred_url":"https://api.github.com/users/ChrisZieba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ChrisZieba/subscriptions","organizations_url":"https://api.github.com/users/ChrisZieba/orgs","repos_url":"https://api.github.com/users/ChrisZieba/repos","events_url":"https://api.github.com/users/ChrisZieba/events{/privacy}","received_events_url":"https://api.github.com/users/ChrisZieba/received_events","type":"User","site_admin":false},"performed_via_github_app":null}