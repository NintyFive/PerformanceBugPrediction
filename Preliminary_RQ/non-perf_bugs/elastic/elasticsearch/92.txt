{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/92","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/92/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/92/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/92/events","html_url":"https://github.com/elastic/elasticsearch/issues/92","id":160612,"node_id":"MDU6SXNzdWUxNjA2MTI=","number":92,"title":"Plugins::Attachments: Add an attachements plugin (support parsing various file formats)","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"labels":[{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":25452,"node_id":"MDU6TGFiZWwyNTQ1Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.06.0","name":"v0.06.0","color":"DDDDDD","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2010-03-29T10:00:08Z","updated_at":"2010-04-05T23:20:32Z","closed_at":"2010-03-29T10:01:42Z","author_association":"MEMBER","active_lock_reason":null,"body":"Using the new plugins system, implement the `attachments` plugin, allow to add a mapping type called `attachment` which accepts a binary input (base64) of an attachment to index.\n\nInstallation is simple, just download the plugin zip file and place it under `plugins` directory within the installation. When building from source, the plugin will be under `build/distributions/plugins`. Once placed in the installation, the `attachment` mapper type will be automatically supported.\n\nUsing the `attachment` type is simple, in your mapping JSON, simply a certain JSON element as `attachment`, for example:\n\n```\n{\n    person : {\n        properties : {\n            \"myAttachment\" : { type : \"attachment\" }\n        }\n    }\n}\n```\n\nIn this case, the JSON to index can be:\n\n```\n{\n    myAttachment : \"... base64 encoded attachment ...\"\n}\n```\n\nThe `attachment` type not only indexes the content of the doc, but also automatically adds meta data on the attachment as well (when available). The metadata supported are: `date`, `title`, `author`, and `keywords`. They can be queries using the \"dot notation\", for example: `myAttachment.author`.\n\nBoth the meta data and the actual content are simple core type mappers (`string`, `date`, ...), thus, they can be controlled in the mappings. For example:\n\n```\n{\n    person : {\n        properties : {\n            \"file\" : { \n                type : \"attachment\",\n                fields : {\n                    file : {index : \"no\"},\n                    date : {store : \"yes\"},\n                    author : {analyzer: \"myAnalyzer\"}\n                }\n            }\n        }\n    }\n}\n```\n\nIn the above example, the actual content indexed is mapped under `fields` name `file`, and we decide not to index it, so it will only be available in the `_all` field. The other `fields` map to their respective metadata names, but there is no need to specify the `type` (like `string` or `date`) since it is already known.\n\nThe plugin uses Apache Tika (http://lucene.apache.org/tika/) to parse it, so many formats are supported, listed here: http://lucene.apache.org/tika/0.6/formats.html.\n","closed_by":null,"performed_via_github_app":null}