[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/475791235","html_url":"https://github.com/elastic/elasticsearch/issues/40385#issuecomment-475791235","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40385","id":475791235,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3NTc5MTIzNQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-03-22T21:35:03Z","updated_at":"2019-03-22T21:35:03Z","author_association":"COLLABORATOR","body":"Pinging @elastic/ml-core","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/476166846","html_url":"https://github.com/elastic/elasticsearch/issues/40385#issuecomment-476166846","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40385","id":476166846,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3NjE2Njg0Ng==","user":{"login":"davidkyle","id":2353640,"node_id":"MDQ6VXNlcjIzNTM2NDA=","avatar_url":"https://avatars1.githubusercontent.com/u/2353640?v=4","gravatar_id":"","url":"https://api.github.com/users/davidkyle","html_url":"https://github.com/davidkyle","followers_url":"https://api.github.com/users/davidkyle/followers","following_url":"https://api.github.com/users/davidkyle/following{/other_user}","gists_url":"https://api.github.com/users/davidkyle/gists{/gist_id}","starred_url":"https://api.github.com/users/davidkyle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidkyle/subscriptions","organizations_url":"https://api.github.com/users/davidkyle/orgs","repos_url":"https://api.github.com/users/davidkyle/repos","events_url":"https://api.github.com/users/davidkyle/events{/privacy}","received_events_url":"https://api.github.com/users/davidkyle/received_events","type":"User","site_admin":false},"created_at":"2019-03-25T12:02:30Z","updated_at":"2019-04-10T15:50:23Z","author_association":"MEMBER","body":"The interesting errors come from [autodetect parsing](https://github.com/elastic/ml-cpp/blob/7.0/lib/api/CLengthEncodedInputParser.cc#L155)\r\n\r\n```\r\nUnable to read field length from input stream\r\nFailed to parse length encoded header from stream\r\nFailed to handle all input data\r\nMl anomaly detector job failed\r\n```\r\n\r\nThe expected message format is \r\n```\r\n--------------------------------------------------\r\nnumber of fields | length of next field | field data\r\n--------------------------------------------------\r\n```\r\n\r\n'number of fields' was read but parsing 'length of next field' failed. This suggests the input stream was corrupted somehow. ~~From the messages I can't tell if the header list of field names was read or if it choked on a data record.~~ It choked reading the header.\r\n\r\nI've never seen the input corrupted like this before but, obviously it can and does happen however rarely. The logs show every thing was running smoothly without excessive delays. It could be a simultaneous write to the stream but that should be impossible. I'll keep an eye out for this.\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/481760363","html_url":"https://github.com/elastic/elasticsearch/issues/40385#issuecomment-481760363","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40385","id":481760363,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTc2MDM2Mw==","user":{"login":"davidkyle","id":2353640,"node_id":"MDQ6VXNlcjIzNTM2NDA=","avatar_url":"https://avatars1.githubusercontent.com/u/2353640?v=4","gravatar_id":"","url":"https://api.github.com/users/davidkyle","html_url":"https://github.com/davidkyle","followers_url":"https://api.github.com/users/davidkyle/followers","following_url":"https://api.github.com/users/davidkyle/following{/other_user}","gists_url":"https://api.github.com/users/davidkyle/gists{/gist_id}","starred_url":"https://api.github.com/users/davidkyle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidkyle/subscriptions","organizations_url":"https://api.github.com/users/davidkyle/orgs","repos_url":"https://api.github.com/users/davidkyle/repos","events_url":"https://api.github.com/users/davidkyle/events{/privacy}","received_events_url":"https://api.github.com/users/davidkyle/received_events","type":"User","site_admin":false},"created_at":"2019-04-10T16:20:20Z","updated_at":"2019-04-10T16:20:20Z","author_association":"MEMBER","body":"The error is that the autodetect process expects to read a number followed by that number of fields. In this case the expected number of fields is not read because the input stream was closed as the header was being written resulting in a partial write and this error. The job is closed in the post test tear down, at the same time the job is opening because upgrade mode is disabled at the end of the test which brings the job back to life (asynchronously sometime after the API call is made). \r\n\r\nIn theory it is not possible to close the outputstream whilst it is being written to as access is guarded by an `ExecutorService` with a single worker but there is a [small window](https://github.com/elastic/elasticsearch/blob/7.0/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/AutodetectProcessManager.java#L465) where the process is visible but the header has not been written (that happens in the `init()` call), closing the outputstream at the same time will \r\n\r\nThe fix should come quite easily and the test fails infrequently so I'll work on the fix rather than muting the test for now. \r\n","performed_via_github_app":null}]