{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/65283","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/65283/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/65283/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/65283/events","html_url":"https://github.com/elastic/elasticsearch/issues/65283","id":746865556,"node_id":"MDU6SXNzdWU3NDY4NjU1NTY=","number":65283,"title":"Range Aggregation on float values not giving proper results","user":{"login":"smanjunatha-aie","id":60964823,"node_id":"MDQ6VXNlcjYwOTY0ODIz","avatar_url":"https://avatars2.githubusercontent.com/u/60964823?v=4","gravatar_id":"","url":"https://api.github.com/users/smanjunatha-aie","html_url":"https://github.com/smanjunatha-aie","followers_url":"https://api.github.com/users/smanjunatha-aie/followers","following_url":"https://api.github.com/users/smanjunatha-aie/following{/other_user}","gists_url":"https://api.github.com/users/smanjunatha-aie/gists{/gist_id}","starred_url":"https://api.github.com/users/smanjunatha-aie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smanjunatha-aie/subscriptions","organizations_url":"https://api.github.com/users/smanjunatha-aie/orgs","repos_url":"https://api.github.com/users/smanjunatha-aie/repos","events_url":"https://api.github.com/users/smanjunatha-aie/events{/privacy}","received_events_url":"https://api.github.com/users/smanjunatha-aie/received_events","type":"User","site_admin":false},"labels":[{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":2042400575,"node_id":"MDU6TGFiZWwyMDQyNDAwNTc1","url":"https://api.github.com/repos/elastic/elasticsearch/labels/needs:triage","name":"needs:triage","color":"c5def5","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-11-19T19:35:37Z","updated_at":"2020-11-19T21:03:48Z","closed_at":"2020-11-19T21:03:48Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\nGitHub is reserved for bug reports and feature requests; it is not the place\r\nfor general questions. If you have a question or an unconfirmed bug , please\r\nvisit the [forums](https://discuss.elastic.co/c/elasticsearch).  Please also\r\ncheck your OS is [supported](https://www.elastic.co/support/matrix#show_os).\r\nIf it is not, the issue is likely to be closed.\r\n\r\nFor security vulnerabilities please only send reports to security@elastic.co.\r\nSee https://www.elastic.co/community/security for more information.\r\n\r\nPlease fill in the following details to help us reproduce the bug:\r\n-->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):7.6.0\r\n\r\n**Plugins installed**: [NA]\r\n\r\n**JVM version** (`java -version`): 1.8.0_271\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): Windows 10\r\n\r\n**Description of the problem including expected versus actual behavior**: \r\nThe Range aggregation is not returning the proper count in the buckets. This is happening only for float values. \r\nWe have values ranging from 0.1 to 5.0 (Ratings). We have to group these values under 5 buckets, starting from \r\n0.1 to 1.0, 1.1 to 2.0, 2.1 to 3.0, 3.1 to 4.0, 4.1 to 5.0. \r\nAs per the documentation, the range aggregation includes the \"from\" value and excludes the \"to\" value.\r\n\r\n**Steps to reproduce**:\r\nSchema:\r\nPUT /ratings_test\r\n{\r\n  \"mappings\": {\r\n    \"properties\": {\r\n      \"productid\": {\r\n        \"type\": \"keyword\"\r\n      },\r\n      \"ratings\": {\r\n        \"type\": \"float\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nInput Data:\r\nPOST /ratings_test/_doc/1\r\n{\r\n\t\"productid\":\"227126\",\r\n\t\"ratings\":0.1\r\n}\r\n\r\nPOST /ratings_test/_doc/2\r\n{\r\n\t\"productid\":\"247105\",\r\n\t\"ratings\":0.5\r\n}\r\n\r\nPOST /ratings_test/_doc/3\r\n{\r\n\t\"productid\":\"228880\",\r\n\t\"ratings\":1.0\r\n}\r\n\r\nPOST /ratings_test/_doc/4\r\n{\r\n\t\"productid\":\"238143\",\r\n\t\"ratings\":1.1\r\n}\r\n\r\nPOST /ratings_test/_doc/5\r\n{\r\n\t\"productid\":\"240631\",\r\n\t\"ratings\":1.5\r\n}\r\n\r\nPOST /ratings_test/_doc/6\r\n{\r\n\t\"productid\":\"235747\",\r\n\t\"ratings\":2.0\r\n}\r\n\r\nPOST /ratings_test/_doc/7\r\n{\r\n\t\"productid\":\"240553\",\r\n\t\"ratings\":2.1\r\n}\r\n\r\nPOST /ratings_test/_doc/8\r\n{\r\n\t\"productid\":\"227124\",\r\n\t\"ratings\":2.5\r\n}\r\n\r\nPOST /ratings_test/_doc/9\r\n{\r\n\t\"productid\":\"237758\",\r\n\t\"ratings\":3.0\r\n}\r\n\r\nPOST /ratings_test/_doc/10\r\n{\r\n\t\"productid\":\"227166\",\r\n\t\"ratings\":3.1\r\n}\r\n\r\nPOST /ratings_test/_doc/11\r\n{\r\n\t\"productid\":\"240555\",\r\n\t\"ratings\":3.5\r\n}\r\n\r\nPOST /ratings_test/_doc/12\r\n{\r\n\t\"productid\":\"235770\",\r\n\t\"ratings\":4.0\r\n}\r\n\r\nPOST /ratings_test/_doc/13\r\n{\r\n\t\"productid\":\"235748\",\r\n\t\"ratings\":4.1\r\n}\r\n\r\nPOST /ratings_test/_doc/14\r\n{\r\n\t\"productid\":\"216961\",\r\n\t\"ratings\":4.5\r\n}\r\n\r\nPOST /ratings_test/_doc/15\r\n{\r\n\t\"productid\":\"221483\",\r\n\t\"ratings\":5.0\r\n}\r\n\r\nQuery :\r\nGET /ratings_test/_search\r\n{\r\n  \"size\": 0, \r\n  \"aggregations\": {\r\n    \"ratings\": {\r\n      \"range\": {\r\n        \"field\": \"ratings\",\r\n        \"ranges\": [\r\n          {\r\n            \"key\": \"5\",\r\n            \"from\": 4.1,\r\n            \"to\": 5.1\r\n          },\r\n          {\r\n            \"key\": \"4\",\r\n            \"from\": 3.1,\r\n            \"to\": 4.1\r\n          },\r\n          {\r\n            \"key\": \"3\",\r\n            \"from\": 2.1,\r\n            \"to\": 3.1\r\n          },\r\n          {\r\n            \"key\": \"2\",\r\n            \"from\": 1.1,\r\n            \"to\": 2.1\r\n          },\r\n          {\r\n            \"key\": \"1\",\r\n            \"from\": 0.1,\r\n            \"to\": 1.1\r\n          }\r\n        ],\r\n        \"keyed\": true\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nOut put: Please check the ranges 2 and 5\r\n\"aggregations\" : {\r\n    \"ratings\" : {\r\n      \"buckets\" : {\r\n        \"1\" : {\r\n          \"from\" : 0.1,\r\n          \"to\" : 1.1,\r\n          \"doc_count\" : 3\r\n        },\r\n        \"2\" : {\r\n          \"from\" : 1.1,\r\n          \"to\" : 2.1,\r\n          **\"doc_count\" : 4**\r\n        },\r\n        \"3\" : {\r\n          \"from\" : 2.1,\r\n          \"to\" : 3.1,\r\n          \"doc_count\" : 3\r\n        },\r\n        \"4\" : {\r\n          \"from\" : 3.1,\r\n          \"to\" : 4.1,\r\n          \"doc_count\" : 3\r\n        },\r\n        \"5\" : {\r\n          \"from\" : 4.1,\r\n          \"to\" : 5.1,\r\n          **\"doc_count\" : 2**\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\nPlease include a *minimal* but *complete* recreation of the problem,\r\nincluding (e.g.) index creation, mappings, settings, query etc.  The easier\r\nyou make for us to reproduce it, the more likely that somebody will take the\r\ntime to look at it.\r\n\r\n 1.\r\n 2.\r\n 3.\r\n\r\n**Provide logs (if relevant)**:\r\n\r\n\r\n","closed_by":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"performed_via_github_app":null}