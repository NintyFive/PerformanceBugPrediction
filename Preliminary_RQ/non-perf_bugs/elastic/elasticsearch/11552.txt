{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/11552","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11552/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11552/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11552/events","html_url":"https://github.com/elastic/elasticsearch/issues/11552","id":86553517,"node_id":"MDU6SXNzdWU4NjU1MzUxNw==","number":11552,"title":"Fix argument parsing on startup","user":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"labels":[{"id":114977275,"node_id":"MDU6TGFiZWwxMTQ5NzcyNzU=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Delivery/Packaging","name":":Delivery/Packaging","color":"0e8a16","default":false,"description":"RPM and deb packaging, tar and zip archives, shell and batch scripts"},{"id":2495976472,"node_id":"MDU6TGFiZWwyNDk1OTc2NDcy","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Delivery","name":"Team:Delivery","color":"fef2c0","default":false,"description":"Meta label for Delivery team"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-06-09T10:52:57Z","updated_at":"2020-11-11T22:00:15Z","closed_at":"2016-01-18T20:15:09Z","author_association":"MEMBER","active_lock_reason":null,"body":"Currently our argument parsing on startup is very brittle, without the possibility to exit on problems (for example when including a space in a path, many other arguments might break as well and es still starts up)\n\nThe used `getopt` function fails on whitespaces, which is also mentioned in its manpage. There does not seem to be any fix for this. The alternative would be to call `getopts` (note the `s`) which has an improved parsing and is also supported by the common shells (even dash under ubuntu). However, the problem is our parsing is much more than simple getopt parsing. We support the following\n- long options like `--network.host 127.0.0.1` must be supported and converted to a JVM system property `-Des.network.host=127.0.0.1`\n- system properties like `-Dfoo.bar=spam` must be supported\n\nThe `getopts` parser does not support the last syntax, when spaces are involved, because the key is not supposed to be `foo.bar`, but `-D`. The `commons-cli` has support for this as well, and we already include it.\n\nIn order to simplify this handling and make it testable I think it makes sense to get rid of the parsing in the shell/bat scripts and do this in java. A couple of solutions come to mind here (one of the key features needs to be speed, calling `bin/elasticsearch -v` should still be fast.\n- Have a very small class, that parses the getopts arguments and exits on parsing problems. If parsing is successful, call the `Bootstrap` class\n- Put everything in the bootstrap class\n- Have a small main class that parses all arguments, that then fires up another JVM (Tika is doing this, the call it a forked parser). The interesting approach about this one might be, that we could actually configure the heap size in the `elasticsearch.yml` file as well\n- If we do not want to go this route, we may want to think about ditching a lot of our options...\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}