[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/178102","html_url":"https://github.com/elastic/elasticsearch/issues/67#issuecomment-178102","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/67","id":178102,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODEwMg==","user":{"login":"timrobertson100","id":237221,"node_id":"MDQ6VXNlcjIzNzIyMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/237221?v=4","gravatar_id":"","url":"https://api.github.com/users/timrobertson100","html_url":"https://github.com/timrobertson100","followers_url":"https://api.github.com/users/timrobertson100/followers","following_url":"https://api.github.com/users/timrobertson100/following{/other_user}","gists_url":"https://api.github.com/users/timrobertson100/gists{/gist_id}","starred_url":"https://api.github.com/users/timrobertson100/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/timrobertson100/subscriptions","organizations_url":"https://api.github.com/users/timrobertson100/orgs","repos_url":"https://api.github.com/users/timrobertson100/repos","events_url":"https://api.github.com/users/timrobertson100/events{/privacy}","received_events_url":"https://api.github.com/users/timrobertson100/received_events","type":"User","site_admin":false},"created_at":"2010-04-05T14:38:07Z","updated_at":"2010-04-05T14:38:07Z","author_association":"NONE","body":"This was my intended approach for using Lucene with HBase and I have done preliminary tests, but outgrew single machine capabilities of Lucene (e.g. indexes >300G which led me to look at ES).  On single machine indices it worked really very fine, but I never got to test it properly when HBase performed region splits (I believe you might suffer up in the search layer in timeouts when HBase).\n\nI'd be interested in looking at the HBase integration if I can find time.  I would do a MapReduce job for building the ES, and also implement the interface.  Taking it a bit further... would you think it wise to allow ES to push down content as well?  E.g. use the ES as the webservice to the storage layer? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/252906","html_url":"https://github.com/elastic/elasticsearch/issues/67#issuecomment-252906","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/67","id":252906,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MjkwNg==","user":{"login":"deinspanjer","id":286641,"node_id":"MDQ6VXNlcjI4NjY0MQ==","avatar_url":"https://avatars1.githubusercontent.com/u/286641?v=4","gravatar_id":"","url":"https://api.github.com/users/deinspanjer","html_url":"https://github.com/deinspanjer","followers_url":"https://api.github.com/users/deinspanjer/followers","following_url":"https://api.github.com/users/deinspanjer/following{/other_user}","gists_url":"https://api.github.com/users/deinspanjer/gists{/gist_id}","starred_url":"https://api.github.com/users/deinspanjer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deinspanjer/subscriptions","organizations_url":"https://api.github.com/users/deinspanjer/orgs","repos_url":"https://api.github.com/users/deinspanjer/repos","events_url":"https://api.github.com/users/deinspanjer/events{/privacy}","received_events_url":"https://api.github.com/users/deinspanjer/received_events","type":"User","site_admin":false},"created_at":"2010-05-25T13:36:34Z","updated_at":"2010-05-25T13:36:34Z","author_association":"NONE","body":"I'm evaluating integrating ES with HBase for Mozilla's Socorro project.  We are storing billions of JSON objects, and we are sizing our Hadoop cluster to give us adequate storage of this data.  If _source were not disabled, it would mean that I need to account for an additional copy of the raw JSON in addition to the unavoidable overhead of the index data that is generated.\n\nThe most typical use cases for our search is going to be returning a list of \"name\" fields that would be hyperlinked to display the document data and returning a faceted set of results to allow users to drill in on subsets.\nIn both these cases, an API to allow transparent retrieval of the document from HBase would be a welcome addition.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3948433","html_url":"https://github.com/elastic/elasticsearch/issues/67#issuecomment-3948433","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/67","id":3948433,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NDg0MzM=","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2012-02-13T20:20:09Z","updated_at":"2012-02-13T20:20:09Z","author_association":"MEMBER","body":"Shay,\n\nWe really need this feature. If you have no objections, I would like to implement it. My current thinking is to make external source provider plugable on the index level. By default, such source provider will store and retrieve sources in Lucene _source field the same way it's done today. I will implement a file-system based source provider as a simple (but not practical) example. However, most users will use it with their own custom source providers (using HBase, MySql, S3, etc. to retrieve source)\n\nAn external source provider will be configured on the index level similar to the way analyzers are configured today. I envision something like this:\n\n``` json\n{\n    \"tweet\" : {\n        \"_source\" : {\n            \"enabled\" : true,\n            \"type\" : \"file\",\n            \"root_directory\" : \"/data\",\n            \"source_ref\" : \"filepath\"\n        }\n    }\n}\n```\n\nThis configuration will instantiate a file based external source provider org.elasticsearch.index.source.file.FileSourceProvider that will retrieve source from files specified in the \"filepath\" field and located in the \"/data\" directory. \n\nExternal source providers will implement two methods:\n- void parseSource(ParseContext context) that will be called by SourceFieldMapper.parse()\n- byte[] extractSource(Document doc) that will be called by ShardGetService.extractSource() and FetchPhase.extractSource()\n\nProper caching of sources, connections and other resources will be responsibility of custom source providers. \n\nDoes it make sense?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49403696","html_url":"https://github.com/elastic/elasticsearch/issues/67#issuecomment-49403696","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/67","id":49403696,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDAzNjk2","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-07-18T07:39:56Z","updated_at":"2014-07-18T07:39:56Z","author_association":"CONTRIBUTOR","body":"After much discussion, we have decided we're against adding this feature.  It is very complex, has too many corner cases, and the latency will be terrible. While this could be implemented as a plugin, we highly recommend not trying to do this.  It is much better to store your data directly in Elasticsearch and use the native functionality.\n","performed_via_github_app":null}]