{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/39905","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39905/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39905/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39905/events","html_url":"https://github.com/elastic/elasticsearch/issues/39905","id":419374428,"node_id":"MDU6SXNzdWU0MTkzNzQ0Mjg=","number":39905,"title":"Stopwords not filtered in simple_query_string with default operator AND and multiple analyzers","user":{"login":"xrammit","id":3740851,"node_id":"MDQ6VXNlcjM3NDA4NTE=","avatar_url":"https://avatars3.githubusercontent.com/u/3740851?v=4","gravatar_id":"","url":"https://api.github.com/users/xrammit","html_url":"https://github.com/xrammit","followers_url":"https://api.github.com/users/xrammit/followers","following_url":"https://api.github.com/users/xrammit/following{/other_user}","gists_url":"https://api.github.com/users/xrammit/gists{/gist_id}","starred_url":"https://api.github.com/users/xrammit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xrammit/subscriptions","organizations_url":"https://api.github.com/users/xrammit/orgs","repos_url":"https://api.github.com/users/xrammit/repos","events_url":"https://api.github.com/users/xrammit/events{/privacy}","received_events_url":"https://api.github.com/users/xrammit/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2019-03-11T09:40:56Z","updated_at":"2020-06-17T10:53:54Z","closed_at":"2019-03-14T17:54:52Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Bug report -->\r\n\r\nI use the official docker image: `docker.elastic.co/elasticsearch/elasticsearch:6.6.1`\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): \r\n```\r\nVersion: 6.6.1, Build: default/tar/1fd8f69/2019-02-13T17:10:04.160291Z, JVM: 11.0.1\r\n```\r\n\r\n**Plugins installed**: nothing besides the default ones (`[ingest-geoip, ingest-user-agent]`)\r\n\r\n**JVM version** (`java -version`):\r\n```\r\nopenjdk version \"11.0.1\" 2018-10-16\r\nOpenJDK Runtime Environment 18.9 (build 11.0.1+13)\r\nOpenJDK 64-Bit Server VM 18.9 (build 11.0.1+13, mixed mode)\r\n```\r\n\r\n**OS version** (`uname -a` if on a Unix-like system):\r\n```\r\nLinux d76a7dabcb27 4.18.0-16-generic #17-Ubuntu SMP Fri Feb 8 00:06:57 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nRelated issues described in #34708, #28855 and #33009. When I execute a simple_query_string query with the following conditions\r\n\r\n* the queried index is configured to analyze the documents with language-specific stopword filters depending on the document field names via dynamic templates (e.g. fields `*_text_en` -> analyzed with English stopword filter; fields `*_text_de` -> analyzed with German stopword filter); the `search_analyzer` equals to the `analyzer`\r\n* the queried index contains at least one document analyzed by each (language-specific) analyzer\r\n* the query has fields of both analyzers configured (e.g. `['*_text_*']` or `['*_text_en', '*_text_de']`)\r\n* the `default_operator` is AND\r\n\r\nthe document is found when searching without a stopword (cf. query for \"Frankfurt Main\" in step 3 of the following sample) but it's not found when adding a stopword to the query (cf. query for \"Frankfurt am Main\" in step 4 of the following sample) although the `search_analyzer` should filter the stopword and the query should return the same documents as without the stopwords.\r\n\r\n**Steps to reproduce**:\r\n\r\nMinimal sample:\r\n\r\n 1. Create new index `mytest` with template\r\n\r\n```\r\ncurl -XPUT -H \"Content-Type: application/json\" localhost:9200/mytest -d '{\r\n  \"settings\": {\r\n    \"analysis\": {\r\n      \"filter\": {\r\n        \"english_stop\": {\r\n          \"type\": \"stop\",\r\n          \"stopwords\": \"_english_\"\r\n        },\r\n        \"german_stop\": {\r\n          \"type\": \"stop\",\r\n          \"stopwords\": \"_german_\"\r\n        }\r\n      },\r\n      \"analyzer\": {\r\n        \"my_english_analyzer\": {\r\n          \"tokenizer\": \"standard\",\r\n          \"filter\": [\"english_stop\"]\r\n        },\r\n        \"my_german_analyzer\": {\r\n          \"tokenizer\": \"standard\",\r\n          \"filter\": [\"german_stop\"]\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"mappings\": {\r\n    \"_doc\": {\r\n      \"dynamic\": true,\r\n      \"dynamic_templates\": [\r\n        {\r\n          \"english_text\": {\r\n            \"match\": \"*_text_en\",\r\n            \"mapping\": {\r\n              \"type\": \"text\",\r\n              \"analyzer\": \"my_english_analyzer\",\r\n              \"search_analyzer\": \"my_english_analyzer\"\r\n            }\r\n          }\r\n        },\r\n        {\r\n          \"german_text\": {\r\n            \"match\": \"*_text_de\",\r\n            \"mapping\": {\r\n              \"type\": \"text\",\r\n              \"analyzer\": \"my_german_analyzer\",\r\n              \"search_analyzer\": \"my_german_analyzer\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}'\r\n```\r\n\r\n 2. Add two documents \r\n\r\n```\r\ncurl -XPUT -H \"Content-Type: application/json\" localhost:9200/mytest/_doc/1 -d '{\r\n  \"title_text_de\": \"Frankfurt am Main\",\r\n  \"content_text_de\": \"Frankfurt am Main ist die fünftgrößte Stadt Deutschlands.\"\r\n}'\r\n```\r\n\r\n```\r\ncurl -XPUT -H \"Content-Type: application/json\" localhost:9200/mytest/_doc/2 -d '{\r\n  \"title_text_en\": \"London\",\r\n  \"content_text_en\": \"London is the capital city of the United Kingdom.\"\r\n}'\r\n```\r\n\r\n 3. Search for \"Frankfurt Main\" with `default_operator` AND on all fields (`*_text_*`)\r\n\r\n```\r\ncurl -XPOST -H \"Content-Type: application/json\" localhost:9200/mytest/_search -d '{\r\n  \"query\": {\r\n    \"simple_query_string\" : {\r\n      \"query\": \"Frankfurt Main\",\r\n      \"fields\": [\"*_text_*\"],\r\n      \"default_operator\": \"and\"\r\n    }\r\n  }\r\n}'\r\n```\r\n\r\nThe response contains the document with id 1 as expected.\r\n\r\n 4. Search again but add the (German) stopword \"am\" to the query\r\n\r\n```\r\ncurl -XPOST -H \"Content-Type: application/json\" localhost:9200/mytest/_search -d '{\r\n  \"query\": {\r\n    \"simple_query_string\" : {\r\n      \"query\": \"Frankfurt am Main\",\r\n      \"fields\": [\"*_text_*\"],\r\n      \"default_operator\": \"and\"\r\n    }\r\n  }\r\n}'\r\n```\r\n\r\nNow the response contains no document although I expected to find the document with id 1 again as the stopword \"am\" should be filtered in the search query. The search result is empty as well when using other German stopwords instead of \"am\" (e.g. \"im\", \"über\" etc) or re-ordering the search terms (e.g. \"Frankfurt Main am\").\r\n\r\nNow the response contains the document with id 1 as expected. The same holds for searches with other German stopwords or re-ordering the search terms.\r\n\r\n**Provide logs (if relevant)**:\r\nno relevant logs","closed_by":{"login":"xrammit","id":3740851,"node_id":"MDQ6VXNlcjM3NDA4NTE=","avatar_url":"https://avatars3.githubusercontent.com/u/3740851?v=4","gravatar_id":"","url":"https://api.github.com/users/xrammit","html_url":"https://github.com/xrammit","followers_url":"https://api.github.com/users/xrammit/followers","following_url":"https://api.github.com/users/xrammit/following{/other_user}","gists_url":"https://api.github.com/users/xrammit/gists{/gist_id}","starred_url":"https://api.github.com/users/xrammit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xrammit/subscriptions","organizations_url":"https://api.github.com/users/xrammit/orgs","repos_url":"https://api.github.com/users/xrammit/repos","events_url":"https://api.github.com/users/xrammit/events{/privacy}","received_events_url":"https://api.github.com/users/xrammit/received_events","type":"User","site_admin":false},"performed_via_github_app":null}