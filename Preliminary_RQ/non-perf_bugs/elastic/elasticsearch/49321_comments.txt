[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/555567277","html_url":"https://github.com/elastic/elasticsearch/issues/49321#issuecomment-555567277","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49321","id":555567277,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTU2NzI3Nw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-11-19T15:45:13Z","updated_at":"2019-11-19T15:45:13Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search (:Search/Search)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/555611778","html_url":"https://github.com/elastic/elasticsearch/issues/49321#issuecomment-555611778","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49321","id":555611778,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTYxMTc3OA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2019-11-19T17:15:28Z","updated_at":"2019-11-19T17:15:28Z","author_association":"CONTRIBUTOR","body":"I'm seeing scripted queries/aggs as a way to trade performance for flexibility, as they allow  to do things that had not been planned at index time. Since these are already trading performance for something else, it doesn't feel right to me to now trade correctness for performance by enabling caching when the user declares it is safe.\r\n\r\nMaybe tell us more about your usage of scripts? I wonder that you might be using scripts as a workaround to a missing aggregation feature?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/555624761","html_url":"https://github.com/elastic/elasticsearch/issues/49321#issuecomment-555624761","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49321","id":555624761,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTYyNDc2MQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-11-19T17:44:53Z","updated_at":"2019-11-19T17:44:53Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-analytics-geo (:Analytics/Aggregations)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/555656765","html_url":"https://github.com/elastic/elasticsearch/issues/49321#issuecomment-555656765","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49321","id":555656765,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTY1Njc2NQ==","user":{"login":"AlexP-Elastic","id":19776583,"node_id":"MDQ6VXNlcjE5Nzc2NTgz","avatar_url":"https://avatars3.githubusercontent.com/u/19776583?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexP-Elastic","html_url":"https://github.com/AlexP-Elastic","followers_url":"https://api.github.com/users/AlexP-Elastic/followers","following_url":"https://api.github.com/users/AlexP-Elastic/following{/other_user}","gists_url":"https://api.github.com/users/AlexP-Elastic/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexP-Elastic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexP-Elastic/subscriptions","organizations_url":"https://api.github.com/users/AlexP-Elastic/orgs","repos_url":"https://api.github.com/users/AlexP-Elastic/repos","events_url":"https://api.github.com/users/AlexP-Elastic/events{/privacy}","received_events_url":"https://api.github.com/users/AlexP-Elastic/received_events","type":"User","site_admin":false},"created_at":"2019-11-19T18:59:35Z","updated_at":"2019-11-19T18:59:35Z","author_association":"NONE","body":"I'm personally a heavy script user and my usage patterns certainly shouldn't be taken as representative :) but for the purposes of discussion, my uses of scripts include:\r\n* Formatting and transforming fields in Kibana using the script field functionality\r\n   * _(unclear to what extent cache is needed for this scenario ... eg if I create a visualization and share the link, a cache is one way of handling the resulting spike? Is the shard request the right cache for that?)_\r\n* Similarly, I use a spreadsheet connector (https://github.com/Alex-At-Home/elasticsearch-sheets) which lets (/encourages!) you to create script fields and scripts for queries and aggregations (and build quite complex transforms between the source data and the spreadsheet's cell range using the `scripted_metric` aggregation) \r\n   * _(obviously a random app I built isn't evidence of any requirement though! The case of caching would be similar to the Kibana one, ie sharing a link to lots of people)_\r\n* An aggregation I use somewhat commonly involves having a fairly frequently changing (or user entered) table of weights, and then using that lookup table to weight the results of a terms aggregation\r\n   * (this is actually the thing I was experimenting with the performance of when I came upon the out-of-date documentation and starting asking around)\r\n\r\nSo it could be summarized as a mix of \"missing aggregation features\", (related) \"trading off performance to provide (query-time) flexibility\". and to a lesser extent \"trading off performance to keep all logic in one place\"\r\n\r\nIn all cases I'm not so much trading off \"correctness for performance\" with cache, I'm trading off memory for performance (based on the knowledge/expectation that there will be a large number of queries with the same results in a given time period)\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/555732940","html_url":"https://github.com/elastic/elasticsearch/issues/49321#issuecomment-555732940","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49321","id":555732940,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTczMjk0MA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2019-11-19T21:53:24Z","updated_at":"2019-11-19T21:53:24Z","author_association":"CONTRIBUTOR","body":"Thanks for the detailed reply!\r\n\r\n>  eg if I create a visualization and share the link, a cache is one way of handling the resulting spike? Is the shard request the right cache for that?\r\n\r\nThis is exactly the reason why we have this cache. :)\r\n\r\n> a fairly frequently changing (or user entered) table of weights, and then using that lookup table to weight the results of a terms aggregation\r\n\r\nThat one sounds interesting to me. Do I understand correctly that instead of sorting terms by doc_count descending, you want to sort them by descending weight? Or maybe even descending weight*doc_count? Can you tell me more about the higher-level use-case, is it something like a rollup?\r\n\r\nTo be clear I'm not against caching scripted queries or aggs, but I'm worried about allowing users to cache data that is not cacheable. My preferred way of fixing this would be by enabling Painless to tell us when a script is deterministic or not, so that we could make caching decisions accordingly. @jdconrad @stu-elastic Do you think it'd be doable?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/555736474","html_url":"https://github.com/elastic/elasticsearch/issues/49321#issuecomment-555736474","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49321","id":555736474,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTczNjQ3NA==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-11-19T22:02:33Z","updated_at":"2019-11-19T22:02:33Z","author_association":"MEMBER","body":"> An aggregation I use somewhat commonly involves having a fairly frequently changing (or user entered) table of weights, and then using that lookup table to weight the results of a terms aggregation\r\n\r\nThis caught my eye as well, would love to know more.  We've talked about making [`bucket_sort` scriptable](https://github.com/elastic/elasticsearch/issues/26570#issuecomment-410068999), which would allow a lot more custom sorting of agg buckets. I realize that's still using a script, but being a post-processing step it'd also be a lot faster since it would only invoke the script once.  \r\n\r\n(although it would have different semantics since it's only sorting the final list of buckets, instead of all the buckets at runtime).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/555740424","html_url":"https://github.com/elastic/elasticsearch/issues/49321#issuecomment-555740424","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49321","id":555740424,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTc0MDQyNA==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2019-11-19T22:13:00Z","updated_at":"2019-11-20T21:00:44Z","author_association":"CONTRIBUTOR","body":"So, I think we could make this possible through Painless for which scripts are deterministic, but I don't think it would be all that useful unless we are safe to assume that any access to docvalues (or _source) or whatever else the user is doing would be flushed from the cache upon changes. And if anything is done from user-defined params (are weights done this way or is a new script created every time with constants?) then it's also not deterministic as we explicitly expect those to be changed throughout a script's life. \r\n\r\nThe other thing is right now Painless isn't really aware of something like `doc` and just views this input as a simple Map. We would need to specialize certain inputs to be known as deterministic.\r\n\r\nEdit: After thinking about this I realized that all those values are deterministic because otherwise the cache wouldn't work. (Oops.) I think Painless only has one non-deterministic methods right now in randomUUID.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/567723429","html_url":"https://github.com/elastic/elasticsearch/issues/49321#issuecomment-567723429","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49321","id":567723429,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NzcyMzQyOQ==","user":{"login":"stu-elastic","id":24232742,"node_id":"MDQ6VXNlcjI0MjMyNzQy","avatar_url":"https://avatars0.githubusercontent.com/u/24232742?v=4","gravatar_id":"","url":"https://api.github.com/users/stu-elastic","html_url":"https://github.com/stu-elastic","followers_url":"https://api.github.com/users/stu-elastic/followers","following_url":"https://api.github.com/users/stu-elastic/following{/other_user}","gists_url":"https://api.github.com/users/stu-elastic/gists{/gist_id}","starred_url":"https://api.github.com/users/stu-elastic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stu-elastic/subscriptions","organizations_url":"https://api.github.com/users/stu-elastic/orgs","repos_url":"https://api.github.com/users/stu-elastic/repos","events_url":"https://api.github.com/users/stu-elastic/events{/privacy}","received_events_url":"https://api.github.com/users/stu-elastic/received_events","type":"User","site_admin":false},"created_at":"2019-12-19T23:31:08Z","updated_at":"2019-12-19T23:31:08Z","author_association":"CONTRIBUTOR","body":"Fixed by the following changes:\r\n* Scripting: Groundwork for caching script results https://github.com/elastic/elasticsearch/pull/49895 ([backport](https://github.com/elastic/elasticsearch/pull/49944))\r\n* Scripting: Cache script results if deterministic https://github.com/elastic/elasticsearch/pull/50106 ([backport](https://github.com/elastic/elasticsearch/pull/50329))\r\n* [TEST] Unknown scripting annotations raise error  https://github.com/elastic/elasticsearch/pull/50343 ([backport](https://github.com/elastic/elasticsearch/pull/50346))\r\n* Scripting: ScriptFactory not required by compile  https://github.com/elastic/elasticsearch/pull/50344 ([backport](https://github.com/elastic/elasticsearch/pull/50392))\r\n* [DOCS] Deterministic scripted queries are cached  https://github.com/elastic/elasticsearch/pull/50408 ([backport](https://github.com/elastic/elasticsearch/pull/50411))\r\n","performed_via_github_app":null}]