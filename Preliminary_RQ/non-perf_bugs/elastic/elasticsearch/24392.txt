{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/24392","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24392/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24392/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24392/events","html_url":"https://github.com/elastic/elasticsearch/issues/24392","id":225088046,"node_id":"MDU6SXNzdWUyMjUwODgwNDY=","number":24392,"title":"Replica Consistency can prevent an index from allocating on startup or close/open","user":{"login":"n0othing","id":11917935,"node_id":"MDQ6VXNlcjExOTE3OTM1","avatar_url":"https://avatars2.githubusercontent.com/u/11917935?v=4","gravatar_id":"","url":"https://api.github.com/users/n0othing","html_url":"https://github.com/n0othing","followers_url":"https://api.github.com/users/n0othing/followers","following_url":"https://api.github.com/users/n0othing/following{/other_user}","gists_url":"https://api.github.com/users/n0othing/gists{/gist_id}","starred_url":"https://api.github.com/users/n0othing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/n0othing/subscriptions","organizations_url":"https://api.github.com/users/n0othing/orgs","repos_url":"https://api.github.com/users/n0othing/repos","events_url":"https://api.github.com/users/n0othing/events{/privacy}","received_events_url":"https://api.github.com/users/n0othing/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-04-28T13:55:00Z","updated_at":"2017-04-28T14:28:34Z","closed_at":"2017-04-28T14:28:34Z","author_association":"MEMBER","active_lock_reason":null,"body":"<!--\r\nGitHub is reserved for bug reports and feature requests. The best place\r\nto ask a general question is at the Elastic Discourse forums at\r\nhttps://discuss.elastic.co. If you are in fact posting a bug report or\r\na feature request, please include one and only one of the below blocks\r\nin your new issue. Note that whether you're filing a bug report or a\r\nfeature request, ensure that your submission is for an\r\n[OS that we support](https://www.elastic.co/support/matrix#show_os).\r\nBug reports on an OS that we do not support or feature requests\r\nspecific to an OS that we do not support will be closed.\r\n-->\r\n\r\n<!--\r\nIf you are filing a bug report, please remove the below feature\r\nrequest block and provide responses for all of the below items.\r\n-->\r\n\r\n**Elasticsearch version**: Tested on 2.4.4\r\n\r\n**Description of the problem including expected versus actual behavior**: If an index's replica count is greater than `1` and there aren't enough available nodes to achieve quorum, then that index won't allocate on cluster restart or if you _close/_open the index. This prevents you from being able to _read_ from that index.\r\n\r\n\r\n**Steps to reproduce**:\r\n 1. Start with 3 nodes\r\n\r\n```\r\nGET _cat/nodes?v\r\n\r\nhost      ip        heap.percent ram.percent load node.role master name         \r\n127.0.0.1 127.0.0.1            8          88 2.25 d         *      Larry Bodine \r\n127.0.0.1 127.0.0.1            3          88 2.25 d         m      Paibo        \r\n127.0.0.1 127.0.0.1            8          88 2.25 d         m      Maggott      \r\n```\r\n\r\n 2. Create our 1P/2R index\r\n\r\n```\r\nPUT index\r\n{\r\n  \"settings\": {\r\n    \"number_of_shards\": 1,\r\n    \"number_of_replicas\": 2\r\n  }\r\n}\r\n\r\nGET _cat/indices?v\r\n\r\nhealth status index pri rep docs.count docs.deleted store.size pri.store.size \r\ngreen  open   index   1   2          0            0       390b           130b \r\n```\r\n\r\n 3. Shut down 2 nodes --> the index become yellow and is still allocated.\r\n\r\n```\r\nGET _cat/indices?v\r\n\r\nhealth status index pri rep docs.count docs.deleted store.size pri.store.size \r\nyellow open   index   1   2          0            0       130b           130b \r\n```\r\n\r\n4. Close and reopen the index (or simply restart the active node)\r\n\r\n```\r\nPOST index/_close\r\n\r\nPOST index/_open\r\n\r\nGET _cat/indices?v\r\n\r\nhealth status index pri rep docs.count docs.deleted store.size pri.store.size \r\nred    open   index   1   2                                                   \r\n```\r\n5. If we create a brand new index, it will successfully allocate (not that we can really do anything with it because it doesn't meet quorum :) ).\r\n\r\n```\r\nPUT index2\r\n{\r\n  \"settings\": {\r\n    \"number_of_shards\": 1,\r\n    \"number_of_replicas\": 2\r\n  }\r\n}\r\n\r\nGET _cat/indices?v\r\n\r\nhealth status index  pri rep docs.count docs.deleted store.size pri.store.size \r\nyellow open   index2   1   2          0            0       130b           130b \r\nred    open   index    1   2                          \r\n```\r\n\r\n6. If we attempt an empty `reroute` w/ `DEBUG` logging enabled, we see this in the logs\r\n\r\n```\r\nPOST /_cluster/reroute\r\n\r\n[2017-04-28 09:52:09,782][DEBUG][cluster.service          ] [Larry Bodine] processing [cluster_reroute (api)]: execute\r\n[2017-04-28 09:52:09,783][DEBUG][gateway                  ] [Larry Bodine] [index][0] found 1 allocations of [index][0], node[null], [P], v[0], s[UNASSIGNED], unassigned_info[[reason=INDEX_REOPENED], at[2017-04-28T13:47:22.456Z]], highest version: [7]\r\n[2017-04-28 09:52:09,783][DEBUG][gateway                  ] [Larry Bodine] [index][0]: not allocating, number_of_allocated_shards_found [1]\r\n[2017-04-28 09:52:09,784][DEBUG][cluster.service          ] [Larry Bodine] cluster state updated, version [39], source [cluster_reroute (api)]\r\n[2017-04-28 09:52:09,784][DEBUG][cluster.service          ] [Larry Bodine] publishing cluster state version [39]\r\n[2017-04-28 09:52:09,784][DEBUG][cluster.service          ] [Larry Bodine] set local cluster state to version 39\r\n[2017-04-28 09:52:09,785][DEBUG][cluster.service          ] [Larry Bodine] processing [cluster_reroute (api)]: took 2ms done applying updated cluster_state (version: 39, uuid: YtD5XV_QRN2OVMcXwfF2pQ)\r\n```\r\n\r\nI tested the same scenario on `5.3.1` and the index successfully allocated on restart/open, so this seems to only occur in 2.x.","closed_by":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"performed_via_github_app":null}