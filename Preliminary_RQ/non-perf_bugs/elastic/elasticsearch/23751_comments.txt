[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/289281854","html_url":"https://github.com/elastic/elasticsearch/issues/23751#issuecomment-289281854","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23751","id":289281854,"node_id":"MDEyOklzc3VlQ29tbWVudDI4OTI4MTg1NA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2017-03-26T13:01:36Z","updated_at":"2017-03-26T13:01:36Z","author_association":"CONTRIBUTOR","body":"We are already working on some of this. At least for a while we will have\nto support scripts that don't know their context for backwards\ncompatibility. Though any plugin could have whatever backwards\ncompatibility guarantees it wants.\n\nOn Sun, Mar 26, 2017, 8:14 AM Jayson Minard <notifications@github.com>\nwrote:\n\n> Currently, when writing a script plugin, you are called to compile a\n> script without knowing the intended usage of the script. Therefore for more\n> type-strict languages that should provide better access to ctx, doc,\n> fields, and other values coming into the script they cannot change what is\n> available to the script code (i.e. a custom receiver per script type, or\n> script template class per script type). Since the scripts are specified\n> within a specific use case it is possible to tell the plugin what this is.\n> Also, the Java API should have known type-safe contexts available for the\n> engines to use and build upon for each use case of a script.\n>\n> My use case is for Kotlin painlessly-secured script engine where currently\n> I have to provide a very generic receiver class yet handle the variations\n> of how to access scripts which is not very uniform:\n>\n> * Scripted updates, update by query:  https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update.html\n>  *\n>  *     ctx._source.counter += number    // inc counter\n>  *     ctx._source.tags.add(params.tag) // add to list\n>  *     ctx._source.new_field = bla      // add new field to index\n>  *     ctx._source.remove(old_field)    // remove field from index\n>  *\n>  *     also in ctx is:  _index, _type, _id, _version, _routing, _parent, _now (current timestamp)\n>  *\n>  *     ctx.op = delete (delete doc instead of update), noop  (do nothing)\n>  *\n>  * Script fields in queries: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-script-fields.html\n>  *\n>  *     doc['myfield'].value               // access a current field in the doc, loading all values, caching, simple values, typically single value (but can be multi)\n>  *     params['_source'].['fieldName']    // access the original _source from the document, each doc parsed, slower, full JSON access\n>  *\n>  * Scripted aggregations: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-scripted-metric-aggregation.html\n>  *\n>  *     doc.type.value           // doc type\n>  *     doc.fieldName.value      // access field from doc\n>  *     params._agg.whatever     // can place anything here for map step, or retrieving in combine step\n>  *     params._agg              // contents for reduce script\n>  *\n>  *     scripts can only return or store into _agg object primitive, string, map (of same types listed here), array (of same types listed here)\n>  *\n>  * Script ingest processor: https://www.elastic.co/guide/en/elasticsearch/reference/current/script-processor.html\n>  *\n>  *    ctx.fieldName             // value of a field\n>  *\n>  * Function score query: https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html#function-script-score\n>  *\n>  *    _score\n>  *    doc['myField'].value\n>  *    _index.*                  // doc stats https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-advanced-scripting.html\n>  *\n>  *    return double\n>  *\n>  * All cases\n>  *\n>  *     params['paramName']\n>  *\n>  * Some cases\n>  *\n>  *     _fields['fieldName'].value    // stored: true fields\n>  *\n>\n> â€”\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/elastic/elasticsearch/issues/23751>, or mute the\n> thread\n> <https://github.com/notifications/unsubscribe-auth/AANLohWpPCMYPJtWkYuzFl9755yRwvR1ks5rplaHgaJpZM4MpaG->\n> .\n>\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/289285402","html_url":"https://github.com/elastic/elasticsearch/issues/23751#issuecomment-289285402","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23751","id":289285402,"node_id":"MDEyOklzc3VlQ29tbWVudDI4OTI4NTQwMg==","user":{"login":"apatrida","id":182340,"node_id":"MDQ6VXNlcjE4MjM0MA==","avatar_url":"https://avatars3.githubusercontent.com/u/182340?v=4","gravatar_id":"","url":"https://api.github.com/users/apatrida","html_url":"https://github.com/apatrida","followers_url":"https://api.github.com/users/apatrida/followers","following_url":"https://api.github.com/users/apatrida/following{/other_user}","gists_url":"https://api.github.com/users/apatrida/gists{/gist_id}","starred_url":"https://api.github.com/users/apatrida/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apatrida/subscriptions","organizations_url":"https://api.github.com/users/apatrida/orgs","repos_url":"https://api.github.com/users/apatrida/repos","events_url":"https://api.github.com/users/apatrida/events{/privacy}","received_events_url":"https://api.github.com/users/apatrida/received_events","type":"User","site_admin":false},"created_at":"2017-03-26T13:42:52Z","updated_at":"2017-03-26T13:42:52Z","author_association":"CONTRIBUTOR","body":"Great, I only found closed issues related so added this to be sure it was represented.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/289696940","html_url":"https://github.com/elastic/elasticsearch/issues/23751#issuecomment-289696940","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23751","id":289696940,"node_id":"MDEyOklzc3VlQ29tbWVudDI4OTY5Njk0MA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-03-28T08:16:18Z","updated_at":"2017-03-28T08:16:18Z","author_association":"CONTRIBUTOR","body":"Closing in favour of https://github.com/elastic/elasticsearch/issues/20426","performed_via_github_app":null}]