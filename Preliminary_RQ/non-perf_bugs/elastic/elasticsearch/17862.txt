{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/17862","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17862/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17862/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17862/events","html_url":"https://github.com/elastic/elasticsearch/issues/17862","id":149511749,"node_id":"MDU6SXNzdWUxNDk1MTE3NDk=","number":17862,"title":"Display ES version as part of index.version in index settings","user":{"login":"ppf2","id":7216393,"node_id":"MDQ6VXNlcjcyMTYzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/7216393?v=4","gravatar_id":"","url":"https://api.github.com/users/ppf2","html_url":"https://github.com/ppf2","followers_url":"https://api.github.com/users/ppf2/followers","following_url":"https://api.github.com/users/ppf2/following{/other_user}","gists_url":"https://api.github.com/users/ppf2/gists{/gist_id}","starred_url":"https://api.github.com/users/ppf2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppf2/subscriptions","organizations_url":"https://api.github.com/users/ppf2/orgs","repos_url":"https://api.github.com/users/ppf2/repos","events_url":"https://api.github.com/users/ppf2/events{/privacy}","received_events_url":"https://api.github.com/users/ppf2/received_events","type":"User","site_admin":false},"labels":[{"id":146836529,"node_id":"MDU6TGFiZWwxNDY4MzY1Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Stats","name":":Core/Features/Stats","color":"0e8a16","default":false,"description":"Statistics tracking and retrieval APIs"},{"id":152517143,"node_id":"MDU6TGFiZWwxNTI1MTcxNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/REST%20API","name":":Core/Infra/REST API","color":"0e8a16","default":false,"description":"REST infrastructure and utilities"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-04-19T16:23:57Z","updated_at":"2016-04-21T22:52:52Z","closed_at":"2016-04-21T07:36:21Z","author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the feature**:\n\nCurrently, we display index.version.created in index settings as Lucene version string, eg. 1070199.\n\nFor most end users out/admins there, this is often not intuitive unless they know to check the mapping [here](https://github.com/elastic/elasticsearch/blob/2.x/core/src/main/java/org/elasticsearch/Version.java).    \n\n```\n    \"settings\" : {\n      \"index\" : {\n        \"creation_date\" : \"1460617724303\",\n        \"number_of_shards\" : \"5\",\n        \"number_of_replicas\" : \"1\",\n        \"version\" : {\n          \"created\" : \"1070199\"\n        }\n      }\n    }\n```\n\nThe index.version.created has become more useful as we make changes to the product.  For example, with the fielddata to doc_values change, it is helpful to look at the index created version to determine if the index was created on 1.7 (which defaults to fielddata).  Looking at the mappings api output will not provide this information anymore on 2.x because all fields default to doc values (so if a mapped field has no doc_values setting showing from the mappings api, is it using doc values on 2.x?  Or really using fielddata because the index was created on 1.x).  A quick way to check will be to look at the index.version.created field.  In 5.0, I believe we also have some internal data-structures that do not get upgraded as part of the regular merge process (or upgrade api) and requires creating the index on 5.0.  So having the index.version.created be a string that is intuitive to the end user will be helpful.\n\nFor example, can we show it as V_1_7_1 (1070199) instead of just 1070199?  Or add another field under index.version showing the corresponding V_1_7_1 (if changing the format of index.version.created will break backwards compatibility).\n","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}