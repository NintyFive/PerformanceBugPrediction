[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/224025415","html_url":"https://github.com/elastic/elasticsearch/issues/18739#issuecomment-224025415","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18739","id":224025415,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNDAyNTQxNQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-06-06T17:18:24Z","updated_at":"2016-06-06T17:18:24Z","author_association":"CONTRIBUTOR","body":"Related to https://github.com/elastic/elasticsearch/issues/11511\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/224025645","html_url":"https://github.com/elastic/elasticsearch/issues/18739#issuecomment-224025645","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18739","id":224025645,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNDAyNTY0NQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-06-06T17:19:11Z","updated_at":"2016-06-06T17:19:11Z","author_association":"CONTRIBUTOR","body":"@bleskes What do you think?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/224037272","html_url":"https://github.com/elastic/elasticsearch/issues/18739#issuecomment-224037272","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18739","id":224037272,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNDAzNzI3Mg==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2016-06-06T17:58:42Z","updated_at":"2016-06-06T19:20:16Z","author_association":"MEMBER","body":"> in the \"generic\" thread pool, which is a cached (unbounded!) thread pool\n\nNote that as of #17017, the generic thread pool is bounded.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/224057513","html_url":"https://github.com/elastic/elasticsearch/issues/18739#issuecomment-224057513","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18739","id":224057513,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNDA1NzUxMw==","user":{"login":"jonaf","id":456794,"node_id":"MDQ6VXNlcjQ1Njc5NA==","avatar_url":"https://avatars3.githubusercontent.com/u/456794?v=4","gravatar_id":"","url":"https://api.github.com/users/jonaf","html_url":"https://github.com/jonaf","followers_url":"https://api.github.com/users/jonaf/followers","following_url":"https://api.github.com/users/jonaf/following{/other_user}","gists_url":"https://api.github.com/users/jonaf/gists{/gist_id}","starred_url":"https://api.github.com/users/jonaf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonaf/subscriptions","organizations_url":"https://api.github.com/users/jonaf/orgs","repos_url":"https://api.github.com/users/jonaf/repos","events_url":"https://api.github.com/users/jonaf/events{/privacy}","received_events_url":"https://api.github.com/users/jonaf/received_events","type":"User","site_admin":false},"created_at":"2016-06-06T19:10:22Z","updated_at":"2016-06-06T19:10:22Z","author_association":"NONE","body":"It would be really awesome if Elasticsearch just had a queue for relocations and had a single thread fan out the relocations (up to the configured concurrent relocations setting) or something. It'd be really nice if, instead of just putting a limit on how many relocations I can do, allowing me to give all the relocations to Elasticsearch and let elasticsearch decide how to handle things (relocating at peak efficiency based on its ability to prioritize and do work). This worked _exceedingly well_ in versions of Elasticsearch prior to 1.5 and I don't see any reason why Elasticsearch can't continue allowing any number of relocations.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225135965","html_url":"https://github.com/elastic/elasticsearch/issues/18739#issuecomment-225135965","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18739","id":225135965,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTEzNTk2NQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-10T09:26:56Z","updated_at":"2016-06-10T09:26:56Z","author_association":"CONTRIBUTOR","body":"@jonaf you are using an absolute expert API that ignores all throttling decisions done by the allocation infrastructure to prevent these situations.  This might have worked in previous versions but there is no guarantee that the system can sustain any expert level API calls that forces the system to ignore it's own safety mechanisms. If you go and use allocation filtering to move all shards away from one or more nodes it will move them all without timeouts in a sustainable manner. If you force allocations via the move API you basically take over all ownership of the cluster and it will react with canceled allocations if you overload it. \n\nLong term these APIs are not maintainable and might be even more expert or even go away entirely. We will work on making allocation better, maybe you can tell us why you can't rely on the ES internal allocation logic?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225178020","html_url":"https://github.com/elastic/elasticsearch/issues/18739#issuecomment-225178020","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18739","id":225178020,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTE3ODAyMA==","user":{"login":"jonaf","id":456794,"node_id":"MDQ6VXNlcjQ1Njc5NA==","avatar_url":"https://avatars3.githubusercontent.com/u/456794?v=4","gravatar_id":"","url":"https://api.github.com/users/jonaf","html_url":"https://github.com/jonaf","followers_url":"https://api.github.com/users/jonaf/followers","following_url":"https://api.github.com/users/jonaf/following{/other_user}","gists_url":"https://api.github.com/users/jonaf/gists{/gist_id}","starred_url":"https://api.github.com/users/jonaf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonaf/subscriptions","organizations_url":"https://api.github.com/users/jonaf/orgs","repos_url":"https://api.github.com/users/jonaf/repos","events_url":"https://api.github.com/users/jonaf/events{/privacy}","received_events_url":"https://api.github.com/users/jonaf/received_events","type":"User","site_admin":false},"created_at":"2016-06-10T13:11:56Z","updated_at":"2016-06-10T13:11:56Z","author_association":"NONE","body":"@s1monw In our previous version of Elasticsearch (1.3.9), using allocation filtering was our first implementation. However, it was broken (it never \"activated,\" so shards never moved). I'll see if I can reimplement allocation filtering in 1.7.3 and see if it works now, but reimplementing requires non-trivial engineering. I see no reason why the reroute API cannot use the same implementation that allocation filtering would use. There is nothing about the API in the documentation (historically, in its behavior either) that indicates this is an \"expert\" API or that it should be considered dangerous. In fact, it seems to have quite a few protections -- for example, you have to expressly say \"allow_primary\" to allocate primaries, which protects potential data loss, and it will reject relocations that do not meet the allocation criteria for the cluster.\n\nHow hard would it really be for the reroute API to just use a queue? Or the same mechanism allocation filtering uses? Because really, it seems like it should be the same implementation under the hood, because your'e doing the same thing, it's just that the filtering API has a blanket \"rule\" or set of rules to do the relocations, and the reroute API allows maximum flexibility with deciding a \"rule\" for every shard. To me, this is the identical problem under the hood.\n\nTo recap, I'll explain the use-case here. We provision (very large) elasticsearch clusters in EC2. We have software that manages these clusters (provisions them, for example). One of the features this software has is to \"resize\" a cluster on-the-fly. The cluster stays \"green\" 100% of the time, but we move all of the shards from one group of EC2 nodes to another group, usually to convert instance types or scale up/down the number of data nodes in the Elasticsearch cluster. We will always need a mechanism to do this relocation and manage the shards, so if you take away the reroute API, we will be really unhappy and most likely unable to upgrade to the next version of Elasticsearch, unless allocation filtering lives up to its promise (and so far, it has not).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225228795","html_url":"https://github.com/elastic/elasticsearch/issues/18739#issuecomment-225228795","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18739","id":225228795,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTIyODc5NQ==","user":{"login":"jonaf","id":456794,"node_id":"MDQ6VXNlcjQ1Njc5NA==","avatar_url":"https://avatars3.githubusercontent.com/u/456794?v=4","gravatar_id":"","url":"https://api.github.com/users/jonaf","html_url":"https://github.com/jonaf","followers_url":"https://api.github.com/users/jonaf/followers","following_url":"https://api.github.com/users/jonaf/following{/other_user}","gists_url":"https://api.github.com/users/jonaf/gists{/gist_id}","starred_url":"https://api.github.com/users/jonaf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonaf/subscriptions","organizations_url":"https://api.github.com/users/jonaf/orgs","repos_url":"https://api.github.com/users/jonaf/repos","events_url":"https://api.github.com/users/jonaf/events{/privacy}","received_events_url":"https://api.github.com/users/jonaf/received_events","type":"User","site_admin":false},"created_at":"2016-06-10T16:21:31Z","updated_at":"2016-06-10T16:21:31Z","author_association":"NONE","body":"@s1monw I've revisited the allocation filtering API, and I think it would be fine to replace our existing allocation algorithm with the filtering API. However, the current implementation requires tagging individual nodes with specific details, and it doesn't seem like these updates can be made to individual nodes after they are already running. The filtering API does support excluding nodes based on name or IP address, which is exactly what we need, but it only seems to support _one_ name or IP address, and I would need to provide a _list_ of names or IP addresses (sometimes up to 30 or more). Is there some way to provide a list of IP addresses of nodes to exclude in the filter API?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225236090","html_url":"https://github.com/elastic/elasticsearch/issues/18739#issuecomment-225236090","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18739","id":225236090,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTIzNjA5MA==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2016-06-10T16:52:05Z","updated_at":"2016-06-10T16:52:05Z","author_association":"CONTRIBUTOR","body":"You can specify multiple values, comma-separated:\n\nhttps://www.elastic.co/guide/en/elasticsearch/reference/1.7/index-modules-allocation.html\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225241730","html_url":"https://github.com/elastic/elasticsearch/issues/18739#issuecomment-225241730","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18739","id":225241730,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTI0MTczMA==","user":{"login":"jonaf","id":456794,"node_id":"MDQ6VXNlcjQ1Njc5NA==","avatar_url":"https://avatars3.githubusercontent.com/u/456794?v=4","gravatar_id":"","url":"https://api.github.com/users/jonaf","html_url":"https://github.com/jonaf","followers_url":"https://api.github.com/users/jonaf/followers","following_url":"https://api.github.com/users/jonaf/following{/other_user}","gists_url":"https://api.github.com/users/jonaf/gists{/gist_id}","starred_url":"https://api.github.com/users/jonaf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonaf/subscriptions","organizations_url":"https://api.github.com/users/jonaf/orgs","repos_url":"https://api.github.com/users/jonaf/repos","events_url":"https://api.github.com/users/jonaf/events{/privacy}","received_events_url":"https://api.github.com/users/jonaf/received_events","type":"User","site_admin":false},"created_at":"2016-06-10T17:15:31Z","updated_at":"2016-06-10T17:15:31Z","author_association":"NONE","body":"Thanks @ywelsch ! I'll try that and see if it works. I guess I expected a JSON array rather than a comma-separated string. I didn't notice the comma-separation or that it would work for `_ip` exclusion.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225258489","html_url":"https://github.com/elastic/elasticsearch/issues/18739#issuecomment-225258489","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18739","id":225258489,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTI1ODQ4OQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-10T18:23:14Z","updated_at":"2016-06-10T18:23:14Z","author_association":"CONTRIBUTOR","body":"> Thanks @ywelsch ! I'll try that and see if it works. I guess I expected a JSON array rather than a comma-separated string. I didn't notice the comma-separation or that it would work for _ip exclusion.\n\nI ran into the same trap lately, I think we should fix this in master and 2.x to also accept a json array.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225260110","html_url":"https://github.com/elastic/elasticsearch/issues/18739#issuecomment-225260110","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18739","id":225260110,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTI2MDExMA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-10T18:29:27Z","updated_at":"2016-06-10T18:29:27Z","author_association":"CONTRIBUTOR","body":"> How hard would it really be for the reroute API to just use a queue? Or the same mechanism allocation filtering uses? Because really, it seems like it should be the same implementation under the hood, because your'e doing the same thing, it's just that the filtering API has a blanket \"rule\" or set of rules to do the relocations, and the reroute API allows maximum flexibility with deciding a \"rule\" for every shard. To me, this is the identical problem under the hood.\n\nthe two APIs are orthogonal. When you move a shard you take all control on your end make the final decision and fire off relocations without respecting throttling. There is no state involved here we don't go and iteratively apply that move command. With allocation filtering you set a state on the index or the cluster that is applied in each reroute such that we can just throttle relocations since we know we will come back and retry on the next cluster change.\n\nI'm really fed up with the `_reroute` API. I think we should remove it, it's too trappy and it's almost like making a native call in java, you should only do it if there is really no other solution out there. The problem is that 100% of the users that I have seen using it, use it because they didn't know about feature X or didn't configure feature X correctly or disable allocation and forget about it.  I will open an issue to remove this API. It's a bug that we have it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225264725","html_url":"https://github.com/elastic/elasticsearch/issues/18739#issuecomment-225264725","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18739","id":225264725,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTI2NDcyNQ==","user":{"login":"jonaf","id":456794,"node_id":"MDQ6VXNlcjQ1Njc5NA==","avatar_url":"https://avatars3.githubusercontent.com/u/456794?v=4","gravatar_id":"","url":"https://api.github.com/users/jonaf","html_url":"https://github.com/jonaf","followers_url":"https://api.github.com/users/jonaf/followers","following_url":"https://api.github.com/users/jonaf/following{/other_user}","gists_url":"https://api.github.com/users/jonaf/gists{/gist_id}","starred_url":"https://api.github.com/users/jonaf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonaf/subscriptions","organizations_url":"https://api.github.com/users/jonaf/orgs","repos_url":"https://api.github.com/users/jonaf/repos","events_url":"https://api.github.com/users/jonaf/events{/privacy}","received_events_url":"https://api.github.com/users/jonaf/received_events","type":"User","site_admin":false},"created_at":"2016-06-10T18:47:45Z","updated_at":"2016-06-10T18:47:45Z","author_association":"NONE","body":"Thanks for the explanation describing how the reroute API is different from other API's. As I said before, it was our only option for this use-case in Elasticsearch 1.3.9 (the filtering API was available, but did not work for our use-case). I'm doing some testing now to ensure that we can use the filtering API rather than manually allocating shards. It would be much better if we could use this API (our current allocation algorithm is _very_ complex).\n\nI think there are some edge-cases where the reroute API may be the only way to recover a cluster, and sometimes you _really_ need to recover a cluster, rather than replace or reindex it. I think that it may make sense to move some API's into some \"admin\" area, expressly where dangerous (or as you put it, \"expert\") API's live, and set the documentation to describe clearly that the API should not be used for typical operations (i.e., on a healthy cluster). But I guess that's a separate discussion for the issue you open to remove it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225265906","html_url":"https://github.com/elastic/elasticsearch/issues/18739#issuecomment-225265906","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18739","id":225265906,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTI2NTkwNg==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-10T18:52:39Z","updated_at":"2016-06-10T18:52:39Z","author_association":"CONTRIBUTOR","body":"> I think there are some edge-cases where the reroute API may be the only way to recover a cluster, and sometimes you really need to recover a cluster, rather than replace or reindex it. I think that it may make sense to move some API's into some \"admin\" area, expressly where dangerous (or as you put it, \"expert\") API's live, and set the documentation to describe clearly that the API should not be used for typical operations (i.e., on a healthy cluster). But I guess that's a separate discussion for the issue you open to remove it.\n\nI'd be very interested in hearing what situations you think its useful in? see #18819 feel free to contribute\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225409022","html_url":"https://github.com/elastic/elasticsearch/issues/18739#issuecomment-225409022","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18739","id":225409022,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTQwOTAyMg==","user":{"login":"jonaf","id":456794,"node_id":"MDQ6VXNlcjQ1Njc5NA==","avatar_url":"https://avatars3.githubusercontent.com/u/456794?v=4","gravatar_id":"","url":"https://api.github.com/users/jonaf","html_url":"https://github.com/jonaf","followers_url":"https://api.github.com/users/jonaf/followers","following_url":"https://api.github.com/users/jonaf/following{/other_user}","gists_url":"https://api.github.com/users/jonaf/gists{/gist_id}","starred_url":"https://api.github.com/users/jonaf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonaf/subscriptions","organizations_url":"https://api.github.com/users/jonaf/orgs","repos_url":"https://api.github.com/users/jonaf/repos","events_url":"https://api.github.com/users/jonaf/events{/privacy}","received_events_url":"https://api.github.com/users/jonaf/received_events","type":"User","site_admin":false},"created_at":"2016-06-12T04:08:08Z","updated_at":"2016-06-12T04:08:08Z","author_association":"NONE","body":"Thanks, @s1monw and everyone else for your help on this. I'll follow-up on the appropriate issues separately now.\n\n> I ran into the same trap lately, I think we should fix this in master and 2.x to also accept a json array.\n\nIs there already an issue for this? If not, I'm happy to create one / submit a PR for it. I couldn't find an open one.\n\nAs a final note for the benefit of anyone else that comes across this issue: using allocation filtering in Elasticsearch 1.7.3 _did_ satisfy our requirements, and we've since switched to that in lieu of the reroute API and our own allocation algorithm (although we're continuing to use the reroute API in versions of Elasticsearch prior to 1.5).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225526517","html_url":"https://github.com/elastic/elasticsearch/issues/18739#issuecomment-225526517","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18739","id":225526517,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTUyNjUxNw==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-13T09:06:02Z","updated_at":"2016-06-13T09:06:02Z","author_association":"CONTRIBUTOR","body":"> Is there already an issue for this? If not, I'm happy to create one / submit a PR for it. I couldn't find an open one.\n\nplease do!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225526604","html_url":"https://github.com/elastic/elasticsearch/issues/18739#issuecomment-225526604","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18739","id":225526604,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTUyNjYwNA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-13T09:06:25Z","updated_at":"2016-06-13T09:06:25Z","author_association":"CONTRIBUTOR","body":"> As a final note for the benefit of anyone else that comes across this issue: using allocation filtering in Elasticsearch 1.7.3 did satisfy our requirements, and we've since switched to that in lieu of the reroute API and our own allocation algorithm (although we're continuing to use the reroute API in versions of Elasticsearch prior to 1.5).\n\nthat is awesome news! thanks for reporting back\n","performed_via_github_app":null}]