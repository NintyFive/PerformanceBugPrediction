[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/481881473","html_url":"https://github.com/elastic/elasticsearch/issues/41078#issuecomment-481881473","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41078","id":481881473,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTg4MTQ3Mw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-04-10T21:54:18Z","updated_at":"2019-04-10T21:54:18Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/489106860","html_url":"https://github.com/elastic/elasticsearch/issues/41078#issuecomment-489106860","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41078","id":489106860,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4OTEwNjg2MA==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2019-05-03T14:05:11Z","updated_at":"2019-05-03T14:05:11Z","author_association":"MEMBER","body":"We discussed this in FixItFriday. Whilst we can understand the use case we are struggling to find a way to expose this that would work across all soft limits. If this is useful on this soft limit it is sensible to assume that a similar mechanism would be useful across all soft limits to find users who are nearing the limits and direct them to alternatives. However adding a warn setting for every soft limit would not scale well as it would vastly increase the number of settings and present a difficult user experience. We had something similar with settings for which types of scripts to allow in which APIs (file/stored/inline) previous and it lead to a lot of confusion. \r\n\r\nWe also wonder whether another more flexible option in these use cases would be to log every query (maybe using the slow log or audit log) and inspect the requests to find instance where users need to be directed to better approaches (e.g. requests with a size > 5,000, queries that use leading wildcards, etc.). This would provide more flexibility to the user since they could inspect whatever criteria int he requests they wish.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/493102863","html_url":"https://github.com/elastic/elasticsearch/issues/41078#issuecomment-493102863","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41078","id":493102863,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzEwMjg2Mw==","user":{"login":"clandry94","id":5351125,"node_id":"MDQ6VXNlcjUzNTExMjU=","avatar_url":"https://avatars0.githubusercontent.com/u/5351125?v=4","gravatar_id":"","url":"https://api.github.com/users/clandry94","html_url":"https://github.com/clandry94","followers_url":"https://api.github.com/users/clandry94/followers","following_url":"https://api.github.com/users/clandry94/following{/other_user}","gists_url":"https://api.github.com/users/clandry94/gists{/gist_id}","starred_url":"https://api.github.com/users/clandry94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clandry94/subscriptions","organizations_url":"https://api.github.com/users/clandry94/orgs","repos_url":"https://api.github.com/users/clandry94/repos","events_url":"https://api.github.com/users/clandry94/events{/privacy}","received_events_url":"https://api.github.com/users/clandry94/received_events","type":"User","site_admin":false},"created_at":"2019-05-16T14:56:53Z","updated_at":"2019-05-16T14:56:53Z","author_association":"CONTRIBUTOR","body":"Thanks for looping this issue through the team @colings86. I think that using the slow log would be a decent way to accomplish this and understand why it would be tough to add this feature directly to elasticsearch. I'm going to go ahead and close this issue now. ","performed_via_github_app":null}]