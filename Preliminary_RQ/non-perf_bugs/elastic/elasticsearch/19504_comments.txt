[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/233947810","html_url":"https://github.com/elastic/elasticsearch/issues/19504#issuecomment-233947810","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19504","id":233947810,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMzk0NzgxMA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-07-20T13:25:19Z","updated_at":"2016-07-20T13:25:19Z","author_association":"CONTRIBUTOR","body":"I think it'd be nice to wait until #19509 is merged so we can assert things about headers in the REST tests.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/234198627","html_url":"https://github.com/elastic/elasticsearch/issues/19504#issuecomment-234198627","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19504","id":234198627,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNDE5ODYyNw==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2016-07-21T09:08:52Z","updated_at":"2016-07-21T09:08:52Z","author_association":"MEMBER","body":"Oops, I think this was me sorry. The problem is here: https://github.com/elastic/elasticsearch/blob/dec620c0b08213033dbfcacfc4b37663432a1a5c/core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java#L94\n\nThe issue is that currently `ParseField` expects there to be only one acceptable name for the field and all other names are taken as deprecated. So the question here is do we want to deprecate either `aggs` or `aggregations` or do we want to add the ability to specify alternative names in `ParseField`.\n\nIf it is the latter I would suggest keeping the constructor in ParseField as is so only the first name is taken as an acceptable name and the rest are deprecated, and then add a `addAlternateName(String)` method for the few cases where we have alternative acceptable name.\n\nAs for #19509 it would be great if post that PR we could add a check to all calls made in rest tests to ensure they do not contain a warning header and if so fail the test (since most tests should not be using deprecated options). For any tests that do need to test deprecated options we could add a `accept_deprecated:true` to the YAML tests to bypass this warning header check.\n\nwdyt?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/234222006","html_url":"https://github.com/elastic/elasticsearch/issues/19504#issuecomment-234222006","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19504","id":234222006,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNDIyMjAwNg==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2016-07-21T10:59:18Z","updated_at":"2016-07-21T10:59:18Z","author_association":"MEMBER","body":"Actually we should also set the REST tests to have strict parsing anyway so using deprecated functionality causes an exception and the request to be rejected (unless the `accept_deprecated:true` option is set on the YAML test)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/234235912","html_url":"https://github.com/elastic/elasticsearch/issues/19504#issuecomment-234235912","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19504","id":234235912,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNDIzNTkxMg==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2016-07-21T12:14:00Z","updated_at":"2016-07-21T12:14:00Z","author_association":"MEMBER","body":"I opened https://github.com/elastic/elasticsearch/pull/19533 to fix this using the `ParseField` changes I mentioned above. I decided to keep `ParseField` immutable so the alternative names are passed into a constructor rather than in an add method.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/235941923","html_url":"https://github.com/elastic/elasticsearch/issues/19504#issuecomment-235941923","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19504","id":235941923,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNTk0MTkyMw==","user":{"login":"pickypg","id":1501235,"node_id":"MDQ6VXNlcjE1MDEyMzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1501235?v=4","gravatar_id":"","url":"https://api.github.com/users/pickypg","html_url":"https://github.com/pickypg","followers_url":"https://api.github.com/users/pickypg/followers","following_url":"https://api.github.com/users/pickypg/following{/other_user}","gists_url":"https://api.github.com/users/pickypg/gists{/gist_id}","starred_url":"https://api.github.com/users/pickypg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pickypg/subscriptions","organizations_url":"https://api.github.com/users/pickypg/orgs","repos_url":"https://api.github.com/users/pickypg/repos","events_url":"https://api.github.com/users/pickypg/events{/privacy}","received_events_url":"https://api.github.com/users/pickypg/received_events","type":"User","site_admin":false},"created_at":"2016-07-28T16:04:12Z","updated_at":"2016-07-28T16:04:12Z","author_association":"MEMBER","body":"> the request to be rejected (unless the accept_deprecated:true option is set on the YAML test)\n\nI think it might be better to call it `expect_deprecated:true` and then have the same semantics, but also fail if it _doesn't_ get a deprecation warning returned.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/235947674","html_url":"https://github.com/elastic/elasticsearch/issues/19504#issuecomment-235947674","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19504","id":235947674,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNTk0NzY3NA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-07-28T16:23:53Z","updated_at":"2016-07-28T16:23:53Z","author_association":"CONTRIBUTOR","body":"> I think it might be better to call it expect_deprecated:true and then have the same semantics, but also fail if it doesn't get a deprecation warning returned.\n\nYes, that sounds good. I'd honestly really like to make that change.\n","performed_via_github_app":null}]