{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/33028","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33028/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33028/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33028/events","html_url":"https://github.com/elastic/elasticsearch/issues/33028","id":352574304,"node_id":"MDU6SXNzdWUzNTI1NzQzMDQ=","number":33028,"title":"Do not compute hit counts by default","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":33660,"node_id":"MDU6TGFiZWwzMzY2MA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebreaking","name":">breaking","color":"d93f0b","default":false,"description":null},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":108108556,"node_id":"MDU6TGFiZWwxMDgxMDg1NTY=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/release%20highlight","name":"release highlight","color":"fbca04","default":false,"description":null},{"id":1223177445,"node_id":"MDU6TGFiZWwxMjIzMTc3NDQ1","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v7.0.0-beta1","name":"v7.0.0-beta1","color":"dddddd","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":19,"created_at":"2018-08-21T14:41:45Z","updated_at":"2020-07-02T02:42:43Z","closed_at":"2019-01-25T12:45:40Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Context**\r\nLucene 8 introduces optimizations that allow to compute top hits more efficiently by skipping documents that do not produce competitive scores. We would like to enable this behavior by default so that users can opt in if they need accurate total hit counts, which are costly, rather than the other way around.\r\n\r\nNot returning a hit count at all is problematic for traditional search UIs with pagination: say that you want to display up to 5 pages with 10 hits per page, you need to know whether the hit count is between 0 and 10, between 11 and 20, between 21 and 30, between 31 and 40, or greater than 40 in order to know how many pages need to be displayed. In order to address this issue, Lucene takes a configurable threshold: if the hit count is less than this threshold, then you will get an accurate hit count, otherwise you will get a lower bound of the hit count.\r\n\r\nWe don't want to discuss backward compatibility for now, let's focus what we want to have eventually, and only then discuss how we get there to make the change easy to digest for users. That's fine if we need multiple steps and the whole change is only available in 8 rather than 7.\r\n\r\n**Response format**\r\nWe need a way to tell users whether the hit count is accurate or a lower bound. Multiple ideas have been mentioned:\r\n\r\n 0. not modify the response format: if the user asked to count up to X and the hit count is greater than X, just return X as the hit count\r\n 1. use a string that ends with a `+` as a way to say that the hit count is a lower bound, eg. `{ \"hits\": { \"total\": \"1234+\" } }` when the hit count is a lower bound and `{ \"hits\": { \"total\": 1234 } }` like today otherwise\r\n 2. use another field that tells whether the hit count is accurate or a lower bound, eg. `{ \"hits\": { \"total\": 1234, \"total_hits_relation\": \"gte\" } }`\r\n 3. make `hits.total` an object with a value and a relation, eg. `{ \"hits\": { \"total\": { \"value\": 1234, \"relation\": \"gte\" } } }`\r\n 4. make `hits.total` an object that has two possible keys but only one is ever set, eg. `{ \"hits\": { \"total\": { \"gte\": 1234 } } }` or `{ \"hits\": { \"total\": { \"eq\": 1234 } } }`\r\n 5. don't reuse `hits.total` at all and return a different field if ie. `hits.min` or some better name.\r\n\r\nWhen we discussed these options, we felt like 1 would make parsing more complicated, and with 2 it would be too easy to miss the fact that you need to look up another field in order to know how to interpret the hit count.\r\n\r\n**Implementation options**\r\n\r\n**Option 1: Make `track_total_hits` take a number**\r\n\r\nWe already have a `track_total_hits` switch which we added for index sorting, but currently take a boolean. It would be easy to make it take a number instead that would be the minimum number of hits to count accurately.\r\n\r\nWe could ease transition to the new response format by using the current format when `track_total_hits` is unset or set to a boolean, and the new format when `track_total_hits` is set to a number, and then deprecate support for booleans.\r\n\r\nUsers who want accurate hit counts could set a very high value for this parameter, we could potentially allow using a special value like `-1` as a way to mean \"be accurate\".\r\n\r\n**Option 2: Hardcoded number of hits to count**\r\n\r\nAlways count accurately up to `index.max_result_window` hits. If users need accurate hits, they will need to use an aggregation (we need to add such an aggregation that counts docs).\r\n\r\nPing @elastic/es-clients to get opinions about the above thoughts, especially the response format.","closed_by":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}