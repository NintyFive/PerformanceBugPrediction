{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3617","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3617/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3617/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3617/events","html_url":"https://github.com/elastic/elasticsearch/issues/3617","id":18972643,"node_id":"MDU6SXNzdWUxODk3MjY0Mw==","number":3617,"title":"NodeNotConnectedException gets logged when calling cluster APIs from a client node","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"labels":[{"id":836504707,"node_id":"MDU6TGFiZWw4MzY1MDQ3MDc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Distributed","name":":Distributed/Distributed","color":"0e8a16","default":false,"description":"A catch all label for anything in the Distributed Area. If you aren't sure, use this one."},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"assignees":[{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2013-09-04T13:54:54Z","updated_at":"2018-02-13T19:55:33Z","closed_at":"2016-03-01T16:59:54Z","author_association":"MEMBER","active_lock_reason":null,"body":"If we have a cluster with two or more client nodes, and we call the nodes stats (or nodes info) api connecting to one of the client nodes, we don't get back the information about the other client nodes in the cluster, and the following exception gets logged, which is rather annoying especially when calling those apis every n seconds for monitoring purposes. \n\n```\n[2013-09-04 14:41:19,983][DEBUG][action.admin.cluster.node.info] [Vakume] failed to execute on node [D4d2wy10Qr-HKgWcSRVoUQ]\norg.elasticsearch.transport.SendRequestTransportException: [Gremlin][inet[/10.20.100.106:9301]][cluster/nodes/info/n]\n    at org.elasticsearch.transport.TransportService.sendRequest(TransportService.java:203)\n    at org.elasticsearch.action.support.nodes.TransportNodesOperationAction$AsyncAction.start(TransportNodesOperationAction.java:172)\n    at org.elasticsearch.action.support.nodes.TransportNodesOperationAction$AsyncAction.access$300(TransportNodesOperationAction.java:102)\n    at org.elasticsearch.action.support.nodes.TransportNodesOperationAction.doExecute(TransportNodesOperationAction.java:73)\n    at org.elasticsearch.action.support.nodes.TransportNodesOperationAction.doExecute(TransportNodesOperationAction.java:43)\n    at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:61) \n\n................................\n\nCaused by: org.elasticsearch.transport.NodeNotConnectedException: [Gremlin][inet[/10.20.100.106:9301]] Node not connected\n    at org.elasticsearch.transport.netty.NettyTransport.nodeChannel(NettyTransport.java:806)\n    at org.elasticsearch.transport.netty.NettyTransport.sendRequest(NettyTransport.java:520)\n    at org.elasticsearch.transport.TransportService.sendRequest(TransportService.java:188)\n```\n\nThe reason for this is that we prevent client-to-client node communication. A workaround would be to filter out the client nodes (but the local one) like this:\n\n`curl -XGET 'http://localhost:9202/_nodes/master:true,data:true,_local`\n\nThis could be fixed, as mentioned in #3542, by redirecting the request (`TransportNodesOperationAction`) to either a data or master node, in case the node it's sending the request from is a client node, so that we make sure that we can gather information about all the nodes in the cluster (including client ones).\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}