{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/64012","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/64012/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/64012/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/64012/events","html_url":"https://github.com/elastic/elasticsearch/issues/64012","id":726691980,"node_id":"MDU6SXNzdWU3MjY2OTE5ODA=","number":64012,"title":"[CI] Failures in update_by_query/35_search_failure/Response format for search failures","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"labels":[{"id":145572580,"node_id":"MDU6TGFiZWwxNDU1NzI1ODA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/CRUD","name":":Distributed/CRUD","color":"0e8a16","default":false,"description":"A catch all label for issues around indexing, updating and getting a doc by id. Not search."},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"},{"id":1967496670,"node_id":"MDU6TGFiZWwxOTY3NDk2Njcw","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Distributed","name":"Team:Distributed","color":"fef2c0","default":false,"description":"Meta label for distributed team"}],"state":"closed","locked":false,"assignee":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"assignees":[{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2020-10-21T17:02:58Z","updated_at":"2020-10-27T23:43:02Z","closed_at":"2020-10-27T23:43:02Z","author_association":"MEMBER","active_lock_reason":null,"body":"**Build scan**:\r\nhttps://gradle-enterprise.elastic.co/s/6oq2ek5easfsm\r\n\r\n**Repro line**:\r\n\r\n./gradlew ':modules:reindex:yamlRestTest' --tests \"org.elasticsearch.index.reindex.ReindexClientYamlTestSuiteIT.test {yaml=update_by_query/35_search_failure/Response format for search failures}\" \\\r\n  -Dtests.seed=5ADD9729CFD6E795 \\\r\n  -Dtests.security.manager=true \\\r\n  -Dtests.locale=fi-FI \\\r\n  -Dtests.timezone=Europe/Helsinki \\\r\n  -Druntime.java=11\r\n\r\n**Reproduces locally?**:\r\nNo\r\n\r\n**Applicable branches**:\r\nmaster\r\n\r\n**Failure history**:\r\nLooks like this only fails on master so far (aprox. six times since Oct 14th so far)\r\n\r\n**Failure excerpt**:\r\n```\r\norg.elasticsearch.index.reindex.ReindexClientYamlTestSuiteIT > test {yaml=update_by_query/35_search_failure/Response format for search failures} FAILED\r\n    java.lang.AssertionError: Failure at [update_by_query/35_search_failure:18]: expected [400] status code but api [update_by_query] returned [500 Internal Server Error] [---\r\n    error:\r\n      root_cause:\r\n      - type: \"script_exception\"\r\n        reason: \"runtime error\"\r\n        script_stack:\r\n        - \"throw new IllegalArgumentException(\\\"Cats!\\\")\"\r\n        - \"      ^---- HERE\"\r\n        script: \"throw new IllegalArgumentException(\\\"Cats!\\\")\"\r\n        lang: \"painless\"\r\n        position:\r\n          offset: 6\r\n          start: 0\r\n          end: 43\r\n        stack_trace: \"org.elasticsearch.script.ScriptException: runtime error\\n\\tat org.elasticsearch.painless.PainlessScript.convertToScriptException(PainlessScript.java:96)\\n\\\r\n          \\tat org.elasticsearch.painless.PainlessScript$Script.execute(throw new IllegalArgumentException(\\\"\\\r\n          Cats!\\\"):1)\\n\\tat org.elasticsearch.index.query.ScriptQueryBuilder$ScriptQuery$1$1.matches(ScriptQueryBuilder.java:192)\\n\\\r\n          \\tat org.apache.lucene.search.Weight$DefaultBulkScorer.scoreRange(Weight.java:259)\\n\\\r\n          \\tat org.apache.lucene.search.Weight$DefaultBulkScorer.score(Weight.java:239)\\n\\\r\n          \\tat org.elasticsearch.search.internal.CancellableBulkScorer.score(CancellableBulkScorer.java:56)\\n\\\r\n          \\tat org.apache.lucene.search.BulkScorer.score(BulkScorer.java:39)\\n\\tat org.elasticsearch.search.internal.ContextIndexSearcher.searchLeaf(ContextIndexSearcher.java:227)\\n\\\r\n          \\tat org.elasticsearch.search.internal.ContextIndexSearcher.search(ContextIndexSearcher.java:200)\\n\\\r\n          \\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:445)\\n\\\r\n          \\tat org.elasticsearch.search.query.QueryPhase.searchWithCollector(QueryPhase.java:345)\\n\\\r\n          \\tat org.elasticsearch.search.query.QueryPhase.executeInternal(QueryPhase.java:296)\\n\\\r\n          \\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:148)\\n\\\r\n          \\tat org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:374)\\n\\\r\n          \\tat org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:433)\\n\\\r\n          \\tat org.elasticsearch.search.SearchService$2.lambda$onResponse$0(SearchService.java:403)\\n\\\r\n          \\tat org.elasticsearch.action.ActionRunnable.lambda$supply$0(ActionRunnable.java:58)\\n\\\r\n          \\tat org.elasticsearch.action.ActionRunnable$2.doRun(ActionRunnable.java:73)\\n\\\r\n          \\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\\n\\\r\n          \\tat org.elasticsearch.common.util.concurrent.TimedRunnable.doRun(TimedRunnable.java:44)\\n\\\r\n          \\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:733)\\n\\\r\n          \\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\\n\\\r\n          \\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\\n\\\r\n          \\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\\n\\\r\n          \\tat java.base/java.lang.Thread.run(Thread.java:834)\\nCaused by: java.lang.IllegalArgumentException:\\\r\n          \\ Cats!\\n\\tat org.elasticsearch.painless.PainlessScript$Script.execute(throw\\\r\n          \\ new IllegalArgumentException(\\\"Cats!\\\"):7)\\n\\t... 23 more\\n\"\r\n      - type: \"task_cancelled_exception\"\r\n        reason: \"The parent task was cancelled, shouldn't start any child tasks\"\r\n        stack_trace: \"org.elasticsearch.tasks.TaskCancelledException: The parent task\\\r\n          \\ was cancelled, shouldn't start any child tasks\\n\\tat org.elasticsearch.tasks.TaskManager$CancellableTaskHolder.registerChildNode(TaskManager.java:560)\\n\\\r\n          \\tat org.elasticsearch.tasks.TaskManager.registerChildNode(TaskManager.java:255)\\n\\\r\n          \\tat org.elasticsearch.transport.TransportService.sendRequest(TransportService.java:570)\\n\\\r\n          \\tat org.elasticsearch.transport.TransportService.sendChildRequest(TransportService.java:653)\\n\\\r\n          \\tat org.elasticsearch.transport.TransportService.sendChildRequest(TransportService.java:645)\\n\\\r\n          \\tat org.elasticsearch.action.search.SearchTransportService.sendExecuteQuery(SearchTransportService.java:146)\\n\\\r\n          \\tat org.elasticsearch.action.search.SearchQueryThenFetchAsyncAction.executePhaseOnShard(SearchQueryThenFetchAsyncAction.java:83)\\n\\\r\n          \\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.lambda$performPhaseOnShard$3(AbstractSearchAsyncAction.java:245)\\n\\\r\n          \\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.performPhaseOnShard(AbstractSearchAsyncAction.java:280)\\n\\\r\n          \\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.run(AbstractSearchAsyncAction.java:216)\\n\\\r\n          \\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.executePhase(AbstractSearchAsyncAction.java:366)\\n\\\r\n          \\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.start(AbstractSearchAsyncAction.java:183)\\n\\\r\n          \\tat org.elasticsearch.action.search.TransportSearchAction$5.run(TransportSearchAction.java:790)\\n\\\r\n[...]\r\n```\r\n\r\nThe tests expects an exception but it doesn't seem to be the right one in this case.\r\n","closed_by":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"performed_via_github_app":null}