[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/340545185","html_url":"https://github.com/elastic/elasticsearch/issues/27176#issuecomment-340545185","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27176","id":340545185,"node_id":"MDEyOklzc3VlQ29tbWVudDM0MDU0NTE4NQ==","user":{"login":"jbaiera","id":875779,"node_id":"MDQ6VXNlcjg3NTc3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/875779?v=4","gravatar_id":"","url":"https://api.github.com/users/jbaiera","html_url":"https://github.com/jbaiera","followers_url":"https://api.github.com/users/jbaiera/followers","following_url":"https://api.github.com/users/jbaiera/following{/other_user}","gists_url":"https://api.github.com/users/jbaiera/gists{/gist_id}","starred_url":"https://api.github.com/users/jbaiera/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbaiera/subscriptions","organizations_url":"https://api.github.com/users/jbaiera/orgs","repos_url":"https://api.github.com/users/jbaiera/repos","events_url":"https://api.github.com/users/jbaiera/events{/privacy}","received_events_url":"https://api.github.com/users/jbaiera/received_events","type":"User","site_admin":false},"created_at":"2017-10-30T18:44:08Z","updated_at":"2017-10-30T18:44:08Z","author_association":"CONTRIBUTOR","body":"Perhaps it makes sense to file this as an enhancement to aliases? I believe I've seen discussions in the past around how Elasticsearch might support writing to aliases with multiple indices, and this looks pretty similar in structure.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/340568003","html_url":"https://github.com/elastic/elasticsearch/issues/27176#issuecomment-340568003","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27176","id":340568003,"node_id":"MDEyOklzc3VlQ29tbWVudDM0MDU2ODAwMw==","user":{"login":"scottsom","id":23276852,"node_id":"MDQ6VXNlcjIzMjc2ODUy","avatar_url":"https://avatars1.githubusercontent.com/u/23276852?v=4","gravatar_id":"","url":"https://api.github.com/users/scottsom","html_url":"https://github.com/scottsom","followers_url":"https://api.github.com/users/scottsom/followers","following_url":"https://api.github.com/users/scottsom/following{/other_user}","gists_url":"https://api.github.com/users/scottsom/gists{/gist_id}","starred_url":"https://api.github.com/users/scottsom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scottsom/subscriptions","organizations_url":"https://api.github.com/users/scottsom/orgs","repos_url":"https://api.github.com/users/scottsom/repos","events_url":"https://api.github.com/users/scottsom/events{/privacy}","received_events_url":"https://api.github.com/users/scottsom/received_events","type":"User","site_admin":false},"created_at":"2017-10-30T20:06:36Z","updated_at":"2017-10-30T20:06:36Z","author_association":"CONTRIBUTOR","body":"I agree that it would make sense as an extension to aliases. However, from talking to @s1monw & @jasontedor at Elasticon, it didn't seem like they wanted to see aliases extended with new functionality, so I left them out here.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/341617397","html_url":"https://github.com/elastic/elasticsearch/issues/27176#issuecomment-341617397","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27176","id":341617397,"node_id":"MDEyOklzc3VlQ29tbWVudDM0MTYxNzM5Nw==","user":{"login":"rpedela","id":1952582,"node_id":"MDQ6VXNlcjE5NTI1ODI=","avatar_url":"https://avatars1.githubusercontent.com/u/1952582?v=4","gravatar_id":"","url":"https://api.github.com/users/rpedela","html_url":"https://github.com/rpedela","followers_url":"https://api.github.com/users/rpedela/followers","following_url":"https://api.github.com/users/rpedela/following{/other_user}","gists_url":"https://api.github.com/users/rpedela/gists{/gist_id}","starred_url":"https://api.github.com/users/rpedela/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rpedela/subscriptions","organizations_url":"https://api.github.com/users/rpedela/orgs","repos_url":"https://api.github.com/users/rpedela/repos","events_url":"https://api.github.com/users/rpedela/events{/privacy}","received_events_url":"https://api.github.com/users/rpedela/received_events","type":"User","site_admin":false},"created_at":"2017-11-03T03:49:46Z","updated_at":"2017-11-03T03:49:46Z","author_association":"NONE","body":"I like this proposal overall. I have a 1.5 TB index and a tight budget which is very painful to reindex. However I don't see how you would be able to reindex one of the smaller indexes. Would you use the reindex API for each smaller index? What about manual reindexing because the source needs to change? How do you only manual reindex the documents in a smaller index given the distribution is handled by ES?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/341707179","html_url":"https://github.com/elastic/elasticsearch/issues/27176#issuecomment-341707179","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27176","id":341707179,"node_id":"MDEyOklzc3VlQ29tbWVudDM0MTcwNzE3OQ==","user":{"login":"scottsom","id":23276852,"node_id":"MDQ6VXNlcjIzMjc2ODUy","avatar_url":"https://avatars1.githubusercontent.com/u/23276852?v=4","gravatar_id":"","url":"https://api.github.com/users/scottsom","html_url":"https://github.com/scottsom","followers_url":"https://api.github.com/users/scottsom/followers","following_url":"https://api.github.com/users/scottsom/following{/other_user}","gists_url":"https://api.github.com/users/scottsom/gists{/gist_id}","starred_url":"https://api.github.com/users/scottsom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scottsom/subscriptions","organizations_url":"https://api.github.com/users/scottsom/orgs","repos_url":"https://api.github.com/users/scottsom/repos","events_url":"https://api.github.com/users/scottsom/events{/privacy}","received_events_url":"https://api.github.com/users/scottsom/received_events","type":"User","site_admin":false},"created_at":"2017-11-03T13:45:16Z","updated_at":"2017-11-03T13:45:16Z","author_association":"CONTRIBUTOR","body":"Yes, both the reindex API and manual reindexing will work on these smaller indexes.\r\n\r\nThe composite index is essentially a front-end router that will consistently route an `_id` and/or `_routing` value to the same location (in this case, an index).\r\n\r\nTo re-use the example from above, when you look at a concrete index like `foo_0_v1` on its own, there is nothing special about it, it's just a regular index that is no different than what you are working with today. The fact that it is fronted by the composite index `foo` does not prevent you from using any of the existing APIs like restoring a snapshot, reindexing, shrinking, etc. when working with `foo_0_v1` directly.\r\n\r\nIf you wanted to reindex from `foo_0_v1` to `foo_0_v2` then you have two options: temporarily stop updates or dual write to your new and old index. These might work as follows:\r\n\r\n### Stop Updates\r\nThis is the easier option but may not always be possible for when you have tight SLAs on index freshness or can't queue updates.\r\n\r\n1. Create index `foo_0_v2`\r\n2. Stop updates to your index\r\n3. Reindex everything from `foo_0_v1` to `foo_0_v2` (using the API or manually)\r\n4. Replace `foo_0_v1` with `foo_0_v2` in your composite index, `foo`\r\n5. Resume updates to your index\r\n6. Delete `foo_0_v1`\r\n7. Repeat 1 - 6 for remaining parts\r\n\r\n### Dual Write\r\nThis is a bit more complicated but would let you handle new updates while rebuilding your index. It's similar to the steps above but instead of disabling writes, you need to \"mirror\" changes from `foo_0_v1` to `foo_0_v2`.\r\n\r\n1. Create index `foo_0_v2`\r\n2. Establish a mirror from `foo_0_v1` -> `foo_0_v2`\r\n3. Reindex everything from `foo_0_v1` to `foo_0_v2` while preserving the original version (using the API or manually)\r\n4. Replace `foo_0_v1` with `foo_0_v2` in your composite index, `foo`\r\n5. Remove your mirror\r\n6. Delete `foo_0_v1`\r\n7. Repeat 1 - 6 for remaining parts\r\n\r\nTo elaborate on what I mean by mirroring, some pseudocode for ingestion logic might be:\r\n\r\n```\r\nmirrors = { foo_0_v1: foo_0_v2 }\r\ncomposite_index = foo\r\n\r\n...\r\n\r\nresult = write(composite_index, id, source)\r\n\r\nif result.index in mirrors:\r\n  new_index = mirrors[result.index]\r\n  # Does a write with version_type = external\r\n  write(new_index, id, source, result.version)\r\n```\r\n\r\nThis would work as long as a the write result against a composite index returns the resulting concrete index (just like an alias does).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/343516343","html_url":"https://github.com/elastic/elasticsearch/issues/27176#issuecomment-343516343","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27176","id":343516343,"node_id":"MDEyOklzc3VlQ29tbWVudDM0MzUxNjM0Mw==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2017-11-10T16:15:11Z","updated_at":"2017-11-10T16:15:11Z","author_association":"MEMBER","body":"We discussed this in Fix-it-Friday and agreed that we should not implement this feature at this moment. \r\n\r\nWe know many cases where elasticsearch users are using several indices as a way to deal with extremely large amount of homogenous data, that would be impractical to store in a single index. While doing this they use a variety of rules for routing documents into different indices and the approach described here is just one example of many different implementation that we saw in the recent years. These users also perform different types of operations to be performed on such composed indices. Because of the diversity of use cases that we have observed, we feel that to make this feature generally applicable we would have to add a lot of complexity to the API and index resolution mechanism. At the same time an implementation covering a concrete use cases like this can be easily made on the client side.  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/343598666","html_url":"https://github.com/elastic/elasticsearch/issues/27176#issuecomment-343598666","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27176","id":343598666,"node_id":"MDEyOklzc3VlQ29tbWVudDM0MzU5ODY2Ng==","user":{"login":"rpedela","id":1952582,"node_id":"MDQ6VXNlcjE5NTI1ODI=","avatar_url":"https://avatars1.githubusercontent.com/u/1952582?v=4","gravatar_id":"","url":"https://api.github.com/users/rpedela","html_url":"https://github.com/rpedela","followers_url":"https://api.github.com/users/rpedela/followers","following_url":"https://api.github.com/users/rpedela/following{/other_user}","gists_url":"https://api.github.com/users/rpedela/gists{/gist_id}","starred_url":"https://api.github.com/users/rpedela/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rpedela/subscriptions","organizations_url":"https://api.github.com/users/rpedela/orgs","repos_url":"https://api.github.com/users/rpedela/repos","events_url":"https://api.github.com/users/rpedela/events{/privacy}","received_events_url":"https://api.github.com/users/rpedela/received_events","type":"User","site_admin":false},"created_at":"2017-11-10T22:00:07Z","updated_at":"2017-11-10T22:00:07Z","author_association":"NONE","body":"> Because of the diversity of use cases that we have observed, we feel that to make this feature generally applicable we would have to add a lot of complexity to the API and index resolution mechanism. At the same time an implementation covering a concrete use cases like this can be easily made on the client side.\r\n\r\nThis is not \"easily made\" on the client. Reindexing was one of those things that every user had to implement themselves and it wasn't easy. It wasn't hard necessarily, but it certainly wasn't easy either. Then the Reindex API was added and made it so much easier for users to reindex small and medium sized indices. Thank you! But there is a still a problem: users with large indexes have to do it themselves or invent ways to organize their indices to utilize ```_reindex``` or ```update_by_query```.\r\n\r\nMaybe this specific proposal is a bad one, but the problem still exists. Why are you closing the issue? Why isn't there an open, community discussion about possible solutions? Why is it that many obvious features are shot down in some closed-door meeting? Is \"code complexity\" really a good reason to say no? What about user experience complexity? Does code complexity always trump user experience complexity?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/343661473","html_url":"https://github.com/elastic/elasticsearch/issues/27176#issuecomment-343661473","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27176","id":343661473,"node_id":"MDEyOklzc3VlQ29tbWVudDM0MzY2MTQ3Mw==","user":{"login":"scottsom","id":23276852,"node_id":"MDQ6VXNlcjIzMjc2ODUy","avatar_url":"https://avatars1.githubusercontent.com/u/23276852?v=4","gravatar_id":"","url":"https://api.github.com/users/scottsom","html_url":"https://github.com/scottsom","followers_url":"https://api.github.com/users/scottsom/followers","following_url":"https://api.github.com/users/scottsom/following{/other_user}","gists_url":"https://api.github.com/users/scottsom/gists{/gist_id}","starred_url":"https://api.github.com/users/scottsom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scottsom/subscriptions","organizations_url":"https://api.github.com/users/scottsom/orgs","repos_url":"https://api.github.com/users/scottsom/repos","events_url":"https://api.github.com/users/scottsom/events{/privacy}","received_events_url":"https://api.github.com/users/scottsom/received_events","type":"User","site_admin":false},"created_at":"2017-11-11T12:30:26Z","updated_at":"2017-11-11T12:30:26Z","author_association":"CONTRIBUTOR","body":"Just to add my 2 cents if this decision is open to appeal.\r\n\r\nMy primary intent when creating this issue was to raise awareness of a pain point and hopefully spur discussion on ways it can be solved in Elasticsearch which is why I made the title open ended rather than something specific to my proposal (e.g. \"Add support for an index of indexes\"). Maybe a solution to this problem needs to iterate on what I have proposed or approach it in a radically different way. Either way, I'm just trying to see this problem addressed in what I believe is the right place. Having clients write their own libraries to do their own hashing and routing computations in their application code feels like poor separation of concerns to me.\r\n\r\nMaybe we can't cater to all use cases but isn't that the nature of Elasticsearch - finding the right balance between simplicity and flexibility with a bias towards the former?\r\n\r\nSuppose it is the case that an acceptable solution cannot be found due to the diverse and/or complex strategies people have developed. Maybe it is worth discussing whether appropriate hooks can be added to Elasticsearch so plugin authors can add their own index resolution strategies.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/344694072","html_url":"https://github.com/elastic/elasticsearch/issues/27176#issuecomment-344694072","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27176","id":344694072,"node_id":"MDEyOklzc3VlQ29tbWVudDM0NDY5NDA3Mg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-11-15T19:02:08Z","updated_at":"2017-11-15T19:02:08Z","author_association":"CONTRIBUTOR","body":"Hi @scottsom \r\n\r\nWe did spend a fair bit of time discussing this proposal, it certainly wasn't dismissed out of hand.\r\n\r\nWe were concerned with the fragility of possible solutions along with the need to introduce a new high-level concept to encapsulate this index-of-indexes.  Also, if we were to do something like this, we fully expect a long list of feature requests asking for different routing strategies etc, as there are many ways to decide how to segment your data.  One generic solution is unlikely to be enough.\r\n\r\nThis makes us reluctant to make a change like this at the moment, and rather leave it to be done client side.  Perhaps it is something we'll revisit later when there is a clearer generic use case.  But for the now, there are other improvements that we would prefer to focus on.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/344700262","html_url":"https://github.com/elastic/elasticsearch/issues/27176#issuecomment-344700262","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27176","id":344700262,"node_id":"MDEyOklzc3VlQ29tbWVudDM0NDcwMDI2Mg==","user":{"login":"scottsom","id":23276852,"node_id":"MDQ6VXNlcjIzMjc2ODUy","avatar_url":"https://avatars1.githubusercontent.com/u/23276852?v=4","gravatar_id":"","url":"https://api.github.com/users/scottsom","html_url":"https://github.com/scottsom","followers_url":"https://api.github.com/users/scottsom/followers","following_url":"https://api.github.com/users/scottsom/following{/other_user}","gists_url":"https://api.github.com/users/scottsom/gists{/gist_id}","starred_url":"https://api.github.com/users/scottsom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scottsom/subscriptions","organizations_url":"https://api.github.com/users/scottsom/orgs","repos_url":"https://api.github.com/users/scottsom/repos","events_url":"https://api.github.com/users/scottsom/events{/privacy}","received_events_url":"https://api.github.com/users/scottsom/received_events","type":"User","site_admin":false},"created_at":"2017-11-15T19:23:33Z","updated_at":"2017-11-15T19:23:33Z","author_association":"CONTRIBUTOR","body":"Thanks, it would be easy to shoot yourself in the foot here so I definitely see the concern.\r\n\r\nAny thoughts on adding support for custom index resolution strategies via plugins?","performed_via_github_app":null}]