{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/51025","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51025/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51025/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51025/events","html_url":"https://github.com/elastic/elasticsearch/issues/51025","id":550075306,"node_id":"MDU6SXNzdWU1NTAwNzUzMDY=","number":51025,"title":"New indices remain yellow until rolled over.","user":{"login":"itiyamas","id":45985097,"node_id":"MDQ6VXNlcjQ1OTg1MDk3","avatar_url":"https://avatars3.githubusercontent.com/u/45985097?v=4","gravatar_id":"","url":"https://api.github.com/users/itiyamas","html_url":"https://github.com/itiyamas","followers_url":"https://api.github.com/users/itiyamas/followers","following_url":"https://api.github.com/users/itiyamas/following{/other_user}","gists_url":"https://api.github.com/users/itiyamas/gists{/gist_id}","starred_url":"https://api.github.com/users/itiyamas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/itiyamas/subscriptions","organizations_url":"https://api.github.com/users/itiyamas/orgs","repos_url":"https://api.github.com/users/itiyamas/repos","events_url":"https://api.github.com/users/itiyamas/events{/privacy}","received_events_url":"https://api.github.com/users/itiyamas/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-01-15T09:46:28Z","updated_at":"2020-01-16T14:17:35Z","closed_at":"2020-01-16T14:17:35Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version** (`bin/elasticsearch --version`): 6.8.0\r\n**Description of the problem including expected versus actual behavior**: \r\nWhen we reduce the number of nodes in our cluster to half, a lot of recoveries start in the cluster as a result of excluding the old ips. We are running a 120 node cluster with a total of 4M docs/second. There are 60 primaries and 60 replicas in the latest index.  During recovery, if rollover happens- new indices start as yellow and remain yellow for a long time until rolled-over. The new rolled over index comes up as yellow again till recoveries complete. I also noticed that the shards remain unassigned for 5 minutes. Allocation explain API shows that recoveries limit on the node is breached. I was wondering if we can have a different throttling limit for newly created indices as the primaries are empty and replicas can be started quite fast with minimal network bandwidth as opposed to other shards that are being moved. The primaries come up quite fast as they rely on a different throttling limit- node_initial_primaries_recoveries.\r\nThis is impacting the availability of our new indices and any node going down will make the cluster red during scale-down.\r\nWe even evaluated waiting for index to become green before alias switch, but it takes close to a few minutes before the existing recoveries finish and replicas are assigned and will also depend on the network bandwidth and existing concurrent recoveries. It makes client side handling of the rollover difficult.\r\n","closed_by":{"login":"matriv","id":5058131,"node_id":"MDQ6VXNlcjUwNTgxMzE=","avatar_url":"https://avatars1.githubusercontent.com/u/5058131?v=4","gravatar_id":"","url":"https://api.github.com/users/matriv","html_url":"https://github.com/matriv","followers_url":"https://api.github.com/users/matriv/followers","following_url":"https://api.github.com/users/matriv/following{/other_user}","gists_url":"https://api.github.com/users/matriv/gists{/gist_id}","starred_url":"https://api.github.com/users/matriv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matriv/subscriptions","organizations_url":"https://api.github.com/users/matriv/orgs","repos_url":"https://api.github.com/users/matriv/repos","events_url":"https://api.github.com/users/matriv/events{/privacy}","received_events_url":"https://api.github.com/users/matriv/received_events","type":"User","site_admin":false},"performed_via_github_app":null}