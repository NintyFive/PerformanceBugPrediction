{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/24481","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24481/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24481/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24481/events","html_url":"https://github.com/elastic/elasticsearch/issues/24481","id":226221667,"node_id":"MDU6SXNzdWUyMjYyMjE2Njc=","number":24481,"title":"[TEST] CorruptedFileIT.testReplicaCorruption","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"labels":[{"id":836542781,"node_id":"MDU6TGFiZWw4MzY1NDI3ODE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Engine","name":":Distributed/Engine","color":"0e8a16","default":false,"description":"Anything around managing Lucene and the Translog in an open shard."},{"id":60445228,"node_id":"MDU6TGFiZWw2MDQ0NTIyOA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest","name":">test","color":"5319e7","default":false,"description":"Issues or PRs that are addressing/adding tests"}],"state":"closed","locked":false,"assignee":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"assignees":[{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2017-05-04T09:21:16Z","updated_at":"2018-02-13T20:26:55Z","closed_at":"2017-12-20T16:26:07Z","author_association":"MEMBER","active_lock_reason":null,"body":"This test sometimes fails in 5.x and 5.4 but the failure does not reproduce locally:\r\n\r\n````\r\ngradle :core:integTest -Dtests.seed=EB43781CD72967EA -Dtests.class=org.elasticsearch.index.store.CorruptedFileIT -Dtests.method=\"testReplicaCorruption\" -Dtests.security.manager=true -Dtests.locale=da -Dtests.timezone=America/Indianapolis\r\n````\r\n\r\nBuild output:\r\nhttps://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+5.x+multijob-darwin-compatibility/461/consoleFull\r\nhttps://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+5.x+multijob-darwin-compatibility/410/consoleFull\r\n\r\nIt seems that the recovery is blocked if the `segment_*` file is corrupted:\r\n\r\n````\r\n1> Caused by: java.io.EOFException: read past EOF: MMapIndexInput(path=\"/private/var/lib/jenkins/workspace/elastic+elasticsearch+5.x+multijob-darwin-compatibility/core/build/testrun/integTest/J2/temp/org.elasticsearch.index.store.CorruptedFileIT_D04C89BC1BDC6CB3-001/tempDir-002/data/nodes/4/indices/djB78NKbThaDzb0A0xah6A/1/index/segments_2\")\r\n  1> \tat org.apache.lucene.store.ByteBufferIndexInput.readByte(ByteBufferIndexInput.java:75) ~[lucene-core-6.5.0.jar:6.5.0 4b16c9a10c3c00cafaf1fc92ec3276a7bc7b8c95 - jimczi - 2017-03-21 20:40:22]\r\n  1> \tat org.apache.lucene.store.MockIndexInputWrapper.readByte(MockIndexInputWrapper.java:140) ~[lucene-test-framework-6.5.0.jar:6.5.0 4b16c9a10c3c00cafaf1fc92ec3276a7bc7b8c95 - jimczi - 2017-03-21 20:40:22]\r\n  1> \tat org.apache.lucene.store.BufferedChecksumIndexInput.readByte(BufferedChecksumIndexInput.java:41) ~[lucene-core-6.5.0.jar:6.5.0 4b16c9a10c3c00cafaf1fc92ec3276a7bc7b8c95 - jimczi - 2017-03-21 20:40:22]\r\n  1> \tat org.apache.lucene.store.DataInput.readInt(DataInput.java:101) ~[lucene-core-6.5.0.jar:6.5.0 4b16c9a10c3c00cafaf1fc92ec3276a7bc7b8c95 - jimczi - 2017-03-21 20:40:22]\r\n  1> \tat org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:300) ~[lucene-core-6.5.0.jar:6.5.0 4b16c9a10c3c00cafaf1fc92ec3276a7bc7b8c95 - jimczi - 2017-03-21 20:40:22]\r\n  1> \tat org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:288) ~[lucene-core-6.5.0.jar:6.5.0 4b16c9a10c3c00cafaf1fc92ec3276a7bc7b8c95 - jimczi - 2017-03-21 20:40:22]\r\n  1> \tat org.apache.lucene.index.SegmentInfos$1.doBody(SegmentInfos.java:448) ~[lucene-core-6.5.0.jar:6.5.0 4b16c9a10c3c00cafaf1fc92ec3276a7bc7b8c95 - jimczi - 2017-03-21 20:40:22]\r\n  1> \tat org.apache.lucene.index.SegmentInfos$1.doBody(SegmentInfos.java:445) ~[lucene-core-6.5.0.jar:6.5.0 4b16c9a10c3c00cafaf1fc92ec3276a7bc7b8c95 - jimczi - 2017-03-21 20:40:22]\r\n  1> \tat org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:692) ~[lucene-core-6.5.0.jar:6.5.0 4b16c9a10c3c00cafaf1fc92ec3276a7bc7b8c95 - jimczi - 2017-03-21 20:40:22]\r\n  1> \tat org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:644) ~[lucene-core-6.5.0.jar:6.5.0 4b16c9a10c3c00cafaf1fc92ec3276a7bc7b8c95 - jimczi - 2017-03-21 20:40:22]\r\n  1> \tat org.apache.lucene.index.SegmentInfos.readLatestCommit(SegmentInfos.java:450) ~[lucene-core-6.5.0.jar:6.5.0 4b16c9a10c3c00cafaf1fc92ec3276a7bc7b8c95 - jimczi - 2017-03-21 20:40:22]\r\n  1> \tat org.elasticsearch.common.lucene.Lucene.readSegmentInfos(Lucene.java:129) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.store.Store.readSegmentsInfo(Store.java:198) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.store.Store.access$200(Store.java:126) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.store.Store$MetadataSnapshot.loadMetadata(Store.java:785) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.store.Store$MetadataSnapshot.<init>(Store.java:718) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.store.Store.getMetadata(Store.java:240) ~[main/:?]\r\n  1> \tat org.elasticsearch.index.shard.IndexShard.snapshotStoreMetadata(IndexShard.java:874) ~[main/:?]\r\n  1> \tat org.elasticsearch.indices.recovery.PeerRecoveryTargetService.doRecovery(PeerRecoveryTargetService.java:183) ~[main/:?]\r\n  1> \tat org.elasticsearch.indices.recovery.PeerRecoveryTargetService.access$900(PeerRecoveryTargetService.java:73) ~[main/:?]\r\n  1> \tat org.elasticsearch.indices.recovery.PeerRecoveryTargetService$RecoveryRunner.doRun(PeerRecoveryTargetService.java:555) ~[main/:?]\r\n  1> \tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:638) ~[main/:?]\r\n  1> \tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) ~[main/:?]\r\n  1> \t... 3 more\r\n````\r\n\r\n... and after some time the test fails on a timeout:\r\n\r\n`````\r\nFAILURE 33.7s J2 | CorruptedFileIT.testReplicaCorruption <<< FAILURES!\r\n   > Throwable #1: java.lang.AssertionError: timed out waiting for green state\r\n   > \tat __randomizedtesting.SeedInfo.seed([EB43781CD72967EA:74122634059C0417]:0)\r\n   > \tat org.elasticsearch.test.ESIntegTestCase.ensureColor(ESIntegTestCase.java:932)\r\n   > \tat org.elasticsearch.test.ESIntegTestCase.ensureGreen(ESIntegTestCase.java:898)\r\n   > \tat org.elasticsearch.test.ESIntegTestCase.ensureGreen(ESIntegTestCase.java:887)\r\n   > \tat org.elasticsearch.index.store.CorruptedFileIT.testReplicaCorruption(CorruptedFileIT.java:590)\r\n   > \tat java.lang.Thread.run(Thread.java:745)\r\n````\r\n","closed_by":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"performed_via_github_app":null}