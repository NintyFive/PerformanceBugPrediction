[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/331075436","html_url":"https://github.com/elastic/elasticsearch/issues/26730#issuecomment-331075436","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26730","id":331075436,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMTA3NTQzNg==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2017-09-21T07:28:53Z","updated_at":"2017-09-21T07:28:53Z","author_association":"CONTRIBUTOR","body":"The reason it is ordered like this (I think) is that the \"latest\" index file represents the source of truth for all snapshot operations. This means that if another cluster connected to the same repository issues a concurrent `GET snapshot` operation while the deletion of said snapshot is happening, it will check the updated index file and won't try to restore files that are concurrently being deleted. Swapping the order can lead to very cryptic messages when restoring a snapshot in presence of a concurrent delete or, when for example, an earlier deletion attempt failed due to the (only) master node dying, leaving an inconsistent mess of files behind (-> metadata says snapshot X should be present, but it isn't).\r\n\r\nI'll let @imotov add his thoughts.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/331140537","html_url":"https://github.com/elastic/elasticsearch/issues/26730#issuecomment-331140537","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26730","id":331140537,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMTE0MDUzNw==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2017-09-21T12:24:09Z","updated_at":"2017-09-21T12:24:09Z","author_association":"MEMBER","body":"I think @ywelsch explained it really well. It is something that would be really tricky to fix without the fix causing other issues in other situations. I am not sure if we will be able to deal with this in the current framework without dramatically changing the structure and introducing enforceable limitations on concurrent repository access. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/331239250","html_url":"https://github.com/elastic/elasticsearch/issues/26730#issuecomment-331239250","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26730","id":331239250,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMTIzOTI1MA==","user":{"login":"ppf2","id":7216393,"node_id":"MDQ6VXNlcjcyMTYzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/7216393?v=4","gravatar_id":"","url":"https://api.github.com/users/ppf2","html_url":"https://github.com/ppf2","followers_url":"https://api.github.com/users/ppf2/followers","following_url":"https://api.github.com/users/ppf2/following{/other_user}","gists_url":"https://api.github.com/users/ppf2/gists{/gist_id}","starred_url":"https://api.github.com/users/ppf2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppf2/subscriptions","organizations_url":"https://api.github.com/users/ppf2/orgs","repos_url":"https://api.github.com/users/ppf2/repos","events_url":"https://api.github.com/users/ppf2/events{/privacy}","received_events_url":"https://api.github.com/users/ppf2/received_events","type":"User","site_admin":false},"created_at":"2017-09-21T18:17:06Z","updated_at":"2017-09-21T18:17:06Z","author_association":"MEMBER","body":"Thanks for the details, as part of the future effort to handle this use case, perhaps we can also add a safeguard in place to fail a snapshot (and return an intuitive exception message to the caller) if we detect that there is not sufficient space in the repository path.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/376452144","html_url":"https://github.com/elastic/elasticsearch/issues/26730#issuecomment-376452144","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26730","id":376452144,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NjQ1MjE0NA==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2018-03-27T09:08:31Z","updated_at":"2018-03-27T09:08:31Z","author_association":"CONTRIBUTOR","body":"> Thanks for the details, as part of the future effort to handle this use case, perhaps we can also add a safeguard in place to fail a snapshot (and return an intuitive exception message to the caller) if we detect that there is not sufficient space in the repository path.\r\n\r\nUnfortunately there is no generic way to find out how much space is left for all kind of repository types. Also it's unclear how much space is actually needed for the snapshot deletion to actually succeed.\r\n\r\nI discussed this issue with @tlrx: Addressing this issue would require major changes to the way we represent snapshots on disk. We don't have immediate plans to work on this and are therefore closing this.","performed_via_github_app":null}]