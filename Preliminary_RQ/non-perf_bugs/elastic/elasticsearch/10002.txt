{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/10002","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10002/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10002/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10002/events","html_url":"https://github.com/elastic/elasticsearch/issues/10002","id":60015331,"node_id":"MDU6SXNzdWU2MDAxNTMzMQ==","number":10002,"title":"Aggregation to calculate the moving average on a histogram aggregation","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":76184120,"node_id":"MDU6TGFiZWw3NjE4NDEyMA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v2.0.0-beta1","name":"v2.0.0-beta1","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"assignees":[{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2015-03-05T21:02:17Z","updated_at":"2017-08-31T04:04:53Z","closed_at":"2015-04-08T14:50:56Z","author_association":"MEMBER","active_lock_reason":null,"body":"This aggregation will calculate the moving average of sibling metrics in histogram-style data (`histogram`, `date_histogram`).  Moving averages are useful when time series data is locally stationary and has a mean that changes slowly over time. \n\nSeasonal data may need a different analysis, as well as data that is bimodal, \"bursty\" or contains frequent extreme values (which are not necessarily outliers).\n\nThe `movavg` aggregation supports several configurable options:\n#### Window Size\n\nThe user specifies the `window` size they wish to calculate a moving average for.  E.g. a user may want a 30-day sliding window over a histogram of 90 days total.  \n\nCurrently, if there is not enough data to \"fill\" the window, the moving average will be calculated with whatever is available.  For example, if a user selects 30-day window, days 1-29 will calculate the moving average with between 1-29 days of data.\n\nWe could investigate adding more \"edge policies\", which determine how to handle gaps at the edge of the moving average\n#### Weighting Type\n\nCurrently, the agg supports four types of weighting:\n- `simple`:  A simple (arithmetic) average.  Default.\n- `linear`: A linearly weighted average, such that data becomes linearly less important as it gets \"older\" in the window\n- `single_exp`: Single exponentially weighted average (aka EWMA or Brown's Simple Exp Smoothing), such that data becomes exponentially less important as it get's \"older\". \n- `double_exp`: Double exponentially weighted average (aka Holt-Winters).  Uses two exponential terms:  first smooth data exponentially like `single_exp`, but then apply second corrective smoothing to account for a trend.\n#### Todo: Expose alpha and beta\n\nAlpha and beta are parameters which control the behavior of `single_exp` and `double_exp`.\n- Alpha: controls how far the single exponential smoothing term lags behind the \"turning points\" in the mean by 1/alpha periods.  Alpha = 1 means the smoothing term has no memory (period of 1), and emulates a random walk.  Alpha = 0 means the smoothing term has infinite memory and reports the mean of the data\n- Beta: Only used in `double_exp`.  Analogous to alpha, but applied to the trend smoothing rather than the data smoothing.\n#### Todo: Investigate metric-weighting\n\nIt's sometimes useful to weight a time period not by it's distance from the current time, but rather by some metric that happened in that time interval.  E.g. weight by the volume of transactions that happened on that day.\n\nIt should be possible to weight based on metrics within the bucket, although it could get complicated if the value is missing.\n#### Sample Request\n\nThis will calculate a moving average (sliding window of three days) over the sum of prices in each day:\n\n``` json\nGET /test/_search?search_type=count\n{\n   \"aggs\": {\n      \"my_date_histo\": {\n         \"date_histogram\": {\n            \"field\": \"@timestamp\",\n            \"interval\": \"day\"\n         },\n         \"aggs\": {\n            \"the_sum\": {\n               \"sum\": {\n                  \"field\": \"price\"\n               }\n            },\n            \"the_movavg\": {\n               \"movavg\": {\n                  \"bucketsPath\": \"the_sum\",\n                  \"window\": 3\n               }\n            }\n         }\n      }\n   }\n}\n```\n#### Sample Response\n\n``` json\n{\n   \"took\": 3,\n   \"timed_out\": false,\n   \"aggregations\": {\n      \"my_date_histo\": {\n         \"buckets\": [\n            {\n               \"key_as_string\": \"2014-12-01T00:00:00.000Z\",\n               \"key\": 1417392000000,\n               \"doc_count\": 1,\n               \"the_sum\": {\n                  \"value\": 1,\n                  \"value_as_string\": \"1.0\"\n               },\n               \"the_movavg\": {\n                  \"value\": 1\n               }\n            },\n            {\n               \"key_as_string\": \"2014-12-02T00:00:00.000Z\",\n               \"key\": 1417478400000,\n               \"doc_count\": 1,\n               \"the_sum\": {\n                  \"value\": 2,\n                  \"value_as_string\": \"2.0\"\n               },\n               \"the_movavg\": {\n                  \"value\": 1.5\n               }\n            },\n            {\n               \"key_as_string\": \"2014-12-04T00:00:00.000Z\",\n               \"key\": 1417651200000,\n               \"doc_count\": 1,\n               \"the_sum\": {\n                  \"value\": 4,\n                  \"value_as_string\": \"4.0\"\n               },\n               \"the_movavg\": {\n                  \"value\": 2.3333333333333335\n               }\n            },\n            {\n               \"key_as_string\": \"2014-12-05T00:00:00.000Z\",\n               \"key\": 1417737600000,\n               \"doc_count\": 1,\n               \"the_sum\": {\n                  \"value\": 5,\n                  \"value_as_string\": \"5.0\"\n               },\n               \"the_movavg\": {\n                  \"value\": 3.6666666666666665\n               }\n            },\n            {\n               \"key_as_string\": \"2014-12-08T00:00:00.000Z\",\n               \"key\": 1417996800000,\n               \"doc_count\": 1,\n               \"the_sum\": {\n                  \"value\": 8,\n                  \"value_as_string\": \"8.0\"\n               },\n               \"the_movavg\": {\n                  \"value\": 5.666666666666667\n               }\n            },\n            {\n               \"key_as_string\": \"2014-12-09T00:00:00.000Z\",\n               \"key\": 1418083200000,\n               \"doc_count\": 1,\n               \"the_sum\": {\n                  \"value\": 9,\n                  \"value_as_string\": \"9.0\"\n               },\n               \"the_movavg\": {\n                  \"value\": 7.333333333333333\n               }\n            }\n         ]\n      }\n   }\n}\n```\n","closed_by":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"performed_via_github_app":null}