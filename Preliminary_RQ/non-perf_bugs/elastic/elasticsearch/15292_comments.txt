[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/162705121","html_url":"https://github.com/elastic/elasticsearch/issues/15292#issuecomment-162705121","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15292","id":162705121,"node_id":"MDEyOklzc3VlQ29tbWVudDE2MjcwNTEyMQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2015-12-07T23:32:53Z","updated_at":"2015-12-07T23:32:53Z","author_association":"MEMBER","body":"The json spec has precision issues with large longs, because it represents all numbers as doubles. Set up your mappings (don't use dynamic mappings) as long, and pass the value in a json string. The `coerce` setting (which defaults to true), will use Long.parseLong on the string value.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/162906273","html_url":"https://github.com/elastic/elasticsearch/issues/15292#issuecomment-162906273","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15292","id":162906273,"node_id":"MDEyOklzc3VlQ29tbWVudDE2MjkwNjI3Mw==","user":{"login":"javadevmtl","id":2964042,"node_id":"MDQ6VXNlcjI5NjQwNDI=","avatar_url":"https://avatars2.githubusercontent.com/u/2964042?v=4","gravatar_id":"","url":"https://api.github.com/users/javadevmtl","html_url":"https://github.com/javadevmtl","followers_url":"https://api.github.com/users/javadevmtl/followers","following_url":"https://api.github.com/users/javadevmtl/following{/other_user}","gists_url":"https://api.github.com/users/javadevmtl/gists{/gist_id}","starred_url":"https://api.github.com/users/javadevmtl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javadevmtl/subscriptions","organizations_url":"https://api.github.com/users/javadevmtl/orgs","repos_url":"https://api.github.com/users/javadevmtl/repos","events_url":"https://api.github.com/users/javadevmtl/events{/privacy}","received_events_url":"https://api.github.com/users/javadevmtl/received_events","type":"User","site_admin":false},"created_at":"2015-12-08T14:55:42Z","updated_at":"2015-12-08T15:39:13Z","author_association":"NONE","body":"Ok but the source will still show as string when I return the search result?\n\nJust a thought, unless I missed it, the docs don't explain this phenomenon, maybe it can be mentioned.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/164715054","html_url":"https://github.com/elastic/elasticsearch/issues/15292#issuecomment-164715054","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15292","id":164715054,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NDcxNTA1NA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-12-15T10:24:16Z","updated_at":"2015-12-15T10:24:16Z","author_association":"CONTRIBUTOR","body":"To be clear, this isn't a problem with the JSON spec per se, which says nothing about precision.  It is javascript which represents all numbers as doubles (and so a number of json encoders will do the same thing).  \n\nTake your example:\n\n```\nPUT t\n{\n  \"mappings\": {\n    \"mytype\": {\n      \"properties\": {\n        \"my_huge\": {\n          \"type\": \"long\"\n        }\n      }\n    }\n  }\n}\n\nPOST t/mytype/_bulk\n{\"index\": {\"_id\": \"10000000000001487\" }}\n{\"my_huge\":10000000000001487}\n{\"index\": {\"_id\": \"10000000000001489\" }}\n{\"my_huge\":10000000000001489}\n\nGET t/_search?pretty\n{\n  \"aggs\": {\n    \"myhuge\": {\n      \"terms\": {\n        \"field\": \"my_huge\"\n      }\n    }\n  }\n}\n```\n\nIf you run the above in Sense, it will output:\n\n```\n\"hits\": {\n  \"total\": 2,\n  \"max_score\": 1,\n  \"hits\": [\n    {\n      \"_index\": \"t\",\n      \"_type\": \"mytype\",\n      \"_id\": \"10000000000001487\",\n      \"_score\": 1,\n      \"_source\": {\n        \"my_huge\": 10000000000001488\n      }\n    },\n    {\n      \"_index\": \"t\",\n      \"_type\": \"mytype\",\n      \"_id\": \"10000000000001489\",\n      \"_score\": 1,\n      \"_source\": {\n        \"my_huge\": 10000000000001488\n      }\n    }\n  ]\n},\n\"aggregations\": {\n  \"myhuge\": {\n    \"doc_count_error_upper_bound\": 0,\n    \"sum_other_doc_count\": 0,\n    \"buckets\": [\n      {\n        \"key\": 10000000000001488,\n        \"doc_count\": 1\n      },\n      {\n        \"key\": 10000000000001488,\n        \"doc_count\": 1\n      }\n    ]\n  }\n```\n\nThe number have all been rounded to 10000000000001488.\n\nHowever, repeat the same search request in the console with curl and you get:\n\n```\n\"hits\" : {\n  \"total\" : 2,\n  \"max_score\" : 1.0,\n  \"hits\" : [ {\n    \"_index\" : \"t\",\n    \"_type\" : \"mytype\",\n    \"_id\" : \"10000000000001487\",\n    \"_score\" : 1.0,\n    \"_source\":{\"my_huge\":10000000000001487}\n  }, {\n    \"_index\" : \"t\",\n    \"_type\" : \"mytype\",\n    \"_id\" : \"10000000000001489\",\n    \"_score\" : 1.0,\n    \"_source\":{\"my_huge\":10000000000001489}\n  } ]\n},\n\"aggregations\" : {\n  \"myhuge\" : {\n    \"doc_count_error_upper_bound\" : 0,\n    \"sum_other_doc_count\" : 0,\n    \"buckets\" : [ {\n      \"key\" : 10000000000001487,\n      \"doc_count\" : 1\n    }, {\n      \"key\" : 10000000000001489,\n      \"doc_count\" : 1\n    } ]\n  }\n}\n```\n\nIn other words, Elasticsearch is doing the right thing, and the Sense example is rounded because Javascript parsed the response JSON.\n","performed_via_github_app":null}]