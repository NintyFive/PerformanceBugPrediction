[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/479437348","html_url":"https://github.com/elastic/elasticsearch/issues/40775#issuecomment-479437348","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40775","id":479437348,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTQzNzM0OA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-04-03T10:45:45Z","updated_at":"2019-04-03T10:45:45Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/483575886","html_url":"https://github.com/elastic/elasticsearch/issues/40775#issuecomment-483575886","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40775","id":483575886,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzU3NTg4Ng==","user":{"login":"bpintea","id":1562801,"node_id":"MDQ6VXNlcjE1NjI4MDE=","avatar_url":"https://avatars3.githubusercontent.com/u/1562801?v=4","gravatar_id":"","url":"https://api.github.com/users/bpintea","html_url":"https://github.com/bpintea","followers_url":"https://api.github.com/users/bpintea/followers","following_url":"https://api.github.com/users/bpintea/following{/other_user}","gists_url":"https://api.github.com/users/bpintea/gists{/gist_id}","starred_url":"https://api.github.com/users/bpintea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bpintea/subscriptions","organizations_url":"https://api.github.com/users/bpintea/orgs","repos_url":"https://api.github.com/users/bpintea/repos","events_url":"https://api.github.com/users/bpintea/events{/privacy}","received_events_url":"https://api.github.com/users/bpintea/received_events","type":"User","site_admin":false},"created_at":"2019-04-16T09:05:07Z","updated_at":"2019-04-16T09:05:07Z","author_association":"CONTRIBUTOR","body":"Below is a summary of how [SQLTables](https://docs.microsoft.com/en-us/sql/odbc/reference/syntax/sqltables-function#comments) specifies the enumerations:\r\n\r\n|CatalogName|SchemaName|TableName|TableType|Enumeration|\r\n|---|---|---|---|---|\r\n|`%`|`''`|`''`|(not mentioned, _anything_(*))|Catalogs|\r\n|`''`|`%`|`''`|(not mentioned, _anything_(*))|Schemas|\r\n|`''`|`''`|`''`|`%`|Table types|\r\n\r\n(*) `anything` having the above mentioned contradictory definition of `empty string,[or] a list of comma-separated values for the types of interest`, but also `null`, as a PVL. But I suspect the authors might have intended an empty string `''` here, which would be consistent with the last row, \"Table types\" enumeration and the application invocation examples.\r\nBut because the lack of explicit specification and some apps using NULL, I suppose the follow addition should also be valid:\r\n\r\n|CatalogName|SchemaName|TableName|TableType|Enumeration|\r\n|---|---|---|---|---|\r\n|`%`|`''`|`''`|`''`|Catalogs|\r\n|`%`|`''`|`''`|`NULL`|Catalogs|\r\n|`%`|`''`|`''`|`%`|Catalogs|\r\n\r\n(A similar extension would be required for the schemas enumeration, but that can be left out for now.)\r\n\r\nSo I guess a following invocation would be up to the implementations to decide what to return:\r\n\r\n|CatalogName|SchemaName|TableName|TableType|Enumeration|\r\n|---|---|---|---|---|\r\n|`%`|`''`|`''`|`'TABLE'`|Catalogs _or_ empty resultset|\r\n\r\nWhich would mean that some of the examples above probably need correction:\r\n* `SYS TABLES CATALOG LIKE '%' LIKE '' TYPE ''` -> list all catalogs (like `SYS TABLES CATALOG LIKE '%' LIKE ''` currently does);\r\n* `SYS TABLES CATALOG LIKE '%' LIKE ''` -> ~list nothing (type not present)~ list catalogs;\r\n* `SYS TABLES CATALOG LIKE '' LIKE '' TYPE '%'` -> list all supported table types;\r\n* `SYS TABLES CATALOG LIKE '%' LIKE '' TYPE '%'` -> ~list nothing (no table with empty name)~ list catalogs;\r\n* `SYS TABLES CATALOG LIKE '%' LIKE '' TYPE 'VIEW'` -> ~list nothing (no view with empty name)~ up to implementation;\r\n* `SYS TABLES CATALOG LIKE '%' LIKE 'test%' TYPE 'VIEW'` -> list all views starting with `test`;\r\n* `SYS TABLES CATALOG LIKE '' LIKE 'test%' TYPE 'VIEW'` -> list nothing (no catalog with empty name).\r\n\r\n","performed_via_github_app":null}]