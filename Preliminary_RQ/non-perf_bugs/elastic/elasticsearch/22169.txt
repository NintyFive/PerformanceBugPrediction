{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/22169","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22169/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22169/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22169/events","html_url":"https://github.com/elastic/elasticsearch/issues/22169","id":195553691,"node_id":"MDU6SXNzdWUxOTU1NTM2OTE=","number":22169,"title":"Adjacency matrix aggregation","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":511906923,"node_id":"MDU6TGFiZWw1MTE5MDY5MjM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v5.3.0","name":"v5.3.0","color":"DDDDDD","default":false,"description":null},{"id":334286612,"node_id":"MDU6TGFiZWwzMzQyODY2MTI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v6.0.0-alpha1","name":"v6.0.0-alpha1","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2016-12-14T15:01:36Z","updated_at":"2017-01-20T17:26:41Z","closed_at":"2017-01-20T15:53:05Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Sometimes we want to use aggregations to understand the details of how certain entities are connected:\r\n\r\n* When did these IP addresses talk to each other?\r\n* How much money was sent per day between a selection of bank accounts?\r\n\r\nRight now we can structure this with an agg tree as follows:\r\n\r\n* query terms [A,B,C] with `min_should_match:2`\r\n* terms agg 1 with `include: [A,B,C]`\r\n   * terms agg 2 with `include [A,B,C]`\r\n       * detail aggs  eg `date_histogram` or `sum`...\r\n\r\nThis will generate leaf aggregations for all of the possible connections but _will generate too many of them._ If the number of terms is N the number of leaf buckets created in a worst-case scenario is N² when it need only be (N²-N)/2. We don't want duplicate results for both A->B and B->A buckets. Similarly, we don't want A->A buckets. This trimming can be achieved if `terms agg 2` only collects terms that are less than the parent bucket's term in `terms agg 1`. (We could use \"greater than\" as the filter but the choice is immaterial).\r\n\r\nWe could implement this by either:\r\n1) Adding extra parameters to existing `terms` aggs or\r\n2) Creating a new dedicated `adjacency` aggregation \r\n\r\nOption 1 feels clumsy and introduces a need for changes in the agg framework to allow a child to see the keys used by the parent bucket.\r\nThe advantage of option 2 is that clients would only need to specify the list of terms once as a parameter and it could provide a more compact results format.\r\n\r\nWould appreciate your thoughts @colings86 and @jpountz \r\n\r\n","closed_by":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"performed_via_github_app":null}