{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/10839","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10839/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10839/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10839/events","html_url":"https://github.com/elastic/elasticsearch/issues/10839","id":71397496,"node_id":"MDU6SXNzdWU3MTM5NzQ5Ng==","number":10839,"title":"bug in bulk java api?","user":{"login":"rrphotosoft","id":4465221,"node_id":"MDQ6VXNlcjQ0NjUyMjE=","avatar_url":"https://avatars3.githubusercontent.com/u/4465221?v=4","gravatar_id":"","url":"https://api.github.com/users/rrphotosoft","html_url":"https://github.com/rrphotosoft","followers_url":"https://api.github.com/users/rrphotosoft/followers","following_url":"https://api.github.com/users/rrphotosoft/following{/other_user}","gists_url":"https://api.github.com/users/rrphotosoft/gists{/gist_id}","starred_url":"https://api.github.com/users/rrphotosoft/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rrphotosoft/subscriptions","organizations_url":"https://api.github.com/users/rrphotosoft/orgs","repos_url":"https://api.github.com/users/rrphotosoft/repos","events_url":"https://api.github.com/users/rrphotosoft/events{/privacy}","received_events_url":"https://api.github.com/users/rrphotosoft/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2015-04-27T20:46:44Z","updated_at":"2015-04-29T15:13:42Z","closed_at":"2015-04-29T14:58:20Z","author_association":"NONE","active_lock_reason":null,"body":"Hi, \n\nI have noticed what looks like a small bug in the java bulk api for ES.\nI'm not sure if this is the right place to post it but here goes anyways:\n\nAssume that we set the bulk size to execute every 10 requests.\nThe expected response is that the afterBulk Callback should be called, once the response is executed.\nUnfortunately if I add just 10 items to the bulk queue, there is no response, i.e the afterBulk Callback is not triggered.\nI can see that the items are added through sense, or even in the ES console.\n\nIn case I add more than 10 items, I get responses for everything after the first 10.\n\nCode to reproduce the issue:\nN.B:\n*ElasticClientHolder in the code below, is a singleton holding a connection to ES\n\nElasticsearch v - 1.4.4\nUbuntu 12.04 LTS\n\n```\n  public class BulkProcessorTestClasses {\n private BulkProcessor bulkprocessor;\n private BulkRequestBuilder builder;\n\npublic BulkProcessor getBulkprocessor() {\n    if (bulkprocessor == null) {\n        this.bulkprocessor = BulkProcessor\n                .builder(ElasticClientHolder.getInstance(),\n                        new BulkProcessor.Listener() {\n\n                            @Override\n                            public void afterBulk(long execution_id,\n                                    BulkRequest req, BulkResponse resp) {\n                                // TODO Auto-generated method stub\n                                System.out.println(\"execution id:\" + execution_id);\n                                System.out.println(req.toString());\n                                BulkItemResponse[] resp_items_arr = resp.getItems();\n                                for(int i=0; i < resp_items_arr.length; i++){\n                                    System.out.println(resp_items_arr[i].getItemId());\n                                }\n                                System.out.println(resp.hasFailures());\n                            }\n\n                            @Override\n                            public void afterBulk(long arg0,\n                                    BulkRequest arg1, Throwable arg2) {\n                                // TODO Auto-generated method stub\n                                System.out.println(\"the whole bulk failed.--->\"\n                                        + arg2.getLocalizedMessage());\n                            }\n\n                            @Override\n                            public void beforeBulk(long arg0,\n                                    BulkRequest arg1) {\n                                // TODO Auto-generated method stub\n                                System.out\n                                        .println(\"these were the number of requests sent to es. bulk\");\n                                System.out.println(arg1.numberOfActions());\n\n                            }\n\n                        }).setBulkActions(10)\n                .setBulkSize(new ByteSizeValue(1, ByteSizeUnit.GB))\n                .setFlushInterval(TimeValue.timeValueSeconds(30))\n                .setConcurrentRequests(1).build();\n    }\n    return bulkprocessor;\n}\n    //**\n\npublic BulkRequestBuilder getBuilder() {\n    if (this.builder == null) {\n                     //elasticsearchclientholder is a singleton holding a connection to ES.\n        this.builder = ElasticClientHolder.getInstance().prepareBulk();\n    }\n    return builder;\n}\n\n\npublic void build_and_test_bulk_request(){\n    for(int i=0; i < 10; i++){\n        JSONObject elastic_object = new JSONObject();\n        elastic_object.put(\"test_name\", \"name_\" + String.valueOf(i));\n        getBulkprocessor().add(\n                new IndexRequest(\"test_index\",\n                        \"test_mapping\")\n                        .source(elastic_object.toJSONString()));\n    }\n}\n\npublic BulkProcessorTestClasses(){\n    build_and_test_bulk_request();\n}\n\n    /***\n    * the maping contains a single string property called test_name.\n    * in an index called test_index, and a type test_mapping.\n    *\n    */\n\n  }\n```\n\nCalling the build_and_test_bulk_requests returns nothing.\n\nRegards,\nRR.\n","closed_by":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"performed_via_github_app":null}