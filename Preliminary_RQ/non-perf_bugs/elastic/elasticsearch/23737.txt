{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/23737","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23737/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23737/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23737/events","html_url":"https://github.com/elastic/elasticsearch/issues/23737","id":216813008,"node_id":"MDU6SXNzdWUyMTY4MTMwMDg=","number":23737,"title":"With the classic tokenizer, a wildcarded query_string of e.g. T.* doesn't respect the dot","user":{"login":"mrec","id":4206148,"node_id":"MDQ6VXNlcjQyMDYxNDg=","avatar_url":"https://avatars0.githubusercontent.com/u/4206148?v=4","gravatar_id":"","url":"https://api.github.com/users/mrec","html_url":"https://github.com/mrec","followers_url":"https://api.github.com/users/mrec/followers","following_url":"https://api.github.com/users/mrec/following{/other_user}","gists_url":"https://api.github.com/users/mrec/gists{/gist_id}","starred_url":"https://api.github.com/users/mrec/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrec/subscriptions","organizations_url":"https://api.github.com/users/mrec/orgs","repos_url":"https://api.github.com/users/mrec/repos","events_url":"https://api.github.com/users/mrec/events{/privacy}","received_events_url":"https://api.github.com/users/mrec/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2017-03-24T15:04:36Z","updated_at":"2017-03-24T19:52:40Z","closed_at":"2017-03-24T17:34:16Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version**: 2.3.2\r\n\r\n**Plugins installed**: [analysis-icu 2.3.2, analysis-korean 2.3.2, analysis-kuromoji 2.3.2, analysis-smartcn 2.3.2, analysis-stconvert 1.8.3, delete-by-query 2.3.2, enhanced-highlighter 2.3.2-1.6, enhanced-plain-highlighter 2.3.2-1.7, entsearch 2.3.2-1.6, head master, license 2.3.2, marvel-agent 2.3.2, reindex 2.3.2, \r\nrepository-hdfs 2.3.1]\r\n\r\n**JVM version**: 1.8.0\r\n\r\n**OS version**: Oracle Linux Server 6.5\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nWe're searching text that can include ticker-style symbols like `T.A`. There's an element of structure to these, and sometimes users want to wildcard the second part, i.e. `T.*`. The `classic` tokenizer (which we use) treats `.` as a token char [when it's not followed by whitespace](https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-classic-tokenizer.html) so we'd expect this to match only those indexed terms starting with `T.`. What it actually does is match all terms starting with `T`, which brings in a huge number of false positives.\r\n\r\nThis feels wrong since even though the input doesn't contain token characters after the `.`, the wildcard is clearly *standing in for* token characters here. You could argue that `T.*` should also match `T.` (with no characters after the dot) and the classic tokenizer would have dropped the trailing dot there, but this argument doesn't apply to e.g. `T.?` or `T.?*` and those don't work either.\r\n\r\n**Steps to reproduce**:\r\n\r\n~~~\r\nPUT mrec\r\n{\r\n  \"settings\": {\r\n    \"index\":{\r\n      \"analysis\":{\r\n        \"analyzer\":{\r\n          \"demo\":{\r\n            \"tokenizer\":\"classic\",\r\n            \"filter\":[\"lowercase\"]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, \r\n  \"mappings\": {\r\n    \"doc\": {\r\n      \"properties\": {\r\n        \"s\": {\r\n          \"type\": \"string\",\r\n          \"analyzer\": \"demo\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPUT mrec/doc/1\r\n{\r\n  \"s\":\"T.A\"\r\n}\r\n\r\nPUT mrec/doc/2\r\n{\r\n  \"s\":\"trombone\"\r\n}\r\n\r\nGET mrec/_search\r\n{\r\n  \"fielddata_fields\": [\"s\"], \r\n  \"query\": {\r\n    \"query_string\": {\r\n      \"query\": \"s:(T.*)\",\r\n      \"analyze_wildcard\": true,\r\n      \"default_operator\": \"AND\"\r\n    }\r\n  }\r\n}\r\n~~~","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}