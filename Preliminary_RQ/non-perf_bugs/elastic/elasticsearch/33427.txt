{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/33427","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33427/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33427/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33427/events","html_url":"https://github.com/elastic/elasticsearch/issues/33427","id":357281022,"node_id":"MDU6SXNzdWUzNTcyODEwMjI=","number":33427,"title":"MatchNoDocsQuery in simple_query_string query with multiple fields and AND operator returning no results","user":{"login":"bartdegoede","id":497739,"node_id":"MDQ6VXNlcjQ5NzczOQ==","avatar_url":"https://avatars2.githubusercontent.com/u/497739?v=4","gravatar_id":"","url":"https://api.github.com/users/bartdegoede","html_url":"https://github.com/bartdegoede","followers_url":"https://api.github.com/users/bartdegoede/followers","following_url":"https://api.github.com/users/bartdegoede/following{/other_user}","gists_url":"https://api.github.com/users/bartdegoede/gists{/gist_id}","starred_url":"https://api.github.com/users/bartdegoede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bartdegoede/subscriptions","organizations_url":"https://api.github.com/users/bartdegoede/orgs","repos_url":"https://api.github.com/users/bartdegoede/repos","events_url":"https://api.github.com/users/bartdegoede/events{/privacy}","received_events_url":"https://api.github.com/users/bartdegoede/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-09-05T15:22:24Z","updated_at":"2018-09-05T15:56:26Z","closed_at":"2018-09-05T15:56:26Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version** `Version: 6.4.0, Build: default/deb/595516e/2018-08-17T23:18:47.308994Z`\r\n\r\n**Plugins installed**: [`analysis-icu`, `analysis-smartcn`, `analysis-stempel`, `repository-s3`]\r\n\r\n**JVM version**: `1.8.0_131`\r\n\r\n**OS version**: `Linux 4.4.0-83-generic #106-Ubuntu SMP Mon Jun 26 17:54:43 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux` (Vagrant box)\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nRelated to the issue described in https://github.com/elastic/elasticsearch/issues/28856, when I execute a `simple_query_string` with the following conditions:\r\n\r\n- the query string is analyzed with an analyzer that has a `stopword` filter\r\n- the query contains one of the stopwords on the list\r\n- the query has multiple `fields` configured\r\n- the `default_operator` is `AND`\r\n\r\nThe token is replaced by a `MatchNoDocsQuery` instead of omitted. The combination with the `AND` operator ensures that no result will match, regardless of what is queried.\r\n\r\nThe expected behavior (at least, the behavior in Elasticsearch 6.3.0 after this merge https://github.com/elastic/elasticsearch/pull/28871) is for the stop word to be removed from the token stream, not to be replaced by `MatchNoDocsQuery`.\r\n\r\n**Steps to reproduce**:\r\n\r\nPlease include a *minimal* but *complete* recreation of the problem, including\r\n(e.g.) index creation, mappings, settings, query etc.  The easier you make for\r\nus to reproduce it, the more likely that somebody will take the time to look at it.\r\n\r\n 1. Run Elasticsearch 6.4.0 (`bin/elasticsearch`)\r\n 2. Create an index with multiple fields:\r\n```\r\ncurl -XPUT \"localhost:9200/stopword-query-string-test\" -H \"Content-Type: application/json\" -d '{\r\n    \"mappings\": {\r\n        \"doc\": {\r\n            \"properties\": {\r\n                \"title\": { \r\n                    \"type\": \"text\",\r\n                    \"analyzer\": \"english\"\r\n                },\r\n                \"body\": {\r\n                    \"type\": \"text\",\r\n                    \"analyzer\": \"english\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n}'\r\n```\r\n 3. Validate the query:\r\n```\r\ncurl -XGET \"localhost:9200/stopword-query-string-test/doc/_validate/query?explain\" -H \"Content-Type: application/json\" -d '{\r\n  \"query\": {\r\n    \"simple_query_string\": {\r\n      \"query\": \"the quick brown fox\",\r\n      \"fields\": [\"title\", \"body\"],\r\n      \"analyzer\": \"english\",\r\n      \"default_operator\": \"AND\"\r\n    }\r\n  }\r\n}'\r\n```\r\nThe response will be:\r\n```\r\n{\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"failed\": 0\r\n  },\r\n  \"valid\": true,\r\n  \"explanations\": [\r\n    {\r\n      \"index\": \"stopword-query-string-test\",\r\n      \"valid\": true,\r\n      \"explanation\": \"\"\"+(+MatchNoDocsQuery(\"[multi_match] list of group queries was empty\") +(title:quick | body:quick)~1.0 +(title:brown | body:brown)~1.0 +(title:fox | body:fox)~1.0) #*:*\"\"\"\r\n    }\r\n  ]\r\n}\r\n```\r\n4. To verify, I would expect the query to match the following document:\r\nDocument:\r\n```\r\ncurl -XPUT \"localhost:9200/stopword-query-string-test/doc/1\" -H \"Content-Type: application/json\" -d '{\r\n    \"title\": \"the quick brown fox jumps over the lazy dog\",\r\n    \"body\": \"the quick brown fox jumps over the lazy dog\"\r\n}'\r\n```\r\nQuery:\r\n```\r\ncurl -XGET \"localhost:9200/stopword-query-string-test/_search?pretty\" -H \"Content-Type: application/json\" -d '{\r\n  \"query\": {\r\n    \"simple_query_string\": {\r\n      \"query\": \"the quick brown fox\",\r\n      \"fields\": [\"title\", \"body\"],\r\n      \"analyzer\": \"english\",\r\n      \"default_operator\": \"AND\"\r\n    }\r\n  }\r\n}'\r\n```\r\nResponse:\r\n```\r\n{\r\n  \"took\": 1,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 5,\r\n    \"successful\": 5,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": 0,\r\n    \"max_score\": null,\r\n    \"hits\": []\r\n  }\r\n}\r\n```\r\nI tested with querying just one field too, and there behaviour is as expected (the stopword is simply omitted):\r\n```\r\nGET stopword-query-string-test/doc/_validate/query?explain\r\n{\r\n  \"query\": {\r\n    \"simple_query_string\": {\r\n      \"query\": \"the quick brown fox\",\r\n      \"fields\": [\"title\"],\r\n      \"analyzer\": \"english\",\r\n      \"default_operator\": \"AND\"\r\n    }\r\n  }\r\n}\r\n```\r\nResponse\r\n```\r\n{\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"failed\": 0\r\n  },\r\n  \"valid\": true,\r\n  \"explanations\": [\r\n    {\r\n      \"index\": \"stopword-query-string-test\",\r\n      \"valid\": true,\r\n      \"explanation\": \"+(+title:quick +title:brown +title:fox) #*:*\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n**Provide logs (if relevant)**:\r\nNo relevant logs\r\n","closed_by":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}