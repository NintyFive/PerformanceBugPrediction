{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/22925","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22925/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22925/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22925/events","html_url":"https://github.com/elastic/elasticsearch/issues/22925","id":204845871,"node_id":"MDU6SXNzdWUyMDQ4NDU4NzE=","number":22925,"title":"Range types causing `GetFieldMappingsIndexRequest` to fail due to `NullPointerException` in `RangeFieldMapper.doXContentBody` when `include_defaults=true` is on the query string","user":{"login":"Nysosis","id":5476382,"node_id":"MDQ6VXNlcjU0NzYzODI=","avatar_url":"https://avatars1.githubusercontent.com/u/5476382?v=4","gravatar_id":"","url":"https://api.github.com/users/Nysosis","html_url":"https://github.com/Nysosis","followers_url":"https://api.github.com/users/Nysosis/followers","following_url":"https://api.github.com/users/Nysosis/following{/other_user}","gists_url":"https://api.github.com/users/Nysosis/gists{/gist_id}","starred_url":"https://api.github.com/users/Nysosis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Nysosis/subscriptions","organizations_url":"https://api.github.com/users/Nysosis/orgs","repos_url":"https://api.github.com/users/Nysosis/repos","events_url":"https://api.github.com/users/Nysosis/events{/privacy}","received_events_url":"https://api.github.com/users/Nysosis/received_events","type":"User","site_admin":false},"labels":[{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":516617812,"node_id":"MDU6TGFiZWw1MTY2MTc4MTI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v5.2.1","name":"v5.2.1","color":"dddddd","default":false,"description":null},{"id":511906923,"node_id":"MDU6TGFiZWw1MTE5MDY5MjM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v5.3.0","name":"v5.3.0","color":"DDDDDD","default":false,"description":null},{"id":334286612,"node_id":"MDU6TGFiZWwzMzQyODY2MTI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v6.0.0-alpha1","name":"v6.0.0-alpha1","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"nknize","id":830187,"node_id":"MDQ6VXNlcjgzMDE4Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/830187?v=4","gravatar_id":"","url":"https://api.github.com/users/nknize","html_url":"https://github.com/nknize","followers_url":"https://api.github.com/users/nknize/followers","following_url":"https://api.github.com/users/nknize/following{/other_user}","gists_url":"https://api.github.com/users/nknize/gists{/gist_id}","starred_url":"https://api.github.com/users/nknize/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nknize/subscriptions","organizations_url":"https://api.github.com/users/nknize/orgs","repos_url":"https://api.github.com/users/nknize/repos","events_url":"https://api.github.com/users/nknize/events{/privacy}","received_events_url":"https://api.github.com/users/nknize/received_events","type":"User","site_admin":false},"assignees":[{"login":"nknize","id":830187,"node_id":"MDQ6VXNlcjgzMDE4Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/830187?v=4","gravatar_id":"","url":"https://api.github.com/users/nknize","html_url":"https://github.com/nknize","followers_url":"https://api.github.com/users/nknize/followers","following_url":"https://api.github.com/users/nknize/following{/other_user}","gists_url":"https://api.github.com/users/nknize/gists{/gist_id}","starred_url":"https://api.github.com/users/nknize/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nknize/subscriptions","organizations_url":"https://api.github.com/users/nknize/orgs","repos_url":"https://api.github.com/users/nknize/repos","events_url":"https://api.github.com/users/nknize/events{/privacy}","received_events_url":"https://api.github.com/users/nknize/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2017-02-02T11:19:56Z","updated_at":"2017-02-03T11:01:25Z","closed_at":"2017-02-02T22:53:11Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version**:\r\n```\r\n  \"version\" : {\r\n    \"number\" : \"5.2.0\",\r\n    \"build_hash\" : \"24e05b9\",\r\n    \"build_date\" : \"2017-01-24T19:52:35.800Z\",\r\n    \"build_snapshot\" : false,\r\n    \"lucene_version\" : \"6.4.0\"\r\n  }\r\n```\r\n\r\n**Plugins installed**:\r\nNone (Unless Kibana is considered a plugin, in which case Kibana v5.2.0)\r\n\r\n**JVM version**:\r\n```\r\nopenjdk version \"1.8.0_111\"\r\nOpenJDK Runtime Environment (build 1.8.0_111-8u111-b14-3~12.04-b14)\r\nOpenJDK 64-Bit Server VM (build 25.111-b14, mixed mode)\r\n```\r\n\r\n**OS version**:\r\nVagrant VM running the `hashicorp/precise64` image - `A standard Ubuntu 12.04 LTS 64-bit box.`\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nWhen trying to match indices in kibana, my index is not returned, checking the network logs, it sends a request to: `[RootUrl]/elasticsearch/[pattern]/_mapping/field/*?_=[Timestamp]&ignore_unavailable=false&allow_no_indices=false&include_defaults=true`. This just returns\r\n```\r\n{}\r\n```\r\n\r\nOn a 404 response. If I manually navigate to the same url but change `include_defaults=true` to `include_defaults=false` then the index mappings are returned as expected. Checking the logs (shown below) indicate a `NullPointerException` being generated in `RangeFieldMapper.doXContentBody`. I stripped down the mappings to both a nested and non-nested object type in two different indexes, and both have the same behaviour.\r\n\r\n**Steps to reproduce**:\r\n***(I can provide the vagrant file + provisioning scripts I'm using if desired)***\r\n 1. Create the following separate indices with the mappings:\r\n```\r\nPUT flat\r\n{\r\n  \"mappings\": {\r\n    \"non-nested-range\": {\r\n      \"properties\": {\r\n        \"width\": {\r\n          \"type\": \"float_range\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPUT nested\r\n{\r\n  \"mappings\": {\r\n    \"nested-range\": {\r\n      \"properties\": {\r\n        \"flights\": {\r\n          \"type\": \"nested\",\r\n          \"properties\": {\r\n            \"months\": {\r\n              \"type\": \"integer_range\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n 2. Navigate to `[RootUrl]/elasticsearch/flat/_mapping/field/*` and see it returning the expected mapping with a 200 code\r\n 3. Navigate to `[RootUrl]/elasticsearch/flat/_mapping/field/*?_=[Timestamp]&ignore_unavailable=false&allow_no_indices=false&include_defaults=true` and see it returning just `{}` under a 404 response code\r\n 4. Navigate to `[RootUrl]/elasticsearch/flat/_mapping/field/*?_=[Timestamp]&ignore_unavailable=false&allow_no_indices=false&include_defaults=false` and see it returning the expected mapping with a 200 code\r\n 5. Repeat 2-4 but with the pattern of `nested` instead of `flat`\r\n\r\n**Provide logs (if relevant)**:\r\n\r\n```\r\n[2017-02-02T11:09:28,405][DEBUG][o.e.a.a.i.m.g.TransportGetFieldMappingsIndexAction] [lQNyI3G] null: failed to execute [org.elasticsearch.action.admin.indices.mapping.get.GetFieldMappingsIndexRequest@29cda818]\r\norg.elasticsearch.transport.RemoteTransportException: [lQNyI3G][127.0.0.1:9300][indices:admin/mappings/fields/get[index][s]]\r\nCaused by: java.lang.NullPointerException\r\n        at org.elasticsearch.index.mapper.RangeFieldMapper.doXContentBody(RangeFieldMapper.java:410) ~[elasticsearch-5.2.0.jar:5.2.0]\r\n        at org.elasticsearch.index.mapper.FieldMapper.toXContent(FieldMapper.java:382) ~[elasticsearch-5.2.0.jar:5.2.0]\r\n        at org.elasticsearch.action.admin.indices.mapping.get.TransportGetFieldMappingsIndexAction.addFieldMapper(TransportGetFieldMappingsIndexAction.java:215) ~[elasticsearch-5.2.0.jar:5.2.0]\r\n        at org.elasticsearch.action.admin.indices.mapping.get.TransportGetFieldMappingsIndexAction.findFieldMappingsByType(TransportGetFieldMappingsIndexAction.java:174) ~[elasticsearch-5.2.0.jar:5.2.0]\r\n        at org.elasticsearch.action.admin.indices.mapping.get.TransportGetFieldMappingsIndexAction.shardOperation(TransportGetFieldMappingsIndexAction.java:112) ~[elasticsearch-5.2.0.jar:5.2.0]\r\n        at org.elasticsearch.action.admin.indices.mapping.get.TransportGetFieldMappingsIndexAction.shardOperation(TransportGetFieldMappingsIndexAction.java:63) ~[elasticsearch-5.2.0.jar:5.2.0]\r\n        at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:294) ~[elasticsearch-5.2.0.jar:5.2.0]\r\n        at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:287) ~[elasticsearch-5.2.0.jar:5.2.0]\r\n        at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[elasticsearch-5.2.0.jar:5.2.0]\r\n        at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[elasticsearch-5.2.0.jar:5.2.0]\r\n        at org.elasticsearch.transport.TransportService$7.doRun(TransportService.java:610) [elasticsearch-5.2.0.jar:5.2.0]\r\n        at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:596) [elasticsearch-5.2.0.jar:5.2.0]\r\n        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-5.2.0.jar:5.2.0]\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_111]\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_111]\r\n        at java.lang.Thread.run(Thread.java:745) [?:1.8.0_111]\r\n```","closed_by":{"login":"nknize","id":830187,"node_id":"MDQ6VXNlcjgzMDE4Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/830187?v=4","gravatar_id":"","url":"https://api.github.com/users/nknize","html_url":"https://github.com/nknize","followers_url":"https://api.github.com/users/nknize/followers","following_url":"https://api.github.com/users/nknize/following{/other_user}","gists_url":"https://api.github.com/users/nknize/gists{/gist_id}","starred_url":"https://api.github.com/users/nknize/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nknize/subscriptions","organizations_url":"https://api.github.com/users/nknize/orgs","repos_url":"https://api.github.com/users/nknize/repos","events_url":"https://api.github.com/users/nknize/events{/privacy}","received_events_url":"https://api.github.com/users/nknize/received_events","type":"User","site_admin":false},"performed_via_github_app":null}