[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/242277619","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-242277619","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":242277619,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MjI3NzYxOQ==","user":{"login":"abeyad","id":1631297,"node_id":"MDQ6VXNlcjE2MzEyOTc=","avatar_url":"https://avatars2.githubusercontent.com/u/1631297?v=4","gravatar_id":"","url":"https://api.github.com/users/abeyad","html_url":"https://github.com/abeyad","followers_url":"https://api.github.com/users/abeyad/followers","following_url":"https://api.github.com/users/abeyad/following{/other_user}","gists_url":"https://api.github.com/users/abeyad/gists{/gist_id}","starred_url":"https://api.github.com/users/abeyad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abeyad/subscriptions","organizations_url":"https://api.github.com/users/abeyad/orgs","repos_url":"https://api.github.com/users/abeyad/repos","events_url":"https://api.github.com/users/abeyad/events{/privacy}","received_events_url":"https://api.github.com/users/abeyad/received_events","type":"User","site_admin":false},"created_at":"2016-08-25T04:22:04Z","updated_at":"2016-08-25T04:22:04Z","author_association":"CONTRIBUTOR","body":"It seems dangerous to prune files up front before writing to the same file.  Given @imotov's comment [here](https://github.com/elastic/elasticsearch/pull/20147#discussion_r76148215) about how this could happen, I believe we should just throw an exception and not allow the restore to proceed.  Pruning the files would amount to deleting data that the user added to the index and we probably shouldn't try to do anything too cute with the restore process trying to rename those files to get them restored.  It seems dangerous in general to restore to an index already written to outside of the restore process.  For example, what would happen right now if snapshot `A` was restored, which restored `idx` containing v1 of document `1`, then we index v2 of document `1`, then we try to restore snapshot `B` that already contained v2 of document `1` but with a different JSON source?  \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/242382762","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-242382762","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":242382762,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MjM4Mjc2Mg==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2016-08-25T13:19:38Z","updated_at":"2016-08-25T13:19:38Z","author_association":"MEMBER","body":"What I described is a rare but possible scenario. And in this scenario throwing an exception and notifying a user about diverging lifelines might make sense. However, there are two other more common scenarios that could lead to the same issue:\n1. the index into which we restore is a complexity different index\n2. it's the same index, but we lost primary some time after we took a snapshot, and are trying to restore into one of the former replicas.\n\nI think throwing an exception in these 2 scenarios would lead to a bad user experience. Both scenarios are easy to detect in 5.0 since we now have both index uuids and shard allocation uuid. Unfortunately, we didn't store this information currently, so handling old snapshots might still be an issue. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/242464675","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-242464675","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":242464675,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MjQ2NDY3NQ==","user":{"login":"abeyad","id":1631297,"node_id":"MDQ6VXNlcjE2MzEyOTc=","avatar_url":"https://avatars2.githubusercontent.com/u/1631297?v=4","gravatar_id":"","url":"https://api.github.com/users/abeyad","html_url":"https://github.com/abeyad","followers_url":"https://api.github.com/users/abeyad/followers","following_url":"https://api.github.com/users/abeyad/following{/other_user}","gists_url":"https://api.github.com/users/abeyad/gists{/gist_id}","starred_url":"https://api.github.com/users/abeyad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abeyad/subscriptions","organizations_url":"https://api.github.com/users/abeyad/orgs","repos_url":"https://api.github.com/users/abeyad/repos","events_url":"https://api.github.com/users/abeyad/events{/privacy}","received_events_url":"https://api.github.com/users/abeyad/received_events","type":"User","site_admin":false},"created_at":"2016-08-25T17:02:34Z","updated_at":"2016-08-25T17:02:34Z","author_association":"CONTRIBUTOR","body":"> 1. the index into which we restore is a complexity different index\n\n@imotov in this scenario, isn't it still dangerous to overwrite existing index files?  it still means we are overwriting some data.  shouldn't the user be required to delete the index first and then proceed with a restore?  \n\n> 1. it's the same index, but we lost primary some time after we took a snapshot, and are trying to restore into one of the former replicas.\n\nnot sure i follow this scenario; if we lost the primary, then we should have promoted one of the replicas to primary?  I'm sure you meant something else by it, I just didn't get it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/242465470","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-242465470","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":242465470,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MjQ2NTQ3MA==","user":{"login":"abeyad","id":1631297,"node_id":"MDQ6VXNlcjE2MzEyOTc=","avatar_url":"https://avatars2.githubusercontent.com/u/1631297?v=4","gravatar_id":"","url":"https://api.github.com/users/abeyad","html_url":"https://github.com/abeyad","followers_url":"https://api.github.com/users/abeyad/followers","following_url":"https://api.github.com/users/abeyad/following{/other_user}","gists_url":"https://api.github.com/users/abeyad/gists{/gist_id}","starred_url":"https://api.github.com/users/abeyad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abeyad/subscriptions","organizations_url":"https://api.github.com/users/abeyad/orgs","repos_url":"https://api.github.com/users/abeyad/repos","events_url":"https://api.github.com/users/abeyad/events{/privacy}","received_events_url":"https://api.github.com/users/abeyad/received_events","type":"User","site_admin":false},"created_at":"2016-08-25T17:04:44Z","updated_at":"2016-08-25T17:04:44Z","author_association":"CONTRIBUTOR","body":"Maybe the restore operation could have an optional `force` or `overwrite` option so we only overwrite existing files if that is set?  That way at least its clear and the directive came from the user..\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/242534659","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-242534659","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":242534659,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MjUzNDY1OQ==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2016-08-25T20:45:55Z","updated_at":"2016-08-25T20:45:55Z","author_association":"CONTRIBUTOR","body":"We currently only allow restoring into an existing index if that index is closed. If no index with same name already exists in the cluster, we select a fresh index uuid (and thus restore into a fresh folder on disk). I see restoring into a closed index as a feature when a shard has been corrupted on disk but a recent snapshot is available. By only restoring the corrupt/missing files, this might get you running again faster. As this is a really exceptional scenario, I think it justifies having to specify an explicit \"override\" option in that case. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/242851166","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-242851166","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":242851166,"node_id":"MDEyOklzc3VlQ29tbWVudDI0Mjg1MTE2Ng==","user":{"login":"abeyad","id":1631297,"node_id":"MDQ6VXNlcjE2MzEyOTc=","avatar_url":"https://avatars2.githubusercontent.com/u/1631297?v=4","gravatar_id":"","url":"https://api.github.com/users/abeyad","html_url":"https://github.com/abeyad","followers_url":"https://api.github.com/users/abeyad/followers","following_url":"https://api.github.com/users/abeyad/following{/other_user}","gists_url":"https://api.github.com/users/abeyad/gists{/gist_id}","starred_url":"https://api.github.com/users/abeyad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abeyad/subscriptions","organizations_url":"https://api.github.com/users/abeyad/orgs","repos_url":"https://api.github.com/users/abeyad/repos","events_url":"https://api.github.com/users/abeyad/events{/privacy}","received_events_url":"https://api.github.com/users/abeyad/received_events","type":"User","site_admin":false},"created_at":"2016-08-26T21:04:16Z","updated_at":"2016-08-26T21:04:16Z","author_association":"CONTRIBUTOR","body":"I discussed this with @s1monw.  There are several ways we could end up with the same Lucene file name.  For example, index to primary and replica, both primary and replica have the same documents but different segment files, snapshot primary, primary goes down, replica gets promoted, now try to restore into the index, we could end up with the same situation of trying to overwrite segments with different checksums.\n\nGiven the whole idea with restore is to forget about what's already there and restore the index to the state saved in the snapshot, what @mikemccand did in deleting the file if it already exists before restoring it is correct.  I will remove the TODO comment in the code.\n\nA longer term solution would be to use the recovery logic for restore, because that would provide us, amongst other things, the ability to be more robust in handling file restores and restoring them to temporary files first, then moving the older ones to backups and the restored files to the active ones.  But implementing this is a much larger scope and not necessary here.\n\nIf there are no other concerns, I think this doesn't need any work currently and can be closed.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243110690","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-243110690","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":243110690,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzExMDY5MA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-08-29T12:31:57Z","updated_at":"2016-08-29T12:31:57Z","author_association":"CONTRIBUTOR","body":"thanks @abeyad \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243134424","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-243134424","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":243134424,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzEzNDQyNA==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2016-08-29T14:08:42Z","updated_at":"2016-08-29T14:08:42Z","author_association":"MEMBER","body":"I thought a bit more about it over the weekend and discussed it with @abeyad. It looks like we just made restore non-incremental. If this is indeed what we want, we should probably document this as a breaking change in 5.0 and remove code that deals with incremental restore in restore service. Alternatively, we can modify it the logic in restore to just delete files with non-matching checksums instead of wiping out entire directory.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243134609","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-243134609","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":243134609,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzEzNDYwOQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-08-29T14:09:21Z","updated_at":"2016-08-29T14:09:21Z","author_association":"CONTRIBUTOR","body":"Good point.  Reopening\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243224442","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-243224442","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":243224442,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzIyNDQ0Mg==","user":{"login":"abeyad","id":1631297,"node_id":"MDQ6VXNlcjE2MzEyOTc=","avatar_url":"https://avatars2.githubusercontent.com/u/1631297?v=4","gravatar_id":"","url":"https://api.github.com/users/abeyad","html_url":"https://github.com/abeyad","followers_url":"https://api.github.com/users/abeyad/followers","following_url":"https://api.github.com/users/abeyad/following{/other_user}","gists_url":"https://api.github.com/users/abeyad/gists{/gist_id}","starred_url":"https://api.github.com/users/abeyad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abeyad/subscriptions","organizations_url":"https://api.github.com/users/abeyad/orgs","repos_url":"https://api.github.com/users/abeyad/repos","events_url":"https://api.github.com/users/abeyad/events{/privacy}","received_events_url":"https://api.github.com/users/abeyad/received_events","type":"User","site_admin":false},"created_at":"2016-08-29T19:12:08Z","updated_at":"2016-08-29T19:12:08Z","author_association":"CONTRIBUTOR","body":"Actually, restores are still incremental.  The reason is, we only try to restore a file (by calling `restoreFile`) if the file was missing or different in the Lucene store.  For files that exist in the store and are the same (same length / checksum), we do not try calling restoreFile on it (see https://github.com/elastic/elasticsearch/blob/master/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java#L1559).  Hence we would never try to first delete the good file because we would never even attempt a restore in the first place on that file.  \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243241418","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-243241418","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":243241418,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzI0MTQxOA==","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","site_admin":false},"created_at":"2016-08-29T20:14:14Z","updated_at":"2016-08-29T20:14:14Z","author_association":"CONTRIBUTOR","body":"I'm very confused :)  I could swear I saw a test failure because we were in fact attempting to overwrite a pre-existing file here.  Lucene no longer allows that, since it throws an exception as of 6.2.0 vs previously silently overwriting the pre-existing file.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243242761","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-243242761","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":243242761,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzI0Mjc2MQ==","user":{"login":"abeyad","id":1631297,"node_id":"MDQ6VXNlcjE2MzEyOTc=","avatar_url":"https://avatars2.githubusercontent.com/u/1631297?v=4","gravatar_id":"","url":"https://api.github.com/users/abeyad","html_url":"https://github.com/abeyad","followers_url":"https://api.github.com/users/abeyad/followers","following_url":"https://api.github.com/users/abeyad/following{/other_user}","gists_url":"https://api.github.com/users/abeyad/gists{/gist_id}","starred_url":"https://api.github.com/users/abeyad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abeyad/subscriptions","organizations_url":"https://api.github.com/users/abeyad/orgs","repos_url":"https://api.github.com/users/abeyad/repos","events_url":"https://api.github.com/users/abeyad/events{/privacy}","received_events_url":"https://api.github.com/users/abeyad/received_events","type":"User","site_admin":false},"created_at":"2016-08-29T20:19:14Z","updated_at":"2016-08-29T20:19:14Z","author_association":"CONTRIBUTOR","body":"@mikemccand no you are absolutely correct.  Basically, @imotov raised the concern that with your addition of `IOUtils.deleteFilesIgnoringExceptions`, that would delete _all_ files already existing in the store before restoring them, even good copies of files, thereby rendering restores non-incremental.  However, that is not the case because the only files on which we execute `restoreFile` are those for which the file is missing or its different than what is currently in the store.  So we have not lost incremental restores.  And your added delete invocation is needed to first delete those \"different\" files for which we already have a file of the same name but it has a different checksum and/or length.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243243499","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-243243499","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":243243499,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzI0MzQ5OQ==","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","site_admin":false},"created_at":"2016-08-29T20:21:57Z","updated_at":"2016-08-29T20:21:57Z","author_association":"CONTRIBUTOR","body":"Ahh OK I understand; thanks @abeyad.\n\nI think this low level is the wrong place to delete the pre-existing file.  Can't we remove the file at the higher-up-in-the-stack-place that determined that the file is different?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243243928","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-243243928","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":243243928,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzI0MzkyOA==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2016-08-29T20:23:34Z","updated_at":"2016-08-29T20:23:34Z","author_association":"MEMBER","body":"Yep. Sorry for confusion. I guess, we can re-close it then.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243245144","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-243245144","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":243245144,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzI0NTE0NA==","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","site_admin":false},"created_at":"2016-08-29T20:27:56Z","updated_at":"2016-08-29T20:27:56Z","author_association":"CONTRIBUTOR","body":"Hmm do we have a test that would fail if I had in fact broken incremental restore?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243247822","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-243247822","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":243247822,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzI0NzgyMg==","user":{"login":"abeyad","id":1631297,"node_id":"MDQ6VXNlcjE2MzEyOTc=","avatar_url":"https://avatars2.githubusercontent.com/u/1631297?v=4","gravatar_id":"","url":"https://api.github.com/users/abeyad","html_url":"https://github.com/abeyad","followers_url":"https://api.github.com/users/abeyad/followers","following_url":"https://api.github.com/users/abeyad/following{/other_user}","gists_url":"https://api.github.com/users/abeyad/gists{/gist_id}","starred_url":"https://api.github.com/users/abeyad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abeyad/subscriptions","organizations_url":"https://api.github.com/users/abeyad/orgs","repos_url":"https://api.github.com/users/abeyad/repos","events_url":"https://api.github.com/users/abeyad/events{/privacy}","received_events_url":"https://api.github.com/users/abeyad/received_events","type":"User","site_admin":false},"created_at":"2016-08-29T20:37:28Z","updated_at":"2016-08-29T20:37:28Z","author_association":"CONTRIBUTOR","body":"I don't believe we do other than noticing a slow down in restore times.  Its a good idea to add one though will require some work on setting up the test.\n\n@mikemccand I created this small PR that moves the file deletion before trying to restore: https://github.com/elastic/elasticsearch/pull/20220.  I think we don't want to do the deletes at the point of knowing which files are different because we haven't necessarily kicked off the restore process upon making that determination, but this PR allows us to first delete the different files only, then proceed with the restore, as opposed to just trying to delete any file that comes our way before restoring.  I would appreciate your feedback on it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243350576","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-243350576","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":243350576,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzM1MDU3Ng==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-08-30T07:00:01Z","updated_at":"2016-08-30T07:00:01Z","author_association":"CONTRIBUTOR","body":"@abeyad we can close this again right?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243438721","html_url":"https://github.com/elastic/elasticsearch/issues/20148#issuecomment-243438721","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20148","id":243438721,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzQzODcyMQ==","user":{"login":"abeyad","id":1631297,"node_id":"MDQ6VXNlcjE2MzEyOTc=","avatar_url":"https://avatars2.githubusercontent.com/u/1631297?v=4","gravatar_id":"","url":"https://api.github.com/users/abeyad","html_url":"https://github.com/abeyad","followers_url":"https://api.github.com/users/abeyad/followers","following_url":"https://api.github.com/users/abeyad/following{/other_user}","gists_url":"https://api.github.com/users/abeyad/gists{/gist_id}","starred_url":"https://api.github.com/users/abeyad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abeyad/subscriptions","organizations_url":"https://api.github.com/users/abeyad/orgs","repos_url":"https://api.github.com/users/abeyad/repos","events_url":"https://api.github.com/users/abeyad/events{/privacy}","received_events_url":"https://api.github.com/users/abeyad/received_events","type":"User","site_admin":false},"created_at":"2016-08-30T13:29:59Z","updated_at":"2016-08-30T13:29:59Z","author_association":"CONTRIBUTOR","body":"@s1monw yes, i'm closing, we enhanced the implementation of this delete in #20220 \n","performed_via_github_app":null}]