[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/20155133","html_url":"https://github.com/elastic/elasticsearch/issues/3256#issuecomment-20155133","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3256","id":20155133,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTU1MTMz","user":{"login":"Paikan","id":822586,"node_id":"MDQ6VXNlcjgyMjU4Ng==","avatar_url":"https://avatars2.githubusercontent.com/u/822586?v=4","gravatar_id":"","url":"https://api.github.com/users/Paikan","html_url":"https://github.com/Paikan","followers_url":"https://api.github.com/users/Paikan/followers","following_url":"https://api.github.com/users/Paikan/following{/other_user}","gists_url":"https://api.github.com/users/Paikan/gists{/gist_id}","starred_url":"https://api.github.com/users/Paikan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Paikan/subscriptions","organizations_url":"https://api.github.com/users/Paikan/orgs","repos_url":"https://api.github.com/users/Paikan/repos","events_url":"https://api.github.com/users/Paikan/events{/privacy}","received_events_url":"https://api.github.com/users/Paikan/received_events","type":"User","site_admin":false},"created_at":"2013-06-27T21:09:32Z","updated_at":"2013-06-27T21:17:07Z","author_association":"CONTRIBUTOR","body":"I propose to fix this one if nobody in the ES team is working on it.\n\nAs I said on the ML I propose that an update on an expired but not already expunged document should behave like an update on a deleted document so in this particular case it should probably throws a DocumentMissingException.\n\nMaybe the behavior should be the same in the get and mget APIs for the sake of consistency?\n\nBut maybe this is problematic if a to be expunged document is considered missing in the update get and mget APIs but can be accessible through the search APIs before being expunged?\n\nAny thoughts on this?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/20156832","html_url":"https://github.com/elastic/elasticsearch/issues/3256#issuecomment-20156832","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3256","id":20156832,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTU2ODMy","user":{"login":"bradcavanagh","id":73483,"node_id":"MDQ6VXNlcjczNDgz","avatar_url":"https://avatars2.githubusercontent.com/u/73483?v=4","gravatar_id":"","url":"https://api.github.com/users/bradcavanagh","html_url":"https://github.com/bradcavanagh","followers_url":"https://api.github.com/users/bradcavanagh/followers","following_url":"https://api.github.com/users/bradcavanagh/following{/other_user}","gists_url":"https://api.github.com/users/bradcavanagh/gists{/gist_id}","starred_url":"https://api.github.com/users/bradcavanagh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bradcavanagh/subscriptions","organizations_url":"https://api.github.com/users/bradcavanagh/orgs","repos_url":"https://api.github.com/users/bradcavanagh/repos","events_url":"https://api.github.com/users/bradcavanagh/events{/privacy}","received_events_url":"https://api.github.com/users/bradcavanagh/received_events","type":"User","site_admin":false},"created_at":"2013-06-27T21:39:39Z","updated_at":"2013-06-27T21:39:49Z","author_association":"NONE","body":"Keep in mind the solution you come up with needs to work for upserts as well. For an upsert, I would expect the document to be \"recreated\" with only the data that was supplied in the upsert request. That's how I originally found the problem; my Java client does\n\n``` java\nclient.prepareUpdate(index, doctype, key).setDoc(json).setUpsertRequest(json).setRefresh(false)\n                        .setRetryOnConflict(retry).execute().actionGet();\n```\n\nAnd this throws the `ElasticSearchIllegalArgumentException`, even though the `_ttl` field isn't included in the supplied JSON document.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/20156968","html_url":"https://github.com/elastic/elasticsearch/issues/3256#issuecomment-20156968","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3256","id":20156968,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTU2OTY4","user":{"login":"Paikan","id":822586,"node_id":"MDQ6VXNlcjgyMjU4Ng==","avatar_url":"https://avatars2.githubusercontent.com/u/822586?v=4","gravatar_id":"","url":"https://api.github.com/users/Paikan","html_url":"https://github.com/Paikan","followers_url":"https://api.github.com/users/Paikan/followers","following_url":"https://api.github.com/users/Paikan/following{/other_user}","gists_url":"https://api.github.com/users/Paikan/gists{/gist_id}","starred_url":"https://api.github.com/users/Paikan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Paikan/subscriptions","organizations_url":"https://api.github.com/users/Paikan/orgs","repos_url":"https://api.github.com/users/Paikan/repos","events_url":"https://api.github.com/users/Paikan/events{/privacy}","received_events_url":"https://api.github.com/users/Paikan/received_events","type":"User","site_admin":false},"created_at":"2013-06-27T21:42:00Z","updated_at":"2013-06-27T21:42:00Z","author_association":"CONTRIBUTOR","body":"@bradcavanagh yes of course it should behave as if the document has been deleted on every aspect of what is exposed by the update API\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/33517231","html_url":"https://github.com/elastic/elasticsearch/issues/3256#issuecomment-33517231","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3256","id":33517231,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNTE3MjMx","user":{"login":"kaidence","id":1221982,"node_id":"MDQ6VXNlcjEyMjE5ODI=","avatar_url":"https://avatars0.githubusercontent.com/u/1221982?v=4","gravatar_id":"","url":"https://api.github.com/users/kaidence","html_url":"https://github.com/kaidence","followers_url":"https://api.github.com/users/kaidence/followers","following_url":"https://api.github.com/users/kaidence/following{/other_user}","gists_url":"https://api.github.com/users/kaidence/gists{/gist_id}","starred_url":"https://api.github.com/users/kaidence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaidence/subscriptions","organizations_url":"https://api.github.com/users/kaidence/orgs","repos_url":"https://api.github.com/users/kaidence/repos","events_url":"https://api.github.com/users/kaidence/events{/privacy}","received_events_url":"https://api.github.com/users/kaidence/received_events","type":"User","site_admin":false},"created_at":"2014-01-28T19:53:46Z","updated_at":"2014-01-28T19:53:46Z","author_association":"NONE","body":"Hey guys, I ran into the same issue as @bradcavanagh. Is someone taking a look at this? I completely agree that when upserting the old document should be deleted.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/59485672","html_url":"https://github.com/elastic/elasticsearch/issues/3256#issuecomment-59485672","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3256","id":59485672,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDg1Njcy","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-10-17T08:57:00Z","updated_at":"2014-10-17T08:57:00Z","author_association":"CONTRIBUTOR","body":"Hi all\n\nSo expired documents are cleaned up in a bulk request run once every minute, at which time their ttl can be less than zero.  The question is, in this update case, what is the right thing to do?  Reset the TTL?Pretend that the document isn't there?  That would be inconsistent with GET and search.\n\nYou have access to the TTL and timestamp in a scripted update request.  I think the only viable solution here is to write the script to reflect the logic that you want implemented.  If the TTL is low (ie the document will be cleared up soon), then do $x, whatever $x is for your use case.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/59539055","html_url":"https://github.com/elastic/elasticsearch/issues/3256#issuecomment-59539055","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3256","id":59539055,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTM5MDU1","user":{"login":"bradcavanagh","id":73483,"node_id":"MDQ6VXNlcjczNDgz","avatar_url":"https://avatars2.githubusercontent.com/u/73483?v=4","gravatar_id":"","url":"https://api.github.com/users/bradcavanagh","html_url":"https://github.com/bradcavanagh","followers_url":"https://api.github.com/users/bradcavanagh/followers","following_url":"https://api.github.com/users/bradcavanagh/following{/other_user}","gists_url":"https://api.github.com/users/bradcavanagh/gists{/gist_id}","starred_url":"https://api.github.com/users/bradcavanagh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bradcavanagh/subscriptions","organizations_url":"https://api.github.com/users/bradcavanagh/orgs","repos_url":"https://api.github.com/users/bradcavanagh/repos","events_url":"https://api.github.com/users/bradcavanagh/events{/privacy}","received_events_url":"https://api.github.com/users/bradcavanagh/received_events","type":"User","site_admin":false},"created_at":"2014-10-17T16:30:44Z","updated_at":"2014-10-17T16:30:44Z","author_association":"NONE","body":"In this update case the right thing to do is behave as if the document has been deleted because it's the only consistent answer. If you reset the TTL, then you can end up with documents being stored in ES in an arbitrary and non-deterministic manner. If I have supplied a TTL of 60 seconds, I am expecting ES to expire documents after 60 seconds, not (potentially) 119 seconds. If I try to update a document that I know was inserted into ES 90 seconds ago, then this update should always fail.\n\nAs of 0.90.1 this was the case, but the exception thrown was kind of misleading (ElasticSearchIllegalArgumentException shouldn't be the exception thrown, it should be some manner of DocumentMissingException).\n\nRealistically GETs and searches shouldn't return records that have been expired either unless you explicitly ask for them (some kind of \"ignore TTL\" flag in the query maybe) because, well, they're expired! Unless I ask for them I shouldn't have to do client-side filtering because I've already explicitly told ES to expire documents, and I shouldn't have to remember that I'll actually get back more documents than I should.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/59548962","html_url":"https://github.com/elastic/elasticsearch/issues/3256#issuecomment-59548962","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3256","id":59548962,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTQ4OTYy","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-10-17T17:43:56Z","updated_at":"2014-10-17T17:43:56Z","author_association":"CONTRIBUTOR","body":"> Realistically GETs and searches shouldn't return records that have been expired either unless you explicitly ask for them (some kind of \"ignore TTL\" flag in the query maybe) because, well, they're expired! Unless I ask for them I shouldn't have to do client-side filtering because I've already explicitly told ES to expire documents, and I shouldn't have to remember that I'll actually get back more documents than I should.\n\nIn the ideal world, yes.  However, doing this \"just in case\" for every query and GET adds significant overhead, eg we have to run a new range filter once every second, on every single query!  \n\nThis has never been the contract offered by `_ttl`. If a user wants this functionality, then they should implement it application side.  At least that way, they will understand the cost of what they are doing. Better that than impacting performance across the board.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/61026306","html_url":"https://github.com/elastic/elasticsearch/issues/3256#issuecomment-61026306","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3256","id":61026306,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDI2MzA2","user":{"login":"jknewman3","id":6268028,"node_id":"MDQ6VXNlcjYyNjgwMjg=","avatar_url":"https://avatars0.githubusercontent.com/u/6268028?v=4","gravatar_id":"","url":"https://api.github.com/users/jknewman3","html_url":"https://github.com/jknewman3","followers_url":"https://api.github.com/users/jknewman3/followers","following_url":"https://api.github.com/users/jknewman3/following{/other_user}","gists_url":"https://api.github.com/users/jknewman3/gists{/gist_id}","starred_url":"https://api.github.com/users/jknewman3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jknewman3/subscriptions","organizations_url":"https://api.github.com/users/jknewman3/orgs","repos_url":"https://api.github.com/users/jknewman3/repos","events_url":"https://api.github.com/users/jknewman3/events{/privacy}","received_events_url":"https://api.github.com/users/jknewman3/received_events","type":"User","site_admin":false},"created_at":"2014-10-30T00:03:47Z","updated_at":"2014-10-30T00:03:47Z","author_association":"NONE","body":"We've apparently run into this same problem with upserts. In the upsert we are also setting a new non-negative ttl. Rather than throwing the negative ttl error, couldn't elasticsearch just perform the upsert with the new ttl value and resurrect the document.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/61072054","html_url":"https://github.com/elastic/elasticsearch/issues/3256#issuecomment-61072054","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3256","id":61072054,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDcyMDU0","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-10-30T10:33:23Z","updated_at":"2014-10-30T10:33:23Z","author_association":"CONTRIBUTOR","body":"@jknewman3 what version of Elasticsearch are you using, and what exactly does your request look like?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/61166269","html_url":"https://github.com/elastic/elasticsearch/issues/3256#issuecomment-61166269","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3256","id":61166269,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMTY2MjY5","user":{"login":"jknewman3","id":6268028,"node_id":"MDQ6VXNlcjYyNjgwMjg=","avatar_url":"https://avatars0.githubusercontent.com/u/6268028?v=4","gravatar_id":"","url":"https://api.github.com/users/jknewman3","html_url":"https://github.com/jknewman3","followers_url":"https://api.github.com/users/jknewman3/followers","following_url":"https://api.github.com/users/jknewman3/following{/other_user}","gists_url":"https://api.github.com/users/jknewman3/gists{/gist_id}","starred_url":"https://api.github.com/users/jknewman3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jknewman3/subscriptions","organizations_url":"https://api.github.com/users/jknewman3/orgs","repos_url":"https://api.github.com/users/jknewman3/repos","events_url":"https://api.github.com/users/jknewman3/events{/privacy}","received_events_url":"https://api.github.com/users/jknewman3/received_events","type":"User","site_admin":false},"created_at":"2014-10-30T20:44:12Z","updated_at":"2014-10-30T20:44:12Z","author_association":"NONE","body":"We're using 1.2.1. I've requested the code from the developer and will include when I get it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/61298489","html_url":"https://github.com/elastic/elasticsearch/issues/3256#issuecomment-61298489","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3256","id":61298489,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMjk4NDg5","user":{"login":"jknewman3","id":6268028,"node_id":"MDQ6VXNlcjYyNjgwMjg=","avatar_url":"https://avatars0.githubusercontent.com/u/6268028?v=4","gravatar_id":"","url":"https://api.github.com/users/jknewman3","html_url":"https://github.com/jknewman3","followers_url":"https://api.github.com/users/jknewman3/followers","following_url":"https://api.github.com/users/jknewman3/following{/other_user}","gists_url":"https://api.github.com/users/jknewman3/gists{/gist_id}","starred_url":"https://api.github.com/users/jknewman3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jknewman3/subscriptions","organizations_url":"https://api.github.com/users/jknewman3/orgs","repos_url":"https://api.github.com/users/jknewman3/repos","events_url":"https://api.github.com/users/jknewman3/events{/privacy}","received_events_url":"https://api.github.com/users/jknewman3/received_events","type":"User","site_admin":false},"created_at":"2014-10-31T17:39:20Z","updated_at":"2014-11-29T19:18:46Z","author_association":"NONE","body":"Here's the code:\n\n``` java\nfor(Map rec : v.upserts ){\n                    bulkItem = conn.prepareIndex(idx,map,rec.id).setSource(rec.src)\n                    if(rec.ttl) bulkItem.setTTL(rec.ttl)\n                    bulkItem = conn.prepareUpdate(idx,map,rec.id).setDoc(rec.src).setUpsert(bulkItem.request())\n                    if(rec.routing) bulkItem.setRouting(rec.routing)\n                    bulkRequest.add(bulkItem)\n                    records ++\n                }\n```\n\nindex {[apd-v2][accountRelDevice][5492e7ee-10a3-9f42-a458-a9b25b5b0af5], source[{\"acctCode\":\"1001134378145\",\"deviceId\":282539788086975078,\"subscriberId\":586700,\"txnTime\":\"2014-10-31T17:29:20.397Z\"}]}\n\n![image](https://cloud.githubusercontent.com/assets/6268028/4865569/d36eeeb8-6124-11e4-9402-3f74d4b95ef0.png)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/61299559","html_url":"https://github.com/elastic/elasticsearch/issues/3256#issuecomment-61299559","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3256","id":61299559,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMjk5NTU5","user":{"login":"jknewman3","id":6268028,"node_id":"MDQ6VXNlcjYyNjgwMjg=","avatar_url":"https://avatars0.githubusercontent.com/u/6268028?v=4","gravatar_id":"","url":"https://api.github.com/users/jknewman3","html_url":"https://github.com/jknewman3","followers_url":"https://api.github.com/users/jknewman3/followers","following_url":"https://api.github.com/users/jknewman3/following{/other_user}","gists_url":"https://api.github.com/users/jknewman3/gists{/gist_id}","starred_url":"https://api.github.com/users/jknewman3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jknewman3/subscriptions","organizations_url":"https://api.github.com/users/jknewman3/orgs","repos_url":"https://api.github.com/users/jknewman3/repos","events_url":"https://api.github.com/users/jknewman3/events{/privacy}","received_events_url":"https://api.github.com/users/jknewman3/received_events","type":"User","site_admin":false},"created_at":"2014-10-31T17:46:27Z","updated_at":"2014-11-29T19:18:33Z","author_association":"NONE","body":"It's worth noting that I have a perl version that has not been encountering this issue:\n\n``` perl\n                        $bulk->update({\n                            id            => $ard_uuid,\n                            _ttl          => $ttl_ms,\n                            _routing      => $deviceId,\n                            doc           => {\n                                subscriberId     => $subscriberId,\n                                acctCode         => $acctCode,\n                                deviceId         => $deviceId,\n                                txnTime          => $txnTime\n                            },\n                            doc_as_upsert => \"true\"\n                        });\n```\n\nUnfortunately it's the java that needs to work in prod here.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/64955580","html_url":"https://github.com/elastic/elasticsearch/issues/3256#issuecomment-64955580","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3256","id":64955580,"node_id":"MDEyOklzc3VlQ29tbWVudDY0OTU1NTgw","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-11-29T15:43:11Z","updated_at":"2014-11-29T15:43:11Z","author_association":"CONTRIBUTOR","body":"@dadoonet Please could you take a look at the Java code in https://github.com/elasticsearch/elasticsearch/issues/3256#issuecomment-61298489\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/64963409","html_url":"https://github.com/elastic/elasticsearch/issues/3256#issuecomment-64963409","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3256","id":64963409,"node_id":"MDEyOklzc3VlQ29tbWVudDY0OTYzNDA5","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2014-11-29T20:00:55Z","updated_at":"2014-11-29T20:00:55Z","author_association":"MEMBER","body":"@clintongormley I can reproduce the issue.\n\nWhen an upsert request contains a `_ttl`, the ttl is ignored.\n\nFull reproduction:\n\n``` java\n@Test\npublic void upsertWithTtlTest() throws IOException, InterruptedException {\n\n    ImmutableSettings.Builder settings = ImmutableSettings.builder()\n            .put(\"indices.ttl.interval\", \"200ms\")\n            .put(\"indices.ttl.bulk_size\", 1);\n    Client client = nodeBuilder().local(true).settings(settings).node().client();\n\n    // Remove index\n    try {\n        client.admin().indices().prepareDelete(\"ttl\").get();\n    } catch (IndexMissingException e) {\n    }\n\n    // Create a mapping with ttl\n    client.admin().indices().prepareCreate(\"ttl\")\n            .addMapping(\"doc\", jsonBuilder().startObject().startObject(\"doc\")\n                    .startObject(\"_ttl\").field(\"enabled\", true).endObject()\n                    .endObject().endObject())\n            .get();\n\n    IndexRequest indexRequest = new IndexRequest(\"ttl\", \"doc\", \"1\")\n            .source(jsonBuilder().startObject().field(\"foo\", \"bar\").endObject())\n            .ttl(1000L);\n\n    // We just index one document with ttl = 1s\n    BulkRequestBuilder bulk = client.prepareBulk();\n    bulk.add(indexRequest);\n    bulk.setRefresh(true).get();\n\n    SearchResponse response = client.prepareSearch(\"ttl\").get();\n    System.out.println(\"Just after insert, we have \" + response.getHits().getTotalHits() + \" hit\");\n\n    Thread.sleep(2000L);\n\n    response = client.prepareSearch(\"ttl\").get();\n    System.out.println(\"2s after insert, we have \" + response.getHits().getTotalHits() + \" hit\");\n\n    // We create a new bulk\n    bulk = client.prepareBulk();\n    indexRequest = new IndexRequest(\"ttl\", \"doc\", \"2\")\n            .source(jsonBuilder().startObject().field(\"foo\", \"bar\").endObject())\n            .ttl(1000L);\n    UpdateRequest updateRequest = new UpdateRequest(\"ttl\", \"doc\", \"2\")\n            .doc(jsonBuilder().startObject().field(\"fooz\", \"baz\").endObject())\n            .upsert(indexRequest);\n    bulk.add(updateRequest);\n    bulk.setRefresh(true).get();\n\n    response = client.prepareSearch(\"ttl\").get();\n    System.out.println(\"Just after upsert, we have \" + response.getHits().getTotalHits() + \" hit\");\n\n    Thread.sleep(2000L);\n\n    response = client.prepareSearch(\"ttl\").get();\n    System.out.println(\"2s after upsert, we have \" + response.getHits().getTotalHits() + \" hit\");\n}\n```\n\nIt gives:\n\n```\nJust after insert, we have 1 hit\n2s after insert, we have 0 hit\nJust after upsert, we have 1 hit\n2s after upsert, we have 1 hit\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/64993847","html_url":"https://github.com/elastic/elasticsearch/issues/3256#issuecomment-64993847","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3256","id":64993847,"node_id":"MDEyOklzc3VlQ29tbWVudDY0OTkzODQ3","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2014-11-30T18:12:43Z","updated_at":"2014-11-30T18:12:43Z","author_association":"MEMBER","body":"@clintongormley I opened #8715 to fix the ttl problem with upsert.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/65042675","html_url":"https://github.com/elastic/elasticsearch/issues/3256#issuecomment-65042675","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3256","id":65042675,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MDQyNjc1","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-12-01T10:02:29Z","updated_at":"2014-12-01T10:02:29Z","author_association":"CONTRIBUTOR","body":"thanks @dadoonet, then I'll close this issue in favour of #8715\n","performed_via_github_app":null}]