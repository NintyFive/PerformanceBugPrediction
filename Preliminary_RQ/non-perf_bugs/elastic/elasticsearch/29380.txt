{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/29380","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29380/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29380/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29380/events","html_url":"https://github.com/elastic/elasticsearch/issues/29380","id":311377771,"node_id":"MDU6SXNzdWUzMTEzNzc3NzE=","number":29380,"title":"Composite Aggregation runs out of heap space when composite size is too large","user":{"login":"plcstevens","id":2623540,"node_id":"MDQ6VXNlcjI2MjM1NDA=","avatar_url":"https://avatars1.githubusercontent.com/u/2623540?v=4","gravatar_id":"","url":"https://api.github.com/users/plcstevens","html_url":"https://github.com/plcstevens","followers_url":"https://api.github.com/users/plcstevens/followers","following_url":"https://api.github.com/users/plcstevens/following{/other_user}","gists_url":"https://api.github.com/users/plcstevens/gists{/gist_id}","starred_url":"https://api.github.com/users/plcstevens/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/plcstevens/subscriptions","organizations_url":"https://api.github.com/users/plcstevens/orgs","repos_url":"https://api.github.com/users/plcstevens/repos","events_url":"https://api.github.com/users/plcstevens/events{/privacy}","received_events_url":"https://api.github.com/users/plcstevens/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"assignees":[{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2018-04-04T20:24:05Z","updated_at":"2018-05-30T07:48:41Z","closed_at":"2018-05-30T07:48:41Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):\r\n\r\n```\r\n$ elasticsearch --version\r\nVersion: 6.2.3, Build: c59ff00/2018-03-13T10:06:29.741383Z, JVM: 1.8.0_161\r\n```\r\n\r\n**Plugins installed**: \r\n\r\n```\r\n[]\r\n```\r\n\r\n**JVM version** (`java -version`):\r\n\r\n```\r\n$ java -version\r\njava version \"9.0.1\"\r\nJava(TM) SE Runtime Environment (build 9.0.1+11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)\r\n```\r\n\r\n**OS version** (`uname -a` if on a Unix-like system):\r\n\r\n```\r\n$ uname -a\r\nDarwin XXX 17.4.0 Darwin Kernel Version 17.4.0: Sun Dec 17 09:19:54 PST 2017; root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64\r\n```\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nUsing a rather large size value: `1_000_000_000` will lead to a Java OutOfMemory error and crash the ElasticSearch node (on a local machine)\r\n\r\nWhile this number is outrageously large, if you use a multiple number of sources it is easy to lower this and thus hit the out of memory error earlier, even in indexes with very few documents and fields.\r\n\r\nExpectation is that the aggregation would be more intelligent about handling large sizes (either by failing the request or limiting them to the matrix possibilities of sources and documents).\r\n\r\n**Steps to reproduce**:\r\n\r\nexample.json\r\n```JSON\r\n{ \"index\" : { \"_id\" : \"1\" } }\r\n{\"my_field\": \"example a\"}\r\n{ \"index\" : { \"_id\" : \"2\" } }\r\n{\"my_field\": \"example b\"}\r\n```\r\n\r\n1. Bulk insert our data into ElasticSearch, amount unimportant.\r\n\r\n```bash\r\ncurl -s -XPOST 'localhost:9200/my_index/my_type/_bulk?pretty' -H \"Content-Type: application/x-ndjson\" --data-binary @example.json\r\n```\r\n\r\n2. Request a composite aggregation (do not set size), response is as expected.\r\n\r\n```\r\ncurl -s -XPOST 'localhost:9200/my_index/my_type/_search?pretty' -H \"Content-Type: application/json\" -id'\r\n{\r\n  \"size\": 0,\r\n  \"track_total_hits\": false,\r\n  \"aggregations\": {\r\n    \"attributes\": {\r\n      \"composite\": {\r\n        \"sources\": [\r\n          {\r\n            \"my_field\": {\r\n              \"terms\": {\r\n                \"field\": \"my_field.keyword\"\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n'\r\n```\r\n\r\n3. Set an unreasonably high size for the composite bucket, (again only two documents).\r\n\r\n```\r\ncurl -s -XPOST 'localhost:9200/my_index/my_type/_search?pretty' -H \"Content-Type: application/json\" -id'\r\n{\r\n  \"size\": 0,\r\n  \"track_total_hits\": false,\r\n  \"aggregations\": {\r\n    \"attributes\": {\r\n      \"composite\": {\r\n        \"size\": 1000000000,\r\n        \"sources\": [\r\n          {\r\n            \"my_field\": {\r\n              \"terms\": {\r\n                \"field\": \"my_field.keyword\"\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n'\r\n```\r\n\r\n4.  ElasticSearch node will crash if it runs out of heap memory space and throw the log seen below.\r\n\r\n**Provide logs (if relevant)**:\r\n\r\n```\r\n[2018-04-04T21:19:49,478][ERROR][o.e.b.ElasticsearchUncaughtExceptionHandler] [] fatal error in thread [elasticsearch[Q3vBGVN][search][T#5]], exiting\r\njava.lang.OutOfMemoryError: Java heap space\r\n\tat org.elasticsearch.search.aggregations.bucket.composite.CompositeValuesSource$GlobalOrdinalValuesSource.<init>(CompositeValuesSource.java:137) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.search.aggregations.bucket.composite.CompositeValuesSource.wrapGlobalOrdinals(CompositeValuesSource.java:123) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.search.aggregations.bucket.composite.CompositeValuesComparator.<init>(CompositeValuesComparator.java:50) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.search.aggregations.bucket.composite.CompositeAggregator.<init>(CompositeAggregator.java:69) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.search.aggregations.bucket.composite.CompositeAggregationFactory.createInternal(CompositeAggregationFactory.java:52) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.search.aggregations.AggregatorFactory.create(AggregatorFactory.java:216) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.search.aggregations.AggregatorFactories.createTopLevelAggregators(AggregatorFactories.java:216) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.search.aggregations.AggregationPhase.preProcess(AggregationPhase.java:55) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:105) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.indices.IndicesService.lambda$loadIntoContext$14(IndicesService.java:1133) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.indices.IndicesService$$Lambda$1869/1694278624.accept(Unknown Source) ~[?:?]\r\n\tat org.elasticsearch.indices.IndicesService.lambda$cacheShardLevelResult$15(IndicesService.java:1186) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.indices.IndicesService$$Lambda$1870/957087815.get(Unknown Source) ~[?:?]\r\n\tat org.elasticsearch.indices.IndicesRequestCache$Loader.load(IndicesRequestCache.java:160) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.indices.IndicesRequestCache$Loader.load(IndicesRequestCache.java:143) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.common.cache.Cache.computeIfAbsent(Cache.java:412) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.indices.IndicesRequestCache.getOrCompute(IndicesRequestCache.java:116) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.indices.IndicesService.cacheShardLevelResult(IndicesService.java:1192) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.indices.IndicesService.loadIntoContext(IndicesService.java:1132) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:305) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:340) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.search.SearchService$2.onResponse(SearchService.java:316) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.search.SearchService$2.onResponse(SearchService.java:312) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.search.SearchService$3.doRun(SearchService.java:1002) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:672) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.common.util.concurrent.TimedRunnable.doRun(TimedRunnable.java:41) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) ~[elasticsearch-6.2.3.jar:6.2.3]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_161]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_161]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_161]\r\n```","closed_by":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}