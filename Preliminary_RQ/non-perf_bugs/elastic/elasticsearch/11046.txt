{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/11046","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11046/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11046/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11046/events","html_url":"https://github.com/elastic/elasticsearch/issues/11046","id":74075323,"node_id":"MDU6SXNzdWU3NDA3NTMyMw==","number":11046,"title":"Add monitoring for inconsistent doc count between primary and replica shards.","user":{"login":"javadevmtl","id":2964042,"node_id":"MDQ6VXNlcjI5NjQwNDI=","avatar_url":"https://avatars2.githubusercontent.com/u/2964042?v=4","gravatar_id":"","url":"https://api.github.com/users/javadevmtl","html_url":"https://github.com/javadevmtl","followers_url":"https://api.github.com/users/javadevmtl/followers","following_url":"https://api.github.com/users/javadevmtl/following{/other_user}","gists_url":"https://api.github.com/users/javadevmtl/gists{/gist_id}","starred_url":"https://api.github.com/users/javadevmtl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javadevmtl/subscriptions","organizations_url":"https://api.github.com/users/javadevmtl/orgs","repos_url":"https://api.github.com/users/javadevmtl/repos","events_url":"https://api.github.com/users/javadevmtl/events{/privacy}","received_events_url":"https://api.github.com/users/javadevmtl/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-05-07T18:04:14Z","updated_at":"2015-05-08T07:45:50Z","closed_at":"2015-05-08T07:45:50Z","author_association":"NONE","active_lock_reason":null,"body":"Hi I'm running ES 1.5.2.\n\nWhile indexing, a node got disconnected (See exception bellow) and the primary and replica shards got out of sync.\n\nThe _count and query APIs (hits.total) constantly alternated between 2 values. I noticed this because I physically ran a query in sense. By using preference=primary, the right doc count was always returned.\n\nI was wondering maybe there could be a statistic or monitoring value that can maybe set the index state to Yellow when the counts are off between primary and replica shards so we can see it in Marvel/prefered monitoring tool?\n\nNote: Using stunnel to add SSL. haven't evaluated Shield yet.\n\n[2015-05-07 12:04:12,419][DEBUG][action.admin.indices.stats] [MYSERVER 01 (10.0.0.xx6)] [myindex-20150101][3], node[g2kwLV_RA3uDjoZBrPnL2q], [R], s[STARTED]: failed to execute [org.elasticsearch.action.admin.indices.stats.IndicesStatsRequest@2e939ede]\norg.elasticsearch.transport.SendRequestTransportException: [MYSERVER 04 (10.0.0.xx9)][inet[/127.0.0.1:9703]][indices:monitor/stats[s]]\n    at org.elasticsearch.transport.TransportService.sendRequest(TransportService.java:286)\n    at org.elasticsearch.transport.TransportService.sendRequest(TransportService.java:249)\n    at org.elasticsearch.action.support.broadcast.TransportBroadcastOperationAction$AsyncBroadcastAction.performOperation(TransportBroadcastOperationAction.java:183)\n    at org.elasticsearch.action.support.broadcast.TransportBroadcastOperationAction$AsyncBroadcastAction.start(TransportBroadcastOperationAction.java:151)\n    at org.elasticsearch.action.support.broadcast.TransportBroadcastOperationAction.doExecute(TransportBroadcastOperationAction.java:71)\n    at org.elasticsearch.action.support.broadcast.TransportBroadcastOperationAction.doExecute(TransportBroadcastOperationAction.java:47)\n    at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:75)\n    at org.elasticsearch.client.node.NodeIndicesAdminClient.execute(NodeIndicesAdminClient.java:77)\n    at org.elasticsearch.client.FilterClient$IndicesAdmin.execute(FilterClient.java:120)\n    at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient$IndicesAdmin.execute(BaseRestHandler.java:149)\n    at org.elasticsearch.client.support.AbstractIndicesAdminClient.stats(AbstractIndicesAdminClient.java:524)\n    at org.elasticsearch.rest.action.admin.indices.stats.RestIndicesStatsAction.handleRequest(RestIndicesStatsAction.java:104)\n    at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:53)\n    at org.elasticsearch.rest.RestController.executeHandler(RestController.java:225)\n    at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:170)\n    at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:121)\n    at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:83)\n    at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:329)\n    at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:63)\n    at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:60)\n    at org.elasticsearch.common.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.common.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)\n    at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.common.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)\n    at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:296)\n    at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)\n    at org.elasticsearch.common.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)\n    at org.elasticsearch.common.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)\n    at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:74)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:268)\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:255)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)\n    at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)\n    at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)\n    at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)\n    at org.elasticsearch.common.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\n    at org.elasticsearch.common.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: org.elasticsearch.transport.NodeNotConnectedException: [MYSERVER 04 (10.0.0.xx9)][inet[/127.0.0.1:9703]] Node not connected\n    at org.elasticsearch.transport.netty.NettyTransport.nodeChannel(NettyTransport.java:936)\n    at org.elasticsearch.transport.netty.NettyTransport.sendRequest(NettyTransport.java:629)\n    at org.elasticsearch.transport.TransportService.sendRequest(TransportService.java:276)\n    ... 55 more\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}