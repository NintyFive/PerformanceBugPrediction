{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/5175","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5175/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5175/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5175/events","html_url":"https://github.com/elastic/elasticsearch/issues/5175","id":27867210,"node_id":"MDU6SXNzdWUyNzg2NzIxMA==","number":5175,"title":"Highlighting on a wildcard field name uses the same highlighter for all fields that match","user":{"login":"ccw-morris","id":4938858,"node_id":"MDQ6VXNlcjQ5Mzg4NTg=","avatar_url":"https://avatars2.githubusercontent.com/u/4938858?v=4","gravatar_id":"","url":"https://api.github.com/users/ccw-morris","html_url":"https://github.com/ccw-morris","followers_url":"https://api.github.com/users/ccw-morris/followers","following_url":"https://api.github.com/users/ccw-morris/following{/other_user}","gists_url":"https://api.github.com/users/ccw-morris/gists{/gist_id}","starred_url":"https://api.github.com/users/ccw-morris/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ccw-morris/subscriptions","organizations_url":"https://api.github.com/users/ccw-morris/orgs","repos_url":"https://api.github.com/users/ccw-morris/repos","events_url":"https://api.github.com/users/ccw-morris/events{/privacy}","received_events_url":"https://api.github.com/users/ccw-morris/received_events","type":"User","site_admin":false},"labels":[{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":77772642,"node_id":"MDU6TGFiZWw3Nzc3MjY0Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.90.12","name":"v0.90.12","color":"DDDDDD","default":false,"description":null},{"id":70986807,"node_id":"MDU6TGFiZWw3MDk4NjgwNw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.0.1","name":"v1.0.1","color":"dddddd","default":false,"description":null},{"id":75962075,"node_id":"MDU6TGFiZWw3NTk2MjA3NQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.1.0","name":"v1.1.0","color":"DDDDDD","default":false,"description":null},{"id":76184120,"node_id":"MDU6TGFiZWw3NjE4NDEyMA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v2.0.0-beta1","name":"v2.0.0-beta1","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"assignees":[{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2014-02-19T11:18:28Z","updated_at":"2014-02-24T23:27:45Z","closed_at":"2014-02-24T23:27:45Z","author_association":"NONE","active_lock_reason":null,"body":"`HighlightPhase.hitExecute(SearchContext context, HitContext hitContext)`\n\nAssume that the field object represents a wildcard field (i.e. field.field() returns \"*\")\nAssume that the index contains two fields:\nfield_1 with \"index_options\":\"freq\"\nfield_2 with \"index_options\":\"offsets\"\nAssume that a highlighter has not been explicitly specified (i.e. `field.highlighterType()==null`)\n\nThe object fieldNamesToHighlight will contain both of the above field names.\nThe first pass through the for (String fieldName : fieldNamesToHighlight) loop will evaluate the statement: `if (field.highlighterType() == null){}` to true.\nThe block will evaluate the index_options of the first field (from a HashSet, so essentially random choice) to determine the appropriate highlighter. The highlighter will then be set using `field.highlighterType(\"postings\")`.\n\nSubsequent executions of the fieldNamesToHighlight for loop will evaluate the statement: `if (field.highlighterType() == null){}` to false, based on the settings from the first execution.\n\nResult: The highlighter chosen for the (arbitrary) first field will be used for all subsequent fields. If the selected highlighter is not the plain highlighter then there is the potential for the code to throw an IllegalArgumentException due to a mismatch between the highlighter and the indexing options of the field.\n\nThe solution is to treat the user provided configuration (the field object) as immutable. For each iteration of the fieldNamesToHighlight loop, extract field.highlighterType() to a local variable. Test that local variable for null - and set to a selected highlighter as appropriate.\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}