{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/23557","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23557/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23557/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23557/events","html_url":"https://github.com/elastic/elasticsearch/issues/23557","id":213635558,"node_id":"MDU6SXNzdWUyMTM2MzU1NTg=","number":23557,"title":"Java API: IndicesOptions.lenientExpandOpen() required index names to contain \"*\"","user":{"login":"jjbursik","id":11465474,"node_id":"MDQ6VXNlcjExNDY1NDc0","avatar_url":"https://avatars0.githubusercontent.com/u/11465474?v=4","gravatar_id":"","url":"https://api.github.com/users/jjbursik","html_url":"https://github.com/jjbursik","followers_url":"https://api.github.com/users/jjbursik/followers","following_url":"https://api.github.com/users/jjbursik/following{/other_user}","gists_url":"https://api.github.com/users/jjbursik/gists{/gist_id}","starred_url":"https://api.github.com/users/jjbursik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jjbursik/subscriptions","organizations_url":"https://api.github.com/users/jjbursik/orgs","repos_url":"https://api.github.com/users/jjbursik/repos","events_url":"https://api.github.com/users/jjbursik/events{/privacy}","received_events_url":"https://api.github.com/users/jjbursik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-03-12T21:16:44Z","updated_at":"2017-03-21T11:24:10Z","closed_at":"2017-03-21T11:23:41Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version**: 5.1.1\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nUsing aliases to manage indices used for search, I'm unable to ignore closed indices without specifying a wildcard search char (\"*\") in the index name.  Here are my sample SearchRequestBuilders that works and doesn't work:\r\n\r\nWorks:\r\n```\r\nSearchRequestBuilder srb=elasticsearch.getClient().prepareSearch(\"reportsource*\")\r\n                .setIndicesOptions(IndicesOptions.lenientExpandOpen())\r\n                .setSearchType(SearchType.DFS_QUERY_THEN_FETCH)\r\n                .setQuery(functionScoreQueryBuilder)\r\n                .addSort(\"_score\", SortOrder.DESC)\r\n                .setFrom(page * size).setSize(size);\r\n\r\nSearchResponse searchResponse = srb.execute().actionGet();\r\n```\r\n\r\nDoesn't work:\r\n```\r\nSearchRequestBuilder srb=elasticsearch.getClient().prepareSearch(\"reportsource\")\r\n                .setIndicesOptions(IndicesOptions.lenientExpandOpen())\r\n                .setSearchType(SearchType.DFS_QUERY_THEN_FETCH)\r\n                .setQuery(functionScoreQueryBuilder)\r\n                .addSort(\"_score\", SortOrder.DESC)\r\n                .setFrom(page * size).setSize(size);\r\n\r\nSearchResponse searchResponse = srb.execute().actionGet();\r\n```\r\n\r\nI would have expected that I don't need the \"*\" in the index name to ignore closed indices having specified `IndicesOptions.lenientExpandOpen()`.  Using Sense, I don't see the same requirement:\r\n\r\n```\r\nGET reportsource/_search?ignore_unavailable=true,allow_no_indices=true,expand_wildcards_open=true,expand_wildcards_closed=false,allow_alisases_to_multiple_indices=true,forbid_closed_indices=false&pretty&search_type=dfs_query_then_fetch\r\n{\r\n  \"from\" : 0,\r\n  \"size\" : 10,\r\n  \"query\" : {\r\n    \"function_score\" : {\r\n      \"query\" : {\r\n        \"bool\" : {\r\n          \"should\" : [\r\n            {\r\n              \"match\" : {\r\n                \"name.raw\" : {\r\n                  \"query\" : \"Sub Agreement Id\",\r\n                  \"operator\" : \"OR\",\r\n                  \"prefix_length\" : 0,\r\n                  \"max_expansions\" : 50,\r\n                  \"fuzzy_transpositions\" : true,\r\n                  \"lenient\" : false,\r\n                  \"zero_terms_query\" : \"NONE\",\r\n                  \"boost\" : 1.0\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"disable_coord\" : false,\r\n          \"adjust_pure_negative\" : true,\r\n          \"minimum_should_match\" : \"2\",\r\n          \"boost\" : 1.0\r\n        }\r\n      },\r\n      \"functions\" : [\r\n        {\r\n          \"filter\" : {\r\n            \"match_all\" : {\r\n              \"boost\" : 1.0\r\n            }\r\n          },\r\n          \"field_value_factor\" : {\r\n            \"field\" : \"rating\",\r\n            \"factor\" : 1.0,\r\n            \"missing\" : -0.3499999940395355,\r\n            \"modifier\" : \"log2p\"\r\n          }\r\n        }\r\n      ],\r\n      \"score_mode\" : \"multiply\",\r\n      \"boost_mode\" : \"multiply\",\r\n      \"max_boost\" : 2.0,\r\n      \"boost\" : 1.0\r\n    }\r\n  },\r\n  \"ext\" : { }\r\n}\r\n```\r\n\r\n**Steps to reproduce**:\r\n 1. Create 2 indexes, both with aliases \"reportsource\"\r\n 2. Close 1 index\r\n 3. Use the SearchRequestBuilder code above, you can remove the query if needed, and you'll either get an error or not. Error for index closed pasted below.\r\n\r\n**Provide logs (if relevant)**:\r\nError log:\r\n```\r\n2017-03-12 16:05:44.608 ERROR 72028 --- [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is ClusterBlockException[blocked by: [FORBIDDEN/4/index closed];]] with root cause\r\n\r\norg.elasticsearch.cluster.block.ClusterBlockException: blocked by: [FORBIDDEN/4/index closed];\r\n\tat org.elasticsearch.cluster.block.ClusterBlocks.indexBlockedException(ClusterBlocks.java:178) ~[elasticsearch-5.1.1.jar:5.1.1]\r\n\tat org.elasticsearch.cluster.block.ClusterBlocks.indexBlockedRaiseException(ClusterBlocks.java:165) ~[elasticsearch-5.1.1.jar:5.1.1]\r\n\tat org.elasticsearch.action.search.TransportSearchAction.buildPerIndexAliasFilter(TransportSearchAction.java:80) ~[elasticsearch-5.1.1.jar:5.1.1]\r\n\tat org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:101) ~[elasticsearch-5.1.1.jar:5.1.1]\r\n\tat org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:53) ~[elasticsearch-5.1.1.jar:5.1.1]\r\n\tat org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:173) ~[elasticsearch-5.1.1.jar:5.1.1]\r\n\tat org.elasticsearch.action.ingest.IngestActionFilter.apply(IngestActionFilter.java:82) ~[elasticsearch-5.1.1.jar:5.1.1]\r\n\tat org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:171) ~[elasticsearch-5.1.1.jar:5.1.1]\r\n\tat org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:145) ~[elasticsearch-5.1.1.jar:5.1.1]\r\n\tat org.elasticsearch.action.support.HandledTransportAction$TransportHandler.messageReceived(HandledTransportAction.java:64) ~[elasticsearch-5.1.1.jar:5.1.1]\r\n\tat org.elasticsearch.action.support.HandledTransportAction$TransportHandler.messageReceived(HandledTransportAction.java:54) ~[elasticsearch-5.1.1.jar:5.1.1]\r\n\tat org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[elasticsearch-5.1.1.jar:5.1.1]\r\n\tat org.elasticsearch.transport.TcpTransport$RequestHandler.doRun(TcpTransport.java:1385) ~[elasticsearch-5.1.1.jar:5.1.1]\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) ~[elasticsearch-5.1.1.jar:5.1.1]\r\n\tat org.elasticsearch.common.util.concurrent.EsExecutors$1.execute(EsExecutors.java:109) ~[elasticsearch-5.1.1.jar:5.1.1]\r\n\tat org.elasticsearch.transport.TcpTransport.handleRequest(TcpTransport.java:1343) ~[elasticsearch-5.1.1.jar:5.1.1]\r\n\tat org.elasticsearch.transport.TcpTransport.messageReceived(TcpTransport.java:1242) ~[elasticsearch-5.1.1.jar:5.1.1]\r\n\tat org.elasticsearch.transport.netty4.Netty4MessageChannelHandler.channelRead(Netty4MessageChannelHandler.java:74) ~[transport-netty4-client-5.1.1.jar:5.1.1]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:351) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293) ~[netty-codec-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:280) ~[netty-codec-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:396) ~[netty-codec-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248) ~[netty-codec-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:351) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:351) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:651) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:536) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:490) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:450) ~[netty-transport-4.1.6.Final.jar:4.1.6.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873) ~[netty-common-4.1.6.Final.jar:4.1.6.Final]\r\n\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_65]\r\n```\r\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}