{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/8909","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8909/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8909/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8909/events","html_url":"https://github.com/elastic/elasticsearch/issues/8909","id":51734406,"node_id":"MDU6SXNzdWU1MTczNDQwNg==","number":8909,"title":"Completion Suggester Version 2","user":{"login":"areek","id":753679,"node_id":"MDQ6VXNlcjc1MzY3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/753679?v=4","gravatar_id":"","url":"https://api.github.com/users/areek","html_url":"https://github.com/areek","followers_url":"https://api.github.com/users/areek/followers","following_url":"https://api.github.com/users/areek/following{/other_user}","gists_url":"https://api.github.com/users/areek/gists{/gist_id}","starred_url":"https://api.github.com/users/areek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areek/subscriptions","organizations_url":"https://api.github.com/users/areek/orgs","repos_url":"https://api.github.com/users/areek/repos","events_url":"https://api.github.com/users/areek/events{/privacy}","received_events_url":"https://api.github.com/users/areek/received_events","type":"User","site_admin":false},"labels":[{"id":146833729,"node_id":"MDU6TGFiZWwxNDY4MzM3Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Suggesters","name":":Search/Suggesters","color":"0e8a16","default":false,"description":"\"Did you mean\" and suggestions as you type"},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"areek","id":753679,"node_id":"MDQ6VXNlcjc1MzY3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/753679?v=4","gravatar_id":"","url":"https://api.github.com/users/areek","html_url":"https://github.com/areek","followers_url":"https://api.github.com/users/areek/followers","following_url":"https://api.github.com/users/areek/following{/other_user}","gists_url":"https://api.github.com/users/areek/gists{/gist_id}","starred_url":"https://api.github.com/users/areek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areek/subscriptions","organizations_url":"https://api.github.com/users/areek/orgs","repos_url":"https://api.github.com/users/areek/repos","events_url":"https://api.github.com/users/areek/events{/privacy}","received_events_url":"https://api.github.com/users/areek/received_events","type":"User","site_admin":false},"assignees":[{"login":"areek","id":753679,"node_id":"MDQ6VXNlcjc1MzY3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/753679?v=4","gravatar_id":"","url":"https://api.github.com/users/areek","html_url":"https://github.com/areek","followers_url":"https://api.github.com/users/areek/followers","following_url":"https://api.github.com/users/areek/following{/other_user}","gists_url":"https://api.github.com/users/areek/gists{/gist_id}","starred_url":"https://api.github.com/users/areek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areek/subscriptions","organizations_url":"https://api.github.com/users/areek/orgs","repos_url":"https://api.github.com/users/areek/repos","events_url":"https://api.github.com/users/areek/events{/privacy}","received_events_url":"https://api.github.com/users/areek/received_events","type":"User","site_admin":false}],"milestone":null,"comments":11,"created_at":"2014-12-11T20:32:52Z","updated_at":"2015-06-06T18:00:01Z","closed_at":"2015-04-23T04:01:36Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"# Overview\n\nThe main features of the new Completion Suggester are:\n- **Near real-time** - ensures no deleted docs are ever suggested (addresses https://github.com/elasticsearch/elasticsearch/issues/7761), allows returning arbitrary fields as payload \n- **Flexible scoring** - exposed through the new geo scorer (addresses https://github.com/elasticsearch/elasticsearch/issues/6444#issuecomment-64408912, https://github.com/elasticsearch/elasticsearch/issues/4759)\n- **Flexible filtering with categories** - suggestions can be associated with arbitrary categories, `AND` and `OR` operators on categories can be used at query-time. (addreses https://github.com/elasticsearch/elasticsearch/issues/6444)\n\nApart from the features above, the new suggester will be able to return multiple outputs matching an input upon configuration (`duplicate_output`) (addresses https://github.com/elasticsearch/elasticsearch/issues/8129, https://github.com/elasticsearch/elasticsearch/issues/7641, https://github.com/elasticsearch/elasticsearch/issues/4255)\n\nThe new Completion Suggester will be using `NRTSuggester` instead of the previous `XAnalyzingSuggester`.\n\n**Sample use-cases:**\n- **Filtering with categories** - get completion for some prefix for all or any provided `categories`\n- **Flexible scoring (geo)** - get completion for some prefix for all or any provided `categories` sorted by the distance (between provided `score_context` and completion `weight`).\n# Usage\n\n**NOTE:** The API presented is experimental and may change.\n## Mapping\n\n``` bash\ncurl -X PUT localhost:9200/<index>/<type>/_mapping -d '{\n    \"<type>\": {\n        \"properties\": {\n            \"name\": {\n                \"type\": \"string\"\n            },\n            \"suggest\": {\n                \"type\": \"completion\",\n                \"index_analyzer\": \"..\",\n                \"search_analyzer\": “..”,\n                \"preserve_separators\": true | false,\n                \"preserve_position_increments\": true | false,\n                \"duplicate_output\" : true | false, (default: false)\n                \"has_categories\": true | false, (default: false)\n                \"scorer\": \"default\" | \"geo\" (default: \"default\")\n            }\n        }\n    }\n}'\n```\n## Indexing\n### Indexing with `categories` and default `scorer`\n\n``` bash\ncurl -X PUT 'localhost:9200/music/song/1?refresh=true' -d '{\n    \"name\": \"completion_with_default_scorer\",\n    \"suggest\": {\n        \"categories\" : [\"rock\", \"grunge\"]\n        \"input\": [ \"Nevermind\", \"Nirvana\" ],\n        \"output\": \"Nirvana - Nevermind\",\n        \"weight\": 34\n    }\n}'\n```\n### Indexing with `categories` and geo `scorer`\n\n``` bash\ncurl -X PUT 'localhost:9200/places/food/1?refresh=true' -d '{\n    \"name\": \"completion_with_geo_scorer\",\n    \"suggest\": {\n        \"categories\" : [\"cafe\", \"snacks\"]\n        \"input\": [ \"timmis\", \"timhorton\" ],\n        \"output\": \"Tim Hortons\",\n        \"weight\": {\n            \"lat\": ...,\n            \"lon\": ...\n        }\n    }\n}'\n```\n### Indexing with no `categories` and default `scorer`\n\nsame as the current Completion Suggester\n## Querying\n\n**Note:** `payload_template` can have references to one or more fields that will be retrieved at query-time.\n### Querying on suggesters with `categories` and default `scorer`\n\nQuery all completions associated with `category` \"rock\" with payload\n\n``` bash\ncurl -X POST 'localhost:9200/music/_suggest?pretty' -d '{\n    \"song-suggest\" : {\n        \"text\" : \"nir\",\n        \"categories\" : [\"rock\"],\n        \"payload_template\" : \"attr1: {{field1Name}}, attr2: {{field2Name}}\"\n        \"completion\" : {\n            \"field\" : \"suggest\"\n        }\n    }\n}'\n{\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"failed\" : 0\n  },\n  \"song-suggest\" : [ {\n    \"text\" : \"nir\",\n    \"offset\" : 0,\n    \"length\" : 4,\n    \"options\" : [ {\n      \"text\" : \"Nirvana - Nevermind\",\n      \"score\" : 34.0, \n      \"categories\" : [\"rock\"],\n      \"payload\" : \"attr1: field1Value, attr2: field2Value\"\n    } ]\n  } ]\n}\n```\n\nQuery all completions which are either associated with rock `category` or metal `category`.\n**Note:** `category_operation` defaults to \"AND\"\n\n``` bash\ncurl -X POST 'localhost:9200/music/_suggest?pretty' -d '{\n    \"song-suggest\" : {\n        \"text\" : \"nir\",\n        \"categories\" : [\"rock\", \"metal\"],\n        \"category_operation\": \"OR\", \n        \"completion\" : {\n            \"field\" : \"suggest\"\n        }\n    }\n}'\n```\n### Querying on suggesters with `categories` and geo `scorer`\n\nQuery all completions which are associated with `category` \"cafe\" with some `score_context` (e.g. current location). The result will be sorted by the distance of the geo `score` for the completion w.r.t. provided `score_context`\n\n``` bash\ncurl -X POST 'localhost:9200/places/_suggest?pretty' -d '{\n    \"place-suggest\" : {\n        \"text\" : \"tim\",\n        \"categories\" : [\"cafe\"],\n        \"score_context\" : { \"lat\": ..., \"lon\": ... }\n        \"payload_template\" : \"attr1: {{field1Name}}, attr2: {{field2Name}}\"\n        \"completion\" : {\n            \"field\" : \"suggest\"\n        }\n    }\n}'\n{\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"failed\" : 0\n  },\n  \"place-suggest\" : [ {\n    \"text\" : \"tim\",\n    \"offset\" : 0,\n    \"length\" : 4,\n    \"options\" : [ {\n      \"text\" : \"Tim Hortons\",\n      \"score\" : <Distance between `score_context` and `completion score`>, \n      \"categories\" : [\"cafe\"],\n      \"payload\" : \"attr1: field1Value, attr2: field2Value\"\n    } ]\n  } ]\n}\n```\n### Querying on suggesters with no `categories` and default `scorer`\n\nsame as the current Completion Suggester\n# NRTSuggester\n\nThe new Completion Suggester will be using a new `NRTSuggester`. Currently the `NRTSuggester` is under development and is planned to support at least the functionalities described so far.\n\nIn the second phase, the following will be considered:\n- enable 'fuzziness' (edit distance) to influence suggestion scoring (addresses https://github.com/elasticsearch/elasticsearch/issues/4441)\n- [TENTATIVE] experiment with enabling filter support (addresses https://github.com/elasticsearch/elasticsearch/issues/8096)\n# Migration plan\n\nNew Completion Suggester will use a new completion index format under the hood, so some work needs to be done to upgrade from existing completion suggester to the new one. The migration strategy still needs to be decided.\n","closed_by":{"login":"areek","id":753679,"node_id":"MDQ6VXNlcjc1MzY3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/753679?v=4","gravatar_id":"","url":"https://api.github.com/users/areek","html_url":"https://github.com/areek","followers_url":"https://api.github.com/users/areek/followers","following_url":"https://api.github.com/users/areek/following{/other_user}","gists_url":"https://api.github.com/users/areek/gists{/gist_id}","starred_url":"https://api.github.com/users/areek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areek/subscriptions","organizations_url":"https://api.github.com/users/areek/orgs","repos_url":"https://api.github.com/users/areek/repos","events_url":"https://api.github.com/users/areek/events{/privacy}","received_events_url":"https://api.github.com/users/areek/received_events","type":"User","site_admin":false},"performed_via_github_app":null}