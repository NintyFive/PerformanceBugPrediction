{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/24491","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24491/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24491/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24491/events","html_url":"https://github.com/elastic/elasticsearch/issues/24491","id":226309026,"node_id":"MDU6SXNzdWUyMjYzMDkwMjY=","number":24491,"title":"Index service test suite should go through the system","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"labels":[{"id":836542781,"node_id":"MDU6TGFiZWw4MzY1NDI3ODE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Engine","name":":Distributed/Engine","color":"0e8a16","default":false,"description":"Anything around managing Lucene and the Translog in an open shard."},{"id":60445228,"node_id":"MDU6TGFiZWw2MDQ0NTIyOA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest","name":">test","color":"5319e7","default":false,"description":"Issues or PRs that are addressing/adding tests"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-05-04T14:56:52Z","updated_at":"2018-04-26T13:28:15Z","closed_at":"2018-04-26T13:28:15Z","author_association":"MEMBER","active_lock_reason":null,"body":"I discovered this while working on inlining global checkpoints. The IndexServiceTests#testRescheduleAsyncFsync test failed on my branch. The idea behind this test is that we set the translog durability to async, index a document, and then busily check that the translog does not need to be synced. The expectation is that an async fsync task should fire and at some point fsync the translog. This test was passing on master, failing on my branch. It was passing on master for the wrong reason. The problem is that setting durability to async never stuck but were instead on request durability. Thus, a request fsync had already fired so it did not matter if an async fsync never fired. The details of exactly why are explained in cb46e97a046b61a20bc237b9d49fa30d2aef9edf. The reason this fails on my branch is because with inlining global checkpoints, the translog does indeed need another fsync after the replication operation completes because we persist the global checkpoint into the translog checkpoint. Since we were stuck on request durability, this fsync never fired and the test failed.\r\n\r\nI pushed cb46e97a046b61a20bc237b9d49fa30d2aef9edf to fix this test so the test goes through the system and the async durability setting sticks. There are other tests in this test suite doing the same thing. I think that should be updated, but I would rather spend my immediate time on inlining global checkpoints so this issue is a placeholder for addressing these tests in the future.","closed_by":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"performed_via_github_app":null}