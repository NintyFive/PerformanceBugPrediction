{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/23957","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23957/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23957/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23957/events","html_url":"https://github.com/elastic/elasticsearch/issues/23957","id":220052934,"node_id":"MDU6SXNzdWUyMjAwNTI5MzQ=","number":23957,"title":"score_mode max not working on nested score function","user":{"login":"KellyBennett","id":4806426,"node_id":"MDQ6VXNlcjQ4MDY0MjY=","avatar_url":"https://avatars2.githubusercontent.com/u/4806426?v=4","gravatar_id":"","url":"https://api.github.com/users/KellyBennett","html_url":"https://github.com/KellyBennett","followers_url":"https://api.github.com/users/KellyBennett/followers","following_url":"https://api.github.com/users/KellyBennett/following{/other_user}","gists_url":"https://api.github.com/users/KellyBennett/gists{/gist_id}","starred_url":"https://api.github.com/users/KellyBennett/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KellyBennett/subscriptions","organizations_url":"https://api.github.com/users/KellyBennett/orgs","repos_url":"https://api.github.com/users/KellyBennett/repos","events_url":"https://api.github.com/users/KellyBennett/events{/privacy}","received_events_url":"https://api.github.com/users/KellyBennett/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-04-06T22:34:07Z","updated_at":"2017-04-07T19:39:31Z","closed_at":"2017-04-07T19:39:31Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\nGitHub is reserved for bug reports and feature requests. The best place\r\nto ask a general question is at the Elastic Discourse forums at\r\nhttps://discuss.elastic.co. If you are in fact posting a bug report or\r\na feature request, please include one and only one of the below blocks\r\nin your new issue. Note that whether you're filing a bug report or a\r\nfeature request, ensure that your submission is for an\r\n[OS that we support](https://www.elastic.co/support/matrix#show_os).\r\nBug reports on an OS that we do not support or feature requests\r\nspecific to an OS that we do not support will be closed.\r\n-->\r\n\r\n<!--\r\nIf you are filing a bug report, please remove the below feature\r\nrequest block and provide responses for all of the below items.\r\n-->\r\n\r\n**Elasticsearch version**:\r\n 5.1.2\r\n**Plugins installed**: []\r\n\r\n**JVM version**:\r\nusing docker image \"ES_JAVA_OPTS=-Xms256m -Xmx256m\"\r\n\r\n**OS version**:\r\nusing docker image \"ES_JAVA_OPTS=-Xms256m -Xmx256m\"\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nGoal: Return stores ranked by 2 factors (A: a gauss decay function which scores a store on it's distance from a lat long. B: Multiply (A:) by 1 or 100; 1 if none of the store's specials match a criteria, 100 if one (or more) of the store's specials match a criteria.\r\n\r\nExample:\r\n\r\nsay I have stores described by this sudo-data;\r\n    \r\n    Steve's store\r\n      -Special (does not match criteria)\r\n      -Special (does not match criteria)\r\n      -Special (does match criteria)\r\n    -Location (somewhere near the given lat long)\r\n\r\n\r\n    Bob's store\r\n      -Special (does not match criteria)\r\n      -Special (does not match criteria)\r\n    -Location (somewhere near the given lat long)\r\n\r\n    Sally's store\r\n      -Special (does match criteria)\r\n      -Special (does match criteria)\r\n      -Special (does match criteria)\r\n    -Location (somewhere far away from the given lat long)\r\n\r\n\r\nThen, steve's store should have a score of something like 89.2933, Bob's store should have a score of something like 89.23223, Sally's should have a score like 12.1\r\n\r\nMapping:\r\n\r\n    {\r\n    \"store\": {\r\n    \"properties\": {\r\n      \"explain\": {\r\n        \"type\": \"boolean\"\r\n      },\r\n      \"specials\": {\r\n        \"type\": \"nested\",\r\n        \"properties\": {\r\n          \"end_date\": {\r\n            \"type\": \"date\"\r\n          },\r\n          \"store_id\": {\r\n            \"analyzer\": \"lowercase_keyword\",\r\n            \"type\": \"text\",\r\n            \"fields\": {\r\n              \"raw\": {\r\n                \"type\": \"keyword\"\r\n              }\r\n            }\r\n          },\r\n          \"image_url\": {\r\n            \"type\": \"keyword\"\r\n          },\r\n          \"details\": {\r\n            \"type\": \"keyword\"\r\n          },\r\n          \"id\": {\r\n            \"analyzer\": \"lowercase_keyword\",\r\n            \"type\": \"text\",\r\n            \"fields\": {\r\n              \"raw\": {\r\n                \"type\": \"keyword\"\r\n              }\r\n            }\r\n          },\r\n          \"title\": {\r\n            \"type\": \"keyword\"\r\n          },\r\n          \"fine_print\": {\r\n            \"type\": \"keyword\"\r\n          },\r\n          \"order\": {\r\n            \"type\": \"integer\"\r\n          },\r\n          \"start_date\": {\r\n            \"type\": \"date\"\r\n          }\r\n        }\r\n      },\r\n      \"city\": {\r\n        \"type\": \"keyword\"\r\n      },\r\n      \"logo_image_url\": {\r\n        \"type\": \"keyword\"\r\n      },\r\n      \"cover_image_url\": {\r\n        \"type\": \"keyword\"\r\n      },\r\n      \"number_of_reviews\": {\r\n        \"type\": \"integer\"\r\n      },\r\n      \"tag_line\": {\r\n        \"type\": \"keyword\"\r\n      },\r\n      \"address2\": {\r\n        \"type\": \"keyword\"\r\n      },\r\n      \"address1\": {\r\n        \"type\": \"keyword\"\r\n      },\r\n      \"phone\": {\r\n        \"type\": \"keyword\"\r\n      }… and so on.\r\n\r\nQuery:\r\n\r\n    POST stores/store/_search\r\n    { \r\n      \"query\": {\r\n            \"function_score\": {\r\n              \"functions\": [\r\n                {\r\n                  \"gauss\": {\r\n                    \"location\": {\r\n                      \"scale\": \"8mi\",\r\n                      \"origin\": \"47.1338379197262,-122.266475055481\",\r\n                      \"decay\": 0.5\r\n                    }\r\n                  }\r\n                }\r\n              ],\r\n              \"query\": {\r\n                \"bool\": {\r\n                  \"must\": [\r\n                    {\r\n                      \"nested\": {\r\n                        \"path\": \"specials\",\r\n                        \"query\": {\r\n                          \"function_score\": {\r\n                            \"query\": {\r\n                              \"bool\": {\r\n                                \"must_not\": [\r\n                                  {\r\n                                    \"range\": {\r\n                                      \"specials.start_date\": {\r\n                                        \"gt\": \"now\"\r\n                                      }\r\n                                    }\r\n                                  },\r\n                                  {\r\n                                    \"range\": {\r\n                                      \"specials.end_date\": {\r\n                                        \"lt\": \"now\"\r\n                                      }\r\n                                    }\r\n                                  }\r\n                                ]\r\n                              }\r\n                            },\r\n                            \"boost_mode\": \"replace\",\r\n                            \"score_mode\": \"max\", \r\n                            \"functions\": [\r\n                              {\r\n                                \"script_score\": {\r\n                                  \r\n                                  \"script\": {\r\n                                    \"lang\": \"painless\",\r\n                                    \"inline\": \"<my_script>\"\r\n                                  }\r\n                                }\r\n                              }\r\n                            ]\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  ]\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\nResulting explain json (relevant part):\r\n    \r\n```\r\n     …{\r\n         \"value\": 12,\r\n         \"description\": \"Score based on 9 child docs in range from 24064 to 24072, best match:\",\r\n        \"details\": [\r\n            {\r\n             \"value\": 100,\r\n             \"description\": \"sum of:\",\r\n             \"details\": [\r\n                  {\r\n                   \"value\": 100,\r\n                   \"description\": \"min of:\",\r\n                   \"details\": [\r\n                       {\r\n                        \"value\": 100,\r\n                        \"description\": \"script score function, computed with script:\\\"<my_script>\" and parameters: \\n{}\",\r\n                         \"details\": [\r\n                                    {\r\n                                      \"value\": 0,\r\n                                      \"description\": \"_score: \",\r\n                                      \"details\": [\r\n                                        {\r\n                                          \"value\": 0,\r\n                                          \"description\": \"sum of:\",\r\n                                          \"details\": [\r\n                                            {\r\n                                              \"value\": 0,\r\n                                              \"description\": \"match on required clause, product of:\",\r\n                                              \"details\": [\r\n                                                {\r\n                                                  \"value\": 0,\r\n                                                  \"description\": \"# clause\",\r\n                                                  \"details\": []\r\n                                                },\r\n                                                {\r\n                                                  \"value\": 1,\r\n                                                  \"description\": \"*:*, product of:\",\r\n                                                  \"details\": [\r\n                                                    {\r\n                                                      \"value\": 1,\r\n                                                      \"description\": \"boost\",\r\n                                                      \"details\": []\r\n                                                    },\r\n                                                    {\r\n                                                      \"value\": 1,\r\n                                                      \"description\": \"queryNorm\",\r\n                                                      \"details\": []\r\n                                                    }\r\n                                                  ]\r\n                                                }\r\n                                              ]\r\n                                            }\r\n                                          ]\r\n                                        }\r\n                                      ]\r\n                                    }\r\n                                  ]\r\n                                },\r\n                                {\r\n                                  \"value\": 3.4028235e+38,\r\n                                  \"description\": \"maxBoost\",\r\n                                  \"details\": []\r\n                                }\r\n                              ]\r\n                              …\r\n```\r\n\r\nMy Script:\r\n    100 if some criteria is met in a \"special\", 1 otherwise.\r\n\r\nResult:\r\n\r\nThe score for that script function is 12 (because the store has 9 specials, only one of which matches the score script's criteria)— so that 12 is coming from (100+1+1+1+1+1+1+1+1)/9=12. That is multiplied by the score for the gauss distance decay function (0.36248797) to equal `4.7596407`. In other words, the script score ends up being an average of all the store's specials. \r\n\r\nExpected: \r\n\r\nI'd expect/desire for the script functions score to score the store by taking the max from the script score function applied to each special of a store. So in the above example, because the store has 1 special that matches the script's condition, that special should be scored 100. That 100 is the max of all scores for all specials in that store, since the other 8 that don't match the criteria. So that 100 should be multiplied by the gauss decay function to result in 0.36248797 * 100 = 36.248797\r\n\r\nIs this a bug, or am I doing something wrong? \r\n\r\n\r\nMany, many thanks!\r\n","closed_by":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}