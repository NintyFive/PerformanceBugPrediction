{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/5337","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5337/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5337/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5337/events","html_url":"https://github.com/elastic/elasticsearch/issues/5337","id":28730578,"node_id":"MDU6SXNzdWUyODczMDU3OA==","number":5337,"title":"A Match Query against a boolean field returns a result","user":{"login":"ericdcobb","id":2038069,"node_id":"MDQ6VXNlcjIwMzgwNjk=","avatar_url":"https://avatars2.githubusercontent.com/u/2038069?v=4","gravatar_id":"","url":"https://api.github.com/users/ericdcobb","html_url":"https://github.com/ericdcobb","followers_url":"https://api.github.com/users/ericdcobb/followers","following_url":"https://api.github.com/users/ericdcobb/following{/other_user}","gists_url":"https://api.github.com/users/ericdcobb/gists{/gist_id}","starred_url":"https://api.github.com/users/ericdcobb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ericdcobb/subscriptions","organizations_url":"https://api.github.com/users/ericdcobb/orgs","repos_url":"https://api.github.com/users/ericdcobb/repos","events_url":"https://api.github.com/users/ericdcobb/events{/privacy}","received_events_url":"https://api.github.com/users/ericdcobb/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-03-04T18:51:53Z","updated_at":"2014-03-05T20:36:16Z","closed_at":"2014-03-05T20:36:16Z","author_association":"NONE","active_lock_reason":null,"body":"Using version 0.90.5.\n\nSupplying a string in a match query against a boolean type field with its value set to 'true' will return a hit if the query is a non-empty string. \n\nIn the following example,  the first query returns a result, the second does not.\n\n```\nPUT /test/test/1\n{\n    \"hello\" : true\n}\n\nPOST /test/_search \n{\n    \"query\": {\n        \"bool\": {\n            \"minimum_number_should_match\": 1,\n            \"should\": [\n               {\"match\": {\n                  \"hello\": \"foo\"\n               }}\n            ]\n        }\n    }\n}\n\nPOST /test/_search \n{\n    \"query\": {\n        \"bool\": {\n            \"minimum_number_should_match\": 1,\n            \"should\": [\n               {\"match\": {\n                  \"hello\": \"\"\n               }}\n            ]\n        }\n    }\n}\n```\n\nObviously this is a really dumb query :smile: .We are fixing our client to not build queries like this. This does seem like odd behavior though. \n","closed_by":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"performed_via_github_app":null}