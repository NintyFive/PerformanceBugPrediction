{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/31009","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31009/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31009/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31009/events","html_url":"https://github.com/elastic/elasticsearch/issues/31009","id":328208447,"node_id":"MDU6SXNzdWUzMjgyMDg0NDc=","number":31009,"title":"Painless: Roadmap","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"labels":[{"id":146834791,"node_id":"MDU6TGFiZWwxNDY4MzQ3OTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Scripting","name":":Core/Infra/Scripting","color":"0e8a16","default":false,"description":"Scripting abstractions, Painless, and Mustache"},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"assignees":[{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},{"login":"stu-elastic","id":24232742,"node_id":"MDQ6VXNlcjI0MjMyNzQy","avatar_url":"https://avatars0.githubusercontent.com/u/24232742?v=4","gravatar_id":"","url":"https://api.github.com/users/stu-elastic","html_url":"https://github.com/stu-elastic","followers_url":"https://api.github.com/users/stu-elastic/followers","following_url":"https://api.github.com/users/stu-elastic/following{/other_user}","gists_url":"https://api.github.com/users/stu-elastic/gists{/gist_id}","starred_url":"https://api.github.com/users/stu-elastic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stu-elastic/subscriptions","organizations_url":"https://api.github.com/users/stu-elastic/orgs","repos_url":"https://api.github.com/users/stu-elastic/repos","events_url":"https://api.github.com/users/stu-elastic/events{/privacy}","received_events_url":"https://api.github.com/users/stu-elastic/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2018-05-31T16:22:54Z","updated_at":"2019-12-05T18:47:09Z","closed_at":"2019-12-05T18:47:08Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"This issue is to track all upcoming feature/refactor work on the Painless project.\r\n\r\n* [ ]  (1) Documentation - Improved documentation including getting started guide, Painless specification, API, available contexts, and examples. (jdconrad)  (in progress) (https://github.com/elastic/elasticsearch/issues/23777)\r\n* [x] (1) Types Removal - Replace the Painless Type with Java Class to reduce code complexity and be able to potentially take advantage of Java's upcoming value types. (jdconrad) (https://github.com/elastic/elasticsearch/pull/27847) (https://github.com/elastic/elasticsearch/pull/28329) (https://github.com/elastic/elasticsearch/pull/28346) (https://github.com/elastic/elasticsearch/pull/28364) (https://github.com/elastic/elasticsearch/pull/28429) (https://github.com/elastic/elasticsearch/pull/28433) (https://github.com/elastic/elasticsearch/pull/28466) (https://github.com/elastic/elasticsearch/pull/28471) (https://github.com/elastic/elasticsearch/pull/31699) \r\n* [ ] (5) Jar Separation - Separate Painless into it's own jar for consumption within other projects. (rjernst/jdconrad)\r\n* [ ] (2) Multi-pass Compiler - Restructure compilation into a larger amount of passes doing a smaller amount of work.  Also allow for custom passes/nodes.  (jdconrad)\r\n* [ ] (3) Safety Features - Improved safety features to prevent runaway loops and large memory allocations. (https://github.com/elastic/elasticsearch/issues/30139)\r\n* [ ] (5) Benchmarks - Improved benchmarking allowing for individual scripts to compared against each other with changes to the compiler.\r\n* [x] (1) Bindings - Add ability to cache values for certain methods when the values are read-only. (jdconrad) (in progress) (https://github.com/elastic/elasticsearch/pull/33042) (https://github.com/elastic/elasticsearch/pull/33274) (https://github.com/elastic/elasticsearch/pull/33440) (https://github.com/elastic/elasticsearch/pull/33865) (https://github.com/elastic/elasticsearch/pull/34370) (https://github.com/elastic/elasticsearch/pull/34410) (https://github.com/elastic/elasticsearch/pull/34424)\r\n* [ ] (3) Factory Refactor - Clean up the code used to generate the factories for contexts. (jdconrad)\r\n* [x] (2) Definition Refactor - Clean up definition to have default types and data structures that make more sense. (jdconrad) (https://github.com/elastic/elasticsearch/pull/31879) (https://github.com/elastic/elasticsearch/pull/32017) (https://github.com/elastic/elasticsearch/pull/32105) (https://github.com/elastic/elasticsearch/pull/32110) (https://github.com/elastic/elasticsearch/pull/32141) (https://github.com/elastic/elasticsearch/pull/32142) (https://github.com/elastic/elasticsearch/pull/32177) (https://github.com/elastic/elasticsearch/pull/32258) (https://github.com/elastic/elasticsearch/pull/32305) (https://github.com/elastic/elasticsearch/pull/32346) (https://github.com/elastic/elasticsearch/pull/32441) (https://github.com/elastic/elasticsearch/pull/32447) (https://github.com/elastic/elasticsearch/pull/32476) (https://github.com/elastic/elasticsearch/pull/32525) (https://github.com/elastic/elasticsearch/pull/32565) (https://github.com/elastic/elasticsearch/pull/32599) (https://github.com/elastic/elasticsearch/pull/32644) (https://github.com/elastic/elasticsearch/pull/32689) (https://github.com/elastic/elasticsearch/pull/32754) (https://github.com/elastic/elasticsearch/pull/32791) (https://github.com/elastic/elasticsearch/pull/32817) (https://github.com/elastic/elasticsearch/pull/33963)\r\n* [ ] (3) Improved Debugging - Add improved debugging features.\r\n* [ ] (3) Better Error Messages - Most of the error messages in Painless that get hit are fairly abstract and could use improvement.\r\n* [ ]  (6) IDE Support - Exploration of adding an IDE support in Elipse/Intellij for Painless scripts or possibly Kibana.\r\n* [x] (2) Improved Contexts - Refactor existing contexts to give them the appropriate types/variables and whitelists along with adding new ones where necessary. (rjernst)\r\n* [ ] (3) Grammar Improvements - Refactor the grammar to remove the need for type context/regex context if possible. (jdconrad)\r\n* [ ] (4) Template Language - Make Painless a JSON friendly template language.  (https://github.com/elastic/elasticsearch/issues/24529)\r\n* [ ] (5) Whitelist Versioning - Explore ideas for how to properly deprecate classes/methods from the whitelist.\r\n* [ ] ~~(5) Internal Methods - Explore ideas for how to enable/disable internal methods within the whitelist.~~\r\n* [x] (2) Script Size - Make the size of a script based on the context its run in. (https://github.com/elastic/elasticsearch/pull/35184)\r\n* [ ] (2) Documentation API - Create a REST API to return information about a specified context's available classes, methods, and fields along the execute method signature.  Create a gradle task to convert these to a nicely documented API.\r\n* [ ] ~~(3) JSON AST - Create a version of the Painless AST in JSON that is easy to pass over a wire.~~\r\n* [x] (2) Casting Consistency - Make casts in Painless have symmetry and consistency. (jdconrad) (https://github.com/elastic/elasticsearch/pull/36097) (https://github.com/elastic/elasticsearch/pull/36455) (https://github.com/elastic/elasticsearch/pull/36506) (https://github.com/elastic/elasticsearch/pull/36571) (https://github.com/elastic/elasticsearch/pull/36747) (https://github.com/elastic/elasticsearch/pull/36804) (https://github.com/elastic/elasticsearch/pull/36945)\r\n* [x] (3) Dynamic Map Access - Create a utility method to allow maps to be accessed across multiple levels using a String with a dot delimiter from params. (stu-elastic) (https://github.com/elastic/elasticsearch/pull/43606) \r\n* [ ] (3) Read Only Variables - Allow variables passed into Painless to be read-only to allow for more efficient usage.","closed_by":{"login":"stu-elastic","id":24232742,"node_id":"MDQ6VXNlcjI0MjMyNzQy","avatar_url":"https://avatars0.githubusercontent.com/u/24232742?v=4","gravatar_id":"","url":"https://api.github.com/users/stu-elastic","html_url":"https://github.com/stu-elastic","followers_url":"https://api.github.com/users/stu-elastic/followers","following_url":"https://api.github.com/users/stu-elastic/following{/other_user}","gists_url":"https://api.github.com/users/stu-elastic/gists{/gist_id}","starred_url":"https://api.github.com/users/stu-elastic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stu-elastic/subscriptions","organizations_url":"https://api.github.com/users/stu-elastic/orgs","repos_url":"https://api.github.com/users/stu-elastic/repos","events_url":"https://api.github.com/users/stu-elastic/events{/privacy}","received_events_url":"https://api.github.com/users/stu-elastic/received_events","type":"User","site_admin":false},"performed_via_github_app":null}