{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/39666","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39666/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39666/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39666/events","html_url":"https://github.com/elastic/elasticsearch/issues/39666","id":416958683,"node_id":"MDU6SXNzdWU0MTY5NTg2ODM=","number":39666,"title":"High level REST client parameters look wrong due indirectness and side effects","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"labels":[{"id":493198109,"node_id":"MDU6TGFiZWw0OTMxOTgxMDk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Java%20High%20Level%20REST%20Client","name":":Core/Features/Java High Level REST Client","color":"0e8a16","default":false,"description":"Expressive Java Client for Elasticsearch"},{"id":837440720,"node_id":"MDU6TGFiZWw4Mzc0NDA3MjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Erefactoring","name":">refactoring","color":"dddddd","default":false,"description":null},{"id":92913858,"node_id":"MDU6TGFiZWw5MjkxMzg1OA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/good%20first%20issue","name":"good first issue","color":"07569b","default":true,"description":"low hanging fruit"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2019-03-04T19:33:49Z","updated_at":"2019-05-29T20:59:42Z","closed_at":"2019-05-29T20:59:42Z","author_association":"MEMBER","active_lock_reason":null,"body":"Using the high-level request client, this is how code to build a request with parameters appears today:\r\n\r\n```java\r\n        final Request request = new Request(HttpPut.METHOD_NAME, endpoint);\r\n        final RequestConverters.Params parameters = new RequestConverters.Params(request);\r\n        parameters.withWaitForActiveShards(putFollowRequest.waitForActiveShards());\r\n        request.setEntity(createEntity(putFollowRequest, REQUEST_BODY_CONTENT_TYPE));\r\n```\r\n\r\nThis looks wrong because `parameters` appears to be unused. That is, we create a `RequestConverter.Params` object, mutate it, and then it appears nothing happens to it. This code is not broken though, because what is happening behind the scenes is that `request` is being mutated when methods on `parameters` are invoked. This indirectness and methods having side effects on another object lead to code that does not appear correct at first glance, and is more confusing than it should be; it looks wrong. Instead, I propose an alternative like:\r\n\r\n```java\r\n        final Request request = new Request(HttpPut.METHOD_NAME, endpoint);\r\n        RequestConverters.Params parameters = new RequestConverters.Params();\r\n        parameters.withWaitForActiveShards(putFollowRequest.waitForActiveShards());\r\n        request.setParameters(parameters);\r\n        request.setEntity(createEntity(putFollowRequest, REQUEST_BODY_CONTENT_TYPE));\r\n```\r\n\r\nThis makes apparent that the `parameters` are actually used, and that they have an effect on the `request` object through explicit invocation. I believe this makes it more transparent what is occurring.","closed_by":{"login":"gwbrown","id":1522844,"node_id":"MDQ6VXNlcjE1MjI4NDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1522844?v=4","gravatar_id":"","url":"https://api.github.com/users/gwbrown","html_url":"https://github.com/gwbrown","followers_url":"https://api.github.com/users/gwbrown/followers","following_url":"https://api.github.com/users/gwbrown/following{/other_user}","gists_url":"https://api.github.com/users/gwbrown/gists{/gist_id}","starred_url":"https://api.github.com/users/gwbrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gwbrown/subscriptions","organizations_url":"https://api.github.com/users/gwbrown/orgs","repos_url":"https://api.github.com/users/gwbrown/repos","events_url":"https://api.github.com/users/gwbrown/events{/privacy}","received_events_url":"https://api.github.com/users/gwbrown/received_events","type":"User","site_admin":false},"performed_via_github_app":null}