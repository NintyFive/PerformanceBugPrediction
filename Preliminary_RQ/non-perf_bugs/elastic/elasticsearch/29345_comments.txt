[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/378160942","html_url":"https://github.com/elastic/elasticsearch/issues/29345#issuecomment-378160942","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29345","id":378160942,"node_id":"MDEyOklzc3VlQ29tbWVudDM3ODE2MDk0Mg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-04-03T07:52:59Z","updated_at":"2018-04-03T07:52:59Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/378209543","html_url":"https://github.com/elastic/elasticsearch/issues/29345#issuecomment-378209543","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29345","id":378209543,"node_id":"MDEyOklzc3VlQ29tbWVudDM3ODIwOTU0Mw==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2018-04-03T10:53:53Z","updated_at":"2018-04-03T10:53:53Z","author_association":"MEMBER","body":"@aurimasplu I have not been able to reproduce this bug. I tried with the following script which is based on the information you provided but with a few modifications to get it to work (your query uses a ` @timestamp` field that doesn't exist in your hits because of source filtering in your request) and some assumptions:\r\n1. That your `tag` and `interface` fields are object fields and not nested fields\r\n2. That `interface.ifHCInOctets` is a long field\r\n3. That `tag.ifDescr` and `tag.agent_host` are keyword fields\r\n\r\n* Could you provide the mappings for this index so we can validate the assumptions above?\r\n* Could you try my script on your system to see if you can reproduce the bug with my script?\r\n* Could you modify my script so it does reproduce the bug?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/378242915","html_url":"https://github.com/elastic/elasticsearch/issues/29345#issuecomment-378242915","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29345","id":378242915,"node_id":"MDEyOklzc3VlQ29tbWVudDM3ODI0MjkxNQ==","user":{"login":"aurimasplu","id":33485896,"node_id":"MDQ6VXNlcjMzNDg1ODk2","avatar_url":"https://avatars0.githubusercontent.com/u/33485896?v=4","gravatar_id":"","url":"https://api.github.com/users/aurimasplu","html_url":"https://github.com/aurimasplu","followers_url":"https://api.github.com/users/aurimasplu/followers","following_url":"https://api.github.com/users/aurimasplu/following{/other_user}","gists_url":"https://api.github.com/users/aurimasplu/gists{/gist_id}","starred_url":"https://api.github.com/users/aurimasplu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aurimasplu/subscriptions","organizations_url":"https://api.github.com/users/aurimasplu/orgs","repos_url":"https://api.github.com/users/aurimasplu/repos","events_url":"https://api.github.com/users/aurimasplu/events{/privacy}","received_events_url":"https://api.github.com/users/aurimasplu/received_events","type":"User","site_admin":false},"created_at":"2018-04-03T13:05:58Z","updated_at":"2018-04-03T13:05:58Z","author_association":"NONE","body":"Hi @colings86 , thanks for quick answer. \r\nIt might be that you are right regarding field type as these metrics are 64 bit counters, they should be long but right now they are float. We will do remapping today and will see how it goes.\r\nRegarding the script I do not see anything attached :) \r\n\r\nHere is whole index mapping:\r\n```\r\n\r\n{\r\n    \"test-index-2018.04.03\": {\r\n        \"aliases\": {},\r\n        \"mappings\": {\r\n            \"metrics\": {\r\n                \"_all\": {\r\n                    \"enabled\": false\r\n                },\r\n                \"dynamic_templates\": [\r\n                    {\r\n                        \"tags\": {\r\n                            \"path_match\": \"tag.*\",\r\n                            \"match_mapping_type\": \"string\",\r\n                            \"mapping\": {\r\n                                \"ignore_above\": 512,\r\n                                \"type\": \"keyword\"\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"metrics_long\": {\r\n                            \"match_mapping_type\": \"long\",\r\n                            \"mapping\": {\r\n                                \"index\": false,\r\n                                \"type\": \"float\"\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"metrics_double\": {\r\n                            \"match_mapping_type\": \"double\",\r\n                            \"mapping\": {\r\n                                \"index\": false,\r\n                                \"type\": \"float\"\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"text_fields\": {\r\n                            \"match\": \"*\",\r\n                            \"mapping\": {\r\n                                \"norms\": false\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"properties\": {\r\n                    \"@timestamp\": {\r\n                        \"type\": \"date\"\r\n                    },\r\n                    \"interface\": {\r\n                        \"properties\": {\r\n                            \"ifAlias\": {\r\n                                \"type\": \"text\",\r\n                                \"norms\": false\r\n                            },\r\n                            \"ifErrCongestedPktsDrops\": {\r\n                                \"type\": \"float\",\r\n                                \"index\": false\r\n                            },\r\n                            \"ifErrCongestionLimitPktDrops\": {\r\n                                \"type\": \"float\",\r\n                                \"index\": false\r\n                            },\r\n                            \"ifErrRxNoBuffs\": {\r\n                                \"type\": \"float\",\r\n                                \"index\": false\r\n                            },\r\n                            \"ifHCInOctets\": {\r\n                                \"type\": \"float\",\r\n                                \"index\": false\r\n                            },\r\n                            \"ifHCInUcastPkts\": {\r\n                                \"type\": \"float\",\r\n                                \"index\": false\r\n                            },\r\n                            \"ifHCOutOctets\": {\r\n                                \"type\": \"float\",\r\n                                \"index\": false\r\n                            },\r\n                            \"ifHCOutUcastPkts\": {\r\n                                \"type\": \"float\",\r\n                                \"index\": false\r\n                            },\r\n                            \"ifInDiscards\": {\r\n                                \"type\": \"float\",\r\n                                \"index\": false\r\n                            },\r\n                            \"ifInErrors\": {\r\n                                \"type\": \"float\",\r\n                                \"index\": false\r\n                            },\r\n                            \"ifOutDiscards\": {\r\n                                \"type\": \"float\",\r\n                                \"index\": false\r\n                            },\r\n                            \"ifOutErrors\": {\r\n                                \"type\": \"float\",\r\n                                \"index\": false\r\n                            },\r\n                            \"ifTotXoffSent\": {\r\n                                \"type\": \"float\",\r\n                                \"index\": false\r\n                            },\r\n                            \"ifnicTxStalls\": {\r\n                                \"type\": \"float\",\r\n                                \"index\": false\r\n                            }\r\n                        }\r\n                    },\r\n                    \"measurement_name\": {\r\n                        \"type\": \"keyword\"\r\n                    },\r\n                    \"tag\": {\r\n                        \"properties\": {\r\n                            \"agent_host\": {\r\n                                \"type\": \"keyword\",\r\n                                \"ignore_above\": 512\r\n                            },\r\n                            \"host\": {\r\n                                \"type\": \"keyword\",\r\n                                \"ignore_above\": 512\r\n                            },\r\n                            \"ifAlias\": {\r\n                                \"type\": \"keyword\",\r\n                                \"ignore_above\": 512\r\n                            },\r\n                            \"ifDescr\": {\r\n                                \"type\": \"keyword\",\r\n                                \"ignore_above\": 512\r\n                            },\r\n                            \"ifIndex\": {\r\n                                \"type\": \"keyword\",\r\n                                \"ignore_above\": 512\r\n                            },\r\n                            \"measurement_tag\": {\r\n                                \"type\": \"keyword\",\r\n                                \"ignore_above\": 512\r\n                            },\r\n                            \"platform_tag\": {\r\n                                \"type\": \"keyword\",\r\n                                \"ignore_above\": 512\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            \"_default_\": {\r\n                \"_all\": {\r\n                    \"enabled\": false\r\n                },\r\n                \"dynamic_templates\": [\r\n                    {\r\n                        \"tags\": {\r\n                            \"path_match\": \"tag.*\",\r\n                            \"match_mapping_type\": \"string\",\r\n                            \"mapping\": {\r\n                                \"ignore_above\": 512,\r\n                                \"type\": \"keyword\"\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"metrics_long\": {\r\n                            \"match_mapping_type\": \"long\",\r\n                            \"mapping\": {\r\n                                \"index\": false,\r\n                                \"type\": \"float\"\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"metrics_double\": {\r\n                            \"match_mapping_type\": \"double\",\r\n                            \"mapping\": {\r\n                                \"index\": false,\r\n                                \"type\": \"float\"\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"text_fields\": {\r\n                            \"match\": \"*\",\r\n                            \"mapping\": {\r\n                                \"norms\": false\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"properties\": {\r\n                    \"@timestamp\": {\r\n                        \"type\": \"date\"\r\n                    },\r\n                    \"measurement_name\": {\r\n                        \"type\": \"keyword\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"settings\": {\r\n            \"index\": {\r\n                \"mapping\": {\r\n                    \"total_fields\": {\r\n                        \"limit\": \"5000\"\r\n                    }\r\n                },\r\n                \"refresh_interval\": \"10s\",\r\n                \"number_of_shards\": \"4\",\r\n                \"translog\": {\r\n                    \"flush_threshold_size\": \"2048mb\"\r\n                },\r\n                \"provided_name\": \"test-index-2018.04.03\",\r\n                \"creation_date\": \"1522713612149\",\r\n                \"number_of_replicas\": \"0\",\r\n                \"uuid\": \"kXS2qTXJQu66lQUlSx5OyA\",\r\n                \"version\": {\r\n                    \"created\": \"6010199\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n \r\n\r\n```\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/378263764","html_url":"https://github.com/elastic/elasticsearch/issues/29345#issuecomment-378263764","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29345","id":378263764,"node_id":"MDEyOklzc3VlQ29tbWVudDM3ODI2Mzc2NA==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2018-04-03T14:11:12Z","updated_at":"2018-04-03T14:11:12Z","author_association":"MEMBER","body":"Oops I forgot to paste the script. Here it is:\r\n```\r\nDELETE test\r\n\r\nPUT test\r\n{\r\n  \"mappings\": {\r\n    \"doc\": {\r\n      \"properties\": {\r\n        \"tag\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"agent_host\": {\r\n              \"type\": \"keyword\"\r\n            },\r\n            \"ifDescr\": {\r\n              \"type\": \"keyword\"\r\n            }\r\n          }\r\n        },\r\n        \"interface\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"ifHCInOctets\": {\r\n              \"type\": \"long\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPOST test/doc/1\r\n{\r\n  \"tag\": {\r\n    \"agent_host\": \"testrouter1.testdomain.net\",\r\n    \"ifDescr\": \"GigabitEthernet0/0/0\"\r\n  },\r\n  \"interface\": {\r\n    \"ifHCInOctets\": 402423415108\r\n  }\r\n}\r\n\r\nPOST test/doc/2\r\n{\r\n  \"tag\": {\r\n    \"agent_host\": \"testrouter1.testdomain.net\",\r\n    \"ifDescr\": \"GigabitEthernet0/0/0\"\r\n  },\r\n  \"interface\": {\r\n    \"ifHCInOctets\": 402849967058\r\n  }\r\n}\r\n\r\nPOST test/doc/3\r\n{\r\n  \"tag\": {\r\n    \"agent_host\": \"testrouter1.testdomain.net\",\r\n    \"ifDescr\": \"GigabitEthernet0/0/0\"\r\n  },\r\n  \"interface\": {\r\n    \"ifHCInOctets\": 402533814871\r\n  }\r\n}\r\n\r\nPOST test/doc/4\r\n{\r\n  \"tag\": {\r\n    \"agent_host\": \"testrouter1.testdomain.net\",\r\n    \"ifDescr\": \"GigabitEthernet0/0/0\"\r\n  },\r\n  \"interface\": {\r\n    \"ifHCInOctets\": 402662297513\r\n  }\r\n}\r\n\r\nPOST test/doc/5\r\n{\r\n  \"tag\": {\r\n    \"agent_host\": \"testrouter1.testdomain.net\",\r\n    \"ifDescr\": \"GigabitEthernet0/0/0\"\r\n  },\r\n  \"interface\": {\r\n    \"ifHCInOctets\": 402989750842\r\n  }\r\n}\r\n\r\nGET test/_search\r\n{\r\n  \"size\": 1000,\r\n  \"_source\": [\r\n    \"tag.agent_host\",\r\n    \"tag.ifDescr\",\r\n    \"interface.ifHCInOctets\"\r\n  ],\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"filter\": [\r\n        {\r\n          \"query_string\": {\r\n            \"analyze_wildcard\": true,\r\n            \"query\": \"tag.agent_host:testrouter1.testdomain.net AND tag.ifDescr:GigabitEthernet*0 AND _exists_:interface.ifHCInOctets\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"aggs\": {\r\n    \"DBF_Device\": {\r\n      \"terms\": {\r\n        \"field\": \"tag.agent_host\",\r\n        \"size\": 10\r\n      },\r\n      \"aggs\": {\r\n        \"DBF_Interface\": {\r\n          \"terms\": {\r\n            \"field\": \"tag.ifDescr\",\r\n            \"size\": 10\r\n          },\r\n          \"aggs\": {\r\n            \"DBF_Metric_SUM\": {\r\n              \"sum\": {\r\n                \"field\": \"interface.ifHCInOctets\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nI think the problem will come down the floating point rounding since your fields are `float`s. Note that from 6.3 the basic metric aggregations (sum, avg, stats, extended_stats) will use [Kahan summation](https://en.wikipedia.org/wiki/Kahan_summation_algorithm) which will significantly reduce the error introduced by floating point rounding on these calculations (see https://github.com/elastic/elasticsearch/pull/27848).\r\n\r\nI'm going to close this for now assuming that your issue will be fixed when you remap to a long field type but please comment if that doesn't solve your problem and we can look into this more","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/378490101","html_url":"https://github.com/elastic/elasticsearch/issues/29345#issuecomment-378490101","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29345","id":378490101,"node_id":"MDEyOklzc3VlQ29tbWVudDM3ODQ5MDEwMQ==","user":{"login":"aurimasplu","id":33485896,"node_id":"MDQ6VXNlcjMzNDg1ODk2","avatar_url":"https://avatars0.githubusercontent.com/u/33485896?v=4","gravatar_id":"","url":"https://api.github.com/users/aurimasplu","html_url":"https://github.com/aurimasplu","followers_url":"https://api.github.com/users/aurimasplu/followers","following_url":"https://api.github.com/users/aurimasplu/following{/other_user}","gists_url":"https://api.github.com/users/aurimasplu/gists{/gist_id}","starred_url":"https://api.github.com/users/aurimasplu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aurimasplu/subscriptions","organizations_url":"https://api.github.com/users/aurimasplu/orgs","repos_url":"https://api.github.com/users/aurimasplu/repos","events_url":"https://api.github.com/users/aurimasplu/events{/privacy}","received_events_url":"https://api.github.com/users/aurimasplu/received_events","type":"User","site_admin":false},"created_at":"2018-04-04T06:04:02Z","updated_at":"2018-04-04T06:04:02Z","author_association":"NONE","body":"Remapping to long worked as a charm, now sum and avg are calculated as expected. @colings86 thanks a lot for your help :) ","performed_via_github_app":null}]