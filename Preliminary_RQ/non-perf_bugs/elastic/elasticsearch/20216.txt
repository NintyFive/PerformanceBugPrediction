{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/20216","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20216/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20216/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20216/events","html_url":"https://github.com/elastic/elasticsearch/issues/20216","id":173807910,"node_id":"MDU6SXNzdWUxNzM4MDc5MTA=","number":20216,"title":"Cluster Health API consistency with wait for shards parameters","user":{"login":"abeyad","id":1631297,"node_id":"MDQ6VXNlcjE2MzEyOTc=","avatar_url":"https://avatars2.githubusercontent.com/u/1631297?v=4","gravatar_id":"","url":"https://api.github.com/users/abeyad","html_url":"https://github.com/abeyad","followers_url":"https://api.github.com/users/abeyad/followers","following_url":"https://api.github.com/users/abeyad/following{/other_user}","gists_url":"https://api.github.com/users/abeyad/gists{/gist_id}","starred_url":"https://api.github.com/users/abeyad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abeyad/subscriptions","organizations_url":"https://api.github.com/users/abeyad/orgs","repos_url":"https://api.github.com/users/abeyad/repos","events_url":"https://api.github.com/users/abeyad/events{/privacy}","received_events_url":"https://api.github.com/users/abeyad/received_events","type":"User","site_admin":false},"labels":[{"id":152517143,"node_id":"MDU6TGFiZWwxNTI1MTcxNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/REST%20API","name":":Core/Infra/REST API","color":"0e8a16","default":false,"description":"REST infrastructure and utilities"},{"id":33660,"node_id":"MDU6TGFiZWwzMzY2MA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebreaking","name":">breaking","color":"d93f0b","default":false,"description":null},{"id":416200220,"node_id":"MDU6TGFiZWw0MTYyMDAyMjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebreaking-java","name":">breaking-java","color":"d93f0b","default":false,"description":null},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-08-29T15:56:03Z","updated_at":"2016-08-31T15:58:19Z","closed_at":"2016-08-31T15:58:19Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Right now, the cluster health API can take parameters including: `wait_for_active_shards` and `wait_for_relocating_shards`.  The idea with these parameters is that we may want to wait for the cluster health check to return only after certain conditions are met - for example, a certain number of active shards are found in the cluster (across all indices) or there are only a certain number of relocating shards in the cluster.  Both of these parameters take a numeric value (integer).\n\nWith the introduction of `wait_for_active_shards` in place of write consistency level in https://github.com/elastic/elasticsearch/pull/19454, it makes sense to have a single consistent usage of `wait_for_active_shards`.  In the case of the replication operations, `wait_for_active_shards` is a string that can be `all`, `default` (whatever the default value is for the intended operation), or a numeric value as a string (e.g. `1`, `2`, etc).  \n\nThe proposal is to have the cluster health API also use this \"string\" version of `wait_for_active_shards`, consistent with usage in the replication/write operations, where a numeric value can be set as well as `all` and `default`.  In the case of the cluster health API, specifying `all` means that we check the current active shard count across all indices against the total shard count (primary + replicas, active + inactive) for all indices in the cluster.  \n\nIn addition, to keep things consistent, the proposal is also to have `wait_for_relocating_shards` no longer take a number.  Instead, it would make sense to have that as a boolean parameter `wait_for_no_relocating_shards`, which would just indicate whether we will wait for all relocating shards to complete or not.  This is likely the only usage of the current `wait_for_relocating_shards`, as in general you are only concerned about the case of there being no more active relocations - otherwise the exact number of them is likely not something one is concerned with when checking cluster health.  Also, all of our test cases only use 0 for the wait_for_relocating_shards` value right now.\n","closed_by":{"login":"abeyad","id":1631297,"node_id":"MDQ6VXNlcjE2MzEyOTc=","avatar_url":"https://avatars2.githubusercontent.com/u/1631297?v=4","gravatar_id":"","url":"https://api.github.com/users/abeyad","html_url":"https://github.com/abeyad","followers_url":"https://api.github.com/users/abeyad/followers","following_url":"https://api.github.com/users/abeyad/following{/other_user}","gists_url":"https://api.github.com/users/abeyad/gists{/gist_id}","starred_url":"https://api.github.com/users/abeyad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abeyad/subscriptions","organizations_url":"https://api.github.com/users/abeyad/orgs","repos_url":"https://api.github.com/users/abeyad/repos","events_url":"https://api.github.com/users/abeyad/events{/privacy}","received_events_url":"https://api.github.com/users/abeyad/received_events","type":"User","site_admin":false},"performed_via_github_app":null}