[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/613947752","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-613947752","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":613947752,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMzk0Nzc1Mg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-04-15T10:09:42Z","updated_at":"2020-04-15T10:09:42Z","author_association":"COLLABORATOR","body":"Pinging @elastic/ml-core (:ml)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/613948160","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-613948160","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":613948160,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMzk0ODE2MA==","user":{"login":"przemekwitek","id":19312454,"node_id":"MDQ6VXNlcjE5MzEyNDU0","avatar_url":"https://avatars3.githubusercontent.com/u/19312454?v=4","gravatar_id":"","url":"https://api.github.com/users/przemekwitek","html_url":"https://github.com/przemekwitek","followers_url":"https://api.github.com/users/przemekwitek/followers","following_url":"https://api.github.com/users/przemekwitek/following{/other_user}","gists_url":"https://api.github.com/users/przemekwitek/gists{/gist_id}","starred_url":"https://api.github.com/users/przemekwitek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/przemekwitek/subscriptions","organizations_url":"https://api.github.com/users/przemekwitek/orgs","repos_url":"https://api.github.com/users/przemekwitek/repos","events_url":"https://api.github.com/users/przemekwitek/events{/privacy}","received_events_url":"https://api.github.com/users/przemekwitek/received_events","type":"User","site_admin":false},"created_at":"2020-04-15T10:10:34Z","updated_at":"2020-04-15T10:10:34Z","author_association":"CONTRIBUTOR","body":"I'm already working on it, reassigned to myself.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/613953027","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-613953027","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":613953027,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMzk1MzAyNw==","user":{"login":"przemekwitek","id":19312454,"node_id":"MDQ6VXNlcjE5MzEyNDU0","avatar_url":"https://avatars3.githubusercontent.com/u/19312454?v=4","gravatar_id":"","url":"https://api.github.com/users/przemekwitek","html_url":"https://github.com/przemekwitek","followers_url":"https://api.github.com/users/przemekwitek/followers","following_url":"https://api.github.com/users/przemekwitek/following{/other_user}","gists_url":"https://api.github.com/users/przemekwitek/gists{/gist_id}","starred_url":"https://api.github.com/users/przemekwitek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/przemekwitek/subscriptions","organizations_url":"https://api.github.com/users/przemekwitek/orgs","repos_url":"https://api.github.com/users/przemekwitek/repos","events_url":"https://api.github.com/users/przemekwitek/events{/privacy}","received_events_url":"https://api.github.com/users/przemekwitek/received_events","type":"User","site_admin":false},"created_at":"2020-04-15T10:21:48Z","updated_at":"2020-04-15T10:22:38Z","author_association":"CONTRIBUTOR","body":"In the server logs it seems that changing the value of upgrade mode happens \"concurrently\" with creating `.ml-stats` index:\r\n```\r\n1854 [2020-04-15T07:16:26,442][INFO ][o.e.x.m.a.TransportSetUpgradeModeAction] [integTest-2] Starting to set [upgrade_mode] to [true] from [false]\r\n1855 [2020-04-15T07:16:26,457][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-2] applying create index request using v1 templates [{\".ml-state\":{\"order\":0,\"version\":8000099,\"index_patterns\":[\".ml-s     tate*\"],\"settings\":{\"index\":{\"hidden\":\"true\",\"auto_expand_replicas\":\"0-1\"}},\"mappings\":{\"_doc\":{\"_meta\":{\"version\":\"8000099\"},\"enabled\":false}},\"aliases\":{}}}]\r\n1856 [2020-04-15T07:16:26,468][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-2] [.ml-state-000001] creating index, cause [api], templates [.ml-state], shards [1]/[1], mappings [_doc]\r\n1857 [2020-04-15T07:16:26,509][INFO ][o.e.x.m.a.TransportSetUpgradeModeAction] [integTest-2] Executing cluster state update\r\n1858 [2020-04-15T07:16:26,541][INFO ][o.e.x.m.a.TransportSetUpgradeModeAction] [integTest-2] Cluster update response built: true\r\n1859 [2020-04-15T07:16:26,542][INFO ][o.e.x.m.a.TransportSetUpgradeModeAction] [integTest-2] Enabling upgrade mode, must isolate datafeeds\r\n1860 [2020-04-15T07:16:26,542][INFO ][o.e.x.m.a.TransportSetUpgradeModeAction] [integTest-2] Isolating datafeeds: []\r\n1861 [2020-04-15T07:16:26,543][INFO ][o.e.x.m.a.TransportSetUpgradeModeAction] [integTest-2] Isolated the datafeeds\r\n1862 [2020-04-15T07:16:26,544][INFO ][o.e.x.m.a.TransportSetUpgradeModeAction] [integTest-2] Un-assigning persistent tasks : [ data_frame_analytics-classification_set_upgrade_mode ]\r\n1863 [2020-04-15T07:16:26,642][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-2] applying create index request using v1 templates [{\".ml-stats\":{\"order\":0,\"version\":8000099,\"index_patterns\":[\".ml-s     tats-*\"],\"settings\":{\"index\":{\"hidden\":\"true\",\"number_of_shards\":\"1\",\"auto_expand_replicas\":\"0-1\"}},\"mappings\":{\"_doc\":{\"_meta\":{\"version\":\"8.0.0\"},\"dynamic\":false,\"properties\":{\"iteration\":{\"type\":\"     integer\"},\"hyperparameters\":{\"properties\":{\"class_assignment_objective\":{\"type\":\"keyword\"},\"downsample_factor\":{\"type\":\"double\"},\"eta\":{\"type\":\"double\"},\"eta_growth_rate_per_tree\":{\"type\":\"double\"},\"     feature_bag_fraction\":{\"type\":\"double\"},\"max_attempts_to_add_tree\":{\"type\":\"integer\"},\"max_optimization_rounds_per_hyperparameter\":{\"type\":\"integer\"},\"max_trees\":{\"type\":\"integer\"},\"num_folds\":{\"type     \":\"integer\"},\"num_splits_per_feature\":{\"type\":\"integer\"},\"regularization_depth_penalty_multiplier\":{\"type\":\"double\"},\"regularization_leaf_weight_penalty_multiplier\":{\"type\":\"double\"},\"regularization_     soft_tree_depth_limit\":{\"type\":\"double\"},\"regularization_soft_tree_depth_tolerance\":{\"type\":\"double\"},\"regularization_tree_size_penalty_multiplier\":{\"type\":\"double\"}}},\"job_id\":{\"type\":\"keyword\"},\"pa     rameters\":{\"properties\":{\"compute_feature_influence\":{\"type\":\"boolean\"},\"feature_influence_threshold\":{\"type\":\"double\"},\"method\":{\"type\":\"keyword\"},\"n_neighbors\":{\"type\":\"integer\"},\"outlier_fraction\"     :{\"type\":\"double\"},\"standardization_enabled\":{\"type\":\"boolean\"}}},\"peak_usage_bytes\":{\"type\":\"long\"},\"model_id\":{\"type\":\"keyword\"},\"node_id\":{\"type\":\"keyword\"},\"inference_count\":{\"type\":\"long\"},\"fail     ure_count\":{\"type\":\"long\"},\"missing_all_fields_count\":{\"type\":\"long\"},\"skipped_docs_count\":{\"type\":\"long\"},\"timestamp\":{\"type\":\"date\"},\"timing_stats\":{\"properties\":{\"elapsed_time\":{\"type\":\"long\"},\"it     eration_time\":{\"type\":\"long\"}}},\"test_docs_count\":{\"type\":\"long\"},\"training_docs_count\":{\"type\":\"long\"},\"type\":{\"type\":\"keyword\"},\"validation_loss\":{\"properties\":{\"fold_values\":{\"properties\":{\"fold\":     {\"type\":\"integer\"},\"values\":{\"type\":\"double\"}}},\"loss_type\":{\"type\":\"keyword\"}}}}}},\"aliases\":{}}}]\r\n1864 [2020-04-15T07:16:26,651][INFO ][o.e.c.m.MetadataCreateIndexService] [integTest-2] [.ml-stats-000001] creating index, cause [api], templates [.ml-stats], shards [1]/[1], mappings [_doc]\r\n1865 [2020-04-15T07:16:26,681][INFO ][o.e.x.m.a.TransportSetUpgradeModeAction] [integTest-2] Waited for tasks to be unassigned\r\n1866 [2020-04-15T07:16:26,681][INFO ][o.e.x.m.a.TransportSetUpgradeModeAction] [integTest-2] Completed upgrade mode request\r\n1867 [2020-04-15T07:16:26,701][INFO ][o.e.x.m.a.TransportSetUpgradeModeAction] [integTest-2] Starting to set [upgrade_mode] to [false] from [true]\r\n1868 [2020-04-15T07:16:26,702][INFO ][o.e.x.m.a.TransportSetUpgradeModeAction] [integTest-2] Executing cluster state update\r\n1869 [2020-04-15T07:16:26,730][INFO ][o.e.x.m.a.TransportSetUpgradeModeAction] [integTest-2] Cluster update response built: true\r\n1870 [2020-04-15T07:16:26,730][INFO ][o.e.x.m.a.TransportSetUpgradeModeAction] [integTest-2] Disabling upgrade mode, must wait for tasks to not have AWAITING_UPGRADE assignment\r\n1871 [2020-04-15T07:16:26,811][INFO ][o.e.x.m.a.TransportSetUpgradeModeAction] [integTest-2] Done waiting for tasks to be out of AWAITING_UPGRADE\r\n1872 [2020-04-15T07:16:26,812][INFO ][o.e.x.m.a.TransportSetUpgradeModeAction] [integTest-2] Completed upgrade mode request\r\n```\r\n\r\nOther than that, there is no indication of upgrade mode-related failure in the logs. Still the test fails as it cannot gather task stats. \r\nI have two hypotheses so far:\r\n1. the failure is related to the fact that we are trying to search the index (`.ml-stats-000001`) that is still being created.\r\n2. the failure is related to the fact that we are trying to gather stats for the task that is just being unassigned.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614121496","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-614121496","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":614121496,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDEyMTQ5Ng==","user":{"login":"mark-vieira","id":4106672,"node_id":"MDQ6VXNlcjQxMDY2NzI=","avatar_url":"https://avatars2.githubusercontent.com/u/4106672?v=4","gravatar_id":"","url":"https://api.github.com/users/mark-vieira","html_url":"https://github.com/mark-vieira","followers_url":"https://api.github.com/users/mark-vieira/followers","following_url":"https://api.github.com/users/mark-vieira/following{/other_user}","gists_url":"https://api.github.com/users/mark-vieira/gists{/gist_id}","starred_url":"https://api.github.com/users/mark-vieira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mark-vieira/subscriptions","organizations_url":"https://api.github.com/users/mark-vieira/orgs","repos_url":"https://api.github.com/users/mark-vieira/repos","events_url":"https://api.github.com/users/mark-vieira/events{/privacy}","received_events_url":"https://api.github.com/users/mark-vieira/received_events","type":"User","site_admin":false},"created_at":"2020-04-15T15:50:41Z","updated_at":"2020-04-15T15:50:41Z","author_association":"CONTRIBUTOR","body":"This test has failed many times over the past 24 hours. As a point of process, if we see multiple failures in a single day we should automatically mute. \r\n\r\nOn that note, I've muted this test in `master` (ecc8599348f8153b449b3174eaa78b0747dcbaab) and `7.x` (ba0a39ce941fff8970ec3831c75c0b72262862ac)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614134308","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-614134308","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":614134308,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDEzNDMwOA==","user":{"login":"davidkyle","id":2353640,"node_id":"MDQ6VXNlcjIzNTM2NDA=","avatar_url":"https://avatars1.githubusercontent.com/u/2353640?v=4","gravatar_id":"","url":"https://api.github.com/users/davidkyle","html_url":"https://github.com/davidkyle","followers_url":"https://api.github.com/users/davidkyle/followers","following_url":"https://api.github.com/users/davidkyle/following{/other_user}","gists_url":"https://api.github.com/users/davidkyle/gists{/gist_id}","starred_url":"https://api.github.com/users/davidkyle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidkyle/subscriptions","organizations_url":"https://api.github.com/users/davidkyle/orgs","repos_url":"https://api.github.com/users/davidkyle/repos","events_url":"https://api.github.com/users/davidkyle/events{/privacy}","received_events_url":"https://api.github.com/users/davidkyle/received_events","type":"User","site_admin":false},"created_at":"2020-04-15T16:13:30Z","updated_at":"2020-04-15T16:13:30Z","author_association":"MEMBER","body":"Thanks for muting @mark-vieira, we were collecting extra debug information and were about to mute","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614139487","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-614139487","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":614139487,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDEzOTQ4Nw==","user":{"login":"mark-vieira","id":4106672,"node_id":"MDQ6VXNlcjQxMDY2NzI=","avatar_url":"https://avatars2.githubusercontent.com/u/4106672?v=4","gravatar_id":"","url":"https://api.github.com/users/mark-vieira","html_url":"https://github.com/mark-vieira","followers_url":"https://api.github.com/users/mark-vieira/followers","following_url":"https://api.github.com/users/mark-vieira/following{/other_user}","gists_url":"https://api.github.com/users/mark-vieira/gists{/gist_id}","starred_url":"https://api.github.com/users/mark-vieira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mark-vieira/subscriptions","organizations_url":"https://api.github.com/users/mark-vieira/orgs","repos_url":"https://api.github.com/users/mark-vieira/repos","events_url":"https://api.github.com/users/mark-vieira/events{/privacy}","received_events_url":"https://api.github.com/users/mark-vieira/received_events","type":"User","site_admin":false},"created_at":"2020-04-15T16:22:47Z","updated_at":"2020-04-15T16:22:47Z","author_association":"CONTRIBUTOR","body":"> Thanks for muting @mark-vieira, we were collecting extra debug information and were about to mute\r\n\r\nIs there some kind of annotation that will still execute a test, but not trigger a failure? If not, perhaps it's worth adding such a thing?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614239771","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-614239771","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":614239771,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDIzOTc3MQ==","user":{"login":"przemekwitek","id":19312454,"node_id":"MDQ6VXNlcjE5MzEyNDU0","avatar_url":"https://avatars3.githubusercontent.com/u/19312454?v=4","gravatar_id":"","url":"https://api.github.com/users/przemekwitek","html_url":"https://github.com/przemekwitek","followers_url":"https://api.github.com/users/przemekwitek/followers","following_url":"https://api.github.com/users/przemekwitek/following{/other_user}","gists_url":"https://api.github.com/users/przemekwitek/gists{/gist_id}","starred_url":"https://api.github.com/users/przemekwitek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/przemekwitek/subscriptions","organizations_url":"https://api.github.com/users/przemekwitek/orgs","repos_url":"https://api.github.com/users/przemekwitek/repos","events_url":"https://api.github.com/users/przemekwitek/events{/privacy}","received_events_url":"https://api.github.com/users/przemekwitek/received_events","type":"User","site_admin":false},"created_at":"2020-04-15T19:36:36Z","updated_at":"2020-04-15T19:36:36Z","author_association":"CONTRIBUTOR","body":"> Is there some kind of annotation that will still execute a test, but not trigger a failure? If not, perhaps it's worth adding such a thing?\r\n\r\nSounds like a good idea for all the \"add more logging\" cases. I'll try to find out if it's there.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614246636","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-614246636","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":614246636,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDI0NjYzNg==","user":{"login":"davidkyle","id":2353640,"node_id":"MDQ6VXNlcjIzNTM2NDA=","avatar_url":"https://avatars1.githubusercontent.com/u/2353640?v=4","gravatar_id":"","url":"https://api.github.com/users/davidkyle","html_url":"https://github.com/davidkyle","followers_url":"https://api.github.com/users/davidkyle/followers","following_url":"https://api.github.com/users/davidkyle/following{/other_user}","gists_url":"https://api.github.com/users/davidkyle/gists{/gist_id}","starred_url":"https://api.github.com/users/davidkyle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidkyle/subscriptions","organizations_url":"https://api.github.com/users/davidkyle/orgs","repos_url":"https://api.github.com/users/davidkyle/repos","events_url":"https://api.github.com/users/davidkyle/events{/privacy}","received_events_url":"https://api.github.com/users/davidkyle/received_events","type":"User","site_admin":false},"created_at":"2020-04-15T19:50:48Z","updated_at":"2020-04-15T19:50:48Z","author_association":"MEMBER","body":"> Is there some kind of annotation that will still execute a test, but not trigger a failure? If not, perhaps it's worth adding such a thing?\r\n\r\nIt is a very interesting idea as leaving the tests unmuted with extra debug logging is a common workflow.\r\n\r\nI took a look at `JUnit` `TestRules` which I think could be used to catch assertion failures and re-throw them as `AssumptionViolatedException`s. Assumptions do not fail the test suite so we would have our debugged test failure without the build failure.\r\n\r\nBut, without the build failure how would I know that my flaky test had failed again? I would have to check the logs of every build for the assumption exception. There is a conflict between suppressing the failure allowing the build to succeed and being notified of the failure I can't see a way to have both. Unless we track assumption failures which would just complicated things as certain tests assume there are running on certain platforms etc. \r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614284023","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-614284023","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":614284023,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDI4NDAyMw==","user":{"login":"mark-vieira","id":4106672,"node_id":"MDQ6VXNlcjQxMDY2NzI=","avatar_url":"https://avatars2.githubusercontent.com/u/4106672?v=4","gravatar_id":"","url":"https://api.github.com/users/mark-vieira","html_url":"https://github.com/mark-vieira","followers_url":"https://api.github.com/users/mark-vieira/followers","following_url":"https://api.github.com/users/mark-vieira/following{/other_user}","gists_url":"https://api.github.com/users/mark-vieira/gists{/gist_id}","starred_url":"https://api.github.com/users/mark-vieira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mark-vieira/subscriptions","organizations_url":"https://api.github.com/users/mark-vieira/orgs","repos_url":"https://api.github.com/users/mark-vieira/repos","events_url":"https://api.github.com/users/mark-vieira/events{/privacy}","received_events_url":"https://api.github.com/users/mark-vieira/received_events","type":"User","site_admin":false},"created_at":"2020-04-15T21:15:25Z","updated_at":"2020-04-15T21:15:25Z","author_association":"CONTRIBUTOR","body":"> But, without the build failure how would I know that my flaky test had failed again?\r\n\r\nThat's a good question. This is a good use case for retrying tests. In this scenario we still get the failures and we identify the test as being flakey if the passes on subsequent runs. There's first-class support for this in Gradle, and it's on my todo list to investigate how we might integrate it into the build.\r\n\r\nRight now we aggressively mute builds to reduce noise but this does have the side effect that the data collected from failures is potentially useful.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614484790","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-614484790","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":614484790,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDQ4NDc5MA==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2020-04-16T08:05:33Z","updated_at":"2020-04-16T08:05:33Z","author_association":"CONTRIBUTOR","body":"I also muted this in 7.x in 5de6ddfef23165eb595b77542221cc6752e157ec\r\n\r\nA recent failure is https://gradle-enterprise.elastic.co/s/qffj2qikw45by so hopefully that contains the extra debug that was added.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614653220","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-614653220","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":614653220,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDY1MzIyMA==","user":{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false},"created_at":"2020-04-16T13:29:12Z","updated_at":"2020-04-16T13:29:12Z","author_association":"MEMBER","body":"A possibly similar failure: https://gradle-enterprise.elastic.co/s/c7hhi3j24h7o6 I am going to mute ClassificationIT.testSetUpgradeMode_NewTaskDoesNotStart as well","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/615078888","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-615078888","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":615078888,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTA3ODg4OA==","user":{"login":"przemekwitek","id":19312454,"node_id":"MDQ6VXNlcjE5MzEyNDU0","avatar_url":"https://avatars3.githubusercontent.com/u/19312454?v=4","gravatar_id":"","url":"https://api.github.com/users/przemekwitek","html_url":"https://github.com/przemekwitek","followers_url":"https://api.github.com/users/przemekwitek/followers","following_url":"https://api.github.com/users/przemekwitek/following{/other_user}","gists_url":"https://api.github.com/users/przemekwitek/gists{/gist_id}","starred_url":"https://api.github.com/users/przemekwitek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/przemekwitek/subscriptions","organizations_url":"https://api.github.com/users/przemekwitek/orgs","repos_url":"https://api.github.com/users/przemekwitek/repos","events_url":"https://api.github.com/users/przemekwitek/events{/privacy}","received_events_url":"https://api.github.com/users/przemekwitek/received_events","type":"User","site_admin":false},"created_at":"2020-04-17T06:59:44Z","updated_at":"2020-04-17T06:59:44Z","author_association":"CONTRIBUTOR","body":"> A recent failure is https://gradle-enterprise.elastic.co/s/qffj2qikw45by so hopefully that contains the extra debug that was added.\r\n\r\nInvestigating...","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/615089875","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-615089875","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":615089875,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTA4OTg3NQ==","user":{"login":"przemekwitek","id":19312454,"node_id":"MDQ6VXNlcjE5MzEyNDU0","avatar_url":"https://avatars3.githubusercontent.com/u/19312454?v=4","gravatar_id":"","url":"https://api.github.com/users/przemekwitek","html_url":"https://github.com/przemekwitek","followers_url":"https://api.github.com/users/przemekwitek/followers","following_url":"https://api.github.com/users/przemekwitek/following{/other_user}","gists_url":"https://api.github.com/users/przemekwitek/gists{/gist_id}","starred_url":"https://api.github.com/users/przemekwitek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/przemekwitek/subscriptions","organizations_url":"https://api.github.com/users/przemekwitek/orgs","repos_url":"https://api.github.com/users/przemekwitek/repos","events_url":"https://api.github.com/users/przemekwitek/events{/privacy}","received_events_url":"https://api.github.com/users/przemekwitek/received_events","type":"User","site_admin":false},"created_at":"2020-04-17T07:28:07Z","updated_at":"2020-04-17T07:28:16Z","author_association":"CONTRIBUTOR","body":"> A possibly similar failure: https://gradle-enterprise.elastic.co/s/c7hhi3j24h7o6 I am going to mute ClassificationIT.testSetUpgradeMode_NewTaskDoesNotStart as well\r\n\r\nThe failure in the logs is:\r\n```\r\njava.lang.AssertionError: \r\nExpected: is an empty collection\r\n     but: <[{\"id\":\"data_frame_analytics-test_outlier_detection_stop_and_restart\",\"task\":{\"xpack/ml/data_frame/analytics\":{\"params\":{\"id\":\"test_outlier_detection_stop_and_restart\",\"version\":\"7.8.0\",\"progress_on_start\":[{\"phase\":\"reindexing\",\"progress_percent\":0},{\"phase\":\"loading_data\",\"progress_percent\":0},{\"phase\":\"analyzing\",\"progress_percent\":0},{\"phase\":\"writing_results\",\"progress_percent\":0}],\"allow_lazy_start\":false},\"state\":{\"state\":\"failed\",\"allocation_id\":13,\"reason\":\"Partial shards failure\"}}},\"allocation_id\":160,\"assignment\":{\"executor_node\":null,\"explanation\":\"persistent task cannot be assigned while upgrade mode is enabled.\"},\"allocation_id_on_last_status_update\":13}]>\r\n```\r\n\r\nThis particular test failure is irrelevant to this issue. The only reason it appears is that it expects *no* DFA tasks at some point and there still exists a task created by a *different* test (`data_frame_analytics-test_outlier_detection_stop_and_restart`) than the one that failed (`testSetUpgradeMode_NewTaskDoesNotStart`).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/615093443","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-615093443","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":615093443,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTA5MzQ0Mw==","user":{"login":"przemekwitek","id":19312454,"node_id":"MDQ6VXNlcjE5MzEyNDU0","avatar_url":"https://avatars3.githubusercontent.com/u/19312454?v=4","gravatar_id":"","url":"https://api.github.com/users/przemekwitek","html_url":"https://github.com/przemekwitek","followers_url":"https://api.github.com/users/przemekwitek/followers","following_url":"https://api.github.com/users/przemekwitek/following{/other_user}","gists_url":"https://api.github.com/users/przemekwitek/gists{/gist_id}","starred_url":"https://api.github.com/users/przemekwitek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/przemekwitek/subscriptions","organizations_url":"https://api.github.com/users/przemekwitek/orgs","repos_url":"https://api.github.com/users/przemekwitek/repos","events_url":"https://api.github.com/users/przemekwitek/events{/privacy}","received_events_url":"https://api.github.com/users/przemekwitek/received_events","type":"User","site_admin":false},"created_at":"2020-04-17T07:36:37Z","updated_at":"2020-04-17T07:37:10Z","author_association":"CONTRIBUTOR","body":"> A recent failure is https://gradle-enterprise.elastic.co/s/qffj2qikw45by so hopefully that contains the extra debug that was added.\r\n\r\nThis one is relevant though. I've found the additional debug message in the logs, it states that:\r\n```\r\n21097 [2020-04-15T23:50:35,391][ERROR][o.e.x.m.a.TransportGetDataFrameAnalyticsStatsAction] [integTest-0] [classification_set_upgrade_mode] Item failure encountered during multi search: all shards failed\r\n21098 org.elasticsearch.action.search.SearchPhaseExecutionException: all shards failed\r\n21099     at org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseFailure(AbstractSearchAsyncAction.java:551) ~[elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21100     at org.elasticsearch.action.search.AbstractSearchAsyncAction.executeNextPhase(AbstractSearchAsyncAction.java:309) ~[elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21101     at org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseDone(AbstractSearchAsyncAction.java:580) ~[elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21102     at org.elasticsearch.action.search.AbstractSearchAsyncAction.onShardFailure(AbstractSearchAsyncAction.java:393) ~[elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21103     at org.elasticsearch.action.search.AbstractSearchAsyncAction.access$100(AbstractSearchAsyncAction.java:68) ~[elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21104     at org.elasticsearch.action.search.AbstractSearchAsyncAction$1.onFailure(AbstractSearchAsyncAction.java:245) ~[elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21105     at org.elasticsearch.action.search.SearchExecutionStatsCollector.onFailure(SearchExecutionStatsCollector.java:73) ~[elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21106     at org.elasticsearch.action.ActionListenerResponseHandler.handleException(ActionListenerResponseHandler.java:59) ~[elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21107     at org.elasticsearch.action.search.SearchTransportService$ConnectionCountingHandler.handleException(SearchTransportService.java:402) ~[elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21108     at org.elasticsearch.transport.TransportService$6.handleException(TransportService.java:639) ~[elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21109     at org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleException(TransportService.java:1171) ~[elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21110     at org.elasticsearch.transport.TransportService$DirectResponseChannel.processException(TransportService.java:1280) ~[elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21111     at org.elasticsearch.transport.TransportService$DirectResponseChannel.sendResponse(TransportService.java:1254) ~[elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21112     at org.elasticsearch.transport.TaskTransportChannel.sendResponse(TaskTransportChannel.java:60) ~[elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21113     at org.elasticsearch.action.support.ChannelActionListener.onFailure(ChannelActionListener.java:56) ~[elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21114     at org.elasticsearch.search.SearchService.lambda$runAsync$0(SearchService.java:413) ~[elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21115     at org.elasticsearch.common.util.concurrent.TimedRunnable.doRun(TimedRunnable.java:44) [elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21116     at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:695) [elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21117     at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-7.8.0-SNAPSHOT.jar:7.8.0-SNAPSHOT]\r\n21118     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_241]\r\n21119     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_241]\r\n21120     at java.lang.Thread.run(Thread.java:748) [?:1.8.0_241]\r\n```\r\n\r\nIt's not very enlightening, but after looking at the code where the `.ml-state*` and `.ml-stats*` indices are created it seems to me that there can be the following interleaving happening:\r\n1. `StartDataFrameAnalyticsAction` is executed by the test\r\n2. A call to `DataFrameAnalyticsManager.execute` is made. This call makes sure `.ml-state*` and `.ml-stats*` indices exist, effectively creating them (but without waiting for them to have assigned shards)\r\n3. `GetDataFrameAnalyticsStatsAction` is executed by the test. The action fails because it tries to search `.ml-state*` and `.ml-stats*` indices that have no assigned shards.\r\n4. The whole test fails.\r\n\r\nI'm still figuring out why it's the upgrade mode tests that suffer from this as there are other tests calling `GetDataFrameAnalyticsStatsAction` action.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/615100021","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-615100021","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":615100021,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTEwMDAyMQ==","user":{"login":"przemekwitek","id":19312454,"node_id":"MDQ6VXNlcjE5MzEyNDU0","avatar_url":"https://avatars3.githubusercontent.com/u/19312454?v=4","gravatar_id":"","url":"https://api.github.com/users/przemekwitek","html_url":"https://github.com/przemekwitek","followers_url":"https://api.github.com/users/przemekwitek/followers","following_url":"https://api.github.com/users/przemekwitek/following{/other_user}","gists_url":"https://api.github.com/users/przemekwitek/gists{/gist_id}","starred_url":"https://api.github.com/users/przemekwitek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/przemekwitek/subscriptions","organizations_url":"https://api.github.com/users/przemekwitek/orgs","repos_url":"https://api.github.com/users/przemekwitek/repos","events_url":"https://api.github.com/users/przemekwitek/events{/privacy}","received_events_url":"https://api.github.com/users/przemekwitek/received_events","type":"User","site_admin":false},"created_at":"2020-04-17T07:50:54Z","updated_at":"2020-04-17T07:51:27Z","author_association":"CONTRIBUTOR","body":"> I'm still figuring out why it's the upgrade mode tests that suffer from this as there are other tests calling `GetDataFrameAnalyticsStatsAction` action.\r\n\r\nOk, I think I see the difference. All the other tests that use `GetDataFrameAnalyticsStatsAction` in assertions do it:\r\n1. either after `waitUntilAnalyticsIsStopped(jobId);` so the analytics is then in stable state (and all the required indices have alraeady been created)\r\n2. or inside the `assertBusy` wrapper which waits until there are no failures.\r\n\r\nSo in order to unblock the upgrade mode test, I can adopt the approach (2.) i.e. wrap the `GetDataFrameAnalyticsStatsAction` call in `assertBusy`.\r\n\r\n\r\nThe question still remains whether it is ok for the `GetDataFrameAnalyticsStatsAction` to fail only because the `.ml-state*` or `.ml-stats*` index is currently being created. Should the action wait for these indices to be yellow? This would cause some stats calls to be much longer than the majority.\r\n@benwtrent , @droberts195 : WDYT?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/615108860","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-615108860","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":615108860,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTEwODg2MA==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2020-04-17T08:11:38Z","updated_at":"2020-04-17T08:11:38Z","author_association":"CONTRIBUTOR","body":"> wrap the `GetDataFrameAnalyticsStatsAction` call in `assertBusy`.\r\n\r\nSince this is what all the other tests do it's fair enough to fix the immediate problem in the same way.\r\n\r\nHowever, this isn't very user friendly as it means a programmatic user of our APIs would have to do the same thing: loop until success if they wanted to get stats immediately after starting a job.\r\n\r\nSome of our endpoints provide guarantees about what will work immediately afterwards if you are writing a program that calls a sequence of our endpoints one after the other.  For example, with anomaly detection jobs if you get results immediately after calling close or flush then you are guaranteed to get the results from all data submitted before the close or flush.\r\n\r\nI wonder if our start data frame analytics job and open anomaly detection job endpoints should provide the guarantee that you can ask for stats immediately after the start/open call returns and:\r\n\r\n1. Not get an error\r\n2. See the job you just started/opened in the stats\r\n\r\nI think the problem of getting an error is probably more likely for data frame analytics jobs than anomaly detection jobs because data frame analytics jobs create _two_ indices on first start (stats and state) whereas anomaly detection jobs only create one (state).  But theoretically the problem could affect both.\r\n\r\nSo I think in the long term we should wait for yellow status on the indices we create as part of start/open before we set the state to started/opened.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/615112441","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-615112441","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":615112441,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTExMjQ0MQ==","user":{"login":"przemekwitek","id":19312454,"node_id":"MDQ6VXNlcjE5MzEyNDU0","avatar_url":"https://avatars3.githubusercontent.com/u/19312454?v=4","gravatar_id":"","url":"https://api.github.com/users/przemekwitek","html_url":"https://github.com/przemekwitek","followers_url":"https://api.github.com/users/przemekwitek/followers","following_url":"https://api.github.com/users/przemekwitek/following{/other_user}","gists_url":"https://api.github.com/users/przemekwitek/gists{/gist_id}","starred_url":"https://api.github.com/users/przemekwitek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/przemekwitek/subscriptions","organizations_url":"https://api.github.com/users/przemekwitek/orgs","repos_url":"https://api.github.com/users/przemekwitek/repos","events_url":"https://api.github.com/users/przemekwitek/events{/privacy}","received_events_url":"https://api.github.com/users/przemekwitek/received_events","type":"User","site_admin":false},"created_at":"2020-04-17T08:19:40Z","updated_at":"2020-04-17T08:19:40Z","author_association":"CONTRIBUTOR","body":"> Since this is what all the other tests do it's fair enough to fix the immediate problem in the same way.\r\n\r\nOk, I've just sent a PR for review that does just that.\r\n\r\n> However, this isn't very user friendly as it means a programmatic user of our APIs would have to do the same thing: loop until success if they wanted to get stats immediately after starting a job.\r\n\r\nExactly. That's why I raised this...\r\n\r\n> I think the problem of getting an error is probably more likely for data frame analytics jobs than anomaly detection jobs because data frame analytics jobs create two indices on first start (stats and state)\r\n\r\nYes, and both indices are needed in the stats call.\r\n\r\n> So I think in the long term we should wait for yellow status on the indices we create as part of start/open before we set the state to started/opened.\r\n\r\nI'm ok with that as long as the user is not surprised that their first stats call will be (much) longer than the other ones.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/615116501","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-615116501","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":615116501,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTExNjUwMQ==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2020-04-17T08:28:44Z","updated_at":"2020-04-17T08:28:44Z","author_association":"CONTRIBUTOR","body":"> I'm ok with that as long as the user is not surprised that their first stats call will be (much) longer than the other ones.\r\n\r\nI think we should wait in the start/open call, not the stats call.\r\n\r\nThe start/open call might just have created the indices, so there's a legitimate reason to think that if they're not yellow status they will be soon.  But for the stats call if we waited every time then we could be waiting for fatal problems that require administrator intervention to resolve.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/615123537","html_url":"https://github.com/elastic/elasticsearch/issues/55221#issuecomment-615123537","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55221","id":615123537,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTEyMzUzNw==","user":{"login":"przemekwitek","id":19312454,"node_id":"MDQ6VXNlcjE5MzEyNDU0","avatar_url":"https://avatars3.githubusercontent.com/u/19312454?v=4","gravatar_id":"","url":"https://api.github.com/users/przemekwitek","html_url":"https://github.com/przemekwitek","followers_url":"https://api.github.com/users/przemekwitek/followers","following_url":"https://api.github.com/users/przemekwitek/following{/other_user}","gists_url":"https://api.github.com/users/przemekwitek/gists{/gist_id}","starred_url":"https://api.github.com/users/przemekwitek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/przemekwitek/subscriptions","organizations_url":"https://api.github.com/users/przemekwitek/orgs","repos_url":"https://api.github.com/users/przemekwitek/repos","events_url":"https://api.github.com/users/przemekwitek/events{/privacy}","received_events_url":"https://api.github.com/users/przemekwitek/received_events","type":"User","site_admin":false},"created_at":"2020-04-17T08:43:59Z","updated_at":"2020-04-17T08:43:59Z","author_association":"CONTRIBUTOR","body":"> I think we should wait in the start/open call, not the stats call.\r\n\r\nAh, yeah. Of course that would make much more sense.","performed_via_github_app":null}]