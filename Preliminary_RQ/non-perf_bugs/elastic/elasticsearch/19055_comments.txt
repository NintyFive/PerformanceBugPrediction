[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/228348621","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-228348621","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":228348621,"node_id":"MDEyOklzc3VlQ29tbWVudDIyODM0ODYyMQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-06-24T13:41:50Z","updated_at":"2016-06-24T13:41:50Z","author_association":"CONTRIBUTOR","body":"> Bonus points if we can keep backwards compatibility with the current java api by implementing the Client interface and reusing the RequestBuilder objects that we already have, or something along those lines to ease migration.\n\nI think that'd be super useful but if we're going to do it I'd want to do it in yet another project. So, like `:client:high-level` for a useful high level client and `:client:transport-adapter` or something. That way the high level client doesn't have to pull in all of Elasticsearch's dependencies and we don't have to figure out a way to slice the transport client's interface out of Elasticsearch.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243820949","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-243820949","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":243820949,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzgyMDk0OQ==","user":{"login":"mkw","id":451208,"node_id":"MDQ6VXNlcjQ1MTIwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/451208?v=4","gravatar_id":"","url":"https://api.github.com/users/mkw","html_url":"https://github.com/mkw","followers_url":"https://api.github.com/users/mkw/followers","following_url":"https://api.github.com/users/mkw/following{/other_user}","gists_url":"https://api.github.com/users/mkw/gists{/gist_id}","starred_url":"https://api.github.com/users/mkw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkw/subscriptions","organizations_url":"https://api.github.com/users/mkw/orgs","repos_url":"https://api.github.com/users/mkw/repos","events_url":"https://api.github.com/users/mkw/events{/privacy}","received_events_url":"https://api.github.com/users/mkw/received_events","type":"User","site_admin":false},"created_at":"2016-08-31T16:28:33Z","updated_at":"2016-08-31T16:28:33Z","author_association":"NONE","body":"I have configured an anonymous user for shield with limited monitoring privileges.  Consequently,  I get back a 403, not a 401, when making anonymous requests.  This prevents the commons http client from responding with the correct credentials.\n\nThere should be a way to force pre-emptive authentication, either by setting credentials in the configuration manually (and letting the RestClient manage basic auth by itself), or by exposing the the HttpClientContext object used with the request.  See: https://hc.apache.org/httpcomponents-client-ga/httpclient/examples/org/apache/http/examples/client/ClientPreemptiveBasicAuthentication.java\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243831385","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-243831385","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":243831385,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzgzMTM4NQ==","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"created_at":"2016-08-31T17:03:48Z","updated_at":"2016-08-31T17:03:48Z","author_association":"MEMBER","body":"@mkw you can also set `shield.authc.anonymous.authz_exception: false` in your `elasticsearch.yml` to have the response be a 401 instead of the 403. This should allow you to use the client as is today.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243854112","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-243854112","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":243854112,"node_id":"MDEyOklzc3VlQ29tbWVudDI0Mzg1NDExMg==","user":{"login":"mkw","id":451208,"node_id":"MDQ6VXNlcjQ1MTIwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/451208?v=4","gravatar_id":"","url":"https://api.github.com/users/mkw","html_url":"https://github.com/mkw","followers_url":"https://api.github.com/users/mkw/followers","following_url":"https://api.github.com/users/mkw/following{/other_user}","gists_url":"https://api.github.com/users/mkw/gists{/gist_id}","starred_url":"https://api.github.com/users/mkw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkw/subscriptions","organizations_url":"https://api.github.com/users/mkw/orgs","repos_url":"https://api.github.com/users/mkw/repos","events_url":"https://api.github.com/users/mkw/events{/privacy}","received_events_url":"https://api.github.com/users/mkw/received_events","type":"User","site_admin":false},"created_at":"2016-08-31T18:20:21Z","updated_at":"2016-08-31T18:20:21Z","author_association":"NONE","body":"@jaymode Thanks!  That is very helpful and vasty superior to manually adding a default \"Authentication\" header.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243863936","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-243863936","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":243863936,"node_id":"MDEyOklzc3VlQ29tbWVudDI0Mzg2MzkzNg==","user":{"login":"mkw","id":451208,"node_id":"MDQ6VXNlcjQ1MTIwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/451208?v=4","gravatar_id":"","url":"https://api.github.com/users/mkw","html_url":"https://github.com/mkw","followers_url":"https://api.github.com/users/mkw/followers","following_url":"https://api.github.com/users/mkw/following{/other_user}","gists_url":"https://api.github.com/users/mkw/gists{/gist_id}","starred_url":"https://api.github.com/users/mkw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkw/subscriptions","organizations_url":"https://api.github.com/users/mkw/orgs","repos_url":"https://api.github.com/users/mkw/repos","events_url":"https://api.github.com/users/mkw/events{/privacy}","received_events_url":"https://api.github.com/users/mkw/received_events","type":"User","site_admin":false},"created_at":"2016-08-31T18:53:28Z","updated_at":"2016-08-31T18:53:28Z","author_association":"NONE","body":"I may have spoken too soon: While using the challenge/response mechanism is clearly more secure than pre-emptive authentication, it forces a double round-trip for every request because Apache HC will only cache authentication for the duration of an HttpClientContext.  Simple searches are quick enough that the extra request really adds up.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/246748200","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-246748200","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":246748200,"node_id":"MDEyOklzc3VlQ29tbWVudDI0Njc0ODIwMA==","user":{"login":"brandonkearby","id":230933,"node_id":"MDQ6VXNlcjIzMDkzMw==","avatar_url":"https://avatars2.githubusercontent.com/u/230933?v=4","gravatar_id":"","url":"https://api.github.com/users/brandonkearby","html_url":"https://github.com/brandonkearby","followers_url":"https://api.github.com/users/brandonkearby/followers","following_url":"https://api.github.com/users/brandonkearby/following{/other_user}","gists_url":"https://api.github.com/users/brandonkearby/gists{/gist_id}","starred_url":"https://api.github.com/users/brandonkearby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brandonkearby/subscriptions","organizations_url":"https://api.github.com/users/brandonkearby/orgs","repos_url":"https://api.github.com/users/brandonkearby/repos","events_url":"https://api.github.com/users/brandonkearby/events{/privacy}","received_events_url":"https://api.github.com/users/brandonkearby/received_events","type":"User","site_admin":false},"created_at":"2016-09-13T16:53:50Z","updated_at":"2016-09-13T16:53:50Z","author_association":"CONTRIBUTOR","body":"Hi Guys, I'm a little late to the party, but started working on a high level rest client. My company has been stuck on 1.4 due to the size of our codebase and number of clients in production. This low level REST client sparked the idea...  [https://github.com/brandonkearby/elasticsearch/tree/rest-client]\nWhat I did was backport the low level rest client into the 1.4 branch and renamed it to InternalRestClient. Then started supporting the various api calls. Everything was going pretty smooth until I started working on Aggregations as they need to provide the type. Anyway I'm interested in working on the high level rest client. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/257412549","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-257412549","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":257412549,"node_id":"MDEyOklzc3VlQ29tbWVudDI1NzQxMjU0OQ==","user":{"login":"dhay","id":569419,"node_id":"MDQ6VXNlcjU2OTQxOQ==","avatar_url":"https://avatars1.githubusercontent.com/u/569419?v=4","gravatar_id":"","url":"https://api.github.com/users/dhay","html_url":"https://github.com/dhay","followers_url":"https://api.github.com/users/dhay/followers","following_url":"https://api.github.com/users/dhay/following{/other_user}","gists_url":"https://api.github.com/users/dhay/gists{/gist_id}","starred_url":"https://api.github.com/users/dhay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dhay/subscriptions","organizations_url":"https://api.github.com/users/dhay/orgs","repos_url":"https://api.github.com/users/dhay/repos","events_url":"https://api.github.com/users/dhay/events{/privacy}","received_events_url":"https://api.github.com/users/dhay/received_events","type":"User","site_admin":false},"created_at":"2016-10-31T20:34:09Z","updated_at":"2016-10-31T20:34:09Z","author_association":"NONE","body":"I like the promise of the new 5.0 rest client. However, in it's current form, it isn't terribly useful. We would have to rewrite all of our query and index manipulation code to generate JSON.  Having a Client implementation based on the rest-client would be ideal, but doesn't seem like a straightforward thing to build.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263218689","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-263218689","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":263218689,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzIxODY4OQ==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-11-28T09:10:34Z","updated_at":"2016-11-28T09:10:34Z","author_association":"MEMBER","body":"Quick update: we are not going to implement the `Client` interface in the upcoming high level REST client. We'd rather to start with a clean design and focus on a better API for the time being. We will reuse as much as possible from the current java API though, meaning requests, responses and builders. We are experimenting on this. We are considering to extract the current java api into a common library, or just make the high level client depend on elasticsearch core, at least in the beginning.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265410540","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-265410540","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":265410540,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTQxMDU0MA==","user":{"login":"brandonkearby","id":230933,"node_id":"MDQ6VXNlcjIzMDkzMw==","avatar_url":"https://avatars2.githubusercontent.com/u/230933?v=4","gravatar_id":"","url":"https://api.github.com/users/brandonkearby","html_url":"https://github.com/brandonkearby","followers_url":"https://api.github.com/users/brandonkearby/followers","following_url":"https://api.github.com/users/brandonkearby/following{/other_user}","gists_url":"https://api.github.com/users/brandonkearby/gists{/gist_id}","starred_url":"https://api.github.com/users/brandonkearby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brandonkearby/subscriptions","organizations_url":"https://api.github.com/users/brandonkearby/orgs","repos_url":"https://api.github.com/users/brandonkearby/repos","events_url":"https://api.github.com/users/brandonkearby/events{/privacy}","received_events_url":"https://api.github.com/users/brandonkearby/received_events","type":"User","site_admin":false},"created_at":"2016-12-07T10:23:14Z","updated_at":"2016-12-07T10:28:26Z","author_association":"CONTRIBUTOR","body":"@javanna Not sure you took a peek, but I have a pretty much complete high level REST client already written for 1.4.1. It works with the existing Client and Admin interfaces\r\n\r\nhttps://github.com/brandonkearby/elasticsearch/commits/rest-client-1.4.1","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265578562","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-265578562","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":265578562,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTU3ODU2Mg==","user":{"login":"jettro","id":149687,"node_id":"MDQ6VXNlcjE0OTY4Nw==","avatar_url":"https://avatars1.githubusercontent.com/u/149687?v=4","gravatar_id":"","url":"https://api.github.com/users/jettro","html_url":"https://github.com/jettro","followers_url":"https://api.github.com/users/jettro/followers","following_url":"https://api.github.com/users/jettro/following{/other_user}","gists_url":"https://api.github.com/users/jettro/gists{/gist_id}","starred_url":"https://api.github.com/users/jettro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jettro/subscriptions","organizations_url":"https://api.github.com/users/jettro/orgs","repos_url":"https://api.github.com/users/jettro/repos","events_url":"https://api.github.com/users/jettro/events{/privacy}","received_events_url":"https://api.github.com/users/jettro/received_events","type":"User","site_admin":false},"created_at":"2016-12-07T21:27:48Z","updated_at":"2016-12-07T21:27:48Z","author_association":"NONE","body":"@javanna  If at all possible I would not make a dependency on core if that would mean you also have to pull in all the Lucene jars. I personally really like the idea of having as little dependencies as possible.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265587044","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-265587044","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":265587044,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTU4NzA0NA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-12-07T22:00:58Z","updated_at":"2016-12-07T22:00:58Z","author_association":"MEMBER","body":"> I personally really like the idea of having as little dependencies as possible.\r\n\r\n@jettro that makes sense and everybody would like to have no deps of course, but we need to focus first on having something to release rather sooner than later (for which the dependency on es core, hence lucene, is acceptable). After that we can focus on a long term solution, where we'll iterate and hopefully remove the dependency on es core. Other important point is trying to ease the migration from the Java API, for which reusing requests and responses is very important, I think more than removing the dependency on core at this point.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265661099","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-265661099","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":265661099,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTY2MTA5OQ==","user":{"login":"brandonkearby","id":230933,"node_id":"MDQ6VXNlcjIzMDkzMw==","avatar_url":"https://avatars2.githubusercontent.com/u/230933?v=4","gravatar_id":"","url":"https://api.github.com/users/brandonkearby","html_url":"https://github.com/brandonkearby","followers_url":"https://api.github.com/users/brandonkearby/followers","following_url":"https://api.github.com/users/brandonkearby/following{/other_user}","gists_url":"https://api.github.com/users/brandonkearby/gists{/gist_id}","starred_url":"https://api.github.com/users/brandonkearby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brandonkearby/subscriptions","organizations_url":"https://api.github.com/users/brandonkearby/orgs","repos_url":"https://api.github.com/users/brandonkearby/repos","events_url":"https://api.github.com/users/brandonkearby/events{/privacy}","received_events_url":"https://api.github.com/users/brandonkearby/received_events","type":"User","site_admin":false},"created_at":"2016-12-08T06:07:32Z","updated_at":"2016-12-08T06:07:32Z","author_association":"CONTRIBUTOR","body":"Yeah @javanna ease of migration was very important for us. It's the primary reason for adding it in 1.4.1 since that's the version we are on. That way we don't have to maintain to ways of doing things while in the transition state. This allows us to continue to use the transport client and once a customer's cluster has been reindex into a 5.0 cluster, we then switch them to the rest client. Same code using transport and rest in the same jvm.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265699361","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-265699361","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":265699361,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTY5OTM2MQ==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-12-08T09:53:24Z","updated_at":"2016-12-08T09:53:24Z","author_association":"MEMBER","body":"hey @brandonkearby thanks for the heads up I had a look at your branch. It is similar to what we intend to do, but we will most likely add the parsing code as `fromXContent` methods to all the classes that implement `ToXContent`, one step at a time. Also, ease of migration doesn't mean 1:1 replacement in our plan. We don't plan on implementing the `Client` interface like you did. We have been unhappy with the `Client` interface for a long time, see #9201. We would like to take the chance and clean that up, have a sync method and an async method, rather than a mix of the two. The compatibility will be on the request, builders and response side of things. The call itself will need some slight updating, which should be acceptable.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265719402","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-265719402","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":265719402,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTcxOTQwMg==","user":{"login":"brandonkearby","id":230933,"node_id":"MDQ6VXNlcjIzMDkzMw==","avatar_url":"https://avatars2.githubusercontent.com/u/230933?v=4","gravatar_id":"","url":"https://api.github.com/users/brandonkearby","html_url":"https://github.com/brandonkearby","followers_url":"https://api.github.com/users/brandonkearby/followers","following_url":"https://api.github.com/users/brandonkearby/following{/other_user}","gists_url":"https://api.github.com/users/brandonkearby/gists{/gist_id}","starred_url":"https://api.github.com/users/brandonkearby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brandonkearby/subscriptions","organizations_url":"https://api.github.com/users/brandonkearby/orgs","repos_url":"https://api.github.com/users/brandonkearby/repos","events_url":"https://api.github.com/users/brandonkearby/events{/privacy}","received_events_url":"https://api.github.com/users/brandonkearby/received_events","type":"User","site_admin":false},"created_at":"2016-12-08T11:32:26Z","updated_at":"2016-12-08T11:32:26Z","author_association":"CONTRIBUTOR","body":"@javanna, I started down the path of doing `fromXContent`, but there were places where the object graph didn't match the `JSON`. This made it difficult without a `DOM` approach. As far as the changes in #9201, looks a lot cleaner!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265749823","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-265749823","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":265749823,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTc0OTgyMw==","user":{"login":"dhay","id":569419,"node_id":"MDQ6VXNlcjU2OTQxOQ==","avatar_url":"https://avatars1.githubusercontent.com/u/569419?v=4","gravatar_id":"","url":"https://api.github.com/users/dhay","html_url":"https://github.com/dhay","followers_url":"https://api.github.com/users/dhay/followers","following_url":"https://api.github.com/users/dhay/following{/other_user}","gists_url":"https://api.github.com/users/dhay/gists{/gist_id}","starred_url":"https://api.github.com/users/dhay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dhay/subscriptions","organizations_url":"https://api.github.com/users/dhay/orgs","repos_url":"https://api.github.com/users/dhay/repos","events_url":"https://api.github.com/users/dhay/events{/privacy}","received_events_url":"https://api.github.com/users/dhay/received_events","type":"User","site_admin":false},"created_at":"2016-12-08T14:17:02Z","updated_at":"2016-12-08T14:17:02Z","author_association":"NONE","body":"Has there been any thought to collaborating on improving the existing REST client that is out there, Jest?\r\n\r\nhttps://github.com/searchbox-io/Jest\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/267126858","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-267126858","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":267126858,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NzEyNjg1OA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-12-14T19:12:00Z","updated_at":"2016-12-14T19:12:00Z","author_association":"MEMBER","body":"We just published a blogpost on the current state of the Java clients which should answer most of the questions around the REST client and its future: https://www.elastic.co/blog/state-of-the-official-elasticsearch-java-clients .\r\n\r\n@dhay as explained in the blog we considered different approaches but we decided to start from our own Java API and take it from there.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/267129071","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-267129071","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":267129071,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NzEyOTA3MQ==","user":{"login":"brusic","id":354105,"node_id":"MDQ6VXNlcjM1NDEwNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/354105?v=4","gravatar_id":"","url":"https://api.github.com/users/brusic","html_url":"https://github.com/brusic","followers_url":"https://api.github.com/users/brusic/followers","following_url":"https://api.github.com/users/brusic/following{/other_user}","gists_url":"https://api.github.com/users/brusic/gists{/gist_id}","starred_url":"https://api.github.com/users/brusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brusic/subscriptions","organizations_url":"https://api.github.com/users/brusic/orgs","repos_url":"https://api.github.com/users/brusic/repos","events_url":"https://api.github.com/users/brusic/events{/privacy}","received_events_url":"https://api.github.com/users/brusic/received_events","type":"User","site_admin":false},"created_at":"2016-12-14T19:20:31Z","updated_at":"2016-12-14T19:20:31Z","author_association":"CONTRIBUTOR","body":"From the blog: \"Benchmarks, however,  show that the performance of the HTTP client is close enough to that of the Transport client\"\r\n\r\nI do not read the results in the same way. :) Would love to see the benchmarks for multi-threaded indexing, not single-threaded. But this issue is regarding the RestClient, so I will rest my defense of the pure Java API for another time.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/267314370","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-267314370","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":267314370,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NzMxNDM3MA==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2016-12-15T12:17:39Z","updated_at":"2016-12-15T12:17:39Z","author_association":"MEMBER","body":"> I do not read the results in the same way. :)\r\n\r\n@brusic Can you please elaborate? I did the original benchmarks. Maybe something I did not explain something clearly enough in the blog post or I made a mistake (benchmarking is hard and even with great care something can go wrong :)).\r\n\r\n> Would love to see the benchmarks for multi-threaded indexing, not single-threaded.\r\n\r\nThat's one aspect that I thought about originally but I disregarded the idea because we needed to get an initial idea about the performance characteristics of REST vs. transport. Moreover, multi-threaded performance should be dominated by contention in the connection pool and not the client. Nevertheless, we could extend the benchmarks at a later time.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/267402631","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-267402631","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":267402631,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NzQwMjYzMQ==","user":{"login":"brusic","id":354105,"node_id":"MDQ6VXNlcjM1NDEwNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/354105?v=4","gravatar_id":"","url":"https://api.github.com/users/brusic","html_url":"https://github.com/brusic","followers_url":"https://api.github.com/users/brusic/followers","following_url":"https://api.github.com/users/brusic/following{/other_user}","gists_url":"https://api.github.com/users/brusic/gists{/gist_id}","starred_url":"https://api.github.com/users/brusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brusic/subscriptions","organizations_url":"https://api.github.com/users/brusic/orgs","repos_url":"https://api.github.com/users/brusic/repos","events_url":"https://api.github.com/users/brusic/events{/privacy}","received_events_url":"https://api.github.com/users/brusic/received_events","type":"User","site_admin":false},"created_at":"2016-12-15T18:25:18Z","updated_at":"2016-12-15T18:25:18Z","author_association":"CONTRIBUTOR","body":"According to the original blog post \"The HTTP client has between 4% and 7% smaller bulk indexing throughput than the transport client.\" In my world, those numbers are not close enough. :) I want to ask my boss for a 4%-7% raise. Hey, it's close enough!\r\n\r\nThe blog continues to say that those benchmarks are under lab conditions, but the underlying problem remains. Then again, without multi-threaded benchmarks, I am disregarding the results. :) I use the binary API for indexing and REST for searching since I need all the performance I can get from indexing. The only reason why I use Jest is because I have a dependency on an older version of Lucene in my code and therefore cannot use the elasticsearch jar. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/267454847","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-267454847","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":267454847,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NzQ1NDg0Nw==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-12-15T21:51:37Z","updated_at":"2016-12-15T21:51:37Z","author_association":"MEMBER","body":"heya @brusic I think numbers outside of context can be misleading. Using the Java API has so many downsides at this point, like explained in the blogpost, that ~ 5% performance loss is reasonable. We will also work to make the REST client as performant as we can (and do more benchmarks like you are suggesting). That's the right trade-off. The main reason why we had the Java API in the first place wasn't performance, rather that it came for free :) If we started today from scratch we wouldn't expose the transport layer to users anymore, which is why we decided to go down this path.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/277349740","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-277349740","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":277349740,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM0OTc0MA==","user":{"login":"godiedelrio","id":16105328,"node_id":"MDQ6VXNlcjE2MTA1MzI4","avatar_url":"https://avatars1.githubusercontent.com/u/16105328?v=4","gravatar_id":"","url":"https://api.github.com/users/godiedelrio","html_url":"https://github.com/godiedelrio","followers_url":"https://api.github.com/users/godiedelrio/followers","following_url":"https://api.github.com/users/godiedelrio/following{/other_user}","gists_url":"https://api.github.com/users/godiedelrio/gists{/gist_id}","starred_url":"https://api.github.com/users/godiedelrio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/godiedelrio/subscriptions","organizations_url":"https://api.github.com/users/godiedelrio/orgs","repos_url":"https://api.github.com/users/godiedelrio/repos","events_url":"https://api.github.com/users/godiedelrio/events{/privacy}","received_events_url":"https://api.github.com/users/godiedelrio/received_events","type":"User","site_admin":false},"created_at":"2017-02-03T20:10:33Z","updated_at":"2017-02-03T20:10:33Z","author_association":"NONE","body":"If the request / response objects are meant to be reused in the Java Rest Client, care should be taken to not impose java 8 on the client side, IMHO. That way many codebases that can't easly upgrade to Java 8 can still continue to use Elasticsearch 5 through the Java Rest Client.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/282043310","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-282043310","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":282043310,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MjA0MzMxMA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-02-23T16:28:06Z","updated_at":"2017-02-23T16:28:06Z","author_association":"MEMBER","body":"hi @godiedelrio , we high level REST client will still depend on Elasticsearch at least in the beginning.  That means it will also require java 8. People that can't upgrade to java 8 or don't want Elasticsearch as a dependency can use the low level REST client, and take care of writing requests and reading back responses in their own application.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/282046063","html_url":"https://github.com/elastic/elasticsearch/issues/19055#issuecomment-282046063","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19055","id":282046063,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MjA0NjA2Mw==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-02-23T16:36:57Z","updated_at":"2017-02-23T16:36:57Z","author_association":"MEMBER","body":"Closing this in favour of #23331 that's more specific to the high level REST client.","performed_via_github_app":null}]