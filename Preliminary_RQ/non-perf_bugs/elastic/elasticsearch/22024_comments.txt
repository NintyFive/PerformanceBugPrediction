[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265720822","html_url":"https://github.com/elastic/elasticsearch/issues/22024#issuecomment-265720822","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22024","id":265720822,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTcyMDgyMg==","user":{"login":"makeyang","id":13898618,"node_id":"MDQ6VXNlcjEzODk4NjE4","avatar_url":"https://avatars2.githubusercontent.com/u/13898618?v=4","gravatar_id":"","url":"https://api.github.com/users/makeyang","html_url":"https://github.com/makeyang","followers_url":"https://api.github.com/users/makeyang/followers","following_url":"https://api.github.com/users/makeyang/following{/other_user}","gists_url":"https://api.github.com/users/makeyang/gists{/gist_id}","starred_url":"https://api.github.com/users/makeyang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/makeyang/subscriptions","organizations_url":"https://api.github.com/users/makeyang/orgs","repos_url":"https://api.github.com/users/makeyang/repos","events_url":"https://api.github.com/users/makeyang/events{/privacy}","received_events_url":"https://api.github.com/users/makeyang/received_events","type":"User","site_admin":false},"created_at":"2016-12-08T11:40:53Z","updated_at":"2016-12-08T11:40:53Z","author_association":"CONTRIBUTOR","body":"segment-based or segments-based replication is really helpful for certain scenario.let's say to provide something like read-write isloate which is common in database.\r\nbut this feature shouldn't bound to shared filesystem.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265726409","html_url":"https://github.com/elastic/elasticsearch/issues/22024#issuecomment-265726409","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22024","id":265726409,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTcyNjQwOQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-12-08T12:14:09Z","updated_at":"2016-12-08T12:14:09Z","author_association":"MEMBER","body":"@makeyang yes. Segment based replication represent different trade offs and is interesting in some aspects. As you say - it is not bound to a shared file system. We talking (for a long time) about the cons and pros of it and how to potentially implement it without relying on a shared file system to do the heavy lifting of transferring files between nodes (note that we currently rely on the translog to be copied as well, something segment based replication doesn't imply). If and when we implement it, it should work on normal file systems. Since that's the hardest part to address, I don't feel there is value in keeping shadow replicas to expedite segment based replication (if this is what you meant). ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265910604","html_url":"https://github.com/elastic/elasticsearch/issues/22024#issuecomment-265910604","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22024","id":265910604,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTkxMDYwNA==","user":{"login":"makeyang","id":13898618,"node_id":"MDQ6VXNlcjEzODk4NjE4","avatar_url":"https://avatars2.githubusercontent.com/u/13898618?v=4","gravatar_id":"","url":"https://api.github.com/users/makeyang","html_url":"https://github.com/makeyang","followers_url":"https://api.github.com/users/makeyang/followers","following_url":"https://api.github.com/users/makeyang/following{/other_user}","gists_url":"https://api.github.com/users/makeyang/gists{/gist_id}","starred_url":"https://api.github.com/users/makeyang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/makeyang/subscriptions","organizations_url":"https://api.github.com/users/makeyang/orgs","repos_url":"https://api.github.com/users/makeyang/repos","events_url":"https://api.github.com/users/makeyang/events{/privacy}","received_events_url":"https://api.github.com/users/makeyang/received_events","type":"User","site_admin":false},"created_at":"2016-12-09T01:48:36Z","updated_at":"2016-12-09T01:48:36Z","author_association":"CONTRIBUTOR","body":"@bleskes  got it. thanks. if translog based or segment based asynchronous replication is implemente, it is really no reaso to keep shadow replicas.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/266723924","html_url":"https://github.com/elastic/elasticsearch/issues/22024#issuecomment-266723924","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22024","id":266723924,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NjcyMzkyNA==","user":{"login":"chenryn","id":1219655,"node_id":"MDQ6VXNlcjEyMTk2NTU=","avatar_url":"https://avatars3.githubusercontent.com/u/1219655?v=4","gravatar_id":"","url":"https://api.github.com/users/chenryn","html_url":"https://github.com/chenryn","followers_url":"https://api.github.com/users/chenryn/followers","following_url":"https://api.github.com/users/chenryn/following{/other_user}","gists_url":"https://api.github.com/users/chenryn/gists{/gist_id}","starred_url":"https://api.github.com/users/chenryn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chenryn/subscriptions","organizations_url":"https://api.github.com/users/chenryn/orgs","repos_url":"https://api.github.com/users/chenryn/repos","events_url":"https://api.github.com/users/chenryn/events{/privacy}","received_events_url":"https://api.github.com/users/chenryn/received_events","type":"User","site_admin":false},"created_at":"2016-12-13T12:15:38Z","updated_at":"2016-12-13T12:15:38Z","author_association":"NONE","body":"Is this meaning asynchronous replica will be published when shadow replica is totally removed?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/266821062","html_url":"https://github.com/elastic/elasticsearch/issues/22024#issuecomment-266821062","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22024","id":266821062,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NjgyMTA2Mg==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2016-12-13T18:30:38Z","updated_at":"2016-12-13T18:30:38Z","author_association":"MEMBER","body":"> Is this meaning asynchronous replica will be published when shadow replica is totally removed?\r\n\r\nIt does not mean that.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/278617083","html_url":"https://github.com/elastic/elasticsearch/issues/22024#issuecomment-278617083","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22024","id":278617083,"node_id":"MDEyOklzc3VlQ29tbWVudDI3ODYxNzA4Mw==","user":{"login":"apatrida","id":182340,"node_id":"MDQ6VXNlcjE4MjM0MA==","avatar_url":"https://avatars3.githubusercontent.com/u/182340?v=4","gravatar_id":"","url":"https://api.github.com/users/apatrida","html_url":"https://github.com/apatrida","followers_url":"https://api.github.com/users/apatrida/followers","following_url":"https://api.github.com/users/apatrida/following{/other_user}","gists_url":"https://api.github.com/users/apatrida/gists{/gist_id}","starred_url":"https://api.github.com/users/apatrida/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apatrida/subscriptions","organizations_url":"https://api.github.com/users/apatrida/orgs","repos_url":"https://api.github.com/users/apatrida/repos","events_url":"https://api.github.com/users/apatrida/events{/privacy}","received_events_url":"https://api.github.com/users/apatrida/received_events","type":"User","site_admin":false},"created_at":"2017-02-09T11:31:30Z","updated_at":"2017-02-09T11:31:30Z","author_association":"CONTRIBUTOR","body":"what about read heavy scenarios where you want to scale uniformly per node without the delay of replication (segment or per transaction) or without the cost of applying them (per transaction) and maybe over a WAN (segment would work for that, since likely it is async)?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/278617864","html_url":"https://github.com/elastic/elasticsearch/issues/22024#issuecomment-278617864","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22024","id":278617864,"node_id":"MDEyOklzc3VlQ29tbWVudDI3ODYxNzg2NA==","user":{"login":"apatrida","id":182340,"node_id":"MDQ6VXNlcjE4MjM0MA==","avatar_url":"https://avatars3.githubusercontent.com/u/182340?v=4","gravatar_id":"","url":"https://api.github.com/users/apatrida","html_url":"https://github.com/apatrida","followers_url":"https://api.github.com/users/apatrida/followers","following_url":"https://api.github.com/users/apatrida/following{/other_user}","gists_url":"https://api.github.com/users/apatrida/gists{/gist_id}","starred_url":"https://api.github.com/users/apatrida/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apatrida/subscriptions","organizations_url":"https://api.github.com/users/apatrida/orgs","repos_url":"https://api.github.com/users/apatrida/repos","events_url":"https://api.github.com/users/apatrida/events{/privacy}","received_events_url":"https://api.github.com/users/apatrida/received_events","type":"User","site_admin":false},"created_at":"2017-02-09T11:35:54Z","updated_at":"2017-02-09T11:35:54Z","author_association":"CONTRIBUTOR","body":"Other question related to the future of replacing this, because not sure where thinking is represented (other github issue) for future replication models.\r\n\r\nWAN replication => the clusters are not one cluster, but two distinct and may have different shard balances.  Poor man's version of this now is `near-cluster=>S3 backup/snapshot=>S3 restore snapshot=>remote-cluster`","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/278649782","html_url":"https://github.com/elastic/elasticsearch/issues/22024#issuecomment-278649782","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22024","id":278649782,"node_id":"MDEyOklzc3VlQ29tbWVudDI3ODY0OTc4Mg==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2017-02-09T14:05:44Z","updated_at":"2017-02-09T14:05:44Z","author_association":"MEMBER","body":"> what about read heavy scenarios where you want to scale uniformly per node without the delay of replication (segment or per transaction) or without the cost of applying them (per transaction)\r\n\r\nI'm not sure what you mean? a ready heavy environment means writing is not a big deal, and most of the work of the shards is to serve reads. Shadow replicas, which still need to push the segments (with the few new documents) and do stuff like merging, won't help much there?\r\n\r\n> maybe over a WAN\r\n> Poor man's version of this now is near-cluster=>S3 backup/snapshot=>S3 restore snapshot=>remote-cluster\r\n\r\nI need, snapshot and restore is the current solution. Shadow replicas are not a long term solution as the current implementation assumes a shared file system. We are working on stuff like changes API which will allow you to stream (with delay) operations to another cluster.\r\n","performed_via_github_app":null}]