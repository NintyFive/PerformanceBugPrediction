{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/5759","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5759/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5759/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5759/events","html_url":"https://github.com/elastic/elasticsearch/issues/5759","id":31227595,"node_id":"MDU6SXNzdWUzMTIyNzU5NQ==","number":5759,"title":"UncategorizedExecutionException in Bulk Update Java API","user":{"login":"fuwaneko","id":34433,"node_id":"MDQ6VXNlcjM0NDMz","avatar_url":"https://avatars0.githubusercontent.com/u/34433?v=4","gravatar_id":"","url":"https://api.github.com/users/fuwaneko","html_url":"https://github.com/fuwaneko","followers_url":"https://api.github.com/users/fuwaneko/followers","following_url":"https://api.github.com/users/fuwaneko/following{/other_user}","gists_url":"https://api.github.com/users/fuwaneko/gists{/gist_id}","starred_url":"https://api.github.com/users/fuwaneko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fuwaneko/subscriptions","organizations_url":"https://api.github.com/users/fuwaneko/orgs","repos_url":"https://api.github.com/users/fuwaneko/repos","events_url":"https://api.github.com/users/fuwaneko/events{/privacy}","received_events_url":"https://api.github.com/users/fuwaneko/received_events","type":"User","site_admin":false},"labels":[{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2014-04-10T09:37:49Z","updated_at":"2015-02-28T05:14:32Z","closed_at":"2015-02-28T05:14:32Z","author_association":"NONE","active_lock_reason":null,"body":"I'm absolutely positive that there are no nulls in data I try to update document with; index, type and id are valid as well. Moreover, if I try to just call update API in a cycle it works fine.\n\nThis error occurs _only_ if I try to call actionGet() after execute().\n\nDidn't happen on 0.90.9, started to bother me since 0.90.10, present in 0.90.13. We can't update to 1.1 yet as it requires a lot of work in production and the bug is still present in 1.1 as my local test shows.\n\nI'm fine with not being able to get bulk response in this case, but it still bothers me. Happens on both my Mac OS X with Java 1.8 and in production on Ubuntu with 1.7.\n\n```\norg.elasticsearch.common.util.concurrent.UncategorizedExecutionException: Failed execution\n    at org.elasticsearch.action.support.AdapterActionFuture.rethrowExecutionException(AdapterActionFuture.java:88)\n    at org.elasticsearch.action.support.AdapterActionFuture.actionGet(AdapterActionFuture.java:49)\n    at com.ark.imapworker.Spider.makeThreads(Spider.scala:342)\n    at com.ark.imapworker.Spider$$anonfun$receive$1.applyOrElse(Spider.scala:539)\n    at akka.actor.Actor$class.aroundReceive(Actor.scala:465)\n    at com.ark.imapworker.Spider.aroundReceive(Spider.scala:34)\n    at akka.actor.ActorCell.receiveMessage(ActorCell.scala:516)\n    at akka.actor.ActorCell.invoke(ActorCell.scala:487)\n    at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:238)\n    at akka.dispatch.Mailbox.run(Mailbox.scala:220)\n    at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:393)\n    at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)\n    at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)\n    at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)\n    at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)\nCaused by: java.lang.NullPointerException\n    at org.elasticsearch.action.bulk.BulkResponse.writeTo(BulkResponse.java:116)\n    at org.elasticsearch.transport.netty.NettyTransportChannel.sendResponse(NettyTransportChannel.java:83)\n    at org.elasticsearch.transport.netty.NettyTransportChannel.sendResponse(NettyTransportChannel.java:62)\n    at org.elasticsearch.action.bulk.TransportBulkAction$TransportHandler$1.onResponse(TransportBulkAction.java:309)\n    at org.elasticsearch.action.bulk.TransportBulkAction$TransportHandler$1.onResponse(TransportBulkAction.java:305)\n    at org.elasticsearch.action.bulk.TransportBulkAction.executeBulk(TransportBulkAction.java:240)\n    at org.elasticsearch.action.bulk.TransportBulkAction.doExecute(TransportBulkAction.java:138)\n    at org.elasticsearch.action.bulk.TransportBulkAction.doExecute(TransportBulkAction.java:61)\n    at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:63)\n    at org.elasticsearch.action.bulk.TransportBulkAction$TransportHandler.messageReceived(TransportBulkAction.java:305)\n    at org.elasticsearch.action.bulk.TransportBulkAction$TransportHandler.messageReceived(TransportBulkAction.java:294)\n    at org.elasticsearch.transport.netty.MessageChannelHandler.handleRequest(MessageChannelHandler.java:212)\n    at org.elasticsearch.transport.netty.MessageChannelHandler.messageReceived(MessageChannelHandler.java:109)\n    at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:296)\n    at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:462)\n    at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.callDecode(FrameDecoder.java:443)\n    at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.messageReceived(FrameDecoder.java:303)\n    at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:74)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:268)\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:255)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)\n    at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)\n    at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:318)\n    at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)\n    at org.elasticsearch.common.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\n    at org.elasticsearch.common.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:744)\n```\n\nThe code is quite trivial (Scala, but oh well).\n\n``` Scala\nval request = es.prepareBulk()\nfor (id ‚Üê ids)\n  request.add(\n    es.prepareUpdate(index, type, id).setDoc(\"threadId\", threadId)\n  )\n\n// this throws\nval response = request.execute().actionGet()\nif (response.hasFailures)\n  log.error(response.buildFailureMessage())\n// this doesn't\nrequest.execute()\n```\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}