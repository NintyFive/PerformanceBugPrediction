{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/40115","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40115/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40115/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40115/events","html_url":"https://github.com/elastic/elasticsearch/issues/40115","id":421670333,"node_id":"MDU6SXNzdWU0MjE2NzAzMzM=","number":40115,"title":"Factor GC overhead in circuit breakers","user":{"login":"Bukhtawar","id":12809319,"node_id":"MDQ6VXNlcjEyODA5MzE5","avatar_url":"https://avatars0.githubusercontent.com/u/12809319?v=4","gravatar_id":"","url":"https://api.github.com/users/Bukhtawar","html_url":"https://github.com/Bukhtawar","followers_url":"https://api.github.com/users/Bukhtawar/followers","following_url":"https://api.github.com/users/Bukhtawar/following{/other_user}","gists_url":"https://api.github.com/users/Bukhtawar/gists{/gist_id}","starred_url":"https://api.github.com/users/Bukhtawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bukhtawar/subscriptions","organizations_url":"https://api.github.com/users/Bukhtawar/orgs","repos_url":"https://api.github.com/users/Bukhtawar/repos","events_url":"https://api.github.com/users/Bukhtawar/events{/privacy}","received_events_url":"https://api.github.com/users/Bukhtawar/received_events","type":"User","site_admin":false},"labels":[{"id":166507771,"node_id":"MDU6TGFiZWwxNjY1MDc3NzE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Circuit%20Breakers","name":":Core/Infra/Circuit Breakers","color":"0e8a16","default":false,"description":"Track estimates of memory consumption to prevent overload"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2019-03-15T19:23:54Z","updated_at":"2019-06-14T14:29:21Z","closed_at":"2019-06-14T14:29:20Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Problem Description\r\nThere are a bunch of circuit breakers that track for estimated bytes consumed for major memory contributors but there is still room for unaccounted memory #35564, #20837, #20250 etc. The newly introduced real circuit breaker #31767 isn't foolproof as large time gaps between reservation and actual allocation can cause few bulky concurrent request to cause OOM.\r\n\r\n### Proposal\r\nSince large GC overhead is an early sign of struggling GC and non-collectible heap which may keep on growing. The proposal is to factor in overhead in addition to actual heap consumption based on user configurable setting `gc_overhead_threshold` to detect symptoms early. If the node is already running a high GC overhead based on weighed average of past few GC runs we start to trip requests on the node. ","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}