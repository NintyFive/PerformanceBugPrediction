{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/17045","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17045/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17045/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17045/events","html_url":"https://github.com/elastic/elasticsearch/issues/17045","id":139854270,"node_id":"MDU6SXNzdWUxMzk4NTQyNzA=","number":17045,"title":"Feature request: return only matching terms from Search/Query API  ","user":{"login":"basiclaser","id":3663537,"node_id":"MDQ6VXNlcjM2NjM1Mzc=","avatar_url":"https://avatars1.githubusercontent.com/u/3663537?v=4","gravatar_id":"","url":"https://api.github.com/users/basiclaser","html_url":"https://github.com/basiclaser","followers_url":"https://api.github.com/users/basiclaser/followers","following_url":"https://api.github.com/users/basiclaser/following{/other_user}","gists_url":"https://api.github.com/users/basiclaser/gists{/gist_id}","starred_url":"https://api.github.com/users/basiclaser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/basiclaser/subscriptions","organizations_url":"https://api.github.com/users/basiclaser/orgs","repos_url":"https://api.github.com/users/basiclaser/repos","events_url":"https://api.github.com/users/basiclaser/events{/privacy}","received_events_url":"https://api.github.com/users/basiclaser/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-03-10T10:58:02Z","updated_at":"2018-10-01T15:34:34Z","closed_at":"2018-10-01T15:34:34Z","author_association":"NONE","active_lock_reason":null,"body":"# **Describe the feature:**\n\n Queries should have the option to just return a collection of matching terms ( not the documents containing the matching terms ). This would combine the power and flexibility of queries with the output of suggesters. \n# **Example**\n\nLet's assume the following data is indexed:\n\n```\n{title: 'Krylov subspace methods'},\n{title: 'SUPG methods for finite differences'},\n```\n\nif i query the following - \n\n```\n{\n    \"fuzzy\" : {\n        \"title\" : \"krylo\"\n    }\n}\n```\n\nThe response object contains \"krylov\", not the _entire field or document_ containing \"krylov\".\n\nThis allows users to construct more powerful queries to find _terms_, in lieu of using comparatively limited suggesters. \n\nEDIT: to clarify I'm aware that something similar is achievable with the use of highlights, but that seems wasteful, less predictable and a bit hacky.\n","closed_by":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"performed_via_github_app":null}