[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/57806135","html_url":"https://github.com/elastic/elasticsearch/issues/7974#issuecomment-57806135","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7974","id":57806135,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODA2MTM1","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-10-03T14:48:56Z","updated_at":"2014-10-03T14:48:56Z","author_association":"CONTRIBUTOR","body":"@marcok I think the fact that queries can target several shards makes it hard to evict by type? Maybe there is some confusion about how queries are executed? When a queries spans several shards, elasticsearch doesn't run the query twice on each type and then merges the results. On the contrary, since all types are stored in the same lucene index at the shard level, the query is run only once. Setting a type is pretty much like adding a filter in practice.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/57808237","html_url":"https://github.com/elastic/elasticsearch/issues/7974#issuecomment-57808237","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7974","id":57808237,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODA4MjM3","user":{"login":"marcok","id":2509708,"node_id":"MDQ6VXNlcjI1MDk3MDg=","avatar_url":"https://avatars2.githubusercontent.com/u/2509708?v=4","gravatar_id":"","url":"https://api.github.com/users/marcok","html_url":"https://github.com/marcok","followers_url":"https://api.github.com/users/marcok/followers","following_url":"https://api.github.com/users/marcok/following{/other_user}","gists_url":"https://api.github.com/users/marcok/gists{/gist_id}","starred_url":"https://api.github.com/users/marcok/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marcok/subscriptions","organizations_url":"https://api.github.com/users/marcok/orgs","repos_url":"https://api.github.com/users/marcok/repos","events_url":"https://api.github.com/users/marcok/events{/privacy}","received_events_url":"https://api.github.com/users/marcok/received_events","type":"User","site_admin":false},"created_at":"2014-10-03T15:03:40Z","updated_at":"2014-10-03T15:03:40Z","author_association":"NONE","body":"atm the cache is stored at the shard level and gets evicted when receiving any INS/DEL/UPD right?\nI see no problem to evict only those caches based on a query with the _type in the filter which has been INS/DEL/UPD.\nI agree it's not a very easy task to figure out which query cache is affected (parsing the query), particular if the cache is stored with a query hash as they cache key, which I assume it is. So maybe it was a stupid idea :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/57809938","html_url":"https://github.com/elastic/elasticsearch/issues/7974#issuecomment-57809938","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7974","id":57809938,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODA5OTM4","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-10-03T15:15:29Z","updated_at":"2014-10-03T15:15:29Z","author_association":"CONTRIBUTOR","body":"> atm the cache is stored at the shard level and gets evicted when receiving any INS/DEL/UPD right?\n\nIt is a bit more complicated than that. Elasticsearch write operations are not searchable immediately, you need to wait until something that we call a `refresh`, whose purpose is to make data visible to search operations. By default this runs every second and this cache is cleared whenever there is a refresh operation happening that actually does something (so that if no updates were performed in the last second, you don't clear the cache). Currently the cache key is the tuple formed by the request object and the version of the index (which is incremented whenever a refresh operation occurs).\n\nAlthough we could make the cache more fine-grained as you suggest by having per-type caches and tracking which types have been modified but I'm not sure the complexity is worth the benefits? If someone feels like per-type cache would help a lot, maybe that means that data should actually live in several indices?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/57827337","html_url":"https://github.com/elastic/elasticsearch/issues/7974#issuecomment-57827337","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7974","id":57827337,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODI3MzM3","user":{"login":"marcok","id":2509708,"node_id":"MDQ6VXNlcjI1MDk3MDg=","avatar_url":"https://avatars2.githubusercontent.com/u/2509708?v=4","gravatar_id":"","url":"https://api.github.com/users/marcok","html_url":"https://github.com/marcok","followers_url":"https://api.github.com/users/marcok/followers","following_url":"https://api.github.com/users/marcok/following{/other_user}","gists_url":"https://api.github.com/users/marcok/gists{/gist_id}","starred_url":"https://api.github.com/users/marcok/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marcok/subscriptions","organizations_url":"https://api.github.com/users/marcok/orgs","repos_url":"https://api.github.com/users/marcok/repos","events_url":"https://api.github.com/users/marcok/events{/privacy}","received_events_url":"https://api.github.com/users/marcok/received_events","type":"User","site_admin":false},"created_at":"2014-10-03T17:29:43Z","updated_at":"2014-10-03T17:29:43Z","author_association":"NONE","body":"\"I'm not sure the complexity is worth the benefits\"\nI completely agree. For sure it would increase the cache hit ratio a lot in some scenarios, but if all the things goes much more complex its probably not worth. Anyway I close it, may you can put it on low prio wishlist :)\n","performed_via_github_app":null}]