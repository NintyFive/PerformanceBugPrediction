[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/278611759","html_url":"https://github.com/elastic/elasticsearch/issues/23003#issuecomment-278611759","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23003","id":278611759,"node_id":"MDEyOklzc3VlQ29tbWVudDI3ODYxMTc1OQ==","user":{"login":"martinscholz83","id":19551763,"node_id":"MDQ6VXNlcjE5NTUxNzYz","avatar_url":"https://avatars0.githubusercontent.com/u/19551763?v=4","gravatar_id":"","url":"https://api.github.com/users/martinscholz83","html_url":"https://github.com/martinscholz83","followers_url":"https://api.github.com/users/martinscholz83/followers","following_url":"https://api.github.com/users/martinscholz83/following{/other_user}","gists_url":"https://api.github.com/users/martinscholz83/gists{/gist_id}","starred_url":"https://api.github.com/users/martinscholz83/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martinscholz83/subscriptions","organizations_url":"https://api.github.com/users/martinscholz83/orgs","repos_url":"https://api.github.com/users/martinscholz83/repos","events_url":"https://api.github.com/users/martinscholz83/events{/privacy}","received_events_url":"https://api.github.com/users/martinscholz83/received_events","type":"User","site_admin":false},"created_at":"2017-02-09T11:05:48Z","updated_at":"2017-02-09T11:06:16Z","author_association":"CONTRIBUTOR","body":"Hi @xo4n , when you say \"The same query for a shorter period of time\" do you mean that you set the `interval` smaller which produces less results per aggregation, or do you mean you query not so much indices?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/278750567","html_url":"https://github.com/elastic/elasticsearch/issues/23003#issuecomment-278750567","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23003","id":278750567,"node_id":"MDEyOklzc3VlQ29tbWVudDI3ODc1MDU2Nw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-02-09T19:44:05Z","updated_at":"2017-02-09T19:44:05Z","author_association":"CONTRIBUTOR","body":"@colings86 any ideas?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/278899319","html_url":"https://github.com/elastic/elasticsearch/issues/23003#issuecomment-278899319","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23003","id":278899319,"node_id":"MDEyOklzc3VlQ29tbWVudDI3ODg5OTMxOQ==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2017-02-10T09:39:12Z","updated_at":"2017-02-10T09:39:12Z","author_association":"MEMBER","body":"@xo4n It looks like it's getting stuck in a compression event and not making any progress.\r\n\r\nTo explain this let me describe a little about the T-Digest algorithm thats used for the percentiles aggregation: As the aggregation collects values from the matching documents it creates a histogram of centroids that combine similar values (the method of creating these centroids is not important here but if you are interested I would advise reading the [t-digest paper](https://github.com/tdunning/t-digest/blob/master/docs/t-digest-paper/histo.pdf). These centroids continue being created as more documents are created and at some point a compress event is triggered to reduce the number of centroids back to a manageable number. The compression strategy is to re-insert all of the centroids in a random order, which because of the way values are combined should result in less centroids being created.\r\n\r\nIn your case it seems to be that a compression event has been triggered and while re-inserting the centroids its is recursively triggering another compression event which in turn is triggering another compression event and so on until it overflows the stack. This is something I have not seen before.\r\n\r\nUnfortunately, this is probably going to be a little tricky to reproduce since getting the same failure will require having the same data inserted into the algorithm, so please bear with me but I will try to get to the bottom of this for you.\r\n\r\nThe good news is that because you have time based indices and your top level aggregation is a `date_histogram` we should be able to filter this down to a single index and a single 12 hour period within that index. Could you please run the same query against the following indices, one index at a time (its best if you query Elasticsearch through something like Console for this rather than modfying your visualisation in Kibana) ?\r\n\r\n```\r\n\"rum_custom-2017.01.22\"\r\n\"rum_custom-2017.01.23\"\r\n\"rum_custom-2017.01.24\"\r\n\"rum_custom-2017.01.25\"\r\n\"rum_custom-2017.01.26\"\r\n```\r\n\r\nDoing this should hopefully tell you which of these indices is causing the issue (my assumption is it is not the indices from 2017.01.27 to 2017.02.06 since the query across these indices worked).\r\n\r\nOnce you know which index is causing the issue you will have reduced the problem to two 12 hour buckets. The next step will be to modify the range query in your search request to search from 00:00:00 to 12:00:00 on that day and run the request to see if the issue reproduces, if not change the query to 12:00:00 on that day to 00:00:00 the following day.\r\n\r\nAt this point you should have narrowed the problem down to a 12 hour period in a single index. If you are happy you can share the index with me privately (I can give you details if you let me know you want to go this route) I could then try to debug the problem. Is this something you would be willing to do? If so, could you let me know how big the index is once you have identified it using the steps above?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/303750528","html_url":"https://github.com/elastic/elasticsearch/issues/23003#issuecomment-303750528","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23003","id":303750528,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMzc1MDUyOA==","user":{"login":"xo4n","id":9038651,"node_id":"MDQ6VXNlcjkwMzg2NTE=","avatar_url":"https://avatars3.githubusercontent.com/u/9038651?v=4","gravatar_id":"","url":"https://api.github.com/users/xo4n","html_url":"https://github.com/xo4n","followers_url":"https://api.github.com/users/xo4n/followers","following_url":"https://api.github.com/users/xo4n/following{/other_user}","gists_url":"https://api.github.com/users/xo4n/gists{/gist_id}","starred_url":"https://api.github.com/users/xo4n/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xo4n/subscriptions","organizations_url":"https://api.github.com/users/xo4n/orgs","repos_url":"https://api.github.com/users/xo4n/repos","events_url":"https://api.github.com/users/xo4n/events{/privacy}","received_events_url":"https://api.github.com/users/xo4n/received_events","type":"User","site_admin":false},"created_at":"2017-05-24T14:58:08Z","updated_at":"2017-05-24T14:58:08Z","author_association":"NONE","body":"We figured  out which data could be causing this\r\n\r\nWe were mapping some fields to **half_float** that actually contain  bigger values than what a **half_float** can handle. Not sure what value Elasticsearch indexes in such cases but when running percentile calculations on a field with several of these, the issue is reproducible.\r\n\r\nBelow there is a data example. We are sending key value fields as strings and mapping to **half_float** the numeric ones. Fields like  **\"v_startTime\"**   are holding very high values in some cases and those are causing the issue.  When sorting those fields already, the ones causing trouble have  **\"sort\": [\"Infinity\" ]** instead of its numeric value\r\n\r\nTable View ( excerpt) \r\n```\r\n# v_duration\t   \t5,862.045\r\nt v_entryType\t   \tmeasure\r\nt v_name\t   \tgtm_time_to_first_tag_item\r\n# v_startTime\t   \t75,810.745\r\n```\r\n\r\nJSON View\r\n```\r\n{\r\n\t\"_index\": \"rum_custom-2017.05.23\",\r\n\t\"_type\": \"logs\",\r\n\t\"_id\": \"AVwy0ptHX7d39WTa_HhR\",\r\n\t\"_score\": null,\r\n\t\"_source\": {\r\n\t\t\"geoip\": {\r\n\t\t\t\"country_code2\": \"IN\",\r\n\t\t\t\"continent_code\": \"AS\"\r\n\t\t},\r\n\t\t\"ua_build\": \"83\",\r\n\t\t\"v_startTime\": \"75810.745\",\r\n\t\t\"ua_os_major\": \"4\",\r\n\t\t\"ua_os\": \"Android 4.4.4\",\r\n\t\t\"locale\": \"IN\",\r\n\t\t\"ua_patch\": \"3029\",\r\n\t\t\"ua_minor\": \"0\",\r\n\t\t\"@timestamp\": \"2017-05-23T01:01:21.000Z\",\r\n\t\t\"ua_name\": \"Chrome Mobile\",\r\n\t\t\"ua_os_minor\": \"4\",\r\n\t\t\"ua_major\": \"58\",\r\n\t\t\"ua_device\": \"HM NOTE 1S\",\r\n\t\t\"v_entryType\": \"measure\",\r\n\t\t\"user_agent\": \"Mozilla/5.0 (Linux; Android 4.4.4; HM NOTE 1S Build/KTU84P) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.83 Mobile Safari/537.36\",\r\n\t\t\"v_name\": \"gtm_time_to_first_tag_item\",\r\n\t\t\"v_duration\": \"5862.045\",\r\n\t\t\"ua_os_name\": \"Android\"\r\n\t},\r\n\t\"fields\": {\r\n\t\t\"@timestamp\": [\r\n\t\t\t1495501281000\r\n\t\t]\r\n\t},\r\n\t\"sort\": [\r\n\t\t\"Infinity\"\r\n\t]\r\n}\r\n```\r\nWe could attach some more data if needed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/303761334","html_url":"https://github.com/elastic/elasticsearch/issues/23003#issuecomment-303761334","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23003","id":303761334,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMzc2MTMzNA==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2017-05-24T15:32:15Z","updated_at":"2017-05-24T15:32:31Z","author_association":"MEMBER","body":"@xo4n thanks for the update. This is interesting. My current working theory is that the problem is due caused when you insert the same value into the t-digest algorithm load of times (in your case I think it's inserting either HalfFloat.MAX_VALUE or HalfFloat.POSITIVE_INFINITY for each of the docs that have a value outside the half float range). I'm going to try to reproduce this in a test case. I'll report back what I find.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/303781019","html_url":"https://github.com/elastic/elasticsearch/issues/23003#issuecomment-303781019","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23003","id":303781019,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMzc4MTAxOQ==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2017-05-24T16:39:10Z","updated_at":"2017-05-25T08:10:13Z","author_association":"MEMBER","body":"@xo4n also, do you have the full stack trace for this? Could you paste it in a gist (not here as it will be very long) and link it here please? could you also let me know how many documents match the search request that fails (you can find this by running the query without percentiles agg and looking at the `hits.total` field)? and also do you know how many documents contain values for `\"v_startTime\"` which are outside of the half_float range?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/304245493","html_url":"https://github.com/elastic/elasticsearch/issues/23003#issuecomment-304245493","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23003","id":304245493,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNDI0NTQ5Mw==","user":{"login":"xo4n","id":9038651,"node_id":"MDQ6VXNlcjkwMzg2NTE=","avatar_url":"https://avatars3.githubusercontent.com/u/9038651?v=4","gravatar_id":"","url":"https://api.github.com/users/xo4n","html_url":"https://github.com/xo4n","followers_url":"https://api.github.com/users/xo4n/followers","following_url":"https://api.github.com/users/xo4n/following{/other_user}","gists_url":"https://api.github.com/users/xo4n/gists{/gist_id}","starred_url":"https://api.github.com/users/xo4n/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xo4n/subscriptions","organizations_url":"https://api.github.com/users/xo4n/orgs","repos_url":"https://api.github.com/users/xo4n/repos","events_url":"https://api.github.com/users/xo4n/events{/privacy}","received_events_url":"https://api.github.com/users/xo4n/received_events","type":"User","site_admin":false},"created_at":"2017-05-26T10:15:25Z","updated_at":"2017-05-26T10:15:25Z","author_association":"NONE","body":"**StackTrace** \r\nhttps://gist.github.com/xo4n/7a7ada8a34dfda351c62a653e00c9761 \r\n\r\n**Query**\r\nhttps://gist.github.com/xo4n/531e125418d0c9eee0b38471520c98d0\r\n\r\n```hits.total```:8742983\r\n```out of range values```:69,568\r\n\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/304870679","html_url":"https://github.com/elastic/elasticsearch/issues/23003#issuecomment-304870679","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23003","id":304870679,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNDg3MDY3OQ==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2017-05-30T13:00:45Z","updated_at":"2017-05-30T13:00:45Z","author_association":"MEMBER","body":"@xo4n unfortunately I haven't yet had any luck in reproducing this. I'm wondering if you would be willing/able to privately share your index with me to assist me in reproducing this? If you are not able to share the full index maybe you could use the reindex API to create an index where the documents only contain the field `v_startTime` and share that index with me?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/312891595","html_url":"https://github.com/elastic/elasticsearch/issues/23003#issuecomment-312891595","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23003","id":312891595,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMjg5MTU5NQ==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2017-07-04T14:27:42Z","updated_at":"2017-07-04T14:27:42Z","author_association":"MEMBER","body":"@xo4n thanks for providing the index to me. I managed to reproduce the issue and it seems to be down to the out of range values which are represented as `Infinity` in the doc_values. We think that the right fix here is to stop out of range values at index time by rejecting the request so the infinite values don't end up in the index. I opened https://github.com/elastic/elasticsearch/issues/25534 for this","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/373754511","html_url":"https://github.com/elastic/elasticsearch/issues/23003#issuecomment-373754511","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23003","id":373754511,"node_id":"MDEyOklzc3VlQ29tbWVudDM3Mzc1NDUxMQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2018-03-16T15:44:19Z","updated_at":"2018-03-16T15:44:19Z","author_association":"CONTRIBUTOR","body":"The root cause of this (out of range numerics held in the index) looks to have been addressed by https://github.com/elastic/elasticsearch/pull/25826 \r\n\r\nClosing, but feel free to reopen if the issue remains.","performed_via_github_app":null}]