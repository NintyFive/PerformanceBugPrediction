[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/230583845","html_url":"https://github.com/elastic/elasticsearch/issues/19269#issuecomment-230583845","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19269","id":230583845,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMDU4Mzg0NQ==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2016-07-05T19:52:21Z","updated_at":"2016-07-05T19:52:21Z","author_association":"CONTRIBUTOR","body":"@seut @aphyr the issue you're observing is due to dirty reads (which can happen in all current ES versions). ES does not provide any stronger read guarantees at the moment. I've quickly hacked an integration test to illustrate why dirty reads are at play here ( https://gist.github.com/ywelsch/8a5334cd59d922f5c48074fec578e71c).\n\nNote that we have made some major improvements in ES v5.0.0 to ensure that all replicas have the same data once the cluster is healed and that we don't lose acknowledged writes. We have also ported the published Jepsen scenarios to our testing infrastructure (successfully passing). To verify that we are properly modeling the original Jepsen tests, we are spending some effort as well to update the original tests so that they compile against current ES versions. While we’re constantly improving the resiliency of the system we are also spending some effort on documenting the above read/write guarantees and illustrating them with test cases under simulated conditions (see section “Documentation of guarantees” in our resiliency docs: https://www.elastic.co/guide/en/elasticsearch/resiliency/current/index.html).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/230837715","html_url":"https://github.com/elastic/elasticsearch/issues/19269#issuecomment-230837715","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19269","id":230837715,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMDgzNzcxNQ==","user":{"login":"aphyr","id":3748,"node_id":"MDQ6VXNlcjM3NDg=","avatar_url":"https://avatars3.githubusercontent.com/u/3748?v=4","gravatar_id":"","url":"https://api.github.com/users/aphyr","html_url":"https://github.com/aphyr","followers_url":"https://api.github.com/users/aphyr/followers","following_url":"https://api.github.com/users/aphyr/following{/other_user}","gists_url":"https://api.github.com/users/aphyr/gists{/gist_id}","starred_url":"https://api.github.com/users/aphyr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aphyr/subscriptions","organizations_url":"https://api.github.com/users/aphyr/orgs","repos_url":"https://api.github.com/users/aphyr/repos","events_url":"https://api.github.com/users/aphyr/events{/privacy}","received_events_url":"https://api.github.com/users/aphyr/received_events","type":"User","site_admin":false},"created_at":"2016-07-06T17:02:16Z","updated_at":"2016-07-06T17:02:16Z","author_association":"NONE","body":"> We have also ported the published Jepsen scenarios to our testing infrastructure (successfully passing).\n\nIf your Jepsen tests are passing, you... may want to revisit them. One of the original Jepsen tests was for linearizable operations, and since ES is clearly _not_ linearizable, your version of the tests probably shouldn't pass.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/231144229","html_url":"https://github.com/elastic/elasticsearch/issues/19269#issuecomment-231144229","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19269","id":231144229,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMTE0NDIyOQ==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2016-07-07T17:09:52Z","updated_at":"2016-07-07T17:09:52Z","author_association":"CONTRIBUTOR","body":"@aphyr right, I should have been more specific. The challenge we're solving first is not to lose acknowledged writes. We only ported the parts of the Jepsen tests that account for this aspect. I've opened a PR to update the docs to that effect (#19303).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/488598561","html_url":"https://github.com/elastic/elasticsearch/issues/19269#issuecomment-488598561","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19269","id":488598561,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4ODU5ODU2MQ==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2019-05-02T09:01:18Z","updated_at":"2019-05-02T09:01:18Z","author_association":"CONTRIBUTOR","body":"We have [switched optimistic concurrency control (OCC)](https://www.elastic.co/guide/en/elasticsearch/reference/7.0/optimistic-concurrency-control.html) from the `_version` field to the new `_seq_no` (sequence number) and `_primary_term` (primary term) fields, which do uniquely identify each operation. To be clear, the `_version` field continues not to uniquely identify a particular version of a document; if you need to do this then you should move to using the `_seq_no` and `_primary_term` fields. We have updated the [resiliency status page](https://www.elastic.co/guide/en/elasticsearch/resiliency/current/index.html) accordingly. All internal consumers that are making use of OCC (e.g. reindex, update-by-query, ...) have been switched to these new fields, and extended testing has been used to validate the semantics of this subset of the API (see e.g. #38561). Note that the above work does not address dirty reads in the broader API, which remain possible (documented [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-replication.html#_failures)), but sequence number + primary term fields now allow uniquely identifying a change even in presence of those dirty reads. Given that dirty reads are tracked in #20031, I'm closing this issue.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/497421225","html_url":"https://github.com/elastic/elasticsearch/issues/19269#issuecomment-497421225","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19269","id":497421225,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzQyMTIyNQ==","user":{"login":"vptech20nn","id":6314909,"node_id":"MDQ6VXNlcjYzMTQ5MDk=","avatar_url":"https://avatars0.githubusercontent.com/u/6314909?v=4","gravatar_id":"","url":"https://api.github.com/users/vptech20nn","html_url":"https://github.com/vptech20nn","followers_url":"https://api.github.com/users/vptech20nn/followers","following_url":"https://api.github.com/users/vptech20nn/following{/other_user}","gists_url":"https://api.github.com/users/vptech20nn/gists{/gist_id}","starred_url":"https://api.github.com/users/vptech20nn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vptech20nn/subscriptions","organizations_url":"https://api.github.com/users/vptech20nn/orgs","repos_url":"https://api.github.com/users/vptech20nn/repos","events_url":"https://api.github.com/users/vptech20nn/events{/privacy}","received_events_url":"https://api.github.com/users/vptech20nn/received_events","type":"User","site_admin":false},"created_at":"2019-05-30T17:51:58Z","updated_at":"2019-05-30T17:51:58Z","author_association":"NONE","body":"What the elasticsearch version for switch to _seq_no , _primary_term ? We are planning to use 6.7.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/497631882","html_url":"https://github.com/elastic/elasticsearch/issues/19269#issuecomment-497631882","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19269","id":497631882,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzYzMTg4Mg==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2019-05-31T08:52:38Z","updated_at":"2019-05-31T08:52:38Z","author_association":"CONTRIBUTOR","body":"@vptech20nn ES 6.6 already provides optimistic concurrency control based on the `_seq_no` and `_primary_term` fields. While this addresses issues with the data replication subsystem, this subsystem also depends on the safety of the cluster coordination subsystem, which has seen a [major overhaul in 7.0](https://github.com/elastic/elasticsearch/issues/32006), allowing us to finally close out an important  resiliency-related item (see \"Repeated network partitions can cause cluster state updates to be lost\" on the [resiliency status page](https://www.elastic.co/guide/en/elasticsearch/resiliency/current/index.html)). If you're setting up a new cluster, consider using ES  7.x instead of 6.x. Also, please consider using the [forums](https://discuss.elastic.co/) for user-related questions.","performed_via_github_app":null}]