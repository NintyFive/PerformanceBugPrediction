{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/27358","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27358/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27358/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27358/events","html_url":"https://github.com/elastic/elasticsearch/issues/27358","id":273351142,"node_id":"MDU6SXNzdWUyNzMzNTExNDI=","number":27358,"title":"Watcher: per action's throttling with condition","user":{"login":"urusha","id":1746504,"node_id":"MDQ6VXNlcjE3NDY1MDQ=","avatar_url":"https://avatars2.githubusercontent.com/u/1746504?v=4","gravatar_id":"","url":"https://api.github.com/users/urusha","html_url":"https://github.com/urusha","followers_url":"https://api.github.com/users/urusha/followers","following_url":"https://api.github.com/users/urusha/following{/other_user}","gists_url":"https://api.github.com/users/urusha/gists{/gist_id}","starred_url":"https://api.github.com/users/urusha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/urusha/subscriptions","organizations_url":"https://api.github.com/users/urusha/orgs","repos_url":"https://api.github.com/users/urusha/repos","events_url":"https://api.github.com/users/urusha/events{/privacy}","received_events_url":"https://api.github.com/users/urusha/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"assignees":[{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2017-11-13T08:50:02Z","updated_at":"2017-11-13T12:02:52Z","closed_at":"2017-11-13T12:02:52Z","author_association":"NONE","active_lock_reason":null,"body":"<!-- Feature request -->\r\n\r\nIt would be nice to have per action's throttling with condition in watchers. With this we could make problem-ok messaging with one watcher. Currently, watcher doesn't reset throttle_period after action's condition became 'false', so we need to create 2 watchers (for problem and for ok, with watcher-wide conditions).\r\nHere is what we'd like to have (but it's not working like we want):\r\n* send problem messages every hour\r\n* send ok message only once after resolution\r\n```\r\n \"condition\": {\r\n    \"always\": {}\r\n  },\r\n  \"actions\": {\r\n    \"notify-slack-problem\": {\r\n      \"throttle_period\": \"1h\",\r\n      \"condition\": {\r\n        \"compare\": {\r\n          \"ctx.payload.hits.total\": {\r\n            \"lte\": 150\r\n          }\r\n        }\r\n      },\r\n      \"slack\": {\r\n        \"message\": {\r\n          \"attachments\": [\r\n            {\r\n              \"color\": \"danger\",\r\n              \"title\": \"PROBLEM\",\r\n              \"text\": \"{{ctx.payload.hits.total}}\"\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    \"notify-slack-ok\": {\r\n      \"throttle_period\": \"3650d\",\r\n      \"condition\": {\r\n        \"compare\": {\r\n          \"ctx.payload.hits.total\": {\r\n            \"gt\": 150\r\n          }\r\n        }\r\n      },\r\n      \"slack\": {\r\n        \"message\": {\r\n          \"attachments\": [\r\n            {\r\n              \"color\": \"good\",\r\n              \"title\": \"OK\",\r\n              \"text\": \"{{ctx.payload.hits.total}}\"\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n```\r\nAfter the first ok message, `notify-slack-ok` action is throttling, so we will not receive it before the end of `throttle_period`:\r\nok (sent every 10y) -> problem (sent every 1h) -> ok (will only be sent after 10y from the last ok) -> problem (will only be sent after 1h from the last problem)\r\n\r\nWe could implement action's condition option like `throttle_reset` (default - false)\r\n","closed_by":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"performed_via_github_app":null}