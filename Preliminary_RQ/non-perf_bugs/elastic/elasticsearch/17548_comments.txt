[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/205963140","html_url":"https://github.com/elastic/elasticsearch/issues/17548#issuecomment-205963140","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17548","id":205963140,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNTk2MzE0MA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-04-05T19:42:50Z","updated_at":"2016-04-05T19:42:50Z","author_association":"CONTRIBUTOR","body":"> Its causes the reindex and update_by_query to be the only API that returns a body on errors thats not a structured error.\n\nThis I'm happy to fix but I don't really understand.\n\n> It also tries to do the right thing by setting the status code to the highest statuscode of all the individual failures which I don't think is terribly useful to consumers either.\n\nThis I really really really want to keep. Not only does it handle important cases like \"your query failed for some reason\" but I really like returning a REST status code when the request terminated early that explains why. Returning 200 when we bailed early isn't cool.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/205973849","html_url":"https://github.com/elastic/elasticsearch/issues/17548#issuecomment-205973849","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17548","id":205973849,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNTk3Mzg0OQ==","user":{"login":"Mpdreamz","id":245275,"node_id":"MDQ6VXNlcjI0NTI3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/245275?v=4","gravatar_id":"","url":"https://api.github.com/users/Mpdreamz","html_url":"https://github.com/Mpdreamz","followers_url":"https://api.github.com/users/Mpdreamz/followers","following_url":"https://api.github.com/users/Mpdreamz/following{/other_user}","gists_url":"https://api.github.com/users/Mpdreamz/gists{/gist_id}","starred_url":"https://api.github.com/users/Mpdreamz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mpdreamz/subscriptions","organizations_url":"https://api.github.com/users/Mpdreamz/orgs","repos_url":"https://api.github.com/users/Mpdreamz/repos","events_url":"https://api.github.com/users/Mpdreamz/events{/privacy}","received_events_url":"https://api.github.com/users/Mpdreamz/received_events","type":"User","site_admin":false},"created_at":"2016-04-05T20:16:19Z","updated_at":"2016-04-05T20:21:47Z","author_association":"MEMBER","body":"Most responses on a bad status code (400, 409, 500 etcetera) will return the throwable as structured `error` instead of the same response as on a 200.\n\n> Returning 200 when we bailed early isn't cool.\n\nBut is exactly what we do for `_bulk`, `_mget` `_msearch` and the likes. They return a `200` with a `valid json response strucure` with`\"errors\": true`. Not doing this for `reindex` and `update by query` makes them the odd ones out and also the only ones that'll return a `valid json response structure` when the http status code is not 200. \n\nI personally agree that a status code indicating a (partial) failure for **all** of these API's would be an improvement but we'd need to settle on a single status code (e.g 400) rather then stealing a status code from one of the individual sub request failures. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/205978858","html_url":"https://github.com/elastic/elasticsearch/issues/17548#issuecomment-205978858","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17548","id":205978858,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNTk3ODg1OA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-04-05T20:33:30Z","updated_at":"2016-04-05T20:33:30Z","author_association":"CONTRIBUTOR","body":"I don't think `_reindex` and `_update_by_query` can just be like `_bulk`, _`mget`, and `_msearch`. The latter APIs still attempt all the things you asked them to do even if there was a failure. The former don't. Personally I'm not happy that we return 200 when those APIs only partially succeed but that is a battle for another time.\n\nIs the trouble the reindex doesn't return a single error field like the other APIs? If it did that would it make everything work better? We could cook up something like \"aborted due to other errors error\" if it'd make things fit.\n\nI think it is a good thing reindex returns its progress when it aborts due to an error because that data is useful. Well, not all of it is, but stuff like the total hits and how many of each operation in performed is.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/205986471","html_url":"https://github.com/elastic/elasticsearch/issues/17548#issuecomment-205986471","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17548","id":205986471,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNTk4NjQ3MQ==","user":{"login":"Mpdreamz","id":245275,"node_id":"MDQ6VXNlcjI0NTI3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/245275?v=4","gravatar_id":"","url":"https://api.github.com/users/Mpdreamz","html_url":"https://github.com/Mpdreamz","followers_url":"https://api.github.com/users/Mpdreamz/followers","following_url":"https://api.github.com/users/Mpdreamz/following{/other_user}","gists_url":"https://api.github.com/users/Mpdreamz/gists{/gist_id}","starred_url":"https://api.github.com/users/Mpdreamz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mpdreamz/subscriptions","organizations_url":"https://api.github.com/users/Mpdreamz/orgs","repos_url":"https://api.github.com/users/Mpdreamz/repos","events_url":"https://api.github.com/users/Mpdreamz/events{/privacy}","received_events_url":"https://api.github.com/users/Mpdreamz/received_events","type":"User","site_admin":false},"created_at":"2016-04-05T21:14:34Z","updated_at":"2016-04-05T21:17:55Z","author_association":"MEMBER","body":"> I don't think _reindex and _update_by_query can just be like _bulk, _mget, and _msearch. The latter APIs still attempt all the things you asked them to do even if there was a failure. \n\nThat does not mean _reindex and update_by_query stops at the first error, a batch can have multiple failures and it that sense is exactly like the `_bulk` etcerera in my opinion. \n\nAnd because it can have multiple failures picking the `highest` is just as meaningless as `200`. \n\n> Is the trouble the reindex doesn't return a single error field like the other APIs? If it did that would it make everything work better?\n\nI rather we make it behave the same as mget and family, either by return a 200 with `\"errors\" : true` or a common single http status code for all of these API's with (partial) failures\n\n> I think it is a good thing reindex returns its progress when it aborts due to an error because that data is useful. Well, not all of it is\n\nI agree!, the exception that is rendered on `\"error\"` can include more data by overriding `innerToXContent` [like the SearchPhaseExecutionException does](https://github.com/elastic/elasticsearch/blob/master/core/src/main/java/org/elasticsearch/action/search/SearchPhaseExecutionException.java#L137)\n\nFrom a pure RESTful perspective i'd agree the current API is better, right now though these are the only API's I have to special case. In our client we have a dedicated error reader for bad responses that'll shortcircuit deserialization alltogether. Whilst not something we can not work around I rather treat all elasticsearch responses the same.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/231327241","html_url":"https://github.com/elastic/elasticsearch/issues/17548#issuecomment-231327241","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17548","id":231327241,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMTMyNzI0MQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-07-08T10:26:13Z","updated_at":"2016-07-08T10:26:13Z","author_association":"CONTRIBUTOR","body":"Discussed in Fix it Friday.  A bulk or mget operation is a wrapper of individual items, so it makes sense for a bulk operation with errors to return 200 (with errors listed in the body) because the coordinating node has done its job correctly.\n\nReindex on the other hand aborts when it encounters an error, and should return an error code.  I agree with @Mpdreamz that this should be a `400` or a `500` (depending on the error that was thrown) but it shouldn't just choose the highest error code.  These error codes have meaning for the clients (eg should i retry this request) and just because one error code happens to be `429` or `503` doesn't mean that the client should retry the reindexing request.\n\nRegarding the structured body...  I think the information that is passed back is useful, but it is inconsistent with some responses (eg bulk) but inconsistent with others.  I considered wrapping the info inside a structured `error` body, but that feels forced.\n\nMy Perl client looks for a structured `error` but, failing that, falls back to including the whole body in the exception.  I'm not sure what other clients do here.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/231404656","html_url":"https://github.com/elastic/elasticsearch/issues/17548#issuecomment-231404656","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17548","id":231404656,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMTQwNDY1Ng==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-07-08T16:22:33Z","updated_at":"2016-07-08T16:22:33Z","author_association":"CONTRIBUTOR","body":"So what is the change you want? Change the response code calculations to be \"return the code if all errors have the same code, if two errors have different codes and any are 500-level then return 500. Otherwise return 400?\" \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/231410317","html_url":"https://github.com/elastic/elasticsearch/issues/17548#issuecomment-231410317","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17548","id":231410317,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMTQxMDMxNw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-07-08T16:43:47Z","updated_at":"2016-07-08T16:43:55Z","author_association":"CONTRIBUTOR","body":"No, return 500 if any errors are 50*, or 400 otherwise.  (open to discussion here).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/231410889","html_url":"https://github.com/elastic/elasticsearch/issues/17548#issuecomment-231410889","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17548","id":231410889,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMTQxMDg4OQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-07-08T16:46:14Z","updated_at":"2016-07-08T16:46:14Z","author_association":"CONTRIBUTOR","body":"Ok, so:\n0. If there are no errors return 200.\n1. If there are any 500 level statuses then return 500.\n2. Return 400.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/231411557","html_url":"https://github.com/elastic/elasticsearch/issues/17548#issuecomment-231411557","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17548","id":231411557,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMTQxMTU1Nw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-07-08T16:49:02Z","updated_at":"2016-07-08T16:49:02Z","author_association":"CONTRIBUTOR","body":"i think this makes sense.  @Mpdreamz ?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/234012225","html_url":"https://github.com/elastic/elasticsearch/issues/17548#issuecomment-234012225","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17548","id":234012225,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNDAxMjIyNQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-07-20T16:59:04Z","updated_at":"2016-07-20T16:59:04Z","author_association":"CONTRIBUTOR","body":"@Mpdreamz, do you like my proposal in https://github.com/elastic/elasticsearch/issues/17548#issuecomment-231410889 ?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/234021847","html_url":"https://github.com/elastic/elasticsearch/issues/17548#issuecomment-234021847","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17548","id":234021847,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNDAyMTg0Nw==","user":{"login":"Mpdreamz","id":245275,"node_id":"MDQ6VXNlcjI0NTI3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/245275?v=4","gravatar_id":"","url":"https://api.github.com/users/Mpdreamz","html_url":"https://github.com/Mpdreamz","followers_url":"https://api.github.com/users/Mpdreamz/followers","following_url":"https://api.github.com/users/Mpdreamz/following{/other_user}","gists_url":"https://api.github.com/users/Mpdreamz/gists{/gist_id}","starred_url":"https://api.github.com/users/Mpdreamz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mpdreamz/subscriptions","organizations_url":"https://api.github.com/users/Mpdreamz/orgs","repos_url":"https://api.github.com/users/Mpdreamz/repos","events_url":"https://api.github.com/users/Mpdreamz/events{/privacy}","received_events_url":"https://api.github.com/users/Mpdreamz/received_events","type":"User","site_admin":false},"created_at":"2016-07-20T17:32:42Z","updated_at":"2016-07-20T17:32:57Z","author_association":"MEMBER","body":"+1 my main remaining concern is that the response in case of an error (500/400) will not be in the form of a serialized exception.\n\nhttps://github.com/elastic/elasticsearch/blob/master/core/src/main/java/org/elasticsearch/action/search/SearchPhaseExecutionException.java#L137\n\nThat exception also attaches useful data, is there anyway we can introduce a general `ReindexFailedException` of some sorts that gets thrown that also sets all the related useful data? \n\nThat would bring the behaviour in line with existing API's\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/234222834","html_url":"https://github.com/elastic/elasticsearch/issues/17548#issuecomment-234222834","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17548","id":234222834,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNDIyMjgzNA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-07-21T11:03:30Z","updated_at":"2016-07-21T11:03:30Z","author_association":"CONTRIBUTOR","body":"@Mpdreamz what would this exception look like?\n\nI tried to reorganise the response to be a structured exception while maintaining the useful info that is returned, but didn't like what I ended up with.  Can you suggest something?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/234265369","html_url":"https://github.com/elastic/elasticsearch/issues/17548#issuecomment-234265369","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17548","id":234265369,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNDI2NTM2OQ==","user":{"login":"Mpdreamz","id":245275,"node_id":"MDQ6VXNlcjI0NTI3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/245275?v=4","gravatar_id":"","url":"https://api.github.com/users/Mpdreamz","html_url":"https://github.com/Mpdreamz","followers_url":"https://api.github.com/users/Mpdreamz/followers","following_url":"https://api.github.com/users/Mpdreamz/following{/other_user}","gists_url":"https://api.github.com/users/Mpdreamz/gists{/gist_id}","starred_url":"https://api.github.com/users/Mpdreamz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mpdreamz/subscriptions","organizations_url":"https://api.github.com/users/Mpdreamz/orgs","repos_url":"https://api.github.com/users/Mpdreamz/repos","events_url":"https://api.github.com/users/Mpdreamz/events{/privacy}","received_events_url":"https://api.github.com/users/Mpdreamz/received_events","type":"User","site_admin":false},"created_at":"2016-07-21T14:11:10Z","updated_at":"2016-07-21T14:11:10Z","author_association":"MEMBER","body":"How individual bulk items failures response looks like (409 lifted from failures)\n\n``` json\n{\n  \"took\" : 654,\n  \"timed_out\" : false,\n  \"total\" : 2,\n  \"updated\" : 0,\n  \"created\" : 0,\n  \"deleted\" : 0,\n  \"batches\" : 1,\n  \"version_conflicts\" : 2,\n  \"noops\" : 0,\n  \"retries\" : {\n    \"bulk\" : 0,\n    \"search\" : 0\n  },\n  \"throttled_millis\" : 0,\n  \"requests_per_second\" : \"unlimited\",\n  \"throttled_until_millis\" : 0,\n  \"failures\" : [\n    {\n      \"index\" : \"nest-09ffd83a-clone\",\n      \"type\" : \"test\",\n      \"id\" : \"1\",\n      \"cause\" : {\n        \"type\" : \"version_conflict_engine_exception\",\n        \"reason\" : \"[test][1]: version conflict, document already exists (current version [1])\",\n        \"index_uuid\" : \"dwwlqnkfTfaq1zefjq0XnA\",\n        \"shard\" : \"3\",\n        \"index\" : \"nest-09ffd83a-clone\"\n      },\n      \"status\" : 409\n    },\n    {\n      \"index\" : \"nest-09ffd83a-clone\",\n      \"type\" : \"test\",\n      \"id\" : \"2\",\n      \"cause\" : {\n        \"type\" : \"version_conflict_engine_exception\",\n        \"reason\" : \"[test][2]: version conflict, document already exists (current version [1])\",\n        \"index_uuid\" : \"dwwlqnkfTfaq1zefjq0XnA\",\n        \"shard\" : \"2\",\n        \"index\" : \"nest-09ffd83a-clone\"\n      },\n      \"status\" : 409\n    }\n  ]\n}\n```\n\nvs reindexing into the same index (400)\n\n``` json\n{\n  \"error\" : {\n    \"root_cause\" : [\n      {\n        \"type\" : \"action_request_validation_exception\",\n        \"reason\" : \"Validation Failed: 1: reindex cannot write into an index its reading from [nest-9aced9c5];\"\n      }\n    ],\n    \"type\" : \"action_request_validation_exception\",\n    \"reason\" : \"Validation Failed: 1: reindex cannot write into an index its reading from [nest-9aced9c5];\"\n  },\n  \"status\" : 400\n}\n```\n\nvs making a script error (400)\n\n```\n{\n  \"error\" : {\n    \"root_cause\" : [\n      {\n        \"type\" : \"action_request_validation_exception\",\n        \"reason\" : \"Validation Failed: 1: reindex cannot write into an index its reading from [nest-6893097f];\"\n      }\n    ],\n    \"type\" : \"action_request_validation_exception\",\n    \"reason\" : \"Validation Failed: 1: reindex cannot write into an index its reading from [nest-6893097f];\"\n  },\n  \"status\" : 400\n}\n```\n\nNow for all elasticsearch requests we can shortcircuit bad http status codes to a generic error handling mechanism e.g pseudo code\n\n``` F#\ntype elasticsearch_response = error | response\nlet response = match status\n| bad_response -> error\n| _ -> response\n```\n\nIn our client `response` can be a fully deserialized type but folks can even request the unititialized response stream as `response` so this short circuiting on status code is very very useful.\n\nExcept for this special case within the `_reindex` we'd now have to peek wether it has an `error` and if not still return a `response`. Something which for us would be expensive because we deserialize straight from a forward readonly (tcp) stream and can not seek backwards forcing us to do a double read on this API.\n\nGoing back on my original +1 for setting a fixed 400 or 500 and still maintain aligning it with bulk would be better, personal preference and agreement that https://github.com/elastic/elasticsearch/issues/17548#issuecomment-231410889 is sementically sound aside.\n\nThe only other alternative would be to wrap it in an exception and attach all the data as metadata (which we already do in some other cases as linked earlier. \n\n``` json\n{\n  \"error\" : {\n    \"root_cause\" : [\n      {\n        \"type\" : \"reindex_conflict_exception\",\n        \"reason\" : \"Reindexing some items failed\"\n      }\n    ],\n    \"type\" : \"reindex_conflict_exception\",\n    \"reason\" : \"Reindexing some items failed\"\n    \"status\" : 400\n    \"took\" : 654,\n    \"timed_out\" : false,\n    \"total\" : 2,\n    \"updated\" : 0,\n    \"created\" : 0,\n    \"deleted\" : 0,\n    \"batches\" : 1,\n    \"version_conflicts\" : 2,\n    \"noops\" : 0,\n    \"retries\" : {\n      \"bulk\" : 0,\n      \"search\" : 0\n    },\n    \"throttled_millis\" : 0,\n    \"requests_per_second\" : \"unlimited\",\n    \"throttled_until_millis\" : 0,\n    \"failures\" : [\n      {\n        \"index\" : \"nest-09ffd83a-clone\",\n        \"type\" : \"test\",\n        \"id\" : \"1\",\n        \"cause\" : {\n          \"type\" : \"version_conflict_engine_exception\",\n          \"reason\" : \"[test][1]: version conflict, document already exists (current version [1])\",\n          \"index_uuid\" : \"dwwlqnkfTfaq1zefjq0XnA\",\n          \"shard\" : \"3\",\n          \"index\" : \"nest-09ffd83a-clone\"\n        },\n        \"status\" : 409\n      },\n      {\n        \"index\" : \"nest-09ffd83a-clone\",\n        \"type\" : \"test\",\n        \"id\" : \"2\",\n        \"cause\" : {\n          \"type\" : \"version_conflict_engine_exception\",\n          \"reason\" : \"[test][2]: version conflict, document already exists (current version [1])\",\n          \"index_uuid\" : \"dwwlqnkfTfaq1zefjq0XnA\",\n          \"shard\" : \"2\",\n          \"index\" : \"nest-09ffd83a-clone\"\n        },\n        \"status\" : 409\n      }\n    ]\n  },\n}\n```\n\nWhich I agree @clintongormley feels very icky :/ \n\nReturning `200` ala bulk introduce an `errors: false|true` seems like the less of two _evils_ in this case and unifies error handling for these related multi document requests.\n\nAs mentioned my personal preference would actually also be for the bulk and the likes to return a 400/500 in case of individual item failures. Having to check for `errors: true` is often forgotten but not sure if too open that can of worms on this ticket :smile:\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/374619064","html_url":"https://github.com/elastic/elasticsearch/issues/17548#issuecomment-374619064","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17548","id":374619064,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NDYxOTA2NA==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2018-03-20T14:31:46Z","updated_at":"2018-03-20T14:31:46Z","author_association":"MEMBER","body":"@Mpdreamz since this has been untouched for so long, is this still something you need?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/374763726","html_url":"https://github.com/elastic/elasticsearch/issues/17548#issuecomment-374763726","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17548","id":374763726,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NDc2MzcyNg==","user":{"login":"Mpdreamz","id":245275,"node_id":"MDQ6VXNlcjI0NTI3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/245275?v=4","gravatar_id":"","url":"https://api.github.com/users/Mpdreamz","html_url":"https://github.com/Mpdreamz","followers_url":"https://api.github.com/users/Mpdreamz/followers","following_url":"https://api.github.com/users/Mpdreamz/following{/other_user}","gists_url":"https://api.github.com/users/Mpdreamz/gists{/gist_id}","starred_url":"https://api.github.com/users/Mpdreamz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mpdreamz/subscriptions","organizations_url":"https://api.github.com/users/Mpdreamz/orgs","repos_url":"https://api.github.com/users/Mpdreamz/repos","events_url":"https://api.github.com/users/Mpdreamz/events{/privacy}","received_events_url":"https://api.github.com/users/Mpdreamz/received_events","type":"User","site_admin":false},"created_at":"2018-03-20T21:30:48Z","updated_at":"2018-03-20T21:30:48Z","author_association":"MEMBER","body":"This would introduce a breaking change in `6.x` now so not immediately. I definitely want to reopen this discussion for `7.x` but more than happy to kick off a new ticket then.\r\n\r\ncc @elastic/es-clients ","performed_via_github_app":null}]