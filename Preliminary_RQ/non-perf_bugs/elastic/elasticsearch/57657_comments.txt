[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/638807873","html_url":"https://github.com/elastic/elasticsearch/issues/57657#issuecomment-638807873","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57657","id":638807873,"node_id":"MDEyOklzc3VlQ29tbWVudDYzODgwNzg3Mw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-06-04T12:09:35Z","updated_at":"2020-06-04T12:09:35Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search (:Search/Search)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/641506727","html_url":"https://github.com/elastic/elasticsearch/issues/57657#issuecomment-641506727","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57657","id":641506727,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTUwNjcyNw==","user":{"login":"ebadyano","id":26631211,"node_id":"MDQ6VXNlcjI2NjMxMjEx","avatar_url":"https://avatars0.githubusercontent.com/u/26631211?v=4","gravatar_id":"","url":"https://api.github.com/users/ebadyano","html_url":"https://github.com/ebadyano","followers_url":"https://api.github.com/users/ebadyano/followers","following_url":"https://api.github.com/users/ebadyano/following{/other_user}","gists_url":"https://api.github.com/users/ebadyano/gists{/gist_id}","starred_url":"https://api.github.com/users/ebadyano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ebadyano/subscriptions","organizations_url":"https://api.github.com/users/ebadyano/orgs","repos_url":"https://api.github.com/users/ebadyano/repos","events_url":"https://api.github.com/users/ebadyano/events{/privacy}","received_events_url":"https://api.github.com/users/ebadyano/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T18:55:42Z","updated_at":"2020-06-09T19:00:48Z","author_association":"CONTRIBUTOR","body":"new failures: https://gradle-enterprise.elastic.co/s/prsjqu5mz4opy\r\nhttps://gradle-enterprise.elastic.co/s/7aoui4a3a22ck","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/641508804","html_url":"https://github.com/elastic/elasticsearch/issues/57657#issuecomment-641508804","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57657","id":641508804,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTUwODgwNA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T18:59:27Z","updated_at":"2020-06-09T18:59:27Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-analytics-geo (:Analytics/Aggregations)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/641535359","html_url":"https://github.com/elastic/elasticsearch/issues/57657#issuecomment-641535359","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57657","id":641535359,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTUzNTM1OQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T19:53:40Z","updated_at":"2020-06-09T19:53:40Z","author_association":"CONTRIBUTOR","body":"@imotov  how much you wanna bet this is you or me?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/642145217","html_url":"https://github.com/elastic/elasticsearch/issues/57657#issuecomment-642145217","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57657","id":642145217,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MjE0NTIxNw==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2020-06-10T17:14:48Z","updated_at":"2020-06-10T17:14:48Z","author_association":"MEMBER","body":"@nik9000 hmm, I can see how it could be me... if it is me, then this test needs to be removed since we cannot reliably reproduce this failure. The test will pass (throw exception) if search lands on the old node and fail (no exception) if the search lands on new node, since we no longer count intermediate buckets. I will take a look if you didn't start digging into it yet.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/642152876","html_url":"https://github.com/elastic/elasticsearch/issues/57657#issuecomment-642152876","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57657","id":642152876,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MjE1Mjg3Ng==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2020-06-10T17:29:58Z","updated_at":"2020-06-10T17:29:58Z","author_association":"CONTRIBUTOR","body":"> @nik9000 hmm, I can see how it could be me... if it is me, then this test needs to be removed since we cannot reliably reproduce this failure. The test will pass (throw exception) if search lands on the old node and fail (no exception) if the search lands on new node, since we no longer count intermediate buckets. I will take a look if you didn't start digging into it yet.\r\n\r\nI haven't looked,\r\n![image](https://user-images.githubusercontent.com/215970/84299275-734cc100-ab1e-11ea-959b-2b4ff748af49.png)\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/642361880","html_url":"https://github.com/elastic/elasticsearch/issues/57657#issuecomment-642361880","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57657","id":642361880,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MjM2MTg4MA==","user":{"login":"ywangd","id":2344308,"node_id":"MDQ6VXNlcjIzNDQzMDg=","avatar_url":"https://avatars3.githubusercontent.com/u/2344308?v=4","gravatar_id":"","url":"https://api.github.com/users/ywangd","html_url":"https://github.com/ywangd","followers_url":"https://api.github.com/users/ywangd/followers","following_url":"https://api.github.com/users/ywangd/following{/other_user}","gists_url":"https://api.github.com/users/ywangd/gists{/gist_id}","starred_url":"https://api.github.com/users/ywangd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywangd/subscriptions","organizations_url":"https://api.github.com/users/ywangd/orgs","repos_url":"https://api.github.com/users/ywangd/repos","events_url":"https://api.github.com/users/ywangd/events{/privacy}","received_events_url":"https://api.github.com/users/ywangd/received_events","type":"User","site_admin":false},"created_at":"2020-06-11T02:07:10Z","updated_at":"2020-06-11T02:07:10Z","author_association":"MEMBER","body":"Happened again (`7.x`): https://gradle-enterprise.elastic.co/s/yztnnepraukha\r\n\r\nBut I cannot reproduce locally\r\n> ./gradlew ':qa:mixed-cluster:v7.1.0#mixedClusterTest' --tests \"org.elasticsearch.backwards.MixedClusterClientYamlTestSuiteIT\" -Dtests.method=\"test {p0=search.aggregation/240_max_buckets/Max bucket}\" -Dtests.seed=C31B22F28FEE99A1 -Dtests.security.manager=true -Dtests.locale=he -Dtests.timezone=Asia/Baku -Druntime.java=8\r\n\r\nError message:\r\n```\r\njava.lang.AssertionError: Failure at [search.aggregation/240_max_buckets:106]: the error message was expected to match the provided regex but didn't\r\nExpected: .*Trying to create too many buckets.*\r\n     but: was \"{root_cause=[], type=search_phase_execution_exception, reason=Partial shards failure, phase=query, grouped=true, failed_shards=[], stack_trace=Failed to execute phase [query], Partial shards failure\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseFailure(AbstractSearchAsyncAction.java:296)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.executeNextPhase(AbstractSearchAsyncAction.java:151)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseDone(AbstractSearchAsyncAction.java:259)\\n\\tat org.elasticsearch.action.search.InitialSearchPhase.successfulShardExecution(InitialSearchPhase.java:320)\\n\\tat org.elasticsearch.action.search.InitialSearchPhase.onShardResult(InitialSearchPhase.java:308)\\n\\tat org.elasticsearch.action.search.InitialSearchPhase.access$000(InitialSearchPhase.java:50)\\n\\tat org.elasticsearch.action.search.InitialSearchPhase$2.innerOnResponse(InitialSearchPhase.java:264)\\n\\tat org.elasticsearch.action.search.SearchActionListener.onResponse(SearchActionListener.java:45)\\n\\tat org.elasticsearch.action.search.SearchActionListener.onResponse(SearchActionListener.java:29)\\n\\tat org.elasticsearch.action.search.SearchExecutionStatsCollector.onResponse(SearchExecutionStatsCollector.java:68)\\n\\tat org.elasticsearch.action.search.SearchExecutionStatsCollector.onResponse(SearchExecutionStatsCollector.java:36)\\n\\tat org.elasticsearch.action.ActionListenerResponseHandler.handleResponse(ActionListenerResponseHandler.java:54)\\n\\tat org.elasticsearch.action.search.SearchTransportService$ConnectionCountingHandler.handleResponse(SearchTransportService.java:432)\\n\\tat org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleResponse(TransportService.java:1114)\\n\\tat org.elasticsearch.transport.TcpTransport$1.doRun(TcpTransport.java:975)\\n\\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\\n\\tat org.elasticsearch.common.util.concurrent.EsExecutors$DirectExecutorService.execute(EsExecutors.java:192)\\n\\tat org.elasticsearch.transport.TcpTransport.handleResponse(TcpTransport.java:967)\\n\\tat org.elasticsearch.transport.TcpTransport.messageReceived(TcpTransport.java:942)\\n\\tat org.elasticsearch.transport.TcpTransport.inboundMessage(TcpTransport.java:753)\\n\\tat org.elasticsearch.transport.netty4.Netty4MessageChannelHandler.channelRead(Netty4MessageChannelHandler.java:53)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\\n\\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)\\n\\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\\n\\tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:241)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\\n\\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\\n\\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)\\n\\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:656)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:556)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:510)\\n\\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:470)\\n\\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)\\n\\tat java.base/java.lang.Thread.run(Thread.java:835)\\n}\"\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/643047023","html_url":"https://github.com/elastic/elasticsearch/issues/57657#issuecomment-643047023","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57657","id":643047023,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzA0NzAyMw==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2020-06-12T03:37:51Z","updated_at":"2020-06-12T03:37:51Z","author_association":"CONTRIBUTOR","body":"[Another](https://gradle-enterprise.elastic.co/s/54qob7tu7qsvu/tests/:qa:mixed-cluster:v7.0.0%23mixedClusterTest/org.elasticsearch.backwards.MixedClusterClientYamlTestSuiteIT/test%20%7Bp0=search.aggregation%2F240_max_buckets%2FMax%20bucket%7D#1) (7.x).\r\n```\r\njava.lang.AssertionError\r\n: Failure at [search.aggregation/240_max_buckets:88]: the error message was expected to match the provided regex but didn't\r\nExpected: .*Trying to create too many buckets.*\r\n     but: was \"{root_cause=[], type=search_phase_execution_exception, reason=Partial shards failure, phase=query, grouped=true, failed_shards=[], stack_trace=Failed to execute phase [query], Partial shards failure\r\n\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseFailure(AbstractSearchAsyncAction.java:296)\r\n\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.executeNextPhase(AbstractSearchAsyncAction.java:151)\r\n\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseDone(AbstractSearchAsyncAction.java:259)\r\n\tat org.elasticsearch.action.search.InitialSearchPhase.successfulShardExecution(InitialSearchPhase.java:320)\r\n\tat org.elasticsearch.action.search.InitialSearchPhase.onShardResult(InitialSearchPhase.java:308)\r\n\tat org.elasticsearch.action.search.InitialSearchPhase.access$000(InitialSearchPhase.java:50)\r\n\tat org.elasticsearch.action.search.InitialSearchPhase$2.innerOnResponse(InitialSearchPhase.java:264)\r\n\tat org.elasticsearch.action.search.SearchActionListener.onResponse(SearchActionListener.java:45)\r\n\tat org.elasticsearch.action.search.SearchActionListener.onResponse(SearchActionListener.java:29)\r\n\tat org.elasticsearch.action.search.SearchExecutionStatsCollector.onResponse(SearchExecutionStatsCollector.java:68)\r\n\tat org.elasticsearch.action.search.SearchExecutionStatsCollector.onResponse(SearchExecutionStatsCollector.java:36)\r\n\tat org.elasticsearch.action.ActionListenerResponseHandler.handleResponse(ActionListenerResponseHandler.java:54)\r\n\tat org.elasticsearch.action.search.SearchTransportService$ConnectionCountingHandler.handleResponse(SearchTransportService.java:432)\r\n\tat org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleResponse(TransportService.java:1108)\r\n\tat org.elasticsearch.transport.TcpTransport$1.doRun(TcpTransport.java:975)\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n\tat org.elasticsearch.common.util.concurrent.EsExecutors$DirectExecutorService.execute(EsExecutors.java:192)\r\n\tat org.elasticsearch.transport.TcpTransport.handleResponse(TcpTransport.java:967)\r\n\tat org.elasticsearch.transport.TcpTransport.messageReceived(TcpTransport.java:942)\r\n\tat org.elasticsearch.transport.TcpTransport.inboundMessage(TcpTransport.java:753)\r\n\tat org.elasticsearch.transport.netty4.Netty4MessageChannelHandler.channelRead(Netty4MessageChannelHandler.java:53)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:241)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:656)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:556)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:510)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:470)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)\r\n\tat java.base/java.lang.Thread.run(Thread.java:835)\r\n}\"\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/643438608","html_url":"https://github.com/elastic/elasticsearch/issues/57657#issuecomment-643438608","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57657","id":643438608,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzQzODYwOA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2020-06-12T19:07:17Z","updated_at":"2020-06-12T19:07:17Z","author_association":"CONTRIBUTOR","body":"Closed by #58038.","performed_via_github_app":null}]