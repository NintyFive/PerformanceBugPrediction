[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/403804256","html_url":"https://github.com/elastic/elasticsearch/issues/31921#issuecomment-403804256","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31921","id":403804256,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMzgwNDI1Ng==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-07-10T12:28:23Z","updated_at":"2018-07-10T12:28:23Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/404227606","html_url":"https://github.com/elastic/elasticsearch/issues/31921#issuecomment-404227606","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31921","id":404227606,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNDIyNzYwNg==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2018-07-11T16:15:23Z","updated_at":"2018-07-11T16:15:23Z","author_association":"CONTRIBUTOR","body":">this should speed up the query significantly (a single term query) \r\n\r\nThat makes sense to me. The search for `\"brown f*\"` would be able to match all docs with `text._index_prefix` field with the term `f` rather than searching `text` field for `fab`, `fan` etc\r\n\r\n>and increase the recall since all expansions would match.\r\n\r\nThis bit I don't get. [The phrase_prefix docs](https://www.elastic.co/guide/en/elasticsearch/reference/master/query-dsl-match-query-phrase-prefix.html) already include a warning that the `f*` expansions tried are not verified to be prefixes that exist as a phrase with the previous term e.g. may suggest the non-existant `brown fab` and `brown fan` etc rather than the `fox` in the existing phrase `brown fox`.\r\n\r\nTo solve that problem shouldn't this issue be about using the `index_phrases` enabled fields rather than the `index_prefix` field?\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/404237488","html_url":"https://github.com/elastic/elasticsearch/issues/31921#issuecomment-404237488","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31921","id":404237488,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNDIzNzQ4OA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2018-07-11T16:48:48Z","updated_at":"2018-07-11T16:48:48Z","author_association":"MEMBER","body":"> This bit I don't get. The phrase_prefix docs already include a warning that the f* expansions tried are not verified to be prefixes that exist as a phrase with the previous term e.g. may suggest the non-existant brown fab and brown fan etc rather than the fox in the existing phrase brown fox.\r\n\r\nWhen prefixes are not indexed we extract the first 50 terms that match the prefix by default. With indexed prefixes we can match all documents that contain the prefix with a single term which ensures that all documents that should match will be taken into account. We could also use a mix of `index_phrases` and `index_prefixes` to make the query faster but we can do that in a follow up.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/404242261","html_url":"https://github.com/elastic/elasticsearch/issues/31921#issuecomment-404242261","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31921","id":404242261,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNDI0MjI2MQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2018-07-11T17:04:17Z","updated_at":"2018-07-11T17:04:17Z","author_association":"CONTRIBUTOR","body":"Ah OK. so the phrase(/span/interval) query we run has a the full term (eg `brown`) and only the single prefix term (e.g. `f`) and both indexed terms share a common idea of position info that means we can test they occur next to each other.","performed_via_github_app":null}]