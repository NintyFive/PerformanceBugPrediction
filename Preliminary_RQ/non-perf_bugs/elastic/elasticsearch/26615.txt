{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/26615","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26615/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26615/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26615/events","html_url":"https://github.com/elastic/elasticsearch/issues/26615","id":257226954,"node_id":"MDU6SXNzdWUyNTcyMjY5NTQ=","number":26615,"title":"Cross Cluster Search fails for AWS regions using DNS or public IPs.","user":{"login":"ajoliveira","id":7583334,"node_id":"MDQ6VXNlcjc1ODMzMzQ=","avatar_url":"https://avatars0.githubusercontent.com/u/7583334?v=4","gravatar_id":"","url":"https://api.github.com/users/ajoliveira","html_url":"https://github.com/ajoliveira","followers_url":"https://api.github.com/users/ajoliveira/followers","following_url":"https://api.github.com/users/ajoliveira/following{/other_user}","gists_url":"https://api.github.com/users/ajoliveira/gists{/gist_id}","starred_url":"https://api.github.com/users/ajoliveira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ajoliveira/subscriptions","organizations_url":"https://api.github.com/users/ajoliveira/orgs","repos_url":"https://api.github.com/users/ajoliveira/repos","events_url":"https://api.github.com/users/ajoliveira/events{/privacy}","received_events_url":"https://api.github.com/users/ajoliveira/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"}],"state":"closed","locked":false,"assignee":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"assignees":[{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2017-09-13T00:58:12Z","updated_at":"2017-12-20T09:20:50Z","closed_at":"2017-12-20T09:20:49Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version** (`bin/elasticsearch --version`): 5.5.2\r\n\r\n**Plugins installed**: discovery-ec2\r\n\r\n**JVM version** (`java -version`): openjdk version \"1.8.0_141\"\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): Amazon Linux - Linux east1 4.9.43-17.38.amzn1.x86_64 #1 SMP Thu Aug 17 00:20:39 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nTrying to run Cross Cluster Search (CCS) in AWS for 2 clusters that are in different AWS regions. I would like to use DNS or public IPs via the discovery-ec2 plugin so that no IP addresses have to be 'hard-coded' in the config files for the nodes, cluster(s) or ELB's.\r\n\r\nIt appears that using CCS and Transport Profiles are in conflict because the \"publish_host\" setting reverts to the default value after nodes are discovered - see testing steps below.  I'm attempting to do this so that the public DNS name or public IP addresses can be used for CCS communication but DNS or internal IPs for the region continue to be used for node communication within each cluster. \r\n\r\n**Steps to reproduce**:\r\nThis can also be done with a single node in each region but the use of 2+ nodes per region helped to ensure that cluster communication was maintained within that region, etc.\r\n\r\n1. Create 2 clusters with 2 nodes each - NYC (east1 & east2) and SEA (west1 & west2).  Final configuration version attached.\r\n[node_configurations.txt](https://github.com/elastic/elasticsearch/files/1297836/node_configurations.txt)\r\n\r\n2. Install and configure discovery-ec2 plugin\r\n\r\n3. Configure \"east1\" to use CCS for \"west1\" using public DNS, for example, on \"east1\" set:\r\n```\r\nsearch.remote.connect: true\r\nsearch.remote.cluster_west.seeds: [ \"ec2-54-X-X-X.us-west-1.compute.amazonaws.com:9300\" ]\r\n```\r\n\r\n4. With \"west1\" using default discovery-ec2 options, both SEA nodes communicate via 10.X.X.X addresses:\r\n```\r\nnetwork.host: _site_\r\nnetwork.publish_host: _ec2:privateIp_\r\ntransport.host: _site_\r\ntransport.publish_host: _ec2:privateIp_\r\n```\r\n\r\n5. Attempting a CCS query on \"east1\" results in a connection failure due to the internal IP addressing:\r\n```\r\n[ec2-user@east1]$ curl -u elastic:changeme -XGET east1:9200/cluster_west:my-index/_search?pretty\r\n\r\n{\r\n  \"error\" : {\r\n    \"root_cause\" : [\r\n      {\r\n        \"type\" : \"connect_transport_exception\",\r\n        \"reason\" : \"[sea-west-1][10.232.9.80:9300] connect_timeout[30s]\"\r\n      }\r\n    ],\r\n    \"type\" : \"transport_exception\",\r\n    \"reason\" : \"unable to communicate with remote cluster [cluster_west]\",\r\n    \"caused_by\" : {\r\n      \"type\" : \"connect_transport_exception\",\r\n      \"reason\" : \"[sea-west-1][10.232.9.80:9300] connect_timeout[30s]\",\r\n      \"caused_by\" : {\r\n        \"type\" : \"connect_timeout_exception\",\r\n        \"reason\" : \"connection timed out: ip-10-232-9-80.us-west-1.compute.internal/10.232.9.80:9300\"\r\n      }\r\n    }\r\n  },\r\n  \"status\" : 500\r\n}\r\n```\r\n\r\nChanging 4) above to `transport.publish_host: _ec2:publicDns_ or _ec2:publicIpv4_` means CCS request will be successful on \"east1\", but now SEA nodes will also try to connect via public DNS or IP which may not be supported or available for all nodes in the cluster if they are in VPC or do not have public DNS or IPs.\r\n\r\n6. Update configuration on SEA (west1) node to use Transport Profiles, for example:\r\n```\r\nnetwork.host: _site_\r\nnetwork.publish_host: _ec2:privateIp_\r\ntransport.profiles.default.port: 9300-9400\r\ntransport.profiles.default.bind_host: _site_\r\ntransport.profiles.default.publish_host: _ec2:privateIp_\r\ntransport.profiles.ccs.port: 9500-9600\r\ntransport.profiles.ccs.bind_host: _site_\r\ntransport.profiles.ccs.publish_host: _ec2:publicIpv4_\r\n```\r\nand update \"east1\" to use \"ccs\" profile port of 9500, ex:\r\n```\r\nsearch.remote.cluster_west.seeds: [ \"ec2-54-X-X-X.us-west-1.compute.amazonaws.com:9500\" ]\r\n```\r\nThis is supposed to allow the SEA nodes to use 10.X.X.X:9300 for node communication and configures port 9500 for external requests from \"east1\" in the NYC cluster.\r\n\r\nES startup log shows:\r\n```\r\n[2017-09-12T04:58:32,410][INFO ][o.e.t.TransportService   ] [sea-west-1] publish_address {10.232.9.80:9300}, bound_addresses {10.232.9.80:9300}\r\n[2017-09-12T04:58:32,411][INFO ][o.e.t.TransportService   ] [sea-west-1] profile [ccs]: publish_address {54.215.58.0:9500}, bound_addresses {10.232.9.80:9500}\r\n```\r\n\r\n7. Making the same curl request as 5) still doesn't appear to work as desired. \"east1\" does make a connection to \"west1\" on port 9500 (verified via netstat) but it looks like the CCS request again defaults to trying to connect on port 9300 using the internal DNS name or IP of \"west1\" after the initial connection on port 9500.\r\n```\r\n{\r\n  \"error\" : {\r\n    \"root_cause\" : [\r\n      {\r\n        \"type\" : \"connect_transport_exception\",\r\n        \"reason\" : \"[sea-west-1][10.232.9.80:9300] connect_timeout[30s]\"\r\n      }\r\n    ],\r\n    \"type\" : \"transport_exception\",\r\n    \"reason\" : \"unable to communicate with remote cluster [cluster_west]\",\r\n    \"caused_by\" : {\r\n      \"type\" : \"connect_transport_exception\",\r\n      \"reason\" : \"[sea-west-1][10.232.9.80:9300] connect_timeout[30s]\",\r\n      \"caused_by\" : {\r\n        \"type\" : \"connect_timeout_exception\",\r\n        \"reason\" : \"connection timed out: ip-10-232-9-80.us-west-1.compute.internal/10.232.9.80:9300\"\r\n      }\r\n    }\r\n  },\r\n  \"status\" : 500\r\n}\r\n```\r\n\r\n**Provide logs (if relevant)**:\r\nError logged in \"east1\"\r\n```\r\n[2017-09-13T00:38:44,746][WARN ][o.e.t.RemoteClusterService] [nyc-east-1] failed to update seed list for cluster: cluster_west\r\norg.elasticsearch.transport.ConnectTransportException: [sea-west-1][10.232.9.80:9300] connect_timeout[30s]\r\n        at org.elasticsearch.transport.netty4.Netty4Transport.connectToChannels(Netty4Transport.java:361) ~[?:?]\r\n        at org.elasticsearch.transport.TcpTransport.openConnection(TcpTransport.java:548) ~[elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.transport.TcpTransport.connectToNode(TcpTransport.java:472) ~[elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.transport.TransportService.connectToNode(TransportService.java:332) ~[elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.transport.RemoteClusterConnection$ConnectHandler.lambda$collectRemoteNodes$1(RemoteClusterConnection.java:364) ~[elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.common.util.CancellableThreads.executeIO(CancellableThreads.java:105) ~[elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.transport.RemoteClusterConnection$ConnectHandler.collectRemoteNodes(RemoteClusterConnection.java:354) [elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.transport.RemoteClusterConnection$ConnectHandler$1.doRun(RemoteClusterConnection.java:341) [elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-5.5.2.jar:5.5.2]\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_141]\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_141]\r\n        at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:569) [elasticsearch-5.5.2.jar:5.5.2]\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_141]\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_141]\r\n        at java.lang.Thread.run(Thread.java:748) [?:1.8.0_141]\r\nCaused by: io.netty.channel.ConnectTimeoutException: connection timed out: ip-10-232-9-80.us-west-1.compute.internal/10.232.9.80:9300\r\n        at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:267) ~[?:?]\r\n        at io.netty.util.concurrent.PromiseTask$RunnableAdapter.call(PromiseTask.java:38) ~[?:?]\r\n        at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:120) ~[?:?]\r\n        at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[?:?]\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[?:?]\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462) ~[?:?]\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[?:?]\r\n        ... 1 more\r\n.\r\n.\r\n[2017-09-13T00:40:09,393][WARN ][r.suppressed             ] path: /cluster_west:my-index/_search, params: {pretty=, index=cluster_west:my-index}\r\norg.elasticsearch.transport.TransportException: unable to communicate with remote cluster [cluster_west]\r\n        at org.elasticsearch.transport.RemoteClusterService$1.onFailure(RemoteClusterService.java:242) ~[elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.action.ActionListener$1.onFailure(ActionListener.java:67) ~[elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.action.ActionListener.onFailure(ActionListener.java:101) ~[elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.transport.RemoteClusterConnection$ConnectHandler$1.lambda$doRun$1(RemoteClusterConnection.java:336) ~[elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.action.ActionListener$1.onFailure(ActionListener.java:67) [elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.transport.RemoteClusterConnection$ConnectHandler.collectRemoteNodes(RemoteClusterConnection.java:405) [elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.transport.RemoteClusterConnection$ConnectHandler$1.doRun(RemoteClusterConnection.java:341) [elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-5.5.2.jar:5.5.2]\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_141]\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_141]\r\n        at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:569) [elasticsearch-5.5.2.jar:5.5.2]\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_141]\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_141]\r\n        at java.lang.Thread.run(Thread.java:748) [?:1.8.0_141]\r\nCaused by: org.elasticsearch.transport.ConnectTransportException: [sea-west-1][10.232.9.80:9300] connect_timeout[30s]\r\n        at org.elasticsearch.transport.netty4.Netty4Transport.connectToChannels(Netty4Transport.java:361) ~[?:?]\r\n        at org.elasticsearch.transport.TcpTransport.openConnection(TcpTransport.java:548) ~[elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.transport.TcpTransport.connectToNode(TcpTransport.java:472) ~[elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.transport.TransportService.connectToNode(TransportService.java:332) ~[elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.transport.RemoteClusterConnection$ConnectHandler.lambda$collectRemoteNodes$1(RemoteClusterConnection.java:364) ~[elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.common.util.CancellableThreads.executeIO(CancellableThreads.java:105) ~[elasticsearch-5.5.2.jar:5.5.2]\r\n        at org.elasticsearch.transport.RemoteClusterConnection$ConnectHandler.collectRemoteNodes(RemoteClusterConnection.java:354) ~[elasticsearch-5.5.2.jar:5.5.2]\r\n        ... 8 more\r\nCaused by: io.netty.channel.ConnectTimeoutException: connection timed out: ip-10-232-9-80.us-west-1.compute.internal/10.232.9.80:9300\r\n        at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:267) ~[?:?]\r\n        at io.netty.util.concurrent.PromiseTask$RunnableAdapter.call(PromiseTask.java:38) ~[?:?]\r\n        at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:120) ~[?:?]\r\n        at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[?:?]\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[?:?]\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462) ~[?:?]\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[?:?]\r\n        ... 1 more\r\n```\r\n","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}