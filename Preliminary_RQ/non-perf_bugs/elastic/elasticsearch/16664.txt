{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/16664","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16664/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16664/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16664/events","html_url":"https://github.com/elastic/elasticsearch/issues/16664","id":133599651,"node_id":"MDU6SXNzdWUxMzM1OTk2NTE=","number":16664,"title":"top-level inner_hits syntax confusing","user":{"login":"rpedela","id":1952582,"node_id":"MDQ6VXNlcjE5NTI1ODI=","avatar_url":"https://avatars1.githubusercontent.com/u/1952582?v=4","gravatar_id":"","url":"https://api.github.com/users/rpedela","html_url":"https://github.com/rpedela","followers_url":"https://api.github.com/users/rpedela/followers","following_url":"https://api.github.com/users/rpedela/following{/other_user}","gists_url":"https://api.github.com/users/rpedela/gists{/gist_id}","starred_url":"https://api.github.com/users/rpedela/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rpedela/subscriptions","organizations_url":"https://api.github.com/users/rpedela/orgs","repos_url":"https://api.github.com/users/rpedela/repos","events_url":"https://api.github.com/users/rpedela/events{/privacy}","received_events_url":"https://api.github.com/users/rpedela/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":33660,"node_id":"MDU6TGFiZWwzMzY2MA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebreaking","name":">breaking","color":"d93f0b","default":false,"description":null},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-15T01:10:46Z","updated_at":"2018-03-23T21:56:25Z","closed_at":"2018-03-23T21:56:25Z","author_association":"NONE","active_lock_reason":null,"body":"I was very confused by the top-level `inner_hits` syntax. I spent an entire day tracking down why some search results would return inner hits and others didn't even though they should have. What was my confusion?\n\nHere was the original request I used which would return inner hits some of the time.\n\n``` js\n{\n    query: {\n        has_child: {\n            type: 'child_docs',\n            score_mode: 'max',\n            query: {\n                bool: {\n                    should: [\n                        {\n                            query_string: { query: 'google' }\n                        },\n                        {\n                            has_child: {\n                                type: 'grand_child_docs',\n                                score_mode: 'max',\n                                query: { query_string: { query: 'google' } }\n                            }\n                        }\n                    ]\n                }\n            }\n        }\n    },\n    inner_hits: {\n        child_documents: {\n            type: {\n                child_docs: {\n                    query: { \n                        query_string: { query: 'google' }\n                    },\n                    inner_hits: {\n                        grand_child_documents: {\n                            type: {\n                                grand_child_docs: {\n                                    query: {\n                                        query_string: { query: 'google' }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\nHere is the request with the correct syntax where inner hits were always returned.\n\n``` js\n{\n    query: {\n        has_child: {\n            type: 'child_docs',\n            score_mode: 'max',\n            query: {\n                bool: {\n                    should: [\n                        {\n                            query_string: { query: 'google' }\n                        },\n                        {\n                            has_child: {\n                                type: 'grand_child_docs',\n                                score_mode: 'max',\n                                query: {\n                                    query_string: { query: 'google' }\n                                }\n                            }\n                        }\n                    ]\n                }\n            }\n        }\n    },\n    inner_hits: {\n        child_documents: {\n            type: {\n                child_docs: {\n                    query: {\n                        bool: {\n                            should: [\n                                {\n                                    query_string: { query: 'google' }\n                                },\n                                {\n                                    has_child: {\n                                        type: 'grand_child_docs',\n                                        score_mode: 'max',\n                                        query: {\n                                            query_string: { query: 'google' }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    inner_hits: {\n                        grand_child_documents: {\n                            type: {\n                                grand_child_docs: {\n                                    query: {\n                                        query_string: { query: 'google' }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\nIf you notice, the difference is the child query in the `inner_hits` section. By repeating the original query in the `inner_hits` section for the child, everything works correctly. However I did not do that initially. Here was my thought process: \n1. Since the server already knows the search results, I don't have to repeat the query. Hmm that didn't give me the correct results.\n2. I see `query` mentioned in the  [docs](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-inner-hits.html) and it says it must be specified otherwise all inner docs are returned.\n3. I assume I need to define the child's query and grandchild's query separately similar to how nested `inner_hits` works. That is what the first example does. It never returns inner hits that are in grandchildren only.\n4. Start trying random things because I don't know what I am missing. Eventually try copying the original query to the child's `inner_hits` section and that finally works.\n\nI think the root of the confusion is that `inner_hits` is not consistent with other parts of the ES syntax. It doesn't work like the nested `inner_hits` nor does it work like other things like highlighting. By default, the highlighters assume you want to highlight based on the original query. They only highlight using a different query if you override it.\n\nI think two things would have helped me:\n1. Make it clear you need to repeat the original query in the `inner_hits` section.\n2. Make the default to use the original query rather than returning all inner hit docs. Then have some sort of special field/value to say you want all the inner hit docs. This would also make more sense given the name \"inner_hits\" which I would assume to mean \"inner search hits\".\n","closed_by":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"performed_via_github_app":null}