{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/30525","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30525/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30525/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30525/events","html_url":"https://github.com/elastic/elasticsearch/issues/30525","id":322166507,"node_id":"MDU6SXNzdWUzMjIxNjY1MDc=","number":30525,"title":"Old Heap is high and could never be GC even though there are no indices on the node","user":{"login":"owenericsson","id":1845529,"node_id":"MDQ6VXNlcjE4NDU1Mjk=","avatar_url":"https://avatars2.githubusercontent.com/u/1845529?v=4","gravatar_id":"","url":"https://api.github.com/users/owenericsson","html_url":"https://github.com/owenericsson","followers_url":"https://api.github.com/users/owenericsson/followers","following_url":"https://api.github.com/users/owenericsson/following{/other_user}","gists_url":"https://api.github.com/users/owenericsson/gists{/gist_id}","starred_url":"https://api.github.com/users/owenericsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/owenericsson/subscriptions","organizations_url":"https://api.github.com/users/owenericsson/orgs","repos_url":"https://api.github.com/users/owenericsson/repos","events_url":"https://api.github.com/users/owenericsson/events{/privacy}","received_events_url":"https://api.github.com/users/owenericsson/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-05-11T04:50:45Z","updated_at":"2018-05-11T08:11:09Z","closed_at":"2018-05-11T08:11:09Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Feature request -->\r\n\r\n**Describe the feature**:\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):  5.3.2\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`): JDK 8-update-91\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): CentOS 6\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nin recent we found one of our node in the cluster, in which the HEAP is very high. Unfortunately this Old Heap seems could never be  GC even though we moved all indices away from this node.\r\n\r\nfrom the heap usage stats we guess it might be a BUG of Lucene, and the log is attached bellow.\r\n\r\n**Steps to reproduce**:\r\nplease see the picture bellow, which the gc is never end and Old Heap could never be GC\r\nplease note that i have moved all shards to other nodes.\r\n![image](https://user-images.githubusercontent.com/1845529/39907196-aa476154-5519-11e8-8d70-fc11b83d92ee.png)\r\n\r\n\r\n\r\n**Provide logs (if relevant)**:\r\n```\r\nvjmap.sh is started, version: 1.0.3\r\n\u001B[31mWARNING!! STW(Stop-The-World) will be performed on your Java process, if this is NOT wanted, type 'Ctrl+C' to exist. \u001B[0m\r\nusing JDK 1.8.0_91\r\nPID:5709\r\n\r\nOldGen Object Histogram:\r\n\r\n  #num  #count  #bytes  #class description\r\n-----------------------------------------------------------------------------------\r\n    1:   48242 1020.6m  byte[]\r\n    2:  406299    8.2g  long[]\r\n    3:   71629  139.0m  short[]\r\n    4:  330459   30.0m  char[]\r\n    5:   42495   21.0m  java.lang.Object[]\r\n    6:  381501   14.6m  org.apache.lucene.util.packed.Packed64\r\n    7:  320191    7.3m  java.lang.String\r\n    8:  213875    6.5m  java.util.HashMap$Node\r\n    9:  148060    5.6m  java.util.TreeMap$Entry\r\n   10:   50458    4.4m  java.util.HashMap$Node[]\r\n   11:     182    4.3m  java.util.concurrent.ConcurrentHashMap$Node[]\r\n   12:    1004    3.9m  java.lang.ThreadLocal$ThreadLocalMap$Entry[]\r\n   13:   19293    3.9m  int[]\r\n   14:   72960    3.3m  java.util.HashMap\r\n   15:   28739    2.6m  org.apache.lucene.codecs.lucene54.Lucene54DocValuesProducer$NumericEntry\r\n   16:   38870    2.1m  org.apache.lucene.index.FieldInfo\r\n   17:   65781    2.0m  java.lang.ThreadLocal$ThreadLocalMap$Entry\r\n   18:    4880    1.8m  org.apache.lucene.util.packed.PackedInts$Reader[]\r\n   19:   59738    1.8m  java.lang.ref.WeakReference\r\n   20:   17253    1.8m  java.lang.Class\r\n   21:   70747    1.6m  org.apache.lucene.util.packed.Direct16\r\n   22:   33080    1.5m  java.util.TreeMap\r\n   23:     674    1.4m  java.nio.ByteBuffer[]\r\n   24:   38295    1.2m  java.util.concurrent.ConcurrentHashMap$Node\r\n   25:   28918  903.7k  java.util.Collections$UnmodifiableMap\r\n   26:   14272  892.0k  org.apache.lucene.store.ByteBufferIndexInput$SingleBufferImpl\r\n   27:    9355  803.9k  org.apache.lucene.codecs.lucene54.Lucene54DocValuesProducer$BinaryEntry\r\n   28:     288  786.0k  io.netty.buffer.PoolSubpage[]\r\n   29:   23380  730.6k  org.apache.lucene.codecs.lucene50.Lucene50CompoundReader$FileEntry\r\n   30:   40196  628.1k  java.lang.Object\r\n   31:   26076  611.2k  org.apache.lucene.codecs.lucene54.Lucene54DocValuesProducer$SortedSetEntry\r\n   32:    7602  602.6k  java.util.WeakHashMap$Entry[]\r\n   33:   24868  582.8k  java.util.concurrent.atomic.AtomicLong\r\n   34:    5993  561.8k  org.apache.lucene.index.SegmentCommitInfo\r\n   35:   10102  552.5k  java.util.LinkedHashMap\r\n   36:   13709  535.5k  java.util.LinkedHashMap$Entry\r\n   37:   12468  487.0k  java.util.WeakHashMap$Entry\r\n   38:   28434  444.3k  java.util.HashMap$EntrySet\r\n   39:    9240  433.1k  org.apache.lucene.index.LeafReaderContext\r\n   40:   11076  432.7k  io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue\r\n   41:   27092  423.3k  java.util.concurrent.atomic.AtomicInteger\r\n   42:   25236  394.3k  java.lang.Integer\r\n   43:    7002  382.9k  java.lang.invoke.MemberName\r\n   44:    4380  376.4k  org.elasticsearch.search.internal.InternalSearchHit\r\n   45:    2441  362.3k  org.apache.lucene.util.packed.PackedInts$Encoder[]\r\n   46:    2441  362.3k  org.apache.lucene.util.packed.PackedInts$Decoder[]\r\n   47:   15454  362.2k  java.util.Collections$SynchronizedSet\r\n   48:    7582  355.4k  java.util.WeakHashMap\r\n   49:    5322  332.6k  io.netty.buffer.PoolSubpage\r\n   50:   13737  322.0k  java.util.ArrayList\r\n   51:   10224  319.5k  io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache\r\n   52:   18260  285.3k  java.util.HashMap$Values\r\n   53:    7751  242.2k  java.lang.ref.ReferenceQueue\r\n   54:    3048  238.1k  org.apache.lucene.index.SegmentReader\r\n   55:    7396  231.1k  java.util.concurrent.atomic.LongAdder\r\n   56:   13563  211.9k  java.util.TreeMap$EntrySet\r\n   57:    2566  200.5k  org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader\r\n   58:    5112  199.7k  java.lang.invoke.MethodType\r\n   59:    5101  199.3k  java.lang.ref.SoftReference\r\n   60:    2440  198.8k  org.apache.lucene.index.FieldInfo[]\r\n   61:    4893  191.1k  org.apache.lucene.document.LongPoint$1\r\n   62:     504  185.1k  java.lang.Thread\r\n   63:    7736  181.3k  java.lang.Long\r\n   64:   11102  173.5k  java.util.concurrent.atomic.AtomicReferenceArray\r\n   65:   11039  172.5k  java.util.HashSet\r\n   66:    2441  171.6k  org.apache.lucene.codecs.lucene54.Lucene54DocValuesProducer\r\n   67:    3593  168.4k  org.apache.lucene.util.packed.DirectMonotonicReader$Meta\r\n   68:    6235  166.5k  java.lang.String[]\r\n   69:    5115  159.8k  java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry\r\n   70:    6681  156.6k  java.util.Collections$SetFromMap\r\n   71:    6676  156.5k  org.apache.lucene.util.BytesRef\r\n   72:    2860  156.4k  org.apache.lucene.index.SegmentInfo\r\n   73:    5002  156.3k  org.apache.lucene.search.FieldDoc\r\n   74:    2437  152.3k  org.apache.lucene.index.SegmentCoreReaders\r\n   75:    1016  150.8k  org.aspectj.weaver.bcel.BcelMethod\r\n   76:    9587  149.8k  java.util.HashMap$KeySet\r\n   77:    6203  145.4k  java.util.Collections$SingletonList\r\n   78:    9261  144.7k  java.util.LinkedHashSet\r\n   79:    2566  140.3k org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$BlockState\r\n   80:    5251  136.4k  java.lang.Class[]\r\n   81:    2890  135.5k  org.elasticsearch.painless.Definition$Method\r\n   82:    4326  135.2k  org.apache.lucene.document.Field\r\n   83:    2441  133.5k  org.apache.lucene.codecs.blocktree.BlockTreeTermsReader\r\n   84:    3598  131.9k  float[]\r\n   85:    4213  131.7k  java.lang.invoke.DirectMethodHandle\r\n   86:    7753  121.1k  java.lang.ref.ReferenceQueue$Lock\r\n   87:    3096  120.9k  org.elasticsearch.common.lucene.index.ElasticsearchLeafReader\r\n   88:    1334  114.6k  java.lang.reflect.Method\r\n   89:    4658  109.2k  org.elasticsearch.common.text.Text\r\n   90:    2327  109.1k  java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync\r\n   91:    4649  109.0k  org.elasticsearch.common.util.concurrent.ReleasableLock\r\n   92:    4380  102.7k  org.elasticsearch.search.internal.InternalSearchHitField\r\n   93:    4366  102.3k  java.util.Collections$UnmodifiableRandomAccessList\r\n   94:    6504  101.6k  java.util.WeakHashMap$KeySet\r\n   95:    3096   96.8k  org.apache.lucene.store.ByteBufferGuard\r\n   96:    2440   95.3k  org.apache.lucene.index.FieldInfos\r\n   97:    2440   95.3k  org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader\r\n   98:    3048   95.3k  org.apache.lucene.index.CodecReader$1\r\n   99:    3048   95.3k  org.apache.lucene.index.CodecReader$2\r\n  100:    3048   95.3k  org.apache.lucene.index.CodecReader$3\r\n  101:     483   92.2k  char[][]\r\n```","closed_by":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"performed_via_github_app":null}