{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/43194","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43194/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43194/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43194/events","html_url":"https://github.com/elastic/elasticsearch/issues/43194","id":455654811,"node_id":"MDU6SXNzdWU0NTU2NTQ4MTE=","number":43194,"title":"[ML] Data frame silently fails to index if aggs return a string","user":{"login":"sophiec20","id":4185750,"node_id":"MDQ6VXNlcjQxODU3NTA=","avatar_url":"https://avatars2.githubusercontent.com/u/4185750?v=4","gravatar_id":"","url":"https://api.github.com/users/sophiec20","html_url":"https://github.com/sophiec20","followers_url":"https://api.github.com/users/sophiec20/followers","following_url":"https://api.github.com/users/sophiec20/following{/other_user}","gists_url":"https://api.github.com/users/sophiec20/gists{/gist_id}","starred_url":"https://api.github.com/users/sophiec20/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sophiec20/subscriptions","organizations_url":"https://api.github.com/users/sophiec20/orgs","repos_url":"https://api.github.com/users/sophiec20/repos","events_url":"https://api.github.com/users/sophiec20/events{/privacy}","received_events_url":"https://api.github.com/users/sophiec20/received_events","type":"User","site_admin":false},"labels":[{"id":912833043,"node_id":"MDU6TGFiZWw5MTI4MzMwNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:ml","name":":ml","color":"0e8a16","default":false,"description":"Machine learning"},{"id":1272783040,"node_id":"MDU6TGFiZWwxMjcyNzgzMDQw","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:ml/Transform","name":":ml/Transform","color":"0e8a16","default":false,"description":"Transform"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2019-06-13T10:14:21Z","updated_at":"2019-08-30T08:02:02Z","closed_at":"2019-07-09T09:18:02Z","author_association":"NONE","active_lock_reason":null,"body":"Found in 7.2.0-BC5\r\n\r\nThe following data frame preview contains a typo in `responsetime`. Composite aggs returns `avg(resposetime)` as a string `\"NaN\"` . \r\n\r\n```\r\nGET _data_frame/transforms/_preview\r\n{\r\n  \"id\": \"farequote-airline-100\",\r\n  \"source\" : { \"index\": [ \"farequote-*\" ] },\r\n  \"dest\"     : {  \"index\": \"df-farequote-airline-100\" },\r\n  \"pivot\": {\r\n    \"group_by\": {\r\n      \"airline\": { \"terms\": { \"field\": \"airline\" }}\r\n    },\r\n    \"aggregations\": {\r\n      \"last_updated\": { \"max\": { \"field\": \"@timestamp\" } },\r\n      \"mean_response\": { \"avg\": {  \"field\": \"resposetime\" } },\r\n      \"count\": { \"value_count\": { \"field\": \"airline\" } }\r\n    }\r\n  }\r\n}\r\n```\r\nreturns\r\n```\r\n{\r\n  \"preview\" : [\r\n    {\r\n      \"last_updated\" : \"2019-02-11T23:59:02.000Z\",\r\n      \"count\" : 8728.0,\r\n      \"mean_response\" : \"NaN\",\r\n      \"airline\" : \"AAL\"\r\n    },\r\n...\r\n```\r\n\r\nThe data frame silently fails to index these values resulting in an entirely empty dest index. \r\n\r\nHowever there are no errors in elasticsearch logs. There are no warnings or errors in data frame notifications, and the stats make it appear that the data frame transform was successful.\r\n\r\n```\r\n{\r\n  \"count\" : 1,\r\n  \"transforms\" : [\r\n    {\r\n      \"id\" : \"farequote-airline-100\",\r\n      \"state\" : {\r\n        \"task_state\" : \"stopped\",\r\n        \"indexer_state\" : \"stopped\",\r\n        \"checkpoint\" : 1,\r\n        \"progress\" : {\r\n          \"total_docs\" : 86274,\r\n          \"docs_remaining\" : 0,\r\n          \"percent_complete\" : 100.0\r\n        }\r\n      },\r\n      \"stats\" : {\r\n        \"pages_processed\" : 2,\r\n        \"documents_processed\" : 86274,\r\n        \"documents_indexed\" : 19,\r\n        \"trigger_count\" : 1,\r\n        \"index_time_in_ms\" : 136,\r\n        \"index_total\" : 1,\r\n        \"index_failures\" : 0,\r\n        \"search_time_in_ms\" : 25,\r\n        \"search_total\" : 2,\r\n        \"search_failures\" : 0\r\n      },\r\n      \"checkpointing\" : {\r\n        \"operations_behind\" : 0\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nWe require better handling for these errors under conditions such as when:\r\n1) something like a typo causes complete failure of the data frame (note, if the other aggs worked, perhaps this should have completed without `resposetime`)\r\n2) aggregations may sporadically return strings (`NaN` or `Infinity`) .. these should not silently fail. Is it possible to keep counts of these as `index_failures` or other stat?\r\n\r\nMessages should additionally be logged to data frame notifications, where appropriate, to ease operational management.\r\n\r\n\r\n","closed_by":{"login":"hendrikmuhs","id":7126422,"node_id":"MDQ6VXNlcjcxMjY0MjI=","avatar_url":"https://avatars3.githubusercontent.com/u/7126422?v=4","gravatar_id":"","url":"https://api.github.com/users/hendrikmuhs","html_url":"https://github.com/hendrikmuhs","followers_url":"https://api.github.com/users/hendrikmuhs/followers","following_url":"https://api.github.com/users/hendrikmuhs/following{/other_user}","gists_url":"https://api.github.com/users/hendrikmuhs/gists{/gist_id}","starred_url":"https://api.github.com/users/hendrikmuhs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hendrikmuhs/subscriptions","organizations_url":"https://api.github.com/users/hendrikmuhs/orgs","repos_url":"https://api.github.com/users/hendrikmuhs/repos","events_url":"https://api.github.com/users/hendrikmuhs/events{/privacy}","received_events_url":"https://api.github.com/users/hendrikmuhs/received_events","type":"User","site_admin":false},"performed_via_github_app":null}