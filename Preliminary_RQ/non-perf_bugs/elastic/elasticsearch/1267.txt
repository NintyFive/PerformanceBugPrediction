{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/1267","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1267/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1267/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1267/events","html_url":"https://github.com/elastic/elasticsearch/issues/1267","id":1455205,"node_id":"MDU6SXNzdWUxNDU1MjA1","number":1267,"title":"Feature Request: decommissioning nodes","user":{"login":"dobe","id":48020,"node_id":"MDQ6VXNlcjQ4MDIw","avatar_url":"https://avatars0.githubusercontent.com/u/48020?v=4","gravatar_id":"","url":"https://api.github.com/users/dobe","html_url":"https://github.com/dobe","followers_url":"https://api.github.com/users/dobe/followers","following_url":"https://api.github.com/users/dobe/following{/other_user}","gists_url":"https://api.github.com/users/dobe/gists{/gist_id}","starred_url":"https://api.github.com/users/dobe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dobe/subscriptions","organizations_url":"https://api.github.com/users/dobe/orgs","repos_url":"https://api.github.com/users/dobe/repos","events_url":"https://api.github.com/users/dobe/events{/privacy}","received_events_url":"https://api.github.com/users/dobe/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2011-08-22T04:34:39Z","updated_at":"2012-01-19T07:36:35Z","closed_at":"2012-01-19T07:36:35Z","author_association":"NONE","active_lock_reason":null,"body":"Hi\n\nIt would be nice to be able to decommission specific nodes like it is possible for example in HDFS (http://developer.yahoo.com/hadoop/tutorial/module2.html#decommission).\n\nThis would allow to keep the replication factor low (or even zero) and to remove machines from the cluster without loosing data. This is usefull for example to handle peaks of load like bulk indexing with many ec2 instances and then terminate instances after the indexing. Without the ability to decommission the nodes which should be terminated, the data stored on those machines will be lost if there is no replication. \n\nSo for speed of indexing we need to set the replication factor low. Then after indexing we need to increase it to at least 1 and then slowly remove machines from the cluster, so that all shards get replicated to other machines before the node goes down.\n\nI can imagine that this feature could help in a lot scenarios, especially on clout environments. It would even make it possible to use spot-instances on ec2 with a smal number of replicas.\n\nAn even better approach would be to be able to declare specific instances in a cluster as non-persistent . Which would mean that shards stored on those machines should not count towards the replication factor. So that at least one replica on another machine must exist, but the local data on the non-persistent machine can still be used for searches. This would make it possible to dynamically grow or shrink the cluster depending on traffic.\n\nRegards, Bernd\n","closed_by":{"login":"dobe","id":48020,"node_id":"MDQ6VXNlcjQ4MDIw","avatar_url":"https://avatars0.githubusercontent.com/u/48020?v=4","gravatar_id":"","url":"https://api.github.com/users/dobe","html_url":"https://github.com/dobe","followers_url":"https://api.github.com/users/dobe/followers","following_url":"https://api.github.com/users/dobe/following{/other_user}","gists_url":"https://api.github.com/users/dobe/gists{/gist_id}","starred_url":"https://api.github.com/users/dobe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dobe/subscriptions","organizations_url":"https://api.github.com/users/dobe/orgs","repos_url":"https://api.github.com/users/dobe/repos","events_url":"https://api.github.com/users/dobe/events{/privacy}","received_events_url":"https://api.github.com/users/dobe/received_events","type":"User","site_admin":false},"performed_via_github_app":null}