{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/6709","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6709/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6709/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6709/events","html_url":"https://github.com/elastic/elasticsearch/issues/6709","id":37077201,"node_id":"MDU6SXNzdWUzNzA3NzIwMQ==","number":6709,"title":"Native search script working for searches but not for percolation","user":{"login":"petchema","id":1211431,"node_id":"MDQ6VXNlcjEyMTE0MzE=","avatar_url":"https://avatars2.githubusercontent.com/u/1211431?v=4","gravatar_id":"","url":"https://api.github.com/users/petchema","html_url":"https://github.com/petchema","followers_url":"https://api.github.com/users/petchema/followers","following_url":"https://api.github.com/users/petchema/following{/other_user}","gists_url":"https://api.github.com/users/petchema/gists{/gist_id}","starred_url":"https://api.github.com/users/petchema/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/petchema/subscriptions","organizations_url":"https://api.github.com/users/petchema/orgs","repos_url":"https://api.github.com/users/petchema/repos","events_url":"https://api.github.com/users/petchema/events{/privacy}","received_events_url":"https://api.github.com/users/petchema/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"assignees":[{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false}],"milestone":null,"comments":8,"created_at":"2014-07-03T12:33:16Z","updated_at":"2015-11-21T15:49:22Z","closed_at":"2015-11-21T15:49:21Z","author_association":"NONE","active_lock_reason":null,"body":"The same native AbstractSearchScript that works in classic searches do not work from percolators (tested with Elasticsearch 2.0.0 snapshot).\n\nScript code:\npackage test;\nimport java.util.Map;\nimport org.elasticsearch.common.Nullable;\nimport org.elasticsearch.common.component.AbstractComponent;\nimport org.elasticsearch.common.inject.Inject;\nimport org.elasticsearch.common.settings.Settings;\nimport org.elasticsearch.node.Node;\nimport org.elasticsearch.script.ExecutableScript;\nimport org.elasticsearch.script.NativeScriptFactory;\npublic class CooccurenceScriptFactory extends AbstractComponent implements NativeScriptFactory{\n    private final Node node;\n    @SuppressWarnings(\"unchecked\")\n    @Inject\n    public CooccurenceScriptFactory(Node node, Settings settings) {\n        super(settings);\n        this.node = node;\n    }\n    @Override public ExecutableScript newScript (@Nullable Map<String,Object> params){\n        return new CooccurenceScript(node.client(), logger, params);\n      }\n}\npackage test;\nimport org.elasticsearch.ElasticsearchIllegalArgumentException;\nimport org.elasticsearch.client.Client;\nimport org.elasticsearch.common.Nullable;\nimport org.elasticsearch.common.logging.ESLogger;\nimport org.elasticsearch.common.xcontent.support.XContentMapValues;\nimport org.elasticsearch.script.AbstractSearchScript;\nimport org.elasticsearch.search.lookup.SourceLookup;\nimport java.util.List;\nimport java.util.Map;\npublic class CooccurenceScript extends AbstractSearchScript {\n    private List<String> list = null;\n    @SuppressWarnings(\"unchecked\")\n    public CooccurenceScript(Client client, ESLogger logger, @Nullable Map<String,Object> params) {\n        Map<String, Object> map = params == null ? null : XContentMapValues.nodeMapValue(params.get(\"map\"), null);\n        if (map == null) {\n            throw new ElasticsearchIllegalArgumentException(\"Missing the map parameter\");\n        }\n        list = (List<String>) map.get(\"list\");\n        if (list == null || list.isEmpty()) {\n            throw new ElasticsearchIllegalArgumentException(\"Missing the list parameter or list is empty\");\n        }\n    }\n    @Override\n    public java.lang.Object run() {\n        SourceLookup source = source();\n        @SuppressWarnings(\"unchecked\")\n        List<Object> values = (List<Object>) source.get(\"source_field\");\n        if (values == null || values.isEmpty()) {\n            return false;\n        }\n        for (Object localValue : values) {\n            boolean result = true;\n            for (String s : list) {\n                result &= ((String) localValue).contains(s);\n            }\n            if (result) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\nSearch test:\n# Create index and type arefresh\n\ncurl -XDELETE http://localhost:9200/index1\ncurl -XPOST http://localhost:9200/index1\ncurl -XPOST http://localhost:9200/index1/mytype/_mapping -d '{\n  \"mytype\": {\n    \"properties\": {\n      \"source_field\": { \"type\": \"string\" }\n    }\n  }\n}'\n# Create one document\n\ncurl -XPOST \"http://localhost:9200/index1/mytype\" -d '{\n  \"source_field\" : [ \"this a that\" ]\n}'\ncurl -XGET \"http://localhost:9200/index1/_refresh\"\n# Search the document\n\ncurl 'http://localhost:9200/index1/mytype/_search' -d '{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"script\": {\n          \"script\": \"cooccurenceScript\",\n          \"params\": {\n            \"map\": { \"list\" : [ \"a\", \"this\" ] }\n          },\n          \"lang\": \"native\"\n        }\n      }\n    }\n  }\n}'\nResult:\n{\"took\":1,\"timed_out\":false,\"_shards\":{\"total\":5,\"successful\":5,\"failed\":0},\"hits\":{\"total\":1,\"max_score\":1.0,\"hits\":[{\"_index\":\"index1\",\"_type\":\"mytype\",\"_id\":\"cwrZpe8hR_KPPBVVB30AKw\",\"_score\":1.0,\"_source\":{\n  \"source_field\" : [ \"this a that\" ]\n}}]}}\n\nPercolation test:\n# Add a percolator using the same native script\n\ncurl -XPUT \"http://localhost:9200/index1/.percolator/1\" -d '{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"script\": {\n          \"script\": \"cooccurenceScript\",\n          \"params\": {\n            \"map\": { \"list\" : [ \"a\" ] }\n          },\n          \"lang\": \"native\"\n        }\n      }\n    }\n  }\n}'\n# Percolate an identical document\n\ncurl -XPOST \"http://localhost:9200/index1/mytype/_percolate\" -d '\n{\n  \"doc\" : {\n    \"source_field\" : [ \"this a that\" ]\n  }\n}'\nResult:\n{\"took\":3,\"_shards\":{\"total\":5,\"successful\":5,\"failed\":0},\"total\":0,\"matches\":[]}\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}