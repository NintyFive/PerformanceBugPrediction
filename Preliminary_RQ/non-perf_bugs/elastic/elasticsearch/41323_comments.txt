[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/484334454","html_url":"https://github.com/elastic/elasticsearch/issues/41323#issuecomment-484334454","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41323","id":484334454,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NDMzNDQ1NA==","user":{"login":"spansh","id":103208,"node_id":"MDQ6VXNlcjEwMzIwOA==","avatar_url":"https://avatars2.githubusercontent.com/u/103208?v=4","gravatar_id":"","url":"https://api.github.com/users/spansh","html_url":"https://github.com/spansh","followers_url":"https://api.github.com/users/spansh/followers","following_url":"https://api.github.com/users/spansh/following{/other_user}","gists_url":"https://api.github.com/users/spansh/gists{/gist_id}","starred_url":"https://api.github.com/users/spansh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spansh/subscriptions","organizations_url":"https://api.github.com/users/spansh/orgs","repos_url":"https://api.github.com/users/spansh/repos","events_url":"https://api.github.com/users/spansh/events{/privacy}","received_events_url":"https://api.github.com/users/spansh/received_events","type":"User","site_admin":false},"created_at":"2019-04-18T02:41:44Z","updated_at":"2019-04-18T03:08:10Z","author_association":"NONE","body":"OK, after reading through more documents this looks to be somewhat of a different issue.  The documents suggest a different route to the error message by using doc.containsKey('field').  I implemented this and it appears that as far as painless in this context is concerned, none of my documents have that field.\r\n\r\nI can search on it fine and when I use it in other fields (I have a calculated distance field which returns perfectly fine) so the document values have definitely been stored (I never set that explicitly so it's defaulted).\r\n\r\nThe mapping is here\r\n```\r\ncurl -X GET \"localhost:9200/systems/_mapping\"\r\n{\"systems_1555494707\":{\"mappings\":{\"properties\":{\"allegiance\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"eager_global_ordinals\":true}}},\"bodies\":{\"type\":\"nested\",\"properties\":{\"distance_to_arrival\":{\"type\":\"double\"},\"edsm_id\":{\"type\":\"keyword\"},\"estimated_mapping_value\":{\"type\":\"long\"},\"estimated_scan_value\":{\"type\":\"long\"},\"id\":{\"type\":\"keyword\"},\"id64\":{\"type\":\"keyword\"},\"is_main_star\":{\"type\":\"boolean\"},\"name\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\"},\"suggest\":{\"type\":\"text\",\"analyzer\":\"autocomplete\",\"search_analyzer\":\"standard\"}}},\"subtype\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\"}}},\"terraforming_state\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\"}}},\"type\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\"}}}}},\"controlling_minor_faction\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}},\"edsm_id\":{\"type\":\"long\"},\"estimated_scan_value\":{\"type\":\"long\"},\"government\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"eager_global_ordinals\":true}}},\"id\":{\"type\":\"keyword\"},\"id64\":{\"type\":\"keyword\"},\"minor_faction_presence\":{\"properties\":{\"influence\":{\"type\":\"float\"},\"name\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}},\"state\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}}}},\"minor_faction_presences\":{\"type\":\"nested\",\"properties\":{\"influence\":{\"type\":\"double\"},\"name\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\"}}},\"state\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\"}}}}},\"name\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\"},\"lkeyword\":{\"type\":\"keyword\",\"normalizer\":\"lowercase\"},\"suggest\":{\"type\":\"text\",\"analyzer\":\"autocomplete\",\"search_analyzer\":\"standard\"}}},\"needs_permit\":{\"type\":\"boolean\"},\"population\":{\"type\":\"long\"},\"power\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"eager_global_ordinals\":true}}},\"power_state\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"eager_global_ordinals\":true}}},\"primary_economy\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"eager_global_ordinals\":true}}},\"secondary_economy\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"eager_global_ordinals\":true}}},\"security\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"eager_global_ordinals\":true}}},\"state\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"eager_global_ordinals\":true}}},\"x\":{\"type\":\"double\"},\"y\":{\"type\":\"double\"},\"z\":{\"type\":\"double\"}}}}}\r\n```\r\n\r\nAfter some more debugging, it seems to work fine until I use a nested query alongside the script query.\r\n\r\n```\r\ncurl -H \"Content-type: application/json\" -XGET 'http://localhost:9200/systems/_search?pretty=true&size=100' -d '\r\n{\r\n   \"query\" : {\r\n      \"bool\" : {\r\n         \"must\" : [\r\n            {\r\n               \"script\" : {\r\n                  \"script\" : {\r\n                     \"source\" : \"if (!doc.containsKey(\\u0027x\\u0027)){Debug.explain(doc);}\\n                    double dx = -9530.5 - 0;\\n                    double dy = -910.28125 - 0;\\n                    double dz = 19808.125 - 0;\\n\\n                    double lengthsq = dx*dx + dy*dy + dz*dz;\\n\\n                    double pdx = doc[\\u0027x\\u0027].value - 0;\\n                    double pdy = doc[\\u0027y\\u0027].value - 0;\\n                    double pdz = doc[\\u0027z\\u0027].value - 0;\\n\\n                    double dot = pdx * dx + pdy * dy + pdz * dz;\\n\\nif ( dot < 0 || dot > lengthsq) {\\n                        return false;\\n                    }\\n\\n                    double dsq = (pdx*pdx + pdy*pdy + pdz*pdz) - dot*dot/lengthsq;\\n                    if (dsq > 250000d) {\\n                        return false;\\n                    }\\n\\n                    return true;\\n                 \",\r\n                     \"lang\" : \"painless\"\r\n                  }\r\n               }\r\n            },\r\n            {\r\n               \"nested\" : {\r\n                  \"query\" : {\r\n                     \"function_score\" : {\r\n                        \"script_score\" : {\r\n                           \"script\" : \"doc[\\u0027bodies.estimated_scan_value\\u0027].value\"\r\n                        },\r\n                        \"score_mode\" : \"sum\"\r\n                     }\r\n                  },\r\n                  \"inner_hits\" : {\r\n                     \"size\" : 20\r\n                  },\r\n                  \"path\" : \"bodies\",\r\n                  \"score_mode\" : \"sum\"\r\n               }\r\n            }\r\n         ]\r\n      }\r\n   }\r\n}\r\n'\r\n```\r\n\r\nRemoving the nested query causes it to execute fine","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/484342640","html_url":"https://github.com/elastic/elasticsearch/issues/41323#issuecomment-484342640","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41323","id":484342640,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NDM0MjY0MA==","user":{"login":"spansh","id":103208,"node_id":"MDQ6VXNlcjEwMzIwOA==","avatar_url":"https://avatars2.githubusercontent.com/u/103208?v=4","gravatar_id":"","url":"https://api.github.com/users/spansh","html_url":"https://github.com/spansh","followers_url":"https://api.github.com/users/spansh/followers","following_url":"https://api.github.com/users/spansh/following{/other_user}","gists_url":"https://api.github.com/users/spansh/gists{/gist_id}","starred_url":"https://api.github.com/users/spansh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spansh/subscriptions","organizations_url":"https://api.github.com/users/spansh/orgs","repos_url":"https://api.github.com/users/spansh/repos","events_url":"https://api.github.com/users/spansh/events{/privacy}","received_events_url":"https://api.github.com/users/spansh/received_events","type":"User","site_admin":false},"created_at":"2019-04-18T03:30:06Z","updated_at":"2019-04-18T03:32:17Z","author_association":"NONE","body":"I've managed to put a workaround in which avoids the problem but I'm still not sure what causes it.\r\n\r\nThe workaround is (using the same example above) basically using the doc values directly (doc.<field> rather than doc[\"<field>\"] to check the size).  It's likely the error message in https://github.com/elastic/elasticsearch/blob/master/server/src/main/java/org/elasticsearch/index/fielddata/ScriptDocValues.java#L250 needs changing to suggest that pattern (or the contains which is in the documentation, though that didn't work for me).\r\n\r\n```\r\ncurl -H \"Content-type: application/json\" -XGET 'http://localhost:9200/systems/_search?pretty=true&size=100' -d '\r\n{\r\n   \"query\" : {\r\n      \"bool\" : {\r\n         \"must\" : [\r\n            {\r\n               \"script\" : {\r\n                  \"script\" : {\r\n                     \"source\" : \"if (doc.x.size() == 0 || doc.y.size() == 0 || doc.z.size() == 0) {return false}\\n                    double dx = -9530.5 - 0;\\n                    double dy = -910.28125 - 0;\\n                    double dz = 19808.125 - 0;\\n\\n                    double lengthsq = dx*dx + dy*dy + dz*dz;\\n\\n                    double pdx = doc[\\u0027x\\u0027].value - 0;\\n                    double pdy = doc[\\u0027y\\u0027].value - 0;\\n                    double pdz = doc[\\u0027z\\u0027].value - 0;\\n\\n                    double dot = pdx * dx + pdy * dy + pdz * dz;\\n\\nif ( dot < 0 || dot > lengthsq) {\\n                        return false;\\n                    }\\n\\n                    double dsq = (pdx*pdx + pdy*pdy + pdz*pdz) - dot*dot/lengthsq;\\n                    if (dsq > 250000d) {\\n                        return false;\\n                    }\\n\\n                    return true;\\n                 \",\r\n                     \"lang\" : \"painless\"\r\n                  }\r\n               }\r\n            },\r\n            {\r\n               \"nested\" : {\r\n                  \"query\" : {\r\n                     \"function_score\" : {\r\n                        \"script_score\" : {\r\n                           \"script\" : \"doc[\\u0027bodies.estimated_scan_value\\u0027].value\"\r\n                        },\r\n                        \"score_mode\" : \"sum\"\r\n                     }\r\n                  },\r\n                  \"inner_hits\" : {\r\n                     \"size\" : 20\r\n                  },\r\n                  \"path\" : \"bodies\",\r\n                  \"score_mode\" : \"sum\"\r\n               }\r\n            }\r\n         ]\r\n      }\r\n   }\r\n}\r\n'\r\n```\r\n\r\nI still believe this is actually a bug that needs more investigation though","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/484404486","html_url":"https://github.com/elastic/elasticsearch/issues/41323#issuecomment-484404486","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41323","id":484404486,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NDQwNDQ4Ng==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2019-04-18T08:24:32Z","updated_at":"2019-04-18T08:24:32Z","author_association":"MEMBER","body":"The syntax to check if the field has values is:\r\n````\r\ndoc['x'].size()\r\n````\r\n`doc['x'].value` is not a list, it is a pointer to the first value. I also tried your example with nested values and it worked fine, same for `doc.containsKey('x')`. \r\nThe forum is better suited for this kind of discussion so I hope you don't mind if I close this issue since we reserve github for verified bugs and feature request. Please open a topic in the [forum](https://discuss.elastic.co/c/elasticsearch) (you can post the link here) if you have further questions and we'll be happy to help there.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/484420415","html_url":"https://github.com/elastic/elasticsearch/issues/41323#issuecomment-484420415","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41323","id":484420415,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NDQyMDQxNQ==","user":{"login":"spansh","id":103208,"node_id":"MDQ6VXNlcjEwMzIwOA==","avatar_url":"https://avatars2.githubusercontent.com/u/103208?v=4","gravatar_id":"","url":"https://api.github.com/users/spansh","html_url":"https://github.com/spansh","followers_url":"https://api.github.com/users/spansh/followers","following_url":"https://api.github.com/users/spansh/following{/other_user}","gists_url":"https://api.github.com/users/spansh/gists{/gist_id}","starred_url":"https://api.github.com/users/spansh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spansh/subscriptions","organizations_url":"https://api.github.com/users/spansh/orgs","repos_url":"https://api.github.com/users/spansh/repos","events_url":"https://api.github.com/users/spansh/events{/privacy}","received_events_url":"https://api.github.com/users/spansh/received_events","type":"User","site_admin":false},"created_at":"2019-04-18T09:13:06Z","updated_at":"2019-04-18T09:19:03Z","author_association":"NONE","body":"> The syntax to check if the field has values is:\r\n> \r\n> ```\r\n> doc['x'].size()\r\n> ```\r\n> `doc['x'].value` is not a list, it is a pointer to the first value. I also tried your example with nested values and it worked fine, same for `doc.containsKey('x')`.\r\n> The forum is better suited for this kind of discussion so I hope you don't mind if I close this issue since we reserve github for verified bugs and feature request. Please open a topic in the [forum](https://discuss.elastic.co/c/elasticsearch) (you can post the link here) if you have further questions and we'll be happy to help there.\r\n\r\nThat syntax does not work as I have discussed above.  The only syntax which worked was doc.x.size().  Also it does not cover the fact that this does not occur if I remove the nested field query (none of my documents are missing the x field.\r\n\r\nIf I have some more time I can generate a dataset which replicates the issue directly.  If nothing else then the error message is wrong (it cost me several hours very early this morning).\r\n\r\nTL;DR;\r\n\r\n1. Without nested in the query : no errors\r\n2. doc['x'].value : error field does not have values (even though all the documents do)\r\n3. doc['x'].size() : error Double does not have a size function\r\n4. doc.contains('x') : did not trigger and as such ended up in the same issue as 2\r\n5. doc.x.size() : worked and managed to get my query to pass\r\n\r\nI still think this should not be triggering as none of my documents are missing an x field (which I confirmed with the must_not + exists query in the original post)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/484430262","html_url":"https://github.com/elastic/elasticsearch/issues/41323#issuecomment-484430262","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41323","id":484430262,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NDQzMDI2Mg==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2019-04-18T09:44:51Z","updated_at":"2019-04-18T09:44:51Z","author_association":"MEMBER","body":"> If I have some more time I can generate a dataset which replicates the issue directly. If nothing else then the error message is wrong (it cost me several hours very early this morning).\r\n\r\nAccording to the message you posted, you tried with `doc['x'].value.size()` instead of `doc['x'].size()` and that explains why you got the issue. The error message says that the syntax is ` doc[<field>].size()==0 `.\r\nRegarding your `nested` query I tried the following reproduction:\r\n\r\n````\r\nPUT test\r\n{\r\n    \"mappings\": {\r\n        \"properties\": {\r\n            \"bodies\": {\r\n                \"type\": \"nested\",\r\n                \"properties\": {\r\n                    \"estimated_scan_value\": {\r\n                        \"type\": \"long\"\r\n                    }\r\n                }\r\n            },\r\n            \"x\": {\r\n                \"type\": \"double\"\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n# Add one document with a \"x\" field and a nested array\r\nPOST test/_doc\r\n{\r\n    \"x\": 1,\r\n    \"bodies\": [\r\n        {\r\n            \"estimated_scan_value\": 100\r\n        },\r\n        {\r\n            \"estimated_scan_value\": 200\r\n        }\r\n    ]\r\n}\r\n\r\n# And another one with the \"x\" field missing\r\nPOST test/_doc\r\n{\r\n    \"bodies\": [\r\n        {\r\n            \"estimated_scan_value\": 10\r\n        },\r\n        {\r\n            \"estimated_scan_value\": 20\r\n        }\r\n    ]\r\n}\r\n\r\nPOST test/_search\r\n{\r\n   \"query\" : {\r\n      \"bool\" : {\r\n         \"must\" : [\r\n            {\r\n               \"script\" : {\r\n                  \"script\" : {\r\n                     \"source\" : \"if (doc['x'].size() > 0) { return true }\",\r\n                     \"lang\" : \"painless\"\r\n                  }\r\n               }\r\n            },\r\n            {\r\n               \"nested\" : {\r\n                  \"query\" : {\r\n                     \"function_score\" : {\r\n                        \"script_score\" : {\r\n                           \"script\" : \"doc['bodies.estimated_scan_value'].value\"\r\n                        },\r\n                        \"score_mode\" : \"sum\"\r\n                     }\r\n                  },\r\n                  \"inner_hits\" : {\r\n                     \"size\" : 20\r\n                  },\r\n                  \"path\" : \"bodies\",\r\n                  \"score_mode\" : \"sum\"\r\n               }\r\n            }\r\n         ]\r\n      }\r\n   }\r\n}\r\n\r\n# returns:\r\n{\r\n    \"took\": 11,\r\n    \"timed_out\": false,\r\n    \"_shards\": {\r\n        \"total\": 1,\r\n        \"successful\": 1,\r\n        \"skipped\": 0,\r\n        \"failed\": 0\r\n    },\r\n    \"hits\": {\r\n        \"total\": {\r\n            \"value\": 1,\r\n            \"relation\": \"eq\"\r\n        },\r\n        \"max_score\": 301,\r\n        \"hits\": [\r\n            {\r\n                \"_index\": \"test\",\r\n                \"_type\": \"_doc\",\r\n                \"_id\": \"kerSL2oBZDJG1nHfJjH4\",\r\n                \"_score\": 301,\r\n                \"_source\": {\r\n                    \"x\": 10,\r\n                    \"bodies\": [\r\n                        {\r\n                            \"estimated_scan_value\": 100\r\n                        },\r\n                        {\r\n                            \"estimated_scan_value\": 200\r\n                        }\r\n                    ]\r\n                },\r\n                \"inner_hits\": {\r\n                    \"bodies\": {\r\n                        \"hits\": {\r\n                            \"total\": {\r\n                                \"value\": 2,\r\n                                \"relation\": \"eq\"\r\n                            },\r\n                            \"max_score\": 200,\r\n                            \"hits\": [\r\n                                {\r\n                                    \"_index\": \"test\",\r\n                                    \"_type\": \"_doc\",\r\n                                    \"_id\": \"kerSL2oBZDJG1nHfJjH4\",\r\n                                    \"_nested\": {\r\n                                        \"field\": \"bodies\",\r\n                                        \"offset\": 1\r\n                                    },\r\n                                    \"_score\": 200,\r\n                                    \"_source\": {\r\n                                        \"estimated_scan_value\": 200\r\n                                    }\r\n                                },\r\n                                {\r\n                                    \"_index\": \"test\",\r\n                                    \"_type\": \"_doc\",\r\n                                    \"_id\": \"kerSL2oBZDJG1nHfJjH4\",\r\n                                    \"_nested\": {\r\n                                        \"field\": \"bodies\",\r\n                                        \"offset\": 0\r\n                                    },\r\n                                    \"_score\": 100,\r\n                                    \"_source\": {\r\n                                        \"estimated_scan_value\": 100\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n````\r\nSo everything seems to work fine. If I am missing anything please provide a simple reproduction that exhibits the issue.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/484435022","html_url":"https://github.com/elastic/elasticsearch/issues/41323#issuecomment-484435022","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41323","id":484435022,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NDQzNTAyMg==","user":{"login":"spansh","id":103208,"node_id":"MDQ6VXNlcjEwMzIwOA==","avatar_url":"https://avatars2.githubusercontent.com/u/103208?v=4","gravatar_id":"","url":"https://api.github.com/users/spansh","html_url":"https://github.com/spansh","followers_url":"https://api.github.com/users/spansh/followers","following_url":"https://api.github.com/users/spansh/following{/other_user}","gists_url":"https://api.github.com/users/spansh/gists{/gist_id}","starred_url":"https://api.github.com/users/spansh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spansh/subscriptions","organizations_url":"https://api.github.com/users/spansh/orgs","repos_url":"https://api.github.com/users/spansh/repos","events_url":"https://api.github.com/users/spansh/events{/privacy}","received_events_url":"https://api.github.com/users/spansh/received_events","type":"User","site_admin":false},"created_at":"2019-04-18T10:00:26Z","updated_at":"2019-04-18T10:00:26Z","author_association":"NONE","body":"You are correct, I must have mistyped doc['x'].values.size() numerous times (even though I knew it was .size() without the value.  I was somewhat paniced as my site was basically down at this point and it would have been a 10 hour reindex to bring it back up) however I have posted exact replication steps in the forum thread I created https://discuss.elastic.co/t/issues-with-7-0-0-nested-script-query/177422 including sample data.","performed_via_github_app":null}]