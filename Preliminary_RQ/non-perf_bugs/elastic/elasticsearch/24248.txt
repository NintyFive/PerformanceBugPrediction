{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/24248","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24248/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24248/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24248/events","html_url":"https://github.com/elastic/elasticsearch/issues/24248","id":223425042,"node_id":"MDU6SXNzdWUyMjM0MjUwNDI=","number":24248,"title":"Add ingest parallel processor","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"labels":[{"id":268963484,"node_id":"MDU6TGFiZWwyNjg5NjM0ODQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Ingest","name":":Core/Features/Ingest","color":"0e8a16","default":false,"description":"Execution or management of Ingest Pipelines"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-04-21T15:53:54Z","updated_at":"2017-04-25T11:58:55Z","closed_at":"2017-04-25T11:58:55Z","author_association":"MEMBER","active_lock_reason":null,"body":"Today all processors within a pipeline are executed in a sequential order which means that you need to wait for the result of processor 1 before running processor 2.\r\n\r\nWhich is very good when a processor depends from the previous one.\r\nBut in some cases, you would just like it to be as fast as possible and as you don't have dependencies between some processors, you would like to execute it in parallel.\r\n\r\nI can imagine something along those lines:\r\n\r\nThe sequential way:\r\n\r\n```\r\nPUT _ingest/pipeline/test\r\n{\r\n  \"processors\": [\r\n    { \"grok\": { } },\r\n    { \"geoip\": { } },\r\n    { \"useragent\": { } },\r\n    { \"date\": { } },\r\n    { \"remove\": { } }\r\n  ]\r\n}\r\n```\r\n\r\nWith a parallel processor:\r\n\r\n```\r\nPUT _ingest/pipeline/test\r\n{\r\n  \"processors\": [\r\n    { \"grok\": { } },\r\n    { \"parallel\": [\r\n        { \"geoip\": { } },\r\n        { \"useragent\": { } },\r\n        { \"date\": { } }\r\n    ] },\r\n    { \"remove\": { } }\r\n  ]\r\n}\r\n```\r\n\r\nWhich means in that case that `grok` is executed first, then `geoip`, `useragent` and `date` processors would be executed in parallel. Then `remove` processor will have to wait for the result.\r\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}