{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/60566","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60566/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60566/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60566/events","html_url":"https://github.com/elastic/elasticsearch/issues/60566","id":671616801,"node_id":"MDU6SXNzdWU2NzE2MTY4MDE=","number":60566,"title":"{{#toLowercase}} mustache function for search templates","user":{"login":"JohT","id":7671054,"node_id":"MDQ6VXNlcjc2NzEwNTQ=","avatar_url":"https://avatars3.githubusercontent.com/u/7671054?v=4","gravatar_id":"","url":"https://api.github.com/users/JohT","html_url":"https://github.com/JohT","followers_url":"https://api.github.com/users/JohT/followers","following_url":"https://api.github.com/users/JohT/following{/other_user}","gists_url":"https://api.github.com/users/JohT/gists{/gist_id}","starred_url":"https://api.github.com/users/JohT/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JohT/subscriptions","organizations_url":"https://api.github.com/users/JohT/orgs","repos_url":"https://api.github.com/users/JohT/repos","events_url":"https://api.github.com/users/JohT/events{/privacy}","received_events_url":"https://api.github.com/users/JohT/received_events","type":"User","site_admin":false},"labels":[{"id":146834791,"node_id":"MDU6TGFiZWwxNDY4MzQ3OTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Scripting","name":":Core/Infra/Scripting","color":"0e8a16","default":false,"description":"Scripting abstractions, Painless, and Mustache"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":1967495446,"node_id":"MDU6TGFiZWwxOTY3NDk1NDQ2","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Core/Infra","name":"Team:Core/Infra","color":"fef2c0","default":false,"description":"Meta label for core/infra team"},{"id":929267538,"node_id":"MDU6TGFiZWw5MjkyNjc1Mzg=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/team-discuss","name":"team-discuss","color":"fbca04","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-08-02T13:28:47Z","updated_at":"2020-09-16T20:48:30Z","closed_at":"2020-09-16T20:48:30Z","author_association":"NONE","active_lock_reason":null,"body":"**Outline:**\r\nAs described in this [search template reference example](https://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html#_validating_templates) there is a mustache function to convert a string to JSON: `{{#toJson}}statuses{{/toJson}}`\r\nIt would be great to have another mustache function to convert a parameter value string to lowercase:\r\n`{{#toLowercase}}genre_prefix{{/toLowercase}}`\r\n\r\nI'd like to provide a pull request for this feature when discussion leads to an approve for implementation.\r\n\r\n**Possibly related issues:**\r\nCould be an alternate approach for #28894.\r\nCould also be related to  #53603.\r\n\r\n**Use-case:**\r\nThe [Terms Aggregations Filter](https://www.elastic.co/guide/en/elasticsearch/reference/master/search-aggregations-bucket-terms-aggregation.html#_filtering_values_4) property \"include\" supports (among others) [regexp queries](https://www.elastic.co/guide/en/elasticsearch/reference/current/regexp-syntax.html). These queries are case-sensitive.\r\nA commonly known solution to get case-insensitive results is a \"lowercase\" [Normalizer](https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-normalizers.html). The only thing left to do is to use lowercase characters in the regex. I haven't found a solution to do this inside elasticsearch though.\r\n\r\nA great way to hide the complexity of some queries and make them exchangeable are [Search Templates](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html). Since they come with variables and functions, \"toLowercase\" could be integrated to get parametrized case-insensitive term aggregations (among others) build into an easy to use search template.\r\n\r\n**Advantages:**\r\n- Should be easy to realize (and to test), probably in [CustomMustacheFactory](https://github.com/elastic/elasticsearch/blob/master/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/CustomMustacheFactory.java)\r\n- May provide a workaround for some other issues regarding case-sensitive properties like \"wildcard\", \"include\", \"exclude\",...\r\n- No speed change for those already using [Search Templates](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html) to decouple query complexity from code. \r\n- No index change for those who already use a lowercase normalizer.\r\n\r\n**Steps to reproduce:**\r\n```\r\nDELETE test\r\n\r\nPUT test\r\n{\r\n    \"settings\": {\r\n        \"analysis\": {\r\n            \"normalizer\": {\r\n                \"lowercase_normalizer\": {\r\n                    \"type\": \"custom\",\r\n                    \"filter\": [\r\n                        \"lowercase\"\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"mappings\": {\r\n        \"properties\": {\r\n            \"genre\": {\r\n                \"type\": \"keyword\",\r\n                \"normalizer\": \"lowercase_normalizer\"\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nPUT test/_doc/1?refresh\r\n{\r\n  \"genre\": \"Rock\"\r\n}\r\n\r\n// stores the search template that queries all genres starting with the prefix given as parameter \r\nPOST _scripts/count_per_genre_v1\r\n{\r\n    \"script\": {\r\n        \"lang\": \"mustache\",\r\n        \"source\": {\r\n            \"size\": 0,\r\n            \"aggs\": {\r\n                \"genres\": {\r\n                    \"terms\": {\r\n                        \"field\": \"genre\",\r\n                        \"include\": \"{{genre_prefix}}.*\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// no results because of mixed-case parameter\r\nGET test/_search/template\r\n{\r\n    \"id\": \"count_per_genre_v1\",\r\n    \"params\": {\r\n        \"genre_prefix\": \"Ro\"\r\n    }\r\n}\r\n\r\n// results as expected because of manually up-front lowercased parameter\r\nGET test/_search/template\r\n{\r\n    \"id\": \"count_per_genre_v1\",\r\n    \"params\": {\r\n        \"genre_prefix\": \"ro\"\r\n    }\r\n}\r\n```\r\n\r\n**Proposed solution example:**\r\n```\r\nPOST _scripts/count_per_genre_v2\r\n{\r\n    \"script\": {\r\n        \"lang\": \"mustache\",\r\n        \"source\": {\r\n            \"size\": 0,\r\n            \"aggs\": {\r\n                \"genres\": {\r\n                    \"terms\": {\r\n                        \"field\": \"genre\",\r\n                        \"include\": \"{{#toLowercase}}genre_prefix{{/toLowercase}}.*\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```","closed_by":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"performed_via_github_app":null}