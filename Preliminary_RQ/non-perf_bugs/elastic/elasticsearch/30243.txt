{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/30243","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30243/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30243/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30243/events","html_url":"https://github.com/elastic/elasticsearch/issues/30243","id":318790670,"node_id":"MDU6SXNzdWUzMTg3OTA2NzA=","number":30243,"title":"Kerberos support","user":{"login":"bizybot","id":902768,"node_id":"MDQ6VXNlcjkwMjc2OA==","avatar_url":"https://avatars2.githubusercontent.com/u/902768?v=4","gravatar_id":"","url":"https://api.github.com/users/bizybot","html_url":"https://github.com/bizybot","followers_url":"https://api.github.com/users/bizybot/followers","following_url":"https://api.github.com/users/bizybot/following{/other_user}","gists_url":"https://api.github.com/users/bizybot/gists{/gist_id}","starred_url":"https://api.github.com/users/bizybot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bizybot/subscriptions","organizations_url":"https://api.github.com/users/bizybot/orgs","repos_url":"https://api.github.com/users/bizybot/repos","events_url":"https://api.github.com/users/bizybot/events{/privacy}","received_events_url":"https://api.github.com/users/bizybot/received_events","type":"User","site_admin":false},"labels":[{"id":912837951,"node_id":"MDU6TGFiZWw5MTI4Mzc5NTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Security/Authentication","name":":Security/Authentication","color":"0e8a16","default":false,"description":"Logging in, Usernames/passwords, Realms (Native/LDAP/AD/SAML/PKI/etc)"},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"bizybot","id":902768,"node_id":"MDQ6VXNlcjkwMjc2OA==","avatar_url":"https://avatars2.githubusercontent.com/u/902768?v=4","gravatar_id":"","url":"https://api.github.com/users/bizybot","html_url":"https://github.com/bizybot","followers_url":"https://api.github.com/users/bizybot/followers","following_url":"https://api.github.com/users/bizybot/following{/other_user}","gists_url":"https://api.github.com/users/bizybot/gists{/gist_id}","starred_url":"https://api.github.com/users/bizybot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bizybot/subscriptions","organizations_url":"https://api.github.com/users/bizybot/orgs","repos_url":"https://api.github.com/users/bizybot/repos","events_url":"https://api.github.com/users/bizybot/events{/privacy}","received_events_url":"https://api.github.com/users/bizybot/received_events","type":"User","site_admin":false},"assignees":[{"login":"bizybot","id":902768,"node_id":"MDQ6VXNlcjkwMjc2OA==","avatar_url":"https://avatars2.githubusercontent.com/u/902768?v=4","gravatar_id":"","url":"https://api.github.com/users/bizybot","html_url":"https://github.com/bizybot","followers_url":"https://api.github.com/users/bizybot/followers","following_url":"https://api.github.com/users/bizybot/following{/other_user}","gists_url":"https://api.github.com/users/bizybot/gists{/gist_id}","starred_url":"https://api.github.com/users/bizybot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bizybot/subscriptions","organizations_url":"https://api.github.com/users/bizybot/orgs","repos_url":"https://api.github.com/users/bizybot/repos","events_url":"https://api.github.com/users/bizybot/events{/privacy}","received_events_url":"https://api.github.com/users/bizybot/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2018-04-30T05:41:47Z","updated_at":"2018-10-04T07:43:11Z","closed_at":"2018-07-24T14:44:27Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Support for Kerberos\r\n\r\nRequirements:\r\n- Single Sign-on for Kibana using Kerberos\r\n- Using Kerberos for REST API clients\r\n\r\nRFC: https://tools.ietf.org/html/rfc4559, https://www.ietf.org/rfc/rfc2478.txt\r\n\r\n![Kerberos](https://gist.githubusercontent.com/bizybot/7ddf842ce5f1ca78a1afe6a4f08a31e3/raw/f9198214f6cff28f3ac1d7e28bd135a4cd36c938/Kerberos.jpg)\r\n\r\nTypical Use case:\r\n- User logs into her desktop with credentials (eg. windows machine in AD domain) get Kerberos ticket from AuthenticationService (TGS, KDC)\r\n- User uses a browser to access web application server secured by Kerberos\r\n- Server rejects the request with HTTP 401 Unauthorized status and HTTP header `WWW-Authenticate: Negotiate` with the login page\r\n- If the browser supports SPNEGO will request TGS for session ticket for given service principal name `HTTP/service@REALM`, creates base64 Kerberos SPNEGO token and send it as HTTP header `Authorization: Negotiate base64-encoded-kerberos-ticket`, else will display the login page to the user\r\n- The server verifies session ticket from the browser, if successful sends HTTP 200 status with final header `WWW-Authenticate: `, else will return HTTP 401 Unauthorized status\r\n- Browser authenticates server for mutual authentication and displays next page\r\n\r\n![KibanaSPNEGO](\r\nhttps://gist.githubusercontent.com/bizybot/7ddf842ce5f1ca78a1afe6a4f08a31e3/raw/38d56ca8ae5473f6e4f2f2d7474c6fcce46d0abd/user-authentication-kibana-SPNEGO.jpeg)\r\n\r\nHigh-level tasks with priority (P? - Priority levels 0 being the highest priority task):\r\n- [x] **P0** As ES Admin, I would like to use Kerberos as an authentication mechanism to protect my data\r\n  - KerberosRealm supporting SPENGO mechanism authentication only\r\n    - Based on the client (Kibana or REST) selects appropriate service keytab completes service login.\r\n       Refer Java `Krb5LoginModule`\r\n    - After login, creates GSSContext and continues with the SPNEGO authentication.\r\n  - Cache User after authentication avoiding unnecessary calls to AD/LDAP for UPN to user DN and group queries\r\n  - Take care when servers behind proxy verify HTTP header `Proxy-support:  Session-\r\n   Based-Authentication`\r\n- [x] **P0** As ES Admin, I would like to configure KerberosRealm\r\n  - Configure SPN (Service principal name) for ES and Kibana HTTP service\r\n  - Single keytab for multiple SPNs, readonly in config directory.\r\n  - Use krb5.conf to define kerberos config properties. -Djava.security.krb5.conf=<path>\r\n  - Bootstrap checks for stronger settings validations\r\n- [x] **P0** As ES Admin, I would like to audit log all authentication, authorization events. \r\n  - Note: This is already done just need to test\r\n- [x] **P0** As ES Admin, I would like to use Kerberos with or without AD/LDAP integration\r\n  - Uses LDAP realm configuration if integration is required\r\n- [x] **P0** As ES Admin, I would like to have user/user group role mapping\r\n  - We can make use of existing AD/LDAP role mapping settings\r\n- [ ] **P0** As ES client (Kibana), I would like to use Kerberos SPNEGO to authenticate with ES for SSO\r\n  - Option 1 (Preferred): We could make use of token API (`POST /_xpack/security/oauth2/token`, `DELETE /_xpack/security/oauth2/token`) where we use the Kerberos ticket as the password. On successful authentication, the response would be oauth2 token and header `WWW-Authenticate: token-for-mutual-auth`. On failure returns with HTTP 401 Unauthorized status and HTTP header `WWW-Authenticate: Negotiate`.\r\n  - Option 2: Separate API for Kibana, ES will use Kibana service principal name for authentication by validating user Kerberos ticket (`POST /_xpack/security/kerberos/authenticate`). If successful, will return HTTP 200 OK, header `WWW-Authenticate: ` and token generated by token service for future use by Kibana for that user session else returns HTTP 401 Unauthorized. Logout API for invalidating the token ( `POST /_xpack/security/kerberos/logout`)\r\n  - Kibana acts as a proxy passing on the SPNEGO tokens to ES and responds to the client with appropriate headers as expected in SPNEGO\r\n- [x] **P1** As ES client (REST API), I would like to use Kerberos SPENGO to authenticate with ES\r\n  - Uses Elasticsearch principal name for authentication by validating user Kerberos ticket\r\n- [x] **P0** As ES ops/developer, I would like Kerberos documentation and How-To guide\r\n\r\nSecurity Considerations:\r\n- Support for channel binding will be considered as future enhancement.\r\n\r\nFuture:\r\n- Support for Microsoft PAC\r\n- Kerberizing Elastic stack - this is cross team and needs discussions to gather requirements from all teams (Kibana, Beats/Logstash, Clients etc.)\r\n","closed_by":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"performed_via_github_app":null}