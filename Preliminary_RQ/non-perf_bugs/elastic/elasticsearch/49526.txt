{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/49526","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49526/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49526/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49526/events","html_url":"https://github.com/elastic/elasticsearch/issues/49526","id":527935408,"node_id":"MDU6SXNzdWU1Mjc5MzU0MDg=","number":49526,"title":"[Feature Request] Support parameterized queries","user":{"login":"etki","id":1909762,"node_id":"MDQ6VXNlcjE5MDk3NjI=","avatar_url":"https://avatars1.githubusercontent.com/u/1909762?v=4","gravatar_id":"","url":"https://api.github.com/users/etki","html_url":"https://github.com/etki","followers_url":"https://api.github.com/users/etki/followers","following_url":"https://api.github.com/users/etki/following{/other_user}","gists_url":"https://api.github.com/users/etki/gists{/gist_id}","starred_url":"https://api.github.com/users/etki/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/etki/subscriptions","organizations_url":"https://api.github.com/users/etki/orgs","repos_url":"https://api.github.com/users/etki/repos","events_url":"https://api.github.com/users/etki/events{/privacy}","received_events_url":"https://api.github.com/users/etki/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-11-25T08:47:00Z","updated_at":"2019-11-25T09:37:22Z","closed_at":"2019-11-25T09:37:22Z","author_association":"NONE","active_lock_reason":null,"body":"Hey, I have a bit strange request. In classic SQL, we have prepared statements: a statement that is always the same, except for parameters, which are passed separately. May be we can do the same with elastic, adding named binding markers to query parameters and passing actual parameter values in and additional `body` field?\r\n\r\nBenefits:\r\n\r\n- Easy query diffs (on the position i'm working we need to analyze new changes in query quite often, and the query itself is couple of kilobytes)\r\n- Separation of query preparation (it can be done once on application startup) and execution (if query is completely static)","closed_by":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"performed_via_github_app":null}