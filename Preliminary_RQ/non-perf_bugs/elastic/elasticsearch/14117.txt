{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/14117","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14117/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14117/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14117/events","html_url":"https://github.com/elastic/elasticsearch/issues/14117","id":111438396,"node_id":"MDU6SXNzdWUxMTE0MzgzOTY=","number":14117,"title":"NotSerializableException java.util.Collections$UnmodifiableList when starting new node in cluster","user":{"login":"nickminutello","id":298274,"node_id":"MDQ6VXNlcjI5ODI3NA==","avatar_url":"https://avatars1.githubusercontent.com/u/298274?v=4","gravatar_id":"","url":"https://api.github.com/users/nickminutello","html_url":"https://github.com/nickminutello","followers_url":"https://api.github.com/users/nickminutello/followers","following_url":"https://api.github.com/users/nickminutello/following{/other_user}","gists_url":"https://api.github.com/users/nickminutello/gists{/gist_id}","starred_url":"https://api.github.com/users/nickminutello/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickminutello/subscriptions","organizations_url":"https://api.github.com/users/nickminutello/orgs","repos_url":"https://api.github.com/users/nickminutello/repos","events_url":"https://api.github.com/users/nickminutello/events{/privacy}","received_events_url":"https://api.github.com/users/nickminutello/received_events","type":"User","site_admin":false},"labels":[{"id":144797810,"node_id":"MDU6TGFiZWwxNDQ3OTc4MTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Core","name":":Core/Infra/Core","color":"0e8a16","default":false,"description":"Core issues without another label"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null},{"id":236948951,"node_id":"MDU6TGFiZWwyMzY5NDg5NTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.7.1","name":"v1.7.1","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2015-10-14T16:36:28Z","updated_at":"2018-02-13T19:37:21Z","closed_at":"2016-01-30T16:18:38Z","author_association":"NONE","active_lock_reason":null,"body":"We get this stacktrace on the starting node.\n\n```\n2015-10-14 16:31:28,448 [elasticsearch[Orb][generic][T#2]] WARN  org.elasticsearch.indices.cluster - [Orb] [[ion][3]] marking and sending shard failed due to [failed recovery]\norg.elasticsearch.indices.recovery.RecoveryFailedException: [ion][3]: Recovery failed from [Stature][ZK-Drkc5TNqMGL1d-xqxGA][LONW00071288][inet[/10.102.43.214:9300]]{local=false} into [Orb][_CvekKpITyip5sQuop7oNQ][LONW00071288][inet[/10.102.43.214:9301]]{local=false}\n    at org.elasticsearch.indices.recovery.RecoveryTarget.doRecovery(RecoveryTarget.java:280) [elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.indices.recovery.RecoveryTarget.access$700(RecoveryTarget.java:70) [elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.indices.recovery.RecoveryTarget$RecoveryRunner.doRun(RecoveryTarget.java:561) [elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:36) [elasticsearch-1.7.1.jar:na]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_65]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_65]\n    at java.lang.Thread.run(Thread.java:745) [na:1.7.0_65]\nCaused by: org.elasticsearch.transport.RemoteTransportException: Failed to deserialize exception response from stream\nCaused by: org.elasticsearch.transport.TransportSerializationException: Failed to deserialize exception response from stream\n    at org.elasticsearch.transport.netty.MessageChannelHandler.handlerResponseError(MessageChannelHandler.java:178) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.transport.netty.MessageChannelHandler.messageReceived(MessageChannelHandler.java:130) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:296) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:462) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.callDecode(FrameDecoder.java:443) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.messageReceived(FrameDecoder.java:303) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:268) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:255) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42) ~[elasticsearch-1.7.1.jar:na]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_65]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_65]\n    at java.lang.Thread.run(Thread.java:745) [na:1.7.0_65]\nCaused by: java.io.NotSerializableException: java.util.Collections$UnmodifiableList\n    at org.elasticsearch.common.io.ThrowableObjectInputStream.verify(ThrowableObjectInputStream.java:139) ~[elasticsearch-1.7.1.jar:na]\n    at org.elasticsearch.common.io.ThrowableObjectInputStream.readClassDescriptor(ThrowableObjectInputStream.java:74) ~[elasticsearch-1.7.1.jar:na]\n    at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1601) ~[na:1.7.0_65]\n    at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1517) ~[na:1.7.0_65]\n    at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1771) ~[na:1.7.0_65]\n    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1350) ~[na:1.7.0_65]\n    at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1990) ~[na:1.7.0_65]\n    at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:500) ~[na:1.7.0_65]\n    at java.lang.Throwable.readObject(Throwable.java:914) ~[na:1.7.0_65]\n    at sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source) ~[na:na]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_65]\n    at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_65]\n    at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1017) ~[na:1.7.0_65]\n    at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1893) ~[na:1.7.0_65]\n    at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1798) ~[na:1.7.0_65]\n    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1350) ~[na:1.7.0_65]\n    at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1990) ~[na:1.7.0_65]\n    at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:500) ~[na:1.7.0_65]\n    at java.lang.Throwable.readObject(Throwable.java:914) ~[na:1.7.0_65]\n    at sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source) ~[na:na]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_65]\n    at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_65]\n    at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1017) ~[na:1.7.0_65]\n    at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1893) ~[na:1.7.0_65]\n    at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1798) ~[na:1.7.0_65]\n    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1350) ~[na:1.7.0_65]\n    at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370) ~[na:1.7.0_65]\n    at org.elasticsearch.transport.netty.MessageChannelHandler.handlerResponseError(MessageChannelHandler.java:176) ~[elasticsearch-1.7.1.jar:na]\n    ... 23 common frames omitted\n\n```\n\nIt appears that we get two instances of the same Package object (java.util) so the logic here fails:\n\n``` java\n        if (aClass.isPrimitive() // primitives are fine\n                || aClass.isArray() // arrays are ok too\n                || Throwable.class.isAssignableFrom(aClass)// exceptions are fine\n                || CLASS_WHITELIST.contains(aClass) // whitelist JDK stuff we need\n                || PKG_WHITELIST.contains(aClass.getPackage())\n                || pkg.getName().startsWith(\"org.elasticsearch\")) { // es classes are ok\n            return streamClass;\n        }\n        throw new NotSerializableException(aClass.getName());\n\n```\n\nThe PKG_WHITELIST.contains() relies on the equals implementation for Package - which is based on identity. The same is true for the CLASS_WHITELIST .... Perhaps we should be using the class or package names (ie list of String) ?\n","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}