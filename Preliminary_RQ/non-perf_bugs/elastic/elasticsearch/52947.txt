{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/52947","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52947/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52947/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52947/events","html_url":"https://github.com/elastic/elasticsearch/issues/52947","id":572753057,"node_id":"MDU6SXNzdWU1NzI3NTMwNTc=","number":52947,"title":"Consider preventing indexing to concrete indexes when ILM is enabled","user":{"login":"PhaedrusTheGreek","id":4387023,"node_id":"MDQ6VXNlcjQzODcwMjM=","avatar_url":"https://avatars0.githubusercontent.com/u/4387023?v=4","gravatar_id":"","url":"https://api.github.com/users/PhaedrusTheGreek","html_url":"https://github.com/PhaedrusTheGreek","followers_url":"https://api.github.com/users/PhaedrusTheGreek/followers","following_url":"https://api.github.com/users/PhaedrusTheGreek/following{/other_user}","gists_url":"https://api.github.com/users/PhaedrusTheGreek/gists{/gist_id}","starred_url":"https://api.github.com/users/PhaedrusTheGreek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PhaedrusTheGreek/subscriptions","organizations_url":"https://api.github.com/users/PhaedrusTheGreek/orgs","repos_url":"https://api.github.com/users/PhaedrusTheGreek/repos","events_url":"https://api.github.com/users/PhaedrusTheGreek/events{/privacy}","received_events_url":"https://api.github.com/users/PhaedrusTheGreek/received_events","type":"User","site_admin":false},"labels":[{"id":912828538,"node_id":"MDU6TGFiZWw5MTI4Mjg1Mzg=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/ILM+SLM","name":":Core/Features/ILM+SLM","color":"0e8a16","default":false,"description":"Index and Snapshot lifecycle management"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-02-28T13:24:05Z","updated_at":"2020-03-10T14:32:15Z","closed_at":"2020-03-10T14:32:10Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"There are at least 2 situations where accidental indexing to ILM concrete indexes can happen erroneously:\r\n\r\n1) User deletes a concrete index during testing and boostrap is bypassed [as described here](https://github.com/elastic/elasticsearch/issues/41699)\r\n\r\n2) User has misconfigured beats instance that is not ILM enabled, but is indexing to an index that is ILM enabled, which ends up in ILM failure like this:\r\n\r\n```\r\nIndex lifecycle error\r\nillegal_argument_exception: index.lifecycle.rollover_alias [metricbeat-7.5.0] does not point to index [metricbeat-7.5.0-2020.02.19]\r\n```\r\n\r\nIt seems that unless there is a valid case when non-alias indexing to an ILM managed index is expected, preventing it should cut down on error states.","closed_by":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"performed_via_github_app":null}