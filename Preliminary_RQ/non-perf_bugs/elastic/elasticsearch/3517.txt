{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3517","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3517/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3517/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3517/events","html_url":"https://github.com/elastic/elasticsearch/issues/3517","id":18132816,"node_id":"MDU6SXNzdWUxODEzMjgxNg==","number":3517,"title":"If _id field is an object, no error is thrown but doc is \"unsearchable\"","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"labels":[{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"assignees":[{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false}],"milestone":null,"comments":12,"created_at":"2013-08-15T22:49:14Z","updated_at":"2015-11-22T10:22:36Z","closed_at":"2015-10-14T13:21:26Z","author_association":"MEMBER","active_lock_reason":null,"body":"## Expected Behavior\n\nNormally, if you try to index a document without an ID in the URI (e.g. a POST) but with an _id field in the document (and no explicit _id path mapping), it throws an error because the autogenerated ID does not match the provided _id field:\n\n``` bash\ncurl -XDELETE localhost:9200/testindex\ncurl -XPUT localhost:9200/testindex\ncurl -XPOST localhost:9200/testindex/testtype?pretty -d '{\"_id\":\"polyfractal\",\"key\":\"value\"}}}'\n```\n\n``` json\n{\n  \"error\" : \"MapperParsingException[failed to parse [_id]]; nested: MapperParsingException[Provided id [O-kIgieVTRG9DpxHML7LkA] does not match the content one [polyfractal]]; \",\n  \"status\" : 400\n}\n```\n## Broken Behavior\n\nHowever, if the _id field happens to be an object, Elasticsearch happily indexes the document:\n\n``` bash\ncurl -XDELETE localhost:9200/testindex\ncurl -XPUT localhost:9200/testindex\ncurl -XPOST \"localhost:9200/testindex/testtype\" -d '{\"key\":\"value\"}'\ncurl -XPOST \"localhost:9200/testindex/testtype\" -d '{\"_id\":{\"name\":\"polyfractal\"},\"key\":\"value\"}}}'\n```\n\n``` json\n{\"ok\":true,\"_index\":\"testindex\",\"_type\":\"testtype\",\"_id\":\"b2xEPk5tTfC-RLsCb1ZapA\",\"_version\":1}\n{\"ok\":true,\"_index\":\"testindex\",\"_type\":\"testtype\",\"_id\":\"BsTbRqaeTrKLIe0JoeHsWw\",\"_version\":1}\n```\n\nYou can GET it:\n\n``` bash\ncurl -XGET localhost:9200/testindex/testtype/BsTbRqaeTrKLIe0JoeHsWw?pretty\n```\n\n``` json\n{\n  \"_index\" : \"testindex\",\n  \"_type\" : \"testtype\",\n  \"_id\" : \"BsTbRqaeTrKLIe0JoeHsWw\",\n  \"_version\" : 1,\n  \"exists\" : true, \"_source\" : {\"_id\":{\"name\":\"polyfractal\"},\"key\":\"value\"}}}\n}\n```\n\nIt shows up with a match_all query:\n\n``` bash\ncurl -XGET localhost:9200/testindex/testtype/_search?pretty -d '{\"query\":{\"match_all\":{}}}'\n```\n\n``` json\n{\n  \"took\" : 1,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 2,\n    \"max_score\" : 1.0,\n    \"hits\" : [ {\n      \"_index\" : \"testindex\",\n      \"_type\" : \"testtype\",\n      \"_id\" : \"BsTbRqaeTrKLIe0JoeHsWw\",\n      \"_score\" : 1.0, \"_source\" : {\"_id\":{\"name\":\"polyfractal\"},\"key\":\"value\"}}}\n    }, {\n      \"_index\" : \"testindex\",\n      \"_type\" : \"testtype\",\n      \"_id\" : \"b2xEPk5tTfC-RLsCb1ZapA\",\n      \"_score\" : 1.0, \"_source\" : {\"key\":\"value\"}\n    } ]\n  }\n}\n```\n\nBut doesn't show up when you search for exact values (or Match or any other search):\n\n``` bash\ncurl -XGET localhost:9200/testindex/testtype/_search?pretty -d '{\"query\":{\"term\":{\"key\":\"value\"}}}'\n```\n\n``` json\n{\n  \"took\" : 1,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 1,\n    \"max_score\" : 0.30685282,\n    \"hits\" : [ {\n      \"_index\" : \"testindex\",\n      \"_type\" : \"testtype\",\n      \"_id\" : \"b2xEPk5tTfC-RLsCb1ZapA\",\n      \"_score\" : 0.30685282, \"_source\" : {\"key\":\"value\"}\n    } ]\n  }\n}\n```\n\nIf you ask ES why it doesn't show up, it says there are no matching terms:\n\n``` bash\ncurl -XGET localhost:9200/testindex/testtype/BsTbRqaeTrKLIe0JoeHsWw/_explain?pretty -d '{\"query\":{\"term\":{\"key\":\"value\"}}}'\n```\n\n``` json\n{\n  \"ok\" : true,\n  \"_index\" : \"testindex\",\n  \"_type\" : \"testtype\",\n  \"_id\" : \"BsTbRqaeTrKLIe0JoeHsWw\",\n  \"matched\" : false,\n  \"explanation\" : {\n    \"value\" : 0.0,\n    \"description\" : \"no matching term\"\n  }\n}\n```\n\nAnd finally, as a fun twist, you can set an explicit mapping to look inside the _id object.  This works with regard to the ID (it extracts the appropriate ID), is GETable, match_all, etc.  Search is still broken.\n\n``` bash\ncurl -XDELETE localhost:9200/testindex\ncurl -XPUT localhost:9200/testindex -d '{\n   \"mappings\":{\n      \"testtype\":{\n         \"_id\" : {\n           \"path\" : \"_id.name\"\n         },\n         \"properties\":{\n            \"_id\":{\n               \"type\":\"object\",\n               \"properties\":{\n                  \"name\":{\n                     \"type\":\"string\"\n                  }\n               }\n            }\n         }\n      }\n   }\n}'\n\ncurl -XPOST \"localhost:9200/testindex/testtype\" -d '{\"key\":\"value\"}'\ncurl -XPOST \"localhost:9200/testindex/testtype\" -d '{\"_id\":{\"name\":\"polyfractal\"},\"key\":\"value\"}}}'\ncurl -XGET localhost:9200/testindex/testtype/polyfractal?pretty\n```\n\n``` json\n{\n  \"_index\" : \"testindex\",\n  \"_type\" : \"testtype\",\n  \"_id\" : \"polyfractal\",\n  \"_version\" : 1,\n  \"exists\" : true, \"_source\" : {\"_id\":{\"name\":\"polyfractal\"},\"key\":\"value\"}}}\n}\n```\n\n``` bash\ncurl -XGET localhost:9200/testindex/testtype/_search?pretty -d '{\"query\":{\"match_all\":{}}}'\n```\n\n``` json\n{\n  \"took\" : 2,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 2,\n    \"max_score\" : 1.0,\n    \"hits\" : [ {\n      \"_index\" : \"testindex\",\n      \"_type\" : \"testtype\",\n      \"_id\" : \"wsT9vaevTCW5EuKyr7nmUw\",\n      \"_score\" : 1.0, \"_source\" : {\"key\":\"value\"}\n    }, {\n      \"_index\" : \"testindex\",\n      \"_type\" : \"testtype\",\n      \"_id\" : \"polyfractal\",\n      \"_score\" : 1.0, \"_source\" : {\"_id\":{\"name\":\"polyfractal\"},\"key\":\"value\"}}}\n    } ]\n  }\n}\n```\n\n``` bash\ncurl -XGET localhost:9200/testindex/testtype/_search?pretty -d '{\"query\":{\"term\":{\"key\":\"value\"}}}'\n```\n\n``` json\n{\n  \"took\" : 2,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 1,\n    \"max_score\" : 0.30685282,\n    \"hits\" : [ {\n      \"_index\" : \"testindex\",\n      \"_type\" : \"testtype\",\n      \"_id\" : \"wsT9vaevTCW5EuKyr7nmUw\",\n      \"_score\" : 0.30685282, \"_source\" : {\"key\":\"value\"}\n    } ]\n  }\n}\n```\n## Reference\n\nThis was surfaced by [Scott on the mailing list](https://groups.google.com/d/msg/elasticsearch/0at1uZBvN3k/xIatIxwVziwJ).\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}