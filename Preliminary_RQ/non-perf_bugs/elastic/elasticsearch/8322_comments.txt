[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/62036229","html_url":"https://github.com/elastic/elasticsearch/issues/8322#issuecomment-62036229","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8322","id":62036229,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMDM2MjI5","user":{"login":"bittusarkar","id":860447,"node_id":"MDQ6VXNlcjg2MDQ0Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/860447?v=4","gravatar_id":"","url":"https://api.github.com/users/bittusarkar","html_url":"https://github.com/bittusarkar","followers_url":"https://api.github.com/users/bittusarkar/followers","following_url":"https://api.github.com/users/bittusarkar/following{/other_user}","gists_url":"https://api.github.com/users/bittusarkar/gists{/gist_id}","starred_url":"https://api.github.com/users/bittusarkar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bittusarkar/subscriptions","organizations_url":"https://api.github.com/users/bittusarkar/orgs","repos_url":"https://api.github.com/users/bittusarkar/repos","events_url":"https://api.github.com/users/bittusarkar/events{/privacy}","received_events_url":"https://api.github.com/users/bittusarkar/received_events","type":"User","site_admin":false},"created_at":"2014-11-06T19:27:26Z","updated_at":"2014-11-06T19:27:26Z","author_association":"NONE","body":"I downloaded Elasticsearch 1.4.0 today when I read in its release notes that shard query cache was used to return aggregation results instantly on shards that have not changed. I compiled my plugin code with the new libraries and fired a search request with `search_type=count&query_cache=true` along with my custom aggregation. First \"unseen\" query runs fine. On firing the same query the second time, I get the following error:\n\n<p>\n<code>\n{\n    \"error\": \"ReduceSearchPhaseException[Failed to execute phase [query], [reduce] ]; nested: ElasticsearchParseException[failed to parse a cached query]; nested: NullPointerException; \",\n    \"status\": 503\n}\n</code>\n</p>\n\nThe stack trace in ES log says\n\n<p>\n<code>\n[2014-11-07 00:41:53,978][DEBUG][action.search.type       ] [Sif] [dummyindex][0]: Failed to execute [org.elasticsearch.action.search.SearchRequest@75412e2c] while moving to second phase\norg.elasticsearch.ElasticsearchParseException: failed to parse a cached query\n    at org.elasticsearch.indices.cache.query.IndicesQueryCache$BytesQuerySearchResult.queryResult(IndicesQueryCache.java:466)\n    at org.elasticsearch.search.controller.SearchPhaseController.merge(SearchPhaseController.java:282)\n    at org.elasticsearch.action.search.type.TransportSearchCountAction$AsyncAction.moveToSecondPhase(TransportSearchCountAction.java:77)\n    at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.innerMoveToSecondPhase(TransportSearchTypeAction.java:397)\n    at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.onFirstPhaseResult(TransportSearchTypeAction.java:198)\n    at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction$1.onResult(TransportSearchTypeAction.java:174)\n    at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction$1.onResult(TransportSearchTypeAction.java:171)\n    at org.elasticsearch.search.action.SearchServiceTransportAction$23.run(SearchServiceTransportAction.java:568)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n    at java.lang.Thread.run(Unknown Source)\nCaused by: java.lang.NullPointerException\n    at org.elasticsearch.search.aggregations.InternalAggregations.readFrom(InternalAggregations.java:190)\n    at org.elasticsearch.search.aggregations.InternalAggregations.readAggregations(InternalAggregations.java:172)\n    at org.elasticsearch.search.query.QuerySearchResult.readFromWithId(QuerySearchResult.java:175)\n    at org.elasticsearch.indices.cache.query.IndicesQueryCache$BytesQuerySearchResult.queryResult(IndicesQueryCache.java:464)\n    ... 10 more\n</code>\n</p>\n\nI tried to debug this but could not come to a solid conclusion. My best guess is that this is happening because streams are not registered for my custom aggregation and hence a NPE is thrown by the following line because `stream(type)` returned `null`.\n`InternalAggregation aggregation = AggregationStreams.stream(type).readResult(in);`\n\nI noticed that streams are registered for the inbuilt aggregations in `org.elasticsearch.search.aggregations.TransportAggregationModule` class. I could not find a way to do that for my custom aggregation. Do let me know if I am headed in the right direction and what I can do to make my custom aggregation take advantage of shard query cache.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/62038021","html_url":"https://github.com/elastic/elasticsearch/issues/8322#issuecomment-62038021","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8322","id":62038021,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMDM4MDIx","user":{"login":"bittusarkar","id":860447,"node_id":"MDQ6VXNlcjg2MDQ0Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/860447?v=4","gravatar_id":"","url":"https://api.github.com/users/bittusarkar","html_url":"https://github.com/bittusarkar","followers_url":"https://api.github.com/users/bittusarkar/followers","following_url":"https://api.github.com/users/bittusarkar/following{/other_user}","gists_url":"https://api.github.com/users/bittusarkar/gists{/gist_id}","starred_url":"https://api.github.com/users/bittusarkar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bittusarkar/subscriptions","organizations_url":"https://api.github.com/users/bittusarkar/orgs","repos_url":"https://api.github.com/users/bittusarkar/repos","events_url":"https://api.github.com/users/bittusarkar/events{/privacy}","received_events_url":"https://api.github.com/users/bittusarkar/received_events","type":"User","site_admin":false},"created_at":"2014-11-06T19:38:34Z","updated_at":"2014-11-06T19:38:34Z","author_association":"NONE","body":"This implementation will not solve my problem completely though as the cache key used in shard query cache is the entire JSON request. For my requirements, even if the JSON changes, aggregation values can still remain the same. \n\nA suggestion here would be to allow users to override the default behaviour by letting him provide the cache key in the search request itself. Don't know if this is already supported or not.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/62117849","html_url":"https://github.com/elastic/elasticsearch/issues/8322#issuecomment-62117849","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8322","id":62117849,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMTE3ODQ5","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-11-07T09:26:41Z","updated_at":"2014-11-07T09:26:41Z","author_association":"CONTRIBUTOR","body":"@bittusarkar I think your analysis that the streams have not been registered is good. If you have a custom aggregation, I believe that you needed to create a module for it? If so you would just need to register streams for your aggregation in the configure() method of your module.\n\nRegarding caching, if your aggregation needs to be able to cache across different requests, then it somehow needs to cache on its own (and/or on client side). I am reluctant to allow the query cache to have different requests cached under the same cache key as it might introduce fragility (figuring out whether two json requests are equivalent is quite hard).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/62129954","html_url":"https://github.com/elastic/elasticsearch/issues/8322#issuecomment-62129954","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8322","id":62129954,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMTI5OTU0","user":{"login":"bittusarkar","id":860447,"node_id":"MDQ6VXNlcjg2MDQ0Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/860447?v=4","gravatar_id":"","url":"https://api.github.com/users/bittusarkar","html_url":"https://github.com/bittusarkar","followers_url":"https://api.github.com/users/bittusarkar/followers","following_url":"https://api.github.com/users/bittusarkar/following{/other_user}","gists_url":"https://api.github.com/users/bittusarkar/gists{/gist_id}","starred_url":"https://api.github.com/users/bittusarkar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bittusarkar/subscriptions","organizations_url":"https://api.github.com/users/bittusarkar/orgs","repos_url":"https://api.github.com/users/bittusarkar/repos","events_url":"https://api.github.com/users/bittusarkar/events{/privacy}","received_events_url":"https://api.github.com/users/bittusarkar/received_events","type":"User","site_admin":false},"created_at":"2014-11-07T11:24:43Z","updated_at":"2014-11-07T11:24:43Z","author_association":"NONE","body":"@jpountz Thank you for the pointer about the `configure()` method. I'll look into it.\n\nRegarding caching, I agree with you. I am also inclined towards implementing caching in my custom aggregation module. But then I would need to detect when to invalidate the cache. Ideally, I would like to do it in the way Shard Query Cache does it (cached results are invalidated automatically whenever the shard refreshes, but only if the data in the shard has actually changed). Can I do something similar in my custom aggregation code too?\n\nI also like the idea of doing this on the client side. What ES API can I use to detect when to invalidate the cache?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/62154156","html_url":"https://github.com/elastic/elasticsearch/issues/8322#issuecomment-62154156","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8322","id":62154156,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMTU0MTU2","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-11-07T14:48:42Z","updated_at":"2014-11-07T14:48:42Z","author_association":"CONTRIBUTOR","body":"@bittusarkar Maybe there is a misunderstanding here: the shard query cache only gets invalidated if a refresh actually updated some data.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/62155831","html_url":"https://github.com/elastic/elasticsearch/issues/8322#issuecomment-62155831","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8322","id":62155831,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMTU1ODMx","user":{"login":"bittusarkar","id":860447,"node_id":"MDQ6VXNlcjg2MDQ0Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/860447?v=4","gravatar_id":"","url":"https://api.github.com/users/bittusarkar","html_url":"https://github.com/bittusarkar","followers_url":"https://api.github.com/users/bittusarkar/followers","following_url":"https://api.github.com/users/bittusarkar/following{/other_user}","gists_url":"https://api.github.com/users/bittusarkar/gists{/gist_id}","starred_url":"https://api.github.com/users/bittusarkar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bittusarkar/subscriptions","organizations_url":"https://api.github.com/users/bittusarkar/orgs","repos_url":"https://api.github.com/users/bittusarkar/repos","events_url":"https://api.github.com/users/bittusarkar/events{/privacy}","received_events_url":"https://api.github.com/users/bittusarkar/received_events","type":"User","site_admin":false},"created_at":"2014-11-07T15:00:15Z","updated_at":"2014-11-07T15:00:15Z","author_association":"NONE","body":"@jpountz I got that. I think I mixed up shard query cache with the custom cache that I want to implement. Sorry for that.\n\nWhat I want to know is, is there a way by which I can implement a similar cache invalidation logic inside my custom aggregation code (specifically inside the class extended from `NumericMetricsAggregator.MultiValue`). The cache that I am referring to here is a custom cache that I would implement. \nIdea is to re-use aggregation results stored in a cache but also make sure that the cache is not stale. Aggregation results do not necessarily change if the JSON query changes (changes in `filter` for example will not cause any aggregation results to change).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/62826771","html_url":"https://github.com/elastic/elasticsearch/issues/8322#issuecomment-62826771","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8322","id":62826771,"node_id":"MDEyOklzc3VlQ29tbWVudDYyODI2Nzcx","user":{"login":"bittusarkar","id":860447,"node_id":"MDQ6VXNlcjg2MDQ0Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/860447?v=4","gravatar_id":"","url":"https://api.github.com/users/bittusarkar","html_url":"https://github.com/bittusarkar","followers_url":"https://api.github.com/users/bittusarkar/followers","following_url":"https://api.github.com/users/bittusarkar/following{/other_user}","gists_url":"https://api.github.com/users/bittusarkar/gists{/gist_id}","starred_url":"https://api.github.com/users/bittusarkar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bittusarkar/subscriptions","organizations_url":"https://api.github.com/users/bittusarkar/orgs","repos_url":"https://api.github.com/users/bittusarkar/repos","events_url":"https://api.github.com/users/bittusarkar/events{/privacy}","received_events_url":"https://api.github.com/users/bittusarkar/received_events","type":"User","site_admin":false},"created_at":"2014-11-13T01:31:22Z","updated_at":"2014-11-13T01:31:22Z","author_association":"NONE","body":"@jpountz Just wanted to drop by asking if you got a chance to work on this?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/135060756","html_url":"https://github.com/elastic/elasticsearch/issues/8322#issuecomment-135060756","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8322","id":135060756,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNTA2MDc1Ng==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-08-26T15:22:41Z","updated_at":"2015-08-26T15:22:41Z","author_association":"CONTRIBUTOR","body":"Sorry that I missed the previous pings. We haven't had the need to use caches for \"regular\" aggregations and I don't want to make the framework more complicated.\n","performed_via_github_app":null}]