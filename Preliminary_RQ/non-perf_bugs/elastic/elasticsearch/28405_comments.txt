[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/360997665","html_url":"https://github.com/elastic/elasticsearch/issues/28405#issuecomment-360997665","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28405","id":360997665,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDk5NzY2NQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2018-01-27T16:52:48Z","updated_at":"2018-01-27T16:52:48Z","author_association":"MEMBER","body":"Thanks @ywelsch for the details.\r\n\r\n> The replica selects a safe commit for peer recovery, which has a local checkpoint that's below the current global checkpoint. In particular, C_problematic qualifies as such a commit now, whereas the operations that it contains are invalid\r\n\r\nIf understand correctly, `C_problematic` was created way back from the beginning before the second recovery of the shard that went well. The funny thing is that we are supposed to have deleted it when we started from an older commit in the second recovery (see onInit in the CombineDeletionPolicy). This is on it's own a problem (I realize now) as we have no guarantee that these files are actually deleted on windows (due to virusscanners etc). I think we should flush if the safe commit is not the last one in order to rely on this. That said, I don't how this can happen here (and i can't find a simulation in the test infra that may cause this). I'm trying to reproduce this on my CI with some store level trace logs to see if the deletes is happening. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/360998261","html_url":"https://github.com/elastic/elasticsearch/issues/28405#issuecomment-360998261","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28405","id":360998261,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDk5ODI2MQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2018-01-27T17:01:57Z","updated_at":"2018-01-27T17:15:22Z","author_association":"MEMBER","body":"Another thing that bugs me is that this problem (using unsafe commit as a basis for a seq# recovery) is a known limitation of ops based recovery that the safe commit logic tries to solve. The [build stats](https://build-stats.elastic.co/app/kibana?#/discover?_g=(refreshInterval:(display:Off,pause:!f,value:0),time:(from:now-60d,mode:quick,to:now))&_a=(columns:!(_source),index:'build-*',interval:auto,query:(query_string:(analyze_wildcard:!t,query:'test.failed-testcases.test:%22testAckedIndexing%22')),sort:!(process.time-start,desc))) show a recent increase which I don't understand yet (but the failure rate is so small it's hard to be sure).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/360999693","html_url":"https://github.com/elastic/elasticsearch/issues/28405#issuecomment-360999693","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28405","id":360999693,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDk5OTY5Mw==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2018-01-27T17:23:11Z","updated_at":"2018-01-27T17:23:11Z","author_association":"MEMBER","body":"I did some more digging and the protection I described wasn't part of the original PR yannick linked to but rather https://github.com/elastic/elasticsearch/pull/28228 . I don't see any failures after that so I think we're good here.\r\n\r\nI leave this issue open as:\r\n1) I would like a validation of my logic. This concerns data loss and I think it should be double checked.\r\n2) I want to discuss if we want to follow up with extra flush as a protection for delayed delete on Windows. This is in IMO not a blocker.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/360999850","html_url":"https://github.com/elastic/elasticsearch/issues/28405#issuecomment-360999850","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28405","id":360999850,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDk5OTg1MA==","user":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"created_at":"2018-01-27T17:25:40Z","updated_at":"2018-01-27T17:25:40Z","author_association":"MEMBER","body":"@ywelsch This is a great find.\r\n\r\nThe recent failures happened between [#28181] and [#28228].  But we need to prove that [#28228] actually fixed the issue. I sometime can reproduce this with a commit between these changes (for \r\n example `8eb2e632103bba3760cbfb7512cf8ec357aeba00`)\r\n\r\n```\r\n ./gradlew :server:integTest \\\r\n  -Dtests.seed=720BC216F108312A \\\r\n  -Dtests.class=org.elasticsearch.discovery.ClusterDisruptionIT \\\r\n  -Dtests.method=\"testAckedIndexing\" \\\r\n  -Dtests.security.manager=true \\\r\n  -Dbuild.snapshot=false \\\r\n  -Dtests.jvm.argline=\"-Dbuild.snapshot=false\" \\\r\n  -Dtests.locale=hi \\\r\n  -Dtests.timezone=Pacific/Johnston\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/361020260","html_url":"https://github.com/elastic/elasticsearch/issues/28405#issuecomment-361020260","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28405","id":361020260,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTAyMDI2MA==","user":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"created_at":"2018-01-27T22:24:21Z","updated_at":"2018-01-27T22:24:21Z","author_association":"MEMBER","body":"I reproduced this without #28228 . The log shows that using \"unsafe commit\" is the actual cause as Yannick described. Here are some important steps from the log [ackedIndexing.txt](https://github.com/elastic/elasticsearch/files/1670594/ackedIndexing.txt)\r\n\r\n- Shard `test:1` on `node_t1` starts peer-recovery with two commits and correctly starts with `c1`\r\n\r\n```\r\n1> [2018-01-27T10:58:25,069][INFO ][o.e.i.r.PeerRecoveryTargetService] [node_t1] --> [test][1] peer recovery existing commits[[\r\n{local_checkpoint=-1, max_unsafe_auto_id_timestamp=-1, translog_uuid=bGKQoWndQEW2EyjrSfzBZQ, history_uuid=es--KoksSbeDNOVsxGl1Mw, \r\ntranslog_generation=1, max_seq_no=-1, docIds={}}, \r\n{local_checkpoint=2, max_unsafe_auto_id_timestamp=-1, translog_uuid=bGKQoWndQEW2EyjrSfzBZQ, history_uuid=es--KoksSbeDNOVsxGl1Mw, \r\ntranslog_generation=2, max_seq_no=2, docIds={12,15,8}}]],\r\n safe commit [{local_checkpoint=-1, max_unsafe_auto_id_timestamp=-1, translog_uuid=bGKQoWndQEW2EyjrSfzBZQ, history_uuid=es--KoksSbeDNOVsxGl1Mw, \r\ntranslog_generation=1, max_seq_no=-1, docIds={}}], gcp[0]\r\n```\r\n\r\n- Shard `test:1` on `node_t1` starts peer-recovery again with the same commits but *incorrectly* starts with `c2`.\r\n\r\n```\r\n1> [2018-01-27T10:58:33,091][INFO ][o.e.i.r.PeerRecoveryTargetService] [node_t1] --> [test][1] peer recovery existing commits[[\r\n{local_checkpoint=-1, max_unsafe_auto_id_timestamp=-1, translog_uuid=bGKQoWndQEW2EyjrSfzBZQ, history_uuid=es--KoksSbeDNOVsxGl1Mw, \r\ntranslog_generation=1, max_seq_no=-1, docIds={}}, \r\n{local_checkpoint=2, max_unsafe_auto_id_timestamp=-1, translog_uuid=bGKQoWndQEW2EyjrSfzBZQ, history_uuid=es--KoksSbeDNOVsxGl1Mw, \r\ntranslog_generation=2, max_seq_no=2, docIds={12,15,8}}]], \r\nsafe commit [{local_checkpoint=2, max_unsafe_auto_id_timestamp=-1, translog_uuid=bGKQoWndQEW2EyjrSfzBZQ, history_uuid=es--KoksSbeDNOVsxGl1Mw, \r\ntranslog_generation=2, max_seq_no=2, docIds={12,15,8}}], gcp[3]\r\n```\r\n\r\nI believe this issue is fixed by [#28228] because `c2` will be deleted in the first recovery round. (See https://github.com/elastic/elasticsearch/blob/6.2/server/src/main/java/org/elasticsearch/index/engine/CombinedDeletionPolicy.java#L90)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/361199658","html_url":"https://github.com/elastic/elasticsearch/issues/28405#issuecomment-361199658","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28405","id":361199658,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTE5OTY1OA==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2018-01-29T10:15:41Z","updated_at":"2018-01-29T10:15:41Z","author_association":"MEMBER","body":"I'm going to close this up as it has been fixed.\r\n\r\n@dnhatn when you have a moment, let's discuss follow ups from this. Concretely I'm thinking about logging improvements to make debugging easier and committing upon deletions of commits.","performed_via_github_app":null}]