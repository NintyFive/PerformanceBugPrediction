[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/77048663","html_url":"https://github.com/elastic/elasticsearch/issues/9973#issuecomment-77048663","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9973","id":77048663,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MDQ4NjYz","user":{"login":"jdutton","id":2054211,"node_id":"MDQ6VXNlcjIwNTQyMTE=","avatar_url":"https://avatars3.githubusercontent.com/u/2054211?v=4","gravatar_id":"","url":"https://api.github.com/users/jdutton","html_url":"https://github.com/jdutton","followers_url":"https://api.github.com/users/jdutton/followers","following_url":"https://api.github.com/users/jdutton/following{/other_user}","gists_url":"https://api.github.com/users/jdutton/gists{/gist_id}","starred_url":"https://api.github.com/users/jdutton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdutton/subscriptions","organizations_url":"https://api.github.com/users/jdutton/orgs","repos_url":"https://api.github.com/users/jdutton/repos","events_url":"https://api.github.com/users/jdutton/events{/privacy}","received_events_url":"https://api.github.com/users/jdutton/received_events","type":"User","site_admin":false},"created_at":"2015-03-03T22:17:03Z","updated_at":"2015-03-03T22:17:03Z","author_association":"NONE","body":"Sorry for the terrible formatting.  The YAML snippets got butchered by markdown.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/77052248","html_url":"https://github.com/elastic/elasticsearch/issues/9973#issuecomment-77052248","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9973","id":77052248,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MDUyMjQ4","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2015-03-03T22:35:17Z","updated_at":"2015-03-03T22:35:17Z","author_association":"MEMBER","body":"Here's a reproduction (just copying here in case the link doesn't work someday)\n\n# Create an index<a id=\"sec-1\" name=\"sec-1\"></a>\n\n```\nDELETE /9973\n{}\n\nPOST /9973\n{\n  \"settings\": {\n    \"number_of_shards\": 1,\n    \"number_of_replicas\": 0\n  },\n  \"mappings\": {\n    \"doc\": {\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"index\": \"not_analyzed\"\n        }\n      }\n    }\n  }\n}\n```\n\n# Index docs<a id=\"sec-2\" name=\"sec-2\"></a>\n\n```\nPOST /9973/doc/1\n{\"name\": \"7000\"}\n\nPOST /9973/doc/2?refresh\n{\"name\": \"T100\"}\n```\n\n# Query<a id=\"sec-3\" name=\"sec-3\"></a>\n\nThis query matches correctly:\n\n```\nPOST /9973/_search?pretty\n{\n  \"query\": {\n    \"query_string\": {\n      \"query\": \"name:7*\"\n    }\n  }\n}\n```\n\nResults:\n\n```\n{\n  \"took\" : 65,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 1,\n    \"max_score\" : 1.0,\n    \"hits\" : [ {\n      \"_index\" : \"9973\",\n      \"_type\" : \"doc\",\n      \"_id\" : \"1\",\n      \"_score\" : 1.0,\n      \"_source\":{\"name\": \"7000\"}\n    } ]\n  }\n}\n```\n\nThis one does not:\n\n```\nPOST /9973/_search?pretty\n{\n  \"query\": {\n    \"query_string\": {\n      \"query\": \"name:T*\"\n    }\n  }\n}\n```\n\nResults:\n\n```\n{\n  \"took\" : 2,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 0,\n    \"max_score\" : null,\n    \"hits\" : [ ]\n  }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/77060818","html_url":"https://github.com/elastic/elasticsearch/issues/9973#issuecomment-77060818","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9973","id":77060818,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MDYwODE4","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2015-03-03T23:15:34Z","updated_at":"2015-03-03T23:15:34Z","author_association":"MEMBER","body":"Interestingly, using an actual wildcard query here does the right thing (as well as using a `simple_query_string` query), so the issue is only with the `query_string` query:\n\n``` json\nPOST /9973/_search?pretty\n{\n  \"query\": {\n    \"wildcard\": {\n      \"name\": \"T*\"\n    }\n  }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/77064261","html_url":"https://github.com/elastic/elasticsearch/issues/9973#issuecomment-77064261","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9973","id":77064261,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MDY0MjYx","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2015-03-03T23:41:18Z","updated_at":"2015-03-03T23:41:18Z","author_association":"MEMBER","body":"@jdutton okay, @s1monw figured out what was going on here - since the `name` field is not analyzed, the token is \"T100\", however, the `query_string` query has the `lowercase_expanded_terms` option, which defaults to `true`, which causes it to search for \"`t*`\" instead of \"`T*`\".\n\nThis works as intended for me:\n\n``` json\nPOST /9973/_search?pretty\n{\n  \"query\": {\n    \"query_string\": {\n      \"query\": \"name:T*\",\n      \"lowercase_expanded_terms\": false\n    }\n  }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/77085249","html_url":"https://github.com/elastic/elasticsearch/issues/9973#issuecomment-77085249","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9973","id":77085249,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MDg1MjQ5","user":{"login":"jdutton","id":2054211,"node_id":"MDQ6VXNlcjIwNTQyMTE=","avatar_url":"https://avatars3.githubusercontent.com/u/2054211?v=4","gravatar_id":"","url":"https://api.github.com/users/jdutton","html_url":"https://github.com/jdutton","followers_url":"https://api.github.com/users/jdutton/followers","following_url":"https://api.github.com/users/jdutton/following{/other_user}","gists_url":"https://api.github.com/users/jdutton/gists{/gist_id}","starred_url":"https://api.github.com/users/jdutton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdutton/subscriptions","organizations_url":"https://api.github.com/users/jdutton/orgs","repos_url":"https://api.github.com/users/jdutton/repos","events_url":"https://api.github.com/users/jdutton/events{/privacy}","received_events_url":"https://api.github.com/users/jdutton/received_events","type":"User","site_admin":false},"created_at":"2015-03-04T02:20:49Z","updated_at":"2015-03-04T02:20:49Z","author_association":"NONE","body":"OK, wow thank you all for the help and fast response.  In my case I was really filtering, and this was a surprising and undesirable behavior.  But then again, in other cases (e.g. search bar) lowercasing would be the desired behavior.\n\nI have to do some soul searching now on how to change my application :-)  Thanks again for the help!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/77086729","html_url":"https://github.com/elastic/elasticsearch/issues/9973#issuecomment-77086729","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9973","id":77086729,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MDg2NzI5","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-03-04T02:37:18Z","updated_at":"2015-03-04T02:37:43Z","author_association":"CONTRIBUTOR","body":"for the record, i think we should remove this lowercasing option completely in parsers, disable it, and let the analysis chain take care. For multitermqueries, its a little tricky, which subset of the filters should be used? For example lowercasing is reasonable, stemming is not. \n\nBut lucene already annotates each analyzer component deemed to be \"reasonable\" for wildcards with a marker interface (MultiTermAwareComponent). Things like lowercasefilter have it and things like stemmers dont have it.  This is enough to build a \"chain\", automatically from the query analyzer, that acts reasonably for multitermqueries. \n\nI know we don't use the lucene factories (es has its own), but we have a table that maps between them, i know because its in a test I wrote. So the information is there :)\n\nAll queryparsers have hooks (e.g. factory methods for prefix/wildcard/range) that make it possible to use this, for example solr does it by default, as soon as it did this, people stopped complaining about confusing behavior: both for the unanalyzed, and the analyzed case. it just works.\n\nSorry for the long explanation.\n\nCompare:\n- http://svn.apache.org/viewvc/lucene/dev/branches/branch_5x/lucene/analysis/common/src/java/org/apache/lucene/analysis/core/LowerCaseFilterFactory.java?view=markup\n- http://svn.apache.org/viewvc/lucene/dev/branches/branch_5x/lucene/analysis/common/src/java/org/apache/lucene/analysis/en/PorterStemFilterFactory.java?view=markup\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/77114387","html_url":"https://github.com/elastic/elasticsearch/issues/9973#issuecomment-77114387","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9973","id":77114387,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MTE0Mzg3","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2015-03-04T08:16:44Z","updated_at":"2015-03-04T08:16:44Z","author_association":"CONTRIBUTOR","body":"@rmuir +1 to remove the option can you open an issue?\n","performed_via_github_app":null}]