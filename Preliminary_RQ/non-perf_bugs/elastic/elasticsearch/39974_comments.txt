[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/472134262","html_url":"https://github.com/elastic/elasticsearch/issues/39974#issuecomment-472134262","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39974","id":472134262,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MjEzNDI2Mg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-03-12T18:49:47Z","updated_at":"2019-03-12T18:49:47Z","author_association":"COLLABORATOR","body":"Pinging @elastic/ml-core","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/472155423","html_url":"https://github.com/elastic/elasticsearch/issues/39974#issuecomment-472155423","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39974","id":472155423,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MjE1NTQyMw==","user":{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false},"created_at":"2019-03-12T19:51:34Z","updated_at":"2019-03-12T20:24:25Z","author_association":"MEMBER","body":"Even though we allow the mapping type for `max` and `min` to be whatever the source mapping type to be (e.g. `max` on a field of type `date` will get a mapping entry of type `date` in the destination index), we still regretfully assume an aggregation result of `NumericMetricsAggregation.SingleValue` is numeric only when parsing in `AggregationResultUtils.extractCompositeAggregationResults`. \r\n\r\nWorking on a fix as this could easily cause issues with other more complicated aggregations (not to mention when we start supporting pipeline aggregations). ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/472174118","html_url":"https://github.com/elastic/elasticsearch/issues/39974#issuecomment-472174118","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39974","id":472174118,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MjE3NDExOA==","user":{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false},"created_at":"2019-03-12T20:45:54Z","updated_at":"2019-03-12T20:45:54Z","author_association":"MEMBER","body":"Did some local testing, it turns out that `getValueAsString()` works just for letting a field be indexed into a `date` mapping type. But, we cannot do that for all results as the document `_source` would look incorrect if the user was expecting a numerical value in the field. For  `NumericMetricsAggregation.SingleValue` results, we need to determine if we want a string or a number before indexing. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/472409206","html_url":"https://github.com/elastic/elasticsearch/issues/39974#issuecomment-472409206","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39974","id":472409206,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MjQwOTIwNg==","user":{"login":"sophiec20","id":4185750,"node_id":"MDQ6VXNlcjQxODU3NTA=","avatar_url":"https://avatars2.githubusercontent.com/u/4185750?v=4","gravatar_id":"","url":"https://api.github.com/users/sophiec20","html_url":"https://github.com/sophiec20","followers_url":"https://api.github.com/users/sophiec20/followers","following_url":"https://api.github.com/users/sophiec20/following{/other_user}","gists_url":"https://api.github.com/users/sophiec20/gists{/gist_id}","starred_url":"https://api.github.com/users/sophiec20/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sophiec20/subscriptions","organizations_url":"https://api.github.com/users/sophiec20/orgs","repos_url":"https://api.github.com/users/sophiec20/repos","events_url":"https://api.github.com/users/sophiec20/events{/privacy}","received_events_url":"https://api.github.com/users/sophiec20/received_events","type":"User","site_admin":false},"created_at":"2019-03-13T12:52:25Z","updated_at":"2019-03-13T12:52:25Z","author_association":"NONE","body":"As the mappings are created correctly as `date` in the data frame, and the `_preview` endpoint returns the aggregation, it seems a shame not to capture this.\r\n\r\nContemplating use cases, I suspect this is something that will be useful, for example:\r\n- for customers who have interacted in the last 30d, tell me who are the biggest ever spenders. \r\n- for customers acquired in Feb2019, tell me who is most active on the platform\r\n\r\nIt also provides a method by which to retire or exclude non-relevant data from the data frame.\r\n\r\nThere are other ways to answer these questions, for example with support of scripts, but this seems neatest.\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/472412145","html_url":"https://github.com/elastic/elasticsearch/issues/39974#issuecomment-472412145","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39974","id":472412145,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MjQxMjE0NQ==","user":{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false},"created_at":"2019-03-13T13:01:19Z","updated_at":"2019-03-13T13:01:19Z","author_association":"MEMBER","body":"@sophiec20 yeah, since the mapping is `date` but we are trying to push in a `double` it cannot be converted appropriately. \r\n\r\nWhen determining the data to push to the new index, we should not lose what formatting is supplied given the originally aggregated type. \r\n\r\nThis, to me, is bigger than just `date` as other aggregations (max on an IP address, for instance), where this same issue would arise. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/473247414","html_url":"https://github.com/elastic/elasticsearch/issues/39974#issuecomment-473247414","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39974","id":473247414,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MzI0NzQxNA==","user":{"login":"hendrikmuhs","id":7126422,"node_id":"MDQ6VXNlcjcxMjY0MjI=","avatar_url":"https://avatars3.githubusercontent.com/u/7126422?v=4","gravatar_id":"","url":"https://api.github.com/users/hendrikmuhs","html_url":"https://github.com/hendrikmuhs","followers_url":"https://api.github.com/users/hendrikmuhs/followers","following_url":"https://api.github.com/users/hendrikmuhs/following{/other_user}","gists_url":"https://api.github.com/users/hendrikmuhs/gists{/gist_id}","starred_url":"https://api.github.com/users/hendrikmuhs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hendrikmuhs/subscriptions","organizations_url":"https://api.github.com/users/hendrikmuhs/orgs","repos_url":"https://api.github.com/users/hendrikmuhs/repos","events_url":"https://api.github.com/users/hendrikmuhs/events{/privacy}","received_events_url":"https://api.github.com/users/hendrikmuhs/received_events","type":"User","site_admin":false},"created_at":"2019-03-15T11:12:02Z","updated_at":"2019-03-15T11:12:02Z","author_association":"CONTRIBUTOR","body":"@benwtrent \r\n\r\nThe idea with using `getValueAsString()` seems good to me. When we create the bulk index request we turn everything into a string anyway. \r\n\r\nWhen double values are turned into strings they are written using scientific notation if the value is larger than `10**7`. Parsing scientific works fine except for the date parser. \r\n\r\nInterestingly `getValueAsString()` uses the following implementation:\r\n\r\n```\r\n    public String getValueAsString() {\r\n        if (valueAsString != null) {\r\n            return valueAsString;\r\n        } else {\r\n            return Double.toString(value);\r\n        }\r\n    }\r\n```\r\n\r\nAggregations on dates seem like a very old issue: https://github.com/elastic/elasticsearch/issues/6812","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/475510169","html_url":"https://github.com/elastic/elasticsearch/issues/39974#issuecomment-475510169","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39974","id":475510169,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3NTUxMDE2OQ==","user":{"login":"hendrikmuhs","id":7126422,"node_id":"MDQ6VXNlcjcxMjY0MjI=","avatar_url":"https://avatars3.githubusercontent.com/u/7126422?v=4","gravatar_id":"","url":"https://api.github.com/users/hendrikmuhs","html_url":"https://github.com/hendrikmuhs","followers_url":"https://api.github.com/users/hendrikmuhs/followers","following_url":"https://api.github.com/users/hendrikmuhs/following{/other_user}","gists_url":"https://api.github.com/users/hendrikmuhs/gists{/gist_id}","starred_url":"https://api.github.com/users/hendrikmuhs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hendrikmuhs/subscriptions","organizations_url":"https://api.github.com/users/hendrikmuhs/orgs","repos_url":"https://api.github.com/users/hendrikmuhs/repos","events_url":"https://api.github.com/users/hendrikmuhs/events{/privacy}","received_events_url":"https://api.github.com/users/hendrikmuhs/received_events","type":"User","site_admin":false},"created_at":"2019-03-22T06:37:15Z","updated_at":"2019-03-22T06:37:15Z","author_association":"CONTRIBUTOR","body":"For the record: \r\n\r\nNo matter what you choose `getValueAsString()` or `value()` you end up with a problem as either numbers get strings or dates become invalid. We need to know whether something needs to be quoted or not. There is no generic solution but we need to take the mapping and handle numbers and dates differently.\r\n\r\nSolution: https://github.com/elastic/elasticsearch/pull/40220","performed_via_github_app":null}]