{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/54549","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54549/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54549/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54549/events","html_url":"https://github.com/elastic/elasticsearch/issues/54549","id":591531487,"node_id":"MDU6SXNzdWU1OTE1MzE0ODc=","number":54549,"title":"Inconsistent errors in bulk API","user":{"login":"s-nel","id":504326,"node_id":"MDQ6VXNlcjUwNDMyNg==","avatar_url":"https://avatars3.githubusercontent.com/u/504326?v=4","gravatar_id":"","url":"https://api.github.com/users/s-nel","html_url":"https://github.com/s-nel","followers_url":"https://api.github.com/users/s-nel/followers","following_url":"https://api.github.com/users/s-nel/following{/other_user}","gists_url":"https://api.github.com/users/s-nel/gists{/gist_id}","starred_url":"https://api.github.com/users/s-nel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s-nel/subscriptions","organizations_url":"https://api.github.com/users/s-nel/orgs","repos_url":"https://api.github.com/users/s-nel/repos","events_url":"https://api.github.com/users/s-nel/events{/privacy}","received_events_url":"https://api.github.com/users/s-nel/received_events","type":"User","site_admin":false},"labels":[{"id":163824881,"node_id":"MDU6TGFiZWwxNjM4MjQ4ODE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Indices%20APIs","name":":Core/Features/Indices APIs","color":"0e8a16","default":false,"description":"APIs to create and manage indices"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":1967496097,"node_id":"MDU6TGFiZWwxOTY3NDk2MDk3","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Core/Features","name":"Team:Core/Features","color":"fef2c0","default":false,"description":"Meta label for core/features team"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-04-01T00:25:43Z","updated_at":"2020-09-04T14:29:24Z","closed_at":"2020-09-04T14:29:24Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 7.6.1\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`): Elastic Cloud\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): Elastic Cloud\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nThe bulk API may respond with errors per bulk request item, or it may fail the entire request, and it's unclear and undocumented when each might happen. The structure of bulk response for failed items is AFAICT completely undocumented. The only mention about the response structure I found [in the docs](https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html) is:\r\n\r\n> The response to a bulk action is a large JSON structure with the individual results of each action performed, in the same order as the actions that appeared in the request. The failure of a single action does not affect the remaining actions.\r\n\r\nAs an example of inconsistent behavior in this respect if I attempt to index a document into an index that does not exist (and automatic index creation is disabled) the bulk response will look like:\r\n\r\n```json\r\n{\r\n    \"took\": 0,\r\n    \"errors\": true,\r\n    \"items\": [\r\n        {\r\n            \"index\": {\r\n                \"_index\": \"bar-4\",\r\n                \"_type\": \"_doc\",\r\n                \"_id\": null,\r\n                \"status\": 404,\r\n                \"error\": {\r\n                    \"type\": \"index_not_found_exception\",\r\n                    \"reason\": \"no such index [bar-4]\",\r\n                    \"resource.type\": \"index_expression\",\r\n                    \"resource.id\": \"bar-4\",\r\n                    \"index_uuid\": \"_na_\",\r\n                    \"index\": \"bar-4\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nhowever if I try to index into an alias that does not have a write alias defined I get an overall request failure, even though other bulk request items _could_ have been processed:\r\n\r\n```\r\n{\r\n    \"error\": {\r\n        \"root_cause\": [\r\n            {\r\n                \"type\": \"illegal_argument_exception\",\r\n                \"reason\": \"no write index is defined for alias [bar]. The write index may be explicitly disabled using is_write_index=false or the alias points to multiple indices without one being designated as a write index\"\r\n            }\r\n        ],\r\n        \"type\": \"illegal_argument_exception\",\r\n        \"reason\": \"no write index is defined for alias [bar]. The write index may be explicitly disabled using is_write_index=false or the alias points to multiple indices without one being designated as a write index\"\r\n    },\r\n    \"status\": 400\r\n}\r\n```\r\n\r\nI would expect missing \"index not found\" and \"no write index for an alias\" to be treated the same: the request would succeed, but the individual response item would show the failure. Both errors are predicated on server state. It contradicts the documentation that says a failure of a single action does not affect the remaining actions.\r\n\r\nAs a further example of inconsistency, consider when a mapping is `dynamic: strict`, and using the bulk API I attempt to index a field that is not in the mapping:\r\n\r\n```json\r\n{\r\n    \"took\": 1,\r\n    \"errors\": true,\r\n    \"items\": [\r\n        {\r\n            \"index\": {\r\n                \"_index\": \"foo\",\r\n                \"_type\": \"_doc\",\r\n                \"_id\": \"zC4WM3EBVwMmsGyRIIsp\",\r\n                \"status\": 400,\r\n                \"error\": {\r\n                    \"type\": \"strict_dynamic_mapping_exception\",\r\n                    \"reason\": \"mapping set to strict, dynamic introduction of [otherfield] within [_doc] is not allowed\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nAs part of this issue, can we:\r\n1. Document the bulk API response object and expectations for when the entire request will fail\r\n2. Make item-level errors consistent with documentation\r\n\r\n**Steps to reproduce**:\r\n\r\nPlease include a *minimal* but *complete* recreation of the problem, including\r\n(e.g.) index creation, mappings, settings, query etc.  The easier you make for\r\nus to reproduce it, the more likely that somebody will take the time to look at it.\r\n\r\n 1. `PUT /bar-1`\r\n 2. `PUT /bar-2`\r\n 3. Create an alias that points to two indices\r\n   ```\r\n   POST /_aliases\r\n   {\r\n     \"actions\": [\r\n       { \"add\": { \"index\": \"bar-1\", \"alias\": \"bar\" } },\r\n       { \"add\": { \"index\": \"bar-2\", \"alias\": \"bar\" } }\r\n     ]\r\n   }\r\n   ```\r\n4. Attempt to index a document using `bar` alias\r\n   ```\r\n   POST /_bulk\r\n   { \"create\": { \"_index\": \"bar\" } }\r\n   { \"message\": \"hello, world\" }\r\n   ```\r\n\r\n**Provide logs (if relevant)**:\r\n\r\n","closed_by":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"performed_via_github_app":null}