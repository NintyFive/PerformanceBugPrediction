{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/37705","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37705/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37705/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37705/events","html_url":"https://github.com/elastic/elasticsearch/issues/37705","id":401786679,"node_id":"MDU6SXNzdWU0MDE3ODY2Nzk=","number":37705,"title":"execution_hint: 'map' loads global ords when it doesn't need to","user":{"login":"alexander-marquardt","id":2364589,"node_id":"MDQ6VXNlcjIzNjQ1ODk=","avatar_url":"https://avatars2.githubusercontent.com/u/2364589?v=4","gravatar_id":"","url":"https://api.github.com/users/alexander-marquardt","html_url":"https://github.com/alexander-marquardt","followers_url":"https://api.github.com/users/alexander-marquardt/followers","following_url":"https://api.github.com/users/alexander-marquardt/following{/other_user}","gists_url":"https://api.github.com/users/alexander-marquardt/gists{/gist_id}","starred_url":"https://api.github.com/users/alexander-marquardt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexander-marquardt/subscriptions","organizations_url":"https://api.github.com/users/alexander-marquardt/orgs","repos_url":"https://api.github.com/users/alexander-marquardt/repos","events_url":"https://api.github.com/users/alexander-marquardt/events{/privacy}","received_events_url":"https://api.github.com/users/alexander-marquardt/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-01-22T14:20:48Z","updated_at":"2019-02-01T08:35:46Z","closed_at":"2019-02-01T08:35:46Z","author_association":"NONE","active_lock_reason":null,"body":"(corrected description) 'execution_hint': 'map' loads global ordinals, even though they are not required. This feature is [documented here](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html#search-aggregations-bucket-terms-aggregation-execution-hint). \r\n\r\nI have a client with an index containing hundreds of millions of documents. Within this index, there is a high cardinality field with hundreds of millions of possible values. When the client executes a query that matches a few hundred documents, and then runs a terms aggregation on the high-cardinality field, Elastic will rebuild global ordinals, which can take 15 seconds (In-fact it even does this rebuild of the global ordinals if the query matched zero documents).There are several options for solving this issue: \r\n\r\n1.  wait 15 seconds to build global ordinals on execution of the aggregation (not acceptable, and not a real solution)\r\n\r\n1. enable eager global ordinals and increase the refresh interval to minimize the impact of constant rebuilding of global ordinals (which is not ideal due to having to wait to see results, and the constant work of rebuilding global ordinals) \r\n\r\n1. use ‘map’ to only evaluate documents that match the query when running the terms aggregation (doesn’t work)\r\n\r\n1. do a hack - use a script to return the value for the terms aggregation, which forces global ordinals to be ignored as they don't exist for a script-generated field (this works, but feels hackey).\r\n\r\nTo give context, this is for a bank. A given client will want to see all the IBAN numbers they have transfered to. There are hundreds of millions of IBAN numbers, but each client will have only used on the order of hundreds. \r\n\r\nI am currently using option (4) to work around the fact that (3) does not work. Ideally I would like to use (3)  execution_hint: map to solve this issue. \r\n\r\nThis was discussed in the #elasticsearch slack channel on Jan 22, 2019\r\n","closed_by":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}