[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241946179","html_url":"https://github.com/elastic/elasticsearch/issues/20108#issuecomment-241946179","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20108","id":241946179,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTk0NjE3OQ==","user":{"login":"makeyang","id":13898618,"node_id":"MDQ6VXNlcjEzODk4NjE4","avatar_url":"https://avatars2.githubusercontent.com/u/13898618?v=4","gravatar_id":"","url":"https://api.github.com/users/makeyang","html_url":"https://github.com/makeyang","followers_url":"https://api.github.com/users/makeyang/followers","following_url":"https://api.github.com/users/makeyang/following{/other_user}","gists_url":"https://api.github.com/users/makeyang/gists{/gist_id}","starred_url":"https://api.github.com/users/makeyang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/makeyang/subscriptions","organizations_url":"https://api.github.com/users/makeyang/orgs","repos_url":"https://api.github.com/users/makeyang/repos","events_url":"https://api.github.com/users/makeyang/events{/privacy}","received_events_url":"https://api.github.com/users/makeyang/received_events","type":"User","site_admin":false},"created_at":"2016-08-24T03:14:42Z","updated_at":"2016-08-24T03:14:42Z","author_association":"CONTRIBUTOR","body":"+1\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/247340881","html_url":"https://github.com/elastic/elasticsearch/issues/20108#issuecomment-247340881","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20108","id":247340881,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NzM0MDg4MQ==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2016-09-15T14:16:31Z","updated_at":"2016-09-15T14:16:31Z","author_association":"MEMBER","body":"I just had a skim through the code to see how difficult this would be.  I think it'll be relatively non-trivial.  The cache is instantiated as a shared, per-node resource (even though it tracks queries on a per-shard basis).  So we can't \"wrap\" the cache with an instrumented profiler like we can with queries, since it will be concurrently servicing non-profiled queries too.\n\nThe API is a bit tricky too;  caching the queries is a side-effect of creating the weight... the caller doesn't know if the filter was actually cached or not. \n\nThere may be a way to wrap the `CachingWeightWrapper` with an instrumented profiler, which immediately asks for the various cache stats (size, hitCount, etc) and uses that to approximate if the filter was cached or not.  It'd only be a guess though.  Other, concurrent queries could have been caching at the same time in unrelated non-profiled queries.\n\nDunno.  I'll corner @jpountz in Prague and see what he thinks :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/282321931","html_url":"https://github.com/elastic/elasticsearch/issues/20108#issuecomment-282321931","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20108","id":282321931,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MjMyMTkzMQ==","user":{"login":"sundarv85","id":11090193,"node_id":"MDQ6VXNlcjExMDkwMTkz","avatar_url":"https://avatars0.githubusercontent.com/u/11090193?v=4","gravatar_id":"","url":"https://api.github.com/users/sundarv85","html_url":"https://github.com/sundarv85","followers_url":"https://api.github.com/users/sundarv85/followers","following_url":"https://api.github.com/users/sundarv85/following{/other_user}","gists_url":"https://api.github.com/users/sundarv85/gists{/gist_id}","starred_url":"https://api.github.com/users/sundarv85/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sundarv85/subscriptions","organizations_url":"https://api.github.com/users/sundarv85/orgs","repos_url":"https://api.github.com/users/sundarv85/repos","events_url":"https://api.github.com/users/sundarv85/events{/privacy}","received_events_url":"https://api.github.com/users/sundarv85/received_events","type":"User","site_admin":false},"created_at":"2017-02-24T15:38:10Z","updated_at":"2017-02-24T15:38:10Z","author_association":"NONE","body":"+1 \r\n\r\nThis is definitely a very valuable feature esp when debugging complex caching issues. Currently in our stack, we have indexes with 200 Million documents and aggregation response takes somewhere between 4-60 seconds. Debugging such issue is too complicated. When profile API can respond back if the response comes from cache or not, such information could be very helpful.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/383881599","html_url":"https://github.com/elastic/elasticsearch/issues/20108#issuecomment-383881599","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20108","id":383881599,"node_id":"MDEyOklzc3VlQ29tbWVudDM4Mzg4MTU5OQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-04-24T10:22:04Z","updated_at":"2018-04-24T10:22:04Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/593722307","html_url":"https://github.com/elastic/elasticsearch/issues/20108#issuecomment-593722307","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20108","id":593722307,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzcyMjMwNw==","user":{"login":"ppf2","id":7216393,"node_id":"MDQ6VXNlcjcyMTYzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/7216393?v=4","gravatar_id":"","url":"https://api.github.com/users/ppf2","html_url":"https://github.com/ppf2","followers_url":"https://api.github.com/users/ppf2/followers","following_url":"https://api.github.com/users/ppf2/following{/other_user}","gists_url":"https://api.github.com/users/ppf2/gists{/gist_id}","starred_url":"https://api.github.com/users/ppf2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppf2/subscriptions","organizations_url":"https://api.github.com/users/ppf2/orgs","repos_url":"https://api.github.com/users/ppf2/repos","events_url":"https://api.github.com/users/ppf2/events{/privacy}","received_events_url":"https://api.github.com/users/ppf2/received_events","type":"User","site_admin":false},"created_at":"2020-03-03T01:42:58Z","updated_at":"2020-03-03T01:42:58Z","author_association":"MEMBER","body":"Starting in 7.6, profile API now disables the query and request cache when\r\nprofile is set to true (https://github.com/elastic/elasticsearch/pull/48195) so users will not have to deal with figuring out if the profile API output is reflecting query performance with/without request/query caching in play, etc..","performed_via_github_app":null}]