[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/182711205","html_url":"https://github.com/elastic/elasticsearch/issues/16594#issuecomment-182711205","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16594","id":182711205,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MjcxMTIwNQ==","user":{"login":"gpstathis","id":365914,"node_id":"MDQ6VXNlcjM2NTkxNA==","avatar_url":"https://avatars0.githubusercontent.com/u/365914?v=4","gravatar_id":"","url":"https://api.github.com/users/gpstathis","html_url":"https://github.com/gpstathis","followers_url":"https://api.github.com/users/gpstathis/followers","following_url":"https://api.github.com/users/gpstathis/following{/other_user}","gists_url":"https://api.github.com/users/gpstathis/gists{/gist_id}","starred_url":"https://api.github.com/users/gpstathis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gpstathis/subscriptions","organizations_url":"https://api.github.com/users/gpstathis/orgs","repos_url":"https://api.github.com/users/gpstathis/repos","events_url":"https://api.github.com/users/gpstathis/events{/privacy}","received_events_url":"https://api.github.com/users/gpstathis/received_events","type":"User","site_admin":false},"created_at":"2016-02-11T05:10:20Z","updated_at":"2016-02-11T05:10:20Z","author_association":"CONTRIBUTOR","body":"@s1monw see commit af0e07a above in my repo. Happy to open a PR if it looks ok to you.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/182762820","html_url":"https://github.com/elastic/elasticsearch/issues/16594#issuecomment-182762820","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16594","id":182762820,"node_id":"MDEyOklzc3VlQ29tbWVudDE4Mjc2MjgyMA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-02-11T08:32:43Z","updated_at":"2016-02-11T08:32:43Z","author_association":"CONTRIBUTOR","body":"@gpstathis I think there is more wrong here than just that. Af far as I can tell you should not be able to overwrite this similarity that's why it's applied afterwards. To change the default you can define `similarity.base` but this seems broken too. Since default is used instead of base in lots of places. I think we need to fix all of this? Do you wanna take a look at it? \n\nI think in `PerFieldSimilarity` we should only use `defaultSimilarity` and the `baseSimilarity` member should go away and be assigned to `defaultSimilarity` if it's present. I also think we need to throw an exception if a build-in similarity is changed? This can be a different change. Regarding your commit I think this should all be done in a unittest which I can provide you with and example if you wanna take this on you?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/182908981","html_url":"https://github.com/elastic/elasticsearch/issues/16594#issuecomment-182908981","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16594","id":182908981,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MjkwODk4MQ==","user":{"login":"gpstathis","id":365914,"node_id":"MDQ6VXNlcjM2NTkxNA==","avatar_url":"https://avatars0.githubusercontent.com/u/365914?v=4","gravatar_id":"","url":"https://api.github.com/users/gpstathis","html_url":"https://github.com/gpstathis","followers_url":"https://api.github.com/users/gpstathis/followers","following_url":"https://api.github.com/users/gpstathis/following{/other_user}","gists_url":"https://api.github.com/users/gpstathis/gists{/gist_id}","starred_url":"https://api.github.com/users/gpstathis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gpstathis/subscriptions","organizations_url":"https://api.github.com/users/gpstathis/orgs","repos_url":"https://api.github.com/users/gpstathis/repos","events_url":"https://api.github.com/users/gpstathis/events{/privacy}","received_events_url":"https://api.github.com/users/gpstathis/received_events","type":"User","site_admin":false},"created_at":"2016-02-11T15:16:33Z","updated_at":"2016-02-11T15:16:33Z","author_association":"CONTRIBUTOR","body":"@s1monw yes, a unit test for what you would like the end behavior to be would be helpful. Also, I'm a bit unclear on a few things now:\n- Are we saying that one will no longer be able to define an alternative similarity that applies to all fields without going into the schema field-by-field and adding it? I.e. is this no longer desirable: \n\n```\nindex.similarity.default.type: BM25\n```\n- Regarding `similarity.base`, I thought it only applied to `coord()` and `queryNorm()` and was there for expert use per the [comment in the code](https://github.com/elastic/elasticsearch/blob/master/core/src/main/java/org/elasticsearch/index/similarity/SimilarityService.java#L82). Would consolidating with `defaultSimilarity` introduce regressions elsewhere?\n\nI can take a stab at a fix but only after #16550 which is a blocker for us at the moment and already present since 2.0. At least this bug is only on `master` and there is a workaround which is to overwrite every field in our schema with our custom similarity, field-by-field.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/182925651","html_url":"https://github.com/elastic/elasticsearch/issues/16594#issuecomment-182925651","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16594","id":182925651,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MjkyNTY1MQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-02-11T15:48:36Z","updated_at":"2016-02-11T15:48:36Z","author_association":"CONTRIBUTOR","body":"regarding `similarity.base` I agree I misread that part. \n\nWhat I am saying is that I think nobody should be able to change the `index.similarity.classic` similarity nor any similarity that is built-in. I think we should add a dedicated `index.similarity.default.type` that can be defined by the user? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/182967953","html_url":"https://github.com/elastic/elasticsearch/issues/16594#issuecomment-182967953","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16594","id":182967953,"node_id":"MDEyOklzc3VlQ29tbWVudDE4Mjk2Nzk1Mw==","user":{"login":"gpstathis","id":365914,"node_id":"MDQ6VXNlcjM2NTkxNA==","avatar_url":"https://avatars0.githubusercontent.com/u/365914?v=4","gravatar_id":"","url":"https://api.github.com/users/gpstathis","html_url":"https://github.com/gpstathis","followers_url":"https://api.github.com/users/gpstathis/followers","following_url":"https://api.github.com/users/gpstathis/following{/other_user}","gists_url":"https://api.github.com/users/gpstathis/gists{/gist_id}","starred_url":"https://api.github.com/users/gpstathis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gpstathis/subscriptions","organizations_url":"https://api.github.com/users/gpstathis/orgs","repos_url":"https://api.github.com/users/gpstathis/repos","events_url":"https://api.github.com/users/gpstathis/events{/privacy}","received_events_url":"https://api.github.com/users/gpstathis/received_events","type":"User","site_admin":false},"created_at":"2016-02-11T17:30:55Z","updated_at":"2016-02-11T17:30:55Z","author_association":"CONTRIBUTOR","body":"@s1monw got it now. Thanks for clarifying.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/184381386","html_url":"https://github.com/elastic/elasticsearch/issues/16594#issuecomment-184381386","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16594","id":184381386,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NDM4MTM4Ng==","user":{"login":"gpstathis","id":365914,"node_id":"MDQ6VXNlcjM2NTkxNA==","avatar_url":"https://avatars0.githubusercontent.com/u/365914?v=4","gravatar_id":"","url":"https://api.github.com/users/gpstathis","html_url":"https://github.com/gpstathis","followers_url":"https://api.github.com/users/gpstathis/followers","following_url":"https://api.github.com/users/gpstathis/following{/other_user}","gists_url":"https://api.github.com/users/gpstathis/gists{/gist_id}","starred_url":"https://api.github.com/users/gpstathis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gpstathis/subscriptions","organizations_url":"https://api.github.com/users/gpstathis/orgs","repos_url":"https://api.github.com/users/gpstathis/repos","events_url":"https://api.github.com/users/gpstathis/events{/privacy}","received_events_url":"https://api.github.com/users/gpstathis/received_events","type":"User","site_admin":false},"created_at":"2016-02-15T20:36:30Z","updated_at":"2016-02-15T20:37:32Z","author_association":"CONTRIBUTOR","body":"@s1monw see PR. Not sure if this is what you had in mind. The commit adds the ability to define a `index.similarity.default.type` and prevents users from redefining any built-in similarity types. The only thing I am unclear on though is the use of the `SimilarityService.DEFAULT_SIMILARITY` constant across the code and the effects this may have. `FieldMapper`, `TypeParsers` and `AllFieldMapper` reference that constant directly. I left `similarity.base` unchanged per our discussion.\n","performed_via_github_app":null}]