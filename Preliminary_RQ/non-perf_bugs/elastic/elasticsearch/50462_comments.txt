[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/568478070","html_url":"https://github.com/elastic/elasticsearch/issues/50462#issuecomment-568478070","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50462","id":568478070,"node_id":"MDEyOklzc3VlQ29tbWVudDU2ODQ3ODA3MA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-12-23T13:38:39Z","updated_at":"2019-12-23T13:38:39Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed (:Distributed/Discovery-Plugins)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/568759389","html_url":"https://github.com/elastic/elasticsearch/issues/50462#issuecomment-568759389","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50462","id":568759389,"node_id":"MDEyOklzc3VlQ29tbWVudDU2ODc1OTM4OQ==","user":{"login":"Bukhtawar","id":12809319,"node_id":"MDQ6VXNlcjEyODA5MzE5","avatar_url":"https://avatars0.githubusercontent.com/u/12809319?v=4","gravatar_id":"","url":"https://api.github.com/users/Bukhtawar","html_url":"https://github.com/Bukhtawar","followers_url":"https://api.github.com/users/Bukhtawar/followers","following_url":"https://api.github.com/users/Bukhtawar/following{/other_user}","gists_url":"https://api.github.com/users/Bukhtawar/gists{/gist_id}","starred_url":"https://api.github.com/users/Bukhtawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bukhtawar/subscriptions","organizations_url":"https://api.github.com/users/Bukhtawar/orgs","repos_url":"https://api.github.com/users/Bukhtawar/repos","events_url":"https://api.github.com/users/Bukhtawar/events{/privacy}","received_events_url":"https://api.github.com/users/Bukhtawar/received_events","type":"User","site_admin":false},"created_at":"2019-12-24T14:37:33Z","updated_at":"2019-12-24T14:52:20Z","author_association":"CONTRIBUTOR","body":"Do you mind if I can raise a PR for the same @original-brownbear . It's a small change I'm fine either ways","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/568778097","html_url":"https://github.com/elastic/elasticsearch/issues/50462#issuecomment-568778097","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50462","id":568778097,"node_id":"MDEyOklzc3VlQ29tbWVudDU2ODc3ODA5Nw==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2019-12-24T16:54:11Z","updated_at":"2019-12-24T16:56:24Z","author_association":"MEMBER","body":"@Bukhtawar I'm not sure this is entirely a small change. It seems we're not just using the EC2 SDK to make calls to the EC2 metadata service but also use `org.elasticsearch.discovery.ec2.Ec2NameResolver#resolve` which just works from `java.net.URL#openConnection()` to load single metadata values. Wouldn't we have to fix those as well to really get proper retrying here? It seems like we'd only be fixing part of the calls to retry if we just did something like move to using the default retry condition in the code you pasted?\r\n\r\n(I ran into this when I tried to test retries by faking `500`s in the EC2 mock we use, if we only fixed this one spot which I'm not sure is all that valueable it still wouldn't be entirely trivial to test the fix either would it or do you have an idea?)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/568851824","html_url":"https://github.com/elastic/elasticsearch/issues/50462#issuecomment-568851824","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50462","id":568851824,"node_id":"MDEyOklzc3VlQ29tbWVudDU2ODg1MTgyNA==","user":{"login":"Bukhtawar","id":12809319,"node_id":"MDQ6VXNlcjEyODA5MzE5","avatar_url":"https://avatars0.githubusercontent.com/u/12809319?v=4","gravatar_id":"","url":"https://api.github.com/users/Bukhtawar","html_url":"https://github.com/Bukhtawar","followers_url":"https://api.github.com/users/Bukhtawar/followers","following_url":"https://api.github.com/users/Bukhtawar/following{/other_user}","gists_url":"https://api.github.com/users/Bukhtawar/gists{/gist_id}","starred_url":"https://api.github.com/users/Bukhtawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bukhtawar/subscriptions","organizations_url":"https://api.github.com/users/Bukhtawar/orgs","repos_url":"https://api.github.com/users/Bukhtawar/repos","events_url":"https://api.github.com/users/Bukhtawar/events{/privacy}","received_events_url":"https://api.github.com/users/Bukhtawar/received_events","type":"User","site_admin":false},"created_at":"2019-12-25T06:53:17Z","updated_at":"2019-12-25T07:01:25Z","author_association":"CONTRIBUTOR","body":"@original-brownbear Please correct me if I misunderstood your point but aren't the two calls made to different endpoint and hence logically different entities.\r\n1. DescribeInstance - EC2 control plane(via SDK)\r\n2. Instance Metadata - http://169.254.169.254/latest/meta-data/ (via URL#openConnection())\r\n\r\nWhile for (1) we need retries for cases when a large cluster(100 node or more) loses a master and then PeerFinder on all nodes do a per second EC2 call causing account level limits to be breached.\r\n(2) might be different than this though(haven't encountered throttling so far for this) and I certainly think (1) is valueable and worth the change.\r\n\r\nTesting\r\nWe tested (1) by restarting masters on a 150 node cluster, which lead to more calls getting throttled without the fix. While DEFAULT_RETRY ensured back off kicks in. We could see from the timestamp of the exception stack trace. Having said this, we are working on a better test plan","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/569229202","html_url":"https://github.com/elastic/elasticsearch/issues/50462#issuecomment-569229202","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50462","id":569229202,"node_id":"MDEyOklzc3VlQ29tbWVudDU2OTIyOTIwMg==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2019-12-27T09:20:04Z","updated_at":"2019-12-27T09:20:04Z","author_association":"MEMBER","body":"Thanks @Bukhtawar, you are correct I think. (Thanks @DaveCTurner for chiming in here!). I think I found a way for a proper test and was will raise a PR for this one shortly. We have a bunch of HTTP mocking infrastructure from the snapshot repository tests that we can reuse here and I think I was able to craft a valid test from that :)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/569239547","html_url":"https://github.com/elastic/elasticsearch/issues/50462#issuecomment-569239547","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50462","id":569239547,"node_id":"MDEyOklzc3VlQ29tbWVudDU2OTIzOTU0Nw==","user":{"login":"Bukhtawar","id":12809319,"node_id":"MDQ6VXNlcjEyODA5MzE5","avatar_url":"https://avatars0.githubusercontent.com/u/12809319?v=4","gravatar_id":"","url":"https://api.github.com/users/Bukhtawar","html_url":"https://github.com/Bukhtawar","followers_url":"https://api.github.com/users/Bukhtawar/followers","following_url":"https://api.github.com/users/Bukhtawar/following{/other_user}","gists_url":"https://api.github.com/users/Bukhtawar/gists{/gist_id}","starred_url":"https://api.github.com/users/Bukhtawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bukhtawar/subscriptions","organizations_url":"https://api.github.com/users/Bukhtawar/orgs","repos_url":"https://api.github.com/users/Bukhtawar/repos","events_url":"https://api.github.com/users/Bukhtawar/events{/privacy}","received_events_url":"https://api.github.com/users/Bukhtawar/received_events","type":"User","site_admin":false},"created_at":"2019-12-27T10:18:48Z","updated_at":"2019-12-27T10:18:48Z","author_association":"CONTRIBUTOR","body":"Thanks @original-brownbear and @DaveCTurner. I had one more proposal wrt to the backoff strategy. It is to use the SDKDefaultBackoffStrategy which has equal/full jitters configured for throttle/non-throttle exceptions in the newer AWS SDK versions. Defaults for some configurations can be overridden as below.\r\n\r\n```\r\nRetryPolicy retryPolicy = new RetryPolicy(PredefinedRetryPolicies.DEFAULT_RETRY_CONDITION,\r\n            (originalRequest, exception, retriesAttempted) -> {\r\n                logger.warn(\"EC2 API request failed, retry again. Reason was:\", exception);\r\n                return new PredefinedBackoffStrategies.SDKDefaultBackoffStrategy(500,\r\n                    1000,\r\n                    200 * 1000).delayBeforeNextRetry(originalRequest, exception, retriesAttempted);\r\n\r\n            },\r\n            10,\r\n            false);\r\n        clientConfiguration.setRetryPolicy(retryPolicy);\r\n```","performed_via_github_app":null}]