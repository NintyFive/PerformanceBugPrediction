[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/523624536","html_url":"https://github.com/elastic/elasticsearch/issues/45815#issuecomment-523624536","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45815","id":523624536,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzYyNDUzNg==","user":{"login":"WingsLikeEagles","id":40436741,"node_id":"MDQ6VXNlcjQwNDM2NzQx","avatar_url":"https://avatars3.githubusercontent.com/u/40436741?v=4","gravatar_id":"","url":"https://api.github.com/users/WingsLikeEagles","html_url":"https://github.com/WingsLikeEagles","followers_url":"https://api.github.com/users/WingsLikeEagles/followers","following_url":"https://api.github.com/users/WingsLikeEagles/following{/other_user}","gists_url":"https://api.github.com/users/WingsLikeEagles/gists{/gist_id}","starred_url":"https://api.github.com/users/WingsLikeEagles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WingsLikeEagles/subscriptions","organizations_url":"https://api.github.com/users/WingsLikeEagles/orgs","repos_url":"https://api.github.com/users/WingsLikeEagles/repos","events_url":"https://api.github.com/users/WingsLikeEagles/events{/privacy}","received_events_url":"https://api.github.com/users/WingsLikeEagles/received_events","type":"User","site_admin":false},"created_at":"2019-08-21T19:57:31Z","updated_at":"2019-08-21T21:57:54Z","author_association":"NONE","body":"This setting has created tremendous headaches and MANY issues (in ElasticSearch and many other projects, SonarQube, VMWare Photon, and any other projects using ElasticSearch in their Docker containers).  All of which could have been fixed by allowing max_map_count to be at 65536 and properly programming to account for memory usage or reduce memory usage. (sorry @jasontedor I know you have been trying to address the memory issue for a while now).\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/523624713","html_url":"https://github.com/elastic/elasticsearch/issues/45815#issuecomment-523624713","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45815","id":523624713,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzYyNDcxMw==","user":{"login":"WingsLikeEagles","id":40436741,"node_id":"MDQ6VXNlcjQwNDM2NzQx","avatar_url":"https://avatars3.githubusercontent.com/u/40436741?v=4","gravatar_id":"","url":"https://api.github.com/users/WingsLikeEagles","html_url":"https://github.com/WingsLikeEagles","followers_url":"https://api.github.com/users/WingsLikeEagles/followers","following_url":"https://api.github.com/users/WingsLikeEagles/following{/other_user}","gists_url":"https://api.github.com/users/WingsLikeEagles/gists{/gist_id}","starred_url":"https://api.github.com/users/WingsLikeEagles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WingsLikeEagles/subscriptions","organizations_url":"https://api.github.com/users/WingsLikeEagles/orgs","repos_url":"https://api.github.com/users/WingsLikeEagles/repos","events_url":"https://api.github.com/users/WingsLikeEagles/events{/privacy}","received_events_url":"https://api.github.com/users/WingsLikeEagles/received_events","type":"User","site_admin":false},"created_at":"2019-08-21T19:57:59Z","updated_at":"2019-08-21T19:57:59Z","author_association":"NONE","body":"https://access.redhat.com/solutions/99913","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/523663175","html_url":"https://github.com/elastic/elasticsearch/issues/45815#issuecomment-523663175","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45815","id":523663175,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzY2MzE3NQ==","user":{"login":"WingsLikeEagles","id":40436741,"node_id":"MDQ6VXNlcjQwNDM2NzQx","avatar_url":"https://avatars3.githubusercontent.com/u/40436741?v=4","gravatar_id":"","url":"https://api.github.com/users/WingsLikeEagles","html_url":"https://github.com/WingsLikeEagles","followers_url":"https://api.github.com/users/WingsLikeEagles/followers","following_url":"https://api.github.com/users/WingsLikeEagles/following{/other_user}","gists_url":"https://api.github.com/users/WingsLikeEagles/gists{/gist_id}","starred_url":"https://api.github.com/users/WingsLikeEagles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WingsLikeEagles/subscriptions","organizations_url":"https://api.github.com/users/WingsLikeEagles/orgs","repos_url":"https://api.github.com/users/WingsLikeEagles/repos","events_url":"https://api.github.com/users/WingsLikeEagles/events{/privacy}","received_events_url":"https://api.github.com/users/WingsLikeEagles/received_events","type":"User","site_admin":false},"created_at":"2019-08-21T21:49:46Z","updated_at":"2019-08-21T21:49:46Z","author_association":"NONE","body":"List of issues that would probably have been resolved by max_map_count = 65536 instead of 262144 and a new process starting if more maps are needed.\r\n\r\nhttps://github.com/elastic/elasticsearch-docker/issues/92\r\nhttps://discuss.elastic.co/t/vm-max-map-count-in-dockerfile/94405\r\nhttps://discuss.elastic.co/t/elasticsearch-5-0-0-aplha4-wont-start-without-setting-vm-max-map-count/57471\r\nhttps://github.com/elastic/elasticsearch/issues/21369\r\nhttps://github.com/elastic/elasticsearch/issues/4978\r\nhttps://discuss.opendistrocommunity.dev/t/max-virtual-memory-areas-max-map-count-65530-is-too-low/275\r\nhttps://forum.proxmox.com/threads/setting-key-vm-max_map_count-read-only-file-system.28720/\r\nhttps://github.com/elastic/elasticsearch/issues/19458\r\nhttps://github.com/Microsoft/WSL/issues/3126\r\nhttps://github.com/elastic/elasticsearch/pull/21507\r\nhttps://github.com/elastic/elasticsearch/issues/21436\r\nhttps://github.com/elastic/cookbook-elasticsearch/issues/585\r\nhttps://github.com/spujadas/elk-docker/issues/99\r\nhttps://github.com/elastic/elasticsearch-docker/issues/182\r\nhttps://github.com/docker-library/elasticsearch/issues/98\r\n\r\nAnd so many moreâ€¦\r\n\r\n\r\n\r\n\r\n\r\nMay have started since the memory usage was increased to 2G\r\nhttps://github.com/elastic/elasticsearch/pull/18311\r\nhttps://github.com/elastic/elasticsearch-docker/issues/8","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/523671062","html_url":"https://github.com/elastic/elasticsearch/issues/45815#issuecomment-523671062","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45815","id":523671062,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzY3MTA2Mg==","user":{"login":"WingsLikeEagles","id":40436741,"node_id":"MDQ6VXNlcjQwNDM2NzQx","avatar_url":"https://avatars3.githubusercontent.com/u/40436741?v=4","gravatar_id":"","url":"https://api.github.com/users/WingsLikeEagles","html_url":"https://github.com/WingsLikeEagles","followers_url":"https://api.github.com/users/WingsLikeEagles/followers","following_url":"https://api.github.com/users/WingsLikeEagles/following{/other_user}","gists_url":"https://api.github.com/users/WingsLikeEagles/gists{/gist_id}","starred_url":"https://api.github.com/users/WingsLikeEagles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WingsLikeEagles/subscriptions","organizations_url":"https://api.github.com/users/WingsLikeEagles/orgs","repos_url":"https://api.github.com/users/WingsLikeEagles/repos","events_url":"https://api.github.com/users/WingsLikeEagles/events{/privacy}","received_events_url":"https://api.github.com/users/WingsLikeEagles/received_events","type":"User","site_admin":false},"created_at":"2019-08-21T22:18:18Z","updated_at":"2019-08-21T22:18:18Z","author_association":"NONE","body":"I think memory usage needs to be addressed and has been patched and \"worked-around\" too long.  Out Of Memory needs to trigger some Garbage collection, and/or possibly a new process (which may be yet another work-around if the issue is Memory Leaks).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/523677927","html_url":"https://github.com/elastic/elasticsearch/issues/45815#issuecomment-523677927","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45815","id":523677927,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzY3NzkyNw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2019-08-21T22:44:24Z","updated_at":"2019-08-21T22:44:24Z","author_association":"MEMBER","body":"I think there is some misunderstanding here in that `vm.max_map_count` has nothing to do with out of memory and garbage collection, but rather the number of memory maps that are available. Memory maps are used when `mmap`ing files.\r\n\r\nAlong these lines then and I'm not sure if you're aware but I made a change a few months ago to not enforce this check if you're willing to forego the use of `mmap` to read index files.\r\n\r\nThe PR that added that is #32421, and this is documented in the [relevant bootstrap check](https://www.elastic.co/guide/en/elasticsearch/reference/7.3/_maximum_map_count_check.html).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/523691166","html_url":"https://github.com/elastic/elasticsearch/issues/45815#issuecomment-523691166","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45815","id":523691166,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzY5MTE2Ng==","user":{"login":"WingsLikeEagles","id":40436741,"node_id":"MDQ6VXNlcjQwNDM2NzQx","avatar_url":"https://avatars3.githubusercontent.com/u/40436741?v=4","gravatar_id":"","url":"https://api.github.com/users/WingsLikeEagles","html_url":"https://github.com/WingsLikeEagles","followers_url":"https://api.github.com/users/WingsLikeEagles/followers","following_url":"https://api.github.com/users/WingsLikeEagles/following{/other_user}","gists_url":"https://api.github.com/users/WingsLikeEagles/gists{/gist_id}","starred_url":"https://api.github.com/users/WingsLikeEagles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WingsLikeEagles/subscriptions","organizations_url":"https://api.github.com/users/WingsLikeEagles/orgs","repos_url":"https://api.github.com/users/WingsLikeEagles/repos","events_url":"https://api.github.com/users/WingsLikeEagles/events{/privacy}","received_events_url":"https://api.github.com/users/WingsLikeEagles/received_events","type":"User","site_admin":false},"created_at":"2019-08-21T23:47:38Z","updated_at":"2019-08-21T23:47:38Z","author_association":"NONE","body":"My understanding could be way off.  I assumed that something was using up the memory maps and not releasing them thus the comment about garbage collection and also about OOM errors.\r\nI will look at not using mmap and how to disable it in SonarQube inside Docker/Rancher.  Thanks for pointing me to that PR. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/523692786","html_url":"https://github.com/elastic/elasticsearch/issues/45815#issuecomment-523692786","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45815","id":523692786,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzY5Mjc4Ng==","user":{"login":"WingsLikeEagles","id":40436741,"node_id":"MDQ6VXNlcjQwNDM2NzQx","avatar_url":"https://avatars3.githubusercontent.com/u/40436741?v=4","gravatar_id":"","url":"https://api.github.com/users/WingsLikeEagles","html_url":"https://github.com/WingsLikeEagles","followers_url":"https://api.github.com/users/WingsLikeEagles/followers","following_url":"https://api.github.com/users/WingsLikeEagles/following{/other_user}","gists_url":"https://api.github.com/users/WingsLikeEagles/gists{/gist_id}","starred_url":"https://api.github.com/users/WingsLikeEagles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WingsLikeEagles/subscriptions","organizations_url":"https://api.github.com/users/WingsLikeEagles/orgs","repos_url":"https://api.github.com/users/WingsLikeEagles/repos","events_url":"https://api.github.com/users/WingsLikeEagles/events{/privacy}","received_events_url":"https://api.github.com/users/WingsLikeEagles/received_events","type":"User","site_admin":false},"created_at":"2019-08-21T23:55:30Z","updated_at":"2019-08-21T23:57:17Z","author_association":"NONE","body":"I still feel that starting a new process is a better solution if more memory maps are needed because the current process is exceeding the system configured limit.  I think that is a better solution than changing system-wide settings to increase memory maps per process.\r\n\r\nIt seems like a more scalable solution.  What happens when 262144 isn't enough?  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/523774679","html_url":"https://github.com/elastic/elasticsearch/issues/45815#issuecomment-523774679","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45815","id":523774679,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzc3NDY3OQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-08-22T06:53:36Z","updated_at":"2019-08-22T06:53:36Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/524022533","html_url":"https://github.com/elastic/elasticsearch/issues/45815#issuecomment-524022533","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45815","id":524022533,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNDAyMjUzMw==","user":{"login":"WingsLikeEagles","id":40436741,"node_id":"MDQ6VXNlcjQwNDM2NzQx","avatar_url":"https://avatars3.githubusercontent.com/u/40436741?v=4","gravatar_id":"","url":"https://api.github.com/users/WingsLikeEagles","html_url":"https://github.com/WingsLikeEagles","followers_url":"https://api.github.com/users/WingsLikeEagles/followers","following_url":"https://api.github.com/users/WingsLikeEagles/following{/other_user}","gists_url":"https://api.github.com/users/WingsLikeEagles/gists{/gist_id}","starred_url":"https://api.github.com/users/WingsLikeEagles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WingsLikeEagles/subscriptions","organizations_url":"https://api.github.com/users/WingsLikeEagles/orgs","repos_url":"https://api.github.com/users/WingsLikeEagles/repos","events_url":"https://api.github.com/users/WingsLikeEagles/events{/privacy}","received_events_url":"https://api.github.com/users/WingsLikeEagles/received_events","type":"User","site_admin":false},"created_at":"2019-08-22T18:26:53Z","updated_at":"2019-08-22T18:27:38Z","author_association":"NONE","body":"https://jira.sonarsource.com/browse/SONAR-12264\r\nThis option exists in the SonarQube Docker version.  For Rancher see my comments in https://github.com/SonarSource/docker-sonarqube/issues/310","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/524025283","html_url":"https://github.com/elastic/elasticsearch/issues/45815#issuecomment-524025283","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45815","id":524025283,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNDAyNTI4Mw==","user":{"login":"WingsLikeEagles","id":40436741,"node_id":"MDQ6VXNlcjQwNDM2NzQx","avatar_url":"https://avatars3.githubusercontent.com/u/40436741?v=4","gravatar_id":"","url":"https://api.github.com/users/WingsLikeEagles","html_url":"https://github.com/WingsLikeEagles","followers_url":"https://api.github.com/users/WingsLikeEagles/followers","following_url":"https://api.github.com/users/WingsLikeEagles/following{/other_user}","gists_url":"https://api.github.com/users/WingsLikeEagles/gists{/gist_id}","starred_url":"https://api.github.com/users/WingsLikeEagles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WingsLikeEagles/subscriptions","organizations_url":"https://api.github.com/users/WingsLikeEagles/orgs","repos_url":"https://api.github.com/users/WingsLikeEagles/repos","events_url":"https://api.github.com/users/WingsLikeEagles/events{/privacy}","received_events_url":"https://api.github.com/users/WingsLikeEagles/received_events","type":"User","site_admin":false},"created_at":"2019-08-22T18:34:23Z","updated_at":"2019-08-22T18:34:23Z","author_association":"NONE","body":"This can be closed, as @jasontedor solution of disabling mmapfs and using only NIOFS stops the bootstrap check for max_map_count.  Thanks @jasontedor \r\nI still think starting another process is a better solution and lends to better scaling.  But, it may require significant work.  If you want to leave it open until other people on the team weigh in, I'm ok with that.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/524029831","html_url":"https://github.com/elastic/elasticsearch/issues/45815#issuecomment-524029831","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45815","id":524029831,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNDAyOTgzMQ==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2019-08-22T18:48:01Z","updated_at":"2019-08-22T18:48:01Z","author_association":"MEMBER","body":"> I still think starting another process is a better solution and lends to better scaling.\r\n\r\nWe tried to set the limit to ensure that all reasonable use cases would never run out of memory maps. Since we set the limit at 2^18, I have never seen an instance of a node running out of memory maps (but we did see them at 2^16). I think that from a scalability perspective, with 2^18 maps, a node will run into other scalability issues long before it runs out of memory maps. It's possible that we could consider reducing this limit now that we default to a smaller number of shards, and have employed other strategies to keep the number of shards on a single node down, but it would require quite some investment to be sure of this. I understand that from a logistical perspective it can be difficult to increase the number of memory maps when you don't own the underlying platform, and that's why we've implemented other ways to avoid this check, for users that can accept the trade offs. Given that, I'm going to close this issue. Thanks for the discussion here.","performed_via_github_app":null}]