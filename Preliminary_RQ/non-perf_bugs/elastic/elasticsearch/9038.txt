{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/9038","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9038/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9038/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9038/events","html_url":"https://github.com/elastic/elasticsearch/issues/9038","id":52708631,"node_id":"MDU6SXNzdWU1MjcwODYzMQ==","number":9038,"title":"elasticsearch does not provide configurable socket backlog","user":{"login":"kaniini","id":1522444,"node_id":"MDQ6VXNlcjE1MjI0NDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1522444?v=4","gravatar_id":"","url":"https://api.github.com/users/kaniini","html_url":"https://github.com/kaniini","followers_url":"https://api.github.com/users/kaniini/followers","following_url":"https://api.github.com/users/kaniini/following{/other_user}","gists_url":"https://api.github.com/users/kaniini/gists{/gist_id}","starred_url":"https://api.github.com/users/kaniini/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaniini/subscriptions","organizations_url":"https://api.github.com/users/kaniini/orgs","repos_url":"https://api.github.com/users/kaniini/repos","events_url":"https://api.github.com/users/kaniini/events{/privacy}","received_events_url":"https://api.github.com/users/kaniini/received_events","type":"User","site_admin":false},"labels":[{"id":146854632,"node_id":"MDU6TGFiZWwxNDY4NTQ2MzI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Network","name":":Distributed/Network","color":"0e8a16","default":false,"description":"Http and internode communication implementations"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-12-23T02:22:34Z","updated_at":"2016-09-27T15:33:12Z","closed_at":"2016-09-27T15:33:01Z","author_association":"NONE","active_lock_reason":null,"body":"hello,\n\nwe run a sizeable elasticsearch cluster on freebsd 10.  unfortunately, elasticsearch does not provide a configurable socket backlog for it's listeners, so this results in failures that do not happen on a similarly configured linux machine (but the linux machine runs systemd, and systemd makes me sad, so using RHEL 7 is not an option to us at this time).\n\nthe reason why is because many people incorrectly assume that linux's handling of `somaxconn` (see `listen(2)` manual page) is the correct behaviour, though it is not really.\n\nfor the time being we have deployed a freebsd kernel patch allowing us to override the hardcoded socket backlog length with one more appropriate for our environment.  other elasticsearch users on freebsd may find this patch here: http://turtle.dereferenced.org/~kaniini/fix-hardcoded-backlog-on-freebsd.patch.txt\n\nwe would like to not have to carry this patch on our systems since upstream has no interest in it (and rightly so), so that could be corrected by adding configurable socket backlog.  we would be happy to assist with this, if you could tell us which parts of the code need to be modified.\n","closed_by":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"performed_via_github_app":null}