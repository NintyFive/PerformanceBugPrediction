[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/93711189","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-93711189","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":93711189,"node_id":"MDEyOklzc3VlQ29tbWVudDkzNzExMTg5","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-04-16T11:20:16Z","updated_at":"2015-04-16T11:20:16Z","author_association":"CONTRIBUTOR","body":"I think we should just build a TermQuery manually with the help of NumericUtils?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/93713322","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-93713322","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":93713322,"node_id":"MDEyOklzc3VlQ29tbWVudDkzNzEzMzIy","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2015-04-16T11:34:04Z","updated_at":"2015-04-16T11:34:04Z","author_association":"CONTRIBUTOR","body":"How does that look from the user's perspective in the DSL?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/93714106","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-93714106","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":93714106,"node_id":"MDEyOklzc3VlQ29tbWVudDkzNzE0MTA2","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-04-16T11:39:16Z","updated_at":"2015-04-16T11:39:16Z","author_association":"CONTRIBUTOR","body":"Maybe we don't need to change the DSL at all and can just fix our number mappers to generate a term query instead of a range on a single term. This way term queries against numbers would always be aware of the IDF?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/93714513","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-93714513","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":93714513,"node_id":"MDEyOklzc3VlQ29tbWVudDkzNzE0NTEz","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2015-04-16T11:41:43Z","updated_at":"2015-04-16T11:41:43Z","author_association":"CONTRIBUTOR","body":"Nice. \nIs there a behind-the-scenes overhead to representing IDs as integers in the index? \nI'm thinking all of the trie-range encoding stuff that helps support efficient range queries. If we know something is an ID and therefore not subject to range queries maybe there's gains to be had there too?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/93716214","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-93716214","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":93716214,"node_id":"MDEyOklzc3VlQ29tbWVudDkzNzE2MjE0","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-04-16T11:53:23Z","updated_at":"2015-04-16T11:53:23Z","author_association":"CONTRIBUTOR","body":"If you don't use range queries then you can just disable trie encoding by setting precision_step=MAX_VALUE. Other than that numeric terms use a fixed-length binary encoding which is more space-efficient than string for large numbers and less space-efficient for small integers such as \"1\". But net/net I don't think this would be a big difference.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/93732276","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-93732276","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":93732276,"node_id":"MDEyOklzc3VlQ29tbWVudDkzNzMyMjc2","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2015-04-16T13:20:52Z","updated_at":"2015-04-16T13:20:52Z","author_association":"CONTRIBUTOR","body":"OK. \n\n> Maybe we don't need to change the DSL at all and can just fix our number mappers to generate a term query instead of a range on a single term.\n\nWould there be BWC concerns ie unexpected changes in relevance ranking for existing queries?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/93733855","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-93733855","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":93733855,"node_id":"MDEyOklzc3VlQ29tbWVudDkzNzMzODU1","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-04-16T13:28:02Z","updated_at":"2015-04-16T13:28:02Z","author_association":"CONTRIBUTOR","body":"Field mappers know the version of the index for which they have been created so we could handle bw compat if we want. But I don't think we should worry about it?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/93747613","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-93747613","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":93747613,"node_id":"MDEyOklzc3VlQ29tbWVudDkzNzQ3NjEz","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2015-04-16T14:25:23Z","updated_at":"2015-04-16T14:25:23Z","author_association":"CONTRIBUTOR","body":"OK running tests on a PR now..\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94020496","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-94020496","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":94020496,"node_id":"MDEyOklzc3VlQ29tbWVudDk0MDIwNDk2","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2015-04-17T16:22:50Z","updated_at":"2015-04-17T16:22:50Z","author_association":"CONTRIBUTOR","body":"I have broken the problem into 2 pieces now.\n1) https://github.com/elastic/elasticsearch/issues/10646 Moving 2.x, 1.x and 1.5 away from NumericRangeQuery and onto ConstantScoreQuery+TermQuery\n2) This issue which is about how and when we can request relevance ranking on numerics removing the ConstantScoreQuery wrapper on the TermQuery added by 1).\n\nThe key remaining question on this issue is if users expect to have relevance ranking of numerics on or off by default?\n\n#### Arguments for no ranking by default:\n\n1) Most users don't want, need or expect ranking on numeric fields and adding it may break the ranking on some queries (one customer is known to maintain a test suite that fails if the scores for any existing queries changes between system versions)\n2) Ranges don't rank the individual numeric values, so logically why should requests for an individual numeric?\n\n#### Arguments for ranking numerics by default:\n\n1) There is an established means of turning off ranking in the DSL (ConstantScoreQuery wrapper) \n2) If we don't rank numerics by default we'd need to change the DSL or mapping to add an option allowing users to explicitly turn on ranking\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94050875","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-94050875","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":94050875,"node_id":"MDEyOklzc3VlQ29tbWVudDk0MDUwODc1","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2015-04-17T18:48:23Z","updated_at":"2015-04-17T18:48:23Z","author_association":"MEMBER","body":"I would say the argument is simpler: queries rank, filters do not. Since this is a numeric query, it should rank.\n\n> one customer is known to maintain a test suite that fails if the scores for any existing queries changes between system versions\n\nThey are just asking for trouble. Lucene makes no guarantees scoring will not change.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94086280","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-94086280","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":94086280,"node_id":"MDEyOklzc3VlQ29tbWVudDk0MDg2Mjgw","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2015-04-17T22:10:23Z","updated_at":"2015-04-17T22:10:23Z","author_association":"CONTRIBUTOR","body":"> queries rank, filters do not\n\nThat's the problem - they don't always in elasticsearch. While it is cut-and-dry in Lucene land, rightly or wrongly at some stage we decided in elasticsearch that changing the query DSL ranking behaviour based on the field type being queried was usually helpful. \n\nWhile changing to the purity of the Lucene model may upset some user expectations it seems that we never documented the current behaviour with numerics - in fact [TermQuery docs](http://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-term-query.html) claim the functionality is exactly that of Lucene's TermQuery.\n\nSo we either document the existing \"helpful\" behaviour and provide new DSL options to override its defaults for odd cases or switch to the pure Query/Filter model you propose and typically require users to be smarter about ranking behaviours eg use of ConstantScoreQuery.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94834970","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-94834970","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":94834970,"node_id":"MDEyOklzc3VlQ29tbWVudDk0ODM0OTcw","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2015-04-21T15:15:24Z","updated_at":"2015-04-21T15:15:24Z","author_association":"CONTRIBUTOR","body":"The consensus from a quick poll is in favour of retaining the existing default of queries not ranking on numeric fields. This means this issue is now about adding new options in the Query DSL for allowing user overrides which explicitly enable Lucene scoring for numerics.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94838737","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-94838737","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":94838737,"node_id":"MDEyOklzc3VlQ29tbWVudDk0ODM4NzM3","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-04-21T15:27:24Z","updated_at":"2015-04-21T15:27:24Z","author_association":"CONTRIBUTOR","body":"Why do we need new options in the query DSL, users who don't want scoring can just wrap in `constant_score`?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94843711","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-94843711","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":94843711,"node_id":"MDEyOklzc3VlQ29tbWVudDk0ODQzNzEx","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-04-21T15:42:03Z","updated_at":"2015-04-21T15:42:03Z","author_association":"CONTRIBUTOR","body":"I think so too. i think it should be IDF-based, but norms and frequencies should remain omitted. This way the score is the same for every document that matches the term, it just reflects the popularity of the term.\n\nThis is completely consistent with querying other non-full text fields, like a `not_analyzed` string.\n\nif someone wants to omit the IDF, we have `constant_score` for that, just like with anything else.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94846300","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-94846300","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":94846300,"node_id":"MDEyOklzc3VlQ29tbWVudDk0ODQ2MzAw","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-04-21T15:46:44Z","updated_at":"2015-04-21T15:46:44Z","author_association":"CONTRIBUTOR","body":"To elaborate a bit more on my previous comment, I don't have a strong opinion about whether these queries should score or not by default (I like the scoring one a bit more but could go the other way if there is consensus) but I'm against adding a new option to the query DSL for that. To me there are only two things we can do: either make numeric term queries score and require users to wrap in `constant_score` if they don't want scoring or make numeric term queries never score and require to index as strings to have IDF contributions to the score.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94851510","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-94851510","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":94851510,"node_id":"MDEyOklzc3VlQ29tbWVudDk0ODUxNTEw","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2015-04-21T15:56:05Z","updated_at":"2015-04-21T15:56:05Z","author_association":"CONTRIBUTOR","body":"I'm in favour of continuing with the constant-scoring default for numerics (that's arguably what most users expect).\n\nFor the power user (OK, me) both IDF and norms are things I would like to be ranking factors for the reasons I outlined in the opening description. \nThe encode-numbers-as-strings solution feels hacky but it avoids complicating the DSL and is probably only required for edge cases like the one I outlined. \nI'm happy to close this issue if we feel that's the favoured approach - at least we had the debate and uncovered some stuff along the way.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94881364","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-94881364","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":94881364,"node_id":"MDEyOklzc3VlQ29tbWVudDk0ODgxMzY0","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2015-04-21T17:35:10Z","updated_at":"2015-04-21T17:35:10Z","author_association":"CONTRIBUTOR","body":"@brwe raises another interesting option - tackling the issue via mapping definitions.\nA single flag held against a numeric field could be used to determine the scoring/non-scoring query policy used by default.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94928736","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-94928736","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":94928736,"node_id":"MDEyOklzc3VlQ29tbWVudDk0OTI4NzM2","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-04-21T20:22:58Z","updated_at":"2015-04-21T20:22:58Z","author_association":"CONTRIBUTOR","body":"> I'm in favour of continuing with the constant-scoring default for numerics (that's arguably what most users expect).\n\nI don't know if that many users have scoring expectations when it comes to numerics. I don't have data to back me but I was assuming numerics were mostly useful for filtering (and sorting) in which case scoring does not matter?\n\nI don't like the mapping option better than the query DSL option. In my opinion there are already too many options and settings in general, and even if most of them look harmless, they are hindering our ability to move forward. So I would really prefer not to add new options, especially given that we already have a way to turn scoring off using `constant_score`.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94931958","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-94931958","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":94931958,"node_id":"MDEyOklzc3VlQ29tbWVudDk0OTMxOTU4","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2015-04-21T20:36:16Z","updated_at":"2015-04-21T20:37:29Z","author_association":"MEMBER","body":"I agree we already have this ability and shouldn't add an alternative way to turn off scoring. It is _very_ difficult to remove such options later; we should aggressively guard from adding new options and find ways to do things without further complicating the api (query, mappings, etc).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94953986","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-94953986","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":94953986,"node_id":"MDEyOklzc3VlQ29tbWVudDk0OTUzOTg2","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2015-04-21T21:52:35Z","updated_at":"2015-04-21T21:52:35Z","author_association":"CONTRIBUTOR","body":"> and shouldn't add an alternative way to turn off scoring.\n\nJust in case there's any confusion - we were talking about adding a way to turn _on_ scoring.\n\nWe have 3 options:\n1) Do nothing - meaning we stick with a model where you can't relevance rank on numeric fields.\n2) Stick with current model of no-ranking on numeric fields but add an option (query DSL or mapping) to enable scoring.\n3) Change the default query behaviour so numeric queries are ranked (there are existing ways to disable scoring in the DSL)\n\nI understand you're not happy with 2) and I'm nervous about 3 - at some stage we obviously felt that deliberately disabling ranking on numerics was a generally useful thing for most users and we've had no complaints so a change may be upsetting. \nGiven the need for ranking on numerics is rare, 1) might be the safest option because a client workaround is numerics can always be provided as strings.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/95881446","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-95881446","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":95881446,"node_id":"MDEyOklzc3VlQ29tbWVudDk1ODgxNDQ2","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2015-04-24T10:10:07Z","updated_at":"2015-04-24T10:10:07Z","author_association":"CONTRIBUTOR","body":"Spoke with @clintongormley and we agreed to go with option 3) in my previous comment - queries on numeric fields will be changed to use Lucene ranking by default.\nThis change will involve: \n- removing the ConstantScoreQuery wrapper around the TermQuery objects produced in NumberFieldMapper. \n- Adding a note to migration docs to document this change in default ranking behaviour.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/95881670","html_url":"https://github.com/elastic/elasticsearch/issues/10628#issuecomment-95881670","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10628","id":95881670,"node_id":"MDEyOklzc3VlQ29tbWVudDk1ODgxNjcw","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-04-24T10:11:41Z","updated_at":"2015-04-24T10:11:41Z","author_association":"CONTRIBUTOR","body":"At the moment there is no way of using scoring with numerics, but I'd be against adding new parameters to enable this.  I agree with @jpountz that it should be done within the existing framework.\n\nCurrently, the constant-scoring of numeric queries is not documented (and indeed surprised me early on when I was experimenting with Elasticsearch).  With the move to Lucene 5, queries = filters + scoring.  I'd be happy for making that true for numeric term queries as well.\n\nWe already tell people that queries on structured data which shouldn't affect scoring should be specified as filters, so I think that the majority of people will see absolutely no change in behaviour. For the minority who do see a change, the fix is simple: use constant_score or the `filter` clause in the `bool` query.\n","performed_via_github_app":null}]