{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/32680","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32680/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32680/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32680/events","html_url":"https://github.com/elastic/elasticsearch/issues/32680","id":348305982,"node_id":"MDU6SXNzdWUzNDgzMDU5ODI=","number":32680,"title":"GetAlias JAVA API Result hard to process.","user":{"login":"skombijohn","id":4631128,"node_id":"MDQ6VXNlcjQ2MzExMjg=","avatar_url":"https://avatars3.githubusercontent.com/u/4631128?v=4","gravatar_id":"","url":"https://api.github.com/users/skombijohn","html_url":"https://github.com/skombijohn","followers_url":"https://api.github.com/users/skombijohn/followers","following_url":"https://api.github.com/users/skombijohn/following{/other_user}","gists_url":"https://api.github.com/users/skombijohn/gists{/gist_id}","starred_url":"https://api.github.com/users/skombijohn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/skombijohn/subscriptions","organizations_url":"https://api.github.com/users/skombijohn/orgs","repos_url":"https://api.github.com/users/skombijohn/repos","events_url":"https://api.github.com/users/skombijohn/events{/privacy}","received_events_url":"https://api.github.com/users/skombijohn/received_events","type":"User","site_admin":false},"labels":[{"id":493198109,"node_id":"MDU6TGFiZWw0OTMxOTgxMDk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Java%20High%20Level%20REST%20Client","name":":Core/Features/Java High Level REST Client","color":"0e8a16","default":false,"description":"Expressive Java Client for Elasticsearch"},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-08-07T12:47:58Z","updated_at":"2020-02-07T21:09:57Z","closed_at":"2020-02-07T21:09:57Z","author_association":"NONE","active_lock_reason":null,"body":"using Elasticsearch Version 6.3.2\r\n\r\n\r\nThe Java API offers an API to \"get Aliases\". \r\nGiven that an index \"testIndex_0\" is targeted by an alias \"testIndex\", I want to find out which actual index the alias is pointing to. This is important for deletion for example..\r\n\r\nIn general, the result of the query is a little bit confusing. It returns a HashMap'esque structure (the slightly weird ObjectObjectMap..\" containing **index-names** as keys and a List of AliasMetaData as value.\r\n\r\nWouldn't it be more convenient the other way round, considering the use case here?\r\n\r\nNow, in Elasticsearch 2 a query for a given alias identifier returned the ObjectObjectMap with only the index / indices in question in the keySet. This was easy to process nevertheless.\r\n\r\nNow, in Elasticsearch 6 (can't really tell how it was with 5) the result is really inconvenient. \r\nThe Map now contains EVERY possible key (= all index names!) and 99% empty lists as values, besides the one that contains the alias in question...\r\n\r\nThis is super difficult to parse..\r\n\r\nPlease look at the below code:\r\n\r\n```\r\npublic String aliasTarget(String alias) {\r\n        final GetAliasesResponse response = client.admin().indices().prepareGetAliases().addAliases(alias).execute().actionGet();\r\n        String indexInstanceName = null;\r\n        ImmutableOpenMap<String, List<AliasMetaData>> aliasMap = response.getAliases();\r\n        for (ObjectObjectCursor<String, List<AliasMetaData>> cursor : aliasMap) {\r\n            List<AliasMetaData> meta = aliasMap.get(cursor.key);\r\n            if (meta != null && !meta.isEmpty()) {\r\n                if (meta.get(0).alias().equals(alias)) {\r\n                    indexInstanceName = cursor.key;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return indexInstanceName;\r\n    }\r\n```\r\n\r\nThis is what I have to do, to find out the actual indexName an alias is pointing to. Please note, that the iteration over the list of meta data is left out here for \"simplicity\".\r\n\r\nCheers\r\n\r\nChris\r\n","closed_by":{"login":"probakowski","id":3896475,"node_id":"MDQ6VXNlcjM4OTY0NzU=","avatar_url":"https://avatars1.githubusercontent.com/u/3896475?v=4","gravatar_id":"","url":"https://api.github.com/users/probakowski","html_url":"https://github.com/probakowski","followers_url":"https://api.github.com/users/probakowski/followers","following_url":"https://api.github.com/users/probakowski/following{/other_user}","gists_url":"https://api.github.com/users/probakowski/gists{/gist_id}","starred_url":"https://api.github.com/users/probakowski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/probakowski/subscriptions","organizations_url":"https://api.github.com/users/probakowski/orgs","repos_url":"https://api.github.com/users/probakowski/repos","events_url":"https://api.github.com/users/probakowski/events{/privacy}","received_events_url":"https://api.github.com/users/probakowski/received_events","type":"User","site_admin":false},"performed_via_github_app":null}