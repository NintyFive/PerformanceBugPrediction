{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/38400","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38400/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38400/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38400/events","html_url":"https://github.com/elastic/elasticsearch/issues/38400","id":406695795,"node_id":"MDU6SXNzdWU0MDY2OTU3OTU=","number":38400,"title":"GetWatchResponseTests failing when running jdk11","user":{"login":"pgomulka","id":11137008,"node_id":"MDQ6VXNlcjExMTM3MDA4","avatar_url":"https://avatars0.githubusercontent.com/u/11137008?v=4","gravatar_id":"","url":"https://api.github.com/users/pgomulka","html_url":"https://github.com/pgomulka","followers_url":"https://api.github.com/users/pgomulka/followers","following_url":"https://api.github.com/users/pgomulka/following{/other_user}","gists_url":"https://api.github.com/users/pgomulka/gists{/gist_id}","starred_url":"https://api.github.com/users/pgomulka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgomulka/subscriptions","organizations_url":"https://api.github.com/users/pgomulka/orgs","repos_url":"https://api.github.com/users/pgomulka/repos","events_url":"https://api.github.com/users/pgomulka/events{/privacy}","received_events_url":"https://api.github.com/users/pgomulka/received_events","type":"User","site_admin":false},"labels":[{"id":912845062,"node_id":"MDU6TGFiZWw5MTI4NDUwNjI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Watcher","name":":Core/Features/Watcher","color":"0e8a16","default":false,"description":""},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":{"login":"pgomulka","id":11137008,"node_id":"MDQ6VXNlcjExMTM3MDA4","avatar_url":"https://avatars0.githubusercontent.com/u/11137008?v=4","gravatar_id":"","url":"https://api.github.com/users/pgomulka","html_url":"https://github.com/pgomulka","followers_url":"https://api.github.com/users/pgomulka/followers","following_url":"https://api.github.com/users/pgomulka/following{/other_user}","gists_url":"https://api.github.com/users/pgomulka/gists{/gist_id}","starred_url":"https://api.github.com/users/pgomulka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgomulka/subscriptions","organizations_url":"https://api.github.com/users/pgomulka/orgs","repos_url":"https://api.github.com/users/pgomulka/repos","events_url":"https://api.github.com/users/pgomulka/events{/privacy}","received_events_url":"https://api.github.com/users/pgomulka/received_events","type":"User","site_admin":false},"assignees":[{"login":"pgomulka","id":11137008,"node_id":"MDQ6VXNlcjExMTM3MDA4","avatar_url":"https://avatars0.githubusercontent.com/u/11137008?v=4","gravatar_id":"","url":"https://api.github.com/users/pgomulka","html_url":"https://github.com/pgomulka","followers_url":"https://api.github.com/users/pgomulka/followers","following_url":"https://api.github.com/users/pgomulka/following{/other_user}","gists_url":"https://api.github.com/users/pgomulka/gists{/gist_id}","starred_url":"https://api.github.com/users/pgomulka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgomulka/subscriptions","organizations_url":"https://api.github.com/users/pgomulka/orgs","repos_url":"https://api.github.com/users/pgomulka/repos","events_url":"https://api.github.com/users/pgomulka/events{/privacy}","received_events_url":"https://api.github.com/users/pgomulka/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2019-02-05T09:34:28Z","updated_at":"2019-02-05T17:27:25Z","closed_at":"2019-02-05T17:27:25Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The test is passing when running under jdk8 but failing under jdk10 & 11\r\nfailing:\r\n```\r\n./gradlew :x-pack:plugin:core:unitTest -Dtests.seed=20A05DD93A2D55FA -Dtests.class=org.elasticsearch.protocol.xpack.watcher.GetWatchResponseTests -Dtests.method=\"testFromXContent\" -Dtests.security.manager=true -Dtests.locale=ar-SA -Dtests.timezone=America/Kralendijk -Dcompiler.java=11 -Druntime.java=11\r\n```\r\n\r\nworking\r\n```\r\n./gradlew :x-pack:plugin:core:unitTest -Dtests.seed=20A05DD93A2D55FA -Dtests.class=org.elasticsearch.protocol.xpack.watcher.GetWatchResponseTests -Dtests.method=\"testFromXContent\" -Dtests.security.manager=true -Dtests.locale=ar-SA -Dtests.timezone=America/Kralendijk -Dcompiler.java=11 -Druntime.java=8\r\n```\r\n\r\nThe resolution of SystemClock was changed from jdk8 - jdk11\r\nThe jdk is vauge about this:\r\n```\r\nThis clock is based on the best available system clock. This may use System.currentTimeMillis(), or a higher resolution clock if one is available.\r\n```\r\n\r\nJDK8 SystemClock from Clock.java\r\n```\r\n  @Override\r\n        public Instant instant() {\r\n            return Instant.ofEpochMilli(millis());\r\n        }\r\n```\r\n\r\njdk11 SystemClock.instant from Clock.java\r\n```\r\n @Override\r\n        public Instant instant() {\r\n            // Take a local copy of offset. offset can be updated concurrently\r\n            // by other threads (even if we haven't made it volatile) so we will\r\n            // work with a local copy.\r\n            long localOffset = offset;\r\n            long adjustment = VM.getNanoTimeAdjustment(localOffset);\r\n\r\n            if (adjustment == -1) {\r\n                // -1 is a sentinel value returned by VM.getNanoTimeAdjustment\r\n                // when the offset it is given is too far off the current UTC\r\n                // time. In principle, this should not happen unless the\r\n                // JVM has run for more than ~136 years (not likely) or\r\n                // someone is fiddling with the system time, or the offset is\r\n                // by chance at 1ns in the future (very unlikely).\r\n                // We can easily recover from all these conditions by bringing\r\n                // back the offset in range and retry.\r\n\r\n                // bring back the offset in range. We use -1024 to make\r\n                // it more unlikely to hit the 1ns in the future condition.\r\n                localOffset = System.currentTimeMillis()/1000 - 1024;\r\n\r\n                // retry\r\n                adjustment = VM.getNanoTimeAdjustment(localOffset);\r\n\r\n                if (adjustment == -1) {\r\n                    // Should not happen: we just recomputed a new offset.\r\n                    // It should have fixed the issue.\r\n                    throw new InternalError(\"Offset \" + localOffset + \" is not in range\");\r\n                } else {\r\n                    // OK - recovery succeeded. Update the offset for the\r\n                    // next call...\r\n                    offset = localOffset;\r\n                }\r\n            }\r\n            return Instant.ofEpochSecond(localOffset, adjustment);\r\n        }\r\n```\r\n","closed_by":{"login":"pgomulka","id":11137008,"node_id":"MDQ6VXNlcjExMTM3MDA4","avatar_url":"https://avatars0.githubusercontent.com/u/11137008?v=4","gravatar_id":"","url":"https://api.github.com/users/pgomulka","html_url":"https://github.com/pgomulka","followers_url":"https://api.github.com/users/pgomulka/followers","following_url":"https://api.github.com/users/pgomulka/following{/other_user}","gists_url":"https://api.github.com/users/pgomulka/gists{/gist_id}","starred_url":"https://api.github.com/users/pgomulka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgomulka/subscriptions","organizations_url":"https://api.github.com/users/pgomulka/orgs","repos_url":"https://api.github.com/users/pgomulka/repos","events_url":"https://api.github.com/users/pgomulka/events{/privacy}","received_events_url":"https://api.github.com/users/pgomulka/received_events","type":"User","site_admin":false},"performed_via_github_app":null}