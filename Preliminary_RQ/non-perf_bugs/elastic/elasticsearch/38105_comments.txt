[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/459506511","html_url":"https://github.com/elastic/elasticsearch/issues/38105#issuecomment-459506511","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38105","id":459506511,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1OTUwNjUxMQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-01-31T21:06:57Z","updated_at":"2019-01-31T21:06:57Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/459651262","html_url":"https://github.com/elastic/elasticsearch/issues/38105#issuecomment-459651262","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38105","id":459651262,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1OTY1MTI2Mg==","user":{"login":"ThisUsedToBeAnEmail","id":16151791,"node_id":"MDQ6VXNlcjE2MTUxNzkx","avatar_url":"https://avatars1.githubusercontent.com/u/16151791?v=4","gravatar_id":"","url":"https://api.github.com/users/ThisUsedToBeAnEmail","html_url":"https://github.com/ThisUsedToBeAnEmail","followers_url":"https://api.github.com/users/ThisUsedToBeAnEmail/followers","following_url":"https://api.github.com/users/ThisUsedToBeAnEmail/following{/other_user}","gists_url":"https://api.github.com/users/ThisUsedToBeAnEmail/gists{/gist_id}","starred_url":"https://api.github.com/users/ThisUsedToBeAnEmail/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ThisUsedToBeAnEmail/subscriptions","organizations_url":"https://api.github.com/users/ThisUsedToBeAnEmail/orgs","repos_url":"https://api.github.com/users/ThisUsedToBeAnEmail/repos","events_url":"https://api.github.com/users/ThisUsedToBeAnEmail/events{/privacy}","received_events_url":"https://api.github.com/users/ThisUsedToBeAnEmail/received_events","type":"User","site_admin":false},"created_at":"2019-02-01T08:54:20Z","updated_at":"2019-02-01T08:54:20Z","author_association":"NONE","body":"So to see the extent of this for me going forward I wrote the following test script someone may find useful.\r\n\r\n```\r\nuse Test::More;\r\nuse Search::Elasticsearch;\r\nuse Environment;\r\nuse DateTime;\r\n\r\nmy $env = Environment->new;\r\nmy $e = Search::Elasticsearch->new(\r\n        nodes => $env->find('es'),\r\n        deprecate_to => ['File', 'deprecations.log'],\r\n);\r\n\r\nmy $dt = DateTime->new(\r\n    year       => 2018,\r\n    month      => 12,\r\n    day        => 31,\r\n    hour       => 0,\r\n    minute     => 0,\r\n    second     => 0,\r\n    time_zone  => 'UTC',\r\n);\r\n\r\nmy @fails;\r\n# first index 10 years of days starting from 2019-01-01\r\n# 2020, 2024 and 2028 are leap years\r\n# (365 * 10) + 3\r\nfor my $i (1 .. 3653) {\r\n        $dt = $dt->add( days => 1);\r\n        my $datetime = $dt->datetime();\r\n        $e->index(\r\n                index   => 'my_app',\r\n                type    => 'blog_post',\r\n                id      => $i,\r\n                body    => {\r\n                        title   => \"Elasticsearch clients ${i}\",\r\n                        content => 'Interesting content...',\r\n                        date    => $datetime,\r\n                }\r\n        );\r\n        diag explain \"index day ${i} : ${datetime}\";\r\n}\r\n\r\n# sleep a bit for the index to catch up\r\nsleep(10);\r\n\r\n$dt = DateTime->new(\r\n    year       => 2018,\r\n    month      => 12,\r\n    day        => 31,\r\n    hour       => 11,\r\n    minute     => 0,\r\n    second     => 0,\r\n    time_zone  => '+11:00',\r\n);\r\n\r\nfor my $i (1 .. 3653) {\r\n        $dt = $dt->add( days => 1);\r\n        my $results = $e->search(\r\n                index => 'my_app',\r\n                body  => {\r\n                        _source => \\1,\r\n                        query => {\r\n                                match => { title => \"Elasticsearch clients ${i}\" }\r\n                        },\r\n                        'script_fields' => {\r\n                                'date' => {\r\n                                        'script' => {\r\n                                                'params' => {\r\n                                                        'tz' => '+11:00'\r\n                                                },\r\n                                                'source' => 'Instant.ofEpochMilli(doc.date.date.millis).atZone(ZoneId.of(params.tz)).format(DateTimeFormatter.ofPattern(\\'YYYY-MM-dd HH:mm:ss\\'))',\r\n                                                'lang' => 'painless'\r\n                                        }\r\n                                }\r\n                        },\r\n\r\n                }\r\n        );\r\n\r\n        my $datetime = $dt->strftime('%Y-%m-%d %H:%M:%S');\r\n        unless (\r\n                is($results->{hits}->{hits}->[0]->{fields}->{date}->[0], $datetime, \"expectied datetime ${datetime}\")\r\n        ) {\r\n                push @fails, { $datetime => $results->{hits}->{hits}->[0]->{fields}->{date}->[0] };\r\n        }\r\n}\r\n\r\ndiag explain \\@fails;\r\n\r\ndone_testing();\r\n\r\n```\r\nResult is  - Looks like you failed 34 tests of 3653.\r\nAnd all of these seem to be around the end of the year's.\r\n\r\n```\r\n    [\r\n          {\r\n            '2019-12-29 11:00:00' => '2020-12-29 11:00:00'\r\n          },\r\n          {\r\n            '2019-12-30 11:00:00' => '2020-12-30 11:00:00'\r\n          },\r\n          {\r\n            '2019-12-31 11:00:00' => '2020-12-31 11:00:00'\r\n          },\r\n          {\r\n            '2020-12-27 11:00:00' => '2021-12-27 11:00:00'\r\n          },\r\n          {\r\n            '2020-12-28 11:00:00' => '2021-12-28 11:00:00'\r\n          },\r\n          {\r\n            '2020-12-29 11:00:00' => '2021-12-29 11:00:00'\r\n          },\r\n          {\r\n            '2020-12-30 11:00:00' => '2021-12-30 11:00:00'\r\n          },\r\n          {\r\n            '2020-12-31 11:00:00' => '2021-12-31 11:00:00'\r\n          },\r\n          {\r\n            '2021-12-26 11:00:00' => '2022-12-26 11:00:00'\r\n          },\r\n          {\r\n            '2021-12-27 11:00:00' => '2022-12-27 11:00:00'\r\n          },\r\n          {\r\n            '2021-12-28 11:00:00' => '2022-12-28 11:00:00'\r\n          },\r\n          {\r\n            '2021-12-29 11:00:00' => '2022-12-29 11:00:00'\r\n          },\r\n          {\r\n            '2021-12-30 11:00:00' => '2022-12-30 11:00:00'\r\n          },\r\n          {\r\n            '2021-12-31 11:00:00' => '2022-12-31 11:00:00'\r\n          },\r\n          {\r\n            '2023-12-31 11:00:00' => '2024-12-31 11:00:00'\r\n          },\r\n          {\r\n            '2024-12-29 11:00:00' => '2025-12-29 11:00:00'\r\n          },\r\n          {\r\n            '2024-12-30 11:00:00' => '2025-12-30 11:00:00'\r\n          },\r\n          {\r\n            '2024-12-31 11:00:00' => '2025-12-31 11:00:00'\r\n          },\r\n          {\r\n            '2025-12-28 11:00:00' => '2026-12-28 11:00:00'\r\n          },\r\n          {\r\n            '2025-12-29 11:00:00' => '2026-12-29 11:00:00'\r\n          },\r\n          {\r\n            '2025-12-30 11:00:00' => '2026-12-30 11:00:00'\r\n          },\r\n          {\r\n            '2025-12-31 11:00:00' => '2026-12-31 11:00:00'\r\n          },\r\n          {\r\n            '2026-12-27 11:00:00' => '2027-12-27 11:00:00'\r\n          },\r\n          {\r\n            '2026-12-28 11:00:00' => '2027-12-28 11:00:00'\r\n          },\r\n          {\r\n            '2026-12-29 11:00:00' => '2027-12-29 11:00:00'\r\n          },\r\n          {\r\n            '2026-12-30 11:00:00' => '2027-12-30 11:00:00'\r\n          },\r\n          {\r\n            '2026-12-31 11:00:00' => '2027-12-31 11:00:00'\r\n          },\r\n          {\r\n            '2027-12-26 11:00:00' => '2028-12-26 11:00:00'\r\n          },\r\n          {\r\n            '2027-12-27 11:00:00' => '2028-12-27 11:00:00'\r\n          },\r\n          {\r\n            '2027-12-28 11:00:00' => '2028-12-28 11:00:00'\r\n          },\r\n          {\r\n            '2027-12-29 11:00:00' => '2028-12-29 11:00:00'\r\n          },\r\n          {\r\n            '2027-12-30 11:00:00' => '2028-12-30 11:00:00'\r\n          },\r\n          {\r\n            '2027-12-31 11:00:00' => '2028-12-31 11:00:00'\r\n          },\r\n          {\r\n            '2028-12-31 11:00:00' => '2029-12-31 11:00:00'\r\n          }\r\n        ];\r\n\r\n```\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/489123342","html_url":"https://github.com/elastic/elasticsearch/issues/38105#issuecomment-489123342","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38105","id":489123342,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4OTEyMzM0Mg==","user":{"login":"williamrandolph","id":3253644,"node_id":"MDQ6VXNlcjMyNTM2NDQ=","avatar_url":"https://avatars3.githubusercontent.com/u/3253644?v=4","gravatar_id":"","url":"https://api.github.com/users/williamrandolph","html_url":"https://github.com/williamrandolph","followers_url":"https://api.github.com/users/williamrandolph/followers","following_url":"https://api.github.com/users/williamrandolph/following{/other_user}","gists_url":"https://api.github.com/users/williamrandolph/gists{/gist_id}","starred_url":"https://api.github.com/users/williamrandolph/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/williamrandolph/subscriptions","organizations_url":"https://api.github.com/users/williamrandolph/orgs","repos_url":"https://api.github.com/users/williamrandolph/repos","events_url":"https://api.github.com/users/williamrandolph/events{/privacy}","received_events_url":"https://api.github.com/users/williamrandolph/received_events","type":"User","site_admin":false},"created_at":"2019-05-03T14:53:26Z","updated_at":"2019-05-03T14:53:26Z","author_association":"CONTRIBUTOR","body":"@ThisUsedToBeAnEmail - Thank you for providing such detailed information and scripts to reproduce the issue.\r\n\r\nI believe the problem here is with the DateTimeFormatter string in your code example. `yyyy` defines a calendar year as commonly used. `YYYY`, on the other hand, specifies a \"week-based year\" in accordance with the ISO8601 standard, and a week-based year may begin earlier than a calendar year.\r\n\r\nThe pattern `yyyy-MM-dd HH:mm:ss` should give the results you expect.\r\n\r\nFor more details, see the official [Java documentation of DateTimeFormatter](https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html). The Java documents also summarize the ISO8601 definition of a week-based year in the [docs for the IsoFields class](https://docs.oracle.com/javase/8/docs/api/java/time/temporal/IsoFields.html).\r\n\r\nIf you have additional questions about time formats, underlying Java classes, and Painless scripts, please open a topic on https://discuss.elastic.co/c/elasticsearch","performed_via_github_app":null}]