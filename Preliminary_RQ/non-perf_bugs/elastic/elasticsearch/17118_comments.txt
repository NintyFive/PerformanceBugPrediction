[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/221073028","html_url":"https://github.com/elastic/elasticsearch/issues/17118#issuecomment-221073028","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17118","id":221073028,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMTA3MzAyOA==","user":{"login":"jeff303","id":3521562,"node_id":"MDQ6VXNlcjM1MjE1NjI=","avatar_url":"https://avatars0.githubusercontent.com/u/3521562?v=4","gravatar_id":"","url":"https://api.github.com/users/jeff303","html_url":"https://github.com/jeff303","followers_url":"https://api.github.com/users/jeff303/followers","following_url":"https://api.github.com/users/jeff303/following{/other_user}","gists_url":"https://api.github.com/users/jeff303/gists{/gist_id}","starred_url":"https://api.github.com/users/jeff303/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeff303/subscriptions","organizations_url":"https://api.github.com/users/jeff303/orgs","repos_url":"https://api.github.com/users/jeff303/repos","events_url":"https://api.github.com/users/jeff303/events{/privacy}","received_events_url":"https://api.github.com/users/jeff303/received_events","type":"User","site_admin":false},"created_at":"2016-05-23T19:38:13Z","updated_at":"2016-05-23T19:39:42Z","author_association":"CONTRIBUTOR","body":"I'm interested in taking a crack at this one.  But I'm finding myself writing quite a bit of code to mock and stub out the necessary parts of the `AnalysisService`, `SimilarityService`, `MapperRegistry`, etc. that are needed in order to call `SuggestBuilder.build`.  It makes me wonder whether I'm going about this in the right way.  Does anyone know of any existing test case that provide instances that would be suitable here, or a good starting point?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/221074431","html_url":"https://github.com/elastic/elasticsearch/issues/17118#issuecomment-221074431","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17118","id":221074431,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMTA3NDQzMQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-05-23T19:43:33Z","updated_at":"2016-05-23T19:43:33Z","author_association":"CONTRIBUTOR","body":"> Does anyone know of any existing test case that provide instances that would be suitable here, or a good starting point?\n\n`AbstractQueryTestCase` provides a lot of it, maybe all? Maybe good to figure out a way to reuse the code rather than copy it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/221530930","html_url":"https://github.com/elastic/elasticsearch/issues/17118#issuecomment-221530930","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17118","id":221530930,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMTUzMDkzMA==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2016-05-25T10:12:17Z","updated_at":"2016-05-25T10:12:17Z","author_association":"MEMBER","body":"@jeff303 great that you want to look into this. What makes this kind of tests a bit tricky is that they should not require only minimal setup and mocking necessary for creating the SuggestionContext and then doing some meaningfull checks on it without having to really execute them. At least that was the idea, otherwise we are better off testing the output of the suggestion builder in integration tests like the existing `SuggestSearchTest`.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/221608597","html_url":"https://github.com/elastic/elasticsearch/issues/17118#issuecomment-221608597","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17118","id":221608597,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMTYwODU5Nw==","user":{"login":"jeff303","id":3521562,"node_id":"MDQ6VXNlcjM1MjE1NjI=","avatar_url":"https://avatars0.githubusercontent.com/u/3521562?v=4","gravatar_id":"","url":"https://api.github.com/users/jeff303","html_url":"https://github.com/jeff303","followers_url":"https://api.github.com/users/jeff303/followers","following_url":"https://api.github.com/users/jeff303/following{/other_user}","gists_url":"https://api.github.com/users/jeff303/gists{/gist_id}","starred_url":"https://api.github.com/users/jeff303/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeff303/subscriptions","organizations_url":"https://api.github.com/users/jeff303/orgs","repos_url":"https://api.github.com/users/jeff303/repos","events_url":"https://api.github.com/users/jeff303/events{/privacy}","received_events_url":"https://api.github.com/users/jeff303/received_events","type":"User","site_admin":false},"created_at":"2016-05-25T15:14:35Z","updated_at":"2016-05-25T15:14:35Z","author_association":"CONTRIBUTOR","body":"Yeah, I was able to get it working pretty easily using @nik9000  suggestion, since `AbstractQueryTestCase` does provide a lot of the necessary setup.  However, it is definitely heavier weight since it involves creating the cluster, index, etc.  I am happy to investigate what the minimum set of objects that needs to be mocked is, especially now that I have something to start with.  I mostly just wanted to make sure I wasn't going down the wrong path by missing something suitable that already exists in the other test classes.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/222003897","html_url":"https://github.com/elastic/elasticsearch/issues/17118#issuecomment-222003897","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17118","id":222003897,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMjAwMzg5Nw==","user":{"login":"jeff303","id":3521562,"node_id":"MDQ6VXNlcjM1MjE1NjI=","avatar_url":"https://avatars0.githubusercontent.com/u/3521562?v=4","gravatar_id":"","url":"https://api.github.com/users/jeff303","html_url":"https://github.com/jeff303","followers_url":"https://api.github.com/users/jeff303/followers","following_url":"https://api.github.com/users/jeff303/following{/other_user}","gists_url":"https://api.github.com/users/jeff303/gists{/gist_id}","starred_url":"https://api.github.com/users/jeff303/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeff303/subscriptions","organizations_url":"https://api.github.com/users/jeff303/orgs","repos_url":"https://api.github.com/users/jeff303/repos","events_url":"https://api.github.com/users/jeff303/events{/privacy}","received_events_url":"https://api.github.com/users/jeff303/received_events","type":"User","site_admin":false},"created_at":"2016-05-26T21:44:18Z","updated_at":"2016-05-26T21:44:18Z","author_association":"CONTRIBUTOR","body":"OK, I have what I believe to be the starting point now.  I didn't end up needing any mocking.  Also, I wasn't sure if it was important to assert the `QueryShardContext` objects themselves.  If so, I could implement a deep equals (or else compare by reference in this particular case, but that seems to be of little value).  I couldn't find a cleaner way to handle the `MapperService` other than as a class level field, since there's a bit of a chicken and egg issue with the `MapperService` needing a `Supplier<QueryShardContext>`, which needs a reference to the `MapperService`.\n\nIf anyone could take a quick look and let me know if I'm on the right track, I could fix/expand as needed before creating the pull request.\n\nhttps://github.com/jeff303/elasticsearch/blob/fix/add-suggestion-search-context-tests/core/src/test/java/org/elasticsearch/search/suggest/SuggestionSearchContextTests.java\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/222482603","html_url":"https://github.com/elastic/elasticsearch/issues/17118#issuecomment-222482603","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17118","id":222482603,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMjQ4MjYwMw==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2016-05-30T12:32:04Z","updated_at":"2016-05-30T12:32:04Z","author_association":"MEMBER","body":"@jeff303 nice, I took a quick look and I think you are on the right track. However I think we should add tests for the output of the `build()` method to the already existing Phrase/Completion/TermSuggestionBuilderTests, possibly with a common setup in AbstractSuggestionBuilderTestCase. Those tests already provide ways of generating the suggestion builders with randomized parameters. The tests would call the `public SuggestionContext build(QueryShardContext context)` method on a random builder obtained by `AbstractSuggestionBuilderTestCase#randomTestBuilder()` (using a QueryShardContext that provides enough mocked services as needed) and then check that the builder pameters were correctly translated / transferred to the resulting SuggestionContext. \n\nTo better see what we had before, you can take a look at https://github.com/elastic/elasticsearch/commit/4b803d75cf3d06faa0bb81472ca09564406c70c0#diff-8877c8d8032280d9ca494007ca04b25aL239 and some of the assertions e.g. in https://github.com/elastic/elasticsearch/commit/4b803d75cf3d06faa0bb81472ca09564406c70c0#diff-7925b951f7645dcb8a552ff8440accd3L164\n\nThose tests basically checked that when we moved the parsing logic from its previous location in the code to the `build()` methods we have now, we didn't break anything. However since we removed the original parsing logic, we want to check things like `assertEquals(phraseSuggestionBuilder.gramSize(), phraseSuggestionContext.gramSize())`, for as much parameters as this is feasible without too heavy mocking. Let me know if you have questions in case you want to continue working on this.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/227284117","html_url":"https://github.com/elastic/elasticsearch/issues/17118#issuecomment-227284117","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17118","id":227284117,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNzI4NDExNw==","user":{"login":"jeff303","id":3521562,"node_id":"MDQ6VXNlcjM1MjE1NjI=","avatar_url":"https://avatars0.githubusercontent.com/u/3521562?v=4","gravatar_id":"","url":"https://api.github.com/users/jeff303","html_url":"https://github.com/jeff303","followers_url":"https://api.github.com/users/jeff303/followers","following_url":"https://api.github.com/users/jeff303/following{/other_user}","gists_url":"https://api.github.com/users/jeff303/gists{/gist_id}","starred_url":"https://api.github.com/users/jeff303/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeff303/subscriptions","organizations_url":"https://api.github.com/users/jeff303/orgs","repos_url":"https://api.github.com/users/jeff303/repos","events_url":"https://api.github.com/users/jeff303/events{/privacy}","received_events_url":"https://api.github.com/users/jeff303/received_events","type":"User","site_admin":false},"created_at":"2016-06-20T22:04:52Z","updated_at":"2016-06-20T22:04:52Z","author_association":"CONTRIBUTOR","body":"@cbuescher , I'd appreciate it if you had a look and let me know if this is more on track (see `PhraseSuggestionBuilderTests` specifically).  I'm not sure if I'm collecting the info in a great way from the random suggestion builders (and putting them in the `MapperService`), or if I could avoid adding the extra getters in `DirectCandidateGeneratorBuilder` and `PhraseSuggestionBuilder`.\n\nhttps://github.com/elastic/elasticsearch/compare/master...jeff303:fix/add-suggestion-search-context-tests\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/227478947","html_url":"https://github.com/elastic/elasticsearch/issues/17118#issuecomment-227478947","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17118","id":227478947,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNzQ3ODk0Nw==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2016-06-21T15:34:39Z","updated_at":"2016-06-21T15:34:39Z","author_association":"MEMBER","body":"Hi @jeff303, first of all thanks for working on this. I was about to leave a few comments on the code on your branch, but I can't seem to do this unless it's an official pull request, I'll add just a few thoughts here:\n- adding the extra getters in `DirectCandidateGeneratorBuilder` and `PhraseSuggestionBuilder` should be okay, the paramters don't allow modification which is fine\n- I briefly looked at the additional setup code and was wondering if all of this is really necessary for the tests that you are adding (not sure, might be). If in doubt, I would rather leave out testing all possible ways of e.g. setting analyzers in the suggester if that simplifies setup\n- I'd try to avoid having to reset the mapper service (resetMapperService()) in AbstractSuggestionBuilderTestCase. You probably added this because the preFilter/postFilter analyzer names and fieldnames are randomly generated later with the random SuggestionBuilder. Maybe its possible to generate these analyzer and fieldnames upfront (e.g. a static array in PhraseSuggestionBuilderTests that the random setup draws from, or something similar)\n- I'd investigate to pull up all checks for common SuggestionContext parameters (like size, analyzer, etc..) into the base test\n- Whats the reason for having a dedicated SuggestionSearchContextTests? Currently it looks like lots of setup for just a few basic checks to me, those could probably be part of the general randomized tests, unless I'm missing something?\n\nAll in all I think this already looks like its going into a good direction, feel free to open a PR if you want to discuss details. Even if that PR turns out to need to be rewritten it provides room for discussion and detailed comments.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/227514854","html_url":"https://github.com/elastic/elasticsearch/issues/17118#issuecomment-227514854","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17118","id":227514854,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNzUxNDg1NA==","user":{"login":"jeff303","id":3521562,"node_id":"MDQ6VXNlcjM1MjE1NjI=","avatar_url":"https://avatars0.githubusercontent.com/u/3521562?v=4","gravatar_id":"","url":"https://api.github.com/users/jeff303","html_url":"https://github.com/jeff303","followers_url":"https://api.github.com/users/jeff303/followers","following_url":"https://api.github.com/users/jeff303/following{/other_user}","gists_url":"https://api.github.com/users/jeff303/gists{/gist_id}","starred_url":"https://api.github.com/users/jeff303/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeff303/subscriptions","organizations_url":"https://api.github.com/users/jeff303/orgs","repos_url":"https://api.github.com/users/jeff303/repos","events_url":"https://api.github.com/users/jeff303/events{/privacy}","received_events_url":"https://api.github.com/users/jeff303/received_events","type":"User","site_admin":false},"created_at":"2016-06-21T17:38:11Z","updated_at":"2016-06-21T17:38:11Z","author_association":"CONTRIBUTOR","body":"OK, thanks for the feedback, @cbuescher .  The `SuggestionSearchContextTests` class was just how I started out before switching over to the existing suggestion builder tests.  I will remove that, and incorporate the other points and open an official PR.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/253869526","html_url":"https://github.com/elastic/elasticsearch/issues/17118#issuecomment-253869526","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17118","id":253869526,"node_id":"MDEyOklzc3VlQ29tbWVudDI1Mzg2OTUyNg==","user":{"login":"jeff303","id":3521562,"node_id":"MDQ6VXNlcjM1MjE1NjI=","avatar_url":"https://avatars0.githubusercontent.com/u/3521562?v=4","gravatar_id":"","url":"https://api.github.com/users/jeff303","html_url":"https://github.com/jeff303","followers_url":"https://api.github.com/users/jeff303/followers","following_url":"https://api.github.com/users/jeff303/following{/other_user}","gists_url":"https://api.github.com/users/jeff303/gists{/gist_id}","starred_url":"https://api.github.com/users/jeff303/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeff303/subscriptions","organizations_url":"https://api.github.com/users/jeff303/orgs","repos_url":"https://api.github.com/users/jeff303/repos","events_url":"https://api.github.com/users/jeff303/events{/privacy}","received_events_url":"https://api.github.com/users/jeff303/received_events","type":"User","site_admin":false},"created_at":"2016-10-14T17:37:16Z","updated_at":"2016-10-14T17:37:16Z","author_association":"CONTRIBUTOR","body":"Unfortunately, I don't have the time to finish this right now, having just started a new full time job (among other things).  I went ahead and pushed my latest changes (same branch as linked above), and I feel things are maybe 80% there.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/254141671","html_url":"https://github.com/elastic/elasticsearch/issues/17118#issuecomment-254141671","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17118","id":254141671,"node_id":"MDEyOklzc3VlQ29tbWVudDI1NDE0MTY3MQ==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2016-10-17T08:14:52Z","updated_at":"2016-10-17T08:14:52Z","author_association":"MEMBER","body":"Thanks  @jeff303 for the update and all the effort so far. Since this is stalled a bit, would it be okay for somebody else to pick it up if she is interested? I'm just asking because this issue is still labeled \"adoptme\" which is meant to be a label that should encourage new contributers to take a look at open issues. If you have an idea if or when you'll be able to come back to this, we can also remove that label and assign it to you.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/254334729","html_url":"https://github.com/elastic/elasticsearch/issues/17118#issuecomment-254334729","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17118","id":254334729,"node_id":"MDEyOklzc3VlQ29tbWVudDI1NDMzNDcyOQ==","user":{"login":"jeff303","id":3521562,"node_id":"MDQ6VXNlcjM1MjE1NjI=","avatar_url":"https://avatars0.githubusercontent.com/u/3521562?v=4","gravatar_id":"","url":"https://api.github.com/users/jeff303","html_url":"https://github.com/jeff303","followers_url":"https://api.github.com/users/jeff303/followers","following_url":"https://api.github.com/users/jeff303/following{/other_user}","gists_url":"https://api.github.com/users/jeff303/gists{/gist_id}","starred_url":"https://api.github.com/users/jeff303/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeff303/subscriptions","organizations_url":"https://api.github.com/users/jeff303/orgs","repos_url":"https://api.github.com/users/jeff303/repos","events_url":"https://api.github.com/users/jeff303/events{/privacy}","received_events_url":"https://api.github.com/users/jeff303/received_events","type":"User","site_admin":false},"created_at":"2016-10-17T21:08:54Z","updated_at":"2016-10-17T21:08:54Z","author_association":"CONTRIBUTOR","body":"@cbuescher , that sounds perfectly fine to me (for someone else to pick it up).  I initially grabbed it because of the label, but since I can't quite get it through the finish line, we should probably just leave it and update the assignee appropriately.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/313696149","html_url":"https://github.com/elastic/elasticsearch/issues/17118#issuecomment-313696149","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17118","id":313696149,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMzY5NjE0OQ==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2017-07-07T14:22:04Z","updated_at":"2017-07-07T14:22:11Z","author_association":"MEMBER","body":"Fixed with #25549, #25558, #25571 and #25575","performed_via_github_app":null}]