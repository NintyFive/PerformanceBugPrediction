[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/242408697","html_url":"https://github.com/elastic/elasticsearch/issues/20163#issuecomment-242408697","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20163","id":242408697,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MjQwODY5Nw==","user":{"login":"centic9","id":548322,"node_id":"MDQ6VXNlcjU0ODMyMg==","avatar_url":"https://avatars0.githubusercontent.com/u/548322?v=4","gravatar_id":"","url":"https://api.github.com/users/centic9","html_url":"https://github.com/centic9","followers_url":"https://api.github.com/users/centic9/followers","following_url":"https://api.github.com/users/centic9/following{/other_user}","gists_url":"https://api.github.com/users/centic9/gists{/gist_id}","starred_url":"https://api.github.com/users/centic9/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/centic9/subscriptions","organizations_url":"https://api.github.com/users/centic9/orgs","repos_url":"https://api.github.com/users/centic9/repos","events_url":"https://api.github.com/users/centic9/events{/privacy}","received_events_url":"https://api.github.com/users/centic9/received_events","type":"User","site_admin":false},"created_at":"2016-08-25T14:32:12Z","updated_at":"2016-08-25T14:33:53Z","author_association":"CONTRIBUTOR","body":"The strange thing here is that filtering/querying works fine, also aggregations work fine unless the missing-attribute is specified.\n\nAnd it also happens with non-dynamic mappings if one index has a field defined with a datatype and the other not.\n\nThe full stacktrace is:\n\n```\nFailed to execute phase [merge], [reduce] \n\n    at __randomizedtesting.SeedInfo.seed([3052F79434FAD641:8EABC959AFC832B0]:0)\n    at org.elasticsearch.action.search.SearchDfsQueryThenFetchAsyncAction$3.onFailure(SearchDfsQueryThenFetchAsyncAction.java:212)\n    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:39)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: AggregationExecutionException[Merging/Reducing the aggregations failed when computing the aggregation [ Name: testagg, Type: terms ] because: the field you gave in the aggregation query existed as two different types in two different indices]\n    at org.elasticsearch.search.aggregations.bucket.terms.InternalTerms.doReduce(InternalTerms.java:188)\n    at org.elasticsearch.search.aggregations.InternalAggregation.reduce(InternalAggregation.java:153)\n    at org.elasticsearch.search.aggregations.InternalAggregations.reduce(InternalAggregations.java:170)\n    at org.elasticsearch.search.controller.SearchPhaseController.merge(SearchPhaseController.java:411)\n    at org.elasticsearch.action.search.SearchDfsQueryThenFetchAsyncAction$3.doRun(SearchDfsQueryThenFetchAsyncAction.java:198)\n    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n    ... 3 more\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/242411322","html_url":"https://github.com/elastic/elasticsearch/issues/20163#issuecomment-242411322","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20163","id":242411322,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MjQxMTMyMg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-08-25T14:38:38Z","updated_at":"2016-08-25T14:38:38Z","author_association":"CONTRIBUTOR","body":"@centic9 the problem is that we don't know what data type the missing field is supposed to have, and we need to know the datatype in order to be able to merge the agg results from each node.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/242472952","html_url":"https://github.com/elastic/elasticsearch/issues/20163#issuecomment-242472952","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20163","id":242472952,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MjQ3Mjk1Mg==","user":{"login":"centic9","id":548322,"node_id":"MDQ6VXNlcjU0ODMyMg==","avatar_url":"https://avatars0.githubusercontent.com/u/548322?v=4","gravatar_id":"","url":"https://api.github.com/users/centic9","html_url":"https://github.com/centic9","followers_url":"https://api.github.com/users/centic9/followers","following_url":"https://api.github.com/users/centic9/following{/other_user}","gists_url":"https://api.github.com/users/centic9/gists{/gist_id}","starred_url":"https://api.github.com/users/centic9/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/centic9/subscriptions","organizations_url":"https://api.github.com/users/centic9/orgs","repos_url":"https://api.github.com/users/centic9/repos","events_url":"https://api.github.com/users/centic9/events{/privacy}","received_events_url":"https://api.github.com/users/centic9/received_events","type":"User","site_admin":false},"created_at":"2016-08-25T17:28:41Z","updated_at":"2016-08-25T17:30:15Z","author_association":"CONTRIBUTOR","body":"Yes, seems to be the case, yet it is somewhat unexpected to get an exveption here, this invalidates our use-case around aggs with missing..\n\nOne option would be to return the same datatype that the \"missing\" had, that would make it work for numeric values, but probably not for dates wher there is no separate json datatype.\n\nThe full solution would be to resolve the datatype of the field against the full index mapping including the dynamic_template similar to when the field is stored the first time for an index, not sure if this is feasible, though.\n\nA third way could be to allow to specify \"missing_type\" where the user can define the datatype for any index where the field is missing completely.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/242705854","html_url":"https://github.com/elastic/elasticsearch/issues/20163#issuecomment-242705854","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20163","id":242705854,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MjcwNTg1NA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-08-26T11:16:20Z","updated_at":"2016-08-26T11:16:20Z","author_association":"CONTRIBUTOR","body":"We just discussed this issue in FixitFriday. Sorting has this feature through the `unmapped_type` option, which would be one way to fix this issue. But then there are also some concerns that every aggregation supporting the missing option would need to support this additional parameter, so we'd like to collect more data about the problem before moving forward to have a better idea of how much this is an issue and whether there are other ways that we could fix it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243474723","html_url":"https://github.com/elastic/elasticsearch/issues/20163#issuecomment-243474723","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20163","id":243474723,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzQ3NDcyMw==","user":{"login":"centic9","id":548322,"node_id":"MDQ6VXNlcjU0ODMyMg==","avatar_url":"https://avatars0.githubusercontent.com/u/548322?v=4","gravatar_id":"","url":"https://api.github.com/users/centic9","html_url":"https://github.com/centic9","followers_url":"https://api.github.com/users/centic9/followers","following_url":"https://api.github.com/users/centic9/following{/other_user}","gists_url":"https://api.github.com/users/centic9/gists{/gist_id}","starred_url":"https://api.github.com/users/centic9/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/centic9/subscriptions","organizations_url":"https://api.github.com/users/centic9/orgs","repos_url":"https://api.github.com/users/centic9/repos","events_url":"https://api.github.com/users/centic9/events{/privacy}","received_events_url":"https://api.github.com/users/centic9/received_events","type":"User","site_admin":false},"created_at":"2016-08-30T15:16:34Z","updated_at":"2016-08-30T15:21:32Z","author_association":"CONTRIBUTOR","body":"I could actually come up with sort of a small workaround for \"Long\" and \"Date\" fields when using terms-aggregations via the \"value_type\" that is originally intended for scripts, but is evaluated always and thus allows to \"coerce\" the type of the value accordingly. \n\nIt has the \"side effect\" of making the returned value for the \"missing\" value a \"Long\" even if the field is not yet created as field for the index. \n\nHowever it does not work for Double (my main use case) due to `ValuesSource.Numeric.EMPTY` which always returns \"false\" for isFloatingPoint() and thus prevents values of type \"double\".\n\nI think anything more will require code-changes in Elasticsearch to get it working.\n","performed_via_github_app":null}]