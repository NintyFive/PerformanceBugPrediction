{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/9284","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9284/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9284/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9284/events","html_url":"https://github.com/elastic/elasticsearch/issues/9284","id":54262542,"node_id":"MDU6SXNzdWU1NDI2MjU0Mg==","number":9284,"title":" Help on sample nest code to handle document relations ","user":{"login":"bvnagaraju","id":10501996,"node_id":"MDQ6VXNlcjEwNTAxOTk2","avatar_url":"https://avatars2.githubusercontent.com/u/10501996?v=4","gravatar_id":"","url":"https://api.github.com/users/bvnagaraju","html_url":"https://github.com/bvnagaraju","followers_url":"https://api.github.com/users/bvnagaraju/followers","following_url":"https://api.github.com/users/bvnagaraju/following{/other_user}","gists_url":"https://api.github.com/users/bvnagaraju/gists{/gist_id}","starred_url":"https://api.github.com/users/bvnagaraju/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvnagaraju/subscriptions","organizations_url":"https://api.github.com/users/bvnagaraju/orgs","repos_url":"https://api.github.com/users/bvnagaraju/repos","events_url":"https://api.github.com/users/bvnagaraju/events{/privacy}","received_events_url":"https://api.github.com/users/bvnagaraju/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-01-13T23:14:40Z","updated_at":"2015-01-15T19:53:48Z","closed_at":"2015-01-15T19:53:48Z","author_association":"NONE","active_lock_reason":null,"body":"Hi ,\n\nI have a scenario where I have below document structure \n\nDocument { Id, Name,ParentId,FamilyId,Author,List of additional user custom fields }\n\nand a document can have relations to another document .\n\nFor example :\n\nwe have mail thread where replies and actual mail are documents but actual mail is the parent and all the replies are child's.\n\nNow have below  use cases to achieve.\n\n1)Get the qualified replies only for the  given query .\n\n2)Get the qualified replies and all other emails in thread (include families ) for given query.Here query meant to qualify the reply /replies\n\n3)Get the qualified mail documents only for given query\n\n4)Get the qualified mail documents and all of its replies for given query which qualifies the mail documents \n\ncan you let  me know what is the best way to handle this kind of document relations and sample code for the nest client use .\n\nRegards,\nNagaraju\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}