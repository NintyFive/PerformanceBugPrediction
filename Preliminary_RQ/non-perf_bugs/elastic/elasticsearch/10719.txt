{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/10719","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10719/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10719/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10719/events","html_url":"https://github.com/elastic/elasticsearch/issues/10719","id":70090056,"node_id":"MDU6SXNzdWU3MDA5MDA1Ng==","number":10719,"title":"Sampler Aggregator cannot be used in terms agg order","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":76184120,"node_id":"MDU6TGFiZWw3NjE4NDEyMA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v2.0.0-beta1","name":"v2.0.0-beta1","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"assignees":[{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2015-04-22T10:34:37Z","updated_at":"2015-05-22T14:23:14Z","closed_at":"2015-05-22T14:23:13Z","author_association":"MEMBER","active_lock_reason":null,"body":"Sampler Aggregator is a single-bucket aggregator but if you try to use it as part of the order in a terms aggregation it fails. Below is a sense script to reproduce:\n\n``` javascript\nPOST test/doc/1\n{\"color\":\"YELLOW\",\"date\":1500000009,\"weight\":105}\n\nPOST test/doc/2\n{\"color\":\"YELLOW\",\"date\":1500000008,\"weight\":104}\n\nPOST test/doc/3\n{\"color\":\"YELLOW\",\"date\":1500000007,\"weight\":103}\n\nPOST test/doc/11\n{\"color\":\"RED\",\"date\":1500000009,\"weight\":205}\n\nGET test/doc/_search\n{\n  \"size\": 0,\n  \"query\": {\n    \"match_all\": {}\n  },\n  \"sort\": [\n    {\n      \"date\": {\n        \"order\": \"desc\"\n      }\n    }\n  ],\n  \"aggregations\": {\n    \"distinctColors\": {\n      \"terms\": {\n        \"field\": \"color\",\n        \"size\": 1,\n        \"order\": {\n          \"sample>max_weight.value\": \"asc\"\n        }\n      },\n      \"aggregations\": {\n        \"sample\": {\n          \"sampler\": {\n            \"shard_size\": 1\n          },\n          \"aggs\": {\n            \"max_weight\": {\n              \"max\": {\n                \"field\": \"weight\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nThe search request throws an ArrayStoreException:\n\n```\norg.elasticsearch.transport.RemoteTransportException: [Stallior][inet[/192.168.0.7:9300]][indices:data/read/search[phase/query]]\nCaused by: java.lang.ArrayStoreException\n    at java.lang.System.arraycopy(Native Method)\n    at org.elasticsearch.search.aggregations.support.AggregationPath.subPath(AggregationPath.java:191)\n    at org.elasticsearch.search.aggregations.support.AggregationPath.validate(AggregationPath.java:307)\n    at org.elasticsearch.search.aggregations.bucket.terms.InternalOrder.validate(InternalOrder.java:145)\n    at org.elasticsearch.search.aggregations.bucket.terms.InternalOrder.validate(InternalOrder.java:138)\n    at org.elasticsearch.search.aggregations.bucket.terms.TermsAggregator.<init>(TermsAggregator.java:141)\n    at org.elasticsearch.search.aggregations.bucket.terms.AbstractStringTermsAggregator.<init>(AbstractStringTermsAggregator.java:39)\n    at org.elasticsearch.search.aggregations.bucket.terms.GlobalOrdinalsStringTermsAggregator.<init>(GlobalOrdinalsStringTermsAggregator.java:75)\n    at org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactory$ExecutionMode$2.create(TermsAggregatorFactory.java:70)\n    at org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactory.doCreateInternal(TermsAggregatorFactory.java:223)\n    at org.elasticsearch.search.aggregations.support.ValuesSourceAggregatorFactory.createInternal(ValuesSourceAggregatorFactory.java:57)\n    at org.elasticsearch.search.aggregations.AggregatorFactory.create(AggregatorFactory.java:95)\n    at org.elasticsearch.search.aggregations.AggregatorFactories.createTopLevelAggregators(AggregatorFactories.java:69)\n    at org.elasticsearch.search.aggregations.AggregationPhase.preProcess(AggregationPhase.java:77)\n    at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:96)\n    at org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:296)\n    at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:307)\n    at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryTransportHandler.messageReceived(SearchServiceTransportAction.java:422)\n    at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryTransportHandler.messageReceived(SearchServiceTransportAction.java:1)\n    at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:340)\n    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:745)\n\n```\n\nbut if you debug at `org.elasticsearch.search.aggregations.support.AggregationPath.subPath(AggregationPath.java:191)` you can see that the aggregator being tested is of type `AggregatorFactory$1` and wraps the `SamplerAggregator`. This is created by the `asMultiBucketAggregator(this, context, parent);` call in `SamplerAggregator$Factory.createInternal(...)`.\n\nThe reason SamplerAggregator has to be wrapped is that it's collectors do not take into account the `parentBucketOrdinal`.\n\nWe should update the SamplerAggregator (including the Diversity parts) to collect documents for each `parentBucketOrdinal` so that it doesn't need to be wrapped anymore and can be used in ordering like the other single-bucket aggregators\n","closed_by":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"performed_via_github_app":null}