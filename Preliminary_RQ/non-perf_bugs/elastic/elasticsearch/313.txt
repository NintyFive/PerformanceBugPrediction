{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/313","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/313/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/313/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/313/events","html_url":"https://github.com/elastic/elasticsearch/issues/313","id":275457,"node_id":"MDU6SXNzdWUyNzU0NTc=","number":313,"title":"Backing up and Restoring a Specific Index","user":{"login":"talsalmona","id":222969,"node_id":"MDQ6VXNlcjIyMjk2OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/222969?v=4","gravatar_id":"","url":"https://api.github.com/users/talsalmona","html_url":"https://github.com/talsalmona","followers_url":"https://api.github.com/users/talsalmona/followers","following_url":"https://api.github.com/users/talsalmona/following{/other_user}","gists_url":"https://api.github.com/users/talsalmona/gists{/gist_id}","starred_url":"https://api.github.com/users/talsalmona/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talsalmona/subscriptions","organizations_url":"https://api.github.com/users/talsalmona/orgs","repos_url":"https://api.github.com/users/talsalmona/repos","events_url":"https://api.github.com/users/talsalmona/events{/privacy}","received_events_url":"https://api.github.com/users/talsalmona/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2010-08-11T16:59:19Z","updated_at":"2013-07-23T09:52:17Z","closed_at":"2013-07-23T09:52:17Z","author_association":"NONE","active_lock_reason":null,"body":"Description:\nAllow an index level granularity of backing up and restoring of indexes.\n\nUse Case:\nIn a multi-tenant application, where there is an index per tenant, there is often a need to restore an index to a previous \"snapshot\".\nIt is even possible that a tenant owner / admin will be allowed to \"go back in time\" to a previous version of the index.\n\nFeature Request:\n1. Allow a per index backup and restore.\n2. Right after the restore, the newest document in the index should be the newest document in the snapshot we restored from. Documents related to this index in the transaction log or the work folders should be removed.\n\nA possibly more complicated feature request:\nHave an API to define index periodic \"save points\". e.g. create a save point every 10 minutes.\nHave another API to restore an index to a specific save point.\nAn additional API that would let us list the current available save points.\n\nThe process of backing up an index to NFS would be:\n1. Define a periodic snapshot of every X minutes.\n2. Snapshot the NFS every X minutes (with the S3 integration this can be automatic)\n\nThe process of restoring:\n1. Restore a snapshot from NFS.\n2. List the available snapshots (through API)\n3. Restore to the latest snapshot.\n(with S3, this could be nicer: list the available snapshot then retrieve from S3 and restore in one API call)\n- In the advanced feature request, the periodic mechanism can be left for some external scheduler.\n\nSee also: http://groups.google.com/a/elasticsearch.com/group/users/browse_thread/thread/fa111bbdcfe5872a/1ce33465200d66e1#1ce33465200d66e1\n","closed_by":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"performed_via_github_app":null}