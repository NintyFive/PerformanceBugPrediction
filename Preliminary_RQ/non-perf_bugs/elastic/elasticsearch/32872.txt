{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/32872","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32872/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32872/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32872/events","html_url":"https://github.com/elastic/elasticsearch/issues/32872","id":350854482,"node_id":"MDU6SXNzdWUzNTA4NTQ0ODI=","number":32872,"title":"Consolidate release information into single metadata file that's consumed by builds and test","user":{"login":"alpar-t","id":2565652,"node_id":"MDQ6VXNlcjI1NjU2NTI=","avatar_url":"https://avatars1.githubusercontent.com/u/2565652?v=4","gravatar_id":"","url":"https://api.github.com/users/alpar-t","html_url":"https://github.com/alpar-t","followers_url":"https://api.github.com/users/alpar-t/followers","following_url":"https://api.github.com/users/alpar-t/following{/other_user}","gists_url":"https://api.github.com/users/alpar-t/gists{/gist_id}","starred_url":"https://api.github.com/users/alpar-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpar-t/subscriptions","organizations_url":"https://api.github.com/users/alpar-t/orgs","repos_url":"https://api.github.com/users/alpar-t/repos","events_url":"https://api.github.com/users/alpar-t/events{/privacy}","received_events_url":"https://api.github.com/users/alpar-t/received_events","type":"User","site_admin":false},"labels":[{"id":106454670,"node_id":"MDU6TGFiZWwxMDY0NTQ2NzA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Delivery/Build","name":":Delivery/Build","color":"0e8a16","default":false,"description":"Build or test infrastructure"},{"id":2495976472,"node_id":"MDU6TGFiZWwyNDk1OTc2NDcy","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Delivery","name":"Team:Delivery","color":"fef2c0","default":false,"description":"Meta label for Delivery team"}],"state":"closed","locked":false,"assignee":{"login":"alpar-t","id":2565652,"node_id":"MDQ6VXNlcjI1NjU2NTI=","avatar_url":"https://avatars1.githubusercontent.com/u/2565652?v=4","gravatar_id":"","url":"https://api.github.com/users/alpar-t","html_url":"https://github.com/alpar-t","followers_url":"https://api.github.com/users/alpar-t/followers","following_url":"https://api.github.com/users/alpar-t/following{/other_user}","gists_url":"https://api.github.com/users/alpar-t/gists{/gist_id}","starred_url":"https://api.github.com/users/alpar-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpar-t/subscriptions","organizations_url":"https://api.github.com/users/alpar-t/orgs","repos_url":"https://api.github.com/users/alpar-t/repos","events_url":"https://api.github.com/users/alpar-t/events{/privacy}","received_events_url":"https://api.github.com/users/alpar-t/received_events","type":"User","site_admin":false},"assignees":[{"login":"alpar-t","id":2565652,"node_id":"MDQ6VXNlcjI1NjU2NTI=","avatar_url":"https://avatars1.githubusercontent.com/u/2565652?v=4","gravatar_id":"","url":"https://api.github.com/users/alpar-t","html_url":"https://github.com/alpar-t","followers_url":"https://api.github.com/users/alpar-t/followers","following_url":"https://api.github.com/users/alpar-t/following{/other_user}","gists_url":"https://api.github.com/users/alpar-t/gists{/gist_id}","starred_url":"https://api.github.com/users/alpar-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpar-t/subscriptions","organizations_url":"https://api.github.com/users/alpar-t/orgs","repos_url":"https://api.github.com/users/alpar-t/repos","events_url":"https://api.github.com/users/alpar-t/events{/privacy}","received_events_url":"https://api.github.com/users/alpar-t/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2018-08-15T15:28:51Z","updated_at":"2020-11-11T21:50:36Z","closed_at":"2018-09-25T14:21:49Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"We should create a single metadata file such as for each version: \r\n\r\n```\r\nfeatures:\r\n    - rolling-upgrade \r\n    - fips\r\nversions:\r\n    7.0.0:     \r\n         released: false\r\n         latest-qualifier: alpha1\r\n         supports: [ 'rolling-upgrade', 'fips' ]\r\n         minimumJavaVersion: 8\r\n         maxJavaVersion: 11    \r\ntesting:\r\n    rolling-upgrade:\r\n         from: '5.6.0'  \r\n         project: ':qa:rolling-upgrade'\r\n         task: ''\r\n```\r\n\r\nThe actual fields in the final metadata will vary, we will only model what is needed, the above snippet is just a sample of how this _could_ end up. The key takeaway is that : \r\n   - the information is factual, fine grained and complete. All information required for deciding on tests should be present here. It's expected that the implementation that reads this meta data will have methods like `bwcVersions(feature)` , `javaVersion(feature, version)` etc so the tests don't have to make that decision locally. \r\n   - provides an (also) human readable summary of which features are supported where and how we test them \r\n   - allows for some level of automatic validation\r\n\r\nSteps: \r\n - [ ] consensus on the approach and format \r\n - [ ] start consuming these from tests and extending the metadata as we go \r\n - [ ]  write a task to validate that all tasks were generated and the dependency chain is correct for `bwcTests`  the task would check the task graph and error out if `bwcTests` is on it but not all testing tasks are (assume consistent task naming).\r\n- [ ] write a task to generate a `.dot`  graph to visualize the testing that is done \r\n\r\nReferences: \r\n  - #32128\r\n  - #32866","closed_by":{"login":"alpar-t","id":2565652,"node_id":"MDQ6VXNlcjI1NjU2NTI=","avatar_url":"https://avatars1.githubusercontent.com/u/2565652?v=4","gravatar_id":"","url":"https://api.github.com/users/alpar-t","html_url":"https://github.com/alpar-t","followers_url":"https://api.github.com/users/alpar-t/followers","following_url":"https://api.github.com/users/alpar-t/following{/other_user}","gists_url":"https://api.github.com/users/alpar-t/gists{/gist_id}","starred_url":"https://api.github.com/users/alpar-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpar-t/subscriptions","organizations_url":"https://api.github.com/users/alpar-t/orgs","repos_url":"https://api.github.com/users/alpar-t/repos","events_url":"https://api.github.com/users/alpar-t/events{/privacy}","received_events_url":"https://api.github.com/users/alpar-t/received_events","type":"User","site_admin":false},"performed_via_github_app":null}