[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/587987544","html_url":"https://github.com/elastic/elasticsearch/issues/52499#issuecomment-587987544","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52499","id":587987544,"node_id":"MDEyOklzc3VlQ29tbWVudDU4Nzk4NzU0NA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-02-19T01:23:46Z","updated_at":"2020-02-19T01:23:46Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra (:Core/Infra/Core)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/588558948","html_url":"https://github.com/elastic/elasticsearch/issues/52499#issuecomment-588558948","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52499","id":588558948,"node_id":"MDEyOklzc3VlQ29tbWVudDU4ODU1ODk0OA==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2020-02-20T01:12:45Z","updated_at":"2020-02-20T01:12:45Z","author_association":"MEMBER","body":"Of the two approaches here, I'm more in favor of the iterator. However I wonder if we could use a helper to extract the constructor based on arity (statically), and then `newInstance` on the constructor already takes in Object[]. We could also then statically fail if the arity does not match the number of registered args, which right now would not happen until a failure at runtime.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/589659926","html_url":"https://github.com/elastic/elasticsearch/issues/52499#issuecomment-589659926","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52499","id":589659926,"node_id":"MDEyOklzc3VlQ29tbWVudDU4OTY1OTkyNg==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2020-02-21T13:48:19Z","updated_at":"2020-02-21T13:48:19Z","author_association":"CONTRIBUTOR","body":"I didn't go with a map at first because I didn't want to add too much overhead. Maybe I was too cautious.... But your `Arguments` wrapper is *really* cute! It'd need to be super documented because it is sneaky, but I do like it.\r\n\r\nYou could make  ctors on `ConstructingObjectParser` that take `Function<Arguments, T>`  so you wouldn't need to explicitly build it. And deprecate the other ctors.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/589660787","html_url":"https://github.com/elastic/elasticsearch/issues/52499#issuecomment-589660787","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52499","id":589660787,"node_id":"MDEyOklzc3VlQ29tbWVudDU4OTY2MDc4Nw==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2020-02-21T13:50:40Z","updated_at":"2020-02-21T13:50:40Z","author_association":"CONTRIBUTOR","body":"> Of the two approaches here, I'm more in favor of the iterator. However I wonder if we could use a helper to extract the constructor based on arity (statically), and then `newInstance` on the constructor already takes in Object[]. We could also then statically fail if the arity does not match the number of registered args, which right now would not happen until a failure at runtime.\r\n\r\nI missed this comment. It is kind of what I was hoping we could try at some point honestly. It is a bit more involved, but I think it *could* be the lowest overhead, safest option.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/593635284","html_url":"https://github.com/elastic/elasticsearch/issues/52499#issuecomment-593635284","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52499","id":593635284,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzYzNTI4NA==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2020-03-02T21:35:51Z","updated_at":"2020-03-02T21:35:51Z","author_association":"MEMBER","body":"Interesting idea. I can try prototyping that as well. \r\n\r\nIf I understood your idea, we might lose the ability to convert parameters between parser and constructor easily thought. In some cases we need to do some simple conversion on parameters on the way in, iterator allows us to do it in the constructor. With Object[] we would need to replace Nth element of an array that again forces us to deal with magic numbers, etc.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/593648745","html_url":"https://github.com/elastic/elasticsearch/issues/52499#issuecomment-593648745","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52499","id":593648745,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzY0ODc0NQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2020-03-02T22:08:49Z","updated_at":"2020-03-02T22:08:49Z","author_association":"CONTRIBUTOR","body":"I think if we took a function reference *somehow* that'd be the cleanest thing from a usability standpoint. But I know that ain't easy.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/616752111","html_url":"https://github.com/elastic/elasticsearch/issues/52499#issuecomment-616752111","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52499","id":616752111,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNjc1MjExMQ==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2020-04-20T19:09:51Z","updated_at":"2020-04-20T19:09:51Z","author_association":"MEMBER","body":"I tried implementing @rjernst 's ideas as an external utility method, but it didn't go that well, so I ended up making another object parser. It shares 90% of code with ConstractingObjectParser, so I moved this code unchanged to a common abstract super class. Let me know what you think #55483","performed_via_github_app":null}]