{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/4491","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4491/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4491/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4491/events","html_url":"https://github.com/elastic/elasticsearch/issues/4491","id":24435180,"node_id":"MDU6SXNzdWUyNDQzNTE4MA==","number":4491,"title":"Include/Exclude Filtering Behavior","user":{"login":"RobCherry","id":3127491,"node_id":"MDQ6VXNlcjMxMjc0OTE=","avatar_url":"https://avatars0.githubusercontent.com/u/3127491?v=4","gravatar_id":"","url":"https://api.github.com/users/RobCherry","html_url":"https://github.com/RobCherry","followers_url":"https://api.github.com/users/RobCherry/followers","following_url":"https://api.github.com/users/RobCherry/following{/other_user}","gists_url":"https://api.github.com/users/RobCherry/gists{/gist_id}","starred_url":"https://api.github.com/users/RobCherry/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RobCherry/subscriptions","organizations_url":"https://api.github.com/users/RobCherry/orgs","repos_url":"https://api.github.com/users/RobCherry/repos","events_url":"https://api.github.com/users/RobCherry/events{/privacy}","received_events_url":"https://api.github.com/users/RobCherry/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"assignees":[{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false}],"milestone":null,"comments":8,"created_at":"2013-12-17T17:08:26Z","updated_at":"2014-08-15T12:39:50Z","closed_at":"2014-01-16T12:00:44Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Currently there is a bug in elasticsearch (https://github.com/elasticsearch/elasticsearch/issues/4047) where empty objects are not stored in `_source` when an include/exclude list is present.\n\nThis is because elasticsearch aggressively removes empty objects from the `_source`.\n\nFor example, if I have an object\n\n```\n{ 'data': { 'key': 'value' } }\n```\n\nthe following filters will all result in removing `data` from `_source`: `excludes = ['data']`, `excludes = ['data.*']`, `excludes = ['data.key']`, `excludes = ['*.key']`, `includes = ['data.other']`\n\nI believe this behavior is incorrect. I think that we should only remove an object if it is explicitly excluded (`excludes = ['data']`, `excludes = ['data.*']`) or if no elements are included (`includes = ['other_data.*']).  For situations where the object is referenced in an includes list but there is no match, I think the object should remain as an empty object (`includes = ['data.other']`).\n\nThis use case makes more sense if we are talking about some nested object that is indexed...\n\nExample:\n\n```\n{\n  \"name\": \"John Doe\",\n  \"identifiers\": {\n    \"ssn\": \"987-65-4320\",\n    \"facebook_uid\": \"12345\",\n    \"twitter_uid\": \"54321\"\n  }\n```\n\nand `excludes = [ \"*.ssn\"]` would drop the entire `identifiers` object if the only key was `ssn` for that object, even if we want the empty identifiers object to remain under all circumstances.  We have the same problem with `includes = [\"*.instagram_uid\"]`.\n","closed_by":{"login":"RobCherry","id":3127491,"node_id":"MDQ6VXNlcjMxMjc0OTE=","avatar_url":"https://avatars0.githubusercontent.com/u/3127491?v=4","gravatar_id":"","url":"https://api.github.com/users/RobCherry","html_url":"https://github.com/RobCherry","followers_url":"https://api.github.com/users/RobCherry/followers","following_url":"https://api.github.com/users/RobCherry/following{/other_user}","gists_url":"https://api.github.com/users/RobCherry/gists{/gist_id}","starred_url":"https://api.github.com/users/RobCherry/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RobCherry/subscriptions","organizations_url":"https://api.github.com/users/RobCherry/orgs","repos_url":"https://api.github.com/users/RobCherry/repos","events_url":"https://api.github.com/users/RobCherry/events{/privacy}","received_events_url":"https://api.github.com/users/RobCherry/received_events","type":"User","site_admin":false},"performed_via_github_app":null}