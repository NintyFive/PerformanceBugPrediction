{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/10127","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10127/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10127/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10127/events","html_url":"https://github.com/elastic/elasticsearch/issues/10127","id":62368662,"node_id":"MDU6SXNzdWU2MjM2ODY2Mg==","number":10127,"title":"Parent/child failing when using the same type in child and parent","user":{"login":"parapar","id":9556019,"node_id":"MDQ6VXNlcjk1NTYwMTk=","avatar_url":"https://avatars2.githubusercontent.com/u/9556019?v=4","gravatar_id":"","url":"https://api.github.com/users/parapar","html_url":"https://github.com/parapar","followers_url":"https://api.github.com/users/parapar/followers","following_url":"https://api.github.com/users/parapar/following{/other_user}","gists_url":"https://api.github.com/users/parapar/gists{/gist_id}","starred_url":"https://api.github.com/users/parapar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/parapar/subscriptions","organizations_url":"https://api.github.com/users/parapar/orgs","repos_url":"https://api.github.com/users/parapar/repos","events_url":"https://api.github.com/users/parapar/events{/privacy}","received_events_url":"https://api.github.com/users/parapar/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-17T11:21:15Z","updated_at":"2015-04-04T16:18:22Z","closed_at":"2015-04-04T16:18:22Z","author_association":"NONE","active_lock_reason":null,"body":"I am trying to model a employee hierarchy where every employee can be a manager of a team of employees and, at the same time, she can be part of a team managed by other employee:\n\ncurl -XPOST 'http://localhost:9200/manager_employee' -d '{\n   \"mappings\": {\n       \"employee\": {\n           \"_parent\": {\n               \"type\": \"employee\"\n           },\n           \"properties\": {\n               \"name\": {\n                   \"type\": \"string\"\n               }\n           }\n       }\n   }\n}'\n\nThe problem is when modeling a employee which is not managed by anyone (let's think about the CEO). I tried both alternatives bellow: \n\ncurl -s -XPOST localhost:9200/_bulk --data-binary '\n{ \"index\" : { \"_index\" : \"manager_employee\", \"_type\" : \"employee\", \"_id\" : \"employee1\" , _parent:\"employee1\"} }\n{ \"name\" : \"chris\"}\n{ \"index\" : { \"_index\" : \"manager_employee\", \"_type\" : \"employee\", \"_id\" : \"employee2\" , _parent:\"employee1\"} }\n{ \"name\" : \"joseph\" }\n{ \"index\" : { \"_index\" : \"manager_employee\", \"_type\" : \"employee\", \"_id\" : \"employee3\" , _parent:\"employee1\"} }\n{ \"name\" : \"john\" }'\n\ni.e., the CEO is managed by herself and \n\ncurl -s -XPOST localhost:9200/_bulk --data-binary '\n{ \"index\" : { \"_index\" : \"manager_employee\", \"_type\" : \"employee\", \"_id\" : \"employee1\" , _parent:\"dummyID1\"} }\n{ \"name\" : \"chris\"}\n{ \"index\" : { \"_index\" : \"manager_employee\", \"_type\" : \"employee\", \"_id\" : \"employee2\" , _parent:\"employee1\", _routing:\"dummyID1\"} }\n{ \"name\" : \"joseph\" }\n{ \"index\" : { \"_index\" : \"manager_employee\", \"_type\" : \"employee\", \"_id\" : \"employee3\" , _parent:\"employee1\", _routing:\"dummyID1\"} }\n{ \"name\" : \"john\" }'\n\nthe CEO is managed by some dummy manager\n\nIn both cases: \n\ncurl -XGET 'localhost:9200/manager_employee/employee/_search' -d '{\n\"filter\" : {\n   \"has_child\" : {\n       \"child_type\" : \"employee\",\n       \"query\" : {\n           \"term\" : {\n               \"employee.name\" : \"john\"\n           }\n       }\n   }}}'\n\nworks returning chris, but the other side of the relations fails: \n\ncurl -XGET 'localhost:9200/manager_employee/employee/_search' -d '{\n\"filter\" : {\n   \"has_parent\" : {\n       \"parent_type\" : \"employee\",\n       \"query\" : {\n           \"term\" : {\n               \"employee.name\" : \"chris\"\n           }\n       }\n   }}}'\n\nreturns an empty hit set. \n\nIs there any other way (without defining different) types of implementing this? Any workaround? Is it a bug that the relation is correctly mapped from children to parent but not from parent to children when using the same type in both sides of the relation? \n\nThank you in advance, \n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}