[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/142064004","html_url":"https://github.com/elastic/elasticsearch/issues/13684#issuecomment-142064004","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13684","id":142064004,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MjA2NDAwNA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-09-21T18:09:35Z","updated_at":"2015-09-21T18:09:35Z","author_association":"CONTRIBUTOR","body":"> I would have expected either\n> 1) the same result for scrolled searches vs non scrolled 'normal' searches, or alternatively\n> 2) an error message indicating that 'from' is not supported for scrolled searches\n\nI agree with choosing from one of your two options.  I'm leaning towards option 2, because I'm not sure that `from` is useful in a scroll request and also, having a high `from` value may make the intial request very heavy.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/142563311","html_url":"https://github.com/elastic/elasticsearch/issues/13684#issuecomment-142563311","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13684","id":142563311,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MjU2MzMxMQ==","user":{"login":"drallax","id":14543491,"node_id":"MDQ6VXNlcjE0NTQzNDkx","avatar_url":"https://avatars1.githubusercontent.com/u/14543491?v=4","gravatar_id":"","url":"https://api.github.com/users/drallax","html_url":"https://github.com/drallax","followers_url":"https://api.github.com/users/drallax/followers","following_url":"https://api.github.com/users/drallax/following{/other_user}","gists_url":"https://api.github.com/users/drallax/gists{/gist_id}","starred_url":"https://api.github.com/users/drallax/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drallax/subscriptions","organizations_url":"https://api.github.com/users/drallax/orgs","repos_url":"https://api.github.com/users/drallax/repos","events_url":"https://api.github.com/users/drallax/events{/privacy}","received_events_url":"https://api.github.com/users/drallax/received_events","type":"User","site_admin":false},"created_at":"2015-09-23T10:45:08Z","updated_at":"2015-09-23T10:45:08Z","author_association":"NONE","body":"For us, a scrolled search that supports `from` would be a useful thing to have.\n\nIt would allow us to return arbitrary slices of large result sets, or at least slices whose beginning is not too far removed (say 10,000 or 100,000 documents) from the first result.\nIn practice, i expect only moderately sized slices (of say a 1000 documents) when `from`  increases, \nbut since our documents can be largish, it would be nice if we can use scrolled searches,\nto process e.g. 100 documents at a time to prevent running out of memory.\n\nI suppose we can work around this ourselves by either\n- adjusting the ES query to return from+size results and skipping the first `from` results ourselves, or\n- performing an initial search that finds the `uid` of the `from`'th result and then perform a scrolled search with an adapted query that only matches documents with larger uid's.\n\nBut it would probably be much more efficient if ES could do something like this internally?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/176298630","html_url":"https://github.com/elastic/elasticsearch/issues/13684#issuecomment-176298630","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13684","id":176298630,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjI5ODYzMA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-01-28T17:42:51Z","updated_at":"2016-01-28T17:42:51Z","author_association":"CONTRIBUTOR","body":"It sounds like the newly added search_after parameter would be a better solution. See https://github.com/elastic/elasticsearch/issues/8192\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/178056930","html_url":"https://github.com/elastic/elasticsearch/issues/13684#issuecomment-178056930","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13684","id":178056930,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODA1NjkzMA==","user":{"login":"drallax","id":14543491,"node_id":"MDQ6VXNlcjE0NTQzNDkx","avatar_url":"https://avatars1.githubusercontent.com/u/14543491?v=4","gravatar_id":"","url":"https://api.github.com/users/drallax","html_url":"https://github.com/drallax","followers_url":"https://api.github.com/users/drallax/followers","following_url":"https://api.github.com/users/drallax/following{/other_user}","gists_url":"https://api.github.com/users/drallax/gists{/gist_id}","starred_url":"https://api.github.com/users/drallax/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drallax/subscriptions","organizations_url":"https://api.github.com/users/drallax/orgs","repos_url":"https://api.github.com/users/drallax/repos","events_url":"https://api.github.com/users/drallax/events{/privacy}","received_events_url":"https://api.github.com/users/drallax/received_events","type":"User","site_admin":false},"created_at":"2016-02-01T16:29:40Z","updated_at":"2016-02-01T16:29:40Z","author_association":"NONE","body":"after reading the search_after docs, i am not sure how it would help retrieving documents\nstarting from the n'th hit, without first consuming the n previous unwanted documents, \nwhich would be slow?\n\n(i am probably missing something here, but i wonder what search_after is actually \nuseful for since ES already has a range query that can be used to search after some term?)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/178079373","html_url":"https://github.com/elastic/elasticsearch/issues/13684#issuecomment-178079373","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13684","id":178079373,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODA3OTM3Mw==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-02-01T17:23:17Z","updated_at":"2016-02-01T17:23:17Z","author_association":"MEMBER","body":"> after reading the search_after docs, i am not sure how it would help retrieving documents\n> starting from the n'th hit, without first consuming the n previous unwanted documents, \n> which would be slow?\n\nUnfortunately there is no magic and retrieving documents starting from the n'th hit is heavy in terms of memory and the scroll API is not designed for that (it is designed to scroll a query from the start efficiently). So what @clintongormley is saying is that you could:\n- do an initial request with from=N and a sort compatible with `search_after`\n- ... and then use `search_after` to scroll the results from the N'th hit.\n  `search_after` is much faster than using a range query, it is used to sort the top documents and not to match documents. \n","performed_via_github_app":null}]