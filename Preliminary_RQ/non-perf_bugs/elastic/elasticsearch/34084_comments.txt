[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/424728434","html_url":"https://github.com/elastic/elasticsearch/issues/34084#issuecomment-424728434","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34084","id":424728434,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNDcyODQzNA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-09-26T14:06:19Z","updated_at":"2018-09-26T14:06:19Z","author_association":"COLLABORATOR","body":"Pinging @elastic/ml-core","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/425025324","html_url":"https://github.com/elastic/elasticsearch/issues/34084#issuecomment-425025324","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34084","id":425025324,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNTAyNTMyNA==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2018-09-27T09:34:22Z","updated_at":"2018-09-27T09:34:22Z","author_association":"CONTRIBUTOR","body":"I agree that since we can't access the job config document from within the allocation decision there's no longer any point storing established model memory in it, so it should be removed (tolerated by the job parser for BWC purposes until 8.0 though).  I only put it in the job config in the first place because it needed to be available to the allocation decision and the job task status had a strict parser.\r\n\r\nCore Elasticsearch has a similar problem for allocating shards to nodes.  The master node needs an up-to-date view of how much disk space each data node currently has.  This problem is solved by the [`InternalClusterInfoService` class](https://github.com/elastic/elasticsearch/blob/cb4cdf17f0fc09c5066c8fadc64becf0b5d3cc73/server/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java#L54).  I think we should add a similar class to the ML plugin, say `MlClusterInfoService`, keeping the name generic as one day we might want to collect something other than memory information.  (We can't easily extend `InternalClusterInfoService` as it's not part of X-Pack.)\r\n\r\nOnce established model memory for each job is held in `MlClusterInfoService` we don't need to record it on any documents, as the definition is either `analysis_limits.model_memory_limit` or the `model_size_bytes` from the most recent `model_size_stats` document, and both these numbers can easily be obtained by anyone who wants to know them.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/426281786","html_url":"https://github.com/elastic/elasticsearch/issues/34084#issuecomment-426281786","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34084","id":426281786,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNjI4MTc4Ng==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2018-10-02T13:52:16Z","updated_at":"2018-10-02T13:52:16Z","author_association":"CONTRIBUTOR","body":"I'll have a go at implementing the idea from https://github.com/elastic/elasticsearch/issues/34084#issuecomment-425025324","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/433434348","html_url":"https://github.com/elastic/elasticsearch/issues/34084#issuecomment-433434348","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34084","id":433434348,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMzQzNDM0OA==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2018-10-26T14:50:24Z","updated_at":"2018-10-26T14:50:24Z","author_association":"CONTRIBUTOR","body":"I had a closer look at `InternalClusterInfoService` and we don't actually need our service to be as complex.  `InternalClusterInfoService` has to make a request to every node periodically to get its latest disk space.  But our ML task memory service doesn't actually need to communicate with every node.  It can just periodically kick off async searches for the relevant `model_size_stats` documents from the master node.\r\n\r\nThe process for making sure the ML task memory service has a reasonable value for each active ML task can be:\r\n\r\n1. Each job registers its memory requirement with the ML task memory service on opening.  There is already code that gets the established model memory on opening a job created in 6.1 or earlier and sends the value found to an `UpdateJobAction`.  This can be changed to always run on opening any job and instead send the value to a new master node action that updates the ML task memory service.\r\n2. Periodically iterate all ML persistent tasks that require native memory and run the search that finds the latest memory requirement.\r\n\r\nThen the `TransportOpenJobAction.OpenJobPersistentTasksExecutor` will have a reference to this new ML task memory service, so will be able to use the information in it to allocate the jobs.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/448540736","html_url":"https://github.com/elastic/elasticsearch/issues/34084#issuecomment-448540736","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34084","id":448540736,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0ODU0MDczNg==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2018-12-19T10:10:59Z","updated_at":"2018-12-19T10:10:59Z","author_association":"CONTRIBUTOR","body":"Fixed by #36069","performed_via_github_app":null}]