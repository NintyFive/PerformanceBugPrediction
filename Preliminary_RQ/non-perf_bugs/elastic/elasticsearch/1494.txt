{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/1494","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1494/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1494/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1494/events","html_url":"https://github.com/elastic/elasticsearch/issues/1494","id":2335834,"node_id":"MDU6SXNzdWUyMzM1ODM0","number":1494,"title":"Infinite loop in DynamicChannelBuffer.ensureWritableBytes","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"assignees":[{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2011-11-23T23:16:17Z","updated_at":"2014-07-13T08:51:43Z","closed_at":"2014-07-13T08:06:41Z","author_association":"MEMBER","active_lock_reason":null,"body":"Frames larger than 1GB can trigger an infinite loop in [DynamicChannelBuffer.ensureWritableBytes](https://github.com/netty/netty/blob/3.2/src/main/java/org/jboss/netty/buffer/DynamicChannelBuffer.java#L80). It happens because of integer overflow in newCapacity calculation for any minNewCapacity > 1073741824.\n\nTo reproduce:\n\n1) Start ES with enough memory to accomodate 1GB of data.\n\n```\n$ ES_MAX_MEM=2048m bin/elasticsearch -f\n```\n\n2) Execute the following python script \n\n``` Python\nimport socket\nimport struct\n\nsize = 1073741824\nchunk = 1024\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.connect((\"localhost\", 9300))\n# Send an integer equal to or larger than 1073741824 or large \n# so SizeHeaderFrameDecoder would start collecting data\ns.send(struct.pack(\"!l\",size))\n# followed by at least 1GB of data to trigger overflow\nfor x in range(size / chunk):\n    s.send(\" \" * chunk)\ns.close()\n```\n\n3) Run jstack on elasticsearch pid\n\n```\n$ jstack 5475 | grep -A 20 -B 2 ensureWritableBytes \n\"New I/O server worker #1-8\" daemon prio=5 tid=112092000 nid=0x10d921000 runnable [10d920000]\n   java.lang.Thread.State: RUNNABLE\n    at org.elasticsearch.common.netty.buffer.DynamicChannelBuffer.ensureWritableBytes(DynamicChannelBuffer.java:81)\n    at org.elasticsearch.common.netty.buffer.DynamicChannelBuffer.writeBytes(DynamicChannelBuffer.java:239)\n    at org.elasticsearch.common.netty.buffer.AbstractChannelBuffer.writeBytes(AbstractChannelBuffer.java:457)\n    at org.elasticsearch.common.netty.buffer.AbstractChannelBuffer.writeBytes(AbstractChannelBuffer.java:450)\n    at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.messageReceived(FrameDecoder.java:213)\n    at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:80)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:783)\n    at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:81)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:274)\n    at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:261)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.read(NioWorker.java:349)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.processSelectedKeys(NioWorker.java:280)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.run(NioWorker.java:200)\n    at org.elasticsearch.common.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\n    at org.elasticsearch.common.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:44)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n    at java.lang.Thread.run(Thread.java:680)\n```\n\nThis issue was observed on elasticsearch 0.17.7 during shard relocation.\n","closed_by":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"performed_via_github_app":null}