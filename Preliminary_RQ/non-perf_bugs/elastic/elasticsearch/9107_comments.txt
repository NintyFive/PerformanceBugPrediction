[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/69310513","html_url":"https://github.com/elastic/elasticsearch/issues/9107#issuecomment-69310513","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9107","id":69310513,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MzEwNTEz","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-01-09T09:18:47Z","updated_at":"2015-01-09T09:18:47Z","author_association":"CONTRIBUTOR","body":"+1 on not starting threads in the constructor. So we would need to have a start() method and start threads in this start method, is it the idea you had in mind @javanna ?\n\nI'm making it an adoptme.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/69312589","html_url":"https://github.com/elastic/elasticsearch/issues/9107#issuecomment-69312589","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9107","id":69312589,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MzEyNTg5","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2015-01-09T09:39:45Z","updated_at":"2015-01-09T09:39:45Z","author_association":"MEMBER","body":">  So we would need to have a start() method and start threads in this start method\n\nYes this is what I had in mind and I gave it a quick try but found various other constructors that call `threadPool.schedule()` hence they rely on the scheduler thread to be already initialized. All those `schedule` calls would need to be delayed as well, not sure if this would be it for this change though :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/69312785","html_url":"https://github.com/elastic/elasticsearch/issues/9107#issuecomment-69312785","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9107","id":69312785,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MzEyNzg1","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-01-09T09:41:43Z","updated_at":"2015-01-09T09:41:43Z","author_association":"CONTRIBUTOR","body":"Then maybe the ThreadPool creation should be moved outside of the hands of guice? For instance we could create it ourselves, then tell guice to use the provided instance for its injection, and finally close it if the guice injection failed?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/69313177","html_url":"https://github.com/elastic/elasticsearch/issues/9107#issuecomment-69313177","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9107","id":69313177,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MzEzMTc3","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2015-01-09T09:45:55Z","updated_at":"2015-01-09T09:45:55Z","author_association":"MEMBER","body":"sounds good to me!\n","performed_via_github_app":null}]