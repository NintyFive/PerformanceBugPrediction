[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/420160529","html_url":"https://github.com/elastic/elasticsearch/issues/33592#issuecomment-420160529","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33592","id":420160529,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMDE2MDUyOQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-09-11T06:22:19Z","updated_at":"2018-09-11T06:22:19Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/420162500","html_url":"https://github.com/elastic/elasticsearch/issues/33592#issuecomment-420162500","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33592","id":420162500,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMDE2MjUwMA==","user":{"login":"yagizdemirsoy","id":24639244,"node_id":"MDQ6VXNlcjI0NjM5MjQ0","avatar_url":"https://avatars3.githubusercontent.com/u/24639244?v=4","gravatar_id":"","url":"https://api.github.com/users/yagizdemirsoy","html_url":"https://github.com/yagizdemirsoy","followers_url":"https://api.github.com/users/yagizdemirsoy/followers","following_url":"https://api.github.com/users/yagizdemirsoy/following{/other_user}","gists_url":"https://api.github.com/users/yagizdemirsoy/gists{/gist_id}","starred_url":"https://api.github.com/users/yagizdemirsoy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yagizdemirsoy/subscriptions","organizations_url":"https://api.github.com/users/yagizdemirsoy/orgs","repos_url":"https://api.github.com/users/yagizdemirsoy/repos","events_url":"https://api.github.com/users/yagizdemirsoy/events{/privacy}","received_events_url":"https://api.github.com/users/yagizdemirsoy/received_events","type":"User","site_admin":false},"created_at":"2018-09-11T06:31:32Z","updated_at":"2018-09-11T06:31:32Z","author_association":"NONE","body":"+1","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/420641241","html_url":"https://github.com/elastic/elasticsearch/issues/33592#issuecomment-420641241","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33592","id":420641241,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMDY0MTI0MQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-09-12T13:07:13Z","updated_at":"2018-09-12T13:07:13Z","author_association":"CONTRIBUTOR","body":"Leaving it open for now since it was marked `team-discuss` but I don't think we should support this feature. Instead, when the relevant sort value can be known at index time like here, it should be added to the parent document.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/420658047","html_url":"https://github.com/elastic/elasticsearch/issues/33592#issuecomment-420658047","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33592","id":420658047,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMDY1ODA0Nw==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2018-09-12T13:57:46Z","updated_at":"2018-09-12T13:57:46Z","author_association":"MEMBER","body":"@jpountz the issue with the index time solution is that it doesn't work if you have a nested filter in the query. In this case the relevant sort value cannot be inferred at indexing time. The idea with this `first` mode is that users can sort their nested documents in a way that makes the most relevant first and then use this mode to select the value from the first matching children. Since we preserve the order of nested documents when we index them, this solution should work fine even if nested filters are present.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/420659084","html_url":"https://github.com/elastic/elasticsearch/issues/33592#issuecomment-420659084","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33592","id":420659084,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMDY1OTA4NA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-09-12T14:00:34Z","updated_at":"2018-09-12T14:00:34Z","author_association":"CONTRIBUTOR","body":"@jimczi Thanks for clarifying, this proposal makes sense to me.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/420661112","html_url":"https://github.com/elastic/elasticsearch/issues/33592#issuecomment-420661112","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33592","id":420661112,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMDY2MTExMg==","user":{"login":"erayarslan","id":1534649,"node_id":"MDQ6VXNlcjE1MzQ2NDk=","avatar_url":"https://avatars1.githubusercontent.com/u/1534649?v=4","gravatar_id":"","url":"https://api.github.com/users/erayarslan","html_url":"https://github.com/erayarslan","followers_url":"https://api.github.com/users/erayarslan/followers","following_url":"https://api.github.com/users/erayarslan/following{/other_user}","gists_url":"https://api.github.com/users/erayarslan/gists{/gist_id}","starred_url":"https://api.github.com/users/erayarslan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erayarslan/subscriptions","organizations_url":"https://api.github.com/users/erayarslan/orgs","repos_url":"https://api.github.com/users/erayarslan/repos","events_url":"https://api.github.com/users/erayarslan/events{/privacy}","received_events_url":"https://api.github.com/users/erayarslan/received_events","type":"User","site_admin":false},"created_at":"2018-09-12T14:06:07Z","updated_at":"2018-09-12T14:06:07Z","author_association":"CONTRIBUTOR","body":"Thank you @jimczi for clarification.\r\n\r\nHello @jpountz,\r\n\r\nLet me try to explain our problem with more details:\r\n\r\nThis is a business critical problem for us and this can also be a problem for other e-commerce compaines showing multiple listings on their site.  Currently when we sort by ascending or descending, the price of the product changes because elasticsearch sorts according to lowest or highes priced nested document. What we want to do is to always show same listing's price.\r\n\r\n```\r\n{\r\n  \"name\": \"red\",\r\n  \"myNestedList\": [\r\n    {\r\n      \"name\": \"red_1\",\r\n      \"price\": 10,\r\n      \"sortId\": 1\r\n    },\r\n    {\r\n      \"name\": \"red_2\",\r\n      \"price\": 25,\r\n      \"sortId\": 2\r\n    },\r\n    {\r\n      \"name\": \"red_3\",\r\n      \"price\": 30,\r\n      \"sortId\": 3\r\n    },\r\n    {\r\n      \"name\": \"red_4\",\r\n      \"price\": 40,\r\n      \"sortId\": 4\r\n    },\r\n    {\r\n      \"name\": \"red_5\",\r\n      \"price\": 5,\r\n      \"sortId\": 5\r\n    } \r\n  ]\r\n}\r\n```\r\n\r\nWhen we look at the document above;\r\n\r\nIf we add it to the parent document at index time, this document will be always sorted according to red_1's price. However,\r\nif we apply a nested range filter to price field between 27 and 42, sorting should work according to price of red_3(which has lowest sort id after filter applied). So price that we select for sorting changes dynamically accoring to filters applied. We won't have this flexibility if we put it to parent document at index time.\r\n\r\nCurrently there is no way to do this kind of sorting. If we had sort mode `first`, we could sort parent documents according to the price of min priced nested document with a query like this(Nested documents will already be sorted at index time by sortId):\r\n\r\n```\r\n{\r\n  \"sort\": [\r\n    {\r\n      \"myNestedList.price\": {\r\n        \"mode\": \"first\",\r\n        \"order\": \"asc\",\r\n        \"nested\": {\r\n          \"path\": \"myNestedList\"\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/420684513","html_url":"https://github.com/elastic/elasticsearch/issues/33592#issuecomment-420684513","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33592","id":420684513,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMDY4NDUxMw==","user":{"login":"volkantagal","id":9904926,"node_id":"MDQ6VXNlcjk5MDQ5MjY=","avatar_url":"https://avatars2.githubusercontent.com/u/9904926?v=4","gravatar_id":"","url":"https://api.github.com/users/volkantagal","html_url":"https://github.com/volkantagal","followers_url":"https://api.github.com/users/volkantagal/followers","following_url":"https://api.github.com/users/volkantagal/following{/other_user}","gists_url":"https://api.github.com/users/volkantagal/gists{/gist_id}","starred_url":"https://api.github.com/users/volkantagal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/volkantagal/subscriptions","organizations_url":"https://api.github.com/users/volkantagal/orgs","repos_url":"https://api.github.com/users/volkantagal/repos","events_url":"https://api.github.com/users/volkantagal/events{/privacy}","received_events_url":"https://api.github.com/users/volkantagal/received_events","type":"User","site_admin":false},"created_at":"2018-09-12T15:09:13Z","updated_at":"2018-09-12T15:09:13Z","author_association":"NONE","body":"+1","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/422683438","html_url":"https://github.com/elastic/elasticsearch/issues/33592#issuecomment-422683438","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33592","id":422683438,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMjY4MzQzOA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2018-09-19T07:11:20Z","updated_at":"2018-09-19T07:11:20Z","author_association":"MEMBER","body":"We discussed this feature request in our internal meeting. We agreed that we want to support this new mode but only for `nested` sort. The order of `nested` documents is preserved in the index so a `first` mode makes sense. However for numeric fields the order is not preserved, multi-values are sorted so the first value is always the smallest. For this reason we need to find a way to restrict this mode to `nested` sort only. ","performed_via_github_app":null}]