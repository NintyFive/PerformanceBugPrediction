[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/168700473","html_url":"https://github.com/elastic/elasticsearch/issues/15751#issuecomment-168700473","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15751","id":168700473,"node_id":"MDEyOklzc3VlQ29tbWVudDE2ODcwMDQ3Mw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-01-04T15:04:13Z","updated_at":"2016-01-04T15:04:13Z","author_association":"CONTRIBUTOR","body":"+1\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/169470603","html_url":"https://github.com/elastic/elasticsearch/issues/15751#issuecomment-169470603","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15751","id":169470603,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQ3MDYwMw==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2016-01-06T21:36:58Z","updated_at":"2016-01-06T21:36:58Z","author_association":"MEMBER","body":"I started to look at this and it is a bit harder then I though. Basically during parsing of the percolate document we use a reference to an existing DocumentMapper and during parsing if a new field is discovered that DocumentMapper is updated. For the percolator (and term vectors api) we kind of want a read only copy of the DocumentMapper and if the document being parsed holds unknown fields it should thrown an exception.\n\nWe could change the `dynamic` property on the root mapper, because that option is updatable, but that isn't really an option, because DocumentMapper instances are being shared.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/169761100","html_url":"https://github.com/elastic/elasticsearch/issues/15751#issuecomment-169761100","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15751","id":169761100,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTc2MTEwMA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-01-07T18:16:29Z","updated_at":"2016-01-07T18:16:29Z","author_association":"CONTRIBUTOR","body":"> during parsing of the percolate document we use a reference to an existing DocumentMapper and during parsing if a new field is discovered that DocumentMapper is updated\n\nHmm I don't think this is correct. Document parsing returns a parsed document and a mapping update, so we would just have to ignore the mapping update I think?\n\n``` diff\ndiff --git a/core/src/main/java/org/elasticsearch/percolator/PercolateDocumentParser.java b/core/src/main/java/org/elasticsearch/percolator/PercolateDocumentParser.java\nindex 6733ebd..bdea794 100644\n--- a/core/src/main/java/org/elasticsearch/percolator/PercolateDocumentParser.java\n+++ b/core/src/main/java/org/elasticsearch/percolator/PercolateDocumentParser.java\n@@ -49,14 +49,12 @@ public class PercolateDocumentParser {\n     private final HighlightPhase highlightPhase;\n     private final SortParseElement sortParseElement;\n     private final AggregationPhase aggregationPhase;\n-    private final MappingUpdatedAction mappingUpdatedAction;\n\n     @Inject\n-    public PercolateDocumentParser(HighlightPhase highlightPhase, SortParseElement sortParseElement, AggregationPhase aggregationPhase, MappingUpdatedAction mappingUpdatedAction) {\n+    public PercolateDocumentParser(HighlightPhase highlightPhase, SortParseElement sortParseElement, AggregationPhase aggregationPhase) {\n         this.highlightPhase = highlightPhase;\n         this.sortParseElement = sortParseElement;\n         this.aggregationPhase = aggregationPhase;\n-        this.mappingUpdatedAction = mappingUpdatedAction;\n     }\n\n     public ParsedDocument parse(PercolateShardRequest request, PercolateContext context, MapperService mapperService, QueryShardContext queryShardContext) {\n@@ -98,9 +96,6 @@ public class PercolateDocumentParser {\n                         if (docMapper.getMapping() != null) {\n                             doc.addDynamicMappingsUpdate(docMapper.getMapping());\n                         }\n-                        if (doc.dynamicMappingsUpdate() != null) {\n-                            mappingUpdatedAction.updateMappingOnMasterSynchronously(request.shardId().getIndex(), request.documentType(), doc.dynamicMappingsUpdate());\n-                        }\n                         // the document parsing exists the \"doc\" object, so we need to set the new current field.\n                         currentFieldName = parser.currentName();\n                     }\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172569997","html_url":"https://github.com/elastic/elasticsearch/issues/15751#issuecomment-172569997","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15751","id":172569997,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjU2OTk5Nw==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2016-01-18T16:00:55Z","updated_at":"2016-01-18T16:00:55Z","author_association":"MEMBER","body":"@jpountz right this change is straight forward. I do wonder if we should fail the percolate request if the document to be percolated contains unmapped fields to avoid unexpected behaviour? If so, should have an `ignore_unmapped` setting like we have with sorting?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172575350","html_url":"https://github.com/elastic/elasticsearch/issues/15751#issuecomment-172575350","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15751","id":172575350,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjU3NTM1MA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-01-18T16:19:37Z","updated_at":"2016-01-18T16:19:37Z","author_association":"CONTRIBUTOR","body":"I am wondering that this should not be necessary: since we require that fields are mapped when indexing queries, then we would only get dynamic mapping updates for fields that are not used by queries and thus do not matter for matching?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172610150","html_url":"https://github.com/elastic/elasticsearch/issues/15751#issuecomment-172610150","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15751","id":172610150,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjYxMDE1MA==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2016-01-18T18:12:30Z","updated_at":"2016-01-18T18:12:30Z","author_association":"MEMBER","body":"Agreed, we shouldn't worry about unused fields.\n","performed_via_github_app":null}]