{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/42813","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42813/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42813/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42813/events","html_url":"https://github.com/elastic/elasticsearch/issues/42813","id":451620173,"node_id":"MDU6SXNzdWU0NTE2MjAxNzM=","number":42813,"title":"Sorting nested_filters don't cache filters properly","user":{"login":"henryptung","id":1700335,"node_id":"MDQ6VXNlcjE3MDAzMzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1700335?v=4","gravatar_id":"","url":"https://api.github.com/users/henryptung","html_url":"https://github.com/henryptung","followers_url":"https://api.github.com/users/henryptung/followers","following_url":"https://api.github.com/users/henryptung/following{/other_user}","gists_url":"https://api.github.com/users/henryptung/gists{/gist_id}","starred_url":"https://api.github.com/users/henryptung/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/henryptung/subscriptions","organizations_url":"https://api.github.com/users/henryptung/orgs","repos_url":"https://api.github.com/users/henryptung/repos","events_url":"https://api.github.com/users/henryptung/events{/privacy}","received_events_url":"https://api.github.com/users/henryptung/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-06-03T18:15:58Z","updated_at":"2019-06-10T18:58:46Z","closed_at":"2019-06-06T18:21:17Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The problem seems to originate in v5.x. I can submit a PR later today with the proposed fix, but would request a backport to v6.x (ideally, v6.4.x) specifically since that's what we're currently building against (not sure what the procedure is for backported fixes).\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): v6.4.0\r\n\r\n**Plugins installed**: [search-guard](https://github.com/floragunncom/search-guard), custom internal plugins\r\n\r\n**JVM version** (`java -version`):\r\n```\r\njava version \"1.8.0_144\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_144-b01)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.144-b01, mixed mode)\r\n```\r\n\r\n**OS version** (`uname -a` if on a Unix-like system):\r\n`Linux <hostname> 2.6.32-754.6.3.el6.x86_64 #1 SMP Tue Oct 9 17:27:49 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux`\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nExpect nested filters under `sort` to reuse already-computed filter entries in the query cache (considering [recommendation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-sort.html#nested-sorting) to repeat query filter under sort). Instead, nested filters are recomputed into the [Lucene default cache](https://github.com/apache/lucene-solr/commit/db6083e2557dbf137f5f91ed4c085ebb886f67e4) due to the following change:\r\n\r\nhttps://github.com/elastic/elasticsearch/commit/a4b5fbedb886f85837a48c4a895f9c7d9a8c4094\r\n\r\nThis causes extra cache churn and poor performance. For reference, when testing with a fork of ES 6.4.0 pushing the ES query cache down through `QueryShardContext`, performance improved from ~22 seconds to ~3-4 seconds on a heavy query.\r\n\r\n**Steps to reproduce**:\r\n\r\nPlease include a *minimal* but *complete* recreation of the problem, including\r\n(e.g.) index creation, mappings, settings, query etc.  The easier you make for\r\nus to reproduce it, the more likely that somebody will take the time to look at it.\r\n\r\n 1. Create any index with a nested mapping containing a sortable (e.g. numeric) field.\r\n 2. Index documents with IDs `row-{i}`, each with two subdocuments with field values `{i}` and `-{i}`.\r\n 3. Set breakpoint on [this line](https://github.com/elastic/elasticsearch/commit/a4b5fbedb886f85837a48c4a895f9c7d9a8c4094#diff-027f5b2091ccafba0df417a1c7db46a8R149).\r\n 3. Issue queries filtering for and sorting on subdocuments with positive values only. Repeat until caching occurs.\r\n 4. Observe the default Lucene query cache being used, rather than the `ElasticsearchLRUQueryCache`.","closed_by":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}