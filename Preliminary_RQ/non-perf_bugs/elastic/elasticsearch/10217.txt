{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/10217","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10217/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10217/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10217/events","html_url":"https://github.com/elastic/elasticsearch/issues/10217","id":63624736,"node_id":"MDU6SXNzdWU2MzYyNDczNg==","number":10217,"title":"Refactor parsing of queries/filters, aggs, suggester APIs","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":33660,"node_id":"MDU6TGFiZWwzMzY2MA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebreaking","name":">breaking","color":"d93f0b","default":false,"description":null},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2015-03-23T04:43:40Z","updated_at":"2018-02-14T13:41:31Z","closed_at":"2016-11-04T17:05:33Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Copied from #9901:\n\nToday we have a massive infrastructure to parse all our requests. We have client side builders and server side parsers but no real representation of the query, filter, aggregation etc until it's executed. What is produced from a XContent binary is a Lucene query directly which causes huge parse methods in separate classes etc. that hare hard to test and don't allow decoupled modifications or actions on the query itself between parsing and executing. \n\nThis refactoring splits the parsing and the creation of the lucene query, this has a couple of advantages\n- XContent parsing creation are in one file and can be tested more easily\n- the class allows a typed in-memory representation of the query that can be modified before a lucene query is build\n- the query can be normalized and serialized via Streamable to be used as a normalized cache key (not depending on the order of the keys in the XContent)\n- the query can be parsed on the coordinating node to allow document prefetching etc. forwarding to the executing nodes would work via Streamable binary representation --> https://github.com/elasticsearch/elasticsearch/issues/8150\n- for the query cache a query tree can be \"walked\" to rewrite range queries into match all queries with MIN/MAX terms to get cache hits for sliding windows --> https://github.com/elasticsearch/elasticsearch/issues/9526\n- code wise two classes are merged into one which is nice\n## Queries (Completed)\n- [x] AndQueryBuilder  (https://github.com/elastic/elasticsearch/pull/11628) \n- [x] BoolQueryBuilder (https://github.com/elastic/elasticsearch/pull/11121)\n- [x] BoostingQueryBuilder (https://github.com/elastic/elasticsearch/pull/11621)\n- [x] CommonTermsQueryBuilder (https://github.com/elastic/elasticsearch/pull/11345)\n- [x] ConstantScoreQueryBuilder (https://github.com/elastic/elasticsearch/pull/11629)\n- [x] DisMaxQueryBuilder (https://github.com/elastic/elasticsearch/pull/11703)\n- [x] ExistsQueryBuilder (https://github.com/elastic/elasticsearch/pull/11427)\n- [x] FieldMaskingSpanQueryBuilder (https://github.com/elastic/elasticsearch/pull/11717)\n- [x] FilteredQueryBuilder (https://github.com/elastic/elasticsearch/pull/11885)\n- [x] FQueryFilterBuilder (https://github.com/elastic/elasticsearch/pull/11729)\n- [x] FunctionScoreQueryBuilder (#13653)\n- [x] FuzzyQueryBuilder (https://github.com/elastic/elasticsearch/pull/11865)\n- [x] GeoBoundingBoxQueryBuilder (https://github.com/elastic/elasticsearch/pull/11969)\n- [x] GeoDistanceQueryBuilder(https://github.com/elastic/elasticsearch/pull/13496)\n- [x] GeoDistanceRangeQueryBuilder (https://github.com/elastic/elasticsearch/pull/13496)\n- [x] GeohashCellQuery (#13393)\n- [x] GeoPolygonQueryBuilder (#13426)\n- [x] GeoShapeQueryBuilder (https://github.com/elastic/elasticsearch/pull/13466)\n- [x] HasChildQueryBuilder (#13333)\n- [x] HasParentQueryBuilder (#13408)\n- [x] IdsQueryBuilder (#10670)\n- [x] IndicesQueryBuilder (https://github.com/elastic/elasticsearch/pull/12031)\n- [x] LimitQueryBuilder (#11551)\n- [x] MatchAllQueryBuilder (#10668)\n- [x] MatchQueryBuilder (#13402)\n- [x] MissingQueryBuilder (https://github.com/elastic/elasticsearch/pull/12030)\n- [x] MoreLikeThisQueryBuilder (https://github.com/elastic/elasticsearch/pull/13486)\n- [x] MultiMatchQueryBuilder (#13405)\n- [x] NestedQueryBuilder (https://github.com/elastic/elasticsearch/pull/13424)\n- [x] NotQueryBuilder (https://github.com/elastic/elasticsearch/pull/11823)\n- [x] OrQueryBuilder (https://github.com/elastic/elasticsearch/pull/11817)\n- [x] PrefixQueryBuilder (https://github.com/elastic/elasticsearch/pull/12032)\n- [x] QueryFilterBuilder (https://github.com/elastic/elasticsearch/pull/11729)\n- [x] QueryStringQueryBuilder (#13284)\n- [x] QueryWrappingQueryBuilder (will be removed once all queries refactored)\n- [x] RangeQueryBuilder (#11108)\n- [x] RegexpQueryBuilder (https://github.com/elastic/elasticsearch/pull/11896)\n- [x] ScriptQueryBuilder (https://github.com/elastic/elasticsearch/pull/12115)\n- [x] SimpleQueryStringBuilder (https://github.com/elastic/elasticsearch/pull/11274)\n- [x] SpanContainingQueryBuilder (https://github.com/elastic/elasticsearch/pull/12057)\n- [x] SpanFirstQueryBuilder (https://github.com/elastic/elasticsearch/pull/12073)\n- [x] SpanMultiTermQueryBuilder (https://github.com/elastic/elasticsearch/pull/12182)\n- [x] SpanNearQueryBuilder (https://github.com/elastic/elasticsearch/pull/12156)\n- [x] SpanNotQueryBuilder (https://github.com/elastic/elasticsearch/pull/12365)\n- [x] SpanOrQueryBuilder (https://github.com/elastic/elasticsearch/pull/12342)\n- [x] SpanTermQueryBuilder (#11005)\n- [x] SpanWithinQueryBuilder (#12396)\n- [x] TemplateQueryBuilder (https://github.com/elastic/elasticsearch/pull/13253)\n- [x] TermQueryBuilder (#10669)\n- [x] TermsLookupQueryBuilder (https://github.com/elastic/elasticsearch/pull/12042)\n- [x] TermsQueryBuilder (https://github.com/elastic/elasticsearch/pull/12042)\n- [x] TypeQueryBuilder (https://github.com/elastic/elasticsearch/pull/12035)\n- [x] WildcardQueryBuilder (https://github.com/elastic/elasticsearch/pull/12110)\n- [x] WrapperQueryBuilder (https://github.com/elastic/elasticsearch/pull/12037)\n\nTotal of 54 Queries\n54 done\n\nFormer filters were mostly merged or converted to queries and are included in this list.\n## Aggregations (Completed - https://github.com/elastic/elasticsearch/pull/14136)\n- [x] Min Aggregation (https://github.com/elastic/elasticsearch/pull/12832)\n- [x] Max Aggregation (https://github.com/elastic/elasticsearch/pull/14687)\n- [x] Sum Aggregation (https://github.com/elastic/elasticsearch/pull/14687)\n- [x] Avg Aggregation (https://github.com/elastic/elasticsearch/pull/14687)\n- [x] Stats Aggregation (https://github.com/elastic/elasticsearch/pull/14688)\n- [x] Extended Stats Aggregation (https://github.com/elastic/elasticsearch/pull/14688)\n- [x] Value Count Aggregation (https://github.com/elastic/elasticsearch/pull/14689)\n- [x] Percentiles Aggregation (https://github.com/elastic/elasticsearch/pull/14836)\n- [x] Percentile Ranks Aggregation (https://github.com/elastic/elasticsearch/pull/14836)\n- [x] Cardinality Aggregation (https://github.com/elastic/elasticsearch/pull/14893)\n- [x] Geo Bounds Aggregation (https://github.com/elastic/elasticsearch/pull/14934)\n- [x] Top hits Aggregation (https://github.com/elastic/elasticsearch/pull/15566)\n- [x] Scripted Metric Aggregation (https://github.com/elastic/elasticsearch/pull/14966)\n- [x] Global Aggregation (https://github.com/elastic/elasticsearch/pull/14139)\n- [x] Filter Aggregation (https://github.com/elastic/elasticsearch/pull/14974)\n- [x] Filters Aggregation (https://github.com/elastic/elasticsearch/pull/15437)\n- [x] Missing Aggregation (https://github.com/elastic/elasticsearch/pull/14975)\n- [x] Nested Aggregation (https://github.com/elastic/elasticsearch/pull/15006)\n- [x] Reverse nested Aggregation (https://github.com/elastic/elasticsearch/pull/15006)\n- [x] Children Aggregation (https://github.com/elastic/elasticsearch/pull/15008)\n- [x] Terms Aggregation (https://github.com/elastic/elasticsearch/pull/15386)\n- [x] Significant Terms Aggregation (https://github.com/elastic/elasticsearch/pull/15386)\n- [x] Sampler Aggregation (https://github.com/elastic/elasticsearch/pull/15418)\n- [x] Range Aggregation (https://github.com/elastic/elasticsearch/pull/15399)\n- [x] Date Range Aggregation (https://github.com/elastic/elasticsearch/pull/15399)\n- [x] IPv4 Range Aggregation (https://github.com/elastic/elasticsearch/pull/15399)\n- [x] Histogram Aggregation (https://github.com/elastic/elasticsearch/pull/14140)\n- [x] Date Histogram Aggregation (https://github.com/elastic/elasticsearch/pull/14140)\n- [x] Geo Distance Aggregation (https://github.com/elastic/elasticsearch/pull/15399)\n- [x] GeoHash grid Aggregation (https://github.com/elastic/elasticsearch/pull/14138)\n- [x] Geo Centroid Aggregation (https://github.com/elastic/elasticsearch/pull/15002)\n- [x] Min Bucket Aggregation (https://github.com/elastic/elasticsearch/pull/15009)\n- [x] Max Bucket Aggregation (https://github.com/elastic/elasticsearch/pull/15009)\n- [x] Avg Bucket Aggregation (https://github.com/elastic/elasticsearch/pull/15009)\n- [x] Sum Bucket Aggregation (https://github.com/elastic/elasticsearch/pull/15009)\n- [x] Stats Bucket Aggregation (https://github.com/elastic/elasticsearch/pull/15009)\n- [x] Extended Stats Bucket Aggregation (https://github.com/elastic/elasticsearch/pull/15009)\n- [x] Percentiles Bucket Aggregation (https://github.com/elastic/elasticsearch/pull/15009)\n- [x] Bucket Script Aggregation (https://github.com/elastic/elasticsearch/pull/15014)\n- [x] Cumulative Sum Aggregation (https://github.com/elastic/elasticsearch/pull/15015)\n- [x] Derivative Aggregation (https://github.com/elastic/elasticsearch/pull/14137)\n- [x] Bucket Selector Aggregation (https://github.com/elastic/elasticsearch/pull/15147)\n- [x] Moving Average Aggregation (https://github.com/elastic/elasticsearch/pull/15180)\n- [x] Serial Differencing Aggregation (https://github.com/elastic/elasticsearch/pull/15058)\n\nTotal of 44 Aggregations\n44 done\n## Suggesters\n- [x] Term suggester\n- [x] Phrase Suggester\n- [x] Completion Suggester\n- [x] Context Suggester\n\nTotal of 4 Suggesters\n4 done, 0 in open PRs\n## Highlighters\n- [x] plain\n- [x] fvh\n- [x] postings\n\nTotal of 3 Highlighters\n3 done\n## Others\n- [x] from (https://github.com/elastic/elasticsearch/pull/13752)\n- [x] size (https://github.com/elastic/elasticsearch/pull/13752)\n- [x] min_score (https://github.com/elastic/elasticsearch/pull/13752)\n- [x] fields (https://github.com/elastic/elasticsearch/pull/13752)\n- [x] script_fields (https://github.com/elastic/elasticsearch/pull/13752)\n- [x] fielddata_fields (https://github.com/elastic/elasticsearch/pull/13752)\n- [x] _source (https://github.com/elastic/elasticsearch/pull/13752)\n- [x] sort (https://github.com/elastic/elasticsearch/pull/17205)\n- [x] timeout (https://github.com/elastic/elasticsearch/pull/13752)\n- [x] explain (https://github.com/elastic/elasticsearch/pull/13752)\n- [x] terminate_after (https://github.com/elastic/elasticsearch/pull/13752)\n- [x] version (https://github.com/elastic/elasticsearch/pull/13752)\n- [x] stats (https://github.com/elastic/elasticsearch/pull/13752)\n- [x] indices_boost (https://github.com/elastic/elasticsearch/pull/13752)\n- [x] track_scores (https://github.com/elastic/elasticsearch/pull/13752)\n- [x] inner_hits (https://github.com/elastic/elasticsearch/pull/17291)\n- [x] ~~query_binary~~: (removed, queries should only be specified via type-safe builders in the Java API, see #14308)\n- [x] ~~filter_binary~~: (removed, filters should only be specified via type-safe builders in the Java API, see #14308)\n- [x] ~~aggregations_binary~~: (to be removed, aggregations should only be specified via type-safe builders in the Java API, see #14308 and #14136)\n- [x] rescore (https://github.com/elastic/elasticsearch/issues/15559)\n- [x] post_filter (https://github.com/elastic/elasticsearch/pull/13752)\n## APIs to be adapted/revised besides _search\n- [x] ~~search exists api~~ (removed, see #13911)\n- [x] explain api: (#14270)\n- [x] validate query api: (#14384)\n- [x] suggest api (#17198)\n- [x] percolator (Planned to be removed, see #16349)\n- [x] ~~index warmers~~ (removed, see #15614)\n- [ ] alias filters\n\nThe above apis don't necessarily have to change to parse queries in our intermediate format, for instance the percolator will still need to parse to lucene query straight-away, but we should still have a look at each of those and double check if anything needs to be adjusted after all the infra changes we have made.\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}