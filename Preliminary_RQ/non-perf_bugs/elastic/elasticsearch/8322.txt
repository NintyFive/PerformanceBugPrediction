{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/8322","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8322/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8322/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8322/events","html_url":"https://github.com/elastic/elasticsearch/issues/8322","id":47550183,"node_id":"MDU6SXNzdWU0NzU1MDE4Mw==","number":8322,"title":"Caching in custom aggregation","user":{"login":"bittusarkar","id":860447,"node_id":"MDQ6VXNlcjg2MDQ0Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/860447?v=4","gravatar_id":"","url":"https://api.github.com/users/bittusarkar","html_url":"https://github.com/bittusarkar","followers_url":"https://api.github.com/users/bittusarkar/followers","following_url":"https://api.github.com/users/bittusarkar/following{/other_user}","gists_url":"https://api.github.com/users/bittusarkar/gists{/gist_id}","starred_url":"https://api.github.com/users/bittusarkar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bittusarkar/subscriptions","organizations_url":"https://api.github.com/users/bittusarkar/orgs","repos_url":"https://api.github.com/users/bittusarkar/repos","events_url":"https://api.github.com/users/bittusarkar/events{/privacy}","received_events_url":"https://api.github.com/users/bittusarkar/received_events","type":"User","site_admin":false},"labels":[{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2014-11-02T21:51:59Z","updated_at":"2015-08-26T15:22:41Z","closed_at":"2015-08-26T15:22:41Z","author_association":"NONE","active_lock_reason":null,"body":"I am developing a custom metric aggregator using ES 1.3.4 similar to the Stats aggregator. The operation is a bit heavy and I want to leverage caching to improve performance when the same inputs are provided to the aggregation again. Obviously the metrics will change if documents in the shard/segment change. I've figured what I want to cache but I am not sure how to determine when to invalidate the cache. Is any API provided in the aggregation module that can be leveraged here? \n\nI was reading about Shard Query Cache <a href=\"http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/index-modules-shard-query-cache.html\">here</a> and found <blockquote>Cached results are invalidated automatically whenever the shard refreshes, but only if the data in the shard has actually changed.</blockquote>\n\nCan I implement something similar in my aggregation module too? Any pointers would be really helpful.\n","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}