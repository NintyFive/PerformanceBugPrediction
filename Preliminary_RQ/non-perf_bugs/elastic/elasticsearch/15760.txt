{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/15760","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15760/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15760/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15760/events","html_url":"https://github.com/elastic/elasticsearch/issues/15760","id":124845493,"node_id":"MDU6SXNzdWUxMjQ4NDU0OTM=","number":15760,"title":"Remove fuzzy query","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":20,"created_at":"2016-01-04T21:41:32Z","updated_at":"2017-01-10T08:35:36Z","closed_at":"2016-12-12T11:09:16Z","author_association":"MEMBER","active_lock_reason":null,"body":"**Note**: This is the original comment stating some alternatives when it was not yet clear on how to proceed. As you can read below, we decided on option 1\n\nAs a term-level query, a fuzzy query will not run through the analysis stage. This can produce surprising results and I'd like to put this up for discussion whether we can do something about it. \n\nConsider this example:\n\n```\nPUT /people\n{\n   \"mappings\": {\n      \"person\": {\n         \"properties\": {\n            \"name\": {\n                \"type\": \"string\"\n            }\n         }\n      }\n   }\n}\n```\n\n```\nPOST /_bulk\n{\"index\":{\"_index\":\"people\",\"_type\":\"person\"}}\n{\"name\":\"Marcy\"}\n{\"index\":{\"_index\":\"people\",\"_type\":\"person\"}}\n{\"name\":\"Darcy\"}\n```\n\n```\nGET /_search\n{\n   \"query\": {\n      \"fuzzy\": {\n         \"name\": {\n            \"term\": \"Marcy\",\n            \"fuzziness\": \"1\"\n         }\n      }\n   }\n}\n```\n\nOne could expect that this query returns \"Marcy\" and \"Darcy\" as the Levenshtein distance to the search term \"Marcy\" is 0 and 1 respectively. However, as person names are analyzed fields, the index contains \"marcy\" and \"darcy\", which explains why we just match one document with the provided fuzziness.\n\nThere are multiple options how we could tackle this.\n### Option 1: Remove fuzzy query\n\nThe docs already state that [fuzzy queries are not that useful](https://www.elastic.co/guide/en/elasticsearch/guide/master/fuzzy-scoring.html). So one option could be to remove support for fuzzy queries and just expose them only indirectly e.g. in suggesters.\n### Option 2: Analyze fuzzy query terms\n\nWe _could_ run search terms of a fuzzy query through an analyzer. While it will work out in the example case above, there are other cases where this will lead to really strange results. Consider this case:\n\n```\nGET /books/_analyze?analyzer=english\n{\n    \"field\": \"content\",\n    \"text\": \"atypical\"\n}\n```\n\nwhich produces the token `atyp`. Now a user might do a fuzzy search on this field, searching for \"typical\". Would we run this through the same analyzer, this would produce the token `typic` which obviously will not fuzzy-match. This is even more puzzling.\n\nThe above case has already shown that analyzing query terms can also produce unexpected results. I think it boils down to the fact that there is an imbalance between what's indexed and what's searched.\n### Option 3: Improve docs\n\nThe [Term Query docs](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-term-query.html) already point out the problem but this is maybe too disconnected from the fuzzy query docs so users don't see that this warning also applies to fuzzy queries.\n\nSo we could add specific examples that demonstrate this case and link back to the term query docs for the explanation.\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}