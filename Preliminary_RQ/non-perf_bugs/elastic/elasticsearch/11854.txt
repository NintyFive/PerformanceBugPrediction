{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/11854","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11854/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11854/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11854/events","html_url":"https://github.com/elastic/elasticsearch/issues/11854","id":90709422,"node_id":"MDU6SXNzdWU5MDcwOTQyMg==","number":11854,"title":"Detect matched locations of searches with geo_distance filter using \"explanation\" string","user":{"login":"winterismute","id":430834,"node_id":"MDQ6VXNlcjQzMDgzNA==","avatar_url":"https://avatars1.githubusercontent.com/u/430834?v=4","gravatar_id":"","url":"https://api.github.com/users/winterismute","html_url":"https://github.com/winterismute","followers_url":"https://api.github.com/users/winterismute/followers","following_url":"https://api.github.com/users/winterismute/following{/other_user}","gists_url":"https://api.github.com/users/winterismute/gists{/gist_id}","starred_url":"https://api.github.com/users/winterismute/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/winterismute/subscriptions","organizations_url":"https://api.github.com/users/winterismute/orgs","repos_url":"https://api.github.com/users/winterismute/repos","events_url":"https://api.github.com/users/winterismute/events{/privacy}","received_events_url":"https://api.github.com/users/winterismute/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-06-24T15:26:57Z","updated_at":"2015-06-24T17:25:48Z","closed_at":"2015-06-24T17:25:48Z","author_association":"NONE","active_lock_reason":null,"body":"EDIT: the behavior is consistent, still, my question on how to solve my scenario still holds :D\n\nI have been experiencing a tricky elasticsearch issue which looks like bug, although it could also mean I am missing something, and I would be happy to receive some feedback.\n\nI have the following mapping (cropped some unnecessary stuff):\n\n``` json\n{\n   \"locationtest\":{\n      \"mappings\":{\n         \"searchdocument\":{\n            \"dynamic\":\"strict\",\n            \"_all\":{\n               \"analyzer\":\"western_europe\"\n            },\n            \"properties\":{\n               \"birthdate\":{ },\n               \"birthplace\":{\n                  \"properties\":{\n                     \"coordinates\":{\n                        \"type\":\"geo_point\",\n                        \"fielddata\":{\n                           \"format\":\"compressed\",\n                           \"precision\":\"5m\"\n                        },\n                        \"geohash\":true,\n                        \"geohash_prefix\":true,\n                        \"geohash_precision\":5\n                     },\n                     \"value\":{\n                        \"type\":\"string\",\n                        \"norms\":{\n                           \"enabled\":false\n                        },\n                        \"analyzer\":\"western_europe\",\n                        \"fields\":{\n                           \"raw\":{\n                              \"type\":\"string\",\n                              \"index\":\"not_analyzed\"\n                           }\n                        },\n                        \"include_in_all\":true,\n                        \"position_offset_gap\":10\n                     }\n                  }\n               },\n               \"name\":{\n                  \"type\":\"string\",\n                  \"norms\":{\n                     \"enabled\":false\n                  },\n                  \"analyzer\":\"western_europe\",\n                  \"fields\":{\n                     \"raw\":{\n                        \"type\":\"string\",\n                        \"index\":\"not_analyzed\"\n                     }\n                  },\n                  \"include_in_all\":true\n               }\n            }\n         }\n      }\n   }\n}\n```\n\nIn my application I need to to retrieve what parts of the queries gets matched, and the only way I found so far to do so is to retrieve the \"explanation\" string and then try to parse it (btw, is there a better way?).\nSo I perform this search:\n\n``` json\n{\n  \"size\" : 40,\n  \"query\" : {\n    \"filtered\" : {\n      \"query\" : {\n        \"bool\" : {\n          \"must\" : {\n            \"filtered\" : {\n              \"query\" : {\n                \"function_score\" : {\n                  \"functions\" : [ {\n                    \"gauss\" : {\n                      \"birthplace.coordinates\" : {\n                        \"origin\" : [ 4.85667, 52.3067 ],\n                        \"scale\" : \"5km\"\n                      }\n                    }\n                  } ],\n                  \"boost\" : 3.0\n                }\n              },\n              \"filter\" : {\n                \"geo_distance\" : {\n                  \"birthplace.coordinates\" : [ 4.85667, 52.3067 ],\n                  \"distance\" : \"5.0km\",\n                  \"distance_type\" : \"arc\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"explain\" : true,\n  \"fields\" : [ \"name\", \"birthplace.value\", \"birthplace.coordinates\" ],\n  \"highlight\" : {\n    \"highlight_query\" : {\n      \"match_all\" : {\n        \"boost\" : 0.0\n      }\n    },\n    \"fields\" : {\n      \"sections\" : {\n        \"fragment_size\" : 80,\n        \"number_of_fragments\" : 4\n      }\n    }\n  }\n}\n```\n\nI basically filter around a point (\"52.3667, 49\", Amstelveen) and then perform a \"function score\" query because I still would like to a have ranking. Originally, I had another filter performing geo_hashing (and this is why I have \"geohash\" set to true in the mapping) as suggested, but it does not seem to matter.\n\nThe results are:\n\n``` json\n{\n  \"took\" : 6,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 3,\n    \"max_score\" : 3.0,\n    \"hits\" : [ {\n      \"_shard\" : 0,\n      \"_node\" : \"1Hc5dBcUSBi0SFLIz0nX3g\",\n      \"_index\" : \"locationtest\",\n      \"_type\" : \"searchdocument\",\n      \"_id\" : \"6\",\n      \"_score\" : 3.0,\n      \"fields\" : {\n        \"birthplace.coordinates\" : [ \"52.3067, 4.85667\" ],\n        \"birthplace.value\" : [ \"Amstelveen\" ],\n        \"name\" : [ \"Dwayne Catral\" ]\n      },\n      \"_explanation\" : {\n        \"value\" : 3.0,\n        \"description\" : \"function score, product of:\",\n        \"details\" : [ {\n          \"value\" : 1.0,\n          \"description\" : \"ConstantScore(*:*), product of:\",\n          \"details\" : [ {\n            \"value\" : 1.0,\n            \"description\" : \"boost\"\n          }, {\n            \"value\" : 1.0,\n            \"description\" : \"queryNorm\"\n          } ]\n        }, {\n          \"value\" : 1.0,\n          \"description\" : \"Math.min of\",\n          \"details\" : [ {\n            \"value\" : 1.0,\n            \"description\" : \"Function for field birthplace.coordinates:\",\n            \"details\" : [ {\n              \"value\" : 1.0,\n              \"description\" : \"exp(-0.5*pow(MIN of: [Math.max(arcDistance([52.30670166015625, 4.856658935546875](=doc value),[52.3067, 4.85667](=origin)) - 0.0(=offset), 0)],2.0)/1.803368801111204E7)\"\n            } ]\n          }, {\n            \"value\" : 3.4028235E38,\n            \"description\" : \"maxBoost\"\n          } ]\n        }, {\n          \"value\" : 3.0,\n          \"description\" : \"queryBoost\"\n        } ]\n      }\n    }, {\n      \"_shard\" : 0,\n      \"_node\" : \"1Hc5dBcUSBi0SFLIz0nX3g\",\n      \"_index\" : \"locationtest\",\n      \"_type\" : \"searchdocument\",\n      \"_id\" : \"3\",\n      \"_score\" : 3.0,\n      \"fields\" : {\n        \"birthplace.coordinates\" : [ \"52.3067, 4.85667\" ],\n        \"birthplace.value\" : [ \"Eindhoven\", \"Amstelveen\" ],\n        \"name\" : [ \"INGA Molloy\" ]\n      },\n      \"_explanation\" : {\n        \"value\" : 3.0,\n        \"description\" : \"function score, product of:\",\n        \"details\" : [ {\n          \"value\" : 1.0,\n          \"description\" : \"ConstantScore(*:*), product of:\",\n          \"details\" : [ {\n            \"value\" : 1.0,\n            \"description\" : \"boost\"\n          }, {\n            \"value\" : 1.0,\n            \"description\" : \"queryNorm\"\n          } ]\n        }, {\n          \"value\" : 1.0,\n          \"description\" : \"Math.min of\",\n          \"details\" : [ {\n            \"value\" : 1.0,\n            \"description\" : \"Function for field birthplace.coordinates:\",\n            \"details\" : [ {\n              \"value\" : 1.0,\n              \"description\" : \"exp(-0.5*pow(MIN of: [Math.max(arcDistance([52.30670166015625, 4.856658935546875](=doc value),[52.3067, 4.85667](=origin)) - 0.0(=offset), 0)],2.0)/1.803368801111204E7)\"\n            } ]\n          }, {\n            \"value\" : 3.4028235E38,\n            \"description\" : \"maxBoost\"\n          } ]\n        }, {\n          \"value\" : 3.0,\n          \"description\" : \"queryBoost\"\n        } ]\n      }\n    }, {\n      \"_shard\" : 0,\n      \"_node\" : \"1Hc5dBcUSBi0SFLIz0nX3g\",\n      \"_index\" : \"locationtest\",\n      \"_type\" : \"searchdocument\",\n      \"_id\" : \"5\",\n      \"_score\" : 3.0,\n      \"fields\" : {\n        \"birthplace.coordinates\" : [ \"52.3667, 4.9\", \"52.3067, 4.85667\" ],\n        \"birthplace.value\" : [ \"Amsterdam\", \"Amstelveen\" ],\n        \"name\" : [ \"GARGI AKINMULERO\" ]\n      },\n      \"_explanation\" : {\n        \"value\" : 3.0,\n        \"description\" : \"function score, product of:\",\n        \"details\" : [ {\n          \"value\" : 1.0,\n          \"description\" : \"ConstantScore(*:*), product of:\",\n          \"details\" : [ {\n            \"value\" : 1.0,\n            \"description\" : \"boost\"\n          }, {\n            \"value\" : 1.0,\n            \"description\" : \"queryNorm\"\n          } ]\n        }, {\n          \"value\" : 1.0,\n          \"description\" : \"Math.min of\",\n          \"details\" : [ {\n            \"value\" : 1.0,\n            \"description\" : \"Function for field birthplace.coordinates:\",\n            \"details\" : [ {\n              \"value\" : 1.0,\n              \"description\" : \"exp(-0.5*pow(MIN of: [Math.max(arcDistance([52.30670166015625, 4.856658935546875](=doc value),[52.3067, 4.85667](=origin)) - 0.0(=offset), 0), Math.max(arcDistance([52.36669921875, 4.899993896484375](=doc value),[52.3067, 4.85667](=origin)) - 0.0(=offset), 0)],2.0)/1.803368801111204E7)\"\n            } ]\n          }, {\n            \"value\" : 3.4028235E38,\n            \"description\" : \"maxBoost\"\n          } ]\n        }, {\n          \"value\" : 3.0,\n          \"description\" : \"queryBoost\"\n        } ]\n      }\n    } ]\n  }\n}\n```\n\nWhat I notice is that the first document (Dwayne) only has \"Amstelveen\" as location, and the explanation says something about calculating arcDistance between my \"origin\" and the coordinates of the document, and that's ok. The second document (INGA) has \"Eindhoven\" and \"Amstelveen\" as locations, I see in the explained part that only one \"arcDistance\" shows up, again fine. The third result (GARGI) instead has \"Amsterdam\" and \"Amstelveen\" as locations. Here, both of them appear in the explanation as \"arcDistance\" calculations, but why didn't this happen with INGA too?\n\nMoreover, if I try to search documents in a radius of 5km from Amsterdam:\n\n``` json\n{\n  \"size\" : 40,\n  \"query\" : {\n    \"filtered\" : {\n      \"query\" : {\n        \"bool\" : {\n          \"must\" : {\n            \"filtered\" : {\n              \"query\" : {\n                \"function_score\" : {\n                  \"functions\" : [ {\n                    \"gauss\" : {\n                      \"birthplace.coordinates\" : {\n                        \"origin\" : [ 4.9, 52.3667 ],\n                        \"scale\" : \"5km\"\n                      }\n                    }\n                  } ],\n                  \"boost\" : 3.0\n                }\n              },\n              \"filter\" : {\n                \"geo_distance\" : {\n                  \"birthplace.coordinates\" : [ 4.9, 52.3667 ],\n                  \"distance\" : \"5.0km\",\n                  \"distance_type\" : \"arc\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"explain\" : true,\n  \"fields\" : [ \"name\", \"birthplace.value\", \"birthplace.coordinates\" ],\n  \"highlight\" : {\n    \"highlight_query\" : {\n      \"match_all\" : {\n        \"boost\" : 0.0\n      }\n    },\n    \"fields\" : {\n      \"sections\" : {\n        \"fragment_size\" : 80,\n        \"number_of_fragments\" : 4\n      }\n    }\n  }\n}\n```\n\nI get only GARKI\n\n``` json\n{\n  \"took\" : 3,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 1,\n    \"max_score\" : 3.0,\n    \"hits\" : [ {\n      \"_shard\" : 0,\n      \"_node\" : \"1Hc5dBcUSBi0SFLIz0nX3g\",\n      \"_index\" : \"locationtest\",\n      \"_type\" : \"searchdocument\",\n      \"_id\" : \"5\",\n      \"_score\" : 3.0,\n      \"fields\" : {\n        \"birthplace.coordinates\" : [ \"52.3667, 4.9\", \"52.3067, 4.85667\" ],\n        \"birthplace.value\" : [ \"Amsterdam\", \"Amstelveen\" ],\n        \"name\" : [ \"GARGI AKINMULERO\" ]\n      },\n      \"_explanation\" : {\n        \"value\" : 3.0,\n        \"description\" : \"function score, product of:\",\n        \"details\" : [ {\n          \"value\" : 1.0,\n          \"description\" : \"ConstantScore(*:*), product of:\",\n          \"details\" : [ {\n            \"value\" : 1.0,\n            \"description\" : \"boost\"\n          }, {\n            \"value\" : 1.0,\n            \"description\" : \"queryNorm\"\n          } ]\n        }, {\n          \"value\" : 1.0,\n          \"description\" : \"Math.min of\",\n          \"details\" : [ {\n            \"value\" : 1.0,\n            \"description\" : \"Function for field birthplace.coordinates:\",\n            \"details\" : [ {\n              \"value\" : 1.0,\n              \"description\" : \"exp(-0.5*pow(MIN of: [Math.max(arcDistance([52.30670166015625, 4.856658935546875](=doc value),[52.3667, 4.9](=origin)) - 0.0(=offset), 0), Math.max(arcDistance([52.36669921875, 4.899993896484375](=doc value),[52.3667, 4.9](=origin)) - 0.0(=offset), 0)],2.0)/1.803368801111204E7)\"\n            } ]\n          }, {\n            \"value\" : 3.4028235E38,\n            \"description\" : \"maxBoost\"\n          } ]\n        }, {\n          \"value\" : 3.0,\n          \"description\" : \"queryBoost\"\n        } ]\n      }\n    } ]\n  }\n}\n```\n\nWhich means that elasticsearch correctly filters out people with \"Amstelveen\" as location (according to geocoordinates, 7 km away), otherwise I would have got back the other 2 results.\n\nSo my question is, why this incoherence in the \"explain\" string? And also, is there another way to solve my scenario (find out which geo-coordinates were matched internally)?\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}