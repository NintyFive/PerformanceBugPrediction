{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/17823","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17823/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17823/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17823/events","html_url":"https://github.com/elastic/elasticsearch/issues/17823","id":149161333,"node_id":"MDU6SXNzdWUxNDkxNjEzMzM=","number":17823,"title":"Ingest failure metadata fields refer to compound processor","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"labels":[{"id":268963484,"node_id":"MDU6TGFiZWwyNjg5NjM0ODQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Ingest","name":":Core/Features/Ingest","color":"0e8a16","default":false,"description":"Execution or management of Ingest Pipelines"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":364411189,"node_id":"MDU6TGFiZWwzNjQ0MTExODk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v5.0.0-alpha3","name":"v5.0.0-alpha3","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"assignees":[{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2016-04-18T14:07:57Z","updated_at":"2016-05-26T09:18:27Z","closed_at":"2016-05-24T21:25:40Z","author_association":"MEMBER","active_lock_reason":null,"body":"The compound processor is used internally in ingest when handling failures. As I understand though it should be an internal concept that users don't know about. If you define a processor that fails, which has an `on_failure` block defined, which fails again, and the pipeline has its own `on_failure`, the metadata about the failure itself will be referring to the compound processor rather than the one that really failed.\n\n```\nGET _ingest/pipeline/_simulate\n{\n  \"pipeline\" : {\n    \"processors\" : [\n      {\n        \"convert\" : {\n          \"field\": \"doesnotexist\",\n          \"type\" : \"integer\",\n          \"on_failure\" : [\n            {\n              \"fail\" : {\n                \"message\" : \"custom error message\"\n              }    \n            }\n          ]\n        }\n      }\n    ],\n    \"on_failure\" : [\n      {\n        \"set\" : {\n          \"field\" : \"failure\",\n          \"value\" : {\n            \"message\" : \"{{_ingest.on_failure_message}}\",\n            \"processor\" : \"{{_ingest.on_failure_processor_type}}\",\n            \"tag\" : \"{{_ingest.on_failure_processor_tag}}\"\n          }\n        }\n      }\n    ]\n  },\n  \"docs\" : [\n    {\n      \"_source\" : {\n        \"message\" : \"test\"\n      }\n    }\n  ]\n}\n```\n\n```\n{\n  \"docs\": [\n    {\n      \"doc\": {\n        \"_type\": \"_type\",\n        \"_index\": \"_index\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"message\": \"test\",\n          \"failure\": {\n            \"tag\": \"CompoundProcessor-null-null\",\n            \"message\": \"custom error message\",\n            \"processor\": \"compound\"\n          }\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2016-04-18T13:20:28.981+0000\"\n        }\n      }\n    }\n  ]\n}\n```\n\nThe `tag` and the `processor` that goes in the document as part of the failure object are a bit off, they should be coming from the fail processor, which caused the failure. That information gets lost with the double wrapping.\n\nHere is also a failing unit test to add to `CompoundProcessorTests` that reproduces the problem:\n\n```\npublic void testFail() throws Exception {\n        TestProcessor firstProcessor = new TestProcessor(\"id1\", \"first\", ingestDocument -> {throw new RuntimeException(\"error\");});\n        FailProcessor failProcessor = new FailProcessor(\"tag_fail\", new TestTemplateService.MockTemplate(\"custom error message\"));\n        TestProcessor secondProcessor = new TestProcessor(\"id2\", \"second\", ingestDocument -> {\n            Map<String, String> ingestMetadata = ingestDocument.getIngestMetadata();\n            assertThat(ingestMetadata.size(), equalTo(3));\n            assertThat(ingestMetadata.get(CompoundProcessor.ON_FAILURE_MESSAGE_FIELD), equalTo(\"custom error message\"));\n            assertThat(ingestMetadata.get(CompoundProcessor.ON_FAILURE_PROCESSOR_TYPE_FIELD), equalTo(\"fail\"));\n            assertThat(ingestMetadata.get(CompoundProcessor.ON_FAILURE_PROCESSOR_TAG_FIELD), equalTo(\"tag_fail\"));\n        });\n\n        CompoundProcessor failCompoundProcessor = new CompoundProcessor(Collections.singletonList(firstProcessor),\n                Collections.singletonList(failProcessor));\n\n        CompoundProcessor compoundProcessor = new CompoundProcessor(Collections.singletonList(failCompoundProcessor),\n                Collections.singletonList(secondProcessor));\n        compoundProcessor.execute(ingestDocument);\n\n        assertThat(firstProcessor.getInvokedCounter(), equalTo(1));\n        assertThat(secondProcessor.getInvokedCounter(), equalTo(1));\n}\n```\n","closed_by":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"performed_via_github_app":null}