{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/28405","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28405/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28405/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28405/events","html_url":"https://github.com/elastic/elasticsearch/issues/28405","id":292109647,"node_id":"MDU6SXNzdWUyOTIxMDk2NDc=","number":28405,"title":"Safe commit is not safe","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"assignees":[{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2018-01-27T10:18:26Z","updated_at":"2018-01-29T10:15:41Z","closed_at":"2018-01-29T10:15:41Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Since #28181, a safe commit (instead of the latest commit) is used during peer recovery, which allows sequence-number based recoveries in more cases. A [recent test failure](https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+6.x+multijob-unix-compatibility/os=oraclelinux/541/consoleFull) of `testAckedIndexing` shows, that under certain failure scenarios, an unsafe commit can be subsequently (mistakenly) considered as a safe commit, resulting in the loss of acknowledged writes:\r\n\r\n```\r\nFAILURE 59.4s J0 | ClusterDisruptionIT.testAckedIndexing <<< FAILURES!\r\n03:26:44    > Throwable #1: java.lang.AssertionError: doc [30] indexed via node [node_t2] not found (checked via node [node_t1]\r\n...\r\n```\r\n\r\nThe scenario in the test is as follows:\r\n\r\n- Three nodes (`node_t0, node_t1, node_t2`). The problematic replication group is `[test][1]`. The primary is on `node_t1`, and the replicas on `node_t0` and `node_t2`.\r\n- Three documents are indexed into the primary, getting sequence number 0, 1, and 2, respectively:\r\n```\r\n[2018-01-14T16:24:47,113][TRACE][o.e.i.s.IndexShard       ] [node_t1] [test][1] index [type][8] (seq# [-2])\r\n[2018-01-14T16:24:47,157][TRACE][o.e.i.s.IndexShard       ] [node_t1] [test][1] index [type][12] (seq# [-2])\r\n[2018-01-14T16:24:48,155][TRACE][o.e.i.s.IndexShard       ] [node_t1] [test][1] index [type][15] (seq# [-2])\r\n```\r\n- There's a network disruption between `node_t1` and the other nodes, so it cannot replicate the last two writes:\r\n```\r\n[2018-01-14T16:24:47,151][INFO ][o.e.t.d.NetworkDisruption] start disrupting (disruption type: network unresponsive, disrupted links: two partitions (partition 1: [node_t2, node_t0] and partition 2: [node_t1]))\r\n```\r\n- The master (`node_t0`) fails `node_t1`, and the replica on `node_t2` gets promoted to primary, Cluster state:\r\n```\r\n...\r\nnodes: \r\n    {node_t2}{SXrylrbnSOqpFvbIzKORgg}{F3Xy1h1NRSObstz-8vueVg}{127.0.0.1}{127.0.0.1:30111}, local\r\n    {node_t0}{MTKu7d8xS6CnqxssfDgQnQ}{9whlsxtSRVSd4Mg1kN4YaA}{127.0.0.1}{127.0.0.1:30109}, master\r\nrouting_table (version 10):\r\n--------[test][1], node[SXrylrbnSOqpFvbIzKORgg], [P], s[STARTED], a[id=zWo3jzSXS7agaUBIroIMbQ]\r\n--------[test][1], node[MTKu7d8xS6CnqxssfDgQnQ], [R], s[STARTED], a[id=5-xVWGFuTXmWgg9nzGoBdw]\r\n--------[test][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=NODE_LEFT], \r\n...\r\n```\r\n- A new operation comes in (that we will later lose) and get's indexed into the newly promoted primary and is successfully replicated to the single remaining replica\r\n```\r\n[2018-01-14T16:24:53,749][TRACE][o.e.i.s.IndexShard       ] [node_t2] [test][1] index [type][30] (seq# [-2])\r\n[2018-01-14T16:24:53,754][TRACE][o.e.i.s.IndexShard       ] [node_t0] [test][1] index [type][30] (seq# [1])\r\n```\r\nNote that the newly promoted primary assigns the sequence number 1 to this operation, as it only got operation 0 from the previous primary.\r\n- The previously failed node `node_t1` rejoins the cluster, and a replica is assigned to this node. It does a sequence-number based recovery from the new primary on `node_t2` (which in the meanwhile has received more operations):\r\n```\r\n[2018-01-14T16:25:00,816][DEBUG][o.e.i.t.Translog         ] [node_t1] [test][1] open uncommitted translog checkpoint Checkpoint{offset=43, numOps=0, generation=2, minSeqNo=-1, maxSeqNo=-1, globalCheckpoint=0, minTranslogGeneration=1}\r\n[2018-01-14T16:25:00,816][DEBUG][o.e.i.t.Translog         ] [node_t1] [test][1] recovered local translog from checkpoint Checkpoint{offset=43, numOps=0, generation=2, minSeqNo=-1, maxSeqNo=-1, globalCheckpoint=0, minTranslogGeneration=1}\r\n[2018-01-14T16:25:00,821][TRACE][o.e.i.r.RecoverySourceHandler] [node_t2] [test][1][recover to node_t1] recovery [phase2]: sending transaction log operations (seq# from [0], required [0:3]\r\n[2018-01-14T16:25:00,822][TRACE][o.e.i.s.IndexShard       ] [node_t1] [test][1] index [type][30] (seq# [1])\r\n[2018-01-14T16:25:00,824][TRACE][o.e.i.s.IndexShard       ] [node_t1] [test][1] index [type][14] (seq# [2])\r\n[2018-01-14T16:25:00,824][TRACE][o.e.i.s.IndexShard       ] [node_t1] [test][1] index [type][35] (seq# [3])\r\n[2018-01-14T16:25:00,824][TRACE][o.e.i.s.IndexShard       ] [node_t1] [test][1] index [type][8] (seq# [0])\r\n```\r\n- From the above logs, we can see that `node_t1` had a global checkpoint 0, and from the previous logs, we also know that might have had an unsafe IndexCommit `C_problematic` with local checkpoint = max sequence number = 2. The safe index commit that it used for recovery here was the initial empty commit `C_init`, as it requested all operations from 0 onwards.\r\n- The recovery completes, all is good:\r\n```\r\nnodes: \r\n    {node_t1}{ArcKsewYTwm7IlIhKZVWtQ}{diIIW2TmROeYCHx484oJkg}{127.0.0.1}{127.0.0.1:30110}\r\n    {node_t2}{SXrylrbnSOqpFvbIzKORgg}{F3Xy1h1NRSObstz-8vueVg}{127.0.0.1}{127.0.0.1:30111}\r\n    {node_t0}{MTKu7d8xS6CnqxssfDgQnQ}{9whlsxtSRVSd4Mg1kN4YaA}{127.0.0.1}{127.0.0.1:30109}, local, master\r\nrouting_table (version 13):\r\n--------[test][1], node[SXrylrbnSOqpFvbIzKORgg], [P], s[STARTED], a[id=zWo3jzSXS7agaUBIroIMbQ]\r\n--------[test][1], node[ArcKsewYTwm7IlIhKZVWtQ], [R], s[STARTED], a[id=9eD9fk2gQ6qdMwq5twqJ8w]\r\n--------[test][1], node[MTKu7d8xS6CnqxssfDgQnQ], [R], s[STARTED], a[id=5-xVWGFuTXmWgg9nzGoBdw]\r\n```\r\n- Another failure of `node_t1` happens:\r\n```\r\nnodes: \r\n    {node_t2}{SXrylrbnSOqpFvbIzKORgg}{F3Xy1h1NRSObstz-8vueVg}{127.0.0.1}{127.0.0.1:30111}\r\n    {node_t0}{MTKu7d8xS6CnqxssfDgQnQ}{9whlsxtSRVSd4Mg1kN4YaA}{127.0.0.1}{127.0.0.1:30109}, local, master\r\nrouting_table (version 16):\r\n--------[test][1], node[SXrylrbnSOqpFvbIzKORgg], [P], s[STARTED], a[id=zWo3jzSXS7agaUBIroIMbQ]\r\n--------[test][1], node[MTKu7d8xS6CnqxssfDgQnQ], [R], s[STARTED], a[id=5-xVWGFuTXmWgg9nzGoBdw]\r\n--------[test][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=NODE_LEFT], at[2018-01-15T03:25:02.784Z], delayed=true, details[node_left[ArcKsewYTwm7IlIhKZVWtQ]], allocation_status[no_attempt]]\r\n```\r\n- And again, `node_t1` rejoins and is assigned a replica:\r\n```\r\nnodes: \r\n    {node_t1}{ArcKsewYTwm7IlIhKZVWtQ}{diIIW2TmROeYCHx484oJkg}{127.0.0.1}{127.0.0.1:30110}\r\n    {node_t2}{SXrylrbnSOqpFvbIzKORgg}{F3Xy1h1NRSObstz-8vueVg}{127.0.0.1}{127.0.0.1:30111}, local\r\n    {node_t0}{MTKu7d8xS6CnqxssfDgQnQ}{9whlsxtSRVSd4Mg1kN4YaA}{127.0.0.1}{127.0.0.1:30109}, master\r\nrouting_table (version 20):\r\n--------[test][1], node[SXrylrbnSOqpFvbIzKORgg], [P], s[STARTED], a[id=zWo3jzSXS7agaUBIroIMbQ]\r\n--------[test][1], node[ArcKsewYTwm7IlIhKZVWtQ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=iacEaYncREiChRxXc7HFEA], unassigned_info[[reason=NODE_LEFT], at[2018-01-15T03:25:02.784Z], delayed=true, details[node_left[ArcKsewYTwm7IlIhKZVWtQ]], allocation_status[no_attempt]], expected_shard_size[7272]\r\n--------[test][1], node[MTKu7d8xS6CnqxssfDgQnQ], [R], s[STARTED], a[id=5-xVWGFuTXmWgg9nzGoBdw]\r\n```\r\n- This is where it gets interesting now. The global checkpoint that's available in the translog on the replica (before recovering) is 3 at this point:\r\n```\r\n[2018-01-14T16:25:08,936][DEBUG][o.e.i.t.Translog         ] [node_t1] [test][1] open uncommitted translog checkpoint Checkpoint{offset=266, numOps=4, generation=3, minSeqNo=0, maxSeqNo=3, globalCheckpoint=3, minTranslogGeneration=1}\r\n```\r\n- The replica selects a safe commit for peer recovery, which has a local checkpoint that's below the current global checkpoint. In particular, `C_problematic` qualifies as such a commit now, whereas the operations that it contains are invalid. There is no log line which would directly show that `C_problematic`was chosen (we don't log that decision, unfortunately), but the sequence-number based recovery hints at the fact that a \"safe\" commit with local checkpoint <= max sequence number <= 2 was chosen:\r\n```\r\n[2018-01-14T16:25:08,944][TRACE][o.e.i.r.RecoverySourceHandler] [node_t2] [test][1][recover to node_t1] recovery [phase2]: sending transaction log operations (seq# from [3], required [3:4]\r\n[2018-01-14T16:25:08,945][TRACE][o.e.i.s.IndexShard       ] [node_t1] [test][1] index [type][35] (seq# [3])\r\n[2018-01-14T16:25:08,946][TRACE][o.e.i.s.IndexShard       ] [node_t1] [test][1] index [type][56] (seq# [4])\r\n```\r\n- The recovery successfully completes, but the replica on `node_t1` is now out-of-sync with the primary on `node_t2`, which results in the test failure:\r\n```\r\nFAILURE 59.4s J0 | ClusterDisruptionIT.testAckedIndexing <<< FAILURES!\r\n03:26:44    > Throwable #1: java.lang.AssertionError: doc [30] indexed via node [node_t2] not found (checked via node [node_t1]\r\n...\r\n```\r\n\r\n\r\n","closed_by":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"performed_via_github_app":null}