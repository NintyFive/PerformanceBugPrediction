{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/21999","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21999/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21999/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21999/events","html_url":"https://github.com/elastic/elasticsearch/issues/21999","id":193784615,"node_id":"MDU6SXNzdWUxOTM3ODQ2MTU=","number":21999,"title":"Inconsistent behaviour when using include inside filter aggregation","user":{"login":"MPritsch","id":15358778,"node_id":"MDQ6VXNlcjE1MzU4Nzc4","avatar_url":"https://avatars3.githubusercontent.com/u/15358778?v=4","gravatar_id":"","url":"https://api.github.com/users/MPritsch","html_url":"https://github.com/MPritsch","followers_url":"https://api.github.com/users/MPritsch/followers","following_url":"https://api.github.com/users/MPritsch/following{/other_user}","gists_url":"https://api.github.com/users/MPritsch/gists{/gist_id}","starred_url":"https://api.github.com/users/MPritsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MPritsch/subscriptions","organizations_url":"https://api.github.com/users/MPritsch/orgs","repos_url":"https://api.github.com/users/MPritsch/repos","events_url":"https://api.github.com/users/MPritsch/events{/privacy}","received_events_url":"https://api.github.com/users/MPritsch/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-12-06T14:22:59Z","updated_at":"2018-03-16T09:52:49Z","closed_at":"2018-03-16T09:52:49Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\nGitHub is reserved for bug reports and feature requests. The best place\r\nto ask a general question is at the Elastic Discourse forums at\r\nhttps://discuss.elastic.co. If you are in fact posting a bug report or\r\na feature request, please include one and only one of the below blocks\r\nin your new issue. Note that whether you're filing a bug report or a\r\nfeature request, ensure that your submission is for an\r\n[OS that we support](https://www.elastic.co/support/matrix#show_os).\r\nBug reports on an OS that we do not support or feature requests\r\nspecific to an OS that we do not support will be closed.\r\n-->\r\n\r\n<!--\r\nIf you are filing a bug report, please remove the below feature\r\nrequest block and provide responses for all of the below items.\r\n-->\r\n\r\n**Elasticsearch version**: 5.0.2\r\n\r\nI already asked this [question](https://discuss.elastic.co/t/inconsistent-behaviour-when-using-include-inside-filter-aggregation/67479) in the discussion forum, but nobody seemed to know an answer.\r\n\r\nWe noticed some inconsistencies when using filter aggregations in combination with includes/excludes.\r\nSpecifying an include term which results in a doc_count of 0 is only returned as bucket if the overall doc_count is > 0.\r\n\r\nBelow are two documents of type 'book' which have the fields title, author and narrator. Both documents have the same author.\r\n\r\n    PUT filter\r\n    {\r\n      \"settings\": {\r\n        \"number_of_shards\": 1\r\n      },\r\n      \"mappings\": {\r\n        \"book\": {\r\n          \"properties\": {\r\n            \"title\": {\r\n              \"type\": \"keyword\"\r\n            },\r\n            \"author\": {\r\n              \"type\": \"keyword\"\r\n            },\r\n            \"narrator\": {\r\n              \"type\": \"keyword\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\nDocuments:\r\n\r\n    PUT filter/book/1\r\n    {\r\n        \"title\" : \"Mango\",\r\n        \"author\" : \"Winton\",\r\n        \"narrator\" : \"Moritz\"\r\n    }\r\n\r\n    PUT filter/book/2\r\n    {\r\n        \"title\" : \"Banana\",\r\n        \"author\" : \"Winton\",\r\n        \"narrator\" : \"Max\"\r\n    }\r\n\r\nThe following is an aggregation on the field \"title\" specifying an include of \"Mango\" setting \"min_doc_count: 0\" to include buckets with no matching documents.\r\nThe query will match book 2. \r\nThe subaggregation on field title is performed using book 2 only.\r\n\r\n    POST filter/book/_search\r\n    {\r\n      \"size\": 0,\r\n      \"aggregations\": {\r\n        \"titleIncluded\": {\r\n          \"filter\": {\r\n            \"bool\": {\r\n              \"must\": [\r\n                {\r\n                  \"terms\": {\r\n                    \"title\": [\r\n                      \"Banana\"\r\n                    ]\r\n                  }\r\n                },\r\n                {\r\n                  \"bool\": {\r\n                    \"must_not\": [\r\n                      {\r\n                        \"terms\": {\r\n                          \"narrator\": [\r\n                            \"Moritz\"\r\n                          ]\r\n                        }\r\n                      }\r\n                    ]\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          },\r\n          \"aggregations\": {\r\n            \"titleSubAggregation\": {\r\n              \"terms\": {\r\n                \"field\": \"title\",\r\n                \"min_doc_count\": 0,\r\n                \"include\": [\r\n                  \"Mango\"\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } \r\n\r\nThe subaggregation results in a bucket for \"Mango\" with doc_count being 0.\r\n\r\nResult:\r\n\r\n    {\r\n      \"took\": 1,\r\n      \"timed_out\": false,\r\n      \"_shards\": {\r\n        \"total\": 1,\r\n        \"successful\": 1,\r\n        \"failed\": 0\r\n      },\r\n      \"hits\": {\r\n        \"total\": 2,\r\n        \"max_score\": 0,\r\n        \"hits\": []\r\n      },\r\n      \"aggregations\": {\r\n        \"titleIncluded\": {\r\n          \"doc_count\": 1,\r\n          \"titleSubAggregation\": {\r\n            \"doc_count_error_upper_bound\": 0,\r\n            \"sum_other_doc_count\": 0,\r\n            \"buckets\": [\r\n              {\r\n                \"key\": \"Mango\",\r\n                \"doc_count\": 0\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\nThe only thing we changed below is the query which does not match any of the two documents.\r\n\r\n    POST filter/book/_search\r\n    {\r\n      \"size\": 0,\r\n      \"aggregations\": {\r\n        \"titleIncluded\": {\r\n          \"filter\": {\r\n            \"bool\": {\r\n              \"must\": [\r\n                {\r\n                  \"terms\": {\r\n                    \"narrator\": [\r\n                      \"Max\"\r\n                    ]\r\n                  }\r\n                },\r\n                {\r\n                  \"bool\": {\r\n                    \"must_not\": [\r\n                      {\r\n                        \"terms\": {\r\n                          \"title\": [\r\n                            \"Banana\"\r\n                          ]\r\n                        }\r\n                      }\r\n                    ]\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          },\r\n          \"aggregations\": {\r\n            \"titleSubAggregation\": {\r\n              \"terms\": {\r\n                \"field\": \"title\",\r\n                \"min_doc_count\": 0,\r\n                \"include\": [\r\n                  \"Mango\"\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } \r\n\r\nAs you can see in the result there is no bucket at all.\r\n\r\nResult:\r\n\r\n    {\r\n      \"took\": 1,\r\n      \"timed_out\": false,\r\n      \"_shards\": {\r\n        \"total\": 1,\r\n        \"successful\": 1,\r\n        \"failed\": 0\r\n      },\r\n      \"hits\": {\r\n        \"total\": 2,\r\n        \"max_score\": 0,\r\n        \"hits\": []\r\n      },\r\n      \"aggregations\": {\r\n        \"titleIncluded\": {\r\n          \"doc_count\": 0,\r\n          \"titleSubAggregation\": {\r\n            \"doc_count_error_upper_bound\": 0,\r\n            \"sum_other_doc_count\": 0,\r\n            \"buckets\": []\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n\r\nIt seems that in the second case no aggregation is performed because the query results in 0 documents.\r\nIs this intended or is it a bug? For me it seems like an inconsistent behaviour when using include inside filter aggregations.\r\n\r\n<!--\r\nIf you are filing a feature request, please remove the above bug\r\nreport block and provide responses for all of the below items.\r\n-->\r\n","closed_by":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"performed_via_github_app":null}