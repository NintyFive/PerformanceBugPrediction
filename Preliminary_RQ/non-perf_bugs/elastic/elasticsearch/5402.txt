{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/5402","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5402/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5402/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5402/events","html_url":"https://github.com/elastic/elasticsearch/issues/5402","id":29272211,"node_id":"MDU6SXNzdWUyOTI3MjIxMQ==","number":5402,"title":"Nested multi_field type wrapped by a custom type passing 'external values' doesn't get values passed","user":{"login":"thomasm82","id":6929836,"node_id":"MDQ6VXNlcjY5Mjk4MzY=","avatar_url":"https://avatars2.githubusercontent.com/u/6929836?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasm82","html_url":"https://github.com/thomasm82","followers_url":"https://api.github.com/users/thomasm82/followers","following_url":"https://api.github.com/users/thomasm82/following{/other_user}","gists_url":"https://api.github.com/users/thomasm82/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasm82/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasm82/subscriptions","organizations_url":"https://api.github.com/users/thomasm82/orgs","repos_url":"https://api.github.com/users/thomasm82/repos","events_url":"https://api.github.com/users/thomasm82/events{/privacy}","received_events_url":"https://api.github.com/users/thomasm82/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"assignees":[{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2014-03-12T15:23:16Z","updated_at":"2014-07-25T15:01:14Z","closed_at":"2014-07-25T15:01:14Z","author_association":"NONE","active_lock_reason":null,"body":"This issue came up when I tried to combine the **Attachment** type (elasticsearch-mapper-attachments plugin) with a nested **multi_field** type. The intention behind that was to use the fulltext content extracted by the Attachment type for creating shingles and nGrams as well.\n### Prerequisites\n\nInstall the **Attachment** type plugin:\n\n```\n$ elasticsearch-1.0.1/bin/plugin --install elasticsearch/elasticsearch-mapper-attachments/2.0.0.RC1\n```\n### Index configuration\n\nI've prepared a sample configuration for an elasticsearch index 'attachment' as listed below:\n\n``` sh\n# delete the index\n$ curl -XDELETE 'http://localhost:9200/attachment'\n\n# create the index with some analyzers to be used later on\n$ curl -XPUT http://localhost:9200/attachment?pretty -d ' \nindex :\n    number_of_shards : 1\n    number_of_replicas : 1\n\n    analysis:\n        analyzer:\n            default:\n                type: custom\n                tokenizer: standard\n            ngram_analyzer:\n                type : custom\n                tokenizer : standard\n                filter: [ngram_filter]\n            e_ngram_analyzer:\n                type : custom\n                tokenizer : standard\n                filter: [e_ngram_filter]\n            shingle_analyzer:\n                type : custom\n                tokenizer : standard\n                filter: [shingle_filter]\n\n        filter: \n            shingle_filter:\n                type : shingle\n                min_shingle_size : 2\n                max_shingle_size : 5\n                output_unigrams : true\n            ngram_filter:\n                type : nGram\n                min_gram : 1\n                max_gram : 20\n            e_ngram_filter:\n                type : edgeNGram\n                min_gram : 1\n                max_gram : 20                \n\n    mapping:\n        attachment:\n            ignore_errors: false\n'\n\n# create the mapping for the index's documents\n$ curl -XPUT http://localhost:9200/attachment/document/_mapping?pretty -d '\n{\n    \"document\" : {\n        \"properties\" : {\n            \"file\" : {\n                \"type\" : \"attachment\",\n                \"path\" : \"full\",\n                \"fields\" : {\n                    \"file\" : {\n                        \"type\" : \"multi_field\",\n                        \"fields\" : {\n                            \"file\" : {\n                                \"type\" : \"string\",\n                                \"store\" : true,\n                                \"index\" : \"not_analyzed\"\n                            },\n                            \"shingle\" : {\n                                \"type\" : \"string\",\n                                \"store\" : true,\n                                \"analyzer\" : \"shingle_analyzer\"\n                            },\n                            \"ngram\" : {\n                                \"type\" : \"string\",\n                                \"store\" : true,\n                                \"analyzer\" : \"ngram_analyzer\"\n                            },\n                            \"e_ngram\" : {\n                                \"type\" : \"string\",\n                                \"store\" : true,\n                                \"analyzer\" : \"e_ngram_analyzer\"\n                            }\n                        }\n                    },\n                    \"author\" : {\n                        \"type\" : \"string\",\n                        \"store\" : true\n                    },\n                    \"title\" : {\n                        \"type\" : \"string\",\n                        \"store\" : true\n                    },\n                    \"name\" : {\n                        \"type\" : \"string\",\n                        \"store\" : true\n                    },\n                    \"date\" : {\n                        \"type\" : \"date\",\n                        \"store\" : true,\n                        \"format\" : \"dateOptionalTime\"\n                    },\n                    \"keywords\" : {\n                        \"type\" : \"string\",\n                        \"store\" : true\n                    },\n                    \"content_type\" : {\n                        \"type\" : \"string\",\n                        \"store\" : true\n                    },\n                    \"content_length\" : {\n                        \"type\" : \"integer\",\n                        \"store\" : true\n                    }\n                }   \n            }\n        }\n    }\n}\n\n'\n```\n### Adding document to the index\n\nAfter adding a document, we will see, that the defined _multi_field_ fields for shingles and nGrams do NOT receive any data.\n\n``` sh\n# Adding a document to the index, as needed by the Attachment plugin binary data as base64 encoded string\n$ curl -XPUT 'http://localhost:9200/attachment/document/1?pretty' -d '\n{\n    \"file\" : \"VGhpcyBpcyBhIHRlc3QgZG9jdW1lbnQgdG8gZGVtb25zdHJhdGUgdGhlIGJlaGF2aW9yIG9mIHRoZSBBdHRhY2htZW50IHR5cGUgcGx1Z2luIAp3aGljaCBkb2Vzbid0IHBhc3MgdGhpcyBkb2N1bWVudCdzIGNvbnRlbnQgdG8gdGhlIGRlZmluZWQgbmVzdGVkIG11bHRpX2ZpZWxkIHBhcnRzIApmb3IgY3JlYXRpbmcgbkdyYW1zIGFuZCBzaGluZ2xlcy4=\"\n}\n'\n\n# Searching for documents afterwards shows, that the multi_field fields are not receiving the data provided\n$ curl -XGET 'http://localhost:9200/attachment/_search?q=*&fields=*&pretty'\n\n# Result:\n{\n  \"took\" : 48,  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 1,\n    \"max_score\" : 1.0,\n    \"hits\" : [ {\n      \"_index\" : \"attachment\",\n      \"_type\" : \"document\",\n      \"_id\" : \"1\",\n      \"_score\" : 1.0,\n      \"fields\" : {\n        \"file.e_ngram\" : [ \"\" ],\n        \"file.content_length\" : [ 200 ],\n        \"file.ngram\" : [ \"\" ],\n        \"file.file\" : [ \"\" ],\n        \"file.content_type\" : [ \"text/plain; charset=ISO-8859-1\" ],\n        \"file.shingle\" : [ \"\" ]\n      }\n    } ]\n  }\n}\n\n```\n### Problem in elasticsearch code\n\nI've started investigations on this issue, as I could find discussions online about similar problems, but no solution. Digging into the depths of the elasticsearch code I've detected the issue and built a workaround inside the Attachment plugin's code for my local needs which produced the desired result. From my point of view this should be fixed inside the elasticsearch code and I will try to explain how.\n\nFrom what I hopefully got right, there are two ways the **org.elasticsearch.index.mapper.ParseContext** may provide values to any subclass of **org.elasticsearch.index.mapper.core.AbstractFieldMapper<T>** for parsing:\n- accessing the next token from the provided JSON stream: **org.elasticsearch.index.mapper.ParseContext.parser().currentToken()**\n- checking for a so called 'external value' to be used instead: **org.elasticsearch.index.mapper.ParseContext.externalValue()**\n\nInside the **org.elasticsearch.index.mapper.core.StringFieldMapper.parseCreateFieldForString(ParseContext, String, float)** method this can be seen, where the 'external value' is tried to be **consumed** (emphasis intended) by calling _org.elasticsearch.index.mapper.ParseContext.externalValue()_. I am using the term 'consumed' as this is literally what happens as the call to the _externalValue()_ method sets a boolean flag to 'false' which is actually used for checking for existence of such an 'external value'. \n\nSo, this is where the problem resides and I overcame it by wrapping the _ParseContext_ passed to the Attachment mapper plugin with my own implementation, that actually just delegates any call to the original context except for the _org.elasticsearch.index.mapper.ParseContext.externalValueSet()_ method which I've overwritten to not only check the boolean flag but also check for the 'external value' to be not _null_. This way it is assured that as long as the _multi_field_ fields are processed all of them get the content.\n### Desired output after fixing the code\n\nJust to make sure what the expected result should look like:\n\n``` sh\n# result of the above document being indexed with my local changes, where we can see that the nGram and shingle fields properly get content\n{\n  \"took\" : 12,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 1,\n    \"max_score\" : 1.0,\n    \"hits\" : [ {\n      \"_index\" : \"attachment\",\n      \"_type\" : \"document\",\n      \"_id\" : \"1\",\n      \"_score\" : 1.0,\n      \"fields\" : {\n        \"file.e_ngram\" : [ \"This is a test document to demonstrate the behavior of the Attachment type plugin \\nwhich doesn't pass this document's content to the defined nested multi_field parts \\nfor creating nGrams and shingles.\\n\" ],\n        \"file.content_length\" : [ 200 ],\n        \"file.ngram\" : [ \"This is a test document to demonstrate the behavior of the Attachment type plugin \\nwhich doesn't pass this document's content to the defined nested multi_field parts \\nfor creating nGrams and shingles.\\n\" ],\n        \"file.file\" : [ \"This is a test document to demonstrate the behavior of the Attachment type plugin \\nwhich doesn't pass this document's content to the defined nested multi_field parts \\nfor creating nGrams and shingles.\\n\" ],\n        \"file.content_type\" : [ \"text/plain; charset=ISO-8859-1\" ],\n        \"file.shingle\" : [ \"This is a test document to demonstrate the behavior of the Attachment type plugin \\nwhich doesn't pass this document's content to the defined nested multi_field parts \\nfor creating nGrams and shingles.\\n\" ]\n      }\n    } ]\n  }\n}\n```\n\nHopefully my explanations are clear to you guys. As I am not totally sure which way one should solve this issue in order to avoid any side-effects I am relying on you to get this thing fixed.\n\nThanks in advance\nTom\n","closed_by":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"performed_via_github_app":null}