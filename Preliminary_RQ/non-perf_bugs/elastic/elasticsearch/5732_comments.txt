[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/39938849","html_url":"https://github.com/elastic/elasticsearch/issues/5732#issuecomment-39938849","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5732","id":39938849,"node_id":"MDEyOklzc3VlQ29tbWVudDM5OTM4ODQ5","user":{"login":"schmorgs","id":5444727,"node_id":"MDQ6VXNlcjU0NDQ3Mjc=","avatar_url":"https://avatars0.githubusercontent.com/u/5444727?v=4","gravatar_id":"","url":"https://api.github.com/users/schmorgs","html_url":"https://github.com/schmorgs","followers_url":"https://api.github.com/users/schmorgs/followers","following_url":"https://api.github.com/users/schmorgs/following{/other_user}","gists_url":"https://api.github.com/users/schmorgs/gists{/gist_id}","starred_url":"https://api.github.com/users/schmorgs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmorgs/subscriptions","organizations_url":"https://api.github.com/users/schmorgs/orgs","repos_url":"https://api.github.com/users/schmorgs/repos","events_url":"https://api.github.com/users/schmorgs/events{/privacy}","received_events_url":"https://api.github.com/users/schmorgs/received_events","type":"User","site_admin":false},"created_at":"2014-04-09T08:14:51Z","updated_at":"2014-04-09T08:20:58Z","author_association":"NONE","body":"I haven't stopped looking into a solution for this and came across a great solution.\n\nIn Elasticsearch 1.0.1, there is a concept called Tribe nodes.\n\nWhat you do is allocate a new ES node as a tribe node, and configure it to connect to all your other clusters, and when you run a query against it, it queries all clusters and returns a consolidated set of results from all of them.\n\nSo in my scenario, it looks like this.\n\nUS Region\n  cluster.name: us-region\n  Two nodes in this region called usnode1 and usnode2\n  Both nodes are master/data nodes\n\nUK Region\n  cluster.name: uk-region\n  Two nodes in this region called uknode1 and uknode2\n  Both nodes are master/data nodes\n\nThe you create another ES node and add some configuration to make it a Tribe node.\nelasticsearch.yml --> \n\nnode.data: false\nnode.master: false\ntribe.blocks.write: false\ntribe.blocks.metadata: false\ntribe.t1.cluster.name: us-region\ntribe.t1.discovery.zen.ping.unicast.hosts: [\"usnode1\",\"usnode2\"]\ntribe.t2.cluster.name: uk-region\ntribe.t2.discovery.zen.ping.unicast.hosts: [\"uknode1\",\"uknode2\"]\n\nYou then point Kibana to the tribe node and it worked brilliantly - excellent feature.\n\nKibana dashboards still save, although I'm not sure which cluster they save to yet :) but seems to address my question.\n","performed_via_github_app":null}]