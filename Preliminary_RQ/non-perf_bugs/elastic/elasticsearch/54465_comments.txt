[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/606248167","html_url":"https://github.com/elastic/elasticsearch/issues/54465#issuecomment-606248167","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54465","id":606248167,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjI0ODE2Nw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-03-30T21:02:48Z","updated_at":"2020-03-30T21:02:48Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-ql (:Query Languages/EQL)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/607175099","html_url":"https://github.com/elastic/elasticsearch/issues/54465#issuecomment-607175099","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54465","id":607175099,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNzE3NTA5OQ==","user":{"login":"astefan","id":893749,"node_id":"MDQ6VXNlcjg5Mzc0OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/893749?v=4","gravatar_id":"","url":"https://api.github.com/users/astefan","html_url":"https://github.com/astefan","followers_url":"https://api.github.com/users/astefan/followers","following_url":"https://api.github.com/users/astefan/following{/other_user}","gists_url":"https://api.github.com/users/astefan/gists{/gist_id}","starred_url":"https://api.github.com/users/astefan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/astefan/subscriptions","organizations_url":"https://api.github.com/users/astefan/orgs","repos_url":"https://api.github.com/users/astefan/repos","events_url":"https://api.github.com/users/astefan/events{/privacy}","received_events_url":"https://api.github.com/users/astefan/received_events","type":"User","site_admin":false},"created_at":"2020-04-01T10:44:06Z","updated_at":"2020-04-01T10:53:08Z","author_association":"CONTRIBUTOR","body":"I think I don't have the whole picture here and I am missing something obvious, thus my questions below, trying to learn more about this function.\r\n\r\nWhat is the main use case for this function?\r\nI see this [example in your PR](https://github.com/elastic/elasticsearch/pull/54470/files#diff-2593107af0e11d22c241b776fb13876aR6) where a comparison is being made between `string(serial_event_id)` and `\"1\"`. In this specific case, why not doing `serial_event_id = 1`?\r\n\r\nSame question for the [second example](https://github.com/elastic/elasticsearch/pull/54470/files#diff-2593107af0e11d22c241b776fb13876aR12) - `string(ppid) == \"null\"` - why not doing `ppid == null`?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/607469116","html_url":"https://github.com/elastic/elasticsearch/issues/54465#issuecomment-607469116","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54465","id":607469116,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNzQ2OTExNg==","user":{"login":"rw-access","id":31489089,"node_id":"MDQ6VXNlcjMxNDg5MDg5","avatar_url":"https://avatars1.githubusercontent.com/u/31489089?v=4","gravatar_id":"","url":"https://api.github.com/users/rw-access","html_url":"https://github.com/rw-access","followers_url":"https://api.github.com/users/rw-access/followers","following_url":"https://api.github.com/users/rw-access/following{/other_user}","gists_url":"https://api.github.com/users/rw-access/gists{/gist_id}","starred_url":"https://api.github.com/users/rw-access/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rw-access/subscriptions","organizations_url":"https://api.github.com/users/rw-access/orgs","repos_url":"https://api.github.com/users/rw-access/repos","events_url":"https://api.github.com/users/rw-access/events{/privacy}","received_events_url":"https://api.github.com/users/rw-access/received_events","type":"User","site_admin":false},"created_at":"2020-04-01T20:19:03Z","updated_at":"2020-04-01T20:21:08Z","author_association":"MEMBER","body":"The `string` and `number` (#54471) functions were added to EQL to facilitate comparisons across types.\r\n\r\nThe test examples were clearly silly, but still tested the function with uncomplicated examples. Ideally, both functions will be rarely used, and every field transformation is done at index time. But having these functions helps us fill in the gaps when types don't quite match when you need them to.\r\n\r\nThe `string` function is also identical to `concat`, but with a single argument.","performed_via_github_app":null}]