[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/367529031","html_url":"https://github.com/elastic/elasticsearch/issues/28776#issuecomment-367529031","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28776","id":367529031,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NzUyOTAzMQ==","user":{"login":"chakpongchung","id":8110904,"node_id":"MDQ6VXNlcjgxMTA5MDQ=","avatar_url":"https://avatars0.githubusercontent.com/u/8110904?v=4","gravatar_id":"","url":"https://api.github.com/users/chakpongchung","html_url":"https://github.com/chakpongchung","followers_url":"https://api.github.com/users/chakpongchung/followers","following_url":"https://api.github.com/users/chakpongchung/following{/other_user}","gists_url":"https://api.github.com/users/chakpongchung/gists{/gist_id}","starred_url":"https://api.github.com/users/chakpongchung/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chakpongchung/subscriptions","organizations_url":"https://api.github.com/users/chakpongchung/orgs","repos_url":"https://api.github.com/users/chakpongchung/repos","events_url":"https://api.github.com/users/chakpongchung/events{/privacy}","received_events_url":"https://api.github.com/users/chakpongchung/received_events","type":"User","site_admin":false},"created_at":"2018-02-22T00:46:17Z","updated_at":"2018-02-22T00:46:17Z","author_association":"NONE","body":"![screen shot 2018-02-21 at 4 45 13 pm](https://user-images.githubusercontent.com/8110904/36513891-afa1407e-1726-11e8-8282-26f6ebf3a345.png)\r\n<img width=\"667\" alt=\"screen shot 2018-02-21 at 4 46 02 pm\" src=\"https://user-images.githubusercontent.com/8110904/36513910-bac9b7ce-1726-11e8-92ff-b79ff2df5916.png\">\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/367592980","html_url":"https://github.com/elastic/elasticsearch/issues/28776#issuecomment-367592980","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28776","id":367592980,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NzU5Mjk4MA==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2018-02-22T07:39:20Z","updated_at":"2018-02-22T07:39:20Z","author_association":"CONTRIBUTOR","body":"I have followed these instructions in a clean 6.2.1 cluster and do not see this effect. The given code, yields no hits because it lacks a refresh:\r\n\r\n```\r\n$ node index.js \r\nindex created?: {\r\n  \"acknowledged\": true,\r\n  \"shards_acknowledged\": true,\r\n  \"index\": \"fuzzy_products\"\r\n}\r\nmapping created: { acknowledged: true }\r\nIndexed document?: { _index: 'fuzzy_products',\r\n  _type: 'product',\r\n  _id: 'The Water Horse',\r\n  _version: 1,\r\n  result: 'created',\r\n  _shards: { total: 2, successful: 1, failed: 0 },\r\n  _seq_no: 0,\r\n  _primary_term: 1 }\r\nExpalin found?: { _index: 'fuzzy_products',\r\n  _type: 'product',\r\n  _id: 'The Water Horse',\r\n  matched: false }\r\nSuccess found?: { took: 1,\r\n  timed_out: false,\r\n  _shards: { total: 5, successful: 5, skipped: 0, failed: 0 },\r\n  hits: { total: 0, max_score: null, hits: [] } } { total: 0, max_score: null, hits: [] }\r\n```\r\n\r\nIf I change the line that indexes the document to read\r\n\r\n      url = 'http://localhost:9200/fuzzy_products/product/' + documentName + '?refresh'\r\n\r\n... then the document is returned, with score `0.8630436` just as reported in Kibana:\r\n\r\n```\r\n$ node index.js \r\nindex created?: {\r\n  \"error\": {\r\n    \"root_cause\": [\r\n      {\r\n        \"type\": \"resource_already_exists_exception\",\r\n        \"reason\": \"index [fuzzy_products/s7lfzmNITwGKlXkK7fFqZw] already exists\",\r\n        \"index_uuid\": \"s7lfzmNITwGKlXkK7fFqZw\",\r\n        \"index\": \"fuzzy_products\"\r\n      }\r\n    ],\r\n    \"type\": \"resource_already_exists_exception\",\r\n    \"reason\": \"index [fuzzy_products/s7lfzmNITwGKlXkK7fFqZw] already exists\",\r\n    \"index_uuid\": \"s7lfzmNITwGKlXkK7fFqZw\",\r\n    \"index\": \"fuzzy_products\"\r\n  },\r\n  \"status\": 400\r\n}\r\nmapping created: { acknowledged: true }\r\nIndexed document?: { _index: 'fuzzy_products',\r\n  _type: 'product',\r\n  _id: 'The Water Horse',\r\n  _version: 2,\r\n  result: 'updated',\r\n  forced_refresh: true,\r\n  _shards: { total: 2, successful: 1, failed: 0 },\r\n  _seq_no: 1,\r\n  _primary_term: 1 }\r\nExpalin found?: { _index: 'fuzzy_products',\r\n  _type: 'product',\r\n  _id: 'The Water Horse',\r\n  matched: true,\r\n  explanation: \r\n   { value: 0.8630463,\r\n     description: 'sum of:',\r\n     details: [ [Object], [Object], [Object] ] } }\r\nSuccess found?: { took: 2,\r\n  timed_out: false,\r\n  _shards: { total: 5, successful: 5, skipped: 0, failed: 0 },\r\n  hits: { total: 1, max_score: 0.8630463, hits: [ [Object] ] } } { total: 1,\r\n  max_score: 0.8630463,\r\n  hits: \r\n   [ { _index: 'fuzzy_products',\r\n       _type: 'product',\r\n       _id: 'The Water Horse',\r\n       _score: 0.8630463,\r\n       _source: [Object] } ] }\r\n```\r\n\r\nNote that the commands run in Kibana don't exactly match those in the script: at least, the search URL in this script differs:\r\n\r\n      url = 'http://localhost:9200/fuzzy_products/product/_search?pretty=true&search_type=dfs_query_then_fetch'\r\n\r\nIt's not clear that this matters, but it's worth noting that all Kibana does is make HTTP calls to Elasticsearch, so if you make the same HTTP calls you should get the same results. I expect the reported effect is some other kind of difference between what you're doing in Kibana and in your script.\r\n\r\nI'm closing this for now but if you can provide commands that do reproduce this effect then please reopen.","performed_via_github_app":null}]