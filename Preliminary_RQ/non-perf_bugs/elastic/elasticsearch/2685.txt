{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/2685","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2685/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2685/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2685/events","html_url":"https://github.com/elastic/elasticsearch/issues/2685","id":11352743,"node_id":"MDU6SXNzdWUxMTM1Mjc0Mw==","number":2685,"title":"Native client requests with types passed as \"_all\" yield no results","user":{"login":"michaelklishin","id":1090,"node_id":"MDQ6VXNlcjEwOTA=","avatar_url":"https://avatars3.githubusercontent.com/u/1090?v=4","gravatar_id":"","url":"https://api.github.com/users/michaelklishin","html_url":"https://github.com/michaelklishin","followers_url":"https://api.github.com/users/michaelklishin/followers","following_url":"https://api.github.com/users/michaelklishin/following{/other_user}","gists_url":"https://api.github.com/users/michaelklishin/gists{/gist_id}","starred_url":"https://api.github.com/users/michaelklishin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/michaelklishin/subscriptions","organizations_url":"https://api.github.com/users/michaelklishin/orgs","repos_url":"https://api.github.com/users/michaelklishin/repos","events_url":"https://api.github.com/users/michaelklishin/events{/privacy}","received_events_url":"https://api.github.com/users/michaelklishin/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2013-02-25T10:00:31Z","updated_at":"2014-08-08T13:14:49Z","closed_at":"2014-08-08T10:26:24Z","author_association":"NONE","active_lock_reason":null,"body":"I've noticed that when search request has types set to `\"_all\"`, even Match All query\nfails.\n\nTo make sure, I've added a test to `org.elasticsearch.test.integration.search.simple.SimpleSearchTests`, which is a replicated passing test where\nmapping type is added as \"_all\":\n\n``` java\n  @Test\n  public void simpleIdTestsAcrossAllMappingTypes() {\n    client.admin().indices().prepareDelete().execute().actionGet();\n    client.admin().indices().prepareCreate(\"test\").setSettings(ImmutableSettings.settingsBuilder().put(\"index.number_of_shards\", 1)).execute().actionGet();\n\n    client.prepareIndex(\"test\", \"type\", \"XXX1\").setSource(\"field\", \"value\").setRefresh(true).execute().actionGet();\n    // id is not indexed, but lets see that we automatically convert to\n    SearchResponse searchResponse = client.prepareSearch().setTypes(\"_all\").setQuery(QueryBuilders.termQuery(\"_id\", \"XXX1\")).execute().actionGet();\n    assertThat(searchResponse.getHits().totalHits(), equalTo(1l));\n\n    searchResponse = client.prepareSearch().setTypes(\"_all\").\n        setQuery(QueryBuilders.queryString(\"_id:XXX1\")).execute().actionGet();\n    assertThat(searchResponse.getHits().totalHits(), equalTo(1l));\n\n    // id is not index, but we can automatically support prefix as well\n    searchResponse = client.prepareSearch().setTypes(\"_all\").\n        setQuery(QueryBuilders.prefixQuery(\"_id\", \"XXX\")).execute().actionGet();\n    assertThat(searchResponse.getHits().totalHits(), equalTo(1l));\n\n    searchResponse = client.prepareSearch().setTypes(\"_all\").\n        setQuery(QueryBuilders.queryString(\"_id:XXX*\").lowercaseExpandedTerms(false)).execute().actionGet();\n    assertThat(searchResponse.getHits().totalHits(), equalTo(1l));\n  }\n```\n\nand it fails (totalHits returns `0`). When `SearchRequest#setTypes` is not used, it passes\njust fine.\n\nIt may be my misunderstanding of how to query against all types and indices via the native\nclient, but documentation and mailing list archives yield nothing on the subject.\n\nShould `\"_all\"` be recognized in this case or should types be not explicitly set at all\non the search request?\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}