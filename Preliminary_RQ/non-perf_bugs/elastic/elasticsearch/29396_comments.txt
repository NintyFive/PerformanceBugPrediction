[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/379000221","html_url":"https://github.com/elastic/elasticsearch/issues/29396#issuecomment-379000221","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29396","id":379000221,"node_id":"MDEyOklzc3VlQ29tbWVudDM3OTAwMDIyMQ==","user":{"login":"scottsom","id":23276852,"node_id":"MDQ6VXNlcjIzMjc2ODUy","avatar_url":"https://avatars1.githubusercontent.com/u/23276852?v=4","gravatar_id":"","url":"https://api.github.com/users/scottsom","html_url":"https://github.com/scottsom","followers_url":"https://api.github.com/users/scottsom/followers","following_url":"https://api.github.com/users/scottsom/following{/other_user}","gists_url":"https://api.github.com/users/scottsom/gists{/gist_id}","starred_url":"https://api.github.com/users/scottsom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scottsom/subscriptions","organizations_url":"https://api.github.com/users/scottsom/orgs","repos_url":"https://api.github.com/users/scottsom/repos","events_url":"https://api.github.com/users/scottsom/events{/privacy}","received_events_url":"https://api.github.com/users/scottsom/received_events","type":"User","site_admin":false},"created_at":"2018-04-05T16:42:42Z","updated_at":"2018-04-05T16:42:42Z","author_association":"CONTRIBUTOR","body":"Similar to #22472","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/379001450","html_url":"https://github.com/elastic/elasticsearch/issues/29396#issuecomment-379001450","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29396","id":379001450,"node_id":"MDEyOklzc3VlQ29tbWVudDM3OTAwMTQ1MA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-04-05T16:46:46Z","updated_at":"2018-04-05T16:46:46Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/379250198","html_url":"https://github.com/elastic/elasticsearch/issues/29396#issuecomment-379250198","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29396","id":379250198,"node_id":"MDEyOklzc3VlQ29tbWVudDM3OTI1MDE5OA==","user":{"login":"makitka2007","id":38106681,"node_id":"MDQ6VXNlcjM4MTA2Njgx","avatar_url":"https://avatars3.githubusercontent.com/u/38106681?v=4","gravatar_id":"","url":"https://api.github.com/users/makitka2007","html_url":"https://github.com/makitka2007","followers_url":"https://api.github.com/users/makitka2007/followers","following_url":"https://api.github.com/users/makitka2007/following{/other_user}","gists_url":"https://api.github.com/users/makitka2007/gists{/gist_id}","starred_url":"https://api.github.com/users/makitka2007/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/makitka2007/subscriptions","organizations_url":"https://api.github.com/users/makitka2007/orgs","repos_url":"https://api.github.com/users/makitka2007/repos","events_url":"https://api.github.com/users/makitka2007/events{/privacy}","received_events_url":"https://api.github.com/users/makitka2007/received_events","type":"User","site_admin":false},"created_at":"2018-04-06T13:17:31Z","updated_at":"2018-04-06T13:24:06Z","author_association":"NONE","body":"yep, I read that issue, thank you for a link. actually I am not completely agree with following points: \"limited audience\" and \"can be implemented application side\".\r\nIt's a widely-used approach for multi-tenant applications, to use aliases with filters and routing parameters inside instead of manually filtering and routing. It allows combining aliases, by simple specifying /some_resource_org1,some_resource_org2 in search url. and the killer feature is that for some customer we can create a new index instead of its alias, and this customer will work with it's own index without any changes on application level.\r\nbut now if we have some new customer, we need to create aliases for all resources and this customer, and if new resource is appeared, then aliases should be created for all existing customers. that's really annoying.\r\nso it will be cool to have at least such aliases for each index, like\r\n```\r\nPUT /some_resource/_aliases/some_resource_([\\w\\d]+)\r\n{\r\n  \"routing\": \"\\\\1\",\r\n  \"filter\": { \"term\": { \"organization_id\" : \"\\\\1\" } }\r\n}\r\n```\r\nso, if i create such virtual alias, I guarantee that no intersections can be with other virtual aliases.\r\nbut - still need to check existence of real index with such name\r\nso, if I perform search on some_resource_org1 and \"some_resource_org1\" index exists, then this index is used. if not, then \"some_resource\" is used with \"org1\" routing and filter parameters.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/380944250","html_url":"https://github.com/elastic/elasticsearch/issues/29396#issuecomment-380944250","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29396","id":380944250,"node_id":"MDEyOklzc3VlQ29tbWVudDM4MDk0NDI1MA==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2018-04-12T21:06:00Z","updated_at":"2018-04-12T21:06:00Z","author_association":"MEMBER","body":"@makitka2007 we discussed this on FixItFriday and we are very hesitant of introducing templates to add aliases to indices. The two main reasons are:\r\n1) There are already templates for indices, and we are actively looking for ways to simplify them.  Adding templated aliases will added another layer of complexity and will have to resolve how these two interact.\r\n2) Currently, when someone calls `PUT index/type/1` and we can't resolve the index, we can interpret the first string as a index for auto creation (if not disabled). This is important for time based date. With the introduction of templated aliases, this might not be the case anymore - maybe it matches an alias? for this we will have to introduce a whole new interaction between the coordinating node and the master and there are a few edge cases to address there - for example, with *generic* templates there is no guarantee that the incoming string will actually match anything once the template have run.\r\n\r\nAll in all, we feel the trade off are wrong and thus closing this as won't fix.\r\n","performed_via_github_app":null}]