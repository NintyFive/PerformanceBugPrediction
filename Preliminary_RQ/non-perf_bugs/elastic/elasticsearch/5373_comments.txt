[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/65227942","html_url":"https://github.com/elastic/elasticsearch/issues/5373#issuecomment-65227942","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5373","id":65227942,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjI3OTQy","user":{"login":"rphadake","id":2480250,"node_id":"MDQ6VXNlcjI0ODAyNTA=","avatar_url":"https://avatars2.githubusercontent.com/u/2480250?v=4","gravatar_id":"","url":"https://api.github.com/users/rphadake","html_url":"https://github.com/rphadake","followers_url":"https://api.github.com/users/rphadake/followers","following_url":"https://api.github.com/users/rphadake/following{/other_user}","gists_url":"https://api.github.com/users/rphadake/gists{/gist_id}","starred_url":"https://api.github.com/users/rphadake/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rphadake/subscriptions","organizations_url":"https://api.github.com/users/rphadake/orgs","repos_url":"https://api.github.com/users/rphadake/repos","events_url":"https://api.github.com/users/rphadake/events{/privacy}","received_events_url":"https://api.github.com/users/rphadake/received_events","type":"User","site_admin":false},"created_at":"2014-12-02T13:08:30Z","updated_at":"2014-12-02T13:08:46Z","author_association":"CONTRIBUTOR","body":" \"+ 1 \"\n\nSearching for adding custom analysis within ES code which can work across shard with query_fetch mode semantics.  \nSolr has some experimental code which allows adding custom code. https://cwiki.apache.org/confluence/display/solr/AnalyticsQuery+API\nEs does have postFilter which can be useful here?\n\n.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148078768","html_url":"https://github.com/elastic/elasticsearch/issues/5373#issuecomment-148078768","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5373","id":148078768,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODA3ODc2OA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-10-14T15:07:14Z","updated_at":"2015-10-14T15:07:14Z","author_association":"CONTRIBUTOR","body":"Elasticsearch is a very different beast. This syntax is targeted at stream processing of raw data, while Elasticsearch gains its speed advantage by indexing everything up front.  While I could imagine somebody building something like this into a plugin or application based on elasticsearch, I don't think the syntax is right for inclusion in core.\n","performed_via_github_app":null}]