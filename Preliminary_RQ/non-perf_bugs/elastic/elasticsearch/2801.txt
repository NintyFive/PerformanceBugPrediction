{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/2801","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2801/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2801/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2801/events","html_url":"https://github.com/elastic/elasticsearch/issues/2801","id":12201997,"node_id":"MDU6SXNzdWUxMjIwMTk5Nw==","number":2801,"title":"missing not working in filters","user":{"login":"swarzech","id":197128,"node_id":"MDQ6VXNlcjE5NzEyOA==","avatar_url":"https://avatars1.githubusercontent.com/u/197128?v=4","gravatar_id":"","url":"https://api.github.com/users/swarzech","html_url":"https://github.com/swarzech","followers_url":"https://api.github.com/users/swarzech/followers","following_url":"https://api.github.com/users/swarzech/following{/other_user}","gists_url":"https://api.github.com/users/swarzech/gists{/gist_id}","starred_url":"https://api.github.com/users/swarzech/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/swarzech/subscriptions","organizations_url":"https://api.github.com/users/swarzech/orgs","repos_url":"https://api.github.com/users/swarzech/repos","events_url":"https://api.github.com/users/swarzech/events{/privacy}","received_events_url":"https://api.github.com/users/swarzech/received_events","type":"User","site_admin":false},"labels":[{"id":141079527,"node_id":"MDU6TGFiZWwxNDEwNzk1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Geo","name":":Analytics/Geo","color":"0e8a16","default":false,"description":"Indexing, search aggregations of geo points and shapes"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2013-03-19T21:11:46Z","updated_at":"2015-09-19T17:26:25Z","closed_at":"2015-09-19T17:26:25Z","author_association":"NONE","active_lock_reason":null,"body":"I am working on a query to do some searching between multiple indexes with different fields and I am having an issue with the location filter. \n\nThe error message that I am getting is \"QueryParsingException[[<index>] failed to find geo_point field [location.lat_lon]\". \n\nThe bool statements with the exists clause in the query section fixes this issue but I have not been able to find a way to work around it in the filters section.  I have tried every combination I can think of with and, or and bool to get this to work.\n\nI am running my query against an alias and what I am looking for is test1 that matches \"Dallas\" in title or description and test2 that matches \"Dallas\" in description or location.lat_lon within 50 miles of [-96.795402, 32.778149].  The boolean in the query section works so that I do not get an error when test2 does not have the field title but is does not work within the filters section when test1 does not have the field location.lat_lon.  If I run the query against just test2 I do not get any errors.\n\nI talked with Clint via the google group(https://groups.google.com/forum/?fromgroups=#!searchin/elasticsearch/missing/elasticsearch/msN_XS3Ad2M/8Xw2CI7yMqYJ) and his findings were:\nIt does indeed fail if the field is not in the mapping of whichever index it looks at first (which varies per shard and per run)\n\nThe setup that I have is:\n\nindex test1\n\n``` ruby\ncurl -X POST http://localhost:9200/test1 -d '{\n  \"mappings\": {\n    \"a\": {\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\",\n          \"index\": \"not_analyzed\",\n          \"include_in_all\": true\n        },\n        \"title\": {\n          \"type\": \"string\",\n          \"analyzer\": \"snowball\",\n          \"boost\": 2.0\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"analyzer\": \"snowball\"\n        }\n      }\n    }\n  }\n}'\n```\n\nindex test2\n\n``` ruby\ncurl -X POST http://localhost:9200/test2 -d '{\n  \"mappings\": {\n    \"b\": {\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\",\n          \"index\": \"not_analyzed\",\n          \"include_in_all\": true\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"analyzer\": \"snowball\",\n          \"boost\": 2.0\n        },\n        \"location\": {\n          \"properties\": {\n            \"lat_lon\": {\n              \"type\": \"geo_point\",\n              \"lat_lon\": true\n            }\n          }\n        }\n      }\n    }\n  }\n}'\n```\n\nmy alias is set up as\n\n``` ruby\ncurl -X POST \"http://localhost:9200/_aliases\" -d '{\n  \"actions\":[\n    {\"add\":{\n      \"index\":\"test1\",\n      \"alias\":\"u1\"\n      }\n    },\n    {\"add\":{\n      \"index\":\"test2\",\n      \"alias\":\"u1\"\n      }\n    }\n  ]\n}'\n```\n\nmy query is\n\n``` ruby\n'{\n  \"query\": {\n    \"custom_filters_score\": {\n      \"query\": {\n        \"bool\": {\n          \"should\": [\n            {\n              \"bool\": {\n                \"must\": [\n                  {\n                    \"query_string\": {\n                      \"query\": \"_exists_:title\"\n                    }\n                  },\n                  {\n                    \"query_string\": {\n                      \"query\": \"title:Dallas\",\n                      \"boost\": 2.0\n                    }\n                  }\n                ]\n              }\n            },\n            {\n              \"bool\": {\n                \"must\": [\n                  {\n                    \"query_string\": {\n                      \"query\": \"_exists_:description\"\n                    }\n                  },\n                  {\n                    \"query_string\": {\n                      \"query\": \"description:Dallas\",\n                      \"boost\": 2.0\n                    }\n                  }\n                ]\n              }\n            }\n          ],\n          \"minimum_number_should_match\": 1\n        }\n      },\n      \"filters\": [\n        {\n          \"filter\": {\n            \"or\": [\n              {\n                \"missing\": {\n                  \"field\": \"location.lat_lon\"\n                }\n              },\n              {\n                \"geo_distance\": {\n                  \"distance\": \"50mi\",\n                  \"location.lat_lon\": [\n                    -96.795402,\n                    32.778149\n                  ]\n                }\n              }\n            ]\n          },\n          \"boost\": 2.0\n        }\n      ]\n    }\n  },\n  \"size\": 20,\n  \"from\": 0\n}'\n```\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}