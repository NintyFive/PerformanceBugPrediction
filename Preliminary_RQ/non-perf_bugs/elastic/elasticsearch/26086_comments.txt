[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320842135","html_url":"https://github.com/elastic/elasticsearch/issues/26086#issuecomment-320842135","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26086","id":320842135,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDg0MjEzNQ==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2017-08-08T03:45:39Z","updated_at":"2017-08-08T03:45:39Z","author_association":"MEMBER","body":"Because of the HL transitive dependencies we have today, I really like having a low level one much lighter.\r\nSo for now, I'm not a fan of this proposal.\r\n\r\nOnce we won't be depending on core anymore, I'd be +1 for this.\r\n\r\nMy 2 cents ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320881381","html_url":"https://github.com/elastic/elasticsearch/issues/26086#issuecomment-320881381","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26086","id":320881381,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDg4MTM4MQ==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-08-08T07:59:20Z","updated_at":"2017-08-08T07:59:20Z","author_association":"MEMBER","body":"Merging them is not an option, as there are users using low-level client only. I think the problem here is that some users are confused by having to do:\r\n\r\n```\r\nRestClient lowLevelClient = RestClient.builder(new HttpHost(\"localhost\", 9200));\r\nRestHighLevelClient client = new RestHighLevelClient(lowLevelClient);\r\n```\r\n\r\nand then having to close the low level one. We could for instance make the high level client `Closeable` and have it close the internal low level client instance, so that the close part is less confusing.\r\n\r\nAlso, we could have a specialized constructor that allows to do the following:\r\n\r\n```\r\nRestHighLevelClient client = new RestHighLevelClient(new HttpHost(\"localhost\", 9200);\r\n```\r\n\r\nWe could internally create the low-level client instance and feed it with the provided hosts. That said, whenever any http setting has to differ from the default values, like timeouts, authentication etc. a properly configured low level client instance will need to provided. That is because we don't want to  hide the fact that the high level client works on top of the low level client, which would also require to add more abstraction layers that complicate things and become hard to maintain.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320887606","html_url":"https://github.com/elastic/elasticsearch/issues/26086#issuecomment-320887606","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26086","id":320887606,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDg4NzYwNg==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2017-08-08T08:25:33Z","updated_at":"2017-08-08T08:25:33Z","author_association":"MEMBER","body":"I agree with Luca's comment. If having two clients to manage is confusing then we can provide a closing method in the high-level client that takes care to close the underlying low-level client, but I'm against merging the code of the 2 clients together for the same reasons already mentioned.\r\n\r\nI also think that providing a specialized constructor would make things even less confusing for people using dependency injection frameworks like Spring (only 1 bean to declare, and its lifecycle can be managed by the framework itself), but maybe we should wait a bit for more feedback before adding such ctor.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320890245","html_url":"https://github.com/elastic/elasticsearch/issues/26086#issuecomment-320890245","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26086","id":320890245,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDg5MDI0NQ==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2017-08-08T08:37:23Z","updated_at":"2017-08-08T08:37:23Z","author_association":"MEMBER","body":"@tlrx I agree that having 2 clients has been a bit painful when I updated the spring-elasticsearch project (https://github.com/dadoonet/spring-elasticsearch/pull/123) as I had to reference the low level one with something like:\r\n\r\n```java\r\n<elasticsearch:rest-high-level-client id=\"esHighLevelClient\" client=\"esClient\"/>\r\n```\r\n\r\nor\r\n\r\n```xml\r\n\t<bean id=\"esClient\"\r\n\t\tclass=\"fr.pilato.spring.elasticsearch.ElasticsearchRestClientFactoryBean\" >\r\n\t\t<property name=\"esNodes\">\r\n\t\t\t<list>\r\n\t\t\t\t<value>localhost:9200</value>\r\n\t\t\t</list>\r\n\t\t</property>\r\n\t</bean>\r\n\r\n\t<bean id=\"esHighLevelClient\"\r\n\t\t  class=\"fr.pilato.spring.elasticsearch.ElasticsearchHighLevelRestClientFactoryBean\" >\r\n\t\t<property name=\"client\" ref=\"esClient\" />\r\n\t</bean>\r\n```\r\n\r\nSo definitely I'm +1 for having the high level client as a Closeable one with a way to build it more easily.\r\n\r\nI just wonder why actually we don't have:\r\n\r\n```java\r\npublic class RestHighLevelClient extends RestClient {\r\n   // \r\n}\r\n```\r\n\r\nBecause actually the RestHighLevelClient is like an extension of the LowLevel one.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320897815","html_url":"https://github.com/elastic/elasticsearch/issues/26086#issuecomment-320897815","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26086","id":320897815,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDg5NzgxNQ==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2017-08-08T09:08:52Z","updated_at":"2017-08-08T09:08:52Z","author_association":"MEMBER","body":"@dadoonet Yes, I expect Spring users to do something like this. To be honest I don't see this as painful because it is very common to define a low level object (like a data source) that is used by another one at a higher level in the application layers (like a DAO or something). I also think that most user will define custom timeout values for their production platforms.\r\n\r\nHaving the `RestHighLevelClient` extending `RestClient` will confuse things I think. This will expose `bulk()` or `search()` domain specific methods along with `buildUri()` or `performRequestAsync()` methods and I don't think we want to do that. `RestHighLevelClient` is not an extension of `RestClient`, it just operates at a different level.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320899668","html_url":"https://github.com/elastic/elasticsearch/issues/26086#issuecomment-320899668","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26086","id":320899668,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDg5OTY2OA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-08-08T09:16:46Z","updated_at":"2017-08-08T09:16:46Z","author_association":"MEMBER","body":"This may just be a naming issue after all. I see the high-level client as a wrapper more than an extension. They should be two separate objects, and high-level uses/depends on low-level. The concept is: low-level handles connections and sends requests, while high-level takes care of requests marshalling and responses un-marshalling.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320903226","html_url":"https://github.com/elastic/elasticsearch/issues/26086#issuecomment-320903226","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26086","id":320903226,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDkwMzIyNg==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2017-08-08T09:30:25Z","updated_at":"2017-08-08T09:30:55Z","author_association":"MEMBER","body":"At the end of the day, I often have to use the high level methods and the low level methods when something is not exposed yet by the high level client (create an index for example).\r\n\r\nFor now I write something like:\r\n\r\n```java\r\nRestClient lowLevel = // init\r\nRestHighLevelClient highLevel = new RestHighLevelClient(lowLevel);\r\n\r\nlowLevel.performRequest(\"PUT\", \"/index\");\r\nhighLevel.search(new SearchRequest());\r\nlowLevel.performRequest(\"DELETE\", \"/index\");\r\n```\r\n\r\nSo I need to have access to the Low Level client. Which means that if we don't extend the Low Level client, then we need to provide a getter to have an access to the low level one anyway.\r\n\r\nExtending the low level client would simplify this a bit:\r\n\r\n```java\r\nRestHighLevelClient client = // init\r\n\r\nclient.performRequest(\"PUT\", \"/index\");\r\nclient.search(new SearchRequest());\r\nclient.performRequest(\"DELETE\", \"/index\");\r\n```\r\n\r\nI know we are exposing \"more advanced\" methods but that's ok IMO.\r\n\r\nNote: I'm just expressing my thoughts here. One way or another is fine to me.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320905486","html_url":"https://github.com/elastic/elasticsearch/issues/26086#issuecomment-320905486","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26086","id":320905486,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDkwNTQ4Ng==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2017-08-08T09:39:15Z","updated_at":"2017-08-08T09:39:15Z","author_association":"MEMBER","body":"> So I need to have access to the Low Level client.\r\n\r\nThis makes sense, I think keeping track of both LL and HL client references complicates things a bit. I think a getter would be better a better solution than `RestHighLevelClient extends RestClient` though, for the same reasons @tlrx and @javanna mentioned. Maybe another option would be to make `RestClient` an interface that only exposes the functionality that the HL client also needs and then have HL client implement that interface and delegate to the LL client implementation (e.g. for `performRequest()` like in your example). Or even without the interface, by just adding those delegating methods that are needed to the HL client as well?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320947042","html_url":"https://github.com/elastic/elasticsearch/issues/26086#issuecomment-320947042","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26086","id":320947042,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDk0NzA0Mg==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2017-08-08T12:54:09Z","updated_at":"2017-08-08T12:54:09Z","author_association":"MEMBER","body":"> Or even without the interface, by just adding those delegating methods that are needed to the HL client as well?\r\n\r\nI think that would be a very good compromise.","performed_via_github_app":null}]