{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/27684","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27684/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27684/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27684/events","html_url":"https://github.com/elastic/elasticsearch/issues/27684","id":279623637,"node_id":"MDU6SXNzdWUyNzk2MjM2Mzc=","number":27684,"title":"exception occur when use performRequestAsync","user":{"login":"OuyangKevin","id":8298108,"node_id":"MDQ6VXNlcjgyOTgxMDg=","avatar_url":"https://avatars0.githubusercontent.com/u/8298108?v=4","gravatar_id":"","url":"https://api.github.com/users/OuyangKevin","html_url":"https://github.com/OuyangKevin","followers_url":"https://api.github.com/users/OuyangKevin/followers","following_url":"https://api.github.com/users/OuyangKevin/following{/other_user}","gists_url":"https://api.github.com/users/OuyangKevin/gists{/gist_id}","starred_url":"https://api.github.com/users/OuyangKevin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OuyangKevin/subscriptions","organizations_url":"https://api.github.com/users/OuyangKevin/orgs","repos_url":"https://api.github.com/users/OuyangKevin/repos","events_url":"https://api.github.com/users/OuyangKevin/events{/privacy}","received_events_url":"https://api.github.com/users/OuyangKevin/received_events","type":"User","site_admin":false},"labels":[{"id":407508641,"node_id":"MDU6TGFiZWw0MDc1MDg2NDE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Java%20Low%20Level%20REST%20Client","name":":Core/Features/Java Low Level REST Client","color":"0e8a16","default":false,"description":"Minimal dependencies Java Client for Elasticsearch"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-12-06T04:30:46Z","updated_at":"2018-03-13T18:28:10Z","closed_at":"2018-03-13T18:28:10Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Feature request -->\r\n\r\n**Describe the feature**:\r\n\r\n<!-- Bug report -->\r\n\r\nwhen i use performRequestAsync like this,it occur exeception:\r\n\r\n```\r\npublic static HashMap<String, String> baseParams = new HashMap<String,String>();\r\n\r\n    public static BasicHeader header = new BasicHeader(\"Content-Type\",\"application/json\");\r\n\r\n    static{\r\n        baseParams.put(\"pretty\", \"true\");\r\n    }\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        final int port = 9200;\r\n        List<String> ips = new ArrayList<String>();\r\n        ips.add(\"127.0.0.1\");\r\n\r\n        RestClient client;\r\n        HttpHost[] hosts = new HttpHost[ips.size()];\r\n        for (int i = 0; i < ips.size(); i++) {\r\n            String ip = ips.get(i);\r\n            HttpHost host = new HttpHost(ip, port, \"http\");\r\n            hosts[i] = host;\r\n        }\r\n\r\n        RestClientBuilder builder = RestClient.builder(hosts);\r\n        client = builder.build();\r\n\r\n        Map<String,Object> data1 = new HashMap<String,Object>();\r\n        data1.put(\"name\",\"kevin.yang\");\r\n        data1.put(\"age\",1);\r\n        String paramsJson = JSON.toJSONString(data1);\r\n\r\n        HttpEntity entity = new NStringEntity(paramsJson, ContentType.APPLICATION_JSON);\r\n        String endPoint = \"/yiling001/test\";\r\n\r\n        for(int i=0;i<100;i++){\r\n            client.performRequestAsync(\"POST\", endPoint+i,baseParams, entity,new ResponseListener(){\r\n\r\n                public void onSuccess(Response response) {\r\n\r\n                    System.out.println(\"success:\"+response);\r\n                }\r\n\r\n                public void onFailure(Exception e) {\r\n                    e.printStackTrace();\r\n                    System.out.println(\"error:\"+e);\r\n                }\r\n            },header);\r\n        }\r\n        System.out.println(\"end ....\");\r\n        while(true){\r\n            TimeUnit.SECONDS.sleep(1);\r\n        }\r\n\r\n    }\r\n```\r\n\r\nexception:\r\n```\r\njava.lang.IllegalArgumentException\r\n\tat java.nio.Buffer.position(Buffer.java:244)\r\n\tat java.nio.HeapByteBuffer.put(HeapByteBuffer.java:209)\r\n\tat org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.write(SessionOutputBufferImpl.java:177)\r\n\tat org.apache.http.impl.nio.codecs.AbstractContentEncoder.doWriteChunk(AbstractContentEncoder.java:178)\r\n\tat org.apache.http.impl.nio.codecs.AbstractContentEncoder.doWriteChunk(AbstractContentEncoder.java:164)\r\n\tat org.apache.http.impl.nio.codecs.AbstractContentEncoder.writeToBuffer(AbstractContentEncoder.java:151)\r\n\tat org.apache.http.impl.nio.codecs.LengthDelimitedEncoder.write(LengthDelimitedEncoder.java:112)\r\n\tat org.apache.http.nio.entity.NStringEntity.produceContent(NStringEntity.java:174)\r\n\tat org.apache.http.nio.protocol.BasicAsyncRequestProducer.produceContent(BasicAsyncRequestProducer.java:125)\r\n\tat org.apache.http.impl.nio.client.MainClientExec.produceContent(MainClientExec.java:262)\r\n\tat org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.produceContent(DefaultClientExchangeHandlerImpl.java:136)\r\n\tat org.apache.http.nio.protocol.HttpAsyncRequestExecutor.outputReady(HttpAsyncRequestExecutor.java:241)\r\n\tat org.apache.http.impl.nio.DefaultNHttpClientConnection.produceOutput(DefaultNHttpClientConnection.java:290)\r\n\tat org.apache.http.impl.nio.client.InternalIODispatch.onOutputReady(InternalIODispatch.java:86)\r\n\tat org.apache.http.impl.nio.client.InternalIODispatch.onOutputReady(InternalIODispatch.java:39)\r\n\tat org.apache.http.impl.nio.reactor.AbstractIODispatch.outputReady(AbstractIODispatch.java:145)\r\n\tat org.apache.http.impl.nio.reactor.BaseIOReactor.writable(BaseIOReactor.java:188)\r\n\tat org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent(AbstractIOReactor.java:341)\r\n\tat org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvents(AbstractIOReactor.java:315)\r\n\tat org.apache.http.impl.nio.reactor.AbstractIOReactor.execute(AbstractIOReactor.java:276)\r\n\tat org.apache.http.impl.nio.reactor.BaseIOReactor.execute(BaseIOReactor.java:104)\r\n\tat org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker.run(AbstractMultiworkerIOReactor.java:588)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\nand\r\n\r\n```\r\njava.util.concurrent.TimeoutException\r\n\tat org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:364)\r\n\tat org.apache.http.nio.pool.AbstractNIOConnPool.processNextPendingRequest(AbstractNIOConnPool.java:344)\r\n\tat org.apache.http.nio.pool.AbstractNIOConnPool.release(AbstractNIOConnPool.java:318)\r\n\tat org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.releaseConnection(PoolingNHttpClientConnectionManager.java:303)\r\n\tat org.apache.http.impl.nio.client.AbstractClientExchangeHandler.releaseConnection(AbstractClientExchangeHandler.java:239)\r\n\tat org.apache.http.impl.nio.client.MainClientExec.responseCompleted(MainClientExec.java:387)\r\n\tat org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.responseCompleted(DefaultClientExchangeHandlerImpl.java:168)\r\n\tat org.apache.http.nio.protocol.HttpAsyncRequestExecutor.processResponse(HttpAsyncRequestExecutor.java:436)\r\n\tat org.apache.http.nio.protocol.HttpAsyncRequestExecutor.inputReady(HttpAsyncRequestExecutor.java:326)\r\n\tat org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput(DefaultNHttpClientConnection.java:265)\r\n\tat org.apache.http.impl.nio.client.InternalIODispatch.onInputReady(InternalIODispatch.java:81)\r\n\tat org.apache.http.impl.nio.client.InternalIODispatch.onInputReady(InternalIODispatch.java:39)\r\n\tat org.apache.http.impl.nio.reactor.AbstractIODispatch.inputReady(AbstractIODispatch.java:114)\r\n\tat org.apache.http.impl.nio.reactor.BaseIOReactor.readable(BaseIOReactor.java:162)\r\n\tat org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent(AbstractIOReactor.java:337)\r\n\tat org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvents(AbstractIOReactor.java:315)\r\n\tat org.apache.http.impl.nio.reactor.AbstractIOReactor.execute(AbstractIOReactor.java:276)\r\n\tat org.apache.http.impl.nio.reactor.BaseIOReactor.execute(BaseIOReactor.java:104)\r\n\tat org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker.run(AbstractMultiworkerIOReactor.java:588)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\n\r\nthe rest client version is:\r\n\r\n```\r\n<dependency>\r\n            <groupId>org.elasticsearch.client</groupId>\r\n            <artifactId>rest</artifactId>\r\n            <version>6.0.0-alpha1</version>\r\n        </dependency>\r\n```\r\n\r\n\r\nand while use 6.0.0 ,it is the same!\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):\r\n5.5.3\r\n\r\n**Plugins installed**: []\r\nnone\r\n\r\n**JVM version** (`java -version`):\r\nclient JVM is 1.7\r\n\r\n**OS version** (`uname -a` if on a Unix-like system):\r\nMac os\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\n**Steps to reproduce**:\r\n\r\n 1. run the code multi times;\r\n 2. if i send performRequestAsync 5 times,maybe 4 success, 1 fail ; i use wireshark and find it made 5 TCP connection ,and only send 4 HTTP request\r\n\r\n3. is it bug or my wrong setting?\r\n\r\n**Provide logs (if relevant)**:\r\n","closed_by":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"performed_via_github_app":null}