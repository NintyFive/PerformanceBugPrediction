[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/621869202","html_url":"https://github.com/elastic/elasticsearch/issues/56004#issuecomment-621869202","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56004","id":621869202,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMTg2OTIwMg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-04-30T13:56:50Z","updated_at":"2020-04-30T13:56:50Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-features (:Core/Features/Ingest)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/638292008","html_url":"https://github.com/elastic/elasticsearch/issues/56004#issuecomment-638292008","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56004","id":638292008,"node_id":"MDEyOklzc3VlQ29tbWVudDYzODI5MjAwOA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-06-03T16:01:24Z","updated_at":"2020-06-03T16:01:24Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-ui (:ES-UI)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/645665738","html_url":"https://github.com/elastic/elasticsearch/issues/56004#issuecomment-645665738","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56004","id":645665738,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NTY2NTczOA==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2020-06-17T22:48:13Z","updated_at":"2020-06-17T22:54:40Z","author_association":"CONTRIBUTOR","body":"#56478 fixed a bug that may have led to missing information from the verbose output.\r\n#57906 introduces a description for each processor and #58207 will echo that in the verbose output. \r\n\r\nWith the bug fixed and description displayed, we still need:\r\n* display a processor if the `if` condition resulted in false\r\n* better handling when the drop processor drops is executed (today it is just a `null` in the output)\r\n\r\nI would like to propose to introduce to the output:\r\n* a new `status` field with the options `success, error, error_ignored, skipped, dropped`\r\n* a new `if` object that shows the condition and the resultant status \r\n* a new `processor_type` to help identify what kind of processor it is. \r\n\r\nFor example, for the given input (success):\r\n```\r\nPOST _ingest/pipeline/_simulate?verbose\r\n{\r\n  \"pipeline\": {\r\n    \"processors\": [\r\n      {\r\n        \"set\": {\r\n          \"if\": \"1 + 1 == 2\",\r\n          \"field\": \"a\",\r\n          \"value\": true,\r\n          \"description\": \"my description\",\r\n          \"tag\" : \"my tag\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"docs\": [\r\n    {\r\n      \"_source\": {}\r\n    }\r\n  ]\r\n}\r\n```\r\nthe verbose output is:\r\n```\r\n{\r\n  \"docs\" : [\r\n    {\r\n      \"processor_results\" : [\r\n        {\r\n          \"status\" : \"success\",\r\n          \"processor_type\" : \"set\",\r\n          \"description\" : \"my description\",\r\n          \"tag\" : \"my tag\",\r\n          \"if\" : {\r\n            \"condition\" : \"1 + 1 == 2\",\r\n            \"result\" : true\r\n          },\r\n          \"doc\" : {\r\n            \"_index\" : \"_index\",\r\n            \"_id\" : \"_id\",\r\n            \"_source\" : {\r\n              \"a\" : true\r\n            },\r\n            \"_ingest\" : {\r\n              \"pipeline\" : \"_simulate_pipeline\",\r\n              \"timestamp\" : \"2020-06-17T22:22:59.338538Z\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\nFor the given input (skipped):\r\n```\r\nPOST _ingest/pipeline/_simulate?verbose\r\n{\r\n  \"pipeline\": {\r\n    \"processors\": [\r\n      {\r\n        \"set\": {\r\n          \"if\": \"1 + 1 == 3\",\r\n          \"field\": \"a\",\r\n          \"value\": true,\r\n          \"description\": \"my description\",\r\n          \"tag\" : \"my tag\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"docs\": [\r\n    {\r\n      \"_source\": {}\r\n    }\r\n  ]\r\n}\r\n```\r\nthe output:\r\n```\r\n{\r\n  \"docs\" : [\r\n    {\r\n      \"processor_results\" : [\r\n        {\r\n          \"status\" : \"skipped\",\r\n          \"processor_type\" : \"set\",\r\n          \"description\" : \"my description\",\r\n          \"tag\" : \"my tag\",\r\n          \"if\" : {\r\n            \"condition\" : \"1 + 1 == 3\",\r\n            \"result\" : false\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\ninput (error_ignore):\r\n```\r\nPOST _ingest/pipeline/_simulate?verbose\r\n{\r\n  \"pipeline\": {\r\n    \"processors\": [\r\n      {\r\n        \"rename\": {\r\n          \"if\": \"1 + 1 == 2\",\r\n          \"target_field\": \"a\",\r\n          \"field\": \"b\",\r\n          \"ignore_failure\": true, \r\n          \"description\": \"my description\",\r\n          \"tag\" : \"my tag\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"docs\": [\r\n    {\r\n      \"_source\": {}\r\n    }\r\n  ]\r\n}\r\n```\r\noutput:\r\n```\r\n{\r\n  \"docs\" : [\r\n    {\r\n      \"processor_results\" : [\r\n        {\r\n          \"status\" : \"error_ignored\",\r\n          \"processor_type\" : \"rename\",\r\n          \"description\" : \"my description\",\r\n          \"tag\" : \"my tag\",\r\n          \"if\" : {\r\n            \"condition\" : \"1 + 1 == 2\",\r\n            \"result\" : true\r\n          },\r\n          \"ignored_error\" : {\r\n            \"error\" : {\r\n              \"root_cause\" : [\r\n                {\r\n                  \"type\" : \"illegal_argument_exception\",\r\n                  \"reason\" : \"field [b] doesn't exist\"\r\n                }\r\n              ],\r\n              \"type\" : \"illegal_argument_exception\",\r\n              \"reason\" : \"field [b] doesn't exist\"\r\n            }\r\n          },\r\n          \"doc\" : {\r\n            \"_index\" : \"_index\",\r\n            \"_id\" : \"_id\",\r\n            \"_source\" : { },\r\n            \"_ingest\" : {\r\n              \"pipeline\" : \"_simulate_pipeline\",\r\n              \"timestamp\" : \"2020-06-17T22:26:07.137658Z\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\ninput (error)\r\n```\r\nPOST _ingest/pipeline/_simulate?verbose\r\n{\r\n  \"pipeline\": {\r\n    \"processors\": [\r\n      {\r\n        \"rename\": {\r\n          \"if\": \"1 + 1 == 2\",\r\n          \"target_field\": \"a\",\r\n          \"field\": \"b\",\r\n          \"ignore_failure\": false, \r\n          \"description\": \"my description\",\r\n          \"tag\" : \"my tag\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"docs\": [\r\n    {\r\n      \"_source\": {}\r\n    }\r\n  ]\r\n}\r\n```\r\noutput:\r\n```\r\n{\r\n  \"docs\" : [\r\n    {\r\n      \"processor_results\" : [\r\n        {\r\n          \"status\" : \"error\",\r\n          \"processor_type\" : \"rename\",\r\n          \"description\" : \"my description\",\r\n          \"tag\" : \"my tag\",\r\n          \"if\" : {\r\n            \"condition\" : \"1 + 1 == 2\",\r\n            \"result\" : true\r\n          },\r\n          \"error\" : {\r\n            \"root_cause\" : [\r\n              {\r\n                \"type\" : \"illegal_argument_exception\",\r\n                \"reason\" : \"field [b] doesn't exist\"\r\n              }\r\n            ],\r\n            \"type\" : \"illegal_argument_exception\",\r\n            \"reason\" : \"field [b] doesn't exist\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\ninput (dropped) \r\n```\r\nPOST _ingest/pipeline/_simulate?verbose\r\n{\r\n  \"pipeline\": {\r\n    \"processors\": [\r\n      {\r\n        \"drop\": {\r\n          \"if\": \"1 + 1 == 2\",\r\n          \"description\": \"my description\",\r\n          \"tag\" : \"my tag\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"docs\": [\r\n    {\r\n      \"_source\": {}\r\n    }\r\n  ]\r\n}\r\n```\r\noutput:\r\n```\r\n{\r\n  \"docs\" : [\r\n    {\r\n      \"processor_results\" : [\r\n        {\r\n          \"status\" : \"dropped\",\r\n          \"processor_type\" : \"drop\",\r\n          \"description\" : \"my description\",\r\n          \"tag\" : \"my tag\",\r\n          \"if\" : {\r\n            \"condition\" : \"1 + 1 == 2\",\r\n            \"result\" : true\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\n`dropped` and `error` are terminal, such that they will always be the last item displayed (if it exists). \r\n`status` will always be present, and it is safe to assume that skipped = if evaluated to false.\r\nthe `if` object will only appear if there is an if condition defined\r\nthe 'description', 'tag' will only show if they are defined\r\n\r\nThere is a bit of an oddity with the `pipeline processor` such that the pipeline processor itself doesn't show it's description or tag, support for the pipeline processor via simulate verbose has some pre-existing short comings. It works, but it requires a real pipeline to call out to and unless you use the tag or description in creative ways there is no providence from which pipeline that processor originated. \r\n\r\nHere is more verbose example:\r\n```\r\nPUT _ingest/pipeline/mypipeline\r\n{\r\n  \"processors\": [\r\n    {\r\n      \"set\" : {\r\n        \"field\": \"mypipelineprocessor\",\r\n        \"value\": true,\r\n        \"description\": \"description 4\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n\r\nPOST _ingest/pipeline/_simulate?verbose\r\n{\r\n  \"pipeline\": {\r\n    \"processors\": [\r\n      {\r\n        \"set\": {\r\n          \"if\": \"1 + 1 == 2\",\r\n          \"field\": \"a\",\r\n          \"value\": true,\r\n          \"description\": \"description one\"\r\n        }\r\n      },\r\n      {\r\n        \"rename\": {\r\n          \"target_field\": \"ggg\",\r\n          \"field\": \"hhhh\",\r\n          \"ignore_failure\": true,\r\n          \"description\": \"description two\"\r\n        }\r\n      },\r\n      {\r\n        \"pipeline\": {\r\n          \"description\": \"description three\",\r\n          \"name\": \"mypipeline\"\r\n        }\r\n      },\r\n      {\r\n        \"drop\": {\r\n          \"if\": \"9 * 2 == 11\",\r\n          \"description\": \"description five\"\r\n        }\r\n      },\r\n      {\r\n        \"set\": {\r\n          \"description\": \"description six\",\r\n          \"if\": \"1 + 1 == 3\",\r\n          \"field\": \"b\",\r\n          \"value\": true,\r\n          \"tag\" : \"my tag\"\r\n        }\r\n      },\r\n      {\r\n        \"drop\": {\r\n          \"if\": \"9 * 2 == 18\",\r\n          \"description\": \"description seven\"\r\n        }\r\n      },\r\n      {\r\n        \"set\": {\r\n          \"description\": \"description eight\",\r\n          \"field\": \"c\",\r\n          \"value\": true\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"docs\": [\r\n    {\r\n      \"_source\": {}\r\n    }\r\n  ]\r\n}\r\n\r\n\r\n```\r\noutput:\r\n```\r\n{\r\n  \"docs\" : [\r\n    {\r\n      \"processor_results\" : [\r\n        {\r\n          \"status\" : \"success\",\r\n          \"processor_type\" : \"set\",\r\n          \"description\" : \"description one\",\r\n          \"if\" : {\r\n            \"condition\" : \"1 + 1 == 2\",\r\n            \"result\" : true\r\n          },\r\n          \"doc\" : {\r\n            \"_index\" : \"_index\",\r\n            \"_id\" : \"_id\",\r\n            \"_source\" : {\r\n              \"a\" : true\r\n            },\r\n            \"_ingest\" : {\r\n              \"pipeline\" : \"_simulate_pipeline\",\r\n              \"timestamp\" : \"2020-06-17T22:38:26.837775Z\"\r\n            }\r\n          }\r\n        },\r\n        {\r\n          \"status\" : \"error_ignored\",\r\n          \"processor_type\" : \"rename\",\r\n          \"description\" : \"description two\",\r\n          \"ignored_error\" : {\r\n            \"error\" : {\r\n              \"root_cause\" : [\r\n                {\r\n                  \"type\" : \"illegal_argument_exception\",\r\n                  \"reason\" : \"field [hhhh] doesn't exist\"\r\n                }\r\n              ],\r\n              \"type\" : \"illegal_argument_exception\",\r\n              \"reason\" : \"field [hhhh] doesn't exist\"\r\n            }\r\n          },\r\n          \"doc\" : {\r\n            \"_index\" : \"_index\",\r\n            \"_id\" : \"_id\",\r\n            \"_source\" : {\r\n              \"a\" : true\r\n            },\r\n            \"_ingest\" : {\r\n              \"pipeline\" : \"_simulate_pipeline\",\r\n              \"timestamp\" : \"2020-06-17T22:38:26.837775Z\"\r\n            }\r\n          }\r\n        },\r\n        {\r\n          \"status\" : \"success\",\r\n          \"processor_type\" : \"set\",\r\n          \"description\" : \"description 4\",\r\n          \"doc\" : {\r\n            \"_index\" : \"_index\",\r\n            \"_id\" : \"_id\",\r\n            \"_source\" : {\r\n              \"mypipelineprocessor\" : true,\r\n              \"a\" : true\r\n            },\r\n            \"_ingest\" : {\r\n              \"pipeline\" : \"mypipeline\",\r\n              \"timestamp\" : \"2020-06-17T22:38:26.837775Z\"\r\n            }\r\n          }\r\n        },\r\n        {\r\n          \"status\" : \"skipped\",\r\n          \"processor_type\" : \"drop\",\r\n          \"description\" : \"description five\",\r\n          \"if\" : {\r\n            \"condition\" : \"9 * 2 == 11\",\r\n            \"result\" : false\r\n          }\r\n        },\r\n        {\r\n          \"status\" : \"skipped\",\r\n          \"processor_type\" : \"set\",\r\n          \"description\" : \"description six\",\r\n          \"tag\" : \"my tag\",\r\n          \"if\" : {\r\n            \"condition\" : \"1 + 1 == 3\",\r\n            \"result\" : false\r\n          }\r\n        },\r\n        {\r\n          \"status\" : \"dropped\",\r\n          \"processor_type\" : \"drop\",\r\n          \"description\" : \"description seven\",\r\n          \"if\" : {\r\n            \"condition\" : \"9 * 2 == 18\",\r\n            \"result\" : true\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/646125045","html_url":"https://github.com/elastic/elasticsearch/issues/56004#issuecomment-646125045","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56004","id":646125045,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NjEyNTA0NQ==","user":{"login":"jloleysens","id":8155004,"node_id":"MDQ6VXNlcjgxNTUwMDQ=","avatar_url":"https://avatars3.githubusercontent.com/u/8155004?v=4","gravatar_id":"","url":"https://api.github.com/users/jloleysens","html_url":"https://github.com/jloleysens","followers_url":"https://api.github.com/users/jloleysens/followers","following_url":"https://api.github.com/users/jloleysens/following{/other_user}","gists_url":"https://api.github.com/users/jloleysens/gists{/gist_id}","starred_url":"https://api.github.com/users/jloleysens/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jloleysens/subscriptions","organizations_url":"https://api.github.com/users/jloleysens/orgs","repos_url":"https://api.github.com/users/jloleysens/repos","events_url":"https://api.github.com/users/jloleysens/events{/privacy}","received_events_url":"https://api.github.com/users/jloleysens/received_events","type":"User","site_admin":false},"created_at":"2020-06-18T16:03:06Z","updated_at":"2020-06-18T16:03:21Z","author_association":"NONE","body":"@jakelandis This looks really great!\r\n\r\nWith regards to your new additions:\r\n\r\n> a new status field with the options success, error, error_ignored, skipped, dropped\r\n\r\nThis sounds fantastic and will be vital for the kind of debugging experience we want to build\r\n\r\n> a new if object that shows the condition and the resultant status\r\n\r\nThis is also an excellent addition giving us a way to give the user good feedback on why something was skipped.\r\n\r\n> a new processor_type to help identify what kind of processor it is.\r\n\r\nI am not sure this is as useful for our use case. We will still want to be able to tie this processor result back to the submitted pipeline instance. This means we will also have the processor type available.\r\n\r\nCouple initial follow up questions from my side:\r\n\r\n1. I also assume no structural changes to the processors results were introduced. So we still have a flat structure inside of `processor_results`?\r\n\r\n2. In order to tie these results back to the original pipeline programmatically we will make use of the `tag` field, assigning a unique id. We will then iterate over the processors results over the tree and map them to specific processor instances based on their ids. Is it correct to say that in all cases if I provide a tag it will be returned in the processor_results array for all types of processors (pipeline or otherwise)? \r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/648268100","html_url":"https://github.com/elastic/elasticsearch/issues/56004#issuecomment-648268100","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56004","id":648268100,"node_id":"MDEyOklzc3VlQ29tbWVudDY0ODI2ODEwMA==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2020-06-23T16:17:56Z","updated_at":"2020-06-23T16:17:56Z","author_association":"CONTRIBUTOR","body":"> I also assume no structural changes to the processors results were introduced.\r\n\r\ncorrect, same structure with some additional elements. \r\n\r\n>  Is it correct to say that in all cases if I provide a tag it will be returned in the processor_results array for all types of processors (pipeline or otherwise)?\r\n\r\nThere is a current the oddity (as mentioned above) such that the pipeline processor itself (the one that forks out to a different pipeline) is not part of the output... I can look into that further but can't commit to that quite yet. Otherwise, yes `tag` will always be included. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/666017161","html_url":"https://github.com/elastic/elasticsearch/issues/56004#issuecomment-666017161","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56004","id":666017161,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NjAxNzE2MQ==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2020-07-30T01:14:12Z","updated_at":"2020-07-30T01:14:12Z","author_association":"CONTRIBUTOR","body":"https://github.com/elastic/elasticsearch/pull/60433 has been submitted which I believe addresses these concerns. Also, I was able to get the pipeline processor sorted out so it shouldn't be special (as mentioned above). ","performed_via_github_app":null}]