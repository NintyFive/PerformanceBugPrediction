[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/227081819","html_url":"https://github.com/elastic/elasticsearch/issues/18966#issuecomment-227081819","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18966","id":227081819,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNzA4MTgxOQ==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2016-06-20T08:36:58Z","updated_at":"2016-06-20T08:36:58Z","author_association":"MEMBER","body":"Please ask your questions on discuss.elastic.co where we can definitely help you better.\n\nAlso the code you provided is incorrect and you probably modify it for this ticket. See `##` for example.\nWould be better to GET the actual mapping you have with your RestClient and copy in discuss its JSON form.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/227083592","html_url":"https://github.com/elastic/elasticsearch/issues/18966#issuecomment-227083592","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18966","id":227083592,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNzA4MzU5Mg==","user":{"login":"xuzhou2020","id":19973014,"node_id":"MDQ6VXNlcjE5OTczMDE0","avatar_url":"https://avatars3.githubusercontent.com/u/19973014?v=4","gravatar_id":"","url":"https://api.github.com/users/xuzhou2020","html_url":"https://github.com/xuzhou2020","followers_url":"https://api.github.com/users/xuzhou2020/followers","following_url":"https://api.github.com/users/xuzhou2020/following{/other_user}","gists_url":"https://api.github.com/users/xuzhou2020/gists{/gist_id}","starred_url":"https://api.github.com/users/xuzhou2020/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xuzhou2020/subscriptions","organizations_url":"https://api.github.com/users/xuzhou2020/orgs","repos_url":"https://api.github.com/users/xuzhou2020/repos","events_url":"https://api.github.com/users/xuzhou2020/events{/privacy}","received_events_url":"https://api.github.com/users/xuzhou2020/received_events","type":"User","site_admin":false},"created_at":"2016-06-20T08:45:21Z","updated_at":"2016-06-20T08:45:21Z","author_association":"NONE","body":"1. discuss.elastic.co    register???  git  account cannot log in.\n\n## 2. here is the java code..\n\npackage demo;\n\nimport org.elasticsearch.common.xcontent.XContentBuilder;\nimport org.elasticsearch.common.xcontent.XContentFactory;\nimport tool.ESTool;\n\nimport java.io.IOException;\n\n/**\n- Created by Administrator on 2016/6/8.\n  */\n  public class BaiduClient {\n  \n  public static void main(String[] args) throws Exception {\n  \n  /\\*  //数据库名字 db\n      String index = \"op\";\n  \n  ```\n  //表的名字 table\n  String type = \"atta\";\n  \n  //生成的create table 语句\n  XContentBuilder mapping = createMapping(type);\n  \n  ESTool esTool = new ESTool();\n  esTool.setIp(\"127.0.0.1\").setIndexName(index).setIndexType(type);\n  \n  //建立表(create table )\n  esTool.createIndex(index, type, mapping);\n  \n  //添加数据\n  //        URL resource = Object.class.getResource(\"/config/data\");\n  //        System.out.println(resource);\n  //        Files.lines(Paths.get(resource.toURI()))\n  //                .forEach(txt -> {\n  //\n  //\n  //                    System.out.println(txt);\n  //                    esTool.save( BaseUtil.uuid(),txt);\n  //                });\n  \n  String id = \"10001\";\n  \n  //      String jsonData=  {\"id\":\"1004\",\"logtime\":\"2014-12-24 09:20:30\",\"title\":\"浅析理论资源与文学理论体系建构的危机\",\"desc\":\"经多年积累，文艺学学科建设进入到一个新的发展阶段，其显在的表征在于部分文学理论家在体系建构方面更趋自觉。有学者就认为，在反本质主义的视域中，新世纪有三种理论体系尤...\"}\n  String jsonData = \"上面的json字符串\";\n  \n  //新增数据\n  esTool.save(id, jsonData);\n  \n  //修改\n  esTool.update(id, jsonData);\n  \n  //删除\n  esTool.deleteById(id);\n  \n  //查询\n  String keyword = \"文学\";\n  //第一页\n  int page = 1;\n  \n  //每页显示15行\n  int rows = 15;\n  esTool.query(keyword, page, rows);\n  ```\n  \n  */\n  \n  ```\n  //数据库名字 db\n  String index = \"op\";\n  \n  //表的名字 table\n  String type = \"atta\";\n  \n  //生成的create table 语句\n  XContentBuilder mapping = createAttaMapping(type);\n  \n  \n  ESTool esTool = new ESTool();\n  esTool.setIp(\"127.0.0.1\").setIndexName(index).setIndexType(type);\n  \n  //建立表(create table )\n  esTool.createIndex(index, type, mapping);\n  \n  //添加数据\n  //        URL resource = Object.class.getResource(\"/config/data\");\n  //        System.out.println(resource);\n  //        Files.lines(Paths.get(resource.toURI()))\n  //                .forEach(txt -> {\n  //\n  //\n  //                    System.out.println(txt);\n  //                    esTool.save( BaseUtil.uuid(),txt);\n  //                });\n  ```\n  \n  //\n      String id = \"10001\";\n  //\n  //      //      String jsonData=  {\"id\":\"1004\",\"logtime\":\"2014-12-24 09:20:30\",\"title\":\"浅析理论资源与文学理论体系建构的危机\",\"desc\":\"经多年积累，文艺学学科建设进入到一个新的发展阶段，其显在的表征在于部分文学理论家在体系建构方面更趋自觉。有学者就认为，在反本质主义的视域中，新世纪有三种理论体系尤...\"}\n  \n  ```\n  String jsonData =\"{\\\"id\\\":\\\"at001\\\", \\\"logtime\\\":'2016-06-20 10:30:00\\\", \\\"title\\\":\\\"上传附件测试\\\", \\\"attach\\\":\\\"6IOM5pmv6Imy5piv57qi6Imy55qELOiuoeeul+acuuaKgOacr+eahOWPkeWxlSzlhZrnmoQxM+Wkp+W3sue7j+WPrOW8gC5ramxpbmvpnIDopoHmi5vogZjmlrDlkZjlt6XkuoblkJc/Cg==\\\"}\";\n  ```\n  \n  //      String jsonData = \"上面的json字符串\";\n  \n  ```\n  jsonData=\"{\\\"id\\\":\\\"at001\\\", \\\"logtime\\\":'2016-06-20 10:30:00\\\", \\\"title\\\":\\\"上传附件测试\\\", \\\"attach\\\":\\\"6IOM5pmv6Imy5piv57qi6Imy55qELOiuoeeul+acuuaKgOacr+eahOWPkeWxlSzlhZrnmoQxM+Wkp+W3sue7j+WPrOW8gC5ramxpbmvpnIDopoHmi5vogZjmlrDlkZjlt6XkuoblkJc/Cg==\\\"}\";\n  ```\n  \n  //\n  //      //新增数据\n      esTool.save(id, jsonData);\n  //\n  //      //修改\n  //      esTool.update(id, jsonData);\n  //\n  //      //删除\n  //      esTool.deleteById(id);\n  //\n  //      //查询\n  //      String keyword = \"文学\";\n  //      //第一页\n  //      int page = 1;\n  //\n  //      //每页显示15行\n  //      int rows = 15;\n  //      esTool.query(keyword, page, rows);\n  \n  }\n  \n  /**\n  - 创建 建表的语句  create table ()...\n    *\n  - @param indexType 表名\n  - @return\n    */\n    public static XContentBuilder createMapping(String indexType) {\n    XContentBuilder mapping = null;\n    try {\n        mapping = XContentFactory.jsonBuilder().startObject()\n    \n    ```\n            // 索引库名（类似数据库中的表）\n            .startObject(indexType).startObject(\"properties\")\n            // ID\n            .startObject(\"id\").field(\"type\", \"string\").endObject()\n    \n            .startObject(\"logtime\").field(\"type\", \"string\").endObject()\n    \n            // 标题  中文分词, field(\"analyzer\", \"ik\")\n            .startObject(\"title\").field(\"type\", \"string\").field(\"analyzer\", \"ik\").field(\"include_in_all\", false)\n            .endObject()\n    \n            // 描述\n            .startObject(\"desc\").field(\"type\", \"string\").field(\"analyzer\", \"ik\").field(\"include_in_all\", false)\n            .endObject()\n    \n    \n    \n            .endObject().endObject().endObject();\n    ```\n    \n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n    return mapping;\n    }\n  \n  /**\n  - 测试附件\n  - @param indexType\n  - @return\n    */\n    public static XContentBuilder createAttaMapping(String indexType) {\n    XContentBuilder mapping = null;\n    try {\n        mapping = XContentFactory.jsonBuilder().startObject()\n    \n    ```\n            // 索引库名（类似数据库中的表）\n            .startObject(indexType).startObject(\"properties\")\n                    // ID\n            .startObject(\"id\").field(\"type\", \"string\").endObject()\n    \n            .startObject(\"logtime\").field(\"type\", \"string\").endObject()\n    \n                    // 标题  中文分词, field(\"analyzer\", \"ik\")\n            .startObject(\"title\").field(\"type\", \"string\").field(\"analyzer\", \"ik\").field(\"include_in_all\", false)\n            .endObject()\n    \n                    // 描述\n            .startObject(\"atta\").field(\"type\", \"attachment\")/*.field(\"analyzer\", \"ik\")*/\n            .endObject()\n    \n            .endObject().endObject().endObject();\n    ```\n    \n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n    return mapping;\n    }\n\n}\n\npackage tool;\n\nimport org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest;\nimport org.elasticsearch.action.admin.indices.mapping.put.PutMappingResponse;\nimport org.elasticsearch.action.index.IndexRequestBuilder;\nimport org.elasticsearch.action.search.SearchResponse;\nimport org.elasticsearch.action.search.SearchType;\nimport org.elasticsearch.client.Client;\nimport org.elasticsearch.client.Requests;\nimport org.elasticsearch.client.transport.TransportClient;\nimport org.elasticsearch.common.text.Text;\nimport org.elasticsearch.common.transport.InetSocketTransportAddress;\nimport org.elasticsearch.common.xcontent.XContentBuilder;\nimport org.elasticsearch.index.query.MultiMatchQueryBuilder;\nimport org.elasticsearch.index.query.QueryBuilders;\nimport org.elasticsearch.search.SearchHit;\nimport org.elasticsearch.search.SearchHits;\nimport org.elasticsearch.search.highlight.HighlightField;\nimport org.elasticsearch.search.sort.SortOrder;\n\nimport java.io.IOException;\nimport java.net.InetSocketAddress;\nimport java.util.Map;\n\n/**\n- Created by Administrator on 2016/6/8.\n  */\n  public class ESTool {\n  \n  //elastic服务器ip\n  private String ip=\"127.0.0.1\";\n  \n  //数据库db\n  private String indexName;\n  \n  //表 table\n  private String indexType;\n  \n  public String getIp() {\n      return ip;\n  }\n  \n  public ESTool setIp(String ip) {\n      this.ip = ip;\n      return this;\n  }\n  \n  public String getIndexName() {\n      return indexName;\n  }\n  \n  public ESTool setIndexName(String indexName) {\n      this.indexName = indexName;\n      return this;\n  }\n  \n  public String getIndexType() {\n      return indexType;\n  }\n  \n  public ESTool setIndexType(String indexType) {\n      this.indexType = indexType;\n      return this;\n  }\n  \n  /**\n  - 创建一个 客户端连接\n  - @return\n    */\n    public static Client esClient(){\n    \n    Client esClient = null;\n    try {\n\n//            esClient = new TransportClient().addTransportAddress(new InetSocketTransportAddress(\"127.0.0.1\", 9300));\n//\n\n//            esClient = TransportClient.builder().build()\n//                    .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByAddress(new byte[]{(byte)127,(byte)0,(byte)0,(byte)1}), 9300));\n\n```\n        esClient = TransportClient.builder().build()\n                .addTransportAddress(new InetSocketTransportAddress(new InetSocketAddress(\"127.0.0.1\", 9300)));\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n\n    return esClient;\n}\n\n\n\n// 创建索引 database/table\n// 第一次 加载的时候,创建\n\n/**\n *\n * @param indexName   db\n * @param indexType   table\n * @throws java.io.IOException\n */\npublic static void createIndex(String indexName, String indexType,XContentBuilder mapping) throws IOException {\n    Client esClient = ESTool.esClient();\n```\n\n//        System.out.println(\"mapping:\" + mapping.string());\n\n```\n    // 创建一个空索引  database\n    try {\n        esClient.admin().indices().prepareCreate(indexName).execute().actionGet();\n    }catch (Exception e){\n        e.printStackTrace();\n    }\n\n    //表结构  执行\n    try {\n        PutMappingRequest putMapping = Requests.putMappingRequest(indexName).type(indexType).source(mapping);\n        PutMappingResponse response = esClient.admin().indices().putMapping(putMapping).actionGet();\n\n        if (!response.isAcknowledged()) {\n            System.out.println(\"Could not define mapping for type [\" + indexName + \"]/[\" + indexType + \"].\");\n        } else {\n            System.out.println(\"Mapping definition for [\" + indexName + \"]/[\" + indexType + \"] succesfully created.\");\n        }\n    }catch (Exception e){\n        e.printStackTrace();\n    }\n\n    esClient.close();\n}\n\n\n\n/**\n * 添加一行数据\n * @param id\n * @param jsonData\n */\npublic  void save(String id,String jsonData){\n\n    Client client=ESTool.esClient();\n\n    IndexRequestBuilder requestBuilder = client.prepareIndex(indexName, indexType,id).setRefresh(true);\n\n    /*IndexResponse indexResponse = */requestBuilder.setSource(jsonData).execute().actionGet();\n\n    client.close();\n}\n\n\n/**\n * 更新一行数据\n * @param id\n * @param jsonData\n */\npublic  void update(String id,String jsonData){\n\n    Client client=ESTool.esClient();\n\n    //更新数据\n    client.prepareUpdate().setIndex(indexName).setType(indexType).setId(id).setDoc(jsonData).get();\n\n    client.close();\n}\n\n\n\n/**\n * 删除一行数据 byId\n * @param id\n */\npublic  void deleteById(String id){\n\n    Client client=ESTool.esClient();\n\n    //delete数据\n    client.prepareDelete().setIndex(indexName).setType(indexType).setId(id).get();\n    client.close();\n\n}\n\n\n/**\n * 根据关键字查询\n * @param keyword  关键字\n * @param page     第几页, 1,2,3\n * @param rows     每页显示多少行\n */\npublic  void query(String keyword,int page, int rows){\n\n\n\n    Client esClient = ESTool.esClient();\n\n    MultiMatchQueryBuilder multiMatchQueryBuilder = QueryBuilders.multiMatchQuery(\n            keyword,     // Text you are looking for\n            //kimchy elasticsearch是要查询的字符串\n            \"title\"/*, \"desc\"*/           // Fields you query on\n            //user 和 message都是field\n    );\n\n    SearchResponse searchResponse = esClient\n            .prepareSearch(indexName)\n            .setTypes(indexType)\n\n            //设置高亮显示字段\n            .addHighlightedField(\"title\")\n\n            //高亮显示标识\n            .setHighlighterPreTags(\"<em>\")\n            .setHighlighterPostTags(\"</em>\")\n\n            .setSearchType(SearchType.DFS_QUERY_THEN_FETCH)\n            .setQuery(multiMatchQueryBuilder)\n\n            //排序字段\n            .addSort(\"logtime\", SortOrder.DESC)\n            .setFrom(page-1)\n            .setSize(rows)\n            .execute().actionGet();\n\n    SearchHits hits = searchResponse.getHits();\n\n    long total = hits.totalHits();\n    System.out.println(\"total=\"+total);\n\n    if(total>0){\n\n        SearchHit[] searchHists = hits.getHits();\n\n        for (SearchHit hit : searchHists) {\n\n            Map<String, Object> source = hit.getSource();\n            System.out.println(source);\n\n            // 获取对应的高亮域\n            Map<String, HighlightField> result = hit.highlightFields();\n\n            // 从设定的高亮域中取得指定域\n            HighlightField titleField = result.get(\"title\");\n\n            if(titleField!=null){\n\n                // 取得定义的高亮标签\n                Text[] fragments = titleField.fragments();\n\n                // 为title串值增加自定义的高亮标签\n                String title = \"\";\n                for (Text text : fragments) {\n                    title += text;\n                }\n                // 将追加了高亮标签的串值重新填充到对应的对象\n                // product.setTitle(title);\n                // 打印高亮标签追加完成后的实体对象\n                System.out.println(title);\n            }\n\n\n        }\n\n    }\n\n\n\n}\n```\n\n}\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/227084577","html_url":"https://github.com/elastic/elasticsearch/issues/18966#issuecomment-227084577","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18966","id":227084577,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNzA4NDU3Nw==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2016-06-20T08:50:07Z","updated_at":"2016-06-20T08:50:07Z","author_association":"MEMBER","body":"Please join https://discuss.elastic.co/ \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/227100872","html_url":"https://github.com/elastic/elasticsearch/issues/18966#issuecomment-227100872","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18966","id":227100872,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNzEwMDg3Mg==","user":{"login":"xuzhou2020","id":19973014,"node_id":"MDQ6VXNlcjE5OTczMDE0","avatar_url":"https://avatars3.githubusercontent.com/u/19973014?v=4","gravatar_id":"","url":"https://api.github.com/users/xuzhou2020","html_url":"https://github.com/xuzhou2020","followers_url":"https://api.github.com/users/xuzhou2020/followers","following_url":"https://api.github.com/users/xuzhou2020/following{/other_user}","gists_url":"https://api.github.com/users/xuzhou2020/gists{/gist_id}","starred_url":"https://api.github.com/users/xuzhou2020/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xuzhou2020/subscriptions","organizations_url":"https://api.github.com/users/xuzhou2020/orgs","repos_url":"https://api.github.com/users/xuzhou2020/repos","events_url":"https://api.github.com/users/xuzhou2020/events{/privacy}","received_events_url":"https://api.github.com/users/xuzhou2020/received_events","type":"User","site_admin":false},"created_at":"2016-06-20T10:02:42Z","updated_at":"2016-06-20T10:02:42Z","author_association":"NONE","body":"Hi:\n    I ask a question, but  it seemed that nobody pays attention to it .\n    https://discuss.elastic.co/\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/227106375","html_url":"https://github.com/elastic/elasticsearch/issues/18966#issuecomment-227106375","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18966","id":227106375,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNzEwNjM3NQ==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2016-06-20T10:29:54Z","updated_at":"2016-06-20T10:29:54Z","author_association":"MEMBER","body":"You need to be patient on discuss. \n\nRead:\n- https://discuss.elastic.co/t/notes-on-using-these-forums/118\n- https://www.elastic.co/fr/community/codeofconduct\n\nIf you need to have \"immediate\" answers with a SLA we can connect you to the sales team.\n\nThanks!\n","performed_via_github_app":null}]