{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/25289","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25289/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25289/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25289/events","html_url":"https://github.com/elastic/elasticsearch/issues/25289","id":236890824,"node_id":"MDU6SXNzdWUyMzY4OTA4MjQ=","number":25289,"title":"mapper_parsing_exception is thrown for \"NaN\" values for fields with ignore_malformed=true","user":{"login":"bquartier","id":496742,"node_id":"MDQ6VXNlcjQ5Njc0Mg==","avatar_url":"https://avatars1.githubusercontent.com/u/496742?v=4","gravatar_id":"","url":"https://api.github.com/users/bquartier","html_url":"https://github.com/bquartier","followers_url":"https://api.github.com/users/bquartier/followers","following_url":"https://api.github.com/users/bquartier/following{/other_user}","gists_url":"https://api.github.com/users/bquartier/gists{/gist_id}","starred_url":"https://api.github.com/users/bquartier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bquartier/subscriptions","organizations_url":"https://api.github.com/users/bquartier/orgs","repos_url":"https://api.github.com/users/bquartier/repos","events_url":"https://api.github.com/users/bquartier/events{/privacy}","received_events_url":"https://api.github.com/users/bquartier/received_events","type":"User","site_admin":false},"labels":[{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-06-19T13:28:33Z","updated_at":"2017-07-31T14:14:30Z","closed_at":"2017-07-31T14:14:30Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version**:\r\n5.4.1\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nmapper_parsing_exception is thrown for numeric field with ignore_malformed=true when inserting a \"NaN\" value.\r\nI would expect that no exception is returned for a field with ignore_malformed=true\r\n\r\n**Steps to reproduce**:\r\nFirst create an index with a mapping with a numeric field with ignore_malformed = true:\r\n```\r\nPUT nan_test\r\n{\r\n  \"mappings\": {\r\n    \"test_type\": {\r\n      \"properties\": {\r\n        \"number_one\": {\r\n          \"type\": \"scaled_float\",\r\n          \"scaling_factor\": 1,\r\n          \"ignore_malformed\": true\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n{\"acknowledged\":true,\"shards_acknowledged\":true}\r\n```\r\n\r\nThen insert a malformed number, works as expected:\r\n```\r\nPUT nan_test/test_type/1?pretty\r\n{\r\n  \"number_one\": \"not a number\"\r\n}\r\n\r\n{\r\n  \"_index\" : \"nan_test\",\r\n  \"_type\" : \"test_type\",\r\n  \"_id\" : \"1\",\r\n  \"_version\" : 1,\r\n  \"result\" : \"created\",\r\n  \"_shards\" : {\r\n    \"total\" : 2,\r\n    \"successful\" : 2,\r\n    \"failed\" : 0\r\n  },\r\n  \"created\" : true\r\n}\r\n```\r\nNow, let's insert a number with the \"NaN\" string value:\r\n```\r\nPUT nan_test/test_type/2?pretty\r\n{\r\n  \"number_one\": \"NaN\"\r\n}\r\n\r\n{\r\n  \"error\" : {\r\n    \"root_cause\" : [\r\n      {\r\n        \"type\" : \"mapper_parsing_exception\",\r\n        \"reason\" : \"failed to parse [number_one]\"\r\n      }\r\n    ],\r\n    \"type\" : \"mapper_parsing_exception\",\r\n    \"reason\" : \"failed to parse [number_one]\",\r\n    \"caused_by\" : {\r\n      \"type\" : \"illegal_argument_exception\",\r\n      \"reason\" : \"[scaled_float] only supports finite values, but got [NaN]\"\r\n    }\r\n  },\r\n  \"status\" : 400\r\n}\r\n\r\n```\r\n\r\nShouldn't ignore_malformed = true ignore all mapper_parsing_exception? \r\nIf not, how can I ignore the exception raised by \"NaN\" values?\r\nNote that NaN has no special meaning in json, so it seems strange that it is considered a special input value.\r\n","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}