[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/356298220","html_url":"https://github.com/elastic/elasticsearch/issues/28152#issuecomment-356298220","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28152","id":356298220,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NjI5ODIyMA==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2018-01-09T14:26:02Z","updated_at":"2018-01-09T14:26:02Z","author_association":"MEMBER","body":"@nknize could you please have a look at this one? In the [docs](https://www.elastic.co/guide/en/elasticsearch/reference/6.1/search-request-sort.html#geo-sorting) we state:\r\n\r\n> geo distance sorting does not support configurable missing values: the distance will always be considered equal to Infinity when a document does not have values for the field that is used for distance computation.\r\n\r\nSo I would assume that missing values in `geo_point` fields are already taken care of or is there something missing from the docs?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/391733425","html_url":"https://github.com/elastic/elasticsearch/issues/28152#issuecomment-391733425","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28152","id":391733425,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MTczMzQyNQ==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2018-05-24T14:22:47Z","updated_at":"2018-05-24T14:22:47Z","author_association":"MEMBER","body":"I looked at it for a bit, and I am not sure I understand the utility of `missing` for geopoints. In the current implementation, the `missing` is essentially set in such a way that the points with missing value appear to infinitely far, so it is essentially equivalent to `\"missing\": \"_last\"` assuming ascending order or `_first` in case of descending. I am having a hard time imagining a use case where we would need to put points without location ahead of points with a location. I can see how we might want to add this for the sake of consistency though. \r\n\r\nI can see the value of adding an equivalent of `unmapped_type`. There is indeed no way to search both an indexed with mapped geo_point field and an index without such field and sort them by geo distance. I am a bit divided in how to implement it though. The geo distance sort order is implemented slightly differently from all other sort orders. When we sort by a keyword field we write something like:\r\n```\r\n {\"author\" : {\"order\" : \"asc\"}}\r\n```\r\nSo adding `\"unmapped_type\" : \"keyword\"` makes perfect sense since we if the field `author` is missing, we need to know what type this field is supposed to have. In case of geo distance we have:\r\n```\r\n{  \"_geo_distance\" : { \"pin\" : [-70, 40],  \"order\" : \"asc\" } }\r\n```\r\nSo we already know that `pin` is supposed to be a geopoint field, and asking about `unmapped_type` feels a bit silly in this case. Should we handle it by adding some boolean flag instead? Something like this perhaps?\r\n\r\n```\r\n{  \"_geo_distance\" : { \"pin\" : [-70, 40],  \"order\" : \"asc\", \"ignore_unmapped\" : true } }\r\n```\r\n\r\n","performed_via_github_app":null}]