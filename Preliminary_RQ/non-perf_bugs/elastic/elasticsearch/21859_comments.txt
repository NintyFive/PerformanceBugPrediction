[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263858620","html_url":"https://github.com/elastic/elasticsearch/issues/21859#issuecomment-263858620","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21859","id":263858620,"node_id":"MDEyOklzc3VlQ29tbWVudDI2Mzg1ODYyMA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-11-30T12:09:45Z","updated_at":"2016-11-30T12:09:45Z","author_association":"CONTRIBUTOR","body":"Hi @niemyjski \r\n\r\nRe point 4, the `doc[]` indicates a completely different access pattern, so I think that should remain distinct from the other 3.\r\n\r\n> To get the document as part of a pipeline inline script you would use `ctx`.\r\n\r\nNot sure what you mean here? \r\n\r\n> Somewhat related, if you want to access source doc and properties in a pipeline processor you just use `_source` or the property name.\r\n\r\nThis seems OK to me, where you can leave out the `_source` as a commonly used shortcut.\r\n\r\nBut I agree that in scripts we should try to make things more consistent.\r\n\r\n@talevy @martijnvg what are your thoughts?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263886367","html_url":"https://github.com/elastic/elasticsearch/issues/21859#issuecomment-263886367","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21859","id":263886367,"node_id":"MDEyOklzc3VlQ29tbWVudDI2Mzg4NjM2Nw==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2016-11-30T14:27:29Z","updated_at":"2016-11-30T14:27:29Z","author_association":"CONTRIBUTOR","body":"> 1. To get the document as part of a pipeline inline script you would use ctx. Previously in transforms it was ctx._source.\r\n\r\nThe case here is that you are not necessarily working with the same type of document as the lucene context. Here, we are dealing with something known as a `sourceAndMetadata` object, which contains both the original `_source` fields, as well as any other ingest metadata like `_id`, `_type`, etc. The reason for this skewed view into the originally sent source document is for a unified retrieval strategy within the mustache scripts of ingest's field templating (independent to painless). We can definitely revisit this to keep a more uniform view into the document, more similar to how the indexing stage sees it.\r\n\r\n> 3. Somewhat related, if you want to access source doc and properties in a pipeline processor you just use _source or the property name.\r\n\r\nright, that is just a convenience scheme. Also, in this case, we are not using painless, this is a custom Ingest scheme. I don't mean to say that to mean it is exempt from consistency, just saying it is not a painless context. \r\n\r\n\r\ndo you have anything to add about this @martijnvg? I am not sure how we can change things within 5.x to keep things backwards compatible, but totally agree we should revisit this for changes in 6.0, maybe?\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263892311","html_url":"https://github.com/elastic/elasticsearch/issues/21859#issuecomment-263892311","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21859","id":263892311,"node_id":"MDEyOklzc3VlQ29tbWVudDI2Mzg5MjMxMQ==","user":{"login":"niemyjski","id":1020579,"node_id":"MDQ6VXNlcjEwMjA1Nzk=","avatar_url":"https://avatars3.githubusercontent.com/u/1020579?v=4","gravatar_id":"","url":"https://api.github.com/users/niemyjski","html_url":"https://github.com/niemyjski","followers_url":"https://api.github.com/users/niemyjski/followers","following_url":"https://api.github.com/users/niemyjski/following{/other_user}","gists_url":"https://api.github.com/users/niemyjski/gists{/gist_id}","starred_url":"https://api.github.com/users/niemyjski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niemyjski/subscriptions","organizations_url":"https://api.github.com/users/niemyjski/orgs","repos_url":"https://api.github.com/users/niemyjski/repos","events_url":"https://api.github.com/users/niemyjski/events{/privacy}","received_events_url":"https://api.github.com/users/niemyjski/received_events","type":"User","site_admin":false},"created_at":"2016-11-30T14:51:16Z","updated_at":"2016-11-30T14:51:16Z","author_association":"CONTRIBUTOR","body":"@clintongormley point 4 is still accessing the raw document so I think it should be included. In a pipeline inline script you can't do `ctx._source` it's `ctx` is the document object. In a pipeline processor (not a script) you can use `_source` or the `propertyname (E.g., {{name}}`. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/264133955","html_url":"https://github.com/elastic/elasticsearch/issues/21859#issuecomment-264133955","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21859","id":264133955,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NDEzMzk1NQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-12-01T10:17:45Z","updated_at":"2016-12-01T10:17:45Z","author_association":"CONTRIBUTOR","body":">  point 4 is still accessing the raw document so I think it should be included.\r\n\r\nNo it is not accessing the raw document, it is accessing the value from doc-values.  So `doc[]` wouldn't be available in a pipeline or update script.\r\n\r\n> In a pipeline inline script you can't do ctx._source it's ctx is the document object.\r\n\r\nAh right, that is unfortunate.  Would be good to make this consistent\r\n\r\n> The case here is that you are not necessarily working with the same type of document as the lucene context. Here, we are dealing with something known as a sourceAndMetadata object, which contains both the original _source fields, as well as any other ingest metadata like _id, _type, etc. The reason for this skewed view into the originally sent source document is for a unified retrieval strategy within the mustache scripts of ingest's field templating (independent to painless). \r\n\r\nI think it'd be clearer to be able to access `ctx._source.some_field` and `ctx._id` etc, while today it looks like it'd be `ctx.some_field` vs `ctx._id`?  That seems wrong.\r\n\r\n> We can definitely revisit this to keep a more uniform view into the document, more similar to how the indexing stage sees it.\r\n\r\nYeah, although I don't see a clear path to changing this without breaking bwc.\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/264423235","html_url":"https://github.com/elastic/elasticsearch/issues/21859#issuecomment-264423235","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21859","id":264423235,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NDQyMzIzNQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-12-02T10:30:12Z","updated_at":"2016-12-02T10:30:12Z","author_association":"CONTRIBUTOR","body":"Discussed in FixitFriday: agreed with @clintongormley 's last comment that we should try to make ingest more consistent with other APIs. The bw compat looks challenging however.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/277458899","html_url":"https://github.com/elastic/elasticsearch/issues/21859#issuecomment-277458899","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21859","id":277458899,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ1ODg5OQ==","user":{"login":"nezda","id":179091,"node_id":"MDQ6VXNlcjE3OTA5MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/179091?v=4","gravatar_id":"","url":"https://api.github.com/users/nezda","html_url":"https://github.com/nezda","followers_url":"https://api.github.com/users/nezda/followers","following_url":"https://api.github.com/users/nezda/following{/other_user}","gists_url":"https://api.github.com/users/nezda/gists{/gist_id}","starred_url":"https://api.github.com/users/nezda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nezda/subscriptions","organizations_url":"https://api.github.com/users/nezda/orgs","repos_url":"https://api.github.com/users/nezda/repos","events_url":"https://api.github.com/users/nezda/events{/privacy}","received_events_url":"https://api.github.com/users/nezda/received_events","type":"User","site_admin":false},"created_at":"2017-02-04T16:53:15Z","updated_at":"2017-02-04T16:53:15Z","author_association":"NONE","body":"In my 5.1.1 inline painless [script for terms agg values](https://www.elastic.co/guide/en/elasticsearch/reference/5.1/search-aggregations-bucket-terms-aggregation.html#search-aggregations-bucket-terms-aggregation-script) I had to use `params._source` (was hoping for `_source` (`'Variable [_source] is not defined.'`) and docs seemed to indicate `ctx._source` (`'null_pointer_exception'` at `ctx.`) (only reference I found https://www.elastic.co/guide/en/elasticsearch/reference/5.1/modules-scripting-painless.html#_updating_fields_with_painless). I eventually pieced together `params._source` from mailing list.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/308258727","html_url":"https://github.com/elastic/elasticsearch/issues/21859#issuecomment-308258727","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21859","id":308258727,"node_id":"MDEyOklzc3VlQ29tbWVudDMwODI1ODcyNw==","user":{"login":"elasticsearcher","id":11278594,"node_id":"MDQ6VXNlcjExMjc4NTk0","avatar_url":"https://avatars1.githubusercontent.com/u/11278594?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticsearcher","html_url":"https://github.com/elasticsearcher","followers_url":"https://api.github.com/users/elasticsearcher/followers","following_url":"https://api.github.com/users/elasticsearcher/following{/other_user}","gists_url":"https://api.github.com/users/elasticsearcher/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticsearcher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticsearcher/subscriptions","organizations_url":"https://api.github.com/users/elasticsearcher/orgs","repos_url":"https://api.github.com/users/elasticsearcher/repos","events_url":"https://api.github.com/users/elasticsearcher/events{/privacy}","received_events_url":"https://api.github.com/users/elasticsearcher/received_events","type":"User","site_admin":false},"created_at":"2017-06-13T21:48:17Z","updated_at":"2017-06-13T21:48:17Z","author_association":"NONE","body":"@nezda Thanks for pointing this out. It's super confusing that inside inline scripts `_source` has to be accessed from the `params` object and not directly as `_source`.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/372782676","html_url":"https://github.com/elastic/elasticsearch/issues/21859#issuecomment-372782676","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21859","id":372782676,"node_id":"MDEyOklzc3VlQ29tbWVudDM3Mjc4MjY3Ng==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2018-03-13T19:05:08Z","updated_at":"2018-03-13T19:05:08Z","author_association":"CONTRIBUTOR","body":"This still needs to be documented now that contexts are done.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/408520358","html_url":"https://github.com/elastic/elasticsearch/issues/21859#issuecomment-408520358","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21859","id":408520358,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODUyMDM1OA==","user":{"login":"benorgera","id":12853161,"node_id":"MDQ6VXNlcjEyODUzMTYx","avatar_url":"https://avatars3.githubusercontent.com/u/12853161?v=4","gravatar_id":"","url":"https://api.github.com/users/benorgera","html_url":"https://github.com/benorgera","followers_url":"https://api.github.com/users/benorgera/followers","following_url":"https://api.github.com/users/benorgera/following{/other_user}","gists_url":"https://api.github.com/users/benorgera/gists{/gist_id}","starred_url":"https://api.github.com/users/benorgera/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benorgera/subscriptions","organizations_url":"https://api.github.com/users/benorgera/orgs","repos_url":"https://api.github.com/users/benorgera/repos","events_url":"https://api.github.com/users/benorgera/events{/privacy}","received_events_url":"https://api.github.com/users/benorgera/received_events","type":"User","site_admin":false},"created_at":"2018-07-27T19:43:54Z","updated_at":"2018-07-27T19:45:26Z","author_association":"NONE","body":"Painless is very painful. I am looking to do something very simple: change all of the array type elements in my json to have \"_nested_\" prepended to its key (so that I can do dynamic nested type mapping).\r\n\r\nSo: `{ arr: [1,2] } -> { _nested_arr: [1,2] }`\r\n\r\nIn javascript, this was a simple as:\r\n\r\n```\r\n(function transform(c) {\r\n\tfor (var keys = Object.keys(c), i = 0; i < keys.length; i++) {\r\n\t\tvar key = keys[i],\r\n\t\t    val = c[key];\r\n\r\n\t\tif (Array.isArray(val)) {\r\n\t\t\tc[\"_nested_\" + key] = val;\r\n\t\t\tdelete c[key];\r\n\t\t\ttransform(val);\r\n\t\t} else if (typeof val === \"object\")\r\n\t\t\ttransform(val);\r\n\t}\r\n})(ctx);\r\n```\r\n\r\nBut the painless documentation is very confusing!\r\na. What is the type of `ctx/ctx._source` (sounds like map), and which one should I be referring to?\r\nb. How does on iterate through`ctx/ctx._source`?\r\nc. How does one delete a key on `ctx/ctx._source`?\r\nd. Is painless pass by reference, or pass by value (will updating an element in a map update its parent)?\r\n\r\nIn javascript this would be much easier.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/562291531","html_url":"https://github.com/elastic/elasticsearch/issues/21859#issuecomment-562291531","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21859","id":562291531,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MjI5MTUzMQ==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2019-12-05T19:56:53Z","updated_at":"2019-12-05T19:56:53Z","author_association":"CONTRIBUTOR","body":"I would like to discuss creating consistency for input variables in contexts related to source, doc, and params.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/589329979","html_url":"https://github.com/elastic/elasticsearch/issues/21859#issuecomment-589329979","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21859","id":589329979,"node_id":"MDEyOklzc3VlQ29tbWVudDU4OTMyOTk3OQ==","user":{"login":"stu-elastic","id":24232742,"node_id":"MDQ6VXNlcjI0MjMyNzQy","avatar_url":"https://avatars0.githubusercontent.com/u/24232742?v=4","gravatar_id":"","url":"https://api.github.com/users/stu-elastic","html_url":"https://github.com/stu-elastic","followers_url":"https://api.github.com/users/stu-elastic/followers","following_url":"https://api.github.com/users/stu-elastic/following{/other_user}","gists_url":"https://api.github.com/users/stu-elastic/gists{/gist_id}","starred_url":"https://api.github.com/users/stu-elastic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stu-elastic/subscriptions","organizations_url":"https://api.github.com/users/stu-elastic/orgs","repos_url":"https://api.github.com/users/stu-elastic/repos","events_url":"https://api.github.com/users/stu-elastic/events{/privacy}","received_events_url":"https://api.github.com/users/stu-elastic/received_events","type":"User","site_admin":false},"created_at":"2020-02-20T21:35:11Z","updated_at":"2020-02-20T21:35:11Z","author_association":"CONTRIBUTOR","body":"There are a few things in this issue:\r\n1) Consistent naming of `source`, moved to #52593.\r\n  * Backwards compatibility needs to be addressed systemically, we'll take that on in #52594\r\n2) `source` does not have good documentation, moved to #52600.\r\n3) `source` vs `doc` is confusing, `source` is nested, `doc` is not nested. \r\n\r\n* `doc` is an accessor for fields in lucene, fields are flat, the `.` are just part of the field name. \r\n* `source` is a `json` object which is nested.  Keys may or may not have `.` in them.  So we could not flatten `source` without introducing ambiguities.\r\n\r\nThe best option we have is to document then, as will happen in #52600.\r\n\r\nIf there are any other thoughts related to above, we'd love to hear them in the issues I mentioned.\r\n\r\nRegarding the questions posed in this issue:\r\n> a. What is the type of ctx/ctx._source (sounds like map), and which one should I be referring to?\r\n\r\n`ctx._source` is a Map on the top level that represents a JSON blob using Maps, Lists, and primitives.  For an update script, you need to use `ctx._source` for ingest you'd use `ctx` directly.\r\n\r\n> b. How does on iterate throughctx/ctx._source?\r\n\r\nIf you know what your source is, you can use a [for loop](https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-statements.html#_for)  Otherwise iterate through the top-level map and use [`instanceof`](https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-operators-boolean.html#instanceof-operator) to determine the types of values. eg. `if (ctx._source['foo'] instanceof Map)...`\r\n\r\n> c. How does one delete a key on ctx/ctx._source?\r\n\r\nUse the `remove` method for [`Map`](https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-api-reference-shared-java-util.html#painless-api-reference-shared-Map) or [`List`](https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-api-reference-shared-java-util.html#painless-api-reference-shared-List).\r\n\r\n> d. Is painless pass by reference, or pass by value (will updating an element in a map update its parent)?\r\n\r\nPass by [reference](https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-types.html) except for primitive types.\r\n\r\nPlease direct further usage questions to https://discuss.elastic.co/.\r\n\r\n","performed_via_github_app":null}]