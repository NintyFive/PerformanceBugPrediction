[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/14769592","html_url":"https://github.com/elastic/elasticsearch/issues/2762#issuecomment-14769592","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2762","id":14769592,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NzY5NTky","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2013-03-12T11:14:21Z","updated_at":"2013-03-12T11:14:21Z","author_association":"CONTRIBUTOR","body":"hey,\n\nthe reason here is not caching I am afraid. This would be simpler to fix :) The problem here is that we parse the filter from the alias and then pre-build it with the \"current\" knowledge about the field. Since there is no mapping we can't tell that we need to build a numeric filter which is encoded differently in the index. From the top of my head this is not easy to fix really but I will think about it. I guess the easiest fix for you are dynamic templates that add a mapping for those fields on index creation you can maybe prefix them with numierc_ or something like that?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/14769943","html_url":"https://github.com/elastic/elasticsearch/issues/2762#issuecomment-14769943","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2762","id":14769943,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NzY5OTQz","user":{"login":"dbertram","id":864848,"node_id":"MDQ6VXNlcjg2NDg0OA==","avatar_url":"https://avatars3.githubusercontent.com/u/864848?v=4","gravatar_id":"","url":"https://api.github.com/users/dbertram","html_url":"https://github.com/dbertram","followers_url":"https://api.github.com/users/dbertram/followers","following_url":"https://api.github.com/users/dbertram/following{/other_user}","gists_url":"https://api.github.com/users/dbertram/gists{/gist_id}","starred_url":"https://api.github.com/users/dbertram/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbertram/subscriptions","organizations_url":"https://api.github.com/users/dbertram/orgs","repos_url":"https://api.github.com/users/dbertram/repos","events_url":"https://api.github.com/users/dbertram/events{/privacy}","received_events_url":"https://api.github.com/users/dbertram/received_events","type":"User","site_admin":false},"created_at":"2013-03-12T11:24:05Z","updated_at":"2013-03-12T11:24:05Z","author_association":"NONE","body":"I had a feeling it might not be as straightforward as a caching issue.\n\nFor us, this is easy to work around as the field we want to filter on is known at index creation time (user account number), so we can just specify it explicitly in our type mapping. I just wanted to report it as it was something that tripped us up and I'm sure other people might run into it.\n\nCouple of ideas/questions (not knowing the guts of ES):\n1. Why aren't the alias filters type inferenced the same way the document fields are when being indexed? The example is specifying a numeric term filter (i.e., \"numericField\": 1, not \"numericField\": \"1\"). Shouldn't that be sufficient for ES to know to build a numeric filter?\n2. Could the type mismatch between the alias filter and the underlying field in the index be detected at search time (and repaired/reported via an error)?\n3. When a document is indexed that updates the type mapping, could affected alias filters be invalidated/rebuilt as appropriate?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/33594253","html_url":"https://github.com/elastic/elasticsearch/issues/2762#issuecomment-33594253","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2762","id":33594253,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNTk0MjUz","user":{"login":"tmkujala","id":2327359,"node_id":"MDQ6VXNlcjIzMjczNTk=","avatar_url":"https://avatars1.githubusercontent.com/u/2327359?v=4","gravatar_id":"","url":"https://api.github.com/users/tmkujala","html_url":"https://github.com/tmkujala","followers_url":"https://api.github.com/users/tmkujala/followers","following_url":"https://api.github.com/users/tmkujala/following{/other_user}","gists_url":"https://api.github.com/users/tmkujala/gists{/gist_id}","starred_url":"https://api.github.com/users/tmkujala/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmkujala/subscriptions","organizations_url":"https://api.github.com/users/tmkujala/orgs","repos_url":"https://api.github.com/users/tmkujala/repos","events_url":"https://api.github.com/users/tmkujala/events{/privacy}","received_events_url":"https://api.github.com/users/tmkujala/received_events","type":"User","site_admin":false},"created_at":"2014-01-29T15:27:31Z","updated_at":"2014-01-29T15:27:31Z","author_association":"NONE","body":"I'm also seeing this issue on 0.90.3. While adding an explicit type mapping for the filtered field works, it appears that a default mapping does not. I'm leaning toward adding a specific type mapping for the field in addition to the default type mapping for dynamic types.\n\nHere's a brief recreation:\n\n```\n# create a new dated index\ncurl -XPUT http://localhost:9200/test_index_20140129\n\n# add a default mapping\ncurl -XPUT http://localhost:9200/test_index_20140129/_default_/_mapping -d '{\n  \"_default_\" : {\n    \"properties\" : {\n      \"@timestamp\" : {\n        \"type\" : \"date\",\n        \"format\" : \"dateOptionalTime\"\n      }\n    }\n  }\n}'\n\n# create an alias to the index with a time range filter\ncurl -XPUT http://localhost:9200/test_index_20140129/_alias/alias_test_index_20140129 -d '{\n  \"filter\" : {\n    \"range\" : {\n      \"@timestamp\" : {\n        \"lt\" : \"2014-01-30T00:00:00-0500\",\n        \"gte\" : \"2014-01-29T00:00:00-0500\"\n      }\n    }\n  }\n}'\n\n# index a document\ncurl -XPOST http://localhost:23392/alias_test_index_20140129/test -d '{\n  \"@timestamp\" : \"2014-01-29T12:00:00-0500\",\n  \"@message\" : \"this is a test\"\n}'\n\n# try to search for the document via the alias\ncurl -XGET http://localhost:9200/alias_test_index_20140129/_search?pretty\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/51586501","html_url":"https://github.com/elastic/elasticsearch/issues/2762#issuecomment-51586501","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2762","id":51586501,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNTg2NTAx","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-08-08T10:37:18Z","updated_at":"2014-08-08T10:37:18Z","author_association":"CONTRIBUTOR","body":"Closing in favour of #6664\n","performed_via_github_app":null}]