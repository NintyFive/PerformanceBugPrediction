{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/40397","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40397/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40397/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40397/events","html_url":"https://github.com/elastic/elasticsearch/issues/40397","id":424719376,"node_id":"MDU6SXNzdWU0MjQ3MTkzNzY=","number":40397,"title":"Skip_duplicate in Autosuggest by custom-field","user":{"login":"ravi-kumar-yadav","id":11976090,"node_id":"MDQ6VXNlcjExOTc2MDkw","avatar_url":"https://avatars3.githubusercontent.com/u/11976090?v=4","gravatar_id":"","url":"https://api.github.com/users/ravi-kumar-yadav","html_url":"https://github.com/ravi-kumar-yadav","followers_url":"https://api.github.com/users/ravi-kumar-yadav/followers","following_url":"https://api.github.com/users/ravi-kumar-yadav/following{/other_user}","gists_url":"https://api.github.com/users/ravi-kumar-yadav/gists{/gist_id}","starred_url":"https://api.github.com/users/ravi-kumar-yadav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ravi-kumar-yadav/subscriptions","organizations_url":"https://api.github.com/users/ravi-kumar-yadav/orgs","repos_url":"https://api.github.com/users/ravi-kumar-yadav/repos","events_url":"https://api.github.com/users/ravi-kumar-yadav/events{/privacy}","received_events_url":"https://api.github.com/users/ravi-kumar-yadav/received_events","type":"User","site_admin":false},"labels":[{"id":146833729,"node_id":"MDU6TGFiZWwxNDY4MzM3Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Suggesters","name":":Search/Suggesters","color":"0e8a16","default":false,"description":"\"Did you mean\" and suggestions as you type"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2019-03-25T04:33:48Z","updated_at":"2019-03-28T10:20:16Z","closed_at":"2019-03-28T09:12:45Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version**: \r\nVersion: 6.5.0, Build: default/tar/816e6f6/2018-11-09T18:58:36.352602Z, JVM: 1.8.0_192\r\n\r\n**JVM version**:\r\nopenjdk version \"11.0.2\" 2019-01-15\r\nOpenJDK Runtime Environment 18.9 (build 11.0.2+9)\r\nOpenJDK 64-Bit Server VM 18.9 (build 11.0.2+9, mixed mode)\r\n\r\n**OS version**:\r\nDarwin Ravi-2.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64\r\n\r\n**Category**: Autosuggest\r\n\r\n**Scenario**:\r\nWe have this functionality of [skip_duplicates](https://www.elastic.co/guide/en/elasticsearch/reference/6.5/search-suggesters-completion.html#skip_duplicates) which allows us to filter out duplicate documents. By default, this feature exploits the **text-suggestion** for filtering duplicate documents, but we need it to happen based on custom-field present in doc like local_id in following case.\r\n\r\n**Steps to reproduce:**\r\nLet's insert following docs, assuming **field: suggest** has **type: completion**. In following case all docs have same **input** i.e. **Nevermind**:\r\n\r\nCreate Mapping\r\n`curl -X PUT -H \"Content-type: application/json\" 'localhost:9200/music' -d '{\r\n    \"mappings\": {\r\n        \"_doc\" : {\r\n            \"properties\" : {\r\n                \"suggest\" : {\r\n                    \"type\" : \"completion\"\r\n                },\r\n                \"local_id\" : {\r\n                    \"type\": \"long\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n}'`\r\n\r\nInserting Docs:\r\n`\r\ncurl -X PUT -H \"Content-type: application/json\" 'localhost:9200/music/_doc/1?refresh' -d '{ \"local_id\": 12, \"suggest\" : [ { \"input\": \"Nevermind\", \"weight\" : 10 } ] }'\r\n`\r\n\r\n`\r\ncurl -X PUT -H \"Content-type: application/json\" 'localhost:9200/music/_doc/2?refresh' -d '{ \"local_id\": 12, \"suggest\" : [ { \"input\": \"Nevermind\", \"weight\" : 9 } ] }'\r\n`\r\n\r\n`\r\ncurl -X PUT -H \"Content-type: application/json\" 'localhost:9200/music/_doc/3?refresh' -d '{ \"local_id\": 13, \"suggest\" : [ { \"input\": \"Nevermind\", \"weight\" : 6 } ] }'\r\n`\r\n\r\nHere following query with **skip_duplicates: true**:\r\n`\r\ncurl -X GET -H \"Content-type: application/json\" 'localhost:9200/music/_doc/_search?pretty' -d '{\r\n  \"suggest\": {\r\n    \"song-suggest\": {\r\n      \"prefix\": \"never\",\r\n      \"completion\": {\r\n        \"field\": \"suggest\",\r\n        \"skip_duplicates\": true\r\n      }\r\n    }\r\n  }\r\n}'\r\n`\r\n\r\n**Actual/Current Behaviour**\r\nThe response would be one doc with the highest weight i.e. document with the doc_id 1 (as it has weight 10) and as the filtering criteria was the suggest-text:\r\n`\r\n{\r\n  \"took\" : 11,\r\n  \"timed_out\" : false,\r\n  \"_shards\" : {\r\n    \"total\" : 5,\r\n    \"successful\" : 5,\r\n    \"skipped\" : 0,\r\n    \"failed\" : 0\r\n  },\r\n  \"hits\" : {\r\n    \"total\" : 0,\r\n    \"max_score\" : 0.0,\r\n    \"hits\" : [ ]\r\n  },\r\n  \"suggest\" : {\r\n    \"song-suggest\" : [\r\n      {\r\n        \"text\" : \"never\",\r\n        \"offset\" : 0,\r\n        \"length\" : 5,\r\n        \"options\" : [\r\n          {\r\n            \"text\" : \"Nevermind\",\r\n            \"_index\" : \"music\",\r\n            \"_type\" : \"_doc\",\r\n            \"_id\" : \"2\",\r\n            \"_score\" : 9.0,\r\n            \"_source\" : {\r\n              \"local_id\" : 12,\r\n              \"suggest\" : [\r\n                {\r\n                  \"input\" : \"Nevermind\",\r\n                  \"weight\" : 9\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n`\r\n\r\n**Expected Behaviour**\r\nWe would like to have a functionality to de-duplicate by user-requested or custom field. Like if we de-duplicate by **field: local_id** then there will be two documents as output (one for each local_id group and filtered by the highest weight within the group).\r\n\r\n`\r\n{\r\n  \"took\" : 11,\r\n  \"timed_out\" : false,\r\n  \"_shards\" : {\r\n    \"total\" : 5,\r\n    \"successful\" : 5,\r\n    \"skipped\" : 0,\r\n    \"failed\" : 0\r\n  },\r\n  \"hits\" : {\r\n    \"total\" : 0,\r\n    \"max_score\" : 0.0,\r\n    \"hits\" : [ ]\r\n  },\r\n  \"suggest\" : {\r\n    \"song-suggest\" : [\r\n      {\r\n        \"text\" : \"never\",\r\n        \"offset\" : 0,\r\n        \"length\" : 5,\r\n        \"options\" : [\r\n          {\r\n            \"text\" : \"Nevermind\",\r\n            \"_index\" : \"music\",\r\n            \"_type\" : \"_doc\",\r\n            \"_id\" : \"2\",\r\n            \"_score\" : 9.0,\r\n            \"_source\" : {\r\n              \"local_id\" : 12,\r\n              \"suggest\" : [\r\n                {\r\n                  \"input\" : \"Nevermind\",\r\n                  \"weight\" : 9\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"text\" : \"never\",\r\n        \"offset\" : 0,\r\n        \"length\" : 5,\r\n        \"options\" : [\r\n          {\r\n            \"text\" : \"Nevermind\",\r\n            \"_index\" : \"music\",\r\n            \"_type\" : \"_doc\",\r\n            \"_id\" : \"3\",\r\n            \"_score\" : 6.0,\r\n            \"_source\" : {\r\n              \"local_id\" : 13,\r\n              \"suggest\" : [\r\n                {\r\n                  \"input\" : \"Nevermind\",\r\n                  \"weight\" : 6\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n`\r\n\r\nLet me know if we could do it with a small tweak in existing ES-6.5 source code\r\nOr\r\nLet's assume this field to be used will always be named: local_id (already present in doc or matched-text will be used by default), we can have this condition on field-name as we need this functionality on urgent basis.\r\n\r\nThanks in advance.","closed_by":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}