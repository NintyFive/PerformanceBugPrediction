{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/6276","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6276/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6276/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6276/events","html_url":"https://github.com/elastic/elasticsearch/issues/6276","id":34071275,"node_id":"MDU6SXNzdWUzNDA3MTI3NQ==","number":6276,"title":"ElastcSearch Help Request","user":{"login":"HeisenbergTT","id":7235578,"node_id":"MDQ6VXNlcjcyMzU1Nzg=","avatar_url":"https://avatars2.githubusercontent.com/u/7235578?v=4","gravatar_id":"","url":"https://api.github.com/users/HeisenbergTT","html_url":"https://github.com/HeisenbergTT","followers_url":"https://api.github.com/users/HeisenbergTT/followers","following_url":"https://api.github.com/users/HeisenbergTT/following{/other_user}","gists_url":"https://api.github.com/users/HeisenbergTT/gists{/gist_id}","starred_url":"https://api.github.com/users/HeisenbergTT/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeisenbergTT/subscriptions","organizations_url":"https://api.github.com/users/HeisenbergTT/orgs","repos_url":"https://api.github.com/users/HeisenbergTT/repos","events_url":"https://api.github.com/users/HeisenbergTT/events{/privacy}","received_events_url":"https://api.github.com/users/HeisenbergTT/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-05-22T11:04:09Z","updated_at":"2014-05-22T12:27:16Z","closed_at":"2014-05-22T12:27:16Z","author_association":"NONE","active_lock_reason":null,"body":"I have set up a 3 VMs using Vagrant, and ansible (w/docker)\n\nIn my Hosts file:\n\nI added these lines:\n192.168.50.10 earth\n192.168.50.11 hiveholm\n192.168.50.12 moth\n\nThis just gives the private address of the VM a name\n\nI use Vagrant to build and map 3 VM's on my Mac:\n\nVagrantfile:\n\n```\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\nROOT = File.dirname(File.absolute_path(__FILE__))\n\n# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!\nVAGRANTFILE_API_VERSION = '2'\n\n# Default env properties which can be overridden\n# Example overrides:\n#   echo \"ENV['PASSENGER_DOCKER_PATH'] ||= '../../phusion/passenger-docker'   \" >> ~/.vagrant.d/Vagrantfile\n#   echo \"ENV['BASE_BOX_URL']          ||= 'd\\:/dev/vm/vagrant/boxes/phusion/'\" >> ~/.vagrant.d/Vagrantfile\nBASE_BOX_URL          = ENV['BASE_BOX_URL']    || 'https://oss-binaries.phusionpassenger.com/vagrant/boxes/'\nVAGRANT_BOX_URL       = ENV['VAGRANT_BOX_URL'] || BASE_BOX_URL + 'ubuntu-12.04.3-amd64-vbox.box'\nVMWARE_BOX_URL        = ENV['VMWARE_BOX_URL']  || BASE_BOX_URL + 'ubuntu-12.04.3-amd64-vmwarefusion.box'\nBASEIMAGE_PATH        = ENV['BASEIMAGE_PATH' ] || '.'\nPASSENGER1_DOCKER_PATH = ENV['PASSENGER1_PATH' ] || '../vm1'\nPASSENGER2_DOCKER_PATH = ENV['PASSENGER2_PATH' ] || '../vm2'\nPASSENGER3_DOCKER_PATH = ENV['PASSENGER3_PATH' ] || '../vm3'\n\nDOCKERIZER_PATH       = ENV['DOCKERIZER_PATH'] || '../dockerizer'\n\n$script = <<SCRIPT\nwget -q -O - https://get.docker.io/gpg | apt-key add -\necho deb http://get.docker.io/ubuntu docker main > /etc/apt/sources.list.d/docker.list\napt-get update -qq\napt-get install -q -y --force-yes lxc-docker\nusermod -a -G docker vagrant\ndocker version\nsu - vagrant -c 'echo alias d=docker >> ~/.bash_aliases'\nSCRIPT\n\n\nclass MyInstaller < VagrantVbguest::Installers::Linux\n  def install(opts=nil, &block)\n    super\n    communicate.sudo('ln -s /opt/VBoxGuestAdditions-*/lib/VBoxGuestAdditions /usr/lib', opts, &block)\n  end\nend\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  config.vbguest.installer = MyInstaller\n\n  config.vm.define :vm1 do |vm1_config|\n\n\n    vm1_config.vm.box = 'phusion1-open-ubuntu-12.04-amd64'\n    vm1_config.vm.box_url = VAGRANT_BOX_URL\n    vm1_config.ssh.forward_agent = true\n\n    passenger_docker_path = File.absolute_path(PASSENGER1_DOCKER_PATH, ROOT)\n    if File.directory?(passenger_docker_path)\n      vm1_config.vm.synced_folder passenger_docker_path, '/vagrant/passenger-docker'\n    end\n\n    baseimage_path = File.absolute_path(BASEIMAGE_PATH, ROOT)\n    if File.directory?(baseimage_path)\n      vm1_config.vm.synced_folder baseimage_path, \"/vagrant/baseimage-docker\"\n    end\n\n    dockerizer_path = File.absolute_path(DOCKERIZER_PATH, ROOT)\n    if File.directory?(dockerizer_path)\n      vm1_config.vm.synced_folder dockerizer_path, '/vagrant/dockerizer'\n    end\n\n    vm1_config.vm.provider :vmware_fusion do |f, override|\n      override.vm.box_url = VMWARE_BOX_URL\n      f.vmx['displayName'] = 'baseimage-docker'\n    end\n\n    #vm1_config.vm.network :forwarded_port, guest: 22, host: 22222\n    #vm1_config.vm.network :forwarded_port, guest: 45678, host: 56789\n    #vm1_config.vm.network :forwarded_port, guest: 54328, host: 55900\n\n    if Dir.glob(\"#{File.dirname(__FILE__)}/.vagrant/machines/default/*/id\").empty?\n      vm1_config.vm.provision :shell, :inline => $script\n    end\n\n    #vm1_config.vm.network :hostonly, ip: \"192.168.50.10\"\n    vm1_config.vm.network \"private_network\", ip: \"192.168.50.10\"\n\n  end\n\n  config.vm.define :vm2 do |vm2_config|\n\n    vm2_config.vm.box = 'phusion1-open-ubuntu-12.04-amd64'\n    vm2_config.vm.box_url = VAGRANT_BOX_URL\n    vm2_config.ssh.forward_agent = true\n\n    passenger_docker_path = File.absolute_path(PASSENGER2_DOCKER_PATH, ROOT)\n    if File.directory?(passenger_docker_path)\n      vm2_config.vm.synced_folder passenger_docker_path, '/vagrant/passenger-docker'\n    end\n\n    baseimage_path = File.absolute_path(BASEIMAGE_PATH, ROOT)\n    if File.directory?(baseimage_path)\n      vm2_config.vm.synced_folder baseimage_path, \"/vagrant/baseimage-docker\"\n    end\n    dockerizer_path = File.absolute_path(DOCKERIZER_PATH, ROOT)\n    if File.directory?(dockerizer_path)\n      vm2_config.vm.synced_folder dockerizer_path, '/vagrant/dockerizer'\n    end\n\n    vm2_config.vm.provider :vmware_fusion do |f, override|\n      override.vm.box_url = VMWARE_BOX_URL\n      f.vmx['displayName'] = 'baseimage-docker'\n    end\n\n    #vm2_config.vm.network :forwarded_port, guest: 22, host: 22223\n    #vm2_config.vm.network :forwarded_port, guest: 45678, host: 56889\n    #vm2_config.vm.network :forwarded_port, guest: 54328, host: 55901\n\n    if Dir.glob(\"#{File.dirname(__FILE__)}/.vagrant/machines/default/*/id\").empty?    \n      vm2_config.vm.provision :shell, :inline => $script\n    end\n\n    #vm2_config.vm.network :hostonly, ip: \"192.168.50.11\"\n    vm2_config.vm.network \"private_network\", ip: \"192.168.50.11\"\n\n  end\n\n  config.vm.define :vm3 do |vm3_config|\n\n\n    vm3_config.vm.box = 'phusion1-open-ubuntu-12.04-amd64'\n    vm3_config.vm.box_url = VAGRANT_BOX_URL\n    vm3_config.ssh.forward_agent = true\n\n    passenger_docker_path = File.absolute_path(PASSENGER3_DOCKER_PATH, ROOT)\n    if File.directory?(passenger_docker_path)\n      vm3_config.vm.synced_folder passenger_docker_path, '/vagrant/passenger-docker'\n    end\n\n    baseimage_path = File.absolute_path(BASEIMAGE_PATH, ROOT)\n    if File.directory?(baseimage_path)\n      vm3_config.vm.synced_folder baseimage_path, \"/vagrant/baseimage-docker\"\n    end\n\n    dockerizer_path = File.absolute_path(DOCKERIZER_PATH, ROOT)\n    if File.directory?(dockerizer_path)\n      vm3_config.vm.synced_folder dockerizer_path, '/vagrant/dockerizer'\n    end\n\n    vm3_config.vm.provider :vmware_fusion do |f, override|\n      override.vm.box_url = VMWARE_BOX_URL\n      f.vmx['displayName'] = 'baseimage-docker'\n    end\n\n    #vm3_config.vm.network :forwarded_port, guest: 22, host: 22224\n    #vm3_config.vm.network :forwarded_port, guest: 45678, host: 56989\n    #vm3_config.vm.network :forwarded_port, guest: 54328, host: 55902\n\n    if Dir.glob(\"#{File.dirname(__FILE__)}/.vagrant/machines/default/*/id\").empty?\n      vm3_config.vm.provision :shell, :inline => $script\n    end\n\n    #vm3_config.vm.network :hostonly, ip: \"192.168.50.12\"\n    vm3_config.vm.network \"private_network\", ip: \"192.168.50.12\"\n\n  end\n\n\nend\n```\n\nThis builds and runs 3 VM's using the phusion baseimahe-docker base:\nI then run anansible playbook to setup the VM's so they have their own sshd\nansible-playbook (terra1.yml)\n\n```\n- name: terra\n  hosts: all\n  # user: $user\n  remote_user: root\n  sudo: yes\n\n  gather_facts: yes\n  tasks:    \n    - name: install pip\n      shell: apt-get -y install python-pip\n\n    - name: install docker-py\n      pip: name=docker-py state=present\n\n    - name: Do the docker build\n      shell: cd /vagrant/image && docker build -t traintracks_image_9 .\n\n    - name: Run the container\n      docker: ports=45678:22,54328:54328,9200:9200,9201:9201,9202:9202,9300:9300,9301:9301,9302:9302 name=test_traintracks_image_9g image=traintracks_image_9\n```\n\n this installs a couple of things and builds the base image inside the container with the build step and then runs it.\n (Note this is applied to all 3 VMs but in this testing I am just building out the first vm (earth))\n\nLast step install and setup and run ElastciSearch:\n\n I have reused the \"the-ansibles\" project playbook as a base for out playbook to setup and run elastic search\nProject is called traintracks\nansible-playbook: terra_es1.yml:\n# file: terra_es1.yml\n- name: terra\n    hosts: all\n  \n    remote_user: root\n    sudo: yes\n  \n    gather_facts: yes\n  \n    vars_files:\n      - host_vars/earth\n  \n    roles:\n      - role: auth\n        tags: step Begin\n      - role: common\n        tags: step Common\n      - role: security\n        tags: Step Security\n      - role: ssl\n        tags: step SSL\n      - role: monit\n        tags: step MONIT\n      - role: python\n        tags: step PYTHON\n      - role: jdk\n        tags: step JDK\n      - role: elasticsearch\n        tags: step ElasticSearch\n\ninstalls and sets up all the required packages and finally installs elastic search\n\nAll this steps seem to SUCCEED or more correctly show no errors and we basically have not changed anything. \nBut when you go into the docker container (ssh root@earth -p 45678)\nand look at the supervisord log and the elasticsearch log it shows this problem it shows this error:\n\n[2014-05-22 10:15:57,306][INFO ][node                     ] [Apryll] version[0.90.5], pid[2456], build[c8714e8/2013-09-17T12:50:20Z]\n[2014-05-22 10:15:57,307][INFO ][node                     ] [Apryll] initializing ...\n[2014-05-22 10:15:57,313][INFO ][plugins                  ] [Apryll] loaded [], sites []\n[2014-05-22 10:15:59,390][INFO ][node                     ] [Apryll] initialized\n[2014-05-22 10:15:59,390][INFO ][node                     ] [Apryll] starting ...\n[2014-05-22 10:15:59,467][ERROR][bootstrap                ] [Apryll] {0.90.5}: Startup Failed ...\n- BindTransportException[Failed to bind to [9300]]\n  ChannelException[Failed to bind to: /192.168.50.10:9300]\n      BindException[Cannot assign requested address]\n\nI run netstat andit shows nothing is using the 9300 port but ES fails to bind it!\n\nnetstat -lc\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State  \ntcp        0      0 82346d809c2f:domain     _:_                     LISTEN  \ntcp        0      0 _:ssh                   *:_                     LISTEN  \ntcp6       0      0 [::]:ssh                [::]:\\*                  LISTEN  \nudp        0      0 82346d809c2f:domain     _:_  \nudp        0      0 82346d809c2f:ntp        _:_  \nudp        0      0 localhost:ntp           _:_  \nudp        0      0 _:ntp                   *:_  \nudp6       0      0 fe80::34db:98ff:fe1:ntp [::]:\\*  \nudp6       0      0 localhost:ntp           [::]:\\*  \nudp6       0      0 [::]:ntp                [::]:\\*  \nActive UNIX domain sockets (only servers)\nProto RefCnt Flags       Type       State         I-Node   Path\nunix  2      [ ACC ]     STREAM     LISTENING     55239    @/tmp/fam-root-\nunix  2      [ ACC ]     STREAM     LISTENING     55224    /var/run/fail2ban/fail2ban.sock\n\nThis seems to indicate that nothing is using port 9300\nbut I run from the command link inside the docker Container:\n\nSo I killed supervisord and ran the elasticsearch command from rthe ssh shell\n\n/usr/local/etc/elasticsearch/bin/elasticsearch -f\n\nI GET THIS:\nroot@82346d809c2f:~# /usr/local/etc/elasticsearch/bin/elasticsearch -f\n[2014-05-22 10:42:03,447][INFO ][node                     ] [Fan Boy] version[0.90.5], pid[11886], build[c8714e8/2013-09-17T12:50:20Z]\n[2014-05-22 10:42:03,448][INFO ][node                     ] [Fan Boy] initializing ...\n[2014-05-22 10:42:03,454][INFO ][plugins                  ] [Fan Boy] loaded [], sites []\n[2014-05-22 10:42:05,564][INFO ][node                     ] [Fan Boy] initialized\n[2014-05-22 10:42:05,564][INFO ][node                     ] [Fan Boy] starting ...\n[2014-05-22 10:42:05,639][ERROR][bootstrap                ] [Fan Boy] {0.90.5}: Startup Failed ...\n- BindTransportException[Failed to bind to [9300]]\n  ChannelException[Failed to bind to: /192.168.50.10:9300]\n      BindException[Cannot assign requested address]\n\nBut I dont get more information \n\nAny help would be appreciated!\n\nJeff Wilson\nheisenberg@traintracks.io\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}