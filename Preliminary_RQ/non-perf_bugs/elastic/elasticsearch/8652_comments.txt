[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/65078117","html_url":"https://github.com/elastic/elasticsearch/issues/8652#issuecomment-65078117","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8652","id":65078117,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MDc4MTE3","user":{"login":"t-lo","id":71888,"node_id":"MDQ6VXNlcjcxODg4","avatar_url":"https://avatars2.githubusercontent.com/u/71888?v=4","gravatar_id":"","url":"https://api.github.com/users/t-lo","html_url":"https://github.com/t-lo","followers_url":"https://api.github.com/users/t-lo/followers","following_url":"https://api.github.com/users/t-lo/following{/other_user}","gists_url":"https://api.github.com/users/t-lo/gists{/gist_id}","starred_url":"https://api.github.com/users/t-lo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/t-lo/subscriptions","organizations_url":"https://api.github.com/users/t-lo/orgs","repos_url":"https://api.github.com/users/t-lo/repos","events_url":"https://api.github.com/users/t-lo/events{/privacy}","received_events_url":"https://api.github.com/users/t-lo/received_events","type":"User","site_admin":false},"created_at":"2014-12-01T15:13:10Z","updated_at":"2014-12-01T15:13:10Z","author_association":"CONTRIBUTOR","body":"@herenowcoder I disagree - using `exec` there works since ES is backgrounded (`&` at the end of that line). The backgrounded shell then `exec`s.\n\nHowever, other things can be improved with the daemonization code: elasticsearch, even when daemonized, is the child of the current shell. Being a daemon it should rather start its own session (e.g. by using `setsid`). Also, stdin is closed in the script but stdout and stderr remain open (rather unusual for daemons), but I suppose ES requires those for logging purposes?\n\nA cheap shot on the daemonization / initialization problem would be to use the PID file to signal successful start-up. The start script then would wait a pre-defined time slot (are 2s reasonable?) for the PID file to appear after ES was background-started and return an error if no file appears. In cases where no PID file was requested by the user the script could simply use `mktemp` to create a temporary file.\n\nApart from the obvious changes in `bin/elasticsearch` this would require to move the PID file creation code in `src/main/java/org/elasticsearch/bootstrap/Bootstrap.java` from the beginning (line ~150) to the end (line ~250) of the `main` method.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/65807697","html_url":"https://github.com/elastic/elasticsearch/issues/8652#issuecomment-65807697","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8652","id":65807697,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODA3Njk3","user":{"login":"wkhere","id":32460,"node_id":"MDQ6VXNlcjMyNDYw","avatar_url":"https://avatars0.githubusercontent.com/u/32460?v=4","gravatar_id":"","url":"https://api.github.com/users/wkhere","html_url":"https://github.com/wkhere","followers_url":"https://api.github.com/users/wkhere/followers","following_url":"https://api.github.com/users/wkhere/following{/other_user}","gists_url":"https://api.github.com/users/wkhere/gists{/gist_id}","starred_url":"https://api.github.com/users/wkhere/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wkhere/subscriptions","organizations_url":"https://api.github.com/users/wkhere/orgs","repos_url":"https://api.github.com/users/wkhere/repos","events_url":"https://api.github.com/users/wkhere/events{/privacy}","received_events_url":"https://api.github.com/users/wkhere/received_events","type":"User","site_admin":false},"created_at":"2014-12-05T15:46:45Z","updated_at":"2014-12-05T15:47:22Z","author_association":"NONE","body":"@t-lo well there are two usages of `exec` there.\nFirst, I agree in the foreground case `exec` is valid.\n\nHowever in the case of going background, I disagree that `exec` is valid. The init.d script relies on the return value from line 155 which is never called.\n\nIn this case if the `exec`uted Elasticsearch process fails, like: there are no directories for logs created for example, then init.d script falsely shows that the service was successfully started, while it wasn't.\n\nThat's the real world case I'm describing.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/65811970","html_url":"https://github.com/elastic/elasticsearch/issues/8652#issuecomment-65811970","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8652","id":65811970,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODExOTcw","user":{"login":"t-lo","id":71888,"node_id":"MDQ6VXNlcjcxODg4","avatar_url":"https://avatars2.githubusercontent.com/u/71888?v=4","gravatar_id":"","url":"https://api.github.com/users/t-lo","html_url":"https://github.com/t-lo","followers_url":"https://api.github.com/users/t-lo/followers","following_url":"https://api.github.com/users/t-lo/following{/other_user}","gists_url":"https://api.github.com/users/t-lo/gists{/gist_id}","starred_url":"https://api.github.com/users/t-lo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/t-lo/subscriptions","organizations_url":"https://api.github.com/users/t-lo/orgs","repos_url":"https://api.github.com/users/t-lo/repos","events_url":"https://api.github.com/users/t-lo/events{/privacy}","received_events_url":"https://api.github.com/users/t-lo/received_events","type":"User","site_admin":false},"created_at":"2014-12-05T16:14:16Z","updated_at":"2014-12-05T16:14:16Z","author_association":"CONTRIBUTOR","body":"@herenowcoder  But yes, the return is called :) As I wrote, since the whole line is backgrounded (`&` at the end of the line) `exec` will run in the backgrounded sub-shell.\n\nMore precisely, there is a notable difference between\n\n``` (sh)\nexec elasticsearch\n```\n\nand\n\n``` (sh)\nexec elasticsearch &\n```\n\nThe former will overwrite the current process (as used in the foreground case). The latter will spawn a background process (because of the `&`) which will then be overwritten by the `exec`. The command will return immediately.\n\nBy the way, I opened a pull request which fixes the \"ignore error if backgrounded\" issue: https://github.com/elasticsearch/elasticsearch/pull/8742. Take a look at the changes if you like - I tested those, they work as expected and will fix your issue. Note that the exec is still there (and it works :) ).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/149966514","html_url":"https://github.com/elastic/elasticsearch/issues/8652#issuecomment-149966514","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8652","id":149966514,"node_id":"MDEyOklzc3VlQ29tbWVudDE0OTk2NjUxNA==","user":{"login":"bdharrington7","id":4553795,"node_id":"MDQ6VXNlcjQ1NTM3OTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4553795?v=4","gravatar_id":"","url":"https://api.github.com/users/bdharrington7","html_url":"https://github.com/bdharrington7","followers_url":"https://api.github.com/users/bdharrington7/followers","following_url":"https://api.github.com/users/bdharrington7/following{/other_user}","gists_url":"https://api.github.com/users/bdharrington7/gists{/gist_id}","starred_url":"https://api.github.com/users/bdharrington7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bdharrington7/subscriptions","organizations_url":"https://api.github.com/users/bdharrington7/orgs","repos_url":"https://api.github.com/users/bdharrington7/repos","events_url":"https://api.github.com/users/bdharrington7/events{/privacy}","received_events_url":"https://api.github.com/users/bdharrington7/received_events","type":"User","site_admin":false},"created_at":"2015-10-21T17:15:53Z","updated_at":"2015-10-21T17:15:53Z","author_association":"NONE","body":"Hi, what happened to this? is this still going to be merged? I'm running 1.7.1 on CentOS and still having this issue where elasticsearch will fail silently, and no logs pick anything up. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/158684166","html_url":"https://github.com/elastic/elasticsearch/issues/8652#issuecomment-158684166","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8652","id":158684166,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODY4NDE2Ng==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-11-21T21:41:12Z","updated_at":"2015-11-21T21:41:12Z","author_association":"CONTRIBUTOR","body":"Closing in favour of https://github.com/elastic/elasticsearch/pull/13643\n","performed_via_github_app":null}]