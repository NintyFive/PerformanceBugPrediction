[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320258752","html_url":"https://github.com/elastic/elasticsearch/issues/26060#issuecomment-320258752","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26060","id":320258752,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDI1ODc1Mg==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2017-08-04T14:09:49Z","updated_at":"2017-08-04T14:09:49Z","author_association":"MEMBER","body":"Hi @jhberthemet, we reserve Github for bug reports and feature requests only. Please ask questions like these in the [Elasticsearch forum](https://discuss.elastic.co/c/elasticsearch) instead. Thank you!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320260496","html_url":"https://github.com/elastic/elasticsearch/issues/26060#issuecomment-320260496","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26060","id":320260496,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDI2MDQ5Ng==","user":{"login":"jhberthemet","id":8289170,"node_id":"MDQ6VXNlcjgyODkxNzA=","avatar_url":"https://avatars0.githubusercontent.com/u/8289170?v=4","gravatar_id":"","url":"https://api.github.com/users/jhberthemet","html_url":"https://github.com/jhberthemet","followers_url":"https://api.github.com/users/jhberthemet/followers","following_url":"https://api.github.com/users/jhberthemet/following{/other_user}","gists_url":"https://api.github.com/users/jhberthemet/gists{/gist_id}","starred_url":"https://api.github.com/users/jhberthemet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhberthemet/subscriptions","organizations_url":"https://api.github.com/users/jhberthemet/orgs","repos_url":"https://api.github.com/users/jhberthemet/repos","events_url":"https://api.github.com/users/jhberthemet/events{/privacy}","received_events_url":"https://api.github.com/users/jhberthemet/received_events","type":"User","site_admin":false},"created_at":"2017-08-04T14:16:45Z","updated_at":"2017-08-04T14:16:45Z","author_association":"NONE","body":"Hi @danielmitterdorfer, to me that's a bug, upsert should update the existing document, not create a new one with the delta.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320265935","html_url":"https://github.com/elastic/elasticsearch/issues/26060#issuecomment-320265935","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26060","id":320265935,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDI2NTkzNQ==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2017-08-04T14:37:59Z","updated_at":"2017-08-04T14:37:59Z","author_association":"MEMBER","body":">  Deletes works fine, but upserts don't work as we'd expect.\r\n\r\nHow does it work at the moment and what do you expect? Can you please share a self-contained example that reproduces the problem you're experiencing?\r\n\r\n> Is there a solution so that upserting a document would move the data to the newest index?\r\n\r\nTo me this sounds like a second topic? I'm not sure I understand you correctly but in the update case the document will stay in the same index. So I don't think it's possible what you describe.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320268760","html_url":"https://github.com/elastic/elasticsearch/issues/26060#issuecomment-320268760","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26060","id":320268760,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDI2ODc2MA==","user":{"login":"jhberthemet","id":8289170,"node_id":"MDQ6VXNlcjgyODkxNzA=","avatar_url":"https://avatars0.githubusercontent.com/u/8289170?v=4","gravatar_id":"","url":"https://api.github.com/users/jhberthemet","html_url":"https://github.com/jhberthemet","followers_url":"https://api.github.com/users/jhberthemet/followers","following_url":"https://api.github.com/users/jhberthemet/following{/other_user}","gists_url":"https://api.github.com/users/jhberthemet/gists{/gist_id}","starred_url":"https://api.github.com/users/jhberthemet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhberthemet/subscriptions","organizations_url":"https://api.github.com/users/jhberthemet/orgs","repos_url":"https://api.github.com/users/jhberthemet/repos","events_url":"https://api.github.com/users/jhberthemet/events{/privacy}","received_events_url":"https://api.github.com/users/jhberthemet/received_events","type":"User","site_admin":false},"created_at":"2017-08-04T14:49:13Z","updated_at":"2017-08-04T14:49:13Z","author_association":"NONE","body":"I'll work on a full example an provide it here. For now, according to the documentation it should \"reindex\" the document, to me that should make it go to the newest index:\r\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update.html\r\n> Note, this operation still means full reindex of the document, it just removes some network roundtrips and reduces chances of version conflicts between the get and the index. \r\n\r\nHere is the scenario. I have \"EmailIndex\" alias with \"EmailIndexV1\" index that contains:\r\n{\r\n_id=42,\r\nstatus=processing,\r\ntext=hello,\r\n}\r\n\r\nI create a new index \"EmailIndexV2\" (with a different mapping) and send something like:\r\nPOST EmailIndexV2/email/42/_update\r\n{\r\n    \"doc\" : {\r\n        \"status\" : \"done\"\r\n    },\r\n    \"doc_as_upsert\" : true\r\n}\r\n\r\nThe problem is that if I use the alias instead of an index name I get an error.\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320288710","html_url":"https://github.com/elastic/elasticsearch/issues/26060#issuecomment-320288710","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26060","id":320288710,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDI4ODcxMA==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2017-08-04T16:09:30Z","updated_at":"2017-08-04T16:17:58Z","author_association":"MEMBER","body":"> it should \"reindex\" the document, to me that should make it go to the newest index:\r\n>> Note, this operation still means full reindex of the document, it just removes some network roundtrips and reduces chances of version conflicts between the get and the index.\r\n\r\nThanks for the explanation. Now I can see from where your expectation is coming. I think the wording in the documentation is not accurately describing [what's going on](https://github.com/elastic/elasticsearch/blob/3518e31/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java#L85-L99):\r\n\r\n* Either the alias is pointing to the \"old\" index (`EmailIndexV1`), then the upsert would find the document, and [update it](https://github.com/elastic/elasticsearch/blob/3518e31/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java#L214-L241)\r\n* Or the alias is pointing to the \"new\" index (`EmailIndexV2`), then the upsert would *not* find the document (it's looking in `EmailIndexV2`) and hence it would create a *new* document and insert it.\r\n\r\nSo \"reindexing\" refers here to the fact that a new document is added to the (same) index instead of replacing the same document in-place in the index (which is impossible in Lucene). However, this behavior is intentional. The usual procedure if you change the mapping is to use the [reindex API](https://www.elastic.co/guide/en/elasticsearch/reference/5.5/docs-reindex.html) that has been introduced in 2.x which really does what you want. But you usually apply it against your index not individual documents.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320661319","html_url":"https://github.com/elastic/elasticsearch/issues/26060#issuecomment-320661319","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26060","id":320661319,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDY2MTMxOQ==","user":{"login":"jhberthemet","id":8289170,"node_id":"MDQ6VXNlcjgyODkxNzA=","avatar_url":"https://avatars0.githubusercontent.com/u/8289170?v=4","gravatar_id":"","url":"https://api.github.com/users/jhberthemet","html_url":"https://github.com/jhberthemet","followers_url":"https://api.github.com/users/jhberthemet/followers","following_url":"https://api.github.com/users/jhberthemet/following{/other_user}","gists_url":"https://api.github.com/users/jhberthemet/gists{/gist_id}","starred_url":"https://api.github.com/users/jhberthemet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhberthemet/subscriptions","organizations_url":"https://api.github.com/users/jhberthemet/orgs","repos_url":"https://api.github.com/users/jhberthemet/repos","events_url":"https://api.github.com/users/jhberthemet/events{/privacy}","received_events_url":"https://api.github.com/users/jhberthemet/received_events","type":"User","site_admin":false},"created_at":"2017-08-07T13:20:51Z","updated_at":"2017-08-07T13:20:51Z","author_association":"NONE","body":"The thing is that in the prepare() phase:\r\nhttps://github.com/elastic/elasticsearch/blob/3518e31/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java#L73\r\n\r\nwe're doing a search on the current index, would it be possible to do a search on on all the indexes of the alias? Afterall the regular search is working like that, here it's a search by id so it should be fast. Upsert behavior would be more consistent.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320869107","html_url":"https://github.com/elastic/elasticsearch/issues/26060#issuecomment-320869107","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26060","id":320869107,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDg2OTEwNw==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2017-08-08T07:03:40Z","updated_at":"2017-08-08T07:03:40Z","author_association":"MEMBER","body":"While it may look simple, getting such an operation right in a distributed system like Elasticsearch is an extremely tough challenge. The key problem is that you have to execute two operations: One delete in the old index and one insert in the new index and all this has to work in the face of all sorts of failures (different network failures , failing nodes, long GC pauses, etc. etc.) or otherwise we'd risk data loss (see also our [docs on replication](https://www.elastic.co/guide/en/elasticsearch/reference/5.5/docs-replication.html)).\r\n\r\nWe've already put in a ton of work into [getting this right for just a single shard](https://github.com/elastic/elasticsearch/issues/10708). I don't say that it's impossible but I think it is more complex than it seems.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/321190940","html_url":"https://github.com/elastic/elasticsearch/issues/26060#issuecomment-321190940","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26060","id":321190940,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMTE5MDk0MA==","user":{"login":"jhberthemet","id":8289170,"node_id":"MDQ6VXNlcjgyODkxNzA=","avatar_url":"https://avatars0.githubusercontent.com/u/8289170?v=4","gravatar_id":"","url":"https://api.github.com/users/jhberthemet","html_url":"https://github.com/jhberthemet","followers_url":"https://api.github.com/users/jhberthemet/followers","following_url":"https://api.github.com/users/jhberthemet/following{/other_user}","gists_url":"https://api.github.com/users/jhberthemet/gists{/gist_id}","starred_url":"https://api.github.com/users/jhberthemet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhberthemet/subscriptions","organizations_url":"https://api.github.com/users/jhberthemet/orgs","repos_url":"https://api.github.com/users/jhberthemet/repos","events_url":"https://api.github.com/users/jhberthemet/events{/privacy}","received_events_url":"https://api.github.com/users/jhberthemet/received_events","type":"User","site_admin":false},"created_at":"2017-08-09T08:34:36Z","updated_at":"2017-08-09T08:34:36Z","author_association":"NONE","body":"You're right, and in the end that's not really the root of my problem. The problem is that upsert is creating a new document whereas one already exists in an other index.\r\n\r\nWould it be possible for upsert to keep updating the exiting document in the other index? I'd propose that if you upsert on the alias (that is not possible today) it will search for the doc in all indexes and update in the found index or insert in the latest. Whereas upsert in a particular index would work like it is today.\r\n\r\nThat way we'll be able to run a reindex in the background while keep a consistent index.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/321752934","html_url":"https://github.com/elastic/elasticsearch/issues/26060#issuecomment-321752934","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26060","id":321752934,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMTc1MjkzNA==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2017-08-11T08:05:27Z","updated_at":"2017-08-11T08:05:27Z","author_association":"MEMBER","body":"I really hear your need. However, I think there are a couple of problems that prevent to allow aliases in upsert operations:\r\n\r\n1. An id can only be unique within an index. What happens if we find multiple documents with the same id?\r\n2. If we do not find any document, we need to insert it into an index. You propose to use the \"latest\" one but Elasticsearch has no notion of \"latest index\". Yes, there are use-case specific conventions for index names (like date patterns for the logging use-case) but how would we decide in the general case of multiple matching indices, e.g. three indices with the name \"A\", \"B\" and \"C\" which is the right one?\r\n\r\nTo me all this hints that Elasticsearch is not the right component in your architecture to handle this situation. The notion of a \"latest\" index is something that's application specific and the same goes for which documents we should touch. I think you'd be better off with less indices and either full or partial reindexing of your data.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/321772800","html_url":"https://github.com/elastic/elasticsearch/issues/26060#issuecomment-321772800","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26060","id":321772800,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMTc3MjgwMA==","user":{"login":"jhberthemet","id":8289170,"node_id":"MDQ6VXNlcjgyODkxNzA=","avatar_url":"https://avatars0.githubusercontent.com/u/8289170?v=4","gravatar_id":"","url":"https://api.github.com/users/jhberthemet","html_url":"https://github.com/jhberthemet","followers_url":"https://api.github.com/users/jhberthemet/followers","following_url":"https://api.github.com/users/jhberthemet/following{/other_user}","gists_url":"https://api.github.com/users/jhberthemet/gists{/gist_id}","starred_url":"https://api.github.com/users/jhberthemet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhberthemet/subscriptions","organizations_url":"https://api.github.com/users/jhberthemet/orgs","repos_url":"https://api.github.com/users/jhberthemet/repos","events_url":"https://api.github.com/users/jhberthemet/events{/privacy}","received_events_url":"https://api.github.com/users/jhberthemet/received_events","type":"User","site_admin":false},"created_at":"2017-08-11T09:55:29Z","updated_at":"2017-08-11T09:55:29Z","author_association":"NONE","body":"1. I would consider that as an error and an improper usage of upsert on alias and throw an exception. What would happen for a search on the alias, would it return two documents with the same _id?\r\n2. When I said latest, I meant the one the alias is currently pointing to, like it's done for an index operation on an alias.\r\n\r\nEverything else is working well with Elasticsearch for us, I don't think the fix on upsert is that complicated compared to what ES can already do.\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/327426652","html_url":"https://github.com/elastic/elasticsearch/issues/26060#issuecomment-327426652","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26060","id":327426652,"node_id":"MDEyOklzc3VlQ29tbWVudDMyNzQyNjY1Mg==","user":{"login":"jhberthemet","id":8289170,"node_id":"MDQ6VXNlcjgyODkxNzA=","avatar_url":"https://avatars0.githubusercontent.com/u/8289170?v=4","gravatar_id":"","url":"https://api.github.com/users/jhberthemet","html_url":"https://github.com/jhberthemet","followers_url":"https://api.github.com/users/jhberthemet/followers","following_url":"https://api.github.com/users/jhberthemet/following{/other_user}","gists_url":"https://api.github.com/users/jhberthemet/gists{/gist_id}","starred_url":"https://api.github.com/users/jhberthemet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhberthemet/subscriptions","organizations_url":"https://api.github.com/users/jhberthemet/orgs","repos_url":"https://api.github.com/users/jhberthemet/repos","events_url":"https://api.github.com/users/jhberthemet/events{/privacy}","received_events_url":"https://api.github.com/users/jhberthemet/received_events","type":"User","site_admin":false},"created_at":"2017-09-06T09:21:12Z","updated_at":"2017-09-06T09:21:12Z","author_association":"NONE","body":"Any news, is it possible to reopen this issue?","performed_via_github_app":null}]