{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/14716","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14716/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14716/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14716/events","html_url":"https://github.com/elastic/elasticsearch/issues/14716","id":116603501,"node_id":"MDU6SXNzdWUxMTY2MDM1MDE=","number":14716,"title":"TransportClient remains in a dirty state after a failed write to a node, after the node comes back up","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-11-12T17:49:34Z","updated_at":"2015-11-12T20:25:42Z","closed_at":"2015-11-12T20:25:42Z","author_association":"NONE","active_lock_reason":null,"body":"A TransportClient holds a reference to a TransportClientNodesService and that service will disconnect from a node on a failed write.  If the TransportClientNodesService is in sniffing mode, it will re-establish its TransportClientNodesService#transportService field as being connected.  However, that state is not transferred to the TransportClient, so all future writes fail.\n\nAfter a failed write, the node service throws this exception:\n\n```\ne   ConnectTransportException  (id=5122)    \n'e' referenced from:    \naction  null    \naddress InetSocketTransportAddress  (id=5121)   \ncause   ConnectException  (id=5127) \ndetailMessage   \"[][inet[es.listener/192.168.56.101:9300]] connect_timeout[30s]\" (id=5128)  \nnode    DiscoveryNode  (id=4676)    \nstackTrace  StackTraceElement[0]  (id=5070) \nsuppressedExceptions    Collections$UnmodifiableRandomAccessList<E>  (id=5071)  \n```\n\nAfter the node comes back up, the sniffer will re-attach:\n\n```\n    [[Carolyn Trainer][a_SJUenqR5ykMkJ0VtQJhA][rcoe-mintx64-vbox][inet[/192.168.56.101:9300]]]\n```\n\nHowever, that state is not transferred to the TransportClient.  Attempting to use a client for a node that comes back up throws:\n\n```\ne   ElasticsearchIllegalStateException  (id=5067)   \n    'e' referenced from:    \n    cause   ElasticsearchIllegalStateException  (id=5067)   \n    detailMessage   \"client is closed\" (id=5069)    \n    stackTrace  StackTraceElement[0]  (id=5070) \n    suppressedExceptions    Collections$UnmodifiableRandomAccessList<E>  (id=5071)  \n```\n","closed_by":null,"performed_via_github_app":null}