{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/43251","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43251/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43251/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43251/events","html_url":"https://github.com/elastic/elasticsearch/issues/43251","id":456401610,"node_id":"MDU6SXNzdWU0NTY0MDE2MTA=","number":43251,"title":"Possible stack overflow in failure scenerio in Cross Cluster Replication","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"labels":[{"id":912824565,"node_id":"MDU6TGFiZWw5MTI4MjQ1NjU=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/CCR","name":":Distributed/CCR","color":"0e8a16","default":false,"description":"Issues around the Cross Cluster State Replication features"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-06-14T19:31:44Z","updated_at":"2019-07-16T22:23:40Z","closed_at":"2019-07-16T22:23:40Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"While investigating an issue with CCR where both the leader and follower were overwhelmed. (especially the follower with long GC's, nodes dropping from cluster, etc.)  A stack overflow exception was logged. The full exception is [here](https://gist.github.com/jakelandis/9ef72d6bff8a7e3d33922a9cde0c4063) (it is too long to include as part of the issue)...here are the highlights:\r\n\r\n```\r\n[2019-05-13T09:07:53,843][WARN ][o.e.x.c.a.AutoFollowCoordinator] [hostname.was.here] failure occurred while fetching cluster state for auto follow pattern [follow-pattern-was-here]\r\norg.elasticsearch.ElasticsearchStatusException: can not fetch remote cluster state as the license state of the remote cluster [remote-cluster-name-was-here] could not be determined\r\n...\r\nCaused by: org.elasticsearch.ElasticsearchException: could not determine the license type for cluster [cluster-name-was-here]\r\n...\r\nCaused by: java.util.concurrent.RejectedExecutionException: connect queue is full\r\n```\r\nDigging through the possible culprits, it appears to be looping on : \r\n```\r\n    at org.elasticsearch.xpack.ccr.action.AutoFollowCoordinator$AutoFollower.start(AutoFollowCoordinator.java:389) ~[?:?]\r\n\tat org.elasticsearch.xpack.ccr.action.AutoFollowCoordinator$AutoFollower.finalise(AutoFollowCoordinator.java:583) ~[?:?]\r\n\tat org.elasticsearch.xpack.ccr.action.AutoFollowCoordinator$AutoFollower.lambda$start$1(AutoFollowCoordinator.java:416) ~[?:?]\r\n\tat org.elasticsearch.xpack.ccr.action.AutoFollowCoordinator$2.lambda$getRemoteClusterState$0(AutoFollowCoordinator.java:229) ~[?:?]\r\n\tat org.elasticsearch.xpack.ccr.CcrLicenseChecker$1.onFailure(CcrLicenseChecker.java:232) ~[?:?]\r\n\tat org.elasticsearch.license.RemoteClusterLicenseChecker$1.onFailure(RemoteClusterLicenseChecker.java:188) ~[?:?]\r\n\tat org.elasticsearch.action.support.ContextPreservingActionListener.onFailure(ContextPreservingActionListener.java:50) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.action.ActionListener$1.onFailure(ActionListener.java:69) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.action.support.ContextPreservingActionListener.onFailure(ContextPreservingActionListener.java:50) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.transport.RemoteClusterConnection$ConnectHandler.connect(RemoteClusterConnection.java:424) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.transport.RemoteClusterConnection$ConnectHandler.connect(RemoteClusterConnection.java:406) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.transport.RemoteClusterConnection.ensureConnected(RemoteClusterConnection.java:213) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.transport.RemoteClusterService.ensureConnected(RemoteClusterService.java:392) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.transport.RemoteClusterAwareClient.doExecute(RemoteClusterAwareClient.java:50) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:403) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.license.RemoteClusterLicenseChecker.remoteClusterLicense(RemoteClusterLicenseChecker.java:209) ~[?:?]\r\n\tat org.elasticsearch.license.RemoteClusterLicenseChecker.checkRemoteClusterLicenses(RemoteClusterLicenseChecker.java:195) ~[?:?]\r\n\tat org.elasticsearch.xpack.ccr.CcrLicenseChecker.checkRemoteClusterLicenseAndFetchClusterState(CcrLicenseChecker.java:214) ~[?:?]\r\n\tat org.elasticsearch.xpack.ccr.CcrLicenseChecker.checkRemoteClusterLicenseAndFetchClusterState(CcrLicenseChecker.java:173) ~[?:?]\r\n\tat org.elasticsearch.xpack.ccr.action.AutoFollowCoordinator$2.getRemoteClusterState(AutoFollowCoordinator.java:225) ~[?:?]\r\n\tat org.elasticsearch.xpack.ccr.action.AutoFollowCoordinator$AutoFollower.start(AutoFollowCoordinator.java:389) ~[?:?]\r\n\tat org.elasticsearch.xpack.ccr.action.AutoFollowCoordinator$AutoFollower.finalise(AutoFollowCoordinator.java:583) ~[?:?]\r\n\tat org.elasticsearch.xpack.ccr.action.AutoFollowCoordinator$AutoFollower.lambda$start$1(AutoFollowCoordinator.java:416) ~[?:?]\r\n\tat org.elasticsearch.xpack.ccr.action.AutoFollowCoordinator$2.lambda$getRemoteClusterState$0(AutoFollowCoordinator.java:229) ~[?:?]\r\n\tat org.elasticsearch.xpack.ccr.CcrLicenseChecker$1.onFailure(CcrLicenseChecker.java:232) ~[?:?]\r\n\tat org.elasticsearch.license.RemoteClusterLicenseChecker$1.onFailure(RemoteClusterLicenseChecker.java:188) ~[?:?]\r\n\tat org.elasticsearch.action.support.ContextPreservingActionListener.onFailure(ContextPreservingActionListener.java:50) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.action.ActionListener$1.onFailure(ActionListener.java:69) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.action.support.ContextPreservingActionListener.onFailure(ContextPreservingActionListener.java:50) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.transport.RemoteClusterConnection$ConnectHandler.connect(RemoteClusterConnection.java:424) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.transport.RemoteClusterConnection$ConnectHandler.connect(RemoteClusterConnection.java:406) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.transport.RemoteClusterConnection.ensureConnected(RemoteClusterConnection.java:213) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.transport.RemoteClusterService.ensureConnected(RemoteClusterService.java:392) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.transport.RemoteClusterAwareClient.doExecute(RemoteClusterAwareClient.java:50) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:403) ~[elasticsearch-6.7.1.jar:6.7.1]\r\n\tat org.elasticsearch.license.RemoteClusterLicenseChecker.remoteClusterLicense(RemoteClusterLicenseChecker.java:209) ~[?:?]\r\n\tat org.elasticsearch.license.RemoteClusterLicenseChecker.checkRemoteClusterLicenses(RemoteClusterLicenseChecker.java:195) ~[?:?]\r\n\tat org.elasticsearch.xpack.ccr.CcrLicenseChecker.checkRemoteClusterLicenseAndFetchClusterState(CcrLicenseChecker.java:214) ~[?:?]\r\n\tat org.elasticsearch.xpack.ccr.CcrLicenseChecker.checkRemoteClusterLicenseAndFetchClusterState(CcrLicenseChecker.java:173) ~[?:?]\r\n\tat org.elasticsearch.xpack.ccr.action.AutoFollowCoordinator$2.getRemoteClusterState(AutoFollowCoordinator.java:225) ~[?:?]\r\n\tat org.elasticsearch.xpack.ccr.action.AutoFollowCoordinator$AutoFollower.start(AutoFollowCoordinator.java:389) ~[?:?]\r\n```\r\n\r\nWhile I can't get this to reproduce in an integration test, i can get the start-> finalize -> start to loop via a unit test by ensuring that cluster state does not change between the start -> finalize -> start loop. Since it is a unit test, and there is quite abit of test level manipulation (e.g. no real handlers are called), I am not fully confident this reproduction is a legitimate reproduction of the actual issue.   \r\n\r\nTo reproduce: change `org.elasticsearch.xpack.ccr.action.AutoFollowCoordinatorTests#testAutoFollowerClusterStateApiFailure` to use a cluster state applier that does not remove the AutoFollowMetadata from the cluster state. \r\n```\r\ndiff --git a/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinatorTests.java b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinatorTests.java\r\nindex 7648d10aa09..12853696a28 100644\r\n--- a/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinatorTests.java\r\n+++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinatorTests.java\r\n@@ -157,7 +157,7 @@ public class AutoFollowCoordinatorTests extends ESTestCase {\r\n             assertThat(results.get(0).clusterStateFetchException, sameInstance(failure));\r\n             assertThat(results.get(0).autoFollowExecutionResults.entrySet().size(), equalTo(0));\r\n         };\r\n-        AutoFollower autoFollower = new AutoFollower(\"remote\", handler, localClusterStateSupplier(clusterState), () -> 1L) {\r\n+        AutoFollower autoFollower = new AutoFollower(\"remote\", handler, () -> clusterState, () -> 1L) {\r\n             @Override\r\n             void getRemoteClusterState(String remoteCluster,\r\n                                        long metadataVersion,\r\n```\r\n\r\nI think I will need someone with knowledge of CCR internals to help take a look.\r\n\r\nFull stack here: https://gist.github.com/jakelandis/9ef72d6bff8a7e3d33922a9cde0c4063","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}