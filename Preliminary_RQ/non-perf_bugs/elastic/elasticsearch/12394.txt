{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/12394","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12394/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12394/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12394/events","html_url":"https://github.com/elastic/elasticsearch/issues/12394","id":96539450,"node_id":"MDU6SXNzdWU5NjUzOTQ1MA==","number":12394,"title":"String field mappings and fielddata / doc values settings","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"labels":[{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"assignees":[{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false}],"milestone":null,"comments":41,"created_at":"2015-07-22T11:14:18Z","updated_at":"2018-08-13T08:51:31Z","closed_at":"2016-03-30T12:42:37Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"This issue addresses a few topics:\n- separating `string` fields out into `text` and `keyword` fields (#11901)\n- deprecating in-memory fielddata for field-types that support doc-values (to remove in 3.x)\n- `fielddata` and `doc_values` settings (#8693) and `norms`\n- good out-of-the-box dynamic mappings for string fields\n## `string` â†’ `text`/ `keyword`\n\nToday, we use `string` both for full-text and for structured keywords.  We don't support doc-values on `analyzed` string fields, which means that strings which are essentially keywords (but eg need to be lowercased) cannot use doc-values.\n\n**Proposal:**\n- deprecate `string` fields\n- add `text` fields which support the full analysis chain and don't support doc-values\n- add `keywords` fields which support only the `keyword` tokenizer, and have doc-values enabled by default\n- change `index` to accept `true` | `false`\n\nQuestion:  Should `keyword` fields allow token filters that introduce new tokens? \n## Deprecating fielddata for fields that support doc values\n\nIn-memory fielddata is limited by the size of the heap, and has been one of the biggest pain-points for users. Doc-values are slightly slower but: (1) don't suffer from the same latency as fielddata, (2) are not limited by heap size, (3) don't impact garbage collection, (4) allow much greater scaling.\n\nAll fields that support doc values already have them enabled by default.  \n\nProposal:\n- Deprecate fielddata implementations (except for analyzed string fields) in 2.x \n- Remove them in 3.x.  \n\nThe question arises: what happens if the user disables doc values then decides that actually they DO want to aggregate on that field after all?  The answer is the same as if they have set a field to `index:false` - they have to reindex.\n## Fielddata and doc values settings \n\nToday we have these settings:\n- `doc_values`: `true`|`false`\n- `fielddata.format`: `disabled` | `doc_values` | `paged_bytes` | `array`\n- `fielddata.loading`: `lazy` | `eager` | `eager_global_ordinals`\n- `fielddata.filters`: `frequency:{}`, `regex:{}`\n\nThese become a lot easier to simplify if we deprecate fielddata for all but analyzed string fields. \n\n**Proposal for fields that support doc values:**\n- `doc_values` : `true` (default) | `false`\n- `global_ordinals` : `lazy` (default) | `eager`\n\n**Proposal for analyzed string fields:**\n- `fielddata`: `disabled` (default) | `lazy` | `eager`\n- `global_ordinals` : `lazy` (default) | `eager`\n- `fielddata.filters`: `frequency:{}`, `regex:{}`\n\nIf, in the future, we can automatically figure out which global ordinals need to be built eagerly, then we can remove the `global_ordinals` setting.\n## Norms settings\n\nSimilar to the above, we have:\n- `norms.enabled` : `true` | `false`\n- `norms.loading` : `lazy` | `eager`\n\nIn Lucene 5.3, norms are disk based, so the lazy/eager issue is less important (eager in this case would mean force-loading the norms into the file system cache, a decision which we can probably make automatically in the future).\n\n**Proposal:**\n- `norms`: `true` | `false`\n- only supported on `text` fields\n## Good out-of-the-box dynamic mappings for string fields\n\nToday, when we detect a new string field, we add it as an `analyzed` `string`, with `lazy` fielddata loading enabled.  While this allows users to get going with full text search, sorting and aggregations (with limitations, eg `new` + `york`), it's a poor default for heap usage.\n\n**Proposal:**\n\nAdd a `text` main field (with fielddata loading disabled) and a `keyword` multi-field by default, ie:\n\n```\n{\n  \"my_string\": {\n    \"type\": \"text\",\n    \"fields\": {\n      \"keyword\": {\n        \"type\": \"keyword\",\n        \"ignore_above\": 256\n      }\n    }\n  }\n}\n```\n\nWith the default settings these fields would look like this:\n\n```\n{\n  \"my_string\": {\n    \"type\":                \"text\",\n    \"analyzer\":            \"default\",\n    \"boost\":               1,\n    \"fielddata\":           \"disabled\",\n    \"fielddata_filters\":   {},\n    \"ignore_above\":        -1,\n    \"include_in_all\":      true,\n    \"index\":               true,\n    \"index_options\":       \"positions\",\n    \"norms\":               true,\n    \"null_value\":          null,\n    \"position_offset_gap\": 0,\n    \"search_analyzer\":     \"default\",\n    \"similarity\":          \"default\",\n    \"store\":               false,\n    \"term_vector\":         \"no\"\n  }\n}\n\n{\n  \"my_string.keyword\": {\n    \"type\":                \"keyword\",\n    \"analyzer\":            \"keyword\",\n    \"boost\":               1,\n    \"doc_values\":          true,\n    \"ignore_above\":        256,\n    \"include_in_all\":      true,\n    \"index\":               true,\n    \"index_options\":       \"docs\",\n    \"null_value\":          null,\n    \"position_offset_gap\": 0,\n    \"search_analyzer\":     \"keyword\",\n    \"similarity\":          \"default\",\n    \"store\":               false,\n    \"term_vector\":         \"no\"\n  }\n}\n```\n","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}