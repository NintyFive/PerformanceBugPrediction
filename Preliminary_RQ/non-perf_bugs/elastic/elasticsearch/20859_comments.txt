[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/252920846","html_url":"https://github.com/elastic/elasticsearch/issues/20859#issuecomment-252920846","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20859","id":252920846,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MjkyMDg0Ng==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-10-11T13:45:25Z","updated_at":"2016-10-11T13:45:25Z","author_association":"CONTRIBUTOR","body":"> Yet, what is still somewhat unclear to me is if it should be indexed, stored and / or have docvalues.\n\nTo expand this for those not super familiar with all the terms and their implications:\n\nIf the field is not indexed then you can't search for it using `range` or `match` or something like that. You'd still be able to search for it using a `script` query if it has docvalues but that'd be super slow unless paired with a super selective query.\n\nIf the field has doc values then you can aggregate on it or use it in a script query or a function_score query or a script field as `doc['_last_modified']`. You _could_ also get it back in the response as well if we implemented that.\n\nIf the field is stored then you can get it back in the response. If the field doesn't have docvalues and isn't stored then you can't ever get it back in the response which is a bit silly for this kind of field. If the field already has doc values then whether or not to also store it is a disk seeks vs storage efficiency tradeoff.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/252962327","html_url":"https://github.com/elastic/elasticsearch/issues/20859#issuecomment-252962327","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20859","id":252962327,"node_id":"MDEyOklzc3VlQ29tbWVudDI1Mjk2MjMyNw==","user":{"login":"ejsmith","id":282584,"node_id":"MDQ6VXNlcjI4MjU4NA==","avatar_url":"https://avatars1.githubusercontent.com/u/282584?v=4","gravatar_id":"","url":"https://api.github.com/users/ejsmith","html_url":"https://github.com/ejsmith","followers_url":"https://api.github.com/users/ejsmith/followers","following_url":"https://api.github.com/users/ejsmith/following{/other_user}","gists_url":"https://api.github.com/users/ejsmith/gists{/gist_id}","starred_url":"https://api.github.com/users/ejsmith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejsmith/subscriptions","organizations_url":"https://api.github.com/users/ejsmith/orgs","repos_url":"https://api.github.com/users/ejsmith/repos","events_url":"https://api.github.com/users/ejsmith/events{/privacy}","received_events_url":"https://api.github.com/users/ejsmith/received_events","type":"User","site_admin":false},"created_at":"2016-10-11T16:02:34Z","updated_at":"2016-10-11T16:17:23Z","author_association":"NONE","body":"The primary use case is for doing things like online reindex and bulk operations. It's unrealistic for us to take our cluster offline while we do a 100gb reindex. So we do this:\n- Alias that the app uses to read and write data\n- Reindex in the background to a new index\n- 2nd pass of reindex where the timestamp is greater than the date that we started the initial reindex. This gets us pretty close to being real-time\n- Swap the alias from the old index to the new one\n- Do one more reindex pass for any documents that may have been modified in the time it took us to swap aliases and do the 2nd pass reindex\n\nSo you can see that the timestamp field is really important to this strategy. Also, we use it for other bulk operations as well.\n\nTo me _timestamp is the correct name for this feature. \"_last_modified\" sounds like it's only set when the document is modified, but it should be set when new documents are written as well. I think the core issue with the current _timestamp is that you let it be mapped to the document and modified. I understand that you don't want to break existing people, but you are already breaking them by removing the _timestamp feature.  So couldn't we just modify that feature instead to do the right thing?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/253019856","html_url":"https://github.com/elastic/elasticsearch/issues/20859#issuecomment-253019856","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20859","id":253019856,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MzAxOTg1Ng==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-10-11T19:30:05Z","updated_at":"2016-10-11T19:30:05Z","author_association":"CONTRIBUTOR","body":"@ejsmith IMO what you want is something completely different. you want something like a sequence ID that you can resume from to get changes for the reindex. I am really trying to help you with your requirements but for these problems you don't need a timestamp field I guess all you need is some kind of \"generation\" field that you can just add as an ordinary numeric field that you increment on the client after you started reindexing. Bare with me I am trying to understand your use-case. \nAs a side-note I wonder how you realize that stuff gets deleted?\n\n> To me _timestamp is the correct name for this feature. \"_last_modified\" sounds like it's only set when the document is modified, but it should be set when new documents are written as well. \n\n`_timestamp` is 90% of the time user provided (ES does NOT produce it and its NOT consistent about it) that is why we removed support for it since most of the users provide it from the outside. It's the time the event occurred not when it was indexed or anything like that. We can not just go an change semantics, for something that has been around forever that would be dramatic I think since it would create even more confusion.\n\nthis issue about `_last_modified` is to create a consistent timestamp that is set every time a document is created or updated. users can NOT provide this from the outside (major difference including guarantees).  \n\n>  So couldn't we just modify that feature instead to do the right thing?\n\nI think you don't understand the impact of this. There is no right thing here, `_timestamp` was used for so many things that changing it's behavior is basically asking for trouble. If you remove something like this and you are maintaining such a codebase you want your users to notice if they still use it. IF you are relying on people reading migration guides you are doomed. We have no other choice than deprecating and removing. I don't necessarily understand why you are so resistent here we are basically putting large effort in helping your usecase why are you keeping on pushing along those lines?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/253022406","html_url":"https://github.com/elastic/elasticsearch/issues/20859#issuecomment-253022406","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20859","id":253022406,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MzAyMjQwNg==","user":{"login":"ejsmith","id":282584,"node_id":"MDQ6VXNlcjI4MjU4NA==","avatar_url":"https://avatars1.githubusercontent.com/u/282584?v=4","gravatar_id":"","url":"https://api.github.com/users/ejsmith","html_url":"https://github.com/ejsmith","followers_url":"https://api.github.com/users/ejsmith/followers","following_url":"https://api.github.com/users/ejsmith/following{/other_user}","gists_url":"https://api.github.com/users/ejsmith/gists{/gist_id}","starred_url":"https://api.github.com/users/ejsmith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejsmith/subscriptions","organizations_url":"https://api.github.com/users/ejsmith/orgs","repos_url":"https://api.github.com/users/ejsmith/repos","events_url":"https://api.github.com/users/ejsmith/events{/privacy}","received_events_url":"https://api.github.com/users/ejsmith/received_events","type":"User","site_admin":false},"created_at":"2016-10-11T19:40:34Z","updated_at":"2016-10-11T19:40:34Z","author_association":"NONE","body":"I think you are assuming that my documents are immutable. They are not, they can be modified. As far as deletes go, I use soft deletes and then have a job that goes and really deletes them later. So I do not run that job while doing a reindex.\n\nThey would notice that you changed it just the same way that they would notice that you removed the feature. If you make it readonly and unmappable their app would break since the mapping isn't allowed any more. So it's a breaking change that they would have to accommodate either way. I really don't care that much what the name is, but that is the same name used in just about every other db.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/253027721","html_url":"https://github.com/elastic/elasticsearch/issues/20859#issuecomment-253027721","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20859","id":253027721,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MzAyNzcyMQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-10-11T19:58:55Z","updated_at":"2016-10-11T19:58:55Z","author_association":"CONTRIBUTOR","body":"Personally I think `_last_modified` is a much more clear name than `_timestamp`. When I see `_timestamp` I always think \"timestamp of what\".\n\n> that is the same name used in just about every other db\n\nI believe MySQL's timestamp defaults to `now()` and automatically updates to now every time you touch the row. I admit I don't remember it too well. I'm fairly sure that PostgreSQL, Oracle, MongoDB don't default timestamps to `now()`. You can get them to default to now or do the update on touch thing with some configuration I think. I'm sure there are others systems, but I don't think it is worth picking a worse name to align MySQL and other systems that behave like it.\n\nAlso I think in cases where we don't do _exactly_ the same thing it is a mistake to use some other system's feature as a namesake. I'm fairly sure we don't want to commit to aligning with MySQL's timestamp functionality though I admit I don't know the extent of it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/253030682","html_url":"https://github.com/elastic/elasticsearch/issues/20859#issuecomment-253030682","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20859","id":253030682,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MzAzMDY4Mg==","user":{"login":"ejsmith","id":282584,"node_id":"MDQ6VXNlcjI4MjU4NA==","avatar_url":"https://avatars1.githubusercontent.com/u/282584?v=4","gravatar_id":"","url":"https://api.github.com/users/ejsmith","html_url":"https://github.com/ejsmith","followers_url":"https://api.github.com/users/ejsmith/followers","following_url":"https://api.github.com/users/ejsmith/following{/other_user}","gists_url":"https://api.github.com/users/ejsmith/gists{/gist_id}","starred_url":"https://api.github.com/users/ejsmith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejsmith/subscriptions","organizations_url":"https://api.github.com/users/ejsmith/orgs","repos_url":"https://api.github.com/users/ejsmith/repos","events_url":"https://api.github.com/users/ejsmith/events{/privacy}","received_events_url":"https://api.github.com/users/ejsmith/received_events","type":"User","site_admin":false},"created_at":"2016-10-11T20:09:12Z","updated_at":"2016-10-11T20:09:12Z","author_association":"NONE","body":"I don't care about the name too much. :-) I just want a reliable way of retrieving documents that have been modified after a date.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/253033184","html_url":"https://github.com/elastic/elasticsearch/issues/20859#issuecomment-253033184","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20859","id":253033184,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MzAzMzE4NA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-10-11T20:18:56Z","updated_at":"2016-10-11T20:18:56Z","author_association":"CONTRIBUTOR","body":"> I just want a reliable way of retrieving documents that have been modified after a date.\n\nFair enough. I think its pretty clear that we should index `_last_modified`. It is useful for slicing things up like you said and for limiting search results.\n\nMy instinct is that it should also have docvalues so it is sortable but that is just an instinct.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/253129481","html_url":"https://github.com/elastic/elasticsearch/issues/20859#issuecomment-253129481","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20859","id":253129481,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MzEyOTQ4MQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-10-12T06:22:23Z","updated_at":"2016-10-12T06:22:23Z","author_association":"CONTRIBUTOR","body":"> I really don't care that much what the name is, but that is the same name used in just about every other db.\n\n![a friendly reminder, es is not a database](https://github.com/s1monw/hammertime/raw/master/es_is_not_a_database.gif)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/253151413","html_url":"https://github.com/elastic/elasticsearch/issues/20859#issuecomment-253151413","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20859","id":253151413,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MzE1MTQxMw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-10-12T08:30:10Z","updated_at":"2016-10-12T08:30:10Z","author_association":"CONTRIBUTOR","body":"> If you make it readonly and unmappable their app would break since the mapping isn't allowed any more.\n\nThis doesn't make sense.  You're using soft deletes, so you modify the document to set `deleted: true` which means that the `_last_modified` date is updated.  All works exactly as you need.\n\nAs far as naming goes,  `_timestamp` is the wrong name.  It could mean:\n- when was the document created\n- when was the document modified\n- when was the original event that resulted in document creation\n- when has a particular type of event occurred \n\nOn the other hand, `_last_modified` is very explicit about its meaning.  Of course document creation counts as a modification.  Why wouldn't it? \n\n(Also note that your use of soft deletes puts you into a tiny minority of users, yet you want this badly named `_timestamp` field to work in exactly the way you want for your use case.  Other users have the same expectation)\n\nSimon is right in saying that the feature that you actually need for this style of reindexing is sequence IDs, which is a feature that we're working on but which won't land in 5.x.  A `_last_modified` field is a reasonable (but not great) proxy for that feature.  However I think adding a `_last_modified` field will be useful even once we have sequence IDs, so I'm +1 on doing it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/253206888","html_url":"https://github.com/elastic/elasticsearch/issues/20859#issuecomment-253206888","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20859","id":253206888,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MzIwNjg4OA==","user":{"login":"ejsmith","id":282584,"node_id":"MDQ6VXNlcjI4MjU4NA==","avatar_url":"https://avatars1.githubusercontent.com/u/282584?v=4","gravatar_id":"","url":"https://api.github.com/users/ejsmith","html_url":"https://github.com/ejsmith","followers_url":"https://api.github.com/users/ejsmith/followers","following_url":"https://api.github.com/users/ejsmith/following{/other_user}","gists_url":"https://api.github.com/users/ejsmith/gists{/gist_id}","starred_url":"https://api.github.com/users/ejsmith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejsmith/subscriptions","organizations_url":"https://api.github.com/users/ejsmith/orgs","repos_url":"https://api.github.com/users/ejsmith/repos","events_url":"https://api.github.com/users/ejsmith/events{/privacy}","received_events_url":"https://api.github.com/users/ejsmith/received_events","type":"User","site_admin":false},"created_at":"2016-10-12T13:01:52Z","updated_at":"2016-10-12T13:01:52Z","author_association":"NONE","body":"Like I said, I am fine with the name. I'm not interested in adding anything that is specific to my use case. I stated my problem and I think it's a pretty common thing to want to do online reindexing.\n\nI'm not sure what you guys mean by sequence id. Is that the ability to resume scan and scroll or something?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/253209742","html_url":"https://github.com/elastic/elasticsearch/issues/20859#issuecomment-253209742","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20859","id":253209742,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MzIwOTc0Mg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-10-12T13:14:20Z","updated_at":"2016-10-12T13:14:20Z","author_association":"CONTRIBUTOR","body":"> I'm not sure what you guys mean by sequence id. Is that the ability to resume scan and scroll or something?\n\nEvery operation is assigned a sequence ID so that you can replay operations from a certain point onwards.  See  https://github.com/elastic/elasticsearch/issues/10708\n\nIt will enable us to implement a changes API (https://github.com/elastic/elasticsearch/issues/1242)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/253210591","html_url":"https://github.com/elastic/elasticsearch/issues/20859#issuecomment-253210591","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20859","id":253210591,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MzIxMDU5MQ==","user":{"login":"ejsmith","id":282584,"node_id":"MDQ6VXNlcjI4MjU4NA==","avatar_url":"https://avatars1.githubusercontent.com/u/282584?v=4","gravatar_id":"","url":"https://api.github.com/users/ejsmith","html_url":"https://github.com/ejsmith","followers_url":"https://api.github.com/users/ejsmith/followers","following_url":"https://api.github.com/users/ejsmith/following{/other_user}","gists_url":"https://api.github.com/users/ejsmith/gists{/gist_id}","starred_url":"https://api.github.com/users/ejsmith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejsmith/subscriptions","organizations_url":"https://api.github.com/users/ejsmith/orgs","repos_url":"https://api.github.com/users/ejsmith/repos","events_url":"https://api.github.com/users/ejsmith/events{/privacy}","received_events_url":"https://api.github.com/users/ejsmith/received_events","type":"User","site_admin":false},"created_at":"2016-10-12T13:17:58Z","updated_at":"2016-10-12T13:17:58Z","author_association":"NONE","body":"Yes, that would be awesome.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/372886990","html_url":"https://github.com/elastic/elasticsearch/issues/20859#issuecomment-372886990","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20859","id":372886990,"node_id":"MDEyOklzc3VlQ29tbWVudDM3Mjg4Njk5MA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-03-14T02:48:01Z","updated_at":"2018-03-14T02:48:01Z","author_association":"MEMBER","body":"It seems that sequence IDs and the changes API would solve the use cases proposed here indeed. I am closing this issue pending additional use cases that would compel us to consider adding a `_last_modified` field.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/373357624","html_url":"https://github.com/elastic/elasticsearch/issues/20859#issuecomment-373357624","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20859","id":373357624,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MzM1NzYyNA==","user":{"login":"niemyjski","id":1020579,"node_id":"MDQ6VXNlcjEwMjA1Nzk=","avatar_url":"https://avatars3.githubusercontent.com/u/1020579?v=4","gravatar_id":"","url":"https://api.github.com/users/niemyjski","html_url":"https://github.com/niemyjski","followers_url":"https://api.github.com/users/niemyjski/followers","following_url":"https://api.github.com/users/niemyjski/following{/other_user}","gists_url":"https://api.github.com/users/niemyjski/gists{/gist_id}","starred_url":"https://api.github.com/users/niemyjski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niemyjski/subscriptions","organizations_url":"https://api.github.com/users/niemyjski/orgs","repos_url":"https://api.github.com/users/niemyjski/repos","events_url":"https://api.github.com/users/niemyjski/events{/privacy}","received_events_url":"https://api.github.com/users/niemyjski/received_events","type":"User","site_admin":false},"created_at":"2018-03-15T12:21:23Z","updated_at":"2018-03-15T12:21:23Z","author_association":"CONTRIBUTOR","body":"@jasontedor Do you have an example of how one would query by change changes api to see all changes since x time?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/373472367","html_url":"https://github.com/elastic/elasticsearch/issues/20859#issuecomment-373472367","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20859","id":373472367,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MzQ3MjM2Nw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-03-15T18:10:25Z","updated_at":"2018-03-15T18:10:25Z","author_association":"MEMBER","body":"@niemyjski The changes API is not available today (#1242). You would not query for changes since a given time, but rather all changes above a certain sequence number.","performed_via_github_app":null}]