{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/49581","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49581/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49581/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49581/events","html_url":"https://github.com/elastic/elasticsearch/issues/49581","id":528619464,"node_id":"MDU6SXNzdWU1Mjg2MTk0NjQ=","number":49581,"title":"Supporting EQL in Elasticsearch","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"labels":[{"id":1690690117,"node_id":"MDU6TGFiZWwxNjkwNjkwMTE3","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Query%20Languages/EQL","name":":Query Languages/EQL","color":"0e8a16","default":false,"description":"EQL querying"},{"id":1714829748,"node_id":"MDU6TGFiZWwxNzE0ODI5NzQ4","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Dependency:SIEM","name":"Dependency:SIEM","color":"efe039","default":false,"description":""},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null},{"id":1967501040,"node_id":"MDU6TGFiZWwxOTY3NTAxMDQw","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:QL","name":"Team:QL","color":"fef2c0","default":false,"description":"Meta label for query languages team"}],"state":"closed","locked":false,"assignee":{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false},"assignees":[{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false},{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},{"login":"astefan","id":893749,"node_id":"MDQ6VXNlcjg5Mzc0OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/893749?v=4","gravatar_id":"","url":"https://api.github.com/users/astefan","html_url":"https://github.com/astefan","followers_url":"https://api.github.com/users/astefan/followers","following_url":"https://api.github.com/users/astefan/following{/other_user}","gists_url":"https://api.github.com/users/astefan/gists{/gist_id}","starred_url":"https://api.github.com/users/astefan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/astefan/subscriptions","organizations_url":"https://api.github.com/users/astefan/orgs","repos_url":"https://api.github.com/users/astefan/repos","events_url":"https://api.github.com/users/astefan/events{/privacy}","received_events_url":"https://api.github.com/users/astefan/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2019-11-26T10:10:29Z","updated_at":"2020-10-28T11:19:49Z","closed_at":"2020-10-28T11:19:48Z","author_association":"MEMBER","active_lock_reason":null,"body":"This is a meta issue to track progress of adding EQL support to Elasticsearch. EQL will be supported via a new Elastic licensed plugin which will provide execution of EQL rules.\r\n\r\nThe language reference for EQL can be found [here](https://eql.readthedocs.io/en/latest/query-guide/index.html)\r\n\r\n# Scope of first iteration\r\n\r\n## Language features\r\n\r\n### In Scope\r\n* Sequences\r\n* Joins (Note this is specifically EQL joins which are most like a merge join)\r\n* Pipes\r\n* Most functions (see https://github.com/elastic/elasticsearch/issues/51556)\r\n\r\n### Out of Scope\r\n* Lineage, i.e.:\r\n    * Descendant of\r\n    * Child of\r\n    * Event of\r\n* Array functions\r\n    * arrayContains\r\n    * arraySearch\r\n    * arrayCount\r\n* `fork` in sequences\r\n\r\n# Things to consider during the design and implementation\r\n* EQL is a language thatâ€™s already used in the wild. Any changes we make to the language or the way EQL rules are written will have implications on the existing users and migration of users to future versions so these should be very carefully considered\r\n* A separate implementation of EQL will still exist that queries the endpoint devices directly. This means that we should avoid differences between writing EQL for Elasticsearch and EQL to run on the endpoints as any differences would have the potential to confuse users\r\n* We see EQL being useful in many use cases. The Elasticsearch implementation need to be able to be used on generic data not just Endpoint data. EQL should default to expecting data in ECS format, but should have the ability to be overridden so it can be used on other schemas as well\r\n\r\n# High level tasks\r\nEach task here has its own issue and some bigger tasks might have their own meta issue:\r\n* [x] Create EQL plugin https://github.com/elastic/elasticsearch/issues/49583\r\n* [x] Extract reusable components from SQL into common project https://github.com/elastic/elasticsearch/issues/49773\r\n* [x] Synchronous EQL REST API for ad-hoc querying https://github.com/elastic/elasticsearch/issues/49634\r\n* [x] Build query parser and plan on reusable SQL components https://github.com/elastic/elasticsearch/issues/49997\r\n* [x] EQL transpiler for stateless EQL expressions to ES Search DSL https://github.com/elastic/elasticsearch/issues/49589\r\n* [x] **MILESTONE 1: Ability to run stateless EQL queries from a synchronous request/response API**\r\n    * This means running queries of the form `event_type where CRITERIA` where `CRITERIA` can use `field_name=value`, together with and/or/not\r\n   * The REST API will be a synchronous request/response so the client will have to wait on the connection for the response\r\n* [x] Response format enhancements https://github.com/elastic/elasticsearch/issues/52845\r\n* [x] Support existing EQL functions https://github.com/elastic/elasticsearch/issues/51556\r\n* [x] Map EQL sequence parts to ES requests https://github.com/elastic/elasticsearch/issues/49590\r\n* [ ] Sequence and join execution https://github.com/elastic/elasticsearch/issues/49594\r\n* [ ] Implement pipes logic in the plugin (not using aggregations) https://github.com/elastic/elasticsearch/issues/49627\r\n* [x] Add support for EQL functions #51556\r\n* [x] High Level REST client support for EQL API https://github.com/elastic/elasticsearch/issues/51961\r\n* [x] Cancelling a task's grandchildren when the task is cancelled #50990\r\n* [x] Convert EQL REST API to be async (similar to async search) https://github.com/elastic/elasticsearch/issues/49638\r\n* [x] Create documentation for using EQL #51057\r\n* [ ] **MILESTONE 2: Supports all in scope EQL language features for first release in an asynchronous API**\r\n    * This means the plugin will functionally support all the elements int he \"Language Features\" section above\"\r\n   * The API will be asynchronous so a client can send a request and have a task ID returned, then check back for progress and final results later\r\n   * Although functionally complete there are still items below we would want to implement before the first release is GA ready\r\n* [x] Develop Point-in-time reader @jimczi https://github.com/elastic/elasticsearch/issues/46523\r\n* [x] Modify EQL execution to use point in time reader https://github.com/elastic/elasticsearch/issues/49628\r\n* [ ] Push down pipes to aggregations where possible https://github.com/elastic/elasticsearch/issues/49629\r\n* [x] Telemetry for EQL usage https://github.com/elastic/elasticsearch/issues/49630\r\n* [x] Improvements to search_after performance https://github.com/elastic/elasticsearch/issues/37043\r\n* [x] Improve wildcard search performance https://github.com/elastic/elasticsearch/issues/48852\r\n* [x] Escape non-alphanumeric fields for EQL #51443\r\n* [ ] **MILESTONE 3: Ready for first release**\r\n* [x] Remove feature flags and prepare for release https://github.com/elastic/elasticsearch/issues/51613","closed_by":{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false},"performed_via_github_app":null}