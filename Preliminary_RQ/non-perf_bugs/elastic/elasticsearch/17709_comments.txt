[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/210387707","html_url":"https://github.com/elastic/elasticsearch/issues/17709#issuecomment-210387707","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17709","id":210387707,"node_id":"MDEyOklzc3VlQ29tbWVudDIxMDM4NzcwNw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-04-15T09:41:27Z","updated_at":"2016-04-15T09:41:27Z","author_association":"CONTRIBUTOR","body":"@rmuir Do you have any opinions?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/210564481","html_url":"https://github.com/elastic/elasticsearch/issues/17709#issuecomment-210564481","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17709","id":210564481,"node_id":"MDEyOklzc3VlQ29tbWVudDIxMDU2NDQ4MQ==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2016-04-15T17:54:27Z","updated_at":"2016-04-15T17:54:27Z","author_association":"CONTRIBUTOR","body":"Well i'd start with the use case. What kind of collection processing is being done in scripts that requires e.g. streams api? This does not sound efficient whatsoever to be doing per-document.\n\nIn general creating/processing collections per-doc just seems very trappy to me.  I think things should be organized so this is not necessary: hell, I think even arrays are trappy, e.g. why even whitelist Arrays.sort?\n\nSeparately, if the decision is made to just allow more horribly trappy performance here, fine, but be careful. Some of these APIs (like parallelStreams) try to create/interact with threads and stuff. That is never ok :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/210596797","html_url":"https://github.com/elastic/elasticsearch/issues/17709#issuecomment-210596797","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17709","id":210596797,"node_id":"MDEyOklzc3VlQ29tbWVudDIxMDU5Njc5Nw==","user":{"login":"bsideup","id":1050762,"node_id":"MDQ6VXNlcjEwNTA3NjI=","avatar_url":"https://avatars3.githubusercontent.com/u/1050762?v=4","gravatar_id":"","url":"https://api.github.com/users/bsideup","html_url":"https://github.com/bsideup","followers_url":"https://api.github.com/users/bsideup/followers","following_url":"https://api.github.com/users/bsideup/following{/other_user}","gists_url":"https://api.github.com/users/bsideup/gists{/gist_id}","starred_url":"https://api.github.com/users/bsideup/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bsideup/subscriptions","organizations_url":"https://api.github.com/users/bsideup/orgs","repos_url":"https://api.github.com/users/bsideup/repos","events_url":"https://api.github.com/users/bsideup/events{/privacy}","received_events_url":"https://api.github.com/users/bsideup/received_events","type":"User","site_admin":false},"created_at":"2016-04-15T18:58:19Z","updated_at":"2016-04-15T18:58:19Z","author_association":"NONE","body":"Hey @rmuir,\n\nGenerally: our use case - replace **existing**, **non-efficient** Groovy collection-based methods with Streams. That said, **existing** ones :)\n\nOf course we know about performance and memory impact of such operations. But there are some rare cases where we really need to do scripted aggregations.\n\nAlso, we're not processing collections per-doc, we process them in combine and reduce scripts ( https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-scripted-metric-aggregation.html ). \n\nEven example from that page might be replaced:\n`IntStream.of(_aggs).sum()`\ninstead of\n`profit = 0; for (a in _aggs) { profit += a }; return profit`\n\nin fact, for some heavy computations, even parallelStream will make sense, and actually will be faster than sequential processing. Of couse we will not use it everywhere, but parallelStream **was** designed to handle parallel computation of non-IO stuff. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/210614884","html_url":"https://github.com/elastic/elasticsearch/issues/17709#issuecomment-210614884","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17709","id":210614884,"node_id":"MDEyOklzc3VlQ29tbWVudDIxMDYxNDg4NA==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2016-04-15T19:47:35Z","updated_at":"2016-04-15T19:47:35Z","author_association":"CONTRIBUTOR","body":"parallelstream is not an option for scripts. that is why i said it is never ok. you can whitelist it all you want: it will fail.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/212992923","html_url":"https://github.com/elastic/elasticsearch/issues/17709#issuecomment-212992923","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17709","id":212992923,"node_id":"MDEyOklzc3VlQ29tbWVudDIxMjk5MjkyMw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2016-04-21T16:19:33Z","updated_at":"2016-04-21T16:19:33Z","author_association":"MEMBER","body":"There's no difference between your two sums examples other than the brevity of the code but they have the same effect.\n\nRegarding the parallel streams, I think what is missing from this conversation is that to execute in parallel, threads are needed. Those threads have to come from a fork-join pool. We aren't going to provide one, so they will come from the common fork-join pool but we aren't going to allow that either. This is what @rmuir was getting at.\n","performed_via_github_app":null}]