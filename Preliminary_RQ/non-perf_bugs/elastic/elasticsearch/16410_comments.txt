[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/183766941","html_url":"https://github.com/elastic/elasticsearch/issues/16410#issuecomment-183766941","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16410","id":183766941,"node_id":"MDEyOklzc3VlQ29tbWVudDE4Mzc2Njk0MQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-02-13T22:42:13Z","updated_at":"2016-02-13T22:42:13Z","author_association":"CONTRIBUTOR","body":"Hi @aloneldi \n\nWe already use TimeLimitingCollector, see https://github.com/elastic/elasticsearch/blob/master/core/src/main/java/org/elasticsearch/search/query/QueryPhase.java#L374\n\nI think you're looking for the `timeout` parameter.\n\nPlease ask questions like these in the forum instead: https://discuss.elastic.co/\n\nThe github issues list is reserved for bug reports and feature requests only.\n\nthanks\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/183889526","html_url":"https://github.com/elastic/elasticsearch/issues/16410#issuecomment-183889526","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16410","id":183889526,"node_id":"MDEyOklzc3VlQ29tbWVudDE4Mzg4OTUyNg==","user":{"login":"aloneldi","id":13673547,"node_id":"MDQ6VXNlcjEzNjczNTQ3","avatar_url":"https://avatars2.githubusercontent.com/u/13673547?v=4","gravatar_id":"","url":"https://api.github.com/users/aloneldi","html_url":"https://github.com/aloneldi","followers_url":"https://api.github.com/users/aloneldi/followers","following_url":"https://api.github.com/users/aloneldi/following{/other_user}","gists_url":"https://api.github.com/users/aloneldi/gists{/gist_id}","starred_url":"https://api.github.com/users/aloneldi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aloneldi/subscriptions","organizations_url":"https://api.github.com/users/aloneldi/orgs","repos_url":"https://api.github.com/users/aloneldi/repos","events_url":"https://api.github.com/users/aloneldi/events{/privacy}","received_events_url":"https://api.github.com/users/aloneldi/received_events","type":"User","site_admin":false},"created_at":"2016-02-14T13:33:10Z","updated_at":"2016-02-14T13:33:10Z","author_association":"NONE","body":"Hi Clinton ,\n\nNo it's not timeout parameter .\nTimeout parameter only timeout the client request in the server side the request is keep running .\nI'm looking for equivalent SOLR time-allowed parameter which can be configured in server side and return partial result incase the query exceeded its limit .\n\nAlon\nנשלח מה-iPhone שלי\n\n‫ב-14 בפבר׳ 2016, בשעה 00:43, ‏‏Clinton Gormley ‏notifications@github.com כתב/ה:‬\n\n> Hi @aloneldi\n> \n> We already use TimeLimitingCollector, see https://github.com/elastic/elasticsearch/blob/master/core/src/main/java/org/elasticsearch/search/query/QueryPhase.java#L374\n> \n> I think you're looking for the timeout parameter.\n> \n> Please ask questions like these in the forum instead: https://discuss.elastic.co/\n> \n> The github issues list is reserved for bug reports and feature requests only.\n> \n> thanks\n> \n> —\n> Reply to this email directly or view it on GitHub.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/183903262","html_url":"https://github.com/elastic/elasticsearch/issues/16410#issuecomment-183903262","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16410","id":183903262,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzkwMzI2Mg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-02-14T14:59:54Z","updated_at":"2016-02-14T14:59:54Z","author_association":"CONTRIBUTOR","body":"> No it's not timeout parameter .\n\nYes it is. See the docs: https://www.elastic.co/guide/en/elasticsearch/reference/2.2/search-request-body.html\n\n> `timeout`\n> A search timeout, bounding the search request to be executed within the specified time value and bail with the hits accumulated up to that point when expired. Defaults to no timeout. \n> \n> Timeout parameter only timeout the client request in the server side the request is keep running .\n\nNo, depends on the client but they usually implement this timeout as the `request_timeout`.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/184176268","html_url":"https://github.com/elastic/elasticsearch/issues/16410#issuecomment-184176268","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16410","id":184176268,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NDE3NjI2OA==","user":{"login":"aloneldi","id":13673547,"node_id":"MDQ6VXNlcjEzNjczNTQ3","avatar_url":"https://avatars2.githubusercontent.com/u/13673547?v=4","gravatar_id":"","url":"https://api.github.com/users/aloneldi","html_url":"https://github.com/aloneldi","followers_url":"https://api.github.com/users/aloneldi/followers","following_url":"https://api.github.com/users/aloneldi/following{/other_user}","gists_url":"https://api.github.com/users/aloneldi/gists{/gist_id}","starred_url":"https://api.github.com/users/aloneldi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aloneldi/subscriptions","organizations_url":"https://api.github.com/users/aloneldi/orgs","repos_url":"https://api.github.com/users/aloneldi/repos","events_url":"https://api.github.com/users/aloneldi/events{/privacy}","received_events_url":"https://api.github.com/users/aloneldi/received_events","type":"User","site_admin":false},"created_at":"2016-02-15T11:35:52Z","updated_at":"2016-02-15T11:35:52Z","author_association":"NONE","body":"Hi Clinton .\n\nI mean the timeAllowed Paremeter in SOLR is not timeout parameter in \nElastic .\n\nin SOLR there is timeout which terminate the session in the client side \nbut keep running the request in the server side .\n\nTimeAllowed in SOLR in the other hand can be configured in the server \nside to protect the server incase user run a wild query and also in the \nclient side incase you want to extend it for specific .\n\nTimeAllowed in SOLR also terminate the search operation in the server side .\n\nI'm looking for the same protection type in Elastic . In the Server side \nand that the query will be terminated in case it exceed a specific \nthreshold\n\nhttps://wiki.apache.org/solr/CommonQueryParameters#timeAllowed\n\nThanks\n\nAlon\n\nOn 14/02/2016 5:00 PM, Clinton Gormley wrote:\n\n> ```\n> No it's not timeout parameter .\n> ```\n> \n> Yes it is. See the docs: \n> https://www.elastic.co/guide/en/elasticsearch/reference/2.2/search-request-body.html\n> \n> ```\n> |timeout|\n> A search timeout, bounding the search request to be executed\n> within the specified time value and bail with the hits accumulated\n> up to that point when expired. Defaults to no timeout.\n> \n> Timeout parameter only timeout the client request in the server\n> side the request is keep running .\n> ```\n> \n> No, depends on the client but they usually implement this timeout as \n> the |request_timeout|.\n> \n> —\n> Reply to this email directly or view it on GitHub \n> https://github.com/elastic/elasticsearch/issues/16410#issuecomment-183903262.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/184182186","html_url":"https://github.com/elastic/elasticsearch/issues/16410#issuecomment-184182186","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16410","id":184182186,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NDE4MjE4Ng==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-02-15T12:07:48Z","updated_at":"2016-02-15T12:07:48Z","author_association":"CONTRIBUTOR","body":"> in SOLR there is timeout which terminate the session in the client side\n> but keep running the request in the server side .\n\nThis depends on the client and is usually called `request_timeout`.\n\n> TimeAllowed in SOLR in the other hand can be configured in the server\n> side to protect the server incase user run a wild query and also in the\n> client side incase you want to extend it for specific .\n> \n> TimeAllowed in SOLR also terminate the search operation in the server side .\n\nThis can be set per request with the `timeout` parameter or globally on the server with the `search.default_search_timeout` setting.\n\nSee https://www.elastic.co/guide/en/elasticsearch/reference/2.2/search.html#global-search-timeout\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/184195513","html_url":"https://github.com/elastic/elasticsearch/issues/16410#issuecomment-184195513","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16410","id":184195513,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NDE5NTUxMw==","user":{"login":"aloneldi","id":13673547,"node_id":"MDQ6VXNlcjEzNjczNTQ3","avatar_url":"https://avatars2.githubusercontent.com/u/13673547?v=4","gravatar_id":"","url":"https://api.github.com/users/aloneldi","html_url":"https://github.com/aloneldi","followers_url":"https://api.github.com/users/aloneldi/followers","following_url":"https://api.github.com/users/aloneldi/following{/other_user}","gists_url":"https://api.github.com/users/aloneldi/gists{/gist_id}","starred_url":"https://api.github.com/users/aloneldi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aloneldi/subscriptions","organizations_url":"https://api.github.com/users/aloneldi/orgs","repos_url":"https://api.github.com/users/aloneldi/repos","events_url":"https://api.github.com/users/aloneldi/events{/privacy}","received_events_url":"https://api.github.com/users/aloneldi/received_events","type":"User","site_admin":false},"created_at":"2016-02-15T12:56:11Z","updated_at":"2016-02-15T12:56:11Z","author_association":"NONE","body":"Thanks Clinton .\n\nDoes it mean that using this parameter with value 30 (seconds) will \nterminate the query in the server side in case it exceed 30 seconds as \nwell ?\n\nBecause its not clear in the docs nor in Forums .\n\nhttps://www.elastic.co/guide/en/elasticsearch/guide/current/empty-search.html\n\n\"\n\nIt should be noted that this|timeout|does nothalt the execution of the \nquery; it merely tells the coordinating node to return the results \ncollected/so far/and to close the connection. In the background, other \nshards may still be processing the query even though results have been sent.\n\nUse the time-out because it is important to your SLA, not because you \nwant to abort the execution of long-running queries.\"\n\nOn 15/02/2016 2:08 PM, Clinton Gormley wrote:\n\n> ```\n> in SOLR there is timeout which terminate the session in the client\n> side\n> but keep running the request in the server side .\n> ```\n> \n> This depends on the client and is usually called |request_timeout|.\n> \n> ```\n> TimeAllowed in SOLR in the other hand can be configured in the server\n> side to protect the server incase user run a wild query and also\n> in the\n> client side incase you want to extend it for specific .\n> \n> TimeAllowed in SOLR also terminate the search operation in the\n> server side .\n> ```\n> \n> This can be set per request with the |timeout| parameter or globally \n> on the server with the |search.default_search_timeout| setting.\n> \n> See \n> https://www.elastic.co/guide/en/elasticsearch/reference/2.2/search.html#global-search-timeout\n> \n> —\n> Reply to this email directly or view it on GitHub \n> https://github.com/elastic/elasticsearch/issues/16410#issuecomment-184182186.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/184245769","html_url":"https://github.com/elastic/elasticsearch/issues/16410#issuecomment-184245769","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16410","id":184245769,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NDI0NTc2OQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-02-15T15:04:35Z","updated_at":"2016-02-15T15:04:35Z","author_association":"CONTRIBUTOR","body":"This works in the same way.  The collector expires after the timeout and so it returns partial results.  This doesn't necessarily stop parts of the query running on the node, eg a heavy rewrite on a wildcard query. The only way to interrupt things like this is to add checks, which would also make them all slow.\n\nSee https://github.com/elastic/elasticsearch/issues/9156 and https://github.com/elastic/elasticsearch/pull/4586 for background\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/184274257","html_url":"https://github.com/elastic/elasticsearch/issues/16410#issuecomment-184274257","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16410","id":184274257,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NDI3NDI1Nw==","user":{"login":"aloneldi","id":13673547,"node_id":"MDQ6VXNlcjEzNjczNTQ3","avatar_url":"https://avatars2.githubusercontent.com/u/13673547?v=4","gravatar_id":"","url":"https://api.github.com/users/aloneldi","html_url":"https://github.com/aloneldi","followers_url":"https://api.github.com/users/aloneldi/followers","following_url":"https://api.github.com/users/aloneldi/following{/other_user}","gists_url":"https://api.github.com/users/aloneldi/gists{/gist_id}","starred_url":"https://api.github.com/users/aloneldi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aloneldi/subscriptions","organizations_url":"https://api.github.com/users/aloneldi/orgs","repos_url":"https://api.github.com/users/aloneldi/repos","events_url":"https://api.github.com/users/aloneldi/events{/privacy}","received_events_url":"https://api.github.com/users/aloneldi/received_events","type":"User","site_admin":false},"created_at":"2016-02-15T16:08:00Z","updated_at":"2016-02-15T16:08:00Z","author_association":"NONE","body":"So what you are saying is that in SOLR when using _timeAllowed_ there \nare cases in which the query continue to run ?\n\nAs SOLR have Timeout parameter which can be set in the request and \nTimeAllowed .\n\nin All Forums I see that there no issues with TimeAllowed .\n\nWhere For Elastic There are many .\n\nMy Main issue is when query return many rows and I need to display to \nthe fire 100-1000 rows .\n\nWhen using also sort by time stamp the query would run to get all data \nand then return the the first 100 rows .\n\nWhen my Database has billion rows and the user put filter which return \n90% of the data this would take a lot of time and many times carshed the \nJVM\nwith out of memory error .\n\nUsing TimeAllowed in solr to 30 Seconds we could be sure that the user \nwill get data and that the query will terminate in 30 seconds.\n\nSo your suggestion to use *search.default_search_timeout *would solve \nthis issue in Elastic ?\n\nThanks\n\nAlon\n\nOn 15/02/2016 5:05 PM, Clinton Gormley wrote:\n\n> This works in the same way. The collector expires after the timeout \n> and so it returns partial results. This doesn't necessarily stop parts \n> of the query running on the node, eg a heavy rewrite on a wildcard \n> query. The only way to interrupt things like this is to add checks, \n> which would also make them all slow.\n> \n> See #9156 https://github.com/elastic/elasticsearch/issues/9156 and \n> #4586 https://github.com/elastic/elasticsearch/pull/4586 for background\n> \n> —\n> Reply to this email directly or view it on GitHub \n> https://github.com/elastic/elasticsearch/issues/16410#issuecomment-184245769.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/184277606","html_url":"https://github.com/elastic/elasticsearch/issues/16410#issuecomment-184277606","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16410","id":184277606,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NDI3NzYwNg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-02-15T16:15:51Z","updated_at":"2016-02-15T16:15:51Z","author_association":"CONTRIBUTOR","body":"> So what you are saying is that in SOLR when using _timeAllowed_ there are cases in which the query continue to run ?\n\nI don't know enough about SOLR to be certain.  A colleague believes that SOLR 5 also added the ability to interrupt operations on the terms dictionary, but that there were performance issues with this approach.  i don't know if it is true or if the situation has changed.  Either way, Elasticsearch doesn't do this.\n\n> My Main issue is when query return many rows and I need to display to the fire 100-1000 rows .\n\nThen set the `size` limit to 1000.\n\n> When my Database has billion rows and the user put filter which return 90% of the data this would take a lot of time and many times carshed the JVM with out of memory error .\n\nThis won't happen (unless you set `size` to something stupid like MAXINT, and we now prevent you from doing this, see https://www.elastic.co/guide/en/elasticsearch/reference/2.2/breaking_21_search_changes.html#_from_size_limits)\n\n> Using TimeAllowed in solr to 30 Seconds we could be sure that the user will get data and that the query will terminate in 30 seconds.\n\nThis doesn't ensure you get the right results, just some results. \n\nThis conversation is definitely one for the forums, and not the issues list. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/184279879","html_url":"https://github.com/elastic/elasticsearch/issues/16410#issuecomment-184279879","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16410","id":184279879,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NDI3OTg3OQ==","user":{"login":"aloneldi","id":13673547,"node_id":"MDQ6VXNlcjEzNjczNTQ3","avatar_url":"https://avatars2.githubusercontent.com/u/13673547?v=4","gravatar_id":"","url":"https://api.github.com/users/aloneldi","html_url":"https://github.com/aloneldi","followers_url":"https://api.github.com/users/aloneldi/followers","following_url":"https://api.github.com/users/aloneldi/following{/other_user}","gists_url":"https://api.github.com/users/aloneldi/gists{/gist_id}","starred_url":"https://api.github.com/users/aloneldi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aloneldi/subscriptions","organizations_url":"https://api.github.com/users/aloneldi/orgs","repos_url":"https://api.github.com/users/aloneldi/repos","events_url":"https://api.github.com/users/aloneldi/events{/privacy}","received_events_url":"https://api.github.com/users/aloneldi/received_events","type":"User","site_admin":false},"created_at":"2016-02-15T16:23:36Z","updated_at":"2016-02-15T16:23:36Z","author_association":"NONE","body":"Thanks Clinton .\n\nOn 15/02/2016 6:17 PM, Clinton Gormley wrote:\n\n> ```\n> So what you are saying is that in SOLR when using /timeAllowed/\n> there are cases in which the query continue to run ?\n> ```\n> \n> I don't know enough about SOLR to be certain. A colleague believes \n> that SOLR 5 also added the ability to interrupt operations on the \n> terms dictionary, but that there were performance issues with this \n> approach. i don't know if it is true or if the situation has changed. \n> Either way, Elasticsearch doesn't do this.\n> \n> ```\n> My Main issue is when query return many rows and I need to display\n> to the fire 100-1000 rows .\n> ```\n> \n> Then set the |size| limit to 1000.\n> \n> ```\n> When my Database has billion rows and the user put filter which\n> return 90% of the data this would take a lot of time and many\n> times carshed the JVM with out of memory error .\n> ```\n> \n> This won't happen (unless you set |size| to something stupid like \n> MAXINT, and we now prevent you from doing this, see \n> https://www.elastic.co/guide/en/elasticsearch/reference/2.2/breaking_21_search_changes.html#_from_size_limits)\n> \n> ```\n> Using TimeAllowed in solr to 30 Seconds we could be sure that the\n> user will get data and that the query will terminate in 30 seconds.\n> ```\n> \n> This doesn't ensure you get the right results, just some results.\n> \n> This conversation is definitely one for the forums, and not the issues \n> list.\n> \n> —\n> Reply to this email directly or view it on GitHub \n> https://github.com/elastic/elasticsearch/issues/16410#issuecomment-184277606.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/354751767","html_url":"https://github.com/elastic/elasticsearch/issues/16410#issuecomment-354751767","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16410","id":354751767,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDc1MTc2Nw==","user":{"login":"delongwu","id":2227594,"node_id":"MDQ6VXNlcjIyMjc1OTQ=","avatar_url":"https://avatars3.githubusercontent.com/u/2227594?v=4","gravatar_id":"","url":"https://api.github.com/users/delongwu","html_url":"https://github.com/delongwu","followers_url":"https://api.github.com/users/delongwu/followers","following_url":"https://api.github.com/users/delongwu/following{/other_user}","gists_url":"https://api.github.com/users/delongwu/gists{/gist_id}","starred_url":"https://api.github.com/users/delongwu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/delongwu/subscriptions","organizations_url":"https://api.github.com/users/delongwu/orgs","repos_url":"https://api.github.com/users/delongwu/repos","events_url":"https://api.github.com/users/delongwu/events{/privacy}","received_events_url":"https://api.github.com/users/delongwu/received_events","type":"User","site_admin":false},"created_at":"2018-01-02T11:54:36Z","updated_at":"2018-01-02T11:54:36Z","author_association":"NONE","body":"curl -XPUT localhost:9200/_cluster/settings -d '{\r\n \"persistent\" : {\r\n \"search.default_search_timeout\" : \"2s\"\r\n }\r\n }'","performed_via_github_app":null}]