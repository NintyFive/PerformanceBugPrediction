[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/236633730","html_url":"https://github.com/elastic/elasticsearch/issues/19711#issuecomment-236633730","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19711","id":236633730,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNjYzMzczMA==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2016-08-01T16:33:12Z","updated_at":"2016-08-01T16:33:12Z","author_association":"CONTRIBUTOR","body":"This is not related to the network. Instead each node constantly fsyncs over and over, various stacks looking like this:\n\n```\nTRACE 307088:\n  sun.nio.ch.FileDispatcherImpl.force0(FileDispatcherImpl.java:Unknown line)\n  sun.nio.ch.FileDispatcherImpl.force(FileDispatcherImpl.java:76)\n  sun.nio.ch.FileChannelImpl.force(FileChannelImpl.java:386)\n  org.apache.lucene.util.IOUtils.fsync(IOUtils.java:420)\n  org.elasticsearch.gateway.MetaDataStateFormat.write(MetaDataStateFormat.java:139)\n  org.elasticsearch.index.shard.IndexShard.persistMetadata(IndexShard.java:1527)\n  org.elasticsearch.index.shard.IndexShard.<init>(IndexShard.java:268)\n  org.elasticsearch.index.IndexService.createShard(IndexService.java:343)\n...\nTRACE 307239:\n  sun.nio.ch.FileDispatcherImpl.force0(FileDispatcherImpl.java:Unknown line)\n  sun.nio.ch.FileDispatcherImpl.force(FileDispatcherImpl.java:76)\n  sun.nio.ch.FileChannelImpl.force(FileChannelImpl.java:386)\n  org.elasticsearch.index.translog.TranslogWriter.create(TranslogWriter.java:98)\n  org.elasticsearch.index.translog.Translog.createWriter(Translog.java:381)\n  org.elasticsearch.index.translog.Translog.<init>(Translog.java:204)\n```\n\nSo cpu samples are looking like this:\n\n```\nCPU SAMPLES BEGIN (total = 1555901) Mon Aug  1 12:28:09 2016\nrank   self  accum   count trace method\n   1 98.05% 98.05% 1525506 306145 sun.nio.ch.EPollArrayWrapper.epollWait\n   2  0.12% 98.17%    1872 307128 sun.nio.ch.FileDispatcherImpl.force0\n   3  0.12% 98.28%    1791 307088 sun.nio.ch.FileDispatcherImpl.force0\n   4  0.11% 98.39%    1713 307129 sun.nio.ch.FileDispatcherImpl.force0\n   5  0.11% 98.50%    1644 307089 sun.nio.ch.FileDispatcherImpl.force0\n   6  0.08% 98.58%    1267 307239 sun.nio.ch.FileDispatcherImpl.force0\n   7  0.08% 98.66%    1185 307232 sun.nio.ch.FileDispatcherImpl.force0\n   8  0.07% 98.73%    1162 307271 sun.nio.ch.FileDispatcherImpl.force0\n   9  0.07% 98.80%    1106 307270 sun.nio.ch.FileDispatcherImpl.force0\n  10  0.05% 98.85%     725 307450 sun.nio.ch.FileDispatcherImpl.force0\n  11  0.05% 98.89%     719 307453 sun.nio.ch.FileDispatcherImpl.force0\n  12  0.05% 98.94%     713 307436 sun.nio.ch.FileDispatcherImpl.force0\n  13  0.04% 98.98%     650 307455 sun.nio.ch.FileDispatcherImpl.force0\n  14  0.04% 99.02%     616 307446 sun.nio.ch.FileDispatcherImpl.force0\n  15  0.04% 99.06%     609 307456 sun.nio.ch.FileDispatcherImpl.force0\n  16  0.03% 99.09%     504 307254 sun.nio.ch.FileDispatcherImpl.force0\n  17  0.02% 99.12%     380 306430 sun.nio.ch.FileDispatcherImpl.force0\n  18  0.02% 99.13%     271 307454 sun.nio.ch.FileDispatcherImpl.force0\n  19  0.01% 99.15%     201 306431 sun.nio.ch.FileDispatcherImpl.force0\nCPU SAMPLES END\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/236634857","html_url":"https://github.com/elastic/elasticsearch/issues/19711#issuecomment-236634857","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19711","id":236634857,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNjYzNDg1Nw==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2016-08-01T16:37:13Z","updated_at":"2016-08-01T16:37:13Z","author_association":"CONTRIBUTOR","body":"The reason that it is faster on OS X, is because OS X fsync is worthless on java:\n\nhttps://bugs.openjdk.java.net/browse/JDK-8080589\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/236654652","html_url":"https://github.com/elastic/elasticsearch/issues/19711#issuecomment-236654652","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19711","id":236654652,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNjY1NDY1Mg==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2016-08-01T17:49:33Z","updated_at":"2016-08-01T18:00:56Z","author_association":"MEMBER","body":"I independently discovered the same cause as @rmuir, this has nothing to do with Netty 4, it's all from excessive fsyncs. The question then becomes why are the fsyncs so excessive? The same slowdown can be observed on the Netty 3 tests if the Netty 3 tests are put on equal ground with the Netty 4 tests by modifying them to also use two nodes:\n\n``` diff\ndiff --git a/modules/transport-netty3/build.gradle b/modules/transport-netty3/build.gradle\nindex 7b8b94a..e13170e 100644\n--- a/modules/transport-netty3/build.gradle\n+++ b/modules/transport-netty3/build.gradle\n@@ -36,6 +36,15 @@ dependencies {\n     compile 'io.netty:netty:3.10.6.Final'\n }\n\n+integTest {\n+    includePackaged = true\n+    cluster {\n+        setting 'http.type', 'netty3'\n+        setting 'transport.type', 'netty3'\n+        numNodes = 2\n+    }\n+}\n+\n thirdPartyAudit.excludes = [\n         // uses internal java api: sun.security.x509 (X509CertInfo, X509CertImpl, X500Name)\n         'org.jboss.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator',\n```\n\nOn an OS X laptop, for Netty 3:\n\n```\n$ uname -a\nDarwin jason-mbp.tedor.me 15.6.0 Darwin Kernel Version 15.6.0: Thu Jun 23 18:25:34 PDT 2016; root:xnu-3248.60.10~1/RELEASE_X86_64 x86_64\n$  gradle :modules:transport-netty3:integTest -Dtests.class='*.Netty3ClientYamlTestSuiteIT' \n.\n.\n.\nBUILD SUCCESSFUL                                                                                                                                                        \n\nTotal time: 1 mins 26.048 secs \n```\n\nOn a Fedora workstation (i7-5930K, _very_ fast Samsung 950 Pro SSD), for Netty 3:\n\n```\n$ uname -a\nLinux totoro.tedor.me 4.5.7-202.fc23.x86_64 #1 SMP Tue Jun 28 18:22:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n$ gradle :modules:transport-netty3:integTest -Dtests.class='*.Netty3ClientYamlTestSuiteIT' \n.\n.\n.\nBUILD SUCCESSFUL\n\nTotal time: 4 mins 12.431 secs\n```\n\nOn an OS X laptop, for Netty 4:\n\n```\n$ uname -a\nDarwin jason-mbp.tedor.me 15.6.0 Darwin Kernel Version 15.6.0: Thu Jun 23 18:25:34 PDT 2016; root:xnu-3248.60.10~1/RELEASE_X86_64 x86_64\n$ gradle :modules:transport-netty4:integTest -Dtests.class='*.Netty4ClientYamlTestSuiteIT' \n.\n.\n.\nBUILD SUCCESSFUL                                                                                                                                                        \n\nTotal time: 1 mins 2 secs\n```\n\nOn a Fedora workstation (i7-5930K, _very_ fast Samsung 950 Pro SSD), for Netty 4:\n\n```\n$ uname -a\nLinux totoro.tedor.me 4.5.7-202.fc23.x86_64 #1 SMP Tue Jun 28 18:22:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n$ gradle :modules:transport-netty4:integTest -Dtests.class='*.Netty4ClientYamlTestSuiteIT' \n.\n.\n.\nBUILD SUCCESSFUL\n\nTotal time: 4 mins 7.784 secs\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/236663402","html_url":"https://github.com/elastic/elasticsearch/issues/19711#issuecomment-236663402","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19711","id":236663402,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNjY2MzQwMg==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2016-08-01T18:22:24Z","updated_at":"2016-08-01T18:22:24Z","author_association":"CONTRIBUTOR","body":"You can also see it easily with a mac:\n\n```\n  JDK Version           : Oracle Corporation 1.8.0_66 [Java HotSpot(TM) 64-Bit Server VM 25.66-b17]\n...\nBUILD SUCCESSFUL\n\nTotal time: 2 mins 19.326 secs\n```\n\n```\n  JDK Version (compile) : Oracle Corporation 9-ea [Java HotSpot(TM) 64-Bit Server VM 9-ea+129]\n...\nBUILD SUCCESSFUL\n\nTotal time: 5 mins 39.762 secs\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/236675253","html_url":"https://github.com/elastic/elasticsearch/issues/19711#issuecomment-236675253","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19711","id":236675253,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNjY3NTI1Mw==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-08-01T19:03:56Z","updated_at":"2016-08-01T19:03:56Z","author_association":"MEMBER","body":"This is a good (and surprising) find. For my understanding - what makes the netty rest test different (if they are actually different) from the normal tests and rest test? \n\nRe the fsyncs - at least the stack traces Robert found show the persisting of the initial metadata associated with a shard - one is the state file, which is only written when a shard is first created and when, if it all, it is promoted to a primary. The second stack trace is fsyncing the initial translog files created with a fresh translog.\n\nNext to that there are Index level state files that in theory (long term) we can stop fsyncing once we move to persistent cluster state publishing queue. \n\nIs there anything else in the stack traces you guys saw? As @jasontedor already pointed out in another channel, reducing the shard count in the test is an immediate win.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/236693600","html_url":"https://github.com/elastic/elasticsearch/issues/19711#issuecomment-236693600","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19711","id":236693600,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNjY5MzYwMA==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2016-08-01T20:13:57Z","updated_at":"2016-08-01T20:13:57Z","author_association":"CONTRIBUTOR","body":"I run the test like this to produce [java.hprof.txt](https://github.com/elastic/elasticsearch/files/394687/java.hprof.txt) for each JVM\n\n```\ngradle integTest -Dtests.class='*.Netty4ClientYamlTestSuiteIT' -Dtests.jvm.argline='-agentlib:hprof=cpu=samples,depth=20,interval=1'\n... wait\n... ^C after say 400 tests, before it finishes so it dumps, else we kill -9 and you get nothing\n$ find . -name java.hprof.txt\n./build/testrun/integTest/J0/java.hprof.txt\n./build/cluster/integTest node1/cwd/java.hprof.txt\n./build/cluster/integTest node0/cwd/java.hprof.txt\n```\n\nYou can see all the stacks from this file. Some improvements are possible, e.g. renameTempFilesSafe can probably be sped up with https://issues.apache.org/jira/browse/LUCENE-7373, as we don't need to sync metadata after each file one-by-one, just a single time at the end. But by frequency that is one of the least common.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/236695296","html_url":"https://github.com/elastic/elasticsearch/issues/19711#issuecomment-236695296","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19711","id":236695296,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNjY5NTI5Ng==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2016-08-01T20:20:30Z","updated_at":"2016-08-01T20:20:30Z","author_association":"CONTRIBUTOR","body":"> As @jasontedor already pointed out in another channel, reducing the shard count in the test is an immediate win.\n\nSeparately I agree with this. A FileSystemProvider approach like what unit tests use (https://github.com/apache/lucene-solr/blob/master/lucene/test-framework/src/java/org/apache/lucene/mockfile/DisableFsyncFS.java) is not so good here, because we have to box/unbox Path objects, very invasive and not so realistic. \n\nI think it would be better to have just a few simple integration testing instead for the network stuff, and stronger unit tests... it just needs to meet the contract of Transport or whatever apis it implements.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/236774166","html_url":"https://github.com/elastic/elasticsearch/issues/19711#issuecomment-236774166","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19711","id":236774166,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNjc3NDE2Ng==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2016-08-02T02:16:45Z","updated_at":"2016-08-02T02:16:45Z","author_association":"CONTRIBUTOR","body":"Here is my solution, its fire and forget and these tests become 45 seconds.\n\n```\n/* gcc -fPIC -shared -o disable_fsync.so disable_fsync.c */\nint fsync(int fd) {\n  return 0;\n}\n\nint fdatasync(int fd) {\n  return 0;\n}\n```\n\nin `.profile` i add this:\n\n`alias gradle='LD_PRELOAD=/home/rmuir/disable_fsync.so gradle'`\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/236886895","html_url":"https://github.com/elastic/elasticsearch/issues/19711#issuecomment-236886895","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19711","id":236886895,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNjg4Njg5NQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-08-02T12:18:27Z","updated_at":"2016-08-02T12:18:27Z","author_association":"MEMBER","body":"Thanks @rmuir . Indeed most of those stacks are part of shard creations. There are some index metadata persisting that I already mentioned and some recovery related renaming of temporary files that I think was what you were referring. I don't see any quick/easy wins here  (putting aside your wonderful solution :))\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/237239871","html_url":"https://github.com/elastic/elasticsearch/issues/19711#issuecomment-237239871","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19711","id":237239871,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNzIzOTg3MQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-08-03T13:40:54Z","updated_at":"2016-08-03T13:40:54Z","author_association":"CONTRIBUTOR","body":"there is another option. I think we can maybe reduce the number of shards to 1 or 2 in these tests. I think that would still give use the integration coverage that we want. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/237271974","html_url":"https://github.com/elastic/elasticsearch/issues/19711#issuecomment-237271974","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19711","id":237271974,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNzI3MTk3NA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-08-03T15:26:46Z","updated_at":"2016-08-03T15:26:46Z","author_association":"MEMBER","body":"@s1monw see #19742 ;)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/237276833","html_url":"https://github.com/elastic/elasticsearch/issues/19711#issuecomment-237276833","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19711","id":237276833,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNzI3NjgzMw==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-08-03T15:42:56Z","updated_at":"2016-08-03T15:42:56Z","author_association":"CONTRIBUTOR","body":"good @javanna \n","performed_via_github_app":null}]