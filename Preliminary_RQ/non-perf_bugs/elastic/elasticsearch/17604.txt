{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/17604","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17604/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17604/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17604/events","html_url":"https://github.com/elastic/elasticsearch/issues/17604","id":146743856,"node_id":"MDU6SXNzdWUxNDY3NDM4NTY=","number":17604,"title":"_nodes API prints hostname inconsistently","user":{"login":"pickypg","id":1501235,"node_id":"MDQ6VXNlcjE1MDEyMzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1501235?v=4","gravatar_id":"","url":"https://api.github.com/users/pickypg","html_url":"https://github.com/pickypg","followers_url":"https://api.github.com/users/pickypg/followers","following_url":"https://api.github.com/users/pickypg/following{/other_user}","gists_url":"https://api.github.com/users/pickypg/gists{/gist_id}","starred_url":"https://api.github.com/users/pickypg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pickypg/subscriptions","organizations_url":"https://api.github.com/users/pickypg/orgs","repos_url":"https://api.github.com/users/pickypg/repos","events_url":"https://api.github.com/users/pickypg/events{/privacy}","received_events_url":"https://api.github.com/users/pickypg/received_events","type":"User","site_admin":false},"labels":[{"id":144797810,"node_id":"MDU6TGFiZWwxNDQ3OTc4MTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Core","name":":Core/Infra/Core","color":"0e8a16","default":false,"description":"Core issues without another label"},{"id":342561351,"node_id":"MDU6TGFiZWwzNDI1NjEzNTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v2.4.0","name":"v2.4.0","color":"dddddd","default":false,"description":null},{"id":352250322,"node_id":"MDU6TGFiZWwzNTIyNTAzMjI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v5.0.0-alpha2","name":"v5.0.0-alpha2","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-04-07T21:13:11Z","updated_at":"2016-04-11T16:23:02Z","closed_at":"2016-04-11T15:52:56Z","author_association":"MEMBER","active_lock_reason":null,"body":"ES 2.x / 5.0\n\nAPIs that depend on the printing of `NetworkAddress.format` for `TransportAddress` objects, such as `_nodes/transport` currently print out the local node versus non-local nodes (e.g., `n - 1` nodes) inconsistently.\n\nIf the published address involved a hostname, then the local node will have resolved its hostname and it will report its hostname alongside its IP address and port. However, since it does not know/care about the hostname of _most_ other nodes, then it will not have resolved their hostname and it will not print it out. For example: if you start two nodes with\n\n``` shell\n$ bin/elasticsearch -Des.network.publish_host=`hostname` -Des.network.bind_host=127.0.0.1,`hostname`\n```\n\nThen try to find the transport address of those nodes:\n\n``` shell\n$ curl -XGET localhost:9201/_nodes/transport?pretty\n```\n\nThen you'll get a response like (ignoring node uid and name, which are random):\n\n``` json\n{\n  \"cluster_name\": \"elasticsearch\",\n  \"nodes\": {\n    \"cnPqK1eyQUykNZkhRXCeJQ\": {\n      \"name\": \"Icemaster\",\n      \"transport_address\": \"Chriss-MBP.home/192.168.1.6:9301\",\n      \"host\": \"192.168.1.6\",\n      \"ip\": \"192.168.1.6\",\n      \"version\": \"2.3.0\",\n      \"build\": \"8371be8\",\n      \"http_address\": \"Chriss-MBP.home/192.168.1.6:9201\",\n      \"transport\": {\n        \"bound_address\": [\n          \"127.0.0.1:9301\",\n          \"[fe80::9425:ff:fe76:2429]:9301\",\n          \"[fe80::82e6:50ff:fe0a:e71a]:9301\",\n          \"192.168.1.6:9301\"\n        ],\n        \"publish_address\": \"Chriss-MBP.home/192.168.1.6:9301\",\n        \"profiles\": {}\n      }\n    },\n    \"_yVpRl1pSRa26EHBbr8ZHA\": {\n      \"name\": \"Masque\",\n      \"transport_address\": \"192.168.1.6:9300\",\n      \"host\": \"192.168.1.6\",\n      \"ip\": \"192.168.1.6\",\n      \"version\": \"2.3.1\",\n      \"build\": \"bd98092\",\n      \"http_address\": \"Chriss-MBP.home/192.168.1.6:9200\",\n      \"transport\": {\n        \"bound_address\": [\n          \"127.0.0.1:9300\",\n          \"[fe80::9425:ff:fe76:2429]:9300\",\n          \"[fe80::82e6:50ff:fe0a:e71a]:9300\",\n          \"192.168.1.6:9300\"\n        ],\n        \"publish_address\": \"192.168.1.6:9300\",\n        \"profiles\": {}\n      }\n    }\n  }\n}\n```\n\nIf you instead invoke the same API from the node running at port `9200`, then its `transport_address` will be reported properly with its hostname, while the other node will lose the hostname. The \"problem\" is that the `TransportAddress` address used by `n - 1` of the nodes is serialized and its hostname gets forgotten on other nodes, so when it gets printed, we avoid doing a hostname lookup and end up with inconsistent results.\n\nThe inconsistency can lead to parsing failure when unexpected and it leads to inconsistent handling/behavior. The solution is pretty straight forward: stop printing the hostname. This has the added benefit that it means that the format is always _directly_ usable within a URI without any parsing.\n","closed_by":{"login":"pickypg","id":1501235,"node_id":"MDQ6VXNlcjE1MDEyMzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1501235?v=4","gravatar_id":"","url":"https://api.github.com/users/pickypg","html_url":"https://github.com/pickypg","followers_url":"https://api.github.com/users/pickypg/followers","following_url":"https://api.github.com/users/pickypg/following{/other_user}","gists_url":"https://api.github.com/users/pickypg/gists{/gist_id}","starred_url":"https://api.github.com/users/pickypg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pickypg/subscriptions","organizations_url":"https://api.github.com/users/pickypg/orgs","repos_url":"https://api.github.com/users/pickypg/repos","events_url":"https://api.github.com/users/pickypg/events{/privacy}","received_events_url":"https://api.github.com/users/pickypg/received_events","type":"User","site_admin":false},"performed_via_github_app":null}