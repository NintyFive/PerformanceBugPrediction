{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/15338","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15338/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15338/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15338/events","html_url":"https://github.com/elastic/elasticsearch/issues/15338","id":121279295,"node_id":"MDU6SXNzdWUxMjEyNzkyOTU=","number":15338,"title":"OutOfMemoryError[Java heap space] when executing update with bad fields","user":{"login":"anyatch","id":6769042,"node_id":"MDQ6VXNlcjY3NjkwNDI=","avatar_url":"https://avatars2.githubusercontent.com/u/6769042?v=4","gravatar_id":"","url":"https://api.github.com/users/anyatch","html_url":"https://github.com/anyatch","followers_url":"https://api.github.com/users/anyatch/followers","following_url":"https://api.github.com/users/anyatch/following{/other_user}","gists_url":"https://api.github.com/users/anyatch/gists{/gist_id}","starred_url":"https://api.github.com/users/anyatch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anyatch/subscriptions","organizations_url":"https://api.github.com/users/anyatch/orgs","repos_url":"https://api.github.com/users/anyatch/repos","events_url":"https://api.github.com/users/anyatch/events{/privacy}","received_events_url":"https://api.github.com/users/anyatch/received_events","type":"User","site_admin":false},"labels":[{"id":152517143,"node_id":"MDU6TGFiZWwxNTI1MTcxNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/REST%20API","name":":Core/Infra/REST API","color":"0e8a16","default":false,"description":"REST infrastructure and utilities"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":92913858,"node_id":"MDU6TGFiZWw5MjkxMzg1OA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/good%20first%20issue","name":"good first issue","color":"07569b","default":true,"description":"low hanging fruit"},{"id":342561351,"node_id":"MDU6TGFiZWwzNDI1NjEzNTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v2.4.0","name":"v2.4.0","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"assignees":[{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2015-12-09T16:03:43Z","updated_at":"2016-03-17T13:42:06Z","closed_at":"2016-03-17T13:42:06Z","author_association":"NONE","active_lock_reason":null,"body":"Hi!\nRunning elasticsearch 2.1.0 I encountered weird behavior when trying to execute update. Tried to execute this query:\n\n```\nPOST my-index/my-type/my_id/_update\n{\"doc\": {\"my_field_name\": \"blabla\"}, \"doc_as_upsert\": true, \"fields\": \"_source\"}\n```\n\nand got **OutOfMemoryError[Java heap space]** (it took Elasticsearch a few seconds to answer).\n\nAs I understand it, the format of the query above is wrong. The value of \"fields\" should be list, not string (indeed when correcting the query the update worked fine). In a case like that I would expect to get some kind of an error indicating my request is not valid but It seems like some internal error have happen in elasticsearch and resulted in OutOfMemoryError.\n\nThis is the stack trace:\n`java.lang.OutOfMemoryError: Java heap space\n        at java.util.Arrays.copyOf(Arrays.java:2219)\n        at java.util.ArrayList.grow(ArrayList.java:242)\n        at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:216)\n        at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:208)\n        at java.util.ArrayList.add(ArrayList.java:440)\n        at org.elasticsearch.common.xcontent.support.AbstractXContentParser.readList(AbstractXContentParser.java:290)\n        at org.elasticsearch.common.xcontent.support.AbstractXContentParser.readList(AbstractXContentParser.java:253)\n        at org.elasticsearch.common.xcontent.support.AbstractXContentParser.list(AbstractXContentParser.java:218)\n        at org.elasticsearch.action.update.UpdateRequest.source(UpdateRequest.java:672)\n        at org.elasticsearch.rest.action.update.RestUpdateAction.handleRequest(RestUpdateAction.java:101)\n        at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:54)\n        at org.elasticsearch.rest.RestController.executeHandler(RestController.java:207)\n        at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:166)\n        at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:128)\n        at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:86)\n        at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:348)\n        at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:63)\n        at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n        at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n        at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:60)\n        at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)\n        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n        at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n        at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)\n        at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n        at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n        at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)\n        at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n        at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n`\n","closed_by":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"performed_via_github_app":null}