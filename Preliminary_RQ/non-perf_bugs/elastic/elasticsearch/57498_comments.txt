[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/637360364","html_url":"https://github.com/elastic/elasticsearch/issues/57498#issuecomment-637360364","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57498","id":637360364,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNzM2MDM2NA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-06-02T07:53:27Z","updated_at":"2020-06-02T07:53:27Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed (:Distributed/Network)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/637361812","html_url":"https://github.com/elastic/elasticsearch/issues/57498#issuecomment-637361812","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57498","id":637361812,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNzM2MTgxMg==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2020-06-02T07:56:02Z","updated_at":"2020-06-02T07:56:02Z","author_association":"MEMBER","body":"Talked about this with David and I think we can improve the way we use the networking layer instead of working around this issue by forking off to a different thread-pool to then have that hit the `flush` (that's where the wake-ups are coming from) API in a loop.\r\n\r\nI'll look into creating a PR that optimises this and other spots where we might be sending a large number of requests to channels on the same selector in a loop.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/637418579","html_url":"https://github.com/elastic/elasticsearch/issues/57498#issuecomment-637418579","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57498","id":637418579,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNzQxODU3OQ==","user":{"login":"shwetathareja","id":2943091,"node_id":"MDQ6VXNlcjI5NDMwOTE=","avatar_url":"https://avatars3.githubusercontent.com/u/2943091?v=4","gravatar_id":"","url":"https://api.github.com/users/shwetathareja","html_url":"https://github.com/shwetathareja","followers_url":"https://api.github.com/users/shwetathareja/followers","following_url":"https://api.github.com/users/shwetathareja/following{/other_user}","gists_url":"https://api.github.com/users/shwetathareja/gists{/gist_id}","starred_url":"https://api.github.com/users/shwetathareja/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shwetathareja/subscriptions","organizations_url":"https://api.github.com/users/shwetathareja/orgs","repos_url":"https://api.github.com/users/shwetathareja/repos","events_url":"https://api.github.com/users/shwetathareja/events{/privacy}","received_events_url":"https://api.github.com/users/shwetathareja/received_events","type":"User","site_admin":false},"created_at":"2020-06-02T09:33:42Z","updated_at":"2020-06-02T09:33:42Z","author_association":"NONE","body":"Thanks @original-brownbear for looking into it. Can you elaborate a bit on how are you planning to optimize the use of networking layer?\r\n\r\nAlso, I was wondering that these async fetch calls are made per unassigned shard per node. These could be batched per node as well to reduce the no. of calls over the transport layer from master to data nodes?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/637455622","html_url":"https://github.com/elastic/elasticsearch/issues/57498#issuecomment-637455622","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57498","id":637455622,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNzQ1NTYyMg==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2020-06-02T10:48:03Z","updated_at":"2020-06-02T10:48:03Z","author_association":"MEMBER","body":">  Can you elaborate a bit on how are you planning to optimize the use of networking layer?\r\n\r\nSure, it's fairly straight forward. Currently, whenever we write a message to the transport layer we use `channel.writeAndFlush`. If this is call from outside the Netty event loop it will often lead to a sys call to wake up the selector (that's what you observed as being so costly). If we were to just use the simple `channel.write` method and later flush (after we know we wrote a batch of messages) we wouldn't be triggering these wake-ups.\r\n\r\n> These could be batched per node as well to reduce the no. of calls over the transport layer from master to data nodes?\r\n\r\nTrue, I think we could make protocol improvements/changes there. Since we identified a number of spots where improving the behaviour on the network layer would be beneficial and it's somewhat involved to introduce batching into these messages on the protocol level I think I think the network layer improvements are what I would focus on for now.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/637527233","html_url":"https://github.com/elastic/elasticsearch/issues/57498#issuecomment-637527233","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57498","id":637527233,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNzUyNzIzMw==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2020-06-02T13:02:14Z","updated_at":"2020-06-02T13:02:14Z","author_association":"MEMBER","body":"I looked into the details of what a fix for this would look like in ES and found that Netty recently made some improvements to the way it avoids unnecessary wake-ups in https://github.com/netty/netty/pull/9799 (fixed in a Netty version that isn't used in 7.1).\r\nAlso changes https://github.com/elastic/elasticsearch/pull/39286, https://github.com/elastic/elasticsearch/pull/57084 and should cause the event loop to do a little more work when sending messages and leave it stuck in `.select` less often.\r\nFurthermore https://github.com/elastic/elasticsearch/pull/56488 and https://github.com/elastic/elasticsearch/pull/46346 reduced the number of IO threads we use by a factor of 4, reducing the likelihood of running into a thread that is stuck on `.select` and hence must be woken up significantly. \r\n(this may be very relevant in practice)\r\n\r\n=> It's hard to tell from theory alone by how much the situation has already improved qualitatively but I would expect to see a non-trivial improvement relative to `7.1` with a high likelihood. \r\n\r\nI still think this is worth improving on our end if we can, but there is a good chance you'll have a better experience with more recent (and upcoming) ES versions.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/675532268","html_url":"https://github.com/elastic/elasticsearch/issues/57498#issuecomment-675532268","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57498","id":675532268,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NTUzMjI2OA==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2020-08-18T15:01:00Z","updated_at":"2020-08-18T15:01:00Z","author_association":"MEMBER","body":"I profiled this exact spot a lot lately when investigating slowness on the IO thread and I don't think this is much of an issue any more with the changes mentioned above. I don't think there's reasonable cause to improve batching of sending transport messages in the near future => closing this, it should be have much better in newer ES versions.","performed_via_github_app":null}]