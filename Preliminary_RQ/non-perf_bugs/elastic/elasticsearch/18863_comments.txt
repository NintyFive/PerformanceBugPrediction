[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225926934","html_url":"https://github.com/elastic/elasticsearch/issues/18863#issuecomment-225926934","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18863","id":225926934,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTkyNjkzNA==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2016-06-14T15:52:54Z","updated_at":"2016-06-14T15:52:54Z","author_association":"CONTRIBUTOR","body":"For us with painless, there are two main issues:\n- forces boxing of return values\n- means the \"root\" of our tree is untyped, this hurts us a lot.\n\nCompare the QPS of expressions, which dodges these issues (https://benchmarks.elastic.co/index.html#search_qps_scripts). Look how much faster it is than painless. This is sad, its how much performance we are leaving on the table.\n\nIn general, search script and executable script need more separation. One of them gets called millions and billions of times and needs to be fast. The latter case is not really as much of a hotspot.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225930321","html_url":"https://github.com/elastic/elasticsearch/issues/18863#issuecomment-225930321","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18863","id":225930321,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTkzMDMyMQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-06-14T16:03:43Z","updated_at":"2016-06-14T16:03:43Z","author_association":"CONTRIBUTOR","body":"> In general, search script and executable script need more separation. One of them gets called millions and billions of times and needs to be fast. The latter case is not really as much of a hotspot.\n\n+1\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225939713","html_url":"https://github.com/elastic/elasticsearch/issues/18863#issuecomment-225939713","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18863","id":225939713,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTkzOTcxMw==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2016-06-14T16:35:12Z","updated_at":"2016-06-14T16:35:12Z","author_association":"CONTRIBUTOR","body":"+1\n\nI'd suggest to have 2 possible scripts: One returning Object and one returning just double (unboxed). We can handle that easily in painless. We just add the correct casts and implement the main logic in 2 different methods.\n\nWe can also add stuff for covariant returns: So scripts have to implement 2 methods: one returning double and one returning Object. Scripts returning doubles can implement the double method directly and add a covariant bridge to box (returning Object). If a script cannot return a double, it throws ClassCastException in the double returning method and only implements the Object one.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225940816","html_url":"https://github.com/elastic/elasticsearch/issues/18863#issuecomment-225940816","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18863","id":225940816,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTk0MDgxNg==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-06-14T16:39:11Z","updated_at":"2016-06-14T16:39:11Z","author_association":"CONTRIBUTOR","body":"Lots of non-search scripts don't need to return anything. Usually their job is to modify stuff in some `ctx` variable. I guess aggregations have scripts that want to return arbitrary stuff.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225974602","html_url":"https://github.com/elastic/elasticsearch/issues/18863#issuecomment-225974602","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18863","id":225974602,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTk3NDYwMg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-06-14T18:33:52Z","updated_at":"2016-06-14T18:33:52Z","author_association":"CONTRIBUTOR","body":"> In general, search script and executable script need more separation. One of them gets called millions and billions of times and needs to be fast. The latter case is not really as much of a hotspot.\n\nAgreed.  I can think of two places where search scripts today need to return strings:\n- Script Fields - These can return pretty much anything, and really they should be executable scripts instead of search scripts as they are only called once per hit.  The only problem here is that it would be a breaking change as users would need to use `ctx._source` instead of `_source`, but I think this is worth it.\n- Term aggregations - I know users use this to eg combine multiple fields or to emit tags which represent some calculation\n\nThe last one is trickier.  With @uschindler's proposal, can we still keep the string return in term aggregations (and suffer the slower execution speed) and use the double version (pretty much?) everywhere else \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/226732223","html_url":"https://github.com/elastic/elasticsearch/issues/18863#issuecomment-226732223","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18863","id":226732223,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNjczMjIyMw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-06-17T10:08:19Z","updated_at":"2016-06-17T10:08:19Z","author_association":"CONTRIBUTOR","body":"Discussed in FixitFriday: there are reservations about removing the ability to produce anything but doubles in all search scripts, so one idea would be to have the following APIs in `ScriptEngineService`:\n\n``` java\n    // already exists: used for updates, ingest or search scripts that may need something else than doubles\n    Object compile(String scriptName, String scriptSource, Map<String, String> params);\n\n    // new API: used by search scripts that need to produce doubles only like script_score or sorting by script\n    // for the script engine, the default implementation could delegate to #compile\n    Object compileDouble(String scriptName, String scriptSource, Map<String, String> params);\n```\n\nThen it seems like we should easily be able to pick the right one depending on the call site. @jdconrad @uschindler @rmuir would it make things easier to optimize for Painless?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/226748494","html_url":"https://github.com/elastic/elasticsearch/issues/18863#issuecomment-226748494","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18863","id":226748494,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNjc0ODQ5NA==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2016-06-17T11:42:35Z","updated_at":"2016-06-17T11:50:18Z","author_association":"CONTRIBUTOR","body":"`compileDouble` should of course return double :-) or did I misundserstood something?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/226779823","html_url":"https://github.com/elastic/elasticsearch/issues/18863#issuecomment-226779823","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18863","id":226779823,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNjc3OTgyMw==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2016-06-17T14:13:44Z","updated_at":"2016-06-17T14:13:44Z","author_association":"CONTRIBUTOR","body":"I'm not happy about it. Today we have 2 apis, and both are slow. The proposal here would make one of them more complicated.\n\nIf we are going to have 2 apis, why not just have one of them be fast?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/226794639","html_url":"https://github.com/elastic/elasticsearch/issues/18863#issuecomment-226794639","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18863","id":226794639,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNjc5NDYzOQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-17T15:06:29Z","updated_at":"2016-06-17T15:06:29Z","author_association":"CONTRIBUTOR","body":"> If we are going to have 2 apis, why not just have one of them be fast?\n\ncan you explain the API and it's consequence ie. does it mean we remove functionality? Does it mean we restrict everything to a double? I mean if we can have 1 fine but how?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/226797196","html_url":"https://github.com/elastic/elasticsearch/issues/18863#issuecomment-226797196","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18863","id":226797196,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNjc5NzE5Ng==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2016-06-17T15:15:30Z","updated_at":"2016-06-17T15:15:30Z","author_association":"CONTRIBUTOR","body":"No, i can't because these scripting apis are a disaster. Its literally impossible to tell what is going on outside of it. You've got slow shit using the \"fast\" apis and probably vice versa too.\n\nIts willy nilly which one is used: ExecutableScript or SearchScript. And we don't even tell the script which one it needs to be at compile-time. Forget about return value, the slow hashmaps, etc: we can't even give a nice error if someone tries to use `_score` from an update script, because we don't know which one we are until runtime.\n\nI'm going to exit the issue, I don't think i will be very helpful. \n\nI just repeat, look here: https://benchmarks.elastic.co/index.html#search_qps_scripts\n\nWhy is expressions 50% faster than painless? It generates the equivalent code. The difference is that expressions bypasses the scripting API. \n\nI find it ironic we don't seem to care about leaving 50% performance on the table, yet at the same time fork a joda-time class (causing immense engineering frustrations) so that a date operation will be 10% faster.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/226868922","html_url":"https://github.com/elastic/elasticsearch/issues/18863#issuecomment-226868922","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18863","id":226868922,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNjg2ODkyMg==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2016-06-17T20:07:01Z","updated_at":"2016-06-17T20:07:01Z","author_association":"CONTRIBUTOR","body":"I would also make other major changes to the scripting API.\n\n1) I would prefer that the ScriptService only be responsible for compiling a script.  The CompiledScript that is handed back should be what actually executes the script.  It seems odd to me that I have to call back into the ScriptService with this object every time I want to execute a script.  (The CompiledScript can know what contexts it's allowed to run under.)\n2) I would move caching to the ScriptEngines.  Let the engines decide how to cache instead of having one big blob of random scripts in the service.  This would also prevent the one-off for callbacks into the Groovy ScriptEngine since it already does some form of its own caching.\n3) This one is probably unrealistic because of the way we store scripts and how we want to execute a single script against multiple indices, but it would be awesome if we could compile a script against an index so that we know the types of fields coming in.  One big benefit of Expressions is that it can assume all fields are doubles, and pretty much backdoors directly into Lucene to get the field data.  It would be nice if this was available to Painless as well.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/226935318","html_url":"https://github.com/elastic/elasticsearch/issues/18863#issuecomment-226935318","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18863","id":226935318,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNjkzNTMxOA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-18T10:47:42Z","updated_at":"2016-06-18T10:47:42Z","author_association":"CONTRIBUTOR","body":"@jdconrad you can do whatever you want there. I am all +1 to even deprecate the old API and build a new one that can be used only in search as a start. I am sure we are all on the same page and we want to make it to gain the 50% but I also think you guys know it best what needs to be done. Once the drama queen has calmed down and gets his willy nilly shit together I think everything is possible. Go ahead and make the changes.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/304765081","html_url":"https://github.com/elastic/elasticsearch/issues/18863#issuecomment-304765081","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18863","id":304765081,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNDc2NTA4MQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2017-05-30T03:14:05Z","updated_at":"2017-05-30T03:14:05Z","author_association":"MEMBER","body":"I'm going to close this because it duplicates #20426, which is the concrete issue to satisfy this problem.","performed_via_github_app":null}]