{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/41393","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41393/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41393/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41393/events","html_url":"https://github.com/elastic/elasticsearch/issues/41393","id":435313878,"node_id":"MDU6SXNzdWU0MzUzMTM4Nzg=","number":41393,"title":"Handle painless failures with data annotations, without shard failures","user":{"login":"Mekk","id":161873,"node_id":"MDQ6VXNlcjE2MTg3Mw==","avatar_url":"https://avatars2.githubusercontent.com/u/161873?v=4","gravatar_id":"","url":"https://api.github.com/users/Mekk","html_url":"https://github.com/Mekk","followers_url":"https://api.github.com/users/Mekk/followers","following_url":"https://api.github.com/users/Mekk/following{/other_user}","gists_url":"https://api.github.com/users/Mekk/gists{/gist_id}","starred_url":"https://api.github.com/users/Mekk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mekk/subscriptions","organizations_url":"https://api.github.com/users/Mekk/orgs","repos_url":"https://api.github.com/users/Mekk/repos","events_url":"https://api.github.com/users/Mekk/events{/privacy}","received_events_url":"https://api.github.com/users/Mekk/received_events","type":"User","site_admin":false},"labels":[{"id":146834791,"node_id":"MDU6TGFiZWwxNDY4MzQ3OTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Scripting","name":":Core/Infra/Scripting","color":"0e8a16","default":false,"description":"Scripting abstractions, Painless, and Mustache"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2019-04-19T21:47:46Z","updated_at":"2020-04-16T20:54:36Z","closed_at":"2020-04-16T20:54:36Z","author_association":"NONE","active_lock_reason":null,"body":"(I am not 100% sure how much of this is related to ES and how much to kibana)\r\n\r\nMy main painful point of using kibana scripted fields is that of error handling. I forgot to check for field presence, I tried accessing text field via fields aray, I called non-existing, function,… → I get dreaded \"N shards failed\" message and have to hunt elasticsearch logs for java stacks. Brr.\r\n\r\nIt would be great if I could opt to just  get the results instead, and have errors stored inside them (for example ```as _painless_script_failed: \"… error message …\"```). Then the problem description would be easily available, and the data which triggers the error could be simply seen in kibana\r\n\r\nIn fact I ended up doing that myself, by wrapping all my scripted fields with try/catch constructs doing exactly that – but such  boilerplate code doesn't seem a good idea in light field possibly intended to be sometimes written or patched even by less technical users.","closed_by":{"login":"stu-elastic","id":24232742,"node_id":"MDQ6VXNlcjI0MjMyNzQy","avatar_url":"https://avatars0.githubusercontent.com/u/24232742?v=4","gravatar_id":"","url":"https://api.github.com/users/stu-elastic","html_url":"https://github.com/stu-elastic","followers_url":"https://api.github.com/users/stu-elastic/followers","following_url":"https://api.github.com/users/stu-elastic/following{/other_user}","gists_url":"https://api.github.com/users/stu-elastic/gists{/gist_id}","starred_url":"https://api.github.com/users/stu-elastic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stu-elastic/subscriptions","organizations_url":"https://api.github.com/users/stu-elastic/orgs","repos_url":"https://api.github.com/users/stu-elastic/repos","events_url":"https://api.github.com/users/stu-elastic/events{/privacy}","received_events_url":"https://api.github.com/users/stu-elastic/received_events","type":"User","site_admin":false},"performed_via_github_app":null}