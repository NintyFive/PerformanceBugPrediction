{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/1128","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1128/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1128/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1128/events","html_url":"https://github.com/elastic/elasticsearch/issues/1128","id":1242480,"node_id":"MDU6SXNzdWUxMjQyNDgw","number":1128,"title":"Merging the terms from multiple sub-analyzers","user":{"login":"ofavre","id":95129,"node_id":"MDQ6VXNlcjk1MTI5","avatar_url":"https://avatars3.githubusercontent.com/u/95129?v=4","gravatar_id":"","url":"https://api.github.com/users/ofavre","html_url":"https://github.com/ofavre","followers_url":"https://api.github.com/users/ofavre/followers","following_url":"https://api.github.com/users/ofavre/following{/other_user}","gists_url":"https://api.github.com/users/ofavre/gists{/gist_id}","starred_url":"https://api.github.com/users/ofavre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ofavre/subscriptions","organizations_url":"https://api.github.com/users/ofavre/orgs","repos_url":"https://api.github.com/users/ofavre/repos","events_url":"https://api.github.com/users/ofavre/events{/privacy}","received_events_url":"https://api.github.com/users/ofavre/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":24,"created_at":"2011-07-18T15:46:19Z","updated_at":"2017-03-13T09:33:25Z","closed_at":"2013-02-01T10:31:52Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Multi-field is great, but searching with multiple analyzers against only one field is simpler/better.\nIf you have a multi-lingual index, where each document has its source language, you can analyze the text fields using a special analyzer, based on the detected language (maybe even using the [`_analyzer.path`](http://www.elasticsearch.org/guide/reference/mapping/analyzer-field.html) functionality).\nBut what happens when you misdetected the language somehow, either at index- or at query-time? Some aggressive stemming can have devastating effects.\n\nIn such a scenario, having the original words indexed in parallel to the stemmed one would help. Be they in the same field would even letting phrase/slop queries work properly.\nThe only way to get multiple terms at the same position with ElasticSearch is through the [synonym token filter](http://www.elasticsearch.org/guide/reference/index-modules/analysis/synonym-tokenfilter.html), useless for stemming.\n\nI've been working on a way to merge the terms that multiple analyzers output.\nSay you want both to use a [simple analyzer](http://www.elasticsearch.org/guide/reference/index-modules/analysis/simple-analyzer.html), and any of the specialized [language-specific analyzer](http://www.elasticsearch.org/guide/reference/index-modules/analysis/lang-analyzer.html), or anything.\nMy plugin can make it as simple as the following index setting:\n\n```\nindex:\n  analysis:\n    analyzer:\n      # An analyzer using both the \"simple\" analyzer and the sophisticated \"english\" analyzer, combining the resulting terms\n      combo_en:\n        type: combo\n        sub_analyzers: [simple, english]\n```\n\nHere is a simple example of what is does:\n\n``` bash\n# What the \"simple\" analyzer outputs\ncurl -XGET 'localhost:9200/yakaz/_analyze?pretty=1&analyzer=simple' -d 'An example'\n{\n  \"tokens\" : [ {\n    \"token\" : \"an\",\n    \"start_offset\" : 0,\n    \"end_offset\" : 2,\n    \"type\" : \"word\",\n    \"position\" : 1\n  }, {\n    \"token\" : \"example\",\n    \"start_offset\" : 3,\n    \"end_offset\" : 10,\n    \"type\" : \"word\",\n    \"position\" : 2\n  } ]\n}\n# What the \"english\" analyzer outputs\ncurl -XGET 'localhost:9200/yakaz/_analyze?pretty=1&analyzer=english' -d 'An example'\n{\n  \"tokens\" : [ {\n    \"token\" : \"exampl\",\n    \"start_offset\" : 3,\n    \"end_offset\" : 10,\n    \"type\" : \"<ALPHANUM>\",\n    \"position\" : 2\n  } ]\n}\n\n# Now what our combined analyzer outputs\ncurl -XGET 'localhost:9200/yakaz/_analyze?pretty=1&analyzer=combo_en' -d 'An example'\n{\n  \"tokens\" : [ {\n    \"token\" : \"an\",\n    \"start_offset\" : 0,\n    \"end_offset\" : 2,\n    \"type\" : \"word\",\n    \"position\" : 1\n  }, {\n    \"token\" : \"example\",\n    \"start_offset\" : 3,\n    \"end_offset\" : 10,\n    \"type\" : \"word\",\n    \"position\" : 2\n  }, {\n    \"token\" : \"exampl\",\n    \"start_offset\" : 3,\n    \"end_offset\" : 10,\n    \"type\" : \"<ALPHANUM>\",\n    \"position\" : 2\n  } ]\n}\n```\n\nTerms are sorted by position, then by start/end offset, so that it's easier to use its output under reasonable assumptions of using a classical analyzer.\n\nHere is the good news! You can find my implementation here: https://github.com/ofavre/elasticsearch/tree/combo-analyzer-v0.16.4 (based on released ElasticSearch version 0.16.4).\n\n**EDIT:** It is finally available as a plugin, thanks to jprante: https://github.com/yakaz/elasticsearch-analysis-combo.\n","closed_by":{"login":"ofavre","id":95129,"node_id":"MDQ6VXNlcjk1MTI5","avatar_url":"https://avatars3.githubusercontent.com/u/95129?v=4","gravatar_id":"","url":"https://api.github.com/users/ofavre","html_url":"https://github.com/ofavre","followers_url":"https://api.github.com/users/ofavre/followers","following_url":"https://api.github.com/users/ofavre/following{/other_user}","gists_url":"https://api.github.com/users/ofavre/gists{/gist_id}","starred_url":"https://api.github.com/users/ofavre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ofavre/subscriptions","organizations_url":"https://api.github.com/users/ofavre/orgs","repos_url":"https://api.github.com/users/ofavre/repos","events_url":"https://api.github.com/users/ofavre/events{/privacy}","received_events_url":"https://api.github.com/users/ofavre/received_events","type":"User","site_admin":false},"performed_via_github_app":null}