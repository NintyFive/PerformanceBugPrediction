{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/7412","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7412/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7412/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7412/events","html_url":"https://github.com/elastic/elasticsearch/issues/7412","id":40939177,"node_id":"MDU6SXNzdWU0MDkzOTE3Nw==","number":7412,"title":"`index` and `type` aggregations","user":{"login":"ofavre","id":95129,"node_id":"MDQ6VXNlcjk1MTI5","avatar_url":"https://avatars3.githubusercontent.com/u/95129?v=4","gravatar_id":"","url":"https://api.github.com/users/ofavre","html_url":"https://github.com/ofavre","followers_url":"https://api.github.com/users/ofavre/followers","following_url":"https://api.github.com/users/ofavre/following{/other_user}","gists_url":"https://api.github.com/users/ofavre/gists{/gist_id}","starred_url":"https://api.github.com/users/ofavre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ofavre/subscriptions","organizations_url":"https://api.github.com/users/ofavre/orgs","repos_url":"https://api.github.com/users/ofavre/repos","events_url":"https://api.github.com/users/ofavre/events{/privacy}","received_events_url":"https://api.github.com/users/ofavre/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-08-22T18:56:51Z","updated_at":"2014-08-22T22:03:47Z","closed_at":"2014-08-22T19:21:40Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"A `type` aggregation can easily emulated using a `terms` aggregation on the `_type` field, although it's a bit of a hack:\n\n``` json\n{\n  \"query\": {...},\n  \"aggs\": {\n    \"byType\": {\n      \"terms\": {\n        \"field\": \"_type\"\n      }\n      // any sub-aggs\n    }\n  }\n}\n```\n\nHowever if the query is run over multiple indices, it could come into handy to further know which index each type comes from.\nWith an `index` aggregation (and first class `type` aggregation) it would become as simple as:\n\n``` json\n{\n  \"query\": {...},\n  \"aggs\": {\n    \"byIndex\": {\n      \"index\": {},\n      \"aggs\": {\n        \"byType\": {\n          \"type\": {}\n          // any sub-aggs\n        }\n      }\n    }\n  }\n}\n```\n\nIn the same spirit as the `indices` query and filter, the `index` aggregation would be very easy to implement, merely putting every document into the only single bucket, corresponding to the index of the `SearchContext`.\nLikewise, the `type` aggregation is certainly quite simple to implement.\n","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}