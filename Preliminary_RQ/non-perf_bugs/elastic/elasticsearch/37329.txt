{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/37329","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37329/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37329/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37329/events","html_url":"https://github.com/elastic/elasticsearch/issues/37329","id":398019638,"node_id":"MDU6SXNzdWUzOTgwMTk2Mzg=","number":37329,"title":"Bring the user_agent processor in line with ECS","user":{"login":"webmat","id":2300,"node_id":"MDQ6VXNlcjIzMDA=","avatar_url":"https://avatars1.githubusercontent.com/u/2300?v=4","gravatar_id":"","url":"https://api.github.com/users/webmat","html_url":"https://github.com/webmat","followers_url":"https://api.github.com/users/webmat/followers","following_url":"https://api.github.com/users/webmat/following{/other_user}","gists_url":"https://api.github.com/users/webmat/gists{/gist_id}","starred_url":"https://api.github.com/users/webmat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/webmat/subscriptions","organizations_url":"https://api.github.com/users/webmat/orgs","repos_url":"https://api.github.com/users/webmat/repos","events_url":"https://api.github.com/users/webmat/events{/privacy}","received_events_url":"https://api.github.com/users/webmat/received_events","type":"User","site_admin":false},"labels":[{"id":268963484,"node_id":"MDU6TGFiZWwyNjg5NjM0ODQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Ingest","name":":Core/Features/Ingest","color":"0e8a16","default":false,"description":"Execution or management of Ingest Pipelines"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"assignees":[{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2019-01-10T21:20:18Z","updated_at":"2019-01-30T18:24:19Z","closed_at":"2019-01-30T18:24:19Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the context**\r\n\r\nIn developing ECS, we took a step back and took a critical look at the information we're looking for, when parsing a user agent. The current user_agent plugin for Ingest Node had a few issues, we found.\r\n\r\nLet's start with the default parsing for Chrome 70.0.3538.102 on Mac 10.14.1:\r\n\r\n`Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36`\r\n\r\nIs parsed as such:\r\n\r\n```JSON\r\n{\r\n  \"patch\" : \"3538\",\r\n  \"major\" : \"70\",\r\n  \"minor\" : \"0\",\r\n  \"os\" : \"Mac OS X 10.14.1\",\r\n  \"os_minor\" : \"14\",\r\n  \"os_major\" : \"10\",\r\n  \"name\" : \"Chrome\",\r\n  \"os_name\" : \"Mac OS X\",\r\n  \"device\" : \"Other\"\r\n}\r\n```\r\n\r\nTo follow ECS, the structure would ideally be:\r\n\r\n```JSON\r\n{\r\n  \"name\" : \"Chrome\",\r\n  \"original\" : \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36\",\r\n  \"os\" : {\r\n    \"name\" : \"Mac OS X\",\r\n    \"version\" : \"10.14.1\",\r\n    \"full\" : \"Mac OS X 10.14.1\"\r\n  },\r\n  \"device\" : \"Other\",\r\n  \"version\" : \"70.0.3538.102\"\r\n}\r\n```\r\n\r\nThere's a few things to notice here\r\n\r\n- By default, the versions are reported as a complete version string, not broken down. An option is still welcome, to output the breakdown of the version numbers.\r\n  - Also: full version strings make support for pre-release versions trivial (e.g. `-beta1`, `-rc2` etc.)\r\n- The original ua string is kept around, which can be made optional as well.\r\n\r\nIn translating multiple access log Filebeat modules to match ECS, I've had to repeatedly rename the fields around. Here are some examples:\r\n\r\n* Apache - all fields renamed, but the version numbers are still broken down (which is not in ECS). Currently most access log modules are implemented this way.\r\n  * [pipeline](https://github.com/elastic/beats/blob/529feda9377ca6df1da5c8f4bbaed89a7413158e/filebeat/module/apache2/access/ingest/default.json#L40-L80)\r\n  * [result](https://github.com/elastic/beats/blob/529feda9377ca6df1da5c8f4bbaed89a7413158e/filebeat/module/apache2/access/test/test.log-expected.json#L36-L44)\r\n* Traefik - fields renamed, and there's a hacky attempt at reconstructing full version fields :-)\r\n  * [pipeline](https://github.com/elastic/beats/blob/529feda9377ca6df1da5c8f4bbaed89a7413158e/filebeat/module/traefik/access/ingest/pipeline.json#L71-L118)\r\n  * [semi-successful version reconstruction](https://github.com/elastic/beats/blob/529feda9377ca6df1da5c8f4bbaed89a7413158e/filebeat/module/traefik/access/test/test.log-expected.json): Browsing around you'll see completely empty versions (`..`), partially reconstructed ones (`11.2.` instead of `11.2.5`) and successful reconstructions (`7.62.0`). Of course this can be cleaned up further to eliminate the noise.\r\n  * Note that this has not been released yet, and will not be released in its current form, this is an experiment ;-)\r\n\r\nI don't mind doing this in order to hit the 7.0 feature freeze in a pinch. But I think this will not be a good experience for users that try to follow ECS, when they use the user agent processor. They would benefit greatly from having the plugin follow ECS by default or via some easy to enable setting(s).\r\n\r\n**Describe the feature**\r\n\r\nCan we update the user agent parser to:\r\n\r\n- output field names following the ECS schema\r\n- output the full version string for the agent and for the OS\r\n- output the original agent string at `.original`\r\n\r\nI'm more than happy that we do this via one or more option flags.\r\n\r\ncc @ruflin","closed_by":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"performed_via_github_app":null}