{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/57297","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57297/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57297/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57297/events","html_url":"https://github.com/elastic/elasticsearch/issues/57297","id":626588280,"node_id":"MDU6SXNzdWU2MjY1ODgyODA=","number":57297,"title":"Deserialization of suggest responses not working","user":{"login":"royteeuwen","id":4967758,"node_id":"MDQ6VXNlcjQ5Njc3NTg=","avatar_url":"https://avatars0.githubusercontent.com/u/4967758?v=4","gravatar_id":"","url":"https://api.github.com/users/royteeuwen","html_url":"https://github.com/royteeuwen","followers_url":"https://api.github.com/users/royteeuwen/followers","following_url":"https://api.github.com/users/royteeuwen/following{/other_user}","gists_url":"https://api.github.com/users/royteeuwen/gists{/gist_id}","starred_url":"https://api.github.com/users/royteeuwen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/royteeuwen/subscriptions","organizations_url":"https://api.github.com/users/royteeuwen/orgs","repos_url":"https://api.github.com/users/royteeuwen/repos","events_url":"https://api.github.com/users/royteeuwen/events{/privacy}","received_events_url":"https://api.github.com/users/royteeuwen/received_events","type":"User","site_admin":false},"labels":[{"id":493198109,"node_id":"MDU6TGFiZWw0OTMxOTgxMDk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Java%20High%20Level%20REST%20Client","name":":Core/Features/Java High Level REST Client","color":"0e8a16","default":false,"description":"Expressive Java Client for Elasticsearch"},{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":1967496097,"node_id":"MDU6TGFiZWwxOTY3NDk2MDk3","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Core/Features","name":"Team:Core/Features","color":"fef2c0","default":false,"description":"Meta label for core/features team"},{"id":1967498216,"node_id":"MDU6TGFiZWwxOTY3NDk4MjE2","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Search","name":"Team:Search","color":"fef2c0","default":false,"description":"Meta label for search team"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2020-05-28T15:07:23Z","updated_at":"2020-06-03T09:05:17Z","closed_at":"2020-06-02T15:59:04Z","author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n**Elasticsearch version** 7.7.0\r\n\r\n**Plugins installed**: /\r\n\r\n**JVM version** (`java -version`): 11.0.6\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): macOS Catalina / Redhat 7\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nI am trying to create unit tests for classes that use the java high level rest client. To make this easier I am mocking the response that is given by elasticsearch so that all the business logic that happens can then be tested without an actual running elasticsearch.  The problem is that this mocking is not working.\r\n\r\nA sample query to Elasticsearch that we are testing:\r\n```\r\n{\r\n  \"suggest\": {\r\n    \"suggestion\": {\r\n      \"prefix\": \"all-possib\",\r\n      \"completion\": {\r\n        \"field\": \"pageTitle.completion\",\r\n        \"skip_duplicates\": true,\r\n        \"contexts\": {\r\n          \"siteName\": [\r\n            {\r\n              \"context\": \"nl\",\r\n              \"boost\": 1,\r\n              \"prefix\": false\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\nA sample rest response of Elasticsearch:\r\n```\r\n{\r\n  \"took\": 7,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 5,\r\n    \"successful\": 5,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 0,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": 0.0,\r\n    \"hits\": []\r\n  },\r\n  \"suggest\": {\r\n    \"suggestion\": [\r\n      {\r\n        \"text\": \"all-possib\",\r\n        \"offset\": 0,\r\n        \"length\": 10,\r\n        \"options\": [\r\n          {\r\n            \"text\": \"All possible\",\r\n            \"_index\": \"aem_pages_nl\",\r\n            \"_type\": \"page\",\r\n            \"_id\": \"allpossible\",\r\n            \"_score\": 1.0,\r\n            \"_source\": {\r\n              \"pageTitle\": \"All possible\",\r\n              \"pageDescription\": \"Nullam id dolor id nibh ultricies vehicula ut id elit.\",\r\n              \"path\": \"/content/my-site/nl/testpage/allpossible\",\r\n              \"SEOTitle\": \"All possible\",\r\n              \"SEODescription\": \"Nullam id dolor id nibh ultricies vehicula ut id elit.\",\r\n              \"language\": \"nl\",\r\n              \"offTimeString\": \"\",\r\n              \"onTimeString\": \"\",\r\n              \"lastModifiedRFC822\": \"Tue, 10 Mar 2020 11:06:59 +0100\",\r\n              \"tagsString\": \"Gezin\",\r\n              \"tagIds\": [\r\n                \"top-navigation:gezin\"\r\n              ],\r\n              \"siteName\": \"siteA\",\r\n              \"resourceType\": \"my\\/components\\/page\\/all-possible-page\",\r\n              \"shortResourceType\": \"all-possible-page\",\r\n              \"shortDescription\": \"Nullam id dolor id nibh ultricies vehicula ut id elit.\",\r\n              \"author\": \"\",\r\n              \"shortTitle\": \"All possible\",\r\n              \"extraPageInfo\": \"\",\r\n              \"boosting\": \"\"\r\n            },\r\n            \"contexts\": {\r\n              \"siteName\": [\r\n                \"siteA\"\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nParsing the SearchResponse from the JSON string:\r\n```\r\npublic static SearchResponse getSearchResponse(String json) {\r\n        try {\r\n            NamedXContentRegistry registry = new NamedXContentRegistry(getDefaultNamedXContents());\r\n            XContentParser parser = JsonXContent.jsonXContent.createParser(registry, DeprecationHandler.IGNORE_DEPRECATIONS, json);\r\n            return SearchResponse.fromXContent(parser);\r\n        } catch (IOException e) {\r\n            System.out.println(\"exception \" + e);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static List<NamedXContentRegistry.Entry> getDefaultNamedXContents() {\r\n        Map<String, ContextParser<Object, ? extends Aggregation>> map = new HashMap<>();\r\n        map.put(TopHitsAggregationBuilder.NAME, (p, c) -> ParsedTopHits.fromXContent(p, (String) c));\r\n        map.put(StringTerms.NAME, (p, c) -> ParsedStringTerms.fromXContent(p, (String) c));\r\n        List<NamedXContentRegistry.Entry> entries = map.entrySet().stream()\r\n                .map(entry -> new NamedXContentRegistry.Entry(Aggregation.class, new ParseField(entry.getKey()), entry.getValue()))\r\n                .collect(Collectors.toList());\r\n        return entries;\r\n    }\r\n```\r\n\r\nException being thrown:\r\n```\r\nParsingException[Could not parse suggestion keyed as [suggestion]\r\n]\r\n\tat org.elasticsearch.search.suggest.Suggest.fromXContent(Suggest.java:197)\r\n\tat org.elasticsearch.action.search.SearchResponse.innerFromXContent(SearchResponse.java:308)\r\n\tat org.elasticsearch.action.search.SearchResponse.fromXContent(SearchResponse.java:265)\r\n\tat my.application.SearchResponseUtil.getSearchResponse(SearchResponseUtil.java:29)\r\n```\r\n\r\nWhat would be a correct / good way to make this work? All our integration tests with a suggest in json response are failing because of this.\r\n\r\n\r\n\r\n\r\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}