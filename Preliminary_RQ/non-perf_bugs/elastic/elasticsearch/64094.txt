{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/64094","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/64094/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/64094/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/64094/events","html_url":"https://github.com/elastic/elasticsearch/issues/64094","id":728053403,"node_id":"MDU6SXNzdWU3MjgwNTM0MDM=","number":64094,"title":"big decimal value losed precision","user":{"login":"vpzlin","id":28708888,"node_id":"MDQ6VXNlcjI4NzA4ODg4","avatar_url":"https://avatars1.githubusercontent.com/u/28708888?v=4","gravatar_id":"","url":"https://api.github.com/users/vpzlin","html_url":"https://github.com/vpzlin","followers_url":"https://api.github.com/users/vpzlin/followers","following_url":"https://api.github.com/users/vpzlin/following{/other_user}","gists_url":"https://api.github.com/users/vpzlin/gists{/gist_id}","starred_url":"https://api.github.com/users/vpzlin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vpzlin/subscriptions","organizations_url":"https://api.github.com/users/vpzlin/orgs","repos_url":"https://api.github.com/users/vpzlin/repos","events_url":"https://api.github.com/users/vpzlin/events{/privacy}","received_events_url":"https://api.github.com/users/vpzlin/received_events","type":"User","site_admin":false},"labels":[{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":2042400575,"node_id":"MDU6TGFiZWwyMDQyNDAwNTc1","url":"https://api.github.com/repos/elastic/elasticsearch/labels/needs:triage","name":"needs:triage","color":"c5def5","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-10-23T09:15:54Z","updated_at":"2020-10-27T01:32:55Z","closed_at":"2020-10-26T09:27:18Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\nGitHub is reserved for bug reports and feature requests; it is not the place\r\nfor general questions. If you have a question or an unconfirmed bug , please\r\nvisit the [forums](https://discuss.elastic.co/c/elasticsearch).  Please also\r\ncheck your OS is [supported](https://www.elastic.co/support/matrix#show_os).\r\nIf it is not, the issue is likely to be closed.\r\n\r\nFor security vulnerabilities please only send reports to security@elastic.co.\r\nSee https://www.elastic.co/community/security for more information.\r\n\r\nPlease fill in the following details to help us reproduce the bug:\r\n-->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 6.4.2 / 6.8.9 / 7.9.0\r\n\r\n**Plugins installed**: [none]\r\n\r\n**JVM version** (`java -version`): 1.8\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): CentOS 7.7\r\n\r\n**Description of the problem including expected versus actual behavior**: \r\n\r\nHello, ES team!\r\nThere is a precision losing problem when I'm using java client of ElasticSearch.\r\nWill you fix this bug recently? We do need a big decimal in developing financial system.\r\nThanks very much!\r\n\r\n[Development Environment]\r\n    JDK: 1.8\r\n    ElasticSearch Server Version: 6.4.2 / 6.8.9 / 7.9.0\r\n    ElasticSearch Client Version: 6.4.2 / 6.8.9 / 7.9.0\r\n    \r\n[Mapping]\r\n    PUT test_idx/_doc/_mapping\r\n    {\r\n      \"properties\": {\r\n        \"balance\":{\"type\": \"double\"}\r\n      }\r\n    }\r\n    \r\n[Main Codes & Results -- version of java client and ES server: 6.4.2 / 6.8.9]\r\n    BigDecimal val = new BigDecimal(\"12345678901234567890.12345\");\r\n    JSONObject jsonObject = new JSONObject();\r\n    jsonObject.put(\"balance\", val);\r\n    \r\n    /* Single Put */\r\n    // The field 'balance' in curl result by shell showed the correct value '12345678901234567890.12345'\r\n    client.index(new IndexRequest(\"test_idx\", \"_doc\", \"1\").source(jsonObject.toJSONString(), XContentType.JSON)\r\n            ,RequestOptions.DEFAULT);\r\n\r\n    /* Bulk Load */\r\n    // The field 'balance' in curl result by shell showed the precision losing value '1.2345678901234567E19'\r\n    BulkRequest bulkRequest = new BulkRequest();\r\n    bulkRequest.add(new IndexRequest(\"test_idx\", \"_doc\", \"2\").source(jsonObject.toJSONString(), XContentType.JSON));\r\n    client.bulk(bulkRequest, RequestOptions.DEFAULT);\r\n\r\n[Main Codes & Results -- version of java client and ES server: 7.9.0]\r\n    BigDecimal val = new BigDecimal(\"12345678901234567890.12345\");\r\n    JSONObject jsonObject = new JSONObject();\r\n    jsonObject.put(\"balance\", val);\r\n    \r\n    /* Single Put */\r\n    // The field 'balance' in curl result by shell showed the correct value '12345678901234567890.12345'\r\n    client.index(new IndexRequest(\"test_idx\").source(jsonObject.toJSONString(), XContentType.JSON)\r\n            ,RequestOptions.DEFAULT);\r\n\r\n    /* Bulk Load */\r\n    // The field 'balance' in curl result by shell showed the precision losing value '1.2345678901234567E19'\r\n    BulkRequest bulkRequest = new BulkRequest();\r\n    bulkRequest.add(new IndexRequest(\"test_idx\").source(jsonObject.toJSONString(), XContentType.JSON));\r\n    client.bulk(bulkRequest, RequestOptions.DEFAULT);\r\n\r\n[Debug and Modify code in java client of ES 7.9.0]\r\n    From the results above in different version we can see that it'll losing precision when bulk loading data into ES.\r\n    So I debugged code, and I found this bug occured in function '_parseSlowFloat(int expType)' of class 'jackon-core-2.10.4.jar/com.fasterxml.jackson.core.base.ParserBase', the value of variable 'expType' is always 0(int value) from begging, it havn't changged, so the non-int numeric value will be regarded as type 'double' always.\r\n    And then, I done these:\r\n      [1] downloaded the source code 'jackson-core-2.10.4-sources.jar' and decompressed it into my project.\r\n      [2] altered code\r\n          /********* before *********/\r\n            if (expType == NR_BIGDECIMAL) {\r\n                _numberBigDecimal = _textBuffer.contentsAsDecimal();\r\n                _numTypesValid = NR_BIGDECIMAL;\r\n            } else {\r\n                // Otherwise double has to do\r\n                _numberDouble = _textBuffer.contentsAsDouble();\r\n                _numTypesValid = NR_DOUBLE;\r\n            }\r\n          /********* after *********/\r\n            _numberBigDecimal = _textBuffer.contentsAsDecimal();\r\n            _numTypesValid = NR_BIGDECIMAL;\r\n      [3] rerun bulk load code to ES, field 'balance' in curl result by shell showed the correct value '12345678901234567890.12345'\r\n\r\n","closed_by":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}