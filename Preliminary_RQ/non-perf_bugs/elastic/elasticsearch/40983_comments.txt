[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/480992262","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-480992262","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":480992262,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDk5MjI2Mg==","user":{"login":"randallwhitman","id":3411515,"node_id":"MDQ6VXNlcjM0MTE1MTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3411515?v=4","gravatar_id":"","url":"https://api.github.com/users/randallwhitman","html_url":"https://github.com/randallwhitman","followers_url":"https://api.github.com/users/randallwhitman/followers","following_url":"https://api.github.com/users/randallwhitman/following{/other_user}","gists_url":"https://api.github.com/users/randallwhitman/gists{/gist_id}","starred_url":"https://api.github.com/users/randallwhitman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/randallwhitman/subscriptions","organizations_url":"https://api.github.com/users/randallwhitman/orgs","repos_url":"https://api.github.com/users/randallwhitman/repos","events_url":"https://api.github.com/users/randallwhitman/events{/privacy}","received_events_url":"https://api.github.com/users/randallwhitman/received_events","type":"User","site_admin":false},"created_at":"2019-04-08T20:21:23Z","updated_at":"2019-04-08T20:21:23Z","author_association":"NONE","body":"To add to what Hanoch posted, there is a lot of historical data that one might want to store.  One tiny example could be:\r\n\r\nName | Date\r\n-- | --\r\nCharles Babbage | 1791-12-26\r\nAda Lovelace | 1815-12-10\r\n\r\nAs an example at a much larger scale, an organization could very well be interested in extending a dataset like [GDELT](https://gdeltproject.org) farther into the past.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/481050162","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-481050162","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":481050162,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTA1MDE2Mg==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2019-04-08T23:58:23Z","updated_at":"2019-04-08T23:58:23Z","author_association":"MEMBER","body":"> To add to what Hanoch posted, there is a lot of historical data that one might want to store.\r\n\r\nTo clarify, you're not prevented from indexing historical data, only that we did not build support for negative timestamps into `epoch_millis`.\r\n\r\n> As an example at a much larger scale, an organization could very well be interested in extending a dataset like [GDELT](https://gdeltproject.org/) farther into the past.\r\n\r\nI could be misreading the source material, but it doesn't appear to me that GDELT uses `epoch_millis`, instead a rudimentary [`YYYYMMDD`](http://data.gdeltproject.org/documentation/GDELT-Data_Format_Codebook.pdf) format. Again, the fact that `epoch_millis` does not allow negative timestamps does not imply that dates before 1970 (the epoch) are not supported.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/481054277","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-481054277","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":481054277,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTA1NDI3Nw==","user":{"login":"dsshane","id":15656251,"node_id":"MDQ6VXNlcjE1NjU2MjUx","avatar_url":"https://avatars0.githubusercontent.com/u/15656251?v=4","gravatar_id":"","url":"https://api.github.com/users/dsshane","html_url":"https://github.com/dsshane","followers_url":"https://api.github.com/users/dsshane/followers","following_url":"https://api.github.com/users/dsshane/following{/other_user}","gists_url":"https://api.github.com/users/dsshane/gists{/gist_id}","starred_url":"https://api.github.com/users/dsshane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsshane/subscriptions","organizations_url":"https://api.github.com/users/dsshane/orgs","repos_url":"https://api.github.com/users/dsshane/repos","events_url":"https://api.github.com/users/dsshane/events{/privacy}","received_events_url":"https://api.github.com/users/dsshane/received_events","type":"User","site_admin":false},"created_at":"2019-04-09T00:19:55Z","updated_at":"2019-04-09T00:19:55Z","author_association":"NONE","body":"@jasontedor for existed negative epoch_mills, will the reindex API automatically do the conversion when migrating from 6.x to 7.x?  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/481199194","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-481199194","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":481199194,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTE5OTE5NA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-04-09T10:40:53Z","updated_at":"2019-04-09T10:40:53Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/481286829","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-481286829","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":481286829,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTI4NjgyOQ==","user":{"login":"hanoch","id":1561905,"node_id":"MDQ6VXNlcjE1NjE5MDU=","avatar_url":"https://avatars0.githubusercontent.com/u/1561905?v=4","gravatar_id":"","url":"https://api.github.com/users/hanoch","html_url":"https://github.com/hanoch","followers_url":"https://api.github.com/users/hanoch/followers","following_url":"https://api.github.com/users/hanoch/following{/other_user}","gists_url":"https://api.github.com/users/hanoch/gists{/gist_id}","starred_url":"https://api.github.com/users/hanoch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanoch/subscriptions","organizations_url":"https://api.github.com/users/hanoch/orgs","repos_url":"https://api.github.com/users/hanoch/repos","events_url":"https://api.github.com/users/hanoch/events{/privacy}","received_events_url":"https://api.github.com/users/hanoch/received_events","type":"User","site_admin":false},"created_at":"2019-04-09T14:54:43Z","updated_at":"2019-04-09T14:54:43Z","author_association":"NONE","body":"> To clarify, you're not prevented from indexing historical data, only that we did not build support for negative timestamps into `epoch_millis`.\r\n\r\nTo clarify - the support for for negative timestamps in the `epoch_millis` format was always there, and was removed with v7.0.0 rc.\r\n\r\nAs I mentioned in the issue description -\r\nWe are aware of the workaround to switch to use the `ISO 8601` string representation of the date values and set the field value to use that date field format rather than the `epoch_millis` format, but we are concerned about the need to change our code-bases and products from using the epoch long values to the `ISO 8601` string values because of:\r\n1. Performance hit needing to convert between Java/Scala Date/Instant objects and the `ISO 8601` strings. Having the Java/Scala implementation use the epoch long is more performing than having the need to parse (and generate) strings.\r\n2. We will need to change our implementations and APIs anywhere we need to write and read date field values, as well as query against date fields (see also #39375).\r\n3. We will need to write new special logic to upgrade existing user's data that was created by an older version of Elasticsearch (e.g. v6.4.2, v5.5.0, etc.).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/481299407","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-481299407","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":481299407,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTI5OTQwNw==","user":{"login":"randallwhitman","id":3411515,"node_id":"MDQ6VXNlcjM0MTE1MTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3411515?v=4","gravatar_id":"","url":"https://api.github.com/users/randallwhitman","html_url":"https://github.com/randallwhitman","followers_url":"https://api.github.com/users/randallwhitman/followers","following_url":"https://api.github.com/users/randallwhitman/following{/other_user}","gists_url":"https://api.github.com/users/randallwhitman/gists{/gist_id}","starred_url":"https://api.github.com/users/randallwhitman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/randallwhitman/subscriptions","organizations_url":"https://api.github.com/users/randallwhitman/orgs","repos_url":"https://api.github.com/users/randallwhitman/repos","events_url":"https://api.github.com/users/randallwhitman/events{/privacy}","received_events_url":"https://api.github.com/users/randallwhitman/received_events","type":"User","site_admin":false},"created_at":"2019-04-09T15:24:20Z","updated_at":"2019-04-09T15:24:36Z","author_association":"NONE","body":"> To clarify, you're not prevented from indexing historical data, only that we did not build support for negative timestamps into `epoch_millis`.\r\n\r\nIn addition to merely storing it, we are interested in the performance of date handling.\r\n\r\n> I could be misreading the source material, but it doesn't appear to me that GDELT uses `epoch_millis`.\r\n\r\nWhat the GDELT project itself does it immaterial to using it as in illustration of something an organization may want to do - and with performant date handling.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/481355247","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-481355247","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":481355247,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTM1NTI0Nw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2019-04-09T17:33:29Z","updated_at":"2019-04-09T17:33:29Z","author_association":"MEMBER","body":">What the GDELT project itself does it immaterial to using it as in illustration of something an organization may want to do - and with performant date handling.\r\n\r\nIt's material in so far as this issue is about negative timestamps and `epoch_millis` and neither of the examples [given](https://github.com/elastic/elasticsearch/issues/40983#issuecomment-480992262) are about negative timestamps based on `epoch_millis`. Without clarifying that, they carried the risk of confusing others into thinking that historical dates before the epoch are not supported, as the comment seemed to suggest. I am trying to make it clear that while support for negative timestamps has been deprecated in 6.7.0 and removed, that does not imply that dates before the epoch are not supported: they are very much still supported. On 7.0.0-rc2 both the example given in the formats they are given in are fully supported.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/486786539","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-486786539","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":486786539,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Njc4NjUzOQ==","user":{"login":"hanoch","id":1561905,"node_id":"MDQ6VXNlcjE1NjE5MDU=","avatar_url":"https://avatars0.githubusercontent.com/u/1561905?v=4","gravatar_id":"","url":"https://api.github.com/users/hanoch","html_url":"https://github.com/hanoch","followers_url":"https://api.github.com/users/hanoch/followers","following_url":"https://api.github.com/users/hanoch/following{/other_user}","gists_url":"https://api.github.com/users/hanoch/gists{/gist_id}","starred_url":"https://api.github.com/users/hanoch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanoch/subscriptions","organizations_url":"https://api.github.com/users/hanoch/orgs","repos_url":"https://api.github.com/users/hanoch/repos","events_url":"https://api.github.com/users/hanoch/events{/privacy}","received_events_url":"https://api.github.com/users/hanoch/received_events","type":"User","site_admin":false},"created_at":"2019-04-25T18:27:27Z","updated_at":"2019-04-25T18:41:50Z","author_association":"NONE","body":"If we are to switch our implementation for newly created indices at Elasticsearch v7.x to use the ISO 8601 string format for date field values, what is your recommendation on how to define the date field format in the index (template) mapping?\r\n- Today, we are setting it specifically to \"epoch_millis\".\r\n- Should we not define the format for date fields to allow the format to default to the default format \"strict_date_optional_time||epoch_millis\"?\r\n  - see also https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-date-format.html#strict-date-time\r\n- Should we set the date field format to another specific format to be able to use ISO 8601 string date values in the most performant index and search way?\r\n- Regarding nano-second precision - will the default format allow us to use nano-second date values or is it a completely different field type (\"date_nanos\")?\r\n  - see also https://www.elastic.co/guide/en/elasticsearch/reference/current/date_nanos.html#date_nanos\r\n\r\nWe are thinking to remove the date format from the index (template) mapping to allow it to default to the default \"strict_date_optional_time||epoch_millis\" value, but looking for some kind of confirmation that that approach is the correct and recommended one from both performance as well as functionality (support ISO 8601 string date values as well as positive epoch_millis long date values) point of view.\r\n\r\nIs the 8601 string date format as performing as the epoch_millis long date format, from an index & query/search time point of view?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/487197013","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-487197013","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":487197013,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzE5NzAxMw==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2019-04-26T20:49:59Z","updated_at":"2019-04-26T20:49:59Z","author_association":"MEMBER","body":"> Should we not define the format for date fields to allow the format to default to the default format \"strict_date_optional_time||epoch_millis\"?\r\n\r\nBased on your later comment, it seems you are planning to sometimes pass epoch millis, and sometimes pass ISO 8601 dates? If that is the case, and epoch millis would be used for most dates (all dates after 1970), you might consider still setting the format, but reversing the order so that `epoch_millis` is checked first.\r\n\r\n> Should we set the date field format to another specific format to be able to use ISO 8601 string date values in the most performant index and search way?\r\n\r\nWe already recommend doing your own performance tests, as each use case is different. Switching the ordering of formats as suggested above *could* help with performance depending on the workload.\r\n\r\n> Regarding nano-second precision - will the default format allow us to use nano-second date values or is it a completely different field type (\"date_nanos\")?\r\n\r\nCorrect, the `date_nanos` field type is required to use nanosecond precision. You can, however, set date formats on the `date_nanos` field type just as with the `date` type.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/487200336","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-487200336","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":487200336,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzIwMDMzNg==","user":{"login":"hanoch","id":1561905,"node_id":"MDQ6VXNlcjE1NjE5MDU=","avatar_url":"https://avatars0.githubusercontent.com/u/1561905?v=4","gravatar_id":"","url":"https://api.github.com/users/hanoch","html_url":"https://github.com/hanoch","followers_url":"https://api.github.com/users/hanoch/followers","following_url":"https://api.github.com/users/hanoch/following{/other_user}","gists_url":"https://api.github.com/users/hanoch/gists{/gist_id}","starred_url":"https://api.github.com/users/hanoch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanoch/subscriptions","organizations_url":"https://api.github.com/users/hanoch/orgs","repos_url":"https://api.github.com/users/hanoch/repos","events_url":"https://api.github.com/users/hanoch/events{/privacy}","received_events_url":"https://api.github.com/users/hanoch/received_events","type":"User","site_admin":false},"created_at":"2019-04-26T21:03:17Z","updated_at":"2019-04-26T21:03:17Z","author_association":"NONE","body":"\r\nSome clarifications:\r\n\r\n#### Clarification 1\r\n> Based on your later comment, it seems you are planning to sometimes pass epoch millis, and sometimes pass ISO 8601 dates? If that is the case, and epoch millis would be used for most dates (all dates after 1970), you might consider still setting the format, but reversing the order so that `epoch_millis` is checked first.\r\n\r\nIf we are to always only pass ISO 8601 dates (since we are not sure if the data might or might not have dates before 1970), what would be your recommendation:\r\n1. Should we not define the format for date fields to allow the format to default to the default \"strict_date_optional_time||epoch_millis\" format , or\r\n2. Set the format to \"strict_date_optional_time\" (is that the most performing format that supports the ISO 8601 string date values?), or\r\n3. Set the format to some other better performing recommended format that supports the ISO 8601 string date values?\r\n\r\n#### Clarification 2\r\nFor Indices we know we don't need to support date values before 1970, which format is more performing - `epoch_millis` or the ISO 8601 string format (`strict_date_optional_time` ???)?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/487253300","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-487253300","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":487253300,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzI1MzMwMA==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2019-04-27T04:19:46Z","updated_at":"2019-04-27T04:19:46Z","author_association":"MEMBER","body":"I can't give any concrete recommendation based on performance, as I have not done any performance tests of these date formats. It is hard to say whether either would be any faster than the other in practice. It would depend heavily on things like ingestion rate, document size, number of mapped fields, etc.  This is why we recommend doing your own performance tests.\r\n\r\nAs for whether to set one or many formats, that completely depends on if you will use the multiple formats. And for the order, I would put the most commonly used first.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/488167280","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-488167280","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":488167280,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4ODE2NzI4MA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-05-01T01:05:23Z","updated_at":"2019-05-01T01:05:23Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/496449040","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-496449040","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":496449040,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NjQ0OTA0MA==","user":{"login":"Jamalarm","id":12399497,"node_id":"MDQ6VXNlcjEyMzk5NDk3","avatar_url":"https://avatars2.githubusercontent.com/u/12399497?v=4","gravatar_id":"","url":"https://api.github.com/users/Jamalarm","html_url":"https://github.com/Jamalarm","followers_url":"https://api.github.com/users/Jamalarm/followers","following_url":"https://api.github.com/users/Jamalarm/following{/other_user}","gists_url":"https://api.github.com/users/Jamalarm/gists{/gist_id}","starred_url":"https://api.github.com/users/Jamalarm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jamalarm/subscriptions","organizations_url":"https://api.github.com/users/Jamalarm/orgs","repos_url":"https://api.github.com/users/Jamalarm/repos","events_url":"https://api.github.com/users/Jamalarm/events{/privacy}","received_events_url":"https://api.github.com/users/Jamalarm/received_events","type":"User","site_admin":false},"created_at":"2019-05-28T09:56:26Z","updated_at":"2019-05-28T09:56:26Z","author_association":"NONE","body":"This issue has also hit us. We usually store `epoch_millis` values well after 1970, but an app user of ours decided to change their device clock to 1920 for some reason. This change is a real problem for us as we want to store and analyse these outliers without having to write a bunch of extra code around it.\r\n\r\n1. We now have to write some logic on all of our `date` fields so \"if the incoming value is negative, store it as a ISO string rather than a long\". This is messy and pollutes the field types of our POJOs (they can't just be `long` values anymore, they need to somehow store both options).\r\n1. Similarly, on our reading side, we have to do the opposite \"if this date field comes back as a string, convert it back to a long\" in order to make our API consistent for our consumers.\r\n\r\nGiven that the dates are stored as longs internally anyway, it seems really silly to have to do all this hacking on the outside for older dates. A workaround could be to simply always use strings, but this would add a overhead of constantly printing and parsing ISO datetime strings that is simply not needed.\r\n\r\nIs there any chance we could get this regression addressed?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/521895337","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-521895337","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":521895337,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMTg5NTMzNw==","user":{"login":"hanoch","id":1561905,"node_id":"MDQ6VXNlcjE1NjE5MDU=","avatar_url":"https://avatars0.githubusercontent.com/u/1561905?v=4","gravatar_id":"","url":"https://api.github.com/users/hanoch","html_url":"https://github.com/hanoch","followers_url":"https://api.github.com/users/hanoch/followers","following_url":"https://api.github.com/users/hanoch/following{/other_user}","gists_url":"https://api.github.com/users/hanoch/gists{/gist_id}","starred_url":"https://api.github.com/users/hanoch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanoch/subscriptions","organizations_url":"https://api.github.com/users/hanoch/orgs","repos_url":"https://api.github.com/users/hanoch/repos","events_url":"https://api.github.com/users/hanoch/events{/privacy}","received_events_url":"https://api.github.com/users/hanoch/received_events","type":"User","site_admin":false},"created_at":"2019-08-16T06:00:58Z","updated_at":"2019-08-16T06:00:58Z","author_association":"NONE","body":"What is the status of this issue in the 7.3.0 release?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/522015622","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-522015622","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":522015622,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMjAxNTYyMg==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2019-08-16T13:50:21Z","updated_at":"2019-08-16T13:50:21Z","author_association":"MEMBER","body":"@hanoch There is no change in the 7.3.0 release.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/526297915","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-526297915","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":526297915,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjI5NzkxNQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2019-08-29T18:04:56Z","updated_at":"2019-08-29T18:04:56Z","author_association":"MEMBER","body":"@hanoch @Jamalarm We really appreciate the feedback on date usage; it is always welcome. Early feedback especially helps us prevent surprising changes that slip through without proper communication. In this case, we probably should have done a better job before 7.0 identifying this as a potential pain point for upgrade, and we are sorry for that. \r\n\r\nI realized in reading back through this issue I had never given a proper explanation of what caused the change in the first place. The underlying issue is a difference in how Joda and Java 8 represent instants. Joda internally represented these as milliseconds, while java represents epoch seconds and fractions separately, where the fraction is always positive. Due to how Java 8 date parsers work, these values are parsed independently, so we have no (easy) way of keeping track of negative fractional time (less than one second before epoch) because the negative is lost from the 0 seconds. When originally working on the migration to java 8 time, I had an idea for how to work around this, but it would require several hundred lines of code and many more for tests as well. \r\n\r\nWhile we understand that such an edge case an be frustrating, we also think negative epoch values in general are uncommon. Since ISO date times (and other formats) still work to represent dates both before and after epoch, we don't think the overhead of that additional code is worth the maintenance complexity. Thus, we do not plan to make any change to this behavior. Given that, I hope you don't mind that I close this issue.  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/526306821","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-526306821","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":526306821,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjMwNjgyMQ==","user":{"login":"hanoch","id":1561905,"node_id":"MDQ6VXNlcjE1NjE5MDU=","avatar_url":"https://avatars0.githubusercontent.com/u/1561905?v=4","gravatar_id":"","url":"https://api.github.com/users/hanoch","html_url":"https://github.com/hanoch","followers_url":"https://api.github.com/users/hanoch/followers","following_url":"https://api.github.com/users/hanoch/following{/other_user}","gists_url":"https://api.github.com/users/hanoch/gists{/gist_id}","starred_url":"https://api.github.com/users/hanoch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanoch/subscriptions","organizations_url":"https://api.github.com/users/hanoch/orgs","repos_url":"https://api.github.com/users/hanoch/repos","events_url":"https://api.github.com/users/hanoch/events{/privacy}","received_events_url":"https://api.github.com/users/hanoch/received_events","type":"User","site_admin":false},"created_at":"2019-08-29T18:28:55Z","updated_at":"2019-08-29T18:29:02Z","author_association":"NONE","body":"@rjernst So according to your explanation above - the only limitation of using epoch_millis values are for values that represent milliseconds of the last second before the epoch (the last second of the year 1970 UTC). These values are blocked from being indexed, but all other positive and negative epoch_millis values are allowed. Please confirm.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/526337523","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-526337523","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":526337523,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjMzNzUyMw==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2019-08-29T19:57:42Z","updated_at":"2019-08-29T19:57:42Z","author_association":"MEMBER","body":"Sorry for the confusion @hanoch. All negative values are disallowed, *because* of this edge case in negative handling. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/676578378","html_url":"https://github.com/elastic/elasticsearch/issues/40983#issuecomment-676578378","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40983","id":676578378,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NjU3ODM3OA==","user":{"login":"jmaasing","id":871057,"node_id":"MDQ6VXNlcjg3MTA1Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/871057?v=4","gravatar_id":"","url":"https://api.github.com/users/jmaasing","html_url":"https://github.com/jmaasing","followers_url":"https://api.github.com/users/jmaasing/followers","following_url":"https://api.github.com/users/jmaasing/following{/other_user}","gists_url":"https://api.github.com/users/jmaasing/gists{/gist_id}","starred_url":"https://api.github.com/users/jmaasing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmaasing/subscriptions","organizations_url":"https://api.github.com/users/jmaasing/orgs","repos_url":"https://api.github.com/users/jmaasing/repos","events_url":"https://api.github.com/users/jmaasing/events{/privacy}","received_events_url":"https://api.github.com/users/jmaasing/received_events","type":"User","site_admin":false},"created_at":"2020-08-19T18:06:33Z","updated_at":"2020-08-19T18:06:33Z","author_association":"NONE","body":"I got hit by this. We have epoch millis in our source data, representing points in time before 1970. Nowhere in\r\n\r\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/date.html\r\n\r\nis it mentioned that negative epoch millis throws errors :-( could maybe documentation be improved?","performed_via_github_app":null}]