{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/58113","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/58113/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/58113/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/58113/events","html_url":"https://github.com/elastic/elasticsearch/issues/58113","id":638893601,"node_id":"MDU6SXNzdWU2Mzg4OTM2MDE=","number":58113,"title":"Failure of \"indices.freeze/10_basic/Cannot freeze write index for data stream\" test case","user":{"login":"przemekwitek","id":19312454,"node_id":"MDQ6VXNlcjE5MzEyNDU0","avatar_url":"https://avatars3.githubusercontent.com/u/19312454?v=4","gravatar_id":"","url":"https://api.github.com/users/przemekwitek","html_url":"https://github.com/przemekwitek","followers_url":"https://api.github.com/users/przemekwitek/followers","following_url":"https://api.github.com/users/przemekwitek/following{/other_user}","gists_url":"https://api.github.com/users/przemekwitek/gists{/gist_id}","starred_url":"https://api.github.com/users/przemekwitek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/przemekwitek/subscriptions","organizations_url":"https://api.github.com/users/przemekwitek/orgs","repos_url":"https://api.github.com/users/przemekwitek/repos","events_url":"https://api.github.com/users/przemekwitek/events{/privacy}","received_events_url":"https://api.github.com/users/przemekwitek/received_events","type":"User","site_admin":false},"labels":[{"id":1915711992,"node_id":"MDU6TGFiZWwxOTE1NzExOTky","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Data%20streams","name":":Core/Features/Data streams","color":"0e8a16","default":false,"description":""},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"},{"id":1967496097,"node_id":"MDU6TGFiZWwxOTY3NDk2MDk3","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Core/Features","name":"Team:Core/Features","color":"fef2c0","default":false,"description":"Meta label for core/features team"},{"id":1194435738,"node_id":"MDU6TGFiZWwxMTk0NDM1NzM4","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v8.0.0","name":"v8.0.0","color":"dddddd","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"danhermann","id":22777892,"node_id":"MDQ6VXNlcjIyNzc3ODky","avatar_url":"https://avatars0.githubusercontent.com/u/22777892?v=4","gravatar_id":"","url":"https://api.github.com/users/danhermann","html_url":"https://github.com/danhermann","followers_url":"https://api.github.com/users/danhermann/followers","following_url":"https://api.github.com/users/danhermann/following{/other_user}","gists_url":"https://api.github.com/users/danhermann/gists{/gist_id}","starred_url":"https://api.github.com/users/danhermann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danhermann/subscriptions","organizations_url":"https://api.github.com/users/danhermann/orgs","repos_url":"https://api.github.com/users/danhermann/repos","events_url":"https://api.github.com/users/danhermann/events{/privacy}","received_events_url":"https://api.github.com/users/danhermann/received_events","type":"User","site_admin":false},"assignees":[{"login":"danhermann","id":22777892,"node_id":"MDQ6VXNlcjIyNzc3ODky","avatar_url":"https://avatars0.githubusercontent.com/u/22777892?v=4","gravatar_id":"","url":"https://api.github.com/users/danhermann","html_url":"https://github.com/danhermann","followers_url":"https://api.github.com/users/danhermann/followers","following_url":"https://api.github.com/users/danhermann/following{/other_user}","gists_url":"https://api.github.com/users/danhermann/gists{/gist_id}","starred_url":"https://api.github.com/users/danhermann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danhermann/subscriptions","organizations_url":"https://api.github.com/users/danhermann/orgs","repos_url":"https://api.github.com/users/danhermann/repos","events_url":"https://api.github.com/users/danhermann/events{/privacy}","received_events_url":"https://api.github.com/users/danhermann/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2020-06-15T14:20:54Z","updated_at":"2020-06-15T15:07:11Z","closed_at":"2020-06-15T15:07:11Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Build scan**:\r\n\r\n\r\nBuild Scans | https://gradle-enterprise.elastic.co/s/5u7b2zyqx7qaw\r\n\r\n**Repro line**:\r\n\r\nREPRODUCE WITH: ./gradlew ':x-pack:plugin:integTestRunner' --tests \"org.elasticsearch.xpack.test.rest.XPackRestIT\" \\\r\n  -Dtests.method=\"test {p0=indices.freeze/10_basic/Cannot freeze write index for data stream}\" \\\r\n  -Dtests.seed=8485F72911B39C9F \\\r\n  -Dtests.security.manager=true \\\r\n  -Dtests.locale=ro \\\r\n  -Dtests.timezone=BST \\\r\n  -Druntime.java=11 \\\r\n  -Dtests.rest.blacklist=getting_started/10_monitor_cluster_health/*\r\n\r\nREPRODUCE WITH: ./gradlew ':x-pack:plugin:integTestRunner' --tests \"org.elasticsearch.xpack.test.rest.XPackRestIT\" \\\r\n  -Dtests.method=\"test {p0=indices.freeze/10_basic/Cannot freeze write index for data stream}\" \\\r\n  -Dtests.seed=8485F72911B39C9F \\\r\n  -Dtests.security.manager=true \\\r\n  -Dtests.locale=ro \\\r\n  -Dtests.timezone=BST \\\r\n  -Druntime.java=11 \\\r\n  -Dtests.rest.blacklist=getting_started/10_monitor_cluster_health/*\r\n\r\n**Reproduces locally?**:\r\n\r\nin progress...\r\n\r\n**Applicable branches**:\r\n\r\nmaster\r\n\r\n**Failure history**:\r\n\r\nno history\r\n\r\n**Failure excerpt**:\r\n\r\n```\r\n16:03:22 org.elasticsearch.xpack.test.rest.XPackRestIT > test {p0=indices.freeze/10_basic/Cannot freeze write index for data stream} FAILED\r\n16:03:22     java.lang.AssertionError: Failure at [indices.freeze/10_basic:133]: expected [2xx] status code but api [indices.put_index_template] returned [400 Bad Request] [{\"error\":{\"root_cause\":[{\"type\":\"illegal_argument_exception\",\"reason\":\"composable template [my-template1] template after composition is invalid\",\"stack_trace\":\"org.elasticsearch.ElasticsearchException$1: composable template [my-template1] template after composition is invalid\\n\\tat org.elasticsearch.ElasticsearchException.guessRootCauses(ElasticsearchException.java:644)\\n\\tat org.elasticsearch.ElasticsearchException.generateFailureXContent(ElasticsearchException.java:572)\\n\\tat org.elasticsearch.rest.BytesRestResponse.build(BytesRestResponse.java:149)\\n\\tat org.elasticsearch.rest.BytesRestResponse.<init>(BytesRestResponse.java:110)\\n\\tat org.elasticsearch.rest.BytesRestResponse.<init>(BytesRestResponse.java:93)\\n\\tat org.elasticsearch.rest.action.RestActionListener.onFailure(RestActionListener.java:58)\\n\\tat org.elasticsearch.client.node.NodeClient.lambda$executeLocally$1(NodeClient.java:91)\\n\\tat org.elasticsearch.tasks.TaskManager$1.onFailure(TaskManager.java:184)\\n\\tat org.elasticsearch.action.support.ContextPreservingActionListener.onFailure(ContextPreservingActionListener.java:50)\\n\\tat org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.lambda$doStart$2(TransportMasterNodeAction.java:163)\\n\\tat org.elasticsearch.action.ActionListener$2.onFailure(ActionListener.java:94)\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService$4.onFailure(MetadataIndexTemplateService.java:378)\\n\\tat org.elasticsearch.cluster.service.MasterService$SafeClusterStateTaskListener.onFailure(MasterService.java:508)\\n\\tat org.elasticsearch.cluster.service.MasterService$TaskOutputs.notifyFailedTasks(MasterService.java:441)\\n\\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:215)\\n\\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:647)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\\n\\tat java.base/java.lang.Thread.run(Thread.java:834)\\nCaused by: java.lang.IllegalArgumentException: composable template [my-template1] template after composition is invalid\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.addIndexTemplateV2(MetadataIndexTemplateService.java:496)\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService$4.execute(MetadataIndexTemplateService.java:383)\\n\\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47)\\n\\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697)\\n\\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319)\\n\\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214)\\n\\t... 9 more\\nCaused by: java.lang.IllegalArgumentException: invalid composite mappings for [my-template1]\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.lambda$validateCompositeTemplate$19(MetadataIndexTemplateService.java:1057)\\n\\tat org.elasticsearch.indices.IndicesService.withTempIndexService(IndicesService.java:619)\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.validateCompositeTemplate(MetadataIndexTemplateService.java:1030)\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.addIndexTemplateV2(MetadataIndexTemplateService.java:492)\\n\\t... 14 more\\nCaused by: java.lang.IllegalArgumentException: expected timestamp field [@timestamp], but found no timestamp field\\n\\tat org.elasticsearch.cluster.metadata.MetadataCreateDataStreamService.validateTimestampFieldMapping(MetadataCreateDataStreamService.java:171)\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.lambda$validateCompositeTemplate$19(MetadataIndexTemplateService.java:1054)\\n\\t... 17 more\\n\"}],\"type\":\"illegal_argument_exception\",\"reason\":\"composable template [my-template1] template after composition is invalid\",\"caused_by\":{\"type\":\"illegal_argument_exception\",\"reason\":\"invalid composite mappings for [my-template1]\",\"caused_by\":{\"type\":\"illegal_argument_exception\",\"reason\":\"expected timestamp field [@timestamp], but found no timestamp field\",\"stack_trace\":\"java.lang.IllegalArgumentException: expected timestamp field [@timestamp], but found no timestamp field\\n\\tat org.elasticsearch.cluster.metadata.MetadataCreateDataStreamService.validateTimestampFieldMapping(MetadataCreateDataStreamService.java:171)\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.lambda$validateCompositeTemplate$19(MetadataIndexTemplateService.java:1054)\\n\\tat org.elasticsearch.indices.IndicesService.withTempIndexService(IndicesService.java:619)\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.validateCompositeTemplate(MetadataIndexTemplateService.java:1030)\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.addIndexTemplateV2(MetadataIndexTemplateService.java:492)\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService$4.execute(MetadataIndexTemplateService.java:383)\\n\\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47)\\n\\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697)\\n\\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319)\\n\\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214)\\n\\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:647)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\\n\\tat java.base/java.lang.Thread.run(Thread.java:834)\\n\"},\"stack_trace\":\"java.lang.IllegalArgumentException: invalid composite mappings for [my-template1]\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.lambda$validateCompositeTemplate$19(MetadataIndexTemplateService.java:1057)\\n\\tat org.elasticsearch.indices.IndicesService.withTempIndexService(IndicesService.java:619)\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.validateCompositeTemplate(MetadataIndexTemplateService.java:1030)\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.addIndexTemplateV2(MetadataIndexTemplateService.java:492)\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService$4.execute(MetadataIndexTemplateService.java:383)\\n\\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47)\\n\\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697)\\n\\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319)\\n\\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214)\\n\\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:647)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\\n\\tat java.base/java.lang.Thread.run(Thread.java:834)\\nCaused by: java.lang.IllegalArgumentException: expected timestamp field [@timestamp], but found no timestamp field\\n\\tat org.elasticsearch.cluster.metadata.MetadataCreateDataStreamService.validateTimestampFieldMapping(MetadataCreateDataStreamService.java:171)\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.lambda$validateCompositeTemplate$19(MetadataIndexTemplateService.java:1054)\\n\\t... 17 more\\n\"},\"stack_trace\":\"java.lang.IllegalArgumentException: composable template [my-template1] template after composition is invalid\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.addIndexTemplateV2(MetadataIndexTemplateService.java:496)\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService$4.execute(MetadataIndexTemplateService.java:383)\\n\\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47)\\n\\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697)\\n\\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319)\\n\\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214)\\n\\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:647)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\\n\\tat java.base/java.lang.Thread.run(Thread.java:834)\\nCaused by: java.lang.IllegalArgumentException: invalid composite mappings for [my-template1]\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.lambda$validateCompositeTemplate$19(MetadataIndexTemplateService.java:1057)\\n\\tat org.elasticsearch.indices.IndicesService.withTempIndexService(IndicesService.java:619)\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.validateCompositeTemplate(MetadataIndexTemplateService.java:1030)\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.addIndexTemplateV2(MetadataIndexTemplateService.java:492)\\n\\t... 14 more\\nCaused by: java.lang.IllegalArgumentException: expected timestamp field [@timestamp], but found no timestamp field\\n\\tat org.elasticsearch.cluster.metadata.MetadataCreateDataStreamService.validateTimestampFieldMapping(MetadataCreateDataStreamService.java:171)\\n\\tat org.elasticsearch.cluster.metadata.MetadataIndexTemplateService.lambda$validateCompositeTemplate$19(MetadataIndexTemplateService.java:1054)\\n\\t... 17 more\\n\"},\"status\":400}]\r\n```\r\n","closed_by":{"login":"danhermann","id":22777892,"node_id":"MDQ6VXNlcjIyNzc3ODky","avatar_url":"https://avatars0.githubusercontent.com/u/22777892?v=4","gravatar_id":"","url":"https://api.github.com/users/danhermann","html_url":"https://github.com/danhermann","followers_url":"https://api.github.com/users/danhermann/followers","following_url":"https://api.github.com/users/danhermann/following{/other_user}","gists_url":"https://api.github.com/users/danhermann/gists{/gist_id}","starred_url":"https://api.github.com/users/danhermann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danhermann/subscriptions","organizations_url":"https://api.github.com/users/danhermann/orgs","repos_url":"https://api.github.com/users/danhermann/repos","events_url":"https://api.github.com/users/danhermann/events{/privacy}","received_events_url":"https://api.github.com/users/danhermann/received_events","type":"User","site_admin":false},"performed_via_github_app":null}