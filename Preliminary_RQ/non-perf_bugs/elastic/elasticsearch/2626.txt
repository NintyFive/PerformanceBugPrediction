{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/2626","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2626/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2626/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2626/events","html_url":"https://github.com/elastic/elasticsearch/issues/2626","id":10715249,"node_id":"MDU6SXNzdWUxMDcxNTI0OQ==","number":2626,"title":"GeoShape intersects filter omits matching docs.","user":{"login":"IamJeffG","id":2002703,"node_id":"MDQ6VXNlcjIwMDI3MDM=","avatar_url":"https://avatars1.githubusercontent.com/u/2002703?v=4","gravatar_id":"","url":"https://api.github.com/users/IamJeffG","html_url":"https://github.com/IamJeffG","followers_url":"https://api.github.com/users/IamJeffG/followers","following_url":"https://api.github.com/users/IamJeffG/following{/other_user}","gists_url":"https://api.github.com/users/IamJeffG/gists{/gist_id}","starred_url":"https://api.github.com/users/IamJeffG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IamJeffG/subscriptions","organizations_url":"https://api.github.com/users/IamJeffG/orgs","repos_url":"https://api.github.com/users/IamJeffG/repos","events_url":"https://api.github.com/users/IamJeffG/events{/privacy}","received_events_url":"https://api.github.com/users/IamJeffG/received_events","type":"User","site_admin":false},"labels":[{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":17100279,"node_id":"MDU6TGFiZWwxNzEwMDI3OQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.90.0.Beta1","name":"v0.90.0.Beta1","color":"DDDDDD","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"assignees":[{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2013-02-06T22:41:36Z","updated_at":"2013-03-11T11:58:05Z","closed_at":"2013-02-18T17:47:43Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"There are some cases where a geo_shape \"intersects\" (and presumably \"within\", though I did not check) filter fails to find a matching document.\n\nTo reproduce, use a simple, standard mapping:\n\n``` javascript\n    {\n        \"location\": {\n            \"type\": \"geo_shape\",\n            \"tree\": \"quadtree\",\n            \"distance_error_pct\": 0.0\n        }\n    }\n```\n\nIndex a document:\n\n```\ncurl -XPUT 'localhost:9200/test/type1/b' -d '\n{\"id\": \"b\",\n \"location\": {\n    \"type\": \"Polygon\",\n    \"coordinates\": [[[-122.83, 48.57],\n                     [-122.77, 48.56],\n                     [-122.79, 48.53],\n                     [-122.83, 48.57]]]\n }\n}\n```\n\nThe following query intersects the document and therefore should match it:\n\n```\ncurl -XGET 'localhost:9200/test/type1/_search' -d '\n{\n  \"query\": {\n    \"constant_score\": {\n      \"boost\": 1,\n      \"filter\": {\n        \"geo_shape\": {\n          \"location\": {\n            \"relation\": \"intersects\",\n            \"shape\": {\n              \"type\": \"Polygon\",\n              \"coordinates\": [[[-122.88, 48.62],\n                               [-122.88, 48.54],\n                               [-122.82 ,48.54],\n                               [-122.82, 48.62],\n                               [-122.88, 48.62]]]\n            }\n          }\n        }\n      }\n    }\n  }\n}'\n```\n\nHowever, the query returns 0 matches.\n\nI have tracked the cause of this down to an attempted optimization in `org.elasticsearch.common.lucene.spatial.prefix.tree.SpatialPrefixTree#recursiveGetNodes`.  Specifically, the optimization prevents recursion into the deepest tree level if a parent node in the penultimate level covers all its children.\n\nThe bug is that this optimization can be invoked at both indexing and query time:  If the optimization is invoked for the indexed doc's shape, then a query shape that doesn't invoke the optimization will not match.  The converse is also true: if the optimization is invoked for a query shape, it will not match intersecting documents for whose shape the optimization was not invoked.  (I can provide illustrations if this remains unclear.)\n\nOne possible bugfix to ensure the indexing and query paths do not _both_ invoke the optimization is to simply disable the optimization at indexing time, at the one-time cost of more nodes being generated and stored at indexing time.  Or, the optimization could be disabled at query time, but at a cost of more nodes being generated at query time.\n","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}