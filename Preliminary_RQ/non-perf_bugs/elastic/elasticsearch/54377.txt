{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/54377","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54377/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54377/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54377/events","html_url":"https://github.com/elastic/elasticsearch/issues/54377","id":589572882,"node_id":"MDU6SXNzdWU1ODk1NzI4ODI=","number":54377,"title":"Different behavior between TransportClient and RestHighLevelClient on msearch Requests when providing scroll parameter","user":{"login":"xtermi2","id":1821973,"node_id":"MDQ6VXNlcjE4MjE5NzM=","avatar_url":"https://avatars0.githubusercontent.com/u/1821973?v=4","gravatar_id":"","url":"https://api.github.com/users/xtermi2","html_url":"https://github.com/xtermi2","followers_url":"https://api.github.com/users/xtermi2/followers","following_url":"https://api.github.com/users/xtermi2/following{/other_user}","gists_url":"https://api.github.com/users/xtermi2/gists{/gist_id}","starred_url":"https://api.github.com/users/xtermi2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xtermi2/subscriptions","organizations_url":"https://api.github.com/users/xtermi2/orgs","repos_url":"https://api.github.com/users/xtermi2/repos","events_url":"https://api.github.com/users/xtermi2/events{/privacy}","received_events_url":"https://api.github.com/users/xtermi2/received_events","type":"User","site_admin":false},"labels":[{"id":493198109,"node_id":"MDU6TGFiZWw0OTMxOTgxMDk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Java%20High%20Level%20REST%20Client","name":":Core/Features/Java High Level REST Client","color":"0e8a16","default":false,"description":"Expressive Java Client for Elasticsearch"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-03-28T12:59:41Z","updated_at":"2020-03-30T21:56:50Z","closed_at":"2020-03-30T21:56:15Z","author_association":"NONE","active_lock_reason":null,"body":"<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 7.6.1\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`): the one provided in `docker.elastic.co/elasticsearch/elasticsearch:7.6.1`\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): `docker.elastic.co/elasticsearch/elasticsearch:7.6.1`\r\nHost: `Linux XXX 5.3.0-40-generic #32-Ubuntu SMP Fri Jan 31 20:24:34 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`\r\n**Docker version**: 19.03.6, build 369ce74a3c\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nThis issue is related to https://github.com/elastic/elasticsearch/issues/4227\r\n\r\nThere is a unexpected difference in transport client and rest client (or in general in REST API) when doing a msearch Request and setting the `scroll` parameter. Just have a look at https://github.com/xtermi2/elasticsearch-resthighlevelclient-msearch-scrollId/blob/master/src/test/java/com/github/xtermi2/elasticsearch/RHLCMsearchScrollIdTest.java for a complete running example to reproduce.\r\n\r\nTest `restHighLevelClient_msearch_should_return_scrollId` failes, because the request does not provide the scroll parameter, so the response does not contain a scroll_id\r\n\r\nTest `transportClient_msearch_should_return_scrollId` passes, because transport client somehow provides the scroll parameter in its request and the response, of course, contains a scroll_id.\r\n\r\nIt's the same request (MultiSearchRequest) for both clients. Here a example:\r\n```java\r\n        SearchRequest searchRequest = new SearchRequest(\"my-index\")\r\n                .scroll(TimeValue.timeValueSeconds(30));\r\n        searchRequest.source()\r\n                .query(QueryBuilders.matchAllQuery())\r\n                .size(2);\r\n        MultiSearchRequest multiSearchRequest = new MultiSearchRequest();\r\n        multiSearchRequest.add(searchRequest);\r\n```\r\nWhen firing this request via RestHighLevelClient, you never get a `scroll_id` in the response.\r\n```java\r\n        MultiSearchResponse msearchRes = restHighLevelClient.msearch(multiSearchRequest, DEFAULT);\r\n        msearchRes.getResponses()[1].getResponse().getScrollId(); // this is always null; unexpected behavior!\r\n```\r\nBut when firing this request via TransportClient, you will get a `scroll_id` in the response.\r\n```java\r\n        MultiSearchResponse msearchRes = transportClient.multiSearch(multiSearchRequest).actionGet();\r\n        msearchRes.getResponses()[1].getResponse().getScrollId(); // non-null, as expected and how it should work\r\n```\r\n\r\nSo from the perspective of the transport-client/RestHighLevelClient I have the exact same API but get different behavior which is totally unexpected.\r\n\r\nThe minimum should be to provide a Exception when you want to do a `_msearch` request which provides unsupported parameters via RestHighLevelClient - until https://github.com/elastic/elasticsearch/issues/4227 is fixed and _msearch supports all parameters from _search\r\n\r\n\r\n**Steps to reproduce**:\r\nRepo to reproduce, just execute `./mvnw clean test` and you get a failing unittest because  `scroll_id` is unexpected null:\r\nhttps://github.com/xtermi2/elasticsearch-resthighlevelclient-msearch-scrollId","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}