{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/8075","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8075/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8075/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8075/events","html_url":"https://github.com/elastic/elasticsearch/issues/8075","id":45724732,"node_id":"MDU6SXNzdWU0NTcyNDczMg==","number":8075,"title":"Allow partial update to replace json fields too, not always merge","user":{"login":"anneveling","id":223707,"node_id":"MDQ6VXNlcjIyMzcwNw==","avatar_url":"https://avatars1.githubusercontent.com/u/223707?v=4","gravatar_id":"","url":"https://api.github.com/users/anneveling","html_url":"https://github.com/anneveling","followers_url":"https://api.github.com/users/anneveling/followers","following_url":"https://api.github.com/users/anneveling/following{/other_user}","gists_url":"https://api.github.com/users/anneveling/gists{/gist_id}","starred_url":"https://api.github.com/users/anneveling/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anneveling/subscriptions","organizations_url":"https://api.github.com/users/anneveling/orgs","repos_url":"https://api.github.com/users/anneveling/repos","events_url":"https://api.github.com/users/anneveling/events{/privacy}","received_events_url":"https://api.github.com/users/anneveling/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-10-14T08:33:00Z","updated_at":"2014-10-16T13:42:07Z","closed_at":"2014-10-16T12:36:54Z","author_association":"NONE","active_lock_reason":null,"body":"Using the _update (partial) update request, currently, modifying a field in an existing document will merge the json objects. It would be great if in a future version, we add a REST parameter to allow the caller to specify how he wants to handle subdocuments: \"merge\" or \"replace\" (with the current \"merge\" behaviour still as default)\n\nThis means that if you do this:\n\n`curl -XPUT http://localhost:9200/upd/person/1 --data-binary '{name: \"John\", gender: \"male\", flags: {clever: true, length: 196}}'\n{\"_index\":\"upd\",\"_type\":\"person\",\"_id\":\"1\",\"_version\":1,\"created\":true}`\n\n`curl -XPOST http://localhost:9200/upd/person/1/_update --data-binary '{doc:{ flags: {clever: false, addiction: \"coffee\"}}}'      \n{\"_index\":\"upd\",\"_type\":\"person\",\"_id\":\"1\",\"_version\":2}`                                                           \n\nThen, if you get the doc: \n\n`curl -XGET http://localhost:9200/upd/person/1\n{\"_index\":\"upd\",\"_type\":\"person\",\"_id\":\"1\",\"_version\":2,\"found\":true,\"_source\":{\"name\":\"John\",\"gender\":\"male\",\"flags\":{\"clever\":false,\"length\":196,\"addiction\":\"coffee\"}}}`\n\nThe .length field is still there! This can be an action that the user wants, but if you do not want it (e.g. if your document is actually a merge of two docs from different sources and you want to simply replace a full subdocument), you have to use scripting, or download-and-merge yourself.\n\nThis is actually done in org.elasticsearch.action.update.UpdateHelper, which calls:\n\n`boolean noop = !XContentHelper.update(updatedSourceAsMap, indexRequest.sourceAsMap(), request.detectNoop());`\n\nand that code does a recursive merge for json objects always:\n\n`if (old instanceof Map && changesEntry.getValue() instanceof Map) {\n                // recursive merge maps\n                modified |= update((Map<String, Object>) source.get(changesEntry.getKey()),\n                        (Map<String, Object>) changesEntry.getValue(), checkUpdatesAreUnequal && !modified);\n                continue;\n            }`\n\nFor non-map fields, the values are simply replaced, even for arrays.\n\nPropose to add a REST parameter called \"update-mode\" with default value \"merge\" (no change), but if you specify \"replace\", then all json subdocs are simply replaced.\n\nAnd while we're at it, allowing that to influence array update modes too, would be handy?\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}