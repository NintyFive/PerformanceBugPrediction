[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/409769167","html_url":"https://github.com/elastic/elasticsearch/issues/32570#issuecomment-409769167","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32570","id":409769167,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTc2OTE2Nw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-08-02T00:42:56Z","updated_at":"2018-08-02T00:42:56Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/409770135","html_url":"https://github.com/elastic/elasticsearch/issues/32570#issuecomment-409770135","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32570","id":409770135,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTc3MDEzNQ==","user":{"login":"kyreddie","id":36240414,"node_id":"MDQ6VXNlcjM2MjQwNDE0","avatar_url":"https://avatars0.githubusercontent.com/u/36240414?v=4","gravatar_id":"","url":"https://api.github.com/users/kyreddie","html_url":"https://github.com/kyreddie","followers_url":"https://api.github.com/users/kyreddie/followers","following_url":"https://api.github.com/users/kyreddie/following{/other_user}","gists_url":"https://api.github.com/users/kyreddie/gists{/gist_id}","starred_url":"https://api.github.com/users/kyreddie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kyreddie/subscriptions","organizations_url":"https://api.github.com/users/kyreddie/orgs","repos_url":"https://api.github.com/users/kyreddie/repos","events_url":"https://api.github.com/users/kyreddie/events{/privacy}","received_events_url":"https://api.github.com/users/kyreddie/received_events","type":"User","site_admin":false},"created_at":"2018-08-02T00:49:58Z","updated_at":"2018-08-02T00:49:58Z","author_association":"NONE","body":"cc: @original-brownbear","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/410263536","html_url":"https://github.com/elastic/elasticsearch/issues/32570#issuecomment-410263536","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32570","id":410263536,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDI2MzUzNg==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2018-08-03T14:02:53Z","updated_at":"2018-08-03T14:02:53Z","author_association":"MEMBER","body":"I'm not sure this is a bug actually. The scaling factor is just too small as far as I understand the definition of the scaling factor.\r\nIf you scale by 100 then you will still effectively round the last digit here since we have 4 digits here (e.g. on my box `79.99d * 100` = `7998.9999999...` => casts to `7998` since we're always rounding down for `lte` comparisons).\r\n\r\n@jpountz probably knows this better than me though :) so ping :)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/410308843","html_url":"https://github.com/elastic/elasticsearch/issues/32570#issuecomment-410308843","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32570","id":410308843,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDMwODg0Mw==","user":{"login":"sergiosalvatore","id":33263,"node_id":"MDQ6VXNlcjMzMjYz","avatar_url":"https://avatars0.githubusercontent.com/u/33263?v=4","gravatar_id":"","url":"https://api.github.com/users/sergiosalvatore","html_url":"https://github.com/sergiosalvatore","followers_url":"https://api.github.com/users/sergiosalvatore/followers","following_url":"https://api.github.com/users/sergiosalvatore/following{/other_user}","gists_url":"https://api.github.com/users/sergiosalvatore/gists{/gist_id}","starred_url":"https://api.github.com/users/sergiosalvatore/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sergiosalvatore/subscriptions","organizations_url":"https://api.github.com/users/sergiosalvatore/orgs","repos_url":"https://api.github.com/users/sergiosalvatore/repos","events_url":"https://api.github.com/users/sergiosalvatore/events{/privacy}","received_events_url":"https://api.github.com/users/sergiosalvatore/received_events","type":"User","site_admin":false},"created_at":"2018-08-03T16:37:28Z","updated_at":"2018-08-03T16:37:28Z","author_association":"NONE","body":"Hmm -- seems like there's definitely some confusion then.  From the [Elasticsearch documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/number.html):\r\n\r\n> For instance, a price field could be stored in a scaled_float with a scaling_factor of 100. All APIs would work as if the field was stored as a double, but under the hood Elasticsearch would be working with the number of cents, price*100, which is an integer.\r\n\r\nIn terms of \"round tripping,\" my understanding according to the documentation referenced above is that internally, when a document with the value `79.99` is stored in a `scaled_float` field, it's stored as `7999` in the index.  When I request that stored document, the value is indeed returned as `79.99` scaled appropriately.  It seems that it should follow the same process for filters as it is when storing/retrieving the value.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/410402267","html_url":"https://github.com/elastic/elasticsearch/issues/32570#issuecomment-410402267","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32570","id":410402267,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDQwMjI2Nw==","user":{"login":"eskibars","id":2246002,"node_id":"MDQ6VXNlcjIyNDYwMDI=","avatar_url":"https://avatars0.githubusercontent.com/u/2246002?v=4","gravatar_id":"","url":"https://api.github.com/users/eskibars","html_url":"https://github.com/eskibars","followers_url":"https://api.github.com/users/eskibars/followers","following_url":"https://api.github.com/users/eskibars/following{/other_user}","gists_url":"https://api.github.com/users/eskibars/gists{/gist_id}","starred_url":"https://api.github.com/users/eskibars/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eskibars/subscriptions","organizations_url":"https://api.github.com/users/eskibars/orgs","repos_url":"https://api.github.com/users/eskibars/repos","events_url":"https://api.github.com/users/eskibars/events{/privacy}","received_events_url":"https://api.github.com/users/eskibars/received_events","type":"User","site_admin":false},"created_at":"2018-08-03T23:39:52Z","updated_at":"2018-08-03T23:41:38Z","author_association":"CONTRIBUTOR","body":"At minimum, we need to make a better declaration on how this works and limitations.  The documentation currently reads:\r\n> Values will be multiplied by this factor at index time and rounded to the closest long value.\r\n\r\nFor an input value of 79.99 and a scaling factor of 100, I think it's reasonable for a user to expect 79.99*100=7999.  I don't think the user reasonably expects that 79.99 * 10 = 7998.9999... unless you're familiar with the internals.  The docs either need to imply round down logic or the feature needs to give you the closest value really / we need to define how a user should understand it to work.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/412085552","html_url":"https://github.com/elastic/elasticsearch/issues/32570#issuecomment-412085552","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32570","id":412085552,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMjA4NTU1Mg==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2018-08-10T13:41:01Z","updated_at":"2018-08-10T13:41:01Z","author_association":"MEMBER","body":"We discussed this in FixItFriday and the outcome is that we feel this is a bug as users do not know (and should not reasonably know) the ins and outs of binary floating point representations. The problem here seems to be centred around us doing the wrong thing to resolve the value of the `lte` field. We should fix this so that instead of just doing `79.99 * 100` here we do `Math.floor(79.99 * 100 + 0.5)` and make the bound `lt` instead of `lte` so we search from 0 to less than \"the next representable value higher than `79.99`)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/412450417","html_url":"https://github.com/elastic/elasticsearch/issues/32570#issuecomment-412450417","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32570","id":412450417,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMjQ1MDQxNw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-08-13T08:50:04Z","updated_at":"2018-08-13T08:50:04Z","author_association":"CONTRIBUTOR","body":"This approach would still have similar problems, they would just occur on the half point between representable values rather than on representable values themselves? Alternatively maybe we could use big decimals to delay rounding to after the multiplication (which is where the fact that doubles do not represent numbers accurately gets amplified) by replacing `Double.parseDouble(boundary) * scalingFactor` with something like `new BigDecimal(boundary).multiply(BigDecimal.valueOf(scalingFactor)).doubleValue()`?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/412474111","html_url":"https://github.com/elastic/elasticsearch/issues/32570#issuecomment-412474111","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32570","id":412474111,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMjQ3NDExMQ==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2018-08-13T10:24:39Z","updated_at":"2018-08-13T10:24:39Z","author_association":"MEMBER","body":"@jpountz \r\n\r\nI don't think using `BigDecimal` here will help, if I try it in the debugger then:\r\n```\r\nnew BigDecimal(parse(upperTerm)).multiply(BigDecimal.valueOf(scalingFactor)).doubleValue() == parse(upperTerm) * scalingFactor\r\n```\r\n\r\nreturns `true`.\r\n\r\n\r\nI think this is a principal problem with `double` and the equals-type comparisons:\r\n\r\n* We can't just use arithmetic rounding here to resolve the fact that `79.99` will be slightly less than than internally because that would mess up the behaviour for things like `< 17.55` with a small scaling factor because it could round to `18`.\r\n\r\n=> we can't really fix the feature to get the desired behaviour here as far as I can see.\r\n\r\n=> We should probably fix the docs?\r\n... the other option I see would be to change the storage behaviour `scaled_float` slightly and simply use another digit internally. That way we'd get the expected behaviour because we wouldn't have a rounding error on the last digit at the cost of storing an extra digit wouldn't we?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/412484714","html_url":"https://github.com/elastic/elasticsearch/issues/32570#issuecomment-412484714","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32570","id":412484714,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMjQ4NDcxNA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-08-13T11:13:23Z","updated_at":"2018-08-13T11:13:23Z","author_association":"CONTRIBUTOR","body":"@original-brownbear Try `new BigDecimal(Double.toString(parse(upperTerm))).multiply(BigDecimal.valueOf(scalingFactor)).doubleValue()`. The BigDecimal needs to be constructed out of the string representation of the number, otherwise it inherits the accuracy loss of the double representation which causes this issue.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/412485485","html_url":"https://github.com/elastic/elasticsearch/issues/32570#issuecomment-412485485","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32570","id":412485485,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMjQ4NTQ4NQ==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2018-08-13T11:17:07Z","updated_at":"2018-08-13T11:17:07Z","author_association":"MEMBER","body":"@jpountz huh you're right! That works :)\r\n\r\n```\r\njshell> new BigDecimal(Double.toString(79.99)).multiply(BigDecimal.valueOf(100)).doubleValue()\r\n$6 ==> 7999.0\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/412841195","html_url":"https://github.com/elastic/elasticsearch/issues/32570#issuecomment-412841195","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32570","id":412841195,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMjg0MTE5NQ==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2018-08-14T11:30:09Z","updated_at":"2018-08-14T11:30:09Z","author_association":"CONTRIBUTOR","body":"I think I suggested the `Math.floor(79.99 * 100 + 0.5)` idea to fix this query for representable values but it's right that it doesn't work for some value that's around half-way between two representable values. `BigDecimal` seems like a good answer to dealing with unrepresentable values correctly but it seems like any `double` in the process is going to lead to difficulty because of facts like `79.999999999999993 == 80.0`:\r\n\r\n```\r\nDELETE /i\r\n\r\nPUT /i\r\n{\r\n  \"mappings\": {\r\n    \"_doc\": {\r\n      \"properties\": {\r\n        \"f\": {\r\n          \"scaling_factor\": 100,\r\n          \"type\": \"scaled_float\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"number_of_shards\": 1,\r\n    \"number_of_replicas\": 0\r\n  }\r\n}\r\n\r\nPOST /i/_doc/_bulk?refresh\r\n{\"index\":{}}\r\n{\"f\":79.98}\r\n{\"index\":{}}\r\n{\"f\":79.99}\r\n{\"index\":{}}\r\n{\"f\":80.00}\r\n\r\nGET /i/_search\r\n{\r\n  \"query\": {\r\n    \"range\": {\r\n      \"f\": {\r\n        \"lte\": 79.999999999999993\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nI think this should not yield all 3 docs, but it does.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/412879224","html_url":"https://github.com/elastic/elasticsearch/issues/32570#issuecomment-412879224","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32570","id":412879224,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMjg3OTIyNA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-08-14T13:53:06Z","updated_at":"2018-08-14T13:53:06Z","author_association":"CONTRIBUTOR","body":"Yeah I was going to comment with an example like that after reading that \"users do not know (and should not reasonably know) the ins and outs of binary floating point representations\". I think this is a good example why we can't (reasonably) hide this problem entirely from our users.\r\n\r\nI'm not too worried about this issue since users will only face it if they represent numbers on client-side with something that is more accurate than doubles, which is uncommon.\r\n\r\nAlso for the record, `scaled_float` is not the only type affected by this issue, all our numeric types are.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/416276160","html_url":"https://github.com/elastic/elasticsearch/issues/32570#issuecomment-416276160","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32570","id":416276160,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNjI3NjE2MA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-08-27T16:01:12Z","updated_at":"2018-08-27T16:01:12Z","author_association":"CONTRIBUTOR","body":"Even though this won't solve all issues, we agreed to implement the above proposal (https://github.com/elastic/elasticsearch/issues/32570#issuecomment-412450417), which will remove some surprises. We should also document that scaled floats are prone to floating-point accuracy issues, the fact that our docs use scaling factors of 100 or 1000 which might suggest like this is actually a decimal type.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/420439740","html_url":"https://github.com/elastic/elasticsearch/issues/32570#issuecomment-420439740","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32570","id":420439740,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMDQzOTc0MA==","user":{"login":"sergiosalvatore","id":33263,"node_id":"MDQ6VXNlcjMzMjYz","avatar_url":"https://avatars0.githubusercontent.com/u/33263?v=4","gravatar_id":"","url":"https://api.github.com/users/sergiosalvatore","html_url":"https://github.com/sergiosalvatore","followers_url":"https://api.github.com/users/sergiosalvatore/followers","following_url":"https://api.github.com/users/sergiosalvatore/following{/other_user}","gists_url":"https://api.github.com/users/sergiosalvatore/gists{/gist_id}","starred_url":"https://api.github.com/users/sergiosalvatore/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sergiosalvatore/subscriptions","organizations_url":"https://api.github.com/users/sergiosalvatore/orgs","repos_url":"https://api.github.com/users/sergiosalvatore/repos","events_url":"https://api.github.com/users/sergiosalvatore/events{/privacy}","received_events_url":"https://api.github.com/users/sergiosalvatore/received_events","type":"User","site_admin":false},"created_at":"2018-09-11T21:57:34Z","updated_at":"2018-09-11T21:57:34Z","author_association":"NONE","body":"If this is the final solution here, I might recommend that you change the example referenced in the documentation that specifically refers to pricing (which is where we used it).  While I do understand the intricacies of floating point math, my reading of the documentation left me with the sense that I didn't have to worry about that because the work was being done behind the scenes by elastic.  Since that's not really the case, I don't think using this feature for pricing is appropriate.  Instead once should just store the smallest non-fractional amount (like cents, etc.) and deal with the rounding outside.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/420540891","html_url":"https://github.com/elastic/elasticsearch/issues/32570#issuecomment-420540891","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32570","id":420540891,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMDU0MDg5MQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-09-12T07:23:31Z","updated_at":"2018-09-12T07:23:31Z","author_association":"CONTRIBUTOR","body":":+1: We should show an example that uses a percentage or something like that instead.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/426412132","html_url":"https://github.com/elastic/elasticsearch/issues/32570#issuecomment-426412132","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32570","id":426412132,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNjQxMjEzMg==","user":{"login":"sergiosalvatore","id":33263,"node_id":"MDQ6VXNlcjMzMjYz","avatar_url":"https://avatars0.githubusercontent.com/u/33263?v=4","gravatar_id":"","url":"https://api.github.com/users/sergiosalvatore","html_url":"https://github.com/sergiosalvatore","followers_url":"https://api.github.com/users/sergiosalvatore/followers","following_url":"https://api.github.com/users/sergiosalvatore/following{/other_user}","gists_url":"https://api.github.com/users/sergiosalvatore/gists{/gist_id}","starred_url":"https://api.github.com/users/sergiosalvatore/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sergiosalvatore/subscriptions","organizations_url":"https://api.github.com/users/sergiosalvatore/orgs","repos_url":"https://api.github.com/users/sergiosalvatore/repos","events_url":"https://api.github.com/users/sergiosalvatore/events{/privacy}","received_events_url":"https://api.github.com/users/sergiosalvatore/received_events","type":"User","site_admin":false},"created_at":"2018-10-02T20:08:07Z","updated_at":"2018-10-02T20:08:07Z","author_association":"NONE","body":"Is there a place where I can see when this gets slotted in for development?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/426421772","html_url":"https://github.com/elastic/elasticsearch/issues/32570#issuecomment-426421772","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32570","id":426421772,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNjQyMTc3Mg==","user":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"created_at":"2018-10-02T20:39:31Z","updated_at":"2018-10-02T20:39:31Z","author_association":"CONTRIBUTOR","body":"@sergiosalvatore  When  there a PR for this feature, you will be able to see the link to this PR in this issue","performed_via_github_app":null}]