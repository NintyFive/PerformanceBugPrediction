[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/504078007","html_url":"https://github.com/elastic/elasticsearch/issues/43439#issuecomment-504078007","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43439","id":504078007,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNDA3ODAwNw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-06-20T15:44:32Z","updated_at":"2019-06-20T15:44:32Z","author_association":"COLLABORATOR","body":"Pinging @elastic/ml-core","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/504155862","html_url":"https://github.com/elastic/elasticsearch/issues/43439#issuecomment-504155862","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43439","id":504155862,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNDE1NTg2Mg==","user":{"login":"andrewvc","id":131427,"node_id":"MDQ6VXNlcjEzMTQyNw==","avatar_url":"https://avatars2.githubusercontent.com/u/131427?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewvc","html_url":"https://github.com/andrewvc","followers_url":"https://api.github.com/users/andrewvc/followers","following_url":"https://api.github.com/users/andrewvc/following{/other_user}","gists_url":"https://api.github.com/users/andrewvc/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewvc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewvc/subscriptions","organizations_url":"https://api.github.com/users/andrewvc/orgs","repos_url":"https://api.github.com/users/andrewvc/repos","events_url":"https://api.github.com/users/andrewvc/events{/privacy}","received_events_url":"https://api.github.com/users/andrewvc/received_events","type":"User","site_admin":false},"created_at":"2019-06-20T19:39:37Z","updated_at":"2019-06-20T19:39:37Z","author_association":"CONTRIBUTOR","body":"FYI, our workaround is going to be to always create an empty index matching the pattern.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/504375298","html_url":"https://github.com/elastic/elasticsearch/issues/43439#issuecomment-504375298","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43439","id":504375298,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNDM3NTI5OA==","user":{"login":"davidkyle","id":2353640,"node_id":"MDQ6VXNlcjIzNTM2NDA=","avatar_url":"https://avatars1.githubusercontent.com/u/2353640?v=4","gravatar_id":"","url":"https://api.github.com/users/davidkyle","html_url":"https://github.com/davidkyle","followers_url":"https://api.github.com/users/davidkyle/followers","following_url":"https://api.github.com/users/davidkyle/following{/other_user}","gists_url":"https://api.github.com/users/davidkyle/gists{/gist_id}","starred_url":"https://api.github.com/users/davidkyle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidkyle/subscriptions","organizations_url":"https://api.github.com/users/davidkyle/orgs","repos_url":"https://api.github.com/users/davidkyle/repos","events_url":"https://api.github.com/users/davidkyle/events{/privacy}","received_events_url":"https://api.github.com/users/davidkyle/received_events","type":"User","site_admin":false},"created_at":"2019-06-21T10:21:17Z","updated_at":"2019-06-21T10:21:17Z","author_association":"MEMBER","body":"The check for the source index existence has to be repeated on Data Frame start not just at creation in case the index has disappeared between `PUT` and `_start`, so I do think there is room to relax the check on PUT. However, we do strongly prefer to validate early rather than let the user take multiple steps before returning an error which may have been due to a simple typo in step 1. This applies to API and UI users but for the UI in particular deferring the check would complicate the flow.\r\n\r\n> even if only optionally.\r\n\r\nThe only way I can see this is with an optional `don't_validate_at_creation_because_you_will_do_it_all_again_at_start` parameter which feels a little clunky but is probably better than the work around. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/505195841","html_url":"https://github.com/elastic/elasticsearch/issues/43439#issuecomment-505195841","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43439","id":505195841,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNTE5NTg0MQ==","user":{"login":"andrewvc","id":131427,"node_id":"MDQ6VXNlcjEzMTQyNw==","avatar_url":"https://avatars2.githubusercontent.com/u/131427?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewvc","html_url":"https://github.com/andrewvc","followers_url":"https://api.github.com/users/andrewvc/followers","following_url":"https://api.github.com/users/andrewvc/following{/other_user}","gists_url":"https://api.github.com/users/andrewvc/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewvc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewvc/subscriptions","organizations_url":"https://api.github.com/users/andrewvc/orgs","repos_url":"https://api.github.com/users/andrewvc/repos","events_url":"https://api.github.com/users/andrewvc/events{/privacy}","received_events_url":"https://api.github.com/users/andrewvc/received_events","type":"User","site_admin":false},"created_at":"2019-06-24T21:52:09Z","updated_at":"2019-06-24T21:52:09Z","author_association":"CONTRIBUTOR","body":"@davidkyle hmmm, well given that the primary concern is the UI use case, would it be a problem to move the check to the UI, and remove it from the backend in ES?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/505346333","html_url":"https://github.com/elastic/elasticsearch/issues/43439#issuecomment-505346333","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43439","id":505346333,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNTM0NjMzMw==","user":{"login":"hendrikmuhs","id":7126422,"node_id":"MDQ6VXNlcjcxMjY0MjI=","avatar_url":"https://avatars3.githubusercontent.com/u/7126422?v=4","gravatar_id":"","url":"https://api.github.com/users/hendrikmuhs","html_url":"https://github.com/hendrikmuhs","followers_url":"https://api.github.com/users/hendrikmuhs/followers","following_url":"https://api.github.com/users/hendrikmuhs/following{/other_user}","gists_url":"https://api.github.com/users/hendrikmuhs/gists{/gist_id}","starred_url":"https://api.github.com/users/hendrikmuhs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hendrikmuhs/subscriptions","organizations_url":"https://api.github.com/users/hendrikmuhs/orgs","repos_url":"https://api.github.com/users/hendrikmuhs/repos","events_url":"https://api.github.com/users/hendrikmuhs/events{/privacy}","received_events_url":"https://api.github.com/users/hendrikmuhs/received_events","type":"User","site_admin":false},"created_at":"2019-06-25T08:37:23Z","updated_at":"2019-06-25T09:16:25Z","author_association":"CONTRIBUTOR","body":"API-1st: I do not think we should move complex logic into the UI, the UI is great to get started but we do not aim to be UI-only, direct API support is as important, be it dev console or interacting with data frames using a language client (e.g. python).\r\n\r\n@davidkyle suggestion sounds good to me, skipping validation sounds like a special case. We only need better parameter naming. `validate=false`?\r\n\r\nalternative: we could ignore validation errors in case of a special parameter: `ignore_validation_errors`\r\n\r\nBut I prefer the skipping idea.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/505395057","html_url":"https://github.com/elastic/elasticsearch/issues/43439#issuecomment-505395057","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43439","id":505395057,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNTM5NTA1Nw==","user":{"login":"dimitris-athanasiou","id":9351617,"node_id":"MDQ6VXNlcjkzNTE2MTc=","avatar_url":"https://avatars3.githubusercontent.com/u/9351617?v=4","gravatar_id":"","url":"https://api.github.com/users/dimitris-athanasiou","html_url":"https://github.com/dimitris-athanasiou","followers_url":"https://api.github.com/users/dimitris-athanasiou/followers","following_url":"https://api.github.com/users/dimitris-athanasiou/following{/other_user}","gists_url":"https://api.github.com/users/dimitris-athanasiou/gists{/gist_id}","starred_url":"https://api.github.com/users/dimitris-athanasiou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dimitris-athanasiou/subscriptions","organizations_url":"https://api.github.com/users/dimitris-athanasiou/orgs","repos_url":"https://api.github.com/users/dimitris-athanasiou/repos","events_url":"https://api.github.com/users/dimitris-athanasiou/events{/privacy}","received_events_url":"https://api.github.com/users/dimitris-athanasiou/received_events","type":"User","site_admin":false},"created_at":"2019-06-25T11:01:05Z","updated_at":"2019-06-25T11:01:05Z","author_association":"CONTRIBUTOR","body":"I am not a huge fan of adding that flag. Having a `validate` flag is very confusing as it is not that we will skip all validations. We'll just skip some of them. Perhaps we can call it `force` instead, though it still suffers from ambiguity.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/505408272","html_url":"https://github.com/elastic/elasticsearch/issues/43439#issuecomment-505408272","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43439","id":505408272,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNTQwODI3Mg==","user":{"login":"davidkyle","id":2353640,"node_id":"MDQ6VXNlcjIzNTM2NDA=","avatar_url":"https://avatars1.githubusercontent.com/u/2353640?v=4","gravatar_id":"","url":"https://api.github.com/users/davidkyle","html_url":"https://github.com/davidkyle","followers_url":"https://api.github.com/users/davidkyle/followers","following_url":"https://api.github.com/users/davidkyle/following{/other_user}","gists_url":"https://api.github.com/users/davidkyle/gists{/gist_id}","starred_url":"https://api.github.com/users/davidkyle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidkyle/subscriptions","organizations_url":"https://api.github.com/users/davidkyle/orgs","repos_url":"https://api.github.com/users/davidkyle/repos","events_url":"https://api.github.com/users/davidkyle/events{/privacy}","received_events_url":"https://api.github.com/users/davidkyle/received_events","type":"User","site_admin":false},"created_at":"2019-06-25T11:44:28Z","updated_at":"2019-06-25T11:44:28Z","author_association":"MEMBER","body":"`?soft_validation`\r\n\r\nI'm not a huge fan of the flag either but if there is a pressing need.. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/505535966","html_url":"https://github.com/elastic/elasticsearch/issues/43439#issuecomment-505535966","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43439","id":505535966,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNTUzNTk2Ng==","user":{"login":"andrewvc","id":131427,"node_id":"MDQ6VXNlcjEzMTQyNw==","avatar_url":"https://avatars2.githubusercontent.com/u/131427?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewvc","html_url":"https://github.com/andrewvc","followers_url":"https://api.github.com/users/andrewvc/followers","following_url":"https://api.github.com/users/andrewvc/following{/other_user}","gists_url":"https://api.github.com/users/andrewvc/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewvc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewvc/subscriptions","organizations_url":"https://api.github.com/users/andrewvc/orgs","repos_url":"https://api.github.com/users/andrewvc/repos","events_url":"https://api.github.com/users/andrewvc/events{/privacy}","received_events_url":"https://api.github.com/users/andrewvc/received_events","type":"User","site_admin":false},"created_at":"2019-06-25T17:08:37Z","updated_at":"2019-06-25T17:08:37Z","author_association":"CONTRIBUTOR","body":"It would be a problem if the transform stopped working, or become unstartable because a user purged their indices to start fresh for instance. We could enter a half-broken state where the time series data is coming in, but the data-frame isn't started. That would mean we'd need to create a watchdog process ensuring that the frame is always started.\r\n\r\nGiven that we have two use cases a flag seems best. We don't particularly care as to the naming since we'll be hiding this from users, but we want to declaratively state \"data from this index pattern should be transformed continuously into this other index\", and we want that rule to hold whether the data source disappears temporarily or not. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/506262646","html_url":"https://github.com/elastic/elasticsearch/issues/43439#issuecomment-506262646","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43439","id":506262646,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNjI2MjY0Ng==","user":{"login":"davidkyle","id":2353640,"node_id":"MDQ6VXNlcjIzNTM2NDA=","avatar_url":"https://avatars1.githubusercontent.com/u/2353640?v=4","gravatar_id":"","url":"https://api.github.com/users/davidkyle","html_url":"https://github.com/davidkyle","followers_url":"https://api.github.com/users/davidkyle/followers","following_url":"https://api.github.com/users/davidkyle/following{/other_user}","gists_url":"https://api.github.com/users/davidkyle/gists{/gist_id}","starred_url":"https://api.github.com/users/davidkyle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidkyle/subscriptions","organizations_url":"https://api.github.com/users/davidkyle/orgs","repos_url":"https://api.github.com/users/davidkyle/repos","events_url":"https://api.github.com/users/davidkyle/events{/privacy}","received_events_url":"https://api.github.com/users/davidkyle/received_events","type":"User","site_admin":false},"created_at":"2019-06-27T09:08:52Z","updated_at":"2019-06-27T09:08:52Z","author_association":"MEMBER","body":"The team discussed this and there was widespread agreement that we should add the flag and much debate about naming it. Suggestions included `ensure` or `force` but the favourite was `defer`.\r\n\r\n`?defer_validation=true`","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/507715191","html_url":"https://github.com/elastic/elasticsearch/issues/43439#issuecomment-507715191","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43439","id":507715191,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNzcxNTE5MQ==","user":{"login":"davidkyle","id":2353640,"node_id":"MDQ6VXNlcjIzNTM2NDA=","avatar_url":"https://avatars1.githubusercontent.com/u/2353640?v=4","gravatar_id":"","url":"https://api.github.com/users/davidkyle","html_url":"https://github.com/davidkyle","followers_url":"https://api.github.com/users/davidkyle/followers","following_url":"https://api.github.com/users/davidkyle/following{/other_user}","gists_url":"https://api.github.com/users/davidkyle/gists{/gist_id}","starred_url":"https://api.github.com/users/davidkyle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidkyle/subscriptions","organizations_url":"https://api.github.com/users/davidkyle/orgs","repos_url":"https://api.github.com/users/davidkyle/repos","events_url":"https://api.github.com/users/davidkyle/events{/privacy}","received_events_url":"https://api.github.com/users/davidkyle/received_events","type":"User","site_admin":false},"created_at":"2019-07-02T14:58:38Z","updated_at":"2019-07-02T14:58:38Z","author_association":"MEMBER","body":"Here's a list of validations we make on PUT and those I suggest are deferrable\r\n\r\nValidation | Deferrable\r\n----------|-----------\r\nLicensing check |  No\r\nSimple regex check that source and destination indices do not overlap | No\r\nCheck for missing source index | Yes\r\nExpanded source index expression contains destination index | Yes\r\nCheck destination index expression resolves to at most 1 index | No\r\nUser has privilege to read source index | Yes\r\nUser has privilege to create dest index | Yes\r\nPivotConfig check aggregation types are supported | No\r\nRun a test query | Yes\r\n\r\n\r\nThe validations on starting the data frame aren't as rigorous because the data frame will fail pretty quickly anyway. For example there isn't a check that the source index is present because if it is missing the destination index mapping cannot be calculated causing the the data frame to fail with a `Failed to deduce dest mappings` _caused by_ `no such index [foo]`\r\n\r\nOf those checks that are deferrable some should be repeated on data frame start\r\n\r\nValidation | Deferrable | Repeat check on start\r\n----------|-------------|-----------------------\r\nCheck for missing source index | Yes | No this is caught by the deduce mappings function\r\nExpanded source index expression contains destination index | Yes | Yes \r\nUser has privilege to read source index | Yes | Yes\r\nUser has privilege to create dest index | Yes | Yes\r\nRun a test query | Yes | No the data frame will fail quickly","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/507864112","html_url":"https://github.com/elastic/elasticsearch/issues/43439#issuecomment-507864112","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43439","id":507864112,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNzg2NDExMg==","user":{"login":"andrewvc","id":131427,"node_id":"MDQ6VXNlcjEzMTQyNw==","avatar_url":"https://avatars2.githubusercontent.com/u/131427?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewvc","html_url":"https://github.com/andrewvc","followers_url":"https://api.github.com/users/andrewvc/followers","following_url":"https://api.github.com/users/andrewvc/following{/other_user}","gists_url":"https://api.github.com/users/andrewvc/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewvc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewvc/subscriptions","organizations_url":"https://api.github.com/users/andrewvc/orgs","repos_url":"https://api.github.com/users/andrewvc/repos","events_url":"https://api.github.com/users/andrewvc/events{/privacy}","received_events_url":"https://api.github.com/users/andrewvc/received_events","type":"User","site_admin":false},"created_at":"2019-07-02T22:12:44Z","updated_at":"2019-07-02T22:12:44Z","author_association":"CONTRIBUTOR","body":"Thanks for the comprehensive list @davidkyle. One question, if using the deferred setting, can the dataframe still be started without the source index being in existence, or does that cause the start command to fail due to the failed test query?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/508003111","html_url":"https://github.com/elastic/elasticsearch/issues/43439#issuecomment-508003111","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43439","id":508003111,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODAwMzExMQ==","user":{"login":"davidkyle","id":2353640,"node_id":"MDQ6VXNlcjIzNTM2NDA=","avatar_url":"https://avatars1.githubusercontent.com/u/2353640?v=4","gravatar_id":"","url":"https://api.github.com/users/davidkyle","html_url":"https://github.com/davidkyle","followers_url":"https://api.github.com/users/davidkyle/followers","following_url":"https://api.github.com/users/davidkyle/following{/other_user}","gists_url":"https://api.github.com/users/davidkyle/gists{/gist_id}","starred_url":"https://api.github.com/users/davidkyle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidkyle/subscriptions","organizations_url":"https://api.github.com/users/davidkyle/orgs","repos_url":"https://api.github.com/users/davidkyle/repos","events_url":"https://api.github.com/users/davidkyle/events{/privacy}","received_events_url":"https://api.github.com/users/davidkyle/received_events","type":"User","site_admin":false},"created_at":"2019-07-03T08:51:16Z","updated_at":"2019-07-03T08:51:16Z","author_association":"MEMBER","body":"If the checks have been deferred and the source index is missing the data frame will fail on start in one of 2 ways:\r\n\r\n1. If the destination index does not exist it is created with mappings deduced from the source index mappings. If the source index is missing the deduction will fail, this is the `Failed to deduce dest mappings` error mentioned above.\r\n\r\n2. The destination index exists but the source index has disappeared. The data frame will run encountering errors and retry with back off. Eventually the data frame will fail after a max number of retries. \r\n\r\nThat is the situation in 7.2 I'd recommend to ensure the existence of the source index before start. 7.3 has continuous data frames which may be more tolerant to errors, I'll look into how continuous data frames react and update here. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/508081190","html_url":"https://github.com/elastic/elasticsearch/issues/43439#issuecomment-508081190","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43439","id":508081190,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODA4MTE5MA==","user":{"login":"andrewvc","id":131427,"node_id":"MDQ6VXNlcjEzMTQyNw==","avatar_url":"https://avatars2.githubusercontent.com/u/131427?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewvc","html_url":"https://github.com/andrewvc","followers_url":"https://api.github.com/users/andrewvc/followers","following_url":"https://api.github.com/users/andrewvc/following{/other_user}","gists_url":"https://api.github.com/users/andrewvc/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewvc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewvc/subscriptions","organizations_url":"https://api.github.com/users/andrewvc/orgs","repos_url":"https://api.github.com/users/andrewvc/repos","events_url":"https://api.github.com/users/andrewvc/events{/privacy}","received_events_url":"https://api.github.com/users/andrewvc/received_events","type":"User","site_admin":false},"created_at":"2019-07-03T12:55:45Z","updated_at":"2019-07-03T12:55:45Z","author_association":"CONTRIBUTOR","body":"Thanks @davidkyle . We do have a workaround, which is a dummy empty index that always matches the source, but it'd be nice not to have to use that.","performed_via_github_app":null}]