{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3407","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3407/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3407/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3407/events","html_url":"https://github.com/elastic/elasticsearch/issues/3407","id":17384168,"node_id":"MDU6SXNzdWUxNzM4NDE2OA==","number":3407,"title":"Unify custom_boost_factor, custom_score and custom_filters_score","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2013-07-30T09:00:27Z","updated_at":"2013-08-01T12:55:29Z","closed_at":"2013-08-01T12:55:29Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"# Unify custom scores\n\nThe custom boost factor, custom script boost and the filters function query all do the same thing: They take a query and for each found document compute a new score based on the query score and some script, come custom boost factor or a combination of these two. However, the json format for these three functionalities is very different. This makes it hard to add new functions.\n\nIt would be nice to consolidate the three custom scores under the keyword <code>function_score</code>. \n\nThe new format should provide the same functionality as before that is: compute a new score with one function:\n\n```\n\"function_score\": {\n    \"(query|filter)\": {},\n    \"boost\": \"boost for the whole query\",\n    \"function\": {}\n} \n```\n\nor allow to combine the newly computed scores \n\n```\n\"function_score\": {\n    \"(query|filter)\": {},\n    \"boost\": \"boost for the whole query\",\n    \"functions\": [\n        {\n            \"filter\": {},\n            \"function\": {}\n        },\n        {\n            \"function\": {}\n        }\n    ],\n    \"score_mode\": \"(mult|max|...)\"\n}\n```\n\n<code>function</code> here can be either\n\n```\n\"script_score\": {\n    \"lang\": \"lang\",\n    \"params\": {\n        \"param1\": \"value1\",\n        \"param2\": \"value2\"\n     },\n    \"script\": \"some script\"\n}\n```\n\nor\n\n```\n\"boost_factor\" : number\n```\n## Changes\n\nThe custom boost factor query \n\n```\n\"custom_boost_factor\" : {\n    \"query\" : {\n        ....\n    },\n    \"boost_factor\" : 5.2\n}\n```\n\nwould become\n\n```\n\"function_score\" : {\n    \"query\" : {\n        ....\n    },\n    \"boost_factor\" : 5.2\n}\n```\n\nThe custom script score\n\n```\n\"custom_score\" : {\n    \"query\" : {\n        ....\n    },\n    \"params\" : {\n        \"param1\" : 2,\n        \"param2\" : 3.1\n    },\n    \"script\" : \"_score * doc['my_numeric_field'].value / pow(param1, param2)\"\n}\n```\n\nwould become\n\n```\n\"function_score\" : {\n    \"query\" : {\n        ....\n    },\n    \"script_score\" : {\n\n        \"params\" : {\n            \"param1\" : 2,\n            \"param2\" : 3.1\n        },\n        \"script\" : \"_score * doc['my_numeric_field'].value / pow(param1, param2)\"\n    }\n}\n```\n\nand the custom filters score query \n\n```\n\"custom_filters_score\" : {\n    \"query\" : {\n        \"match_all\" : {}\n     },\n    \"filters\" : [\n        {\n            \"filter\" : { \"range\" : { \"age\" : {\"from\" : 0, \"to\" : 10} } },\n            \"boost\" : \"3\"\n        },\n        {\n            \"filter\" : { \"range\" : { \"age\" : {\"from\" : 10, \"to\" : 20} } },\n            \"script\" : \"_score * doc['my_numeric_field'].value / pow(param1, param2)\"\n        }\n    ],\n    \"score_mode\" : \"first\",\n    \"params\" : {\n        \"param1\" : 2,\n        \"param2\" : 3.1\n    }\n    \"score_mode\" : \"first\"\n}       \n```\n\nbecomes:\n\n```\n\"function_score\" : {\n    \"query\" : {\n        \"match_all\" : {}\n    },\n    \"functions\" : [\n        {\n            \"filter\" : { \"range\" : { \"age\" : {\"from\" : 0, \"to\" : 10} } },\n            \"boost\" : \"3\"\n        },\n        {\n            \"filter\" : { \"range\" : { \"age\" : {\"from\" : 10, \"to\" : 20} } },\n            \"script_score\" : { \n                \"script\" : \"_score * doc['my_numeric_field'].value / pow(param1, param2)\",\n                \"params\" : {\n                    \"param1\" : 2,\n                    \"param2\" : 3.1\n                }\n\n            }\n        }\n    ],\n    \"score_mode\" : \"first\",     \n}       \n```\n","closed_by":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"performed_via_github_app":null}