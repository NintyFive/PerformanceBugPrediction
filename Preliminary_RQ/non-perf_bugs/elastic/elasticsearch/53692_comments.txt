[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/600256636","html_url":"https://github.com/elastic/elasticsearch/issues/53692#issuecomment-600256636","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53692","id":600256636,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMDI1NjYzNg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-03-17T19:29:41Z","updated_at":"2020-03-17T19:29:41Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-analytics-geo (:Analytics/Aggregations)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/600770849","html_url":"https://github.com/elastic/elasticsearch/issues/53692#issuecomment-600770849","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53692","id":600770849,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMDc3MDg0OQ==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2020-03-18T17:42:55Z","updated_at":"2020-03-18T17:42:55Z","author_association":"MEMBER","body":"Just to throw out another option, we could also have `unpaired_t_test` and `paired_t_test` if we wanted to keep the syntax completely separate.\r\n\r\nAt first I was against having `field` vs `fields`... but it might simplify parsing/validation and actually be easier for the user.  Still not crazy about the distinction, but I don't think it's too terrible either.  I think I prefer it over having a `paired: {}` or `unpaired: {}` settings object inside the agg... those arrangements never seem to work out well.\r\n\r\n> Alternatively, we can implement this as a pipeline aggregation, but in this case it will simplify implementation, but might make usage a bit more difficult and can complicate kibana adoption. We can also consider implementing it as both pipeline and metric aggregation similar to stats.\r\n\r\nAgreed, I think this would make adoption and usage a lot more difficult even though it's technically possible (and probably less code to maintain).  Relying on the user to set it up correctly sounds fragile and error prone.  I'd be ++ a metric, and maybe later determine if we want to add a pipeline equivalent (e.g. could be useful to compare bucket values rather than raw docs).\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/603841739","html_url":"https://github.com/elastic/elasticsearch/issues/53692#issuecomment-603841739","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53692","id":603841739,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMzg0MTczOQ==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2020-03-25T13:33:20Z","updated_at":"2020-03-25T13:33:20Z","author_association":"MEMBER","body":"After experimenting with parser a little bit and talking to @polyfractal we have decided to modify the syntax a bit and start with paired t-test implementation. The request will look like this:\r\n\r\n```\r\nGET logs/_search\r\n{\r\n  \"size\": 0,\r\n  \"aggs\" : {\r\n    \"test\" : {\r\n      \"t_test\" : {\r\n        \"a\" : { \"field\" : \"A\" },\r\n        \"b\" : { \"filed\" : \"B\" } \r\n       }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThe unpaired t-test will be implemented in a follow up PR and will look like this:\r\n\r\n```\r\nGET logs/_search\r\n{\r\n  \"size\": 0,\r\n  \"aggs\" : {\r\n    \"test\" : {\r\n      \"t_test\" : {\r\n        \"a\" : { \"filter\" : { \"match\" : { \"group\" : \"A\" } }, \"field\": \"val\" },\r\n        \"b\" : { \"filter\" : { \"match\" : { \"group\" : \"B\" } }, \"field\": \"val\" },\r\n        \"type\" : \"heteroscedastic\"\r\n       }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n","performed_via_github_app":null}]