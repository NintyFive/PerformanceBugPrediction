{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/54425","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54425/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54425/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54425/events","html_url":"https://github.com/elastic/elasticsearch/issues/54425","id":590314035,"node_id":"MDU6SXNzdWU1OTAzMTQwMzU=","number":54425,"title":"Bytes get corrupted on network layer","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"labels":[{"id":146854632,"node_id":"MDU6TGFiZWwxNDY4NTQ2MzI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Network","name":":Distributed/Network","color":"0e8a16","default":false,"description":"Http and internode communication implementations"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"tbrooks8","id":862472,"node_id":"MDQ6VXNlcjg2MjQ3Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/862472?v=4","gravatar_id":"","url":"https://api.github.com/users/tbrooks8","html_url":"https://github.com/tbrooks8","followers_url":"https://api.github.com/users/tbrooks8/followers","following_url":"https://api.github.com/users/tbrooks8/following{/other_user}","gists_url":"https://api.github.com/users/tbrooks8/gists{/gist_id}","starred_url":"https://api.github.com/users/tbrooks8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbrooks8/subscriptions","organizations_url":"https://api.github.com/users/tbrooks8/orgs","repos_url":"https://api.github.com/users/tbrooks8/repos","events_url":"https://api.github.com/users/tbrooks8/events{/privacy}","received_events_url":"https://api.github.com/users/tbrooks8/received_events","type":"User","site_admin":false},"assignees":[{"login":"tbrooks8","id":862472,"node_id":"MDQ6VXNlcjg2MjQ3Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/862472?v=4","gravatar_id":"","url":"https://api.github.com/users/tbrooks8","html_url":"https://github.com/tbrooks8","followers_url":"https://api.github.com/users/tbrooks8/followers","following_url":"https://api.github.com/users/tbrooks8/following{/other_user}","gists_url":"https://api.github.com/users/tbrooks8/gists{/gist_id}","starred_url":"https://api.github.com/users/tbrooks8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbrooks8/subscriptions","organizations_url":"https://api.github.com/users/tbrooks8/orgs","repos_url":"https://api.github.com/users/tbrooks8/repos","events_url":"https://api.github.com/users/tbrooks8/events{/privacy}","received_events_url":"https://api.github.com/users/tbrooks8/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2020-03-30T13:58:28Z","updated_at":"2020-04-02T05:38:17Z","closed_at":"2020-04-02T05:38:16Z","author_association":"MEMBER","active_lock_reason":null,"body":"**Elasticsearch version** (`bin/elasticsearch --version`): master(see below for details)\r\n\r\n**Plugins installed**: none\r\n\r\n**JVM version** (`java -version`): `OpenJDK Runtime Environment 18.9 (build 11.0.2+7)`\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): `Linux 4.13.0-45-generic`\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nWhen running a bulk-benchmark with three nodes we get errors like these since Friday March 27:\r\n\r\n* `HTTP status: 500, message: Invalid vInt ((fffffffd & 0x7f) << 28) | fffffff'`\r\n* `HTTP status: 500, message: Invalid string; unexpected character: 255 hex: ff`\r\n* `HTTP status: 500, message: tried to read: 264241151 bytes but only 130117 remaining`\r\n* `HTTP status: 500, message: Failed to deserialize response from handler [org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler]`\r\n\r\nHere is the stack trace from one of these errors:\r\n\r\n```\r\n[2020-03-28T01:37:43,598][WARN ][o.e.c.r.a.AllocationService] [rally-node-0] failing shard [failed shard, shard [osmgeopoints][3], node[177SLf7WTDCnrmB--Ryr2A], [R], s[STARTED], a[id=scJR6Wm3TmyemaIAAAnRcA], message [failed to perform indices:data/write/bulk[s] on replica [\r\nosmgeopoints][3], node[177SLf7WTDCnrmB--Ryr2A], [R], s[STARTED], a[id=scJR6Wm3TmyemaIAAAnRcA]], markAsStale [true], failure [org.elasticsearch.transport.RemoteTransportException: [rally-node-1][192.168.20.32:39300][indices:data/write/bulk[s][r]]\r\nCaused by: java.io.IOException: Invalid string; unexpected character: 146 hex: 92\r\n        at org.elasticsearch.common.io.stream.StreamInput.throwOnBrokenChar(StreamInput.java:543)\r\n        at org.elasticsearch.common.io.stream.StreamInput.readString(StreamInput.java:502)\r\n        at org.elasticsearch.action.support.replication.TransportReplicationAction$ConcreteShardRequest.<init>(TransportReplicationAction.java:1044)\r\n        at org.elasticsearch.action.support.replication.TransportReplicationAction$ConcreteReplicaRequest.<init>(TransportReplicationAction.java:1112)\r\n        at org.elasticsearch.action.support.replication.TransportReplicationAction.lambda$new$1(TransportReplicationAction.java:146)\r\n        at org.elasticsearch.transport.RequestHandlerRegistry.newRequest(RequestHandlerRegistry.java:56)\r\n        at org.elasticsearch.transport.InboundHandler.handleRequest(InboundHandler.java:185)\r\n        at org.elasticsearch.transport.InboundHandler.messageReceived(InboundHandler.java:129)\r\n        at org.elasticsearch.transport.InboundHandler.inboundMessage(InboundHandler.java:106)\r\n        at org.elasticsearch.transport.TcpTransport.inboundMessage(TcpTransport.java:672)\r\n        at org.elasticsearch.transport.InboundPipeline.forwardFragments(InboundPipeline.java:136)\r\n        at org.elasticsearch.transport.InboundPipeline.handleBytes(InboundPipeline.java:110)\r\n        at org.elasticsearch.transport.netty4.Netty4MessageChannelHandler.channelRead(Netty4MessageChannelHandler.java:68)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)\r\n        at io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:227)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:615)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:578)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n        at java.lang.Thread.run(Thread.java:834)\r\n]]\r\norg.elasticsearch.transport.RemoteTransportException: [rally-node-1][192.168.20.32:39300][indices:data/write/bulk[s][r]]\r\nCaused by: java.io.IOException: Invalid string; unexpected character: 146 hex: 92\r\n        at org.elasticsearch.common.io.stream.StreamInput.throwOnBrokenChar(StreamInput.java:543) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n        at org.elasticsearch.common.io.stream.StreamInput.readString(StreamInput.java:502) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n        at org.elasticsearch.action.support.replication.TransportReplicationAction$ConcreteShardRequest.<init>(TransportReplicationAction.java:1044) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n        at org.elasticsearch.action.support.replication.TransportReplicationAction$ConcreteReplicaRequest.<init>(TransportReplicationAction.java:1112) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n        at org.elasticsearch.action.support.replication.TransportReplicationAction.lambda$new$1(TransportReplicationAction.java:146) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n        at org.elasticsearch.transport.RequestHandlerRegistry.newRequest(RequestHandlerRegistry.java:56) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n        at org.elasticsearch.transport.InboundHandler.handleRequest(InboundHandler.java:185) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n        at org.elasticsearch.transport.InboundHandler.messageReceived(InboundHandler.java:129) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n        at org.elasticsearch.transport.InboundHandler.inboundMessage(InboundHandler.java:106) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n        at org.elasticsearch.transport.TcpTransport.inboundMessage(TcpTransport.java:672) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n        at org.elasticsearch.transport.InboundPipeline.forwardFragments(InboundPipeline.java:136) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n        at org.elasticsearch.transport.InboundPipeline.handleBytes(InboundPipeline.java:110) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\r\n        at org.elasticsearch.transport.netty4.Netty4MessageChannelHandler.channelRead(Netty4MessageChannelHandler.java:68) ~[?:?]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377) ~[?:?]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363) ~[?:?]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355) ~[?:?]\r\n        at io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:227) ~[?:?]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377) ~[?:?]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363) ~[?:?]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355) ~[?:?]\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[?:?]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377) ~[?:?]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363) ~[?:?]\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[?:?]\r\n        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) ~[?:?]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) ~[?:?]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:615) ~[?:?]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:578) ~[?:?]\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[?:?]\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[?:?]\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[?:?]\r\n        at java.lang.Thread.run(Thread.java:834) [?:?]\r\n```\r\n\r\nAfter some bisecting I could narrow it down to https://github.com/elastic/elasticsearch/pull/48263.\r\n\r\n**Steps to reproduce**:\r\n\r\nRun a benchmark with Rally against a three node cluster with the affected commit https://github.com/elastic/elasticsearch/commit/42150d3674089f415e0b8c54993aef2a03d016b5 and observe the failure after a while:\r\n\r\n```\r\nesrally --target-host=\"HOST_IP_A:39200,HOST_IP_B:39200,HOST_IP_C:39200\"  --track=\"geopoint\" --challenge=\"append-no-conflicts-index-only\" --car=\"4gheap\" --client-options=\"timeout:240\" --runtime-jdk=\"11\" --track-params=\"{\\\"number_of_replicas\\\": 1}\" --pipeline=\"from-sources-complete\" --revision=\"42150d3674089f415e0b8c54993aef2a03d016b5\" --on-error=abort\r\n```\r\n\r\nNotes:\r\n\r\n* you need to set proper IPs for `HOST_IP_A`, `HOST_IP_B` and `HOST_IP_C`\r\n* we did not observe the issue with single-node clusters","closed_by":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"performed_via_github_app":null}