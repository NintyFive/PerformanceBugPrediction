{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/39239","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39239/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39239/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39239/events","html_url":"https://github.com/elastic/elasticsearch/issues/39239","id":412925261,"node_id":"MDU6SXNzdWU0MTI5MjUyNjE=","number":39239,"title":"AND operator and minimum_should_match not working with custom analyzer having pattern capture filter","user":{"login":"pranavrth","id":4427674,"node_id":"MDQ6VXNlcjQ0Mjc2NzQ=","avatar_url":"https://avatars2.githubusercontent.com/u/4427674?v=4","gravatar_id":"","url":"https://api.github.com/users/pranavrth","html_url":"https://github.com/pranavrth","followers_url":"https://api.github.com/users/pranavrth/followers","following_url":"https://api.github.com/users/pranavrth/following{/other_user}","gists_url":"https://api.github.com/users/pranavrth/gists{/gist_id}","starred_url":"https://api.github.com/users/pranavrth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pranavrth/subscriptions","organizations_url":"https://api.github.com/users/pranavrth/orgs","repos_url":"https://api.github.com/users/pranavrth/repos","events_url":"https://api.github.com/users/pranavrth/events{/privacy}","received_events_url":"https://api.github.com/users/pranavrth/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-02-21T13:31:04Z","updated_at":"2019-02-22T09:40:58Z","closed_at":"2019-02-22T08:03:31Z","author_association":"NONE","active_lock_reason":null,"body":"<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 5.4.1\r\n\r\n**Plugins installed**: none\r\n\r\n**JVM version** (`java -version`): 1.8\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): windows\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nI created a custom pattern capture analyzer for one of the field. It creates 2 tokens most of the times. But when I am trying to use match query with AND operator or minimum_should_match as 100% , it returns records even if only 1 token got matched.\r\n\r\n**Steps to reproduce**:\r\n\r\n**Mapping for the index:**\r\n`\r\n{\r\n  \"settings\": {\r\n    \"analysis\": {\r\n      \"analyzer\": {\r\n        \"test_analyzer\": {\r\n          \"type\": \"custom\",\r\n          \"tokenizer\": \"keyword\",\r\n          \"filter\": [\r\n            \"lowercase\",\r\n            \"test_pattern\",\r\n            \"unique\"\r\n          ]\r\n        }\r\n      },\r\n      \"filter\": {\r\n        \"test_pattern\": {\r\n          \"type\": \"pattern_capture\",\r\n          \"preserve_original\": 0,\r\n          \"patterns\": [\r\n            \".*###(\\\\d*)###(.*###.*###.*)\",\r\n            \".*###(.*###.*###.*)\"\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"mappings\": {\r\n    \"doc_type\": {\r\n      \"properties\": {\r\n        \"test_value\": {\r\n          \"type\": \"text\",\r\n          \"analyzer\": \"test_analyzer\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n**Docs:**\r\n`{\r\n  \"test_value\": \"abc###def###12345###jkl###mno###pqr\"\r\n}\r\n`\r\n`\r\n{\r\n  \"test_value\": \"abc###def###12367###jkl###mno###pqr\"\r\n}\r\n`\r\n\r\n**Query:**\r\n`\r\n{\r\n  \"query\": {\r\n    \"match\": {\r\n      \"test_value\": {\r\n        \"query\": \"abc###def###12345###jkl###mno###pqr\",\r\n        \"operator\": \"AND\"\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n**Explanation:**\r\n`\r\n{\r\n  \"took\": 0,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 5,\r\n    \"successful\": 5,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": 2,\r\n    \"max_score\": 0.46029136,\r\n    \"hits\": [\r\n      {\r\n        \"_shard\": \"[test_stack][1]\",\r\n        \"_node\": \"JO7WIHxLQKW9b_hc8Xm9fQ\",\r\n        \"_index\": \"test_stack\",\r\n        \"_type\": \"doc_type\",\r\n        \"_id\": \"AWkPiO2DN2C8SdyE0d6K\",\r\n        \"_score\": 0.46029136,\r\n        \"_source\": {\r\n          \"test_value\": \"abc###def###12345###jkl###mno###pqr\"\r\n        },\r\n        \"_explanation\": {\r\n          \"value\": 0.46029136,\r\n          \"description\": \"weight(Synonym(test_value:12345 test_value:jkl###mno###pqr) in 0) [PerFieldSimilarity], result of:\",\r\n          \"details\": [\r\n            {\r\n              \"value\": 0.46029136,\r\n              \"description\": \"score(doc=0,freq=2.0 = termFreq=2.0 ), product of:\",\r\n              \"details\": [\r\n                {\r\n                  \"value\": 0.2876821,\r\n                  \"description\": \"idf, computed as log(1 + (docCount - docFreq + 0.5) / (docFreq + 0.5)) from:\",\r\n                  \"details\": [\r\n                    {\r\n                      \"value\": 1,\r\n                      \"description\": \"docFreq\",\r\n                      \"details\": []\r\n                    },\r\n                    {\r\n                      \"value\": 1,\r\n                      \"description\": \"docCount\",\r\n                      \"details\": []\r\n                    }\r\n                  ]\r\n                },\r\n                {\r\n                  \"value\": 1.6,\r\n                  \"description\": \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1 * (1 - b + b * fieldLength / avgFieldLength)) from:\",\r\n                  \"details\": [\r\n                    {\r\n                      \"value\": 2,\r\n                      \"description\": \"termFreq=2.0\",\r\n                      \"details\": []\r\n                    },\r\n                    {\r\n                      \"value\": 1.2,\r\n                      \"description\": \"parameter k1\",\r\n                      \"details\": []\r\n                    },\r\n                    {\r\n                      \"value\": 0.75,\r\n                      \"description\": \"parameter b\",\r\n                      \"details\": []\r\n                    },\r\n                    {\r\n                      \"value\": 2,\r\n                      \"description\": \"avgFieldLength\",\r\n                      \"details\": []\r\n                    },\r\n                    {\r\n                      \"value\": 1,\r\n                      \"description\": \"fieldLength\",\r\n                      \"details\": []\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        \"_shard\": \"[test_stack][4]\",\r\n        \"_node\": \"JO7WIHxLQKW9b_hc8Xm9fQ\",\r\n        \"_index\": \"test_stack\",\r\n        \"_type\": \"doc_type\",\r\n        \"_id\": \"AWkPiQfJN2C8SdyE0d6L\",\r\n        \"_score\": 0.36165747,\r\n        \"_source\": {\r\n          \"test_value\": \"abc###def###12378###jkl###mno###pqr\"\r\n        },\r\n        \"_explanation\": {\r\n          \"value\": 0.3616575,\r\n          \"description\": \"weight(Synonym(test_value:12345 test_value:jkl###mno###pqr) in 0) [PerFieldSimilarity], result of:\",\r\n          \"details\": [\r\n            {\r\n              \"value\": 0.3616575,\r\n              \"description\": \"score(doc=0,freq=1.0 = termFreq=1.0 ), product of:\",\r\n              \"details\": [\r\n                {\r\n                  \"value\": 0.2876821,\r\n                  \"description\": \"idf, computed as log(1 + (docCount - docFreq + 0.5) / (docFreq + 0.5)) from:\",\r\n                  \"details\": [\r\n                    {\r\n                      \"value\": 1,\r\n                      \"description\": \"docFreq\",\r\n                      \"details\": []\r\n                    },\r\n                    {\r\n                      \"value\": 1,\r\n                      \"description\": \"docCount\",\r\n                      \"details\": []\r\n                    }\r\n                  ]\r\n                },\r\n                {\r\n                  \"value\": 1.2571429,\r\n                  \"description\": \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1 * (1 - b + b * fieldLength / avgFieldLength)) from:\",\r\n                  \"details\": [\r\n                    {\r\n                      \"value\": 1,\r\n                      \"description\": \"termFreq=1.0\",\r\n                      \"details\": []\r\n                    },\r\n                    {\r\n                      \"value\": 1.2,\r\n                      \"description\": \"parameter k1\",\r\n                      \"details\": []\r\n                    },\r\n                    {\r\n                      \"value\": 0.75,\r\n                      \"description\": \"parameter b\",\r\n                      \"details\": []\r\n                    },\r\n                    {\r\n                      \"value\": 2,\r\n                      \"description\": \"avgFieldLength\",\r\n                      \"details\": []\r\n                    },\r\n                    {\r\n                      \"value\": 1,\r\n                      \"description\": \"fieldLength\",\r\n                      \"details\": []\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n`\r\n\r\n**Profiling:**\r\nhttps://pastebin.com/QGMjbCtf\r\n\r\n","closed_by":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"performed_via_github_app":null}