{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/45805","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45805/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45805/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45805/events","html_url":"https://github.com/elastic/elasticsearch/issues/45805","id":483516098,"node_id":"MDU6SXNzdWU0ODM1MTYwOTg=","number":45805,"title":"Test reference/query-dsl/has-parent-query/line_124 failing on CI","user":{"login":"gwbrown","id":1522844,"node_id":"MDQ6VXNlcjE1MjI4NDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1522844?v=4","gravatar_id":"","url":"https://api.github.com/users/gwbrown","html_url":"https://github.com/gwbrown","followers_url":"https://api.github.com/users/gwbrown/followers","following_url":"https://api.github.com/users/gwbrown/following{/other_user}","gists_url":"https://api.github.com/users/gwbrown/gists{/gist_id}","starred_url":"https://api.github.com/users/gwbrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gwbrown/subscriptions","organizations_url":"https://api.github.com/users/gwbrown/orgs","repos_url":"https://api.github.com/users/gwbrown/repos","events_url":"https://api.github.com/users/gwbrown/events{/privacy}","received_events_url":"https://api.github.com/users/gwbrown/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-08-21T16:10:49Z","updated_at":"2019-09-10T13:39:56Z","closed_at":"2019-09-10T13:39:56Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"This test was failing a bunch earlier today, but that failure was fixed by https://github.com/elastic/elasticsearch/pull/45782, this is a separate error. This appears to be the first time this test has failed this way on CI.\r\n\r\n[Build scan](https://gradle-enterprise.elastic.co/s/fchuwqijjahhy/tests/jbm2x6tnwtxku-3kwqnlzc2rxsw) and [associated Jenkins build](https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+master+multijob+fast+part1/872/)\r\n\r\nReproduce line (does not reproduce locally):\r\n```\r\n./gradlew :docs:integTestRunner --tests \"org.elasticsearch.smoketest.DocsClientYamlTestSuiteIT.test {yaml=reference/query-dsl/has-parent-query/line_124}\" -Dtests.seed=FE899C1D602E0127 -Dtests.security.manager=true -Dtests.locale=kk -Dtests.timezone=America/Jamaica -Dcompiler.java=12 -Druntime.java=11\r\n```\r\n\r\nError message:\r\n```\r\njava.lang.AssertionError\r\n: \r\nFailure at [reference/query-dsl/has-parent-query:3]: expected [2xx] status code but api [raw[method=PUT path=my-index]] returned [400 Bad Request] [{\"error\":{\"root_cause\":[{\"type\":\"resource_already_exists_exception\",\"reason\":\"index [my-index/HzY3GOBoR8Kj363zSQVlOw] already exists\",\"index_uuid\":\"HzY3GOBoR8Kj363zSQVlOw\",\"index\":\"my-index\",\"stack_trace\":\"[my-index/HzY3GOBoR8Kj363zSQVlOw] ResourceAlreadyExistsException[index [my-index/HzY3GOBoR8Kj363zSQVlOw] already exists]\\n\\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validateIndexName(MetaDataCreateIndexService.java:148)\\n\\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validate(MetaDataCreateIndexService.java:607)\\n\\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$IndexCreationTask.execute(MetaDataCreateIndexService.java:285)\\n\\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47)\\n\\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697)\\n\\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319)\\n\\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214)\\n\\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:699)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\\n\\tat java.base/java.lang.Thread.run(Thread.java:834)\\n\"}],\"type\":\"resource_already_exists_exception\",\"reason\":\"index [my-index/HzY3GOBoR8Kj363zSQVlOw] already exists\",\"index_uuid\":\"HzY3GOBoR8Kj363zSQVlOw\",\"index\":\"my-index\",\"stack_trace\":\"[my-index/HzY3GOBoR8Kj363zSQVlOw] ResourceAlreadyExistsException[index [my-index/HzY3GOBoR8Kj363zSQVlOw] already exists]\\n\\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validateIndexName(MetaDataCreateIndexService.java:148)\\n\\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validate(MetaDataCreateIndexService.java:607)\\n\\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$IndexCreationTask.execute(MetaDataCreateIndexService.java:285)\\n\\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47)\\n\\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697)\\n\\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319)\\n\\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214)\\n\\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:699)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\\n\\tat java.base/java.lang.Thread.run(Thread.java:834)\\n\"},\"status\":400}]\r\nOpen stacktrace\r\nCaused by: \r\njava.lang.AssertionError\r\n: \r\nexpected [2xx] status code but api [raw[method=PUT path=my-index]] returned [400 Bad Request] [{\"error\":{\"root_cause\":[{\"type\":\"resource_already_exists_exception\",\"reason\":\"index [my-index/HzY3GOBoR8Kj363zSQVlOw] already exists\",\"index_uuid\":\"HzY3GOBoR8Kj363zSQVlOw\",\"index\":\"my-index\",\"stack_trace\":\"[my-index/HzY3GOBoR8Kj363zSQVlOw] ResourceAlreadyExistsException[index [my-index/HzY3GOBoR8Kj363zSQVlOw] already exists]\\n\\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validateIndexName(MetaDataCreateIndexService.java:148)\\n\\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validate(MetaDataCreateIndexService.java:607)\\n\\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$IndexCreationTask.execute(MetaDataCreateIndexService.java:285)\\n\\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47)\\n\\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697)\\n\\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319)\\n\\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214)\\n\\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:699)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\\n\\tat java.base/java.lang.Thread.run(Thread.java:834)\\n\"}],\"type\":\"resource_already_exists_exception\",\"reason\":\"index [my-index/HzY3GOBoR8Kj363zSQVlOw] already exists\",\"index_uuid\":\"HzY3GOBoR8Kj363zSQVlOw\",\"index\":\"my-index\",\"stack_trace\":\"[my-index/HzY3GOBoR8Kj363zSQVlOw] ResourceAlreadyExistsException[index [my-index/HzY3GOBoR8Kj363zSQVlOw] already exists]\\n\\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validateIndexName(MetaDataCreateIndexService.java:148)\\n\\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validate(MetaDataCreateIndexService.java:607)\\n\\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$IndexCreationTask.execute(MetaDataCreateIndexService.java:285)\\n\\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47)\\n\\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697)\\n\\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319)\\n\\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214)\\n\\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:699)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\\n\\tat java.base/java.lang.Thread.run(Thread.java:834)\\n\"},\"status\":400}]\r\nOpen stacktrace\r\n[2019-08-21T10:46:03,979][INFO ][o.e.s.DocsClientYamlTestSuiteIT] [test] [yaml=reference/query-dsl/has-parent-query/line_124] before test\r\n[2019-08-21T10:46:34,020][INFO ][o.e.s.DocsClientYamlTestSuiteIT] [test] Stash dump on test failure [{\r\n  \"stash\" : {\r\n    \"body\" : {\r\n      \"error\" : {\r\n        \"root_cause\" : [\r\n          {\r\n            \"type\" : \"resource_already_exists_exception\",\r\n            \"reason\" : \"index [my-index/HzY3GOBoR8Kj363zSQVlOw] already exists\",\r\n            \"index_uuid\" : \"HzY3GOBoR8Kj363zSQVlOw\",\r\n            \"index\" : \"my-index\",\r\n            \"stack_trace\" : \"[my-index/HzY3GOBoR8Kj363zSQVlOw] ResourceAlreadyExistsException[index [my-index/HzY3GOBoR8Kj363zSQVlOw] already exists]\r\n\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validateIndexName(MetaDataCreateIndexService.java:148)\r\n\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validate(MetaDataCreateIndexService.java:607)\r\n\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$IndexCreationTask.execute(MetaDataCreateIndexService.java:285)\r\n\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47)\r\n\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697)\r\n\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319)\r\n\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214)\r\n\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151)\r\n\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\r\n\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:699)\r\n\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252)\r\n\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n\"\r\n          }\r\n        ],\r\n        \"type\" : \"resource_already_exists_exception\",\r\n        \"reason\" : \"index [my-index/HzY3GOBoR8Kj363zSQVlOw] already exists\",\r\n        \"index_uuid\" : \"HzY3GOBoR8Kj363zSQVlOw\",\r\n        \"index\" : \"my-index\",\r\n        \"stack_trace\" : \"[my-index/HzY3GOBoR8Kj363zSQVlOw] ResourceAlreadyExistsException[index [my-index/HzY3GOBoR8Kj363zSQVlOw] already exists]\r\n\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validateIndexName(MetaDataCreateIndexService.java:148)\r\n\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validate(MetaDataCreateIndexService.java:607)\r\n\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$IndexCreationTask.execute(MetaDataCreateIndexService.java:285)\r\n\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47)\r\n\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697)\r\n\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319)\r\n\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214)\r\n\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151)\r\n\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\r\n\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:699)\r\n\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252)\r\n\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n\"\r\n      },\r\n      \"status\" : 400\r\n    }\r\n  }\r\n}]\r\n```","closed_by":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"performed_via_github_app":null}