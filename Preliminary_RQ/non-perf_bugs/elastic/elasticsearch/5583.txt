{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/5583","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5583/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5583/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5583/events","html_url":"https://github.com/elastic/elasticsearch/issues/5583","id":30345140,"node_id":"MDU6SXNzdWUzMDM0NTE0MA==","number":5583,"title":"Please don't forbid Math.abs(int/long)","user":{"login":"benjismith","id":458075,"node_id":"MDQ6VXNlcjQ1ODA3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/458075?v=4","gravatar_id":"","url":"https://api.github.com/users/benjismith","html_url":"https://github.com/benjismith","followers_url":"https://api.github.com/users/benjismith/followers","following_url":"https://api.github.com/users/benjismith/following{/other_user}","gists_url":"https://api.github.com/users/benjismith/gists{/gist_id}","starred_url":"https://api.github.com/users/benjismith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benjismith/subscriptions","organizations_url":"https://api.github.com/users/benjismith/orgs","repos_url":"https://api.github.com/users/benjismith/repos","events_url":"https://api.github.com/users/benjismith/events{/privacy}","received_events_url":"https://api.github.com/users/benjismith/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-03-27T21:44:58Z","updated_at":"2014-03-27T21:53:43Z","closed_at":"2014-03-27T21:49:08Z","author_association":"NONE","active_lock_reason":null,"body":"I just reviewed the pull request https://github.com/elasticsearch/elasticsearch/pull/5562 and I strongly disagree with the change.\n\nI'm currently using this feature to implement **_delta**_ sorting. For example, given these documents:\n\n``` json\n{ \"name\" : \"John\",  \"year\" : 1975 }\n{ \"name\" : \"Jim\",  \"year\" : 1976 }\n{ \"name\" : \"James\",  \"year\" : 1977 }\n{ \"name\" : \"Jody\",  \"year\" : 1978 }\n{ \"name\" : \"Josh\",  \"year\" : 1979 }\n```\n\nConsider a query like this, where I want the 1977 results to come first, and then the 1978 and 1976 results next, and the the 1975 and 1979 results last:\n\n``` json\n{\n  \"query\" : { \"match_all\" : {} },\n  \"sort\" : [{\n    \"_script\" : {\n      \"script\" : \"abs(1977-doc['year'].value)\",\n      \"order\" : \"asc\"\n    }\n  }]\n}\n```\n\nI use this kind of trick all the time (it's very common in the higher-education domain), and it depends on absolute values for int & long values, so your pull request is going to break my code.\n\nWouldn't it make more sense to just throw a 400 BAD REQUEST when the query tries to do abs(Integer.MIN_VALUE) instead of removing the function entirely for integral types?\n","closed_by":{"login":"benjismith","id":458075,"node_id":"MDQ6VXNlcjQ1ODA3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/458075?v=4","gravatar_id":"","url":"https://api.github.com/users/benjismith","html_url":"https://github.com/benjismith","followers_url":"https://api.github.com/users/benjismith/followers","following_url":"https://api.github.com/users/benjismith/following{/other_user}","gists_url":"https://api.github.com/users/benjismith/gists{/gist_id}","starred_url":"https://api.github.com/users/benjismith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benjismith/subscriptions","organizations_url":"https://api.github.com/users/benjismith/orgs","repos_url":"https://api.github.com/users/benjismith/repos","events_url":"https://api.github.com/users/benjismith/events{/privacy}","received_events_url":"https://api.github.com/users/benjismith/received_events","type":"User","site_admin":false},"performed_via_github_app":null}