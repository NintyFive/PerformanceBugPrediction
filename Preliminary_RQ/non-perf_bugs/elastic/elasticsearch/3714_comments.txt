[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/29256131","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-29256131","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":29256131,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MjU2MTMx","user":{"login":"abh","id":16861,"node_id":"MDQ6VXNlcjE2ODYx","avatar_url":"https://avatars0.githubusercontent.com/u/16861?v=4","gravatar_id":"","url":"https://api.github.com/users/abh","html_url":"https://github.com/abh","followers_url":"https://api.github.com/users/abh/followers","following_url":"https://api.github.com/users/abh/following{/other_user}","gists_url":"https://api.github.com/users/abh/gists{/gist_id}","starred_url":"https://api.github.com/users/abh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abh/subscriptions","organizations_url":"https://api.github.com/users/abh/orgs","repos_url":"https://api.github.com/users/abh/repos","events_url":"https://api.github.com/users/abh/events{/privacy}","received_events_url":"https://api.github.com/users/abh/received_events","type":"User","site_admin":false},"created_at":"2013-11-26T00:12:48Z","updated_at":"2013-11-26T00:12:48Z","author_association":"CONTRIBUTOR","body":"I'd like to convert a postgresql based application to use ES but got hung up on missing this feature, too. The queries are using netmasks/cidrs so just having the IPv6 address as a string won't be \"good enough\".\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/29269230","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-29269230","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":29269230,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MjY5MjMw","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2013-11-26T05:55:06Z","updated_at":"2013-11-26T05:55:06Z","author_association":"MEMBER","body":"For IP V6, just mark your field as not_analyzed in mapping.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/29330873","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-29330873","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":29330873,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzMwODcz","user":{"login":"abh","id":16861,"node_id":"MDQ6VXNlcjE2ODYx","avatar_url":"https://avatars0.githubusercontent.com/u/16861?v=4","gravatar_id":"","url":"https://api.github.com/users/abh","html_url":"https://github.com/abh","followers_url":"https://api.github.com/users/abh/followers","following_url":"https://api.github.com/users/abh/following{/other_user}","gists_url":"https://api.github.com/users/abh/gists{/gist_id}","starred_url":"https://api.github.com/users/abh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abh/subscriptions","organizations_url":"https://api.github.com/users/abh/orgs","repos_url":"https://api.github.com/users/abh/repos","events_url":"https://api.github.com/users/abh/events{/privacy}","received_events_url":"https://api.github.com/users/abh/received_events","type":"User","site_admin":false},"created_at":"2013-11-26T20:28:51Z","updated_at":"2013-11-26T20:28:51Z","author_association":"CONTRIBUTOR","body":"@dadoonet That doesn't make any sense.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/29334960","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-29334960","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":29334960,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzM0OTYw","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2013-11-26T21:19:20Z","updated_at":"2013-11-26T21:19:20Z","author_association":"MEMBER","body":"Do you mean that you don't understand my answer or my answer does not answer to your question?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/29335989","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-29335989","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":29335989,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzM1OTg5","user":{"login":"abh","id":16861,"node_id":"MDQ6VXNlcjE2ODYx","avatar_url":"https://avatars0.githubusercontent.com/u/16861?v=4","gravatar_id":"","url":"https://api.github.com/users/abh","html_url":"https://github.com/abh","followers_url":"https://api.github.com/users/abh/followers","following_url":"https://api.github.com/users/abh/following{/other_user}","gists_url":"https://api.github.com/users/abh/gists{/gist_id}","starred_url":"https://api.github.com/users/abh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abh/subscriptions","organizations_url":"https://api.github.com/users/abh/orgs","repos_url":"https://api.github.com/users/abh/repos","events_url":"https://api.github.com/users/abh/events{/privacy}","received_events_url":"https://api.github.com/users/abh/received_events","type":"User","site_admin":false},"created_at":"2013-11-26T21:32:05Z","updated_at":"2013-11-26T21:32:16Z","author_association":"CONTRIBUTOR","body":"@dadoonet What's the point of the \"ip type\" if a reasonable answer to supporting IPv6 is \"just make it a not analyzed string\"? They're not the same thing, I'd hope.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/29341982","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-29341982","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":29341982,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzQxOTgy","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2013-11-26T22:34:18Z","updated_at":"2013-11-26T22:34:18Z","author_association":"MEMBER","body":"IP type is only for IP v4. Type name should be ipv4 instead of ip.\nFor ipv6 I don't think a special type is needed. Keeping ipv6 as non tokenized string should do the job.\n\nHhow do you expect ipv6 content to be converted to?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/29342328","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-29342328","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":29342328,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzQyMzI4","user":{"login":"abh","id":16861,"node_id":"MDQ6VXNlcjE2ODYx","avatar_url":"https://avatars0.githubusercontent.com/u/16861?v=4","gravatar_id":"","url":"https://api.github.com/users/abh","html_url":"https://github.com/abh","followers_url":"https://api.github.com/users/abh/followers","following_url":"https://api.github.com/users/abh/following{/other_user}","gists_url":"https://api.github.com/users/abh/gists{/gist_id}","starred_url":"https://api.github.com/users/abh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abh/subscriptions","organizations_url":"https://api.github.com/users/abh/orgs","repos_url":"https://api.github.com/users/abh/repos","events_url":"https://api.github.com/users/abh/events{/privacy}","received_events_url":"https://api.github.com/users/abh/received_events","type":"User","site_admin":false},"created_at":"2013-11-26T22:38:57Z","updated_at":"2013-11-26T22:38:57Z","author_association":"CONTRIBUTOR","body":"It could be converted to a number, for instance, and then allow range searches etc similar to the \"ipv4\" type.\n\nBetter yet the \"ip type\" should \"just work\" for both (similar to what postgresql does, for example).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/29343199","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-29343199","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":29343199,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzQzMTk5","user":{"login":"bodgit","id":559268,"node_id":"MDQ6VXNlcjU1OTI2OA==","avatar_url":"https://avatars2.githubusercontent.com/u/559268?v=4","gravatar_id":"","url":"https://api.github.com/users/bodgit","html_url":"https://github.com/bodgit","followers_url":"https://api.github.com/users/bodgit/followers","following_url":"https://api.github.com/users/bodgit/following{/other_user}","gists_url":"https://api.github.com/users/bodgit/gists{/gist_id}","starred_url":"https://api.github.com/users/bodgit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bodgit/subscriptions","organizations_url":"https://api.github.com/users/bodgit/orgs","repos_url":"https://api.github.com/users/bodgit/repos","events_url":"https://api.github.com/users/bodgit/events{/privacy}","received_events_url":"https://api.github.com/users/bodgit/received_events","type":"User","site_admin":false},"created_at":"2013-11-26T22:50:58Z","updated_at":"2013-11-26T22:50:58Z","author_association":"NONE","body":"There are ways of expressing IPv6 addresses that would likely fail a simple string-based match, the whole '::' expansion for one.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/29369822","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-29369822","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":29369822,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzY5ODIy","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2013-11-27T09:17:00Z","updated_at":"2013-11-27T09:17:00Z","author_association":"MEMBER","body":"@bodgit Very good point! I'm going to think about it a bit more.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/30751459","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-30751459","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":30751459,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzUxNDU5","user":{"login":"lifo101","id":367337,"node_id":"MDQ6VXNlcjM2NzMzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/367337?v=4","gravatar_id":"","url":"https://api.github.com/users/lifo101","html_url":"https://github.com/lifo101","followers_url":"https://api.github.com/users/lifo101/followers","following_url":"https://api.github.com/users/lifo101/following{/other_user}","gists_url":"https://api.github.com/users/lifo101/gists{/gist_id}","starred_url":"https://api.github.com/users/lifo101/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lifo101/subscriptions","organizations_url":"https://api.github.com/users/lifo101/orgs","repos_url":"https://api.github.com/users/lifo101/repos","events_url":"https://api.github.com/users/lifo101/events{/privacy}","received_events_url":"https://api.github.com/users/lifo101/received_events","type":"User","site_admin":false},"created_at":"2013-12-17T13:46:11Z","updated_at":"2013-12-17T13:46:11Z","author_association":"NONE","body":"I have an app that stores iPv4/6 addresses as DECIMAL(39,0) in a mysql database which allows for very easy range searching. I wait for the day when ES will support something similar for IPv6 so I can finally use ES for indexing my database.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/32627832","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-32627832","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":32627832,"node_id":"MDEyOklzc3VlQ29tbWVudDMyNjI3ODMy","user":{"login":"jvbrandis","id":6431642,"node_id":"MDQ6VXNlcjY0MzE2NDI=","avatar_url":"https://avatars1.githubusercontent.com/u/6431642?v=4","gravatar_id":"","url":"https://api.github.com/users/jvbrandis","html_url":"https://github.com/jvbrandis","followers_url":"https://api.github.com/users/jvbrandis/followers","following_url":"https://api.github.com/users/jvbrandis/following{/other_user}","gists_url":"https://api.github.com/users/jvbrandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jvbrandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jvbrandis/subscriptions","organizations_url":"https://api.github.com/users/jvbrandis/orgs","repos_url":"https://api.github.com/users/jvbrandis/repos","events_url":"https://api.github.com/users/jvbrandis/events{/privacy}","received_events_url":"https://api.github.com/users/jvbrandis/received_events","type":"User","site_admin":false},"created_at":"2014-01-17T17:44:58Z","updated_at":"2014-01-17T19:00:53Z","author_association":"NONE","body":"When storing IPv6 addresses, I store it as a \"fully formatted\" IPv6-string, i.e. XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX, regardless of zeros (so, never shortening a segment to less than four digits, and never shortcutting segments with ::).\nThis way, all IPv6 addresses are fully sortable and searchable, so this should work with ES (using not-analyzed mapping). However, it is very space-consuming when comparing to what an IPv6 address really is, which is 16 bytes (while this becomes 40 bytes...)\nAlso, if putting IPv4-addresses into this mix, sorting/filtering on a range will lead to problems mixing IPv4 and IPv6.\n(This could be solved by using the IPv4-mapping format of IPv6, that is all IPv4 addresses are stored as IPv6 as ::FFFF:XXXX:XXXX (last four bytes being the IPv4 address)\n\nThe other approach is to store as a binary field, using 16 bytes, (still storing IPv4-addresses in IPv4-mapped IPv6-format). My approach to this in mysql is actually a BINARY(16) column.\nHowever, this is inconvenient as manually browsing/inspecting the data becomes cumbersome.\n\nSo; I am also eagerly awaiting ES support for IPv6, storing IPv6-addresses in numeric format, but with support for properly displaying them and accepting query parameters in IP-format.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/38953438","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-38953438","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":38953438,"node_id":"MDEyOklzc3VlQ29tbWVudDM4OTUzNDM4","user":{"login":"cpdean","id":160099,"node_id":"MDQ6VXNlcjE2MDA5OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/160099?v=4","gravatar_id":"","url":"https://api.github.com/users/cpdean","html_url":"https://github.com/cpdean","followers_url":"https://api.github.com/users/cpdean/followers","following_url":"https://api.github.com/users/cpdean/following{/other_user}","gists_url":"https://api.github.com/users/cpdean/gists{/gist_id}","starred_url":"https://api.github.com/users/cpdean/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cpdean/subscriptions","organizations_url":"https://api.github.com/users/cpdean/orgs","repos_url":"https://api.github.com/users/cpdean/repos","events_url":"https://api.github.com/users/cpdean/events{/privacy}","received_events_url":"https://api.github.com/users/cpdean/received_events","type":"User","site_admin":false},"created_at":"2014-03-28T18:35:15Z","updated_at":"2014-03-28T18:35:15Z","author_association":"NONE","body":"+1. would like this feature\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/39001695","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-39001695","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":39001695,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MDAxNjk1","user":{"login":"ioc32","id":1151149,"node_id":"MDQ6VXNlcjExNTExNDk=","avatar_url":"https://avatars3.githubusercontent.com/u/1151149?v=4","gravatar_id":"","url":"https://api.github.com/users/ioc32","html_url":"https://github.com/ioc32","followers_url":"https://api.github.com/users/ioc32/followers","following_url":"https://api.github.com/users/ioc32/following{/other_user}","gists_url":"https://api.github.com/users/ioc32/gists{/gist_id}","starred_url":"https://api.github.com/users/ioc32/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ioc32/subscriptions","organizations_url":"https://api.github.com/users/ioc32/orgs","repos_url":"https://api.github.com/users/ioc32/repos","events_url":"https://api.github.com/users/ioc32/events{/privacy}","received_events_url":"https://api.github.com/users/ioc32/received_events","type":"User","site_admin":false},"created_at":"2014-03-29T17:03:47Z","updated_at":"2014-03-29T17:03:47Z","author_association":"NONE","body":"As @abh pointed out the fact ES is not currently supporting both protocols equally is a show stopper for many applications - to be ported or to be implemented from scratch.\n\nES is pretty much becoming a de facto standard when it comes to scalable event storage, search and analysis. In my particular use case, and I do not think I am the only one here, I deal with IPv4 just as much as with IPv6. Having both address families under a single, coherent data type is to be desired. Mappings, queries, indexing... would become unified and consequently easier to use for everyone. \n\n@dadoonet I wonder what's the reason for ES to support IPv4-only data types in first place. Was it a technical decision due to implementation difficulties, was it a matter of priorities? Or, on the other hand, was it a consequence of you guys perceiving ES users did not care about IPv6? Is it at least in your roadmap?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/39003611","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-39003611","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":39003611,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MDAzNjEx","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2014-03-29T18:06:39Z","updated_at":"2014-03-29T18:06:39Z","author_association":"MEMBER","body":"@ioc32 It is on my TODO list for sure! I need to find some quiet time to work on it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/39003715","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-39003715","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":39003715,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MDAzNzE1","user":{"login":"ioc32","id":1151149,"node_id":"MDQ6VXNlcjExNTExNDk=","avatar_url":"https://avatars3.githubusercontent.com/u/1151149?v=4","gravatar_id":"","url":"https://api.github.com/users/ioc32","html_url":"https://github.com/ioc32","followers_url":"https://api.github.com/users/ioc32/followers","following_url":"https://api.github.com/users/ioc32/following{/other_user}","gists_url":"https://api.github.com/users/ioc32/gists{/gist_id}","starred_url":"https://api.github.com/users/ioc32/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ioc32/subscriptions","organizations_url":"https://api.github.com/users/ioc32/orgs","repos_url":"https://api.github.com/users/ioc32/repos","events_url":"https://api.github.com/users/ioc32/events{/privacy}","received_events_url":"https://api.github.com/users/ioc32/received_events","type":"User","site_admin":false},"created_at":"2014-03-29T18:09:53Z","updated_at":"2014-03-29T18:09:53Z","author_association":"NONE","body":"@dadoonet great! Thank you for updating us!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/39007662","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-39007662","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":39007662,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MDA3NjYy","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2014-03-29T20:19:26Z","updated_at":"2014-03-29T20:19:26Z","author_association":"MEMBER","body":"the reason is simple, ipv4 can easily be translated to 64bit long, which supports range constructs, ipv6 is more complex.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/39041948","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-39041948","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":39041948,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MDQxOTQ4","user":{"login":"cpdean","id":160099,"node_id":"MDQ6VXNlcjE2MDA5OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/160099?v=4","gravatar_id":"","url":"https://api.github.com/users/cpdean","html_url":"https://github.com/cpdean","followers_url":"https://api.github.com/users/cpdean/followers","following_url":"https://api.github.com/users/cpdean/following{/other_user}","gists_url":"https://api.github.com/users/cpdean/gists{/gist_id}","starred_url":"https://api.github.com/users/cpdean/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cpdean/subscriptions","organizations_url":"https://api.github.com/users/cpdean/orgs","repos_url":"https://api.github.com/users/cpdean/repos","events_url":"https://api.github.com/users/cpdean/events{/privacy}","received_events_url":"https://api.github.com/users/cpdean/received_events","type":"User","site_admin":false},"created_at":"2014-03-30T22:21:17Z","updated_at":"2014-03-30T22:21:17Z","author_association":"NONE","body":"definitely looking forward to this.  It'll really round out the ELK stack for feature complete network analysis. thanks!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/39047950","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-39047950","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":39047950,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MDQ3OTUw","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2014-03-31T01:51:28Z","updated_at":"2014-03-31T01:51:28Z","author_association":"MEMBER","body":"understood, though for now, if you can get around with prefix checks, you can map the IP as string.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/39166174","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-39166174","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":39166174,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MTY2MTc0","user":{"login":"xaque208","id":334176,"node_id":"MDQ6VXNlcjMzNDE3Ng==","avatar_url":"https://avatars3.githubusercontent.com/u/334176?v=4","gravatar_id":"","url":"https://api.github.com/users/xaque208","html_url":"https://github.com/xaque208","followers_url":"https://api.github.com/users/xaque208/followers","following_url":"https://api.github.com/users/xaque208/following{/other_user}","gists_url":"https://api.github.com/users/xaque208/gists{/gist_id}","starred_url":"https://api.github.com/users/xaque208/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xaque208/subscriptions","organizations_url":"https://api.github.com/users/xaque208/orgs","repos_url":"https://api.github.com/users/xaque208/repos","events_url":"https://api.github.com/users/xaque208/events{/privacy}","received_events_url":"https://api.github.com/users/xaque208/received_events","type":"User","site_admin":false},"created_at":"2014-04-01T02:56:21Z","updated_at":"2014-04-01T02:56:21Z","author_association":"NONE","body":"+1 to defending @dadoonet's quiet time.  I'd love to see this happen.  \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/39413195","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-39413195","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":39413195,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NDEzMTk1","user":{"login":"Dunaeth","id":2736537,"node_id":"MDQ6VXNlcjI3MzY1Mzc=","avatar_url":"https://avatars0.githubusercontent.com/u/2736537?v=4","gravatar_id":"","url":"https://api.github.com/users/Dunaeth","html_url":"https://github.com/Dunaeth","followers_url":"https://api.github.com/users/Dunaeth/followers","following_url":"https://api.github.com/users/Dunaeth/following{/other_user}","gists_url":"https://api.github.com/users/Dunaeth/gists{/gist_id}","starred_url":"https://api.github.com/users/Dunaeth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Dunaeth/subscriptions","organizations_url":"https://api.github.com/users/Dunaeth/orgs","repos_url":"https://api.github.com/users/Dunaeth/repos","events_url":"https://api.github.com/users/Dunaeth/events{/privacy}","received_events_url":"https://api.github.com/users/Dunaeth/received_events","type":"User","site_admin":false},"created_at":"2014-04-03T05:07:50Z","updated_at":"2014-04-03T05:07:50Z","author_association":"NONE","body":"Wouldn't it be possible to use fixed length lucene binary field types for ips and use binary sorting (I read about binary utf8 sorting in lucene, but I lack somme skills on the subject) ?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/39416783","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-39416783","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":39416783,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NDE2Nzgz","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-04-03T06:26:47Z","updated_at":"2014-04-03T06:26:47Z","author_association":"CONTRIBUTOR","body":"It is indeed possible to encode ipv6 ips as binary fields, Lucene doesn't require index terms to be UTF-8 sequences, it can be anything. The challenge here is more that for IPs, we need to support efficient ranges because that's typically how these fields are filtered. Lucene provides support for efficient ranges with numeric fields (see [NumericRangeQuery](http://lucene.apache.org/core/4_7_0/core/org/apache/lucene/search/NumericRangeQuery.html)): basically every field gets indexed with different precision levels, and this allows range queries to visit few terms no matter how large the range is (the fewer terms are visited the more efficient queries are). So we would need a similar mechanism for storing ipv6 addresses.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/39504641","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-39504641","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":39504641,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NTA0NjQx","user":{"login":"seti123","id":2937597,"node_id":"MDQ6VXNlcjI5Mzc1OTc=","avatar_url":"https://avatars3.githubusercontent.com/u/2937597?v=4","gravatar_id":"","url":"https://api.github.com/users/seti123","html_url":"https://github.com/seti123","followers_url":"https://api.github.com/users/seti123/followers","following_url":"https://api.github.com/users/seti123/following{/other_user}","gists_url":"https://api.github.com/users/seti123/gists{/gist_id}","starred_url":"https://api.github.com/users/seti123/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/seti123/subscriptions","organizations_url":"https://api.github.com/users/seti123/orgs","repos_url":"https://api.github.com/users/seti123/repos","events_url":"https://api.github.com/users/seti123/events{/privacy}","received_events_url":"https://api.github.com/users/seti123/received_events","type":"User","site_admin":false},"created_at":"2014-04-03T21:04:04Z","updated_at":"2014-04-03T21:04:04Z","author_association":"NONE","body":"+1  \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/48712076","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-48712076","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":48712076,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzEyMDc2","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-07-11T09:41:26Z","updated_at":"2014-07-11T09:41:26Z","author_association":"CONTRIBUTOR","body":"Depends on https://issues.apache.org/jira/browse/LUCENE-5596\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/121402857","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-121402857","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":121402857,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMTQwMjg1Nw==","user":{"login":"avleen","id":539525,"node_id":"MDQ6VXNlcjUzOTUyNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/539525?v=4","gravatar_id":"","url":"https://api.github.com/users/avleen","html_url":"https://github.com/avleen","followers_url":"https://api.github.com/users/avleen/followers","following_url":"https://api.github.com/users/avleen/following{/other_user}","gists_url":"https://api.github.com/users/avleen/gists{/gist_id}","starred_url":"https://api.github.com/users/avleen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avleen/subscriptions","organizations_url":"https://api.github.com/users/avleen/orgs","repos_url":"https://api.github.com/users/avleen/repos","events_url":"https://api.github.com/users/avleen/events{/privacy}","received_events_url":"https://api.github.com/users/avleen/received_events","type":"User","site_admin":false},"created_at":"2015-07-14T21:52:34Z","updated_at":"2015-07-14T21:52:34Z","author_association":"NONE","body":"I see we're still blocked on Lucene's support for BigInt for this. But that ticket hasn't seen any action in a while either.\nAny updates for this @clintongormley? IPv6 is becoming a real thing, so this would be really handy :-)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/121722580","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-121722580","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":121722580,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMTcyMjU4MA==","user":{"login":"xaque208","id":334176,"node_id":"MDQ6VXNlcjMzNDE3Ng==","avatar_url":"https://avatars3.githubusercontent.com/u/334176?v=4","gravatar_id":"","url":"https://api.github.com/users/xaque208","html_url":"https://github.com/xaque208","followers_url":"https://api.github.com/users/xaque208/followers","following_url":"https://api.github.com/users/xaque208/following{/other_user}","gists_url":"https://api.github.com/users/xaque208/gists{/gist_id}","starred_url":"https://api.github.com/users/xaque208/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xaque208/subscriptions","organizations_url":"https://api.github.com/users/xaque208/orgs","repos_url":"https://api.github.com/users/xaque208/repos","events_url":"https://api.github.com/users/xaque208/events{/privacy}","received_events_url":"https://api.github.com/users/xaque208/received_events","type":"User","site_admin":false},"created_at":"2015-07-15T19:35:35Z","updated_at":"2015-07-15T19:35:35Z","author_association":"NONE","body":"Its a 14 year old protocol.  We're well beyond 'real thing' :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/121761672","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-121761672","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":121761672,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMTc2MTY3Mg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-07-15T21:57:17Z","updated_at":"2015-07-15T21:57:17Z","author_association":"CONTRIBUTOR","body":"The Lucene issue is stalled indeed, as it proved very hard to integrate... The feature is currently exposed as an experimental postings format which is not supported in terms of backward compatibility.\n\nWith small numbers (up to 64 bits) today we have static pre-computed ranges, which is probably fine. For instance for ints (32 bits) we have a default precision step of 8 bits which means that we pre-compute ranges for all numbers that have the same 24, 16 or 8 upper bits (0-256, 256-512, 512-768, ..., 0-65536, 65536-131072, 131072-196608, ..., 0-16777216, 16777216-33554432, 33554432-50331648, ...). Any arbitrary range can be translated to a union of these pre-computed ranges, and this is the way we manage to have fast ranges on numerics.\n\nWith high numbers of bits, like 128 here, the space-time trade-off becomes tricky I think. For instance with a precision step of 16, we would have to index 8 tokens per value while range queries would still visit hundreds of thousands of terms in the worst-case.\n\nGiven that ipv6 addresses tend to use the lower bytes less, maybe that would be fine, but I'm a bit reluctant to expose a new field type for ipv6 addresses that would not perform well for range queries. An option could be to have a new type for ipv6 addresses that would only support sorting and aggs but not queries, however I'm not sure how useful it would be?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/121794942","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-121794942","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":121794942,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMTc5NDk0Mg==","user":{"login":"avleen","id":539525,"node_id":"MDQ6VXNlcjUzOTUyNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/539525?v=4","gravatar_id":"","url":"https://api.github.com/users/avleen","html_url":"https://github.com/avleen","followers_url":"https://api.github.com/users/avleen/followers","following_url":"https://api.github.com/users/avleen/following{/other_user}","gists_url":"https://api.github.com/users/avleen/gists{/gist_id}","starred_url":"https://api.github.com/users/avleen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avleen/subscriptions","organizations_url":"https://api.github.com/users/avleen/orgs","repos_url":"https://api.github.com/users/avleen/repos","events_url":"https://api.github.com/users/avleen/events{/privacy}","received_events_url":"https://api.github.com/users/avleen/received_events","type":"User","site_admin":false},"created_at":"2015-07-16T01:15:52Z","updated_at":"2015-07-16T01:15:52Z","author_association":"NONE","body":"Agreed.\n/64's are the smallest allocations that are generally given out, so\nsearching for a range may not (initially) need more precision than that.\nIf we see an IPv6 address, we can store the range of the /64 it is in, and\nthen work up from there?\n/64, /32, /16, /8, /4, /2, /1, /0\nThat's 8 bits there, and from a practical perspective it might be\nsufficient. Most end users get a /64, which makes searching in that easy.\nISPs get at least /32 sized blocks.\n\nMost IPv6 address allocated today, when converted to decimal are about 38\nbytes. That means 76 bytes (upper and lower bounds) to store each range. So\nabout 600 bytes of storage required for the precision, per address, in\naddition to the ~38 bytes for the address itself.. That's quite a lot, but\nthat's really just the way it is - we can't make these numbers smaller ;-)\n\nIf we restrict range searches to at least /64, could this then work out?\n\nOn Wed, Jul 15, 2015 at 5:57 PM Adrien Grand notifications@github.com\nwrote:\n\n> The Lucene issue is stalled indeed, as it proved very hard to integrate...\n> The feature is currently exposed as an experimental postings format which\n> is not supported in terms of backward compatibility.\n> \n> With small numbers (up to 64 bits) today we have static pre-computed\n> ranges, which is probably fine. For instance for ints (32 bits) we have a\n> default precision step of 8 bits which means that we pre-compute ranges for\n> all numbers that have the same 24, 16 or 8 upper bits (0-256, 256-512,\n> 512-768, ..., 0-65536, 65536-131072, 131072-196608, ..., 0-16777216,\n> 16777216-33554432, 33554432-50331648, ...). Any arbitrary range can be\n> translated to a union of these pre-computed ranges, and this is the way we\n> manage to have fast ranges on numerics.\n> \n> With high numbers of bits, like 128 here, the space-time trade-off becomes\n> tricky I think. For instance with a precision step of 16, we would have to\n> index 8 tokens per value while range queries would still visit hundreds of\n> thousands of terms in the worst-case.\n> \n> Given that ipv6 addresses tend to use the lower bytes less, maybe that\n> would be fine, but I'm a bit reluctant to expose a new field type for ipv6\n> addresses that would not perform well for range queries. An option could be\n> to have a new type for ipv6 addresses that would only support sorting and\n> aggs but not queries, however I'm not sure how useful it would be?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/elastic/elasticsearch/issues/3714#issuecomment-121761672\n> .\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/121871628","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-121871628","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":121871628,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMTg3MTYyOA==","user":{"login":"bodgit","id":559268,"node_id":"MDQ6VXNlcjU1OTI2OA==","avatar_url":"https://avatars2.githubusercontent.com/u/559268?v=4","gravatar_id":"","url":"https://api.github.com/users/bodgit","html_url":"https://github.com/bodgit","followers_url":"https://api.github.com/users/bodgit/followers","following_url":"https://api.github.com/users/bodgit/following{/other_user}","gists_url":"https://api.github.com/users/bodgit/gists{/gist_id}","starred_url":"https://api.github.com/users/bodgit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bodgit/subscriptions","organizations_url":"https://api.github.com/users/bodgit/orgs","repos_url":"https://api.github.com/users/bodgit/repos","events_url":"https://api.github.com/users/bodgit/events{/privacy}","received_events_url":"https://api.github.com/users/bodgit/received_events","type":"User","site_admin":false},"created_at":"2015-07-16T08:06:57Z","updated_at":"2015-07-16T08:06:57Z","author_association":"NONE","body":"How would this work with a type that handles both IPv4 and IPv6? As I originally stated in my use case I don't know the address family ahead of time, only that it is \"an IP address\" so I would prefer a type that can handle both. If that meant storing IPv4 addresses as IPv6-mapped it means that for such addresses, you _do_ care about the lesser significant bits more as the address is `::ffff:d.d.d.d` and so the first 96 bits are always going to be the same.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/143107337","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-143107337","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":143107337,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MzEwNzMzNw==","user":{"login":"avleen","id":539525,"node_id":"MDQ6VXNlcjUzOTUyNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/539525?v=4","gravatar_id":"","url":"https://api.github.com/users/avleen","html_url":"https://github.com/avleen","followers_url":"https://api.github.com/users/avleen/followers","following_url":"https://api.github.com/users/avleen/following{/other_user}","gists_url":"https://api.github.com/users/avleen/gists{/gist_id}","starred_url":"https://api.github.com/users/avleen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avleen/subscriptions","organizations_url":"https://api.github.com/users/avleen/orgs","repos_url":"https://api.github.com/users/avleen/repos","events_url":"https://api.github.com/users/avleen/events{/privacy}","received_events_url":"https://api.github.com/users/avleen/received_events","type":"User","site_admin":false},"created_at":"2015-09-25T02:36:41Z","updated_at":"2015-09-25T02:36:41Z","author_association":"NONE","body":"FWIW, ARIN announced depletion of their free IP pool today:\nhttp://teamarin.net/category/ipv4-depletion/\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/143872701","html_url":"https://github.com/elastic/elasticsearch/issues/3714#issuecomment-143872701","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3714","id":143872701,"node_id":"MDEyOklzc3VlQ29tbWVudDE0Mzg3MjcwMQ==","user":{"login":"hanej","id":185708,"node_id":"MDQ6VXNlcjE4NTcwOA==","avatar_url":"https://avatars2.githubusercontent.com/u/185708?v=4","gravatar_id":"","url":"https://api.github.com/users/hanej","html_url":"https://github.com/hanej","followers_url":"https://api.github.com/users/hanej/followers","following_url":"https://api.github.com/users/hanej/following{/other_user}","gists_url":"https://api.github.com/users/hanej/gists{/gist_id}","starred_url":"https://api.github.com/users/hanej/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanej/subscriptions","organizations_url":"https://api.github.com/users/hanej/orgs","repos_url":"https://api.github.com/users/hanej/repos","events_url":"https://api.github.com/users/hanej/events{/privacy}","received_events_url":"https://api.github.com/users/hanej/received_events","type":"User","site_admin":false},"created_at":"2015-09-28T21:01:26Z","updated_at":"2015-09-28T21:01:26Z","author_association":"NONE","body":"Our access logs use a combination of IPv6 and IPv4 in the same field so we're in the same situation as @bodgit \n","performed_via_github_app":null}]