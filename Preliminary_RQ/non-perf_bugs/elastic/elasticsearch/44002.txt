{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/44002","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44002/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44002/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44002/events","html_url":"https://github.com/elastic/elasticsearch/issues/44002","id":464519356,"node_id":"MDU6SXNzdWU0NjQ1MTkzNTY=","number":44002,"title":"[Feature request] Alternative for ignore_above to support occasional long strings considered in aggregations","user":{"login":"EmilBode","id":22800383,"node_id":"MDQ6VXNlcjIyODAwMzgz","avatar_url":"https://avatars2.githubusercontent.com/u/22800383?v=4","gravatar_id":"","url":"https://api.github.com/users/EmilBode","html_url":"https://github.com/EmilBode","followers_url":"https://api.github.com/users/EmilBode/followers","following_url":"https://api.github.com/users/EmilBode/following{/other_user}","gists_url":"https://api.github.com/users/EmilBode/gists{/gist_id}","starred_url":"https://api.github.com/users/EmilBode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EmilBode/subscriptions","organizations_url":"https://api.github.com/users/EmilBode/orgs","repos_url":"https://api.github.com/users/EmilBode/repos","events_url":"https://api.github.com/users/EmilBode/events{/privacy}","received_events_url":"https://api.github.com/users/EmilBode/received_events","type":"User","site_admin":false},"labels":[{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2019-07-05T08:14:31Z","updated_at":"2019-07-25T16:04:25Z","closed_at":"2019-07-25T10:56:17Z","author_association":"NONE","active_lock_reason":null,"body":"**Use-case**\r\nWhen indexing a document with dynamical mappings, textfields are automatically mapped as both text, and a keyword field with parameter `ignore_above` set to 256. \r\nThis works fine in most cases, but can lead to surprising results if there is an occasional long textfield, which is ignored in the keyword.\r\n\r\nSuppose a user executed the following code:\r\n```\r\nPUT newindex/_doc/1\r\n{\r\n  \"field\": \"val1\"\r\n}\r\nPUT newindex/_doc/2\r\n{\r\n  \"field\": \"val1\"\r\n}\r\nPUT newindex/_doc/3\r\n{\r\n  \"field\": \"val2\"\r\n}\r\nPUT newindex/_doc/4\r\n{\r\n  \"field\": \"val2\"\r\n}\r\nPUT newindex/_doc/5\r\n{\r\n  \"field\": \"val3\"\r\n}\r\nPUT newindex/_doc/6\r\n{\r\n  \"field\": \"For a change, this value is a lot longer. Actually, it's so long that it doesn't get mapped in the keyword field at all.................................................................................................................................................................................................\"\r\n}\r\n\r\nGET newindex/_search\r\n{\r\n  \"size\": 0,\r\n  \"aggs\": {\r\n    \"valcount\": {\r\n      \"cardinality\": {\r\n        \"field\": \"field.keyword\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\nThe output gives me a valcount of 3.\r\n\r\nAs a naive user, I was expecting a cardinality of 4 (val1, val2, val3 and the long value). Instead, the long value gets ignored, so we get a cardinality of 3.\r\n\r\nThis is as documented, and in this case it's easily spotted. The user can fix it by manually providing a mapping with either fielddata enabled on the text, or setting the `ignore_above` on the keyword higher.\r\n\r\nHowever, with lots of documents, fields that have lengths spread around the cutoff value, and an unaware user this may lead to more subtle miscalculations, or very confusing behaviour.\r\n\r\nOf course just disabling the `ignore_above` value will lead to decreased performance and potentially other problems, so I don't think that's a solution. But I think there may be other alternatives, although I have to admit I don't have a perfect solution myself. \r\nSummarized, I think a text.keyword field should store *something* when dynamically mapping, although not the string in its entirety. \r\n\r\n**Proposed change**\r\nMy proposal would be to cut off a string after a certain length. The details of this should be stored in a mapping, so that users still have full control.\r\nSo a dynamically generated mapping of my previous example would look like this:\r\n```\r\n{\r\n  \"newindex\" : {\r\n    \"aliases\" : { },\r\n    \"mappings\" : {\r\n      \"properties\" : {\r\n        \"field\" : {\r\n          \"type\" : \"text\",\r\n          \"fields\" : {\r\n            \"keyword\" : {\r\n              \"type\" : \"keyword\",\r\n              \"cutoff_after\" : 256\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"settings\" : {...}\r\n  }\r\n}\r\n```\r\nWhere `field.keyword` only stores the first 256 character (or bytes), and aggregations are based on these. \r\n\r\nNothing would change for values of length<256, and nothing would change for user-provided mappings that don't use the `cutoff_after`-parameter.\r\n\r\nOther ways of mapping a longer text to a keyword may also be feasible, although I think we have to be careful not to change any behaviour for fields <256 characters, and it must be clear to the user what exactly is stored (so I wouldn't store a hash or some similar solution).","closed_by":{"login":"EmilBode","id":22800383,"node_id":"MDQ6VXNlcjIyODAwMzgz","avatar_url":"https://avatars2.githubusercontent.com/u/22800383?v=4","gravatar_id":"","url":"https://api.github.com/users/EmilBode","html_url":"https://github.com/EmilBode","followers_url":"https://api.github.com/users/EmilBode/followers","following_url":"https://api.github.com/users/EmilBode/following{/other_user}","gists_url":"https://api.github.com/users/EmilBode/gists{/gist_id}","starred_url":"https://api.github.com/users/EmilBode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EmilBode/subscriptions","organizations_url":"https://api.github.com/users/EmilBode/orgs","repos_url":"https://api.github.com/users/EmilBode/repos","events_url":"https://api.github.com/users/EmilBode/events{/privacy}","received_events_url":"https://api.github.com/users/EmilBode/received_events","type":"User","site_admin":false},"performed_via_github_app":null}