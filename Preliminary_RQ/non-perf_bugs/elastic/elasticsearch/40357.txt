{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/40357","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40357/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40357/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40357/events","html_url":"https://github.com/elastic/elasticsearch/issues/40357","id":424149408,"node_id":"MDU6SXNzdWU0MjQxNDk0MDg=","number":40357,"title":"SQL: floats precision and scale corrections","user":{"login":"bpintea","id":1562801,"node_id":"MDQ6VXNlcjE1NjI4MDE=","avatar_url":"https://avatars3.githubusercontent.com/u/1562801?v=4","gravatar_id":"","url":"https://api.github.com/users/bpintea","html_url":"https://github.com/bpintea","followers_url":"https://api.github.com/users/bpintea/followers","following_url":"https://api.github.com/users/bpintea/following{/other_user}","gists_url":"https://api.github.com/users/bpintea/gists{/gist_id}","starred_url":"https://api.github.com/users/bpintea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bpintea/subscriptions","organizations_url":"https://api.github.com/users/bpintea/orgs","repos_url":"https://api.github.com/users/bpintea/repos","events_url":"https://api.github.com/users/bpintea/events{/privacy}","received_events_url":"https://api.github.com/users/bpintea/received_events","type":"User","site_admin":false},"labels":[{"id":912794284,"node_id":"MDU6TGFiZWw5MTI3OTQyODQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Query%20Languages/SQL","name":":Query Languages/SQL","color":"0e8a16","default":false,"description":"SQL querying"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-03-22T10:49:39Z","updated_at":"2019-03-27T12:14:07Z","closed_at":"2019-03-27T12:14:07Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"This issue is proposing to change the reported `MAXIMUM_SCALE`, `MINIMUM_SCALE` and potentially `PRECISION` values in `SYS TYPES` answer.\r\n\r\n* MINIMUM_SCALE\r\nThe floats are not variable precision in ES. Furthermore, according to ODBC's [SQLGetTypeInfo](https://docs.microsoft.com/en-us/sql/odbc/reference/syntax/sqlgettypeinfo-function), `If a data type has a fixed scale, the MINIMUM_SCALE and MAXIMUM_SCALE columns both contain this value.` So I believe MINIMUM_SCALE should contain the same values as MAXIMUM_SCALE.\r\n\r\n* MAXIMUM_SCALE\r\n  * HALF_FLOAT\r\n    Currently its value is 16. However, it's precision is [half of that of a FLOAT](https://www.elastic.co/guide/en/elasticsearch/reference/current/number.html). So it should be adjusted down accordingly. (Also, see example[1] below.)\r\n  * SCALED_FLOAT\r\n   Currently 19, probably suggested by it being backed up by a signed long, whose precision is 19. However, this is handled as a floating point (probably double?), so it's scale should be adjusted accordingly. (Also, see example[2] below.)\r\n\r\n* PRECISION\r\nThis column has currently the same values as the MAXIMUM_SCALE. Its value however is that of the maximum number of digits (whole and fractional plus dot and sign or exponential), so it should be in any case greater than that. Current implementation of operations - like addition, for instance - is consistent with the currently reported value, in that it truncates the result. But this truncation seems incorrect, as it's effectively reducing the type's scale. (Also, see example[3] below.). IMO, both the reported precision *and* operations should be corrected. (There might be Java readily-available calculations for the maximum precision of floats, like for [C/C++](https://docs.microsoft.com/en-us/cpp/cpp/floating-limits).)\r\n\r\nExample:\r\n```\r\nDELETE floats\r\nPUT floats\r\n{\r\n  \"mappings\" : {\r\n    \"properties\": {\r\n      \"scaled_float\": {\r\n        \"type\": \"scaled_float\"\r\n        , \"scaling_factor\": 1000.0\r\n      },\r\n      \"half_float\": {\r\n        \"type\": \"half_float\"\r\n      },\r\n      \"float\": {\r\n        \"type\": \"float\"\r\n      },\r\n      \"double\": {\r\n        \"type\": \"double\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPUT floats/_doc/1\r\n{\r\n  \"scaled_float\": 9223372036854775807,\r\n  \"half_float\": 1.98765432100123456789,\r\n  \"float\": 1.98765432100123456789,\r\n  \"double\": 1.98765432100123456789\r\n}\r\n```\r\n\r\n```\r\nsql> select * from floats;\r\n\r\n      double      |      float       |  half_float   |    scaled_float\r\n------------------+------------------+---------------+--------------------\r\n1.9876543210012345|1.9876543283462524|1.9873046875   |9.223372036854776E15\r\n```\r\n\r\nAbove one can see that:\r\n* the double will correctly retain 16 decimals, in accordance to Java's double implementation;\r\n* the float is also consistent with float implementation\r\n* [1] the half_float is down to 3 (vs 16 reported now);\r\n* [2] the scaled_float won't report with higher scale than a double's (vs 19 reported).\r\n\r\nFor the PRECISION point[3]:\r\n```\r\nsql> select 1000000+double from floats;\r\n 1000000+double\r\n-----------------\r\n1000001.987654321\r\n```\r\nIn this case, the PRECISION seems kept, but the scale (and thus float data type's precision, in non-SQL talk) is diminished, the type's reported scale then no longer being correct.\r\n\r\nAn alternative implementation:\r\n```\r\nMariaDB [(none)]> select 1000000+1.98765432100123456789;\r\n+--------------------------------+\r\n| 1000000+1.98765432100123456789 |\r\n+--------------------------------+\r\n|   1000001.98765432100123456789 |\r\n+--------------------------------+\r\n1 row in set (0.00 sec)\r\n\r\n```","closed_by":{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false},"performed_via_github_app":null}