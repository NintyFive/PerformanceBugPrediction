{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/301","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/301/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/301/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/301/events","html_url":"https://github.com/elastic/elasticsearch/issues/301","id":272181,"node_id":"MDU6SXNzdWUyNzIxODE=","number":301,"title":"HTML tokenizer","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2010-08-08T14:59:37Z","updated_at":"2010-09-21T21:16:58Z","closed_at":"2010-09-21T21:16:58Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The need to index fields containing HTML is a frequent use case. I think that it is important to have a built-in tokenizer which can handle HTML (ie remove tags and decode entities).\n\nAt the moment, in my client code I do the following:\n\n```\n$value =~ s/<[^>]+>/ /g;   # replace any <.....> extents with a single space\n$value =~ s/\\s+/ /g;           # replace multiple spaces with a single space\n$value =~ s/^ //;                # trim leading whitespace\n$value =~ s/ $//;                # trim trailing whitespace\ndecode_entities($value);  # translate all HTML entities to the equiv UTF-8 char\n```\n\nThis is sufficient to convert HTML to text suitable for indexing by the default analyzer - doesn't need to do any more than this.\n\nAny chance of getting this built in?\n","closed_by":null,"performed_via_github_app":null}