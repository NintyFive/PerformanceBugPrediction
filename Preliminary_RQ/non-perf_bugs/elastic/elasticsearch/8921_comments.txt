[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/66761072","html_url":"https://github.com/elastic/elasticsearch/issues/8921#issuecomment-66761072","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8921","id":66761072,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzYxMDcy","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2014-12-12T11:21:57Z","updated_at":"2014-12-12T11:21:57Z","author_association":"CONTRIBUTOR","body":"I don't like this option anyways though....I wonder if we can expose it via REST similar to the upgrade API for status?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/66821370","html_url":"https://github.com/elastic/elasticsearch/issues/8921#issuecomment-66821370","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8921","id":66821370,"node_id":"MDEyOklzc3VlQ29tbWVudDY2ODIxMzcw","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2014-12-12T19:22:54Z","updated_at":"2014-12-12T19:22:54Z","author_association":"MEMBER","body":"The upgrade API internally uses the segments API to check the version of all segments.  I think optimize could work similarly (checking for how many segments exist?) although I'm not sure about what measure of completion would be useful.  With upgrade, the bytes of upgraded segments vs bytes of all segments gives a nice percentage type view of the upgrade process.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/85423933","html_url":"https://github.com/elastic/elasticsearch/issues/8921#issuecomment-85423933","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8921","id":85423933,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NDIzOTMz","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2015-03-24T09:40:53Z","updated_at":"2015-03-24T09:40:53Z","author_association":"CONTRIBUTOR","body":"@rmuir I removed the `IndexWriter.waitForMerges()` calls in master, 1.5 and 1.x and the option is also gone in those branches... closing\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/120494202","html_url":"https://github.com/elastic/elasticsearch/issues/8921#issuecomment-120494202","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8921","id":120494202,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMDQ5NDIwMg==","user":{"login":"heffergm","id":629729,"node_id":"MDQ6VXNlcjYyOTcyOQ==","avatar_url":"https://avatars1.githubusercontent.com/u/629729?v=4","gravatar_id":"","url":"https://api.github.com/users/heffergm","html_url":"https://github.com/heffergm","followers_url":"https://api.github.com/users/heffergm/followers","following_url":"https://api.github.com/users/heffergm/following{/other_user}","gists_url":"https://api.github.com/users/heffergm/gists{/gist_id}","starred_url":"https://api.github.com/users/heffergm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/heffergm/subscriptions","organizations_url":"https://api.github.com/users/heffergm/orgs","repos_url":"https://api.github.com/users/heffergm/repos","events_url":"https://api.github.com/users/heffergm/events{/privacy}","received_events_url":"https://api.github.com/users/heffergm/received_events","type":"User","site_admin":false},"created_at":"2015-07-10T18:57:02Z","updated_at":"2015-07-10T18:57:02Z","author_association":"NONE","body":"So I have a lot of automated processing built around ingesting data into an index, optimizing, then snapshotting. With wait_for_merge I could ensure that the snapshotted index was fully merged before loading it into another (production) cluster. With that option gone, I don't see any way to accomplish this now.\n\nIs this functionality going to be re-introduced?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/120497746","html_url":"https://github.com/elastic/elasticsearch/issues/8921#issuecomment-120497746","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8921","id":120497746,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMDQ5Nzc0Ng==","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","site_admin":false},"created_at":"2015-07-10T19:15:09Z","updated_at":"2015-07-10T19:15:09Z","author_association":"CONTRIBUTOR","body":"@heffergm the option is now hardwired to `true`, i.e. we now always wait for merges to finish, which should work for your usage?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/120502252","html_url":"https://github.com/elastic/elasticsearch/issues/8921#issuecomment-120502252","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8921","id":120502252,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMDUwMjI1Mg==","user":{"login":"heffergm","id":629729,"node_id":"MDQ6VXNlcjYyOTcyOQ==","avatar_url":"https://avatars1.githubusercontent.com/u/629729?v=4","gravatar_id":"","url":"https://api.github.com/users/heffergm","html_url":"https://github.com/heffergm","followers_url":"https://api.github.com/users/heffergm/followers","following_url":"https://api.github.com/users/heffergm/following{/other_user}","gists_url":"https://api.github.com/users/heffergm/gists{/gist_id}","starred_url":"https://api.github.com/users/heffergm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/heffergm/subscriptions","organizations_url":"https://api.github.com/users/heffergm/orgs","repos_url":"https://api.github.com/users/heffergm/repos","events_url":"https://api.github.com/users/heffergm/events{/privacy}","received_events_url":"https://api.github.com/users/heffergm/received_events","type":"User","site_admin":false},"created_at":"2015-07-10T19:27:24Z","updated_at":"2015-07-10T19:27:24Z","author_association":"NONE","body":"It should. Weirdly what I saw was a snapshot happen during an optimize, which in my setup should only occur if the optimize exited with a 0 exit status and the code moved on to take the snapshot. But testing against another 1.5.2 cluster now, I see that's it's behaving as expected, so I'll need to dig in a bit more.\n\nThanks for confirming the behavior.\n","performed_via_github_app":null}]