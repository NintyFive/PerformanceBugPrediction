[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/170396153","html_url":"https://github.com/elastic/elasticsearch/issues/15876#issuecomment-170396153","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15876","id":170396153,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDM5NjE1Mw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-01-10T21:31:37Z","updated_at":"2016-01-10T21:31:37Z","author_association":"CONTRIBUTOR","body":"@roytmana what about using the `precision_threshold` for these low cardinality fields?  See https://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-aggregations-metrics-cardinality-aggregation.html#_precision_control\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/170585352","html_url":"https://github.com/elastic/elasticsearch/issues/15876#issuecomment-170585352","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15876","id":170585352,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDU4NTM1Mg==","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2016-01-11T15:21:19Z","updated_at":"2016-01-11T15:22:36Z","author_association":"NONE","body":"@clintongormley two issues\n1. No matter how high it was, for me it was not 100% precise (difference was by 1 document) even when I set it to be higher than actual cardinality\n2. When I have it as a nested aggregation and set a fairly high threshold (because there are few buckets in parent agg that are much bigger than others) and the parent aggregation generates fair number of buckets I ended up with memory circuit breaker kicking in. So in general case when nesting etc it can end up more memory intensive (bacause it is fixed to high number independently of its bucket) that a very trivial algorithm of accumulating unique values  \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/170619161","html_url":"https://github.com/elastic/elasticsearch/issues/15876#issuecomment-170619161","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15876","id":170619161,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDYxOTE2MQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-01-11T17:04:43Z","updated_at":"2016-01-11T17:04:43Z","author_association":"CONTRIBUTOR","body":"Accurate cardinalities can't be reasonably computed in a distributed index as it would require to forward all unique values to the coordinating node. Since we don't want to have features that only work in a single-shard setup, I'm afraid this means we can't support this feature.\n\nJust to check that this is not a bug in the current impl: how many unique values does your field have?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/170621329","html_url":"https://github.com/elastic/elasticsearch/issues/15876#issuecomment-170621329","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15876","id":170621329,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDYyMTMyOQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-01-11T17:10:23Z","updated_at":"2016-01-11T17:10:23Z","author_association":"CONTRIBUTOR","body":"> when nesting etc it can end up more memory intensive (bacause it is fixed to high number independently of its bucket) that a very trivial algorithm of accumulating unique values \n\nI'm interested in exploring this problem however. I opened #15892.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/170653323","html_url":"https://github.com/elastic/elasticsearch/issues/15876#issuecomment-170653323","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15876","id":170653323,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDY1MzMyMw==","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2016-01-11T19:00:43Z","updated_at":"2016-01-11T19:00:43Z","author_association":"NONE","body":"@jpountz I understand but would like to make another plea :-) since my customers are rather unhappy abut it  \n\nElastic does forward shard search results or aggregations to coordinating node for merging why not the unique values? If a user needs precise count and that's the only way to do it, he/she would find the cost in processing/memory/networking acceptable and ensure the cardinality is not out of reasonable range before using this algorithm. As of now there is no way to do it at all no matter at what the cost is.\n\nEven if you make the existing algorithm more memory efficient, it still does not guarantee exactness even what looks like with thresholds higher than actual cardinality. Is that the correct understanding (it is what I seem to observe anyways)? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/170655219","html_url":"https://github.com/elastic/elasticsearch/issues/15876#issuecomment-170655219","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15876","id":170655219,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDY1NTIxOQ==","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2016-01-11T19:07:58Z","updated_at":"2016-01-11T19:07:58Z","author_association":"NONE","body":"I know it is probably not practical to do but here is a silly question anyway: \nIn a single node multi-shard scenario some algorithms such as this or guaranteed result of term agg when sorted by count could be entirely practical and fairly easy to implement. Would elastic care to support some better algorithms/guarantees for single node multishard scenario? This scenario covers in very many cases traditional data mart solution where amount of data is sizeable but not huge and would fit to a powerful multicore server just fine but typical data mart users needs exact values in majority of cases and thus approximating algorithms or missing value in term aggregation because of shard count \"conflict\" are not an option\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/171585373","html_url":"https://github.com/elastic/elasticsearch/issues/15876#issuecomment-171585373","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15876","id":171585373,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MTU4NTM3Mw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-01-14T09:33:08Z","updated_at":"2016-01-14T09:33:08Z","author_association":"CONTRIBUTOR","body":"> Even if you make the existing algorithm more memory efficient, it still does not guarantee exactness even what looks like with thresholds higher than actual cardinality\n\nTrue. Actually even below the treshold the count could be wrong, it's just much more unlikely and the error should be low.\n\n> Would elastic care to support some better algorithms/guarantees for single node multishard scenario?\n\nWe have a policy that all features that we implement need to work and scale in a distributed environment, so I'm afraid we would not want to do this.\n\nFor the record, it is possible to compute exact counts on client side by initiating a scroll and maintaining a set of all unique field values that have been seen.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/171732629","html_url":"https://github.com/elastic/elasticsearch/issues/15876#issuecomment-171732629","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15876","id":171732629,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MTczMjYyOQ==","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2016-01-14T18:33:53Z","updated_at":"2016-01-14T18:33:53Z","author_association":"NONE","body":"If ibhad to resort to that I will term aggregate on that field and then count entries this plays well being a subagg at least. It is ironic that elastic would support that but not cardinality :-) I guess I can look into pipeline and see if I can replace terms with the count\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/190692526","html_url":"https://github.com/elastic/elasticsearch/issues/15876#issuecomment-190692526","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15876","id":190692526,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MDY5MjUyNg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-03-01T12:16:26Z","updated_at":"2016-03-01T12:16:26Z","author_association":"CONTRIBUTOR","body":"> We have a policy that all features that we implement need to work and scale in a distributed environment, so I'm afraid we would not want to do this.\n\nClosing\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/230441408","html_url":"https://github.com/elastic/elasticsearch/issues/15876#issuecomment-230441408","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15876","id":230441408,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMDQ0MTQwOA==","user":{"login":"polkovnikov-ph","id":2983969,"node_id":"MDQ6VXNlcjI5ODM5Njk=","avatar_url":"https://avatars0.githubusercontent.com/u/2983969?v=4","gravatar_id":"","url":"https://api.github.com/users/polkovnikov-ph","html_url":"https://github.com/polkovnikov-ph","followers_url":"https://api.github.com/users/polkovnikov-ph/followers","following_url":"https://api.github.com/users/polkovnikov-ph/following{/other_user}","gists_url":"https://api.github.com/users/polkovnikov-ph/gists{/gist_id}","starred_url":"https://api.github.com/users/polkovnikov-ph/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polkovnikov-ph/subscriptions","organizations_url":"https://api.github.com/users/polkovnikov-ph/orgs","repos_url":"https://api.github.com/users/polkovnikov-ph/repos","events_url":"https://api.github.com/users/polkovnikov-ph/events{/privacy}","received_events_url":"https://api.github.com/users/polkovnikov-ph/received_events","type":"User","site_admin":false},"created_at":"2016-07-05T10:20:01Z","updated_at":"2016-07-05T12:14:59Z","author_association":"NONE","body":"I have the same issue and would like to ask how cardinality aggregation's `precision_threshold` works. Are you using Bloom filter (or one of its variations)? Does `precision_threshold` stand for its size?\n\n_Edit._ [Here's an article](http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/pubs/archive/40671.pdf) on HyperLogLog++ that is used in ES. But I still don't understand what is `precision_threshold`. An article says \"... for precision 14 and use LinearCounting to the left ...\", so it's in order of tens, not thousands. Should it be set to a maximal expected value of aggregation?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240764479","html_url":"https://github.com/elastic/elasticsearch/issues/15876#issuecomment-240764479","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15876","id":240764479,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDc2NDQ3OQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-08-18T15:41:17Z","updated_at":"2016-08-18T15:41:17Z","author_association":"CONTRIBUTOR","body":"@polkovnikov-ph the internal HLL++ parameter is a bit opaque so we used something slightly more meaningful. Here is how we translate from the `precision_threshold` to HLL++'s precision if you are interested: https://github.com/elastic/elasticsearch/blob/master/core/src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/HyperLogLogPlusPlus.java#L67\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/243094893","html_url":"https://github.com/elastic/elasticsearch/issues/15876#issuecomment-243094893","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15876","id":243094893,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzA5NDg5Mw==","user":{"login":"yuanlianxi","id":9733674,"node_id":"MDQ6VXNlcjk3MzM2NzQ=","avatar_url":"https://avatars3.githubusercontent.com/u/9733674?v=4","gravatar_id":"","url":"https://api.github.com/users/yuanlianxi","html_url":"https://github.com/yuanlianxi","followers_url":"https://api.github.com/users/yuanlianxi/followers","following_url":"https://api.github.com/users/yuanlianxi/following{/other_user}","gists_url":"https://api.github.com/users/yuanlianxi/gists{/gist_id}","starred_url":"https://api.github.com/users/yuanlianxi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yuanlianxi/subscriptions","organizations_url":"https://api.github.com/users/yuanlianxi/orgs","repos_url":"https://api.github.com/users/yuanlianxi/repos","events_url":"https://api.github.com/users/yuanlianxi/events{/privacy}","received_events_url":"https://api.github.com/users/yuanlianxi/received_events","type":"User","site_admin":false},"created_at":"2016-08-29T11:03:37Z","updated_at":"2016-08-29T11:03:37Z","author_association":"NONE","body":"@jpountz what about the precision_threshold max value be configurable in the future ES release\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262830515","html_url":"https://github.com/elastic/elasticsearch/issues/15876#issuecomment-262830515","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15876","id":262830515,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MjgzMDUxNQ==","user":{"login":"aalexgabi","id":600821,"node_id":"MDQ6VXNlcjYwMDgyMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/600821?v=4","gravatar_id":"","url":"https://api.github.com/users/aalexgabi","html_url":"https://github.com/aalexgabi","followers_url":"https://api.github.com/users/aalexgabi/followers","following_url":"https://api.github.com/users/aalexgabi/following{/other_user}","gists_url":"https://api.github.com/users/aalexgabi/gists{/gist_id}","starred_url":"https://api.github.com/users/aalexgabi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aalexgabi/subscriptions","organizations_url":"https://api.github.com/users/aalexgabi/orgs","repos_url":"https://api.github.com/users/aalexgabi/repos","events_url":"https://api.github.com/users/aalexgabi/events{/privacy}","received_events_url":"https://api.github.com/users/aalexgabi/received_events","type":"User","site_admin":false},"created_at":"2016-11-24T18:39:45Z","updated_at":"2016-11-24T18:39:45Z","author_association":"NONE","body":"@jpountz We currently have the same issue with one little caveat: we want to compute the cardinality for a field value that is guaranteed to be on the same shard because the routing is based on it. More precisely we want to compute the cardinality for each parent id.\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274449889","html_url":"https://github.com/elastic/elasticsearch/issues/15876#issuecomment-274449889","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15876","id":274449889,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDQ0OTg4OQ==","user":{"login":"xzer","id":1311634,"node_id":"MDQ6VXNlcjEzMTE2MzQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1311634?v=4","gravatar_id":"","url":"https://api.github.com/users/xzer","html_url":"https://github.com/xzer","followers_url":"https://api.github.com/users/xzer/followers","following_url":"https://api.github.com/users/xzer/following{/other_user}","gists_url":"https://api.github.com/users/xzer/gists{/gist_id}","starred_url":"https://api.github.com/users/xzer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xzer/subscriptions","organizations_url":"https://api.github.com/users/xzer/orgs","repos_url":"https://api.github.com/users/xzer/repos","events_url":"https://api.github.com/users/xzer/events{/privacy}","received_events_url":"https://api.github.com/users/xzer/received_events","type":"User","site_admin":false},"created_at":"2017-01-23T10:22:54Z","updated_at":"2017-02-01T09:27:23Z","author_association":"NONE","body":"I got a workaround for this case:\r\n\r\n```json\r\n{\r\n    \"byFullListScripting\": {\r\n      \"terms\": {\r\n        \"field\": \"groupId\",\r\n        \"shard_size\": Integer.MAX_VALUE,\r\n        \"size\": Integer.MAX_VALUE\r\n      },\r\n      \"aggs\": {\r\n        \"cntScripting\": {\r\n          \"scripted_metric\": {\r\n            \"map_script\": \"targetId='u'+doc['cntTargetId']; if (_agg[targetId] == null) { _agg[targetId] = 1}\",\r\n            \"reduce_script\": \"map=[:]; for (a in _aggs){ map.putAll(a) }; return map.size()\"\r\n          }\r\n        }\r\n      }\r\n}\r\n```\r\n\r\nSome comments:\r\n\r\n1.  inline script must be true in config file or use filed script.\r\n1.  if the \"cntTargetId\" is a string rather than a number, it is not necessary to plus 'u' to the id, which is just tell the script engine that our key is a map key rather than an array index.\r\n1. unfortunately ES does not support ordering by scripted sub aggregation, you need to sort the returned bucket list by yourself.\r\n1. to get precise aggregation you have to set shard_size and size to Integer.MAX_VALUE to make all the data to be retrieved.\r\n1. **It is really very expensive operation, take the responsibility by yourself**\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/285436872","html_url":"https://github.com/elastic/elasticsearch/issues/15876#issuecomment-285436872","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15876","id":285436872,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTQzNjg3Mg==","user":{"login":"dwilches","id":3975401,"node_id":"MDQ6VXNlcjM5NzU0MDE=","avatar_url":"https://avatars2.githubusercontent.com/u/3975401?v=4","gravatar_id":"","url":"https://api.github.com/users/dwilches","html_url":"https://github.com/dwilches","followers_url":"https://api.github.com/users/dwilches/followers","following_url":"https://api.github.com/users/dwilches/following{/other_user}","gists_url":"https://api.github.com/users/dwilches/gists{/gist_id}","starred_url":"https://api.github.com/users/dwilches/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dwilches/subscriptions","organizations_url":"https://api.github.com/users/dwilches/orgs","repos_url":"https://api.github.com/users/dwilches/repos","events_url":"https://api.github.com/users/dwilches/events{/privacy}","received_events_url":"https://api.github.com/users/dwilches/received_events","type":"User","site_admin":false},"created_at":"2017-03-09T18:26:17Z","updated_at":"2017-03-09T18:27:47Z","author_association":"NONE","body":"Same here. Without an alternative to exact cardinality, I would need to implement this as a `terms` aggregation and then counting the results. Of course, just for fields I know have a relatively small cardinality.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/420769166","html_url":"https://github.com/elastic/elasticsearch/issues/15876#issuecomment-420769166","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15876","id":420769166,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMDc2OTE2Ng==","user":{"login":"BogdanDamianC","id":945623,"node_id":"MDQ6VXNlcjk0NTYyMw==","avatar_url":"https://avatars0.githubusercontent.com/u/945623?v=4","gravatar_id":"","url":"https://api.github.com/users/BogdanDamianC","html_url":"https://github.com/BogdanDamianC","followers_url":"https://api.github.com/users/BogdanDamianC/followers","following_url":"https://api.github.com/users/BogdanDamianC/following{/other_user}","gists_url":"https://api.github.com/users/BogdanDamianC/gists{/gist_id}","starred_url":"https://api.github.com/users/BogdanDamianC/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BogdanDamianC/subscriptions","organizations_url":"https://api.github.com/users/BogdanDamianC/orgs","repos_url":"https://api.github.com/users/BogdanDamianC/repos","events_url":"https://api.github.com/users/BogdanDamianC/events{/privacy}","received_events_url":"https://api.github.com/users/BogdanDamianC/received_events","type":"User","site_admin":false},"created_at":"2018-09-12T19:28:52Z","updated_at":"2018-09-12T19:28:52Z","author_association":"NONE","body":"Just bumped into this, I wish I could have an exact count available for some situations where I know that the cardinality is low. The workaround is  to implement some custom code that gets the results and counts them. \r\nWhile I understand that this can't be scaled it seems that the only solution for getting an exact number is to pass all those ids from ES to the APP on top of the work that is happening inside ES just to get the count, that is not good either.","performed_via_github_app":null}]