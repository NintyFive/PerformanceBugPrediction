{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/48569","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48569/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48569/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48569/events","html_url":"https://github.com/elastic/elasticsearch/issues/48569","id":513204798,"node_id":"MDU6SXNzdWU1MTMyMDQ3OTg=","number":48569,"title":"using minimum_should_match with percent values in combination with trigrams produces wrong results","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-10-28T10:00:37Z","updated_at":"2019-10-28T12:13:52Z","closed_at":"2019-10-28T11:31:20Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI stumbled upon something in ES 6.8 (linux) that i consider to be a bug.\r\n\r\nHere is the simple 3-step way to reproduce the effect.\r\n\r\n1) create a simple test index with a single field that is indexed as trigrams:\r\n\r\n```\r\nPUT /test\r\n\r\n{\r\n  \"settings\": {\r\n    \"index\": {\r\n      \"number_of_shards\": 1,\r\n      \"number_of_replicas\": 0,\r\n      \"analysis\": {\r\n        \"analyzer\": {\r\n          \"normalized_name_trigram_analyzer\": {\r\n            \"type\": \"custom\",\r\n            \"tokenizer\": \"only_letters_trigram\"\r\n          }\r\n        },\r\n        \"tokenizer\": {\r\n          \"only_letters_trigram\": {\r\n            \"type\": \"ngram\",\r\n            \"min_gram\": 3,\r\n            \"max_gram\": 3,\r\n            \"token_chars\": [\r\n              \"letter\"\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"mappings\": {\r\n    \"sampletype\": {\r\n      \"properties\": {\r\n        \"lastName\": {\r\n          \"type\": \"text\",\r\n          \"analyzer\": \"normalized_name_trigram_analyzer\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n```\r\n2) Place a single documement into the index:\r\n\r\n```\r\nPUT /test/_doc/1\r\n\r\n{\r\n    \"lastName\" : \"fischhaber\"\r\n}\r\n\r\n```\r\n3) Execute a query for lastName=\"fischer\" and minimum_should_match=75%:\r\n\r\n```\r\nPOST /test/_search\r\n\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"should\": [\r\n        {\r\n          \"match\": {\r\n            \"lastName\": {\r\n              \"query\": \"fischer\",\r\n              \"minimum_should_match\": \"75%\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\n```\r\nNotice that you will find a single result:\r\n\r\n```\r\n{\r\n   \"took\": 0,\r\n   \"timed_out\": false,\r\n   \"_shards\":    {\r\n      \"total\": 1,\r\n      \"successful\": 1,\r\n      \"skipped\": 0,\r\n      \"failed\": 0\r\n   },\r\n   \"hits\":    {\r\n      \"total\": 1,\r\n      \"max_score\": 0.8630463,\r\n      \"hits\": [      {\r\n         \"_index\": \"test\",\r\n         \"_type\": \"sampletype\",\r\n         \"_id\": \"1\",\r\n         \"_score\": 0.8630463,\r\n         \"_source\": {\"lastName\": \"fischhaber\"}\r\n      }]\r\n   }\r\n}\r\n\r\n```\r\nAlso notice that only 3 of the 5 trigrams of \"fischer\" match the 8 trigrams of \"fischhaber\". so the match-ratio is 60% and therefore below the limit of 75%. so there should have been no result!\r\n\r\nif you use trigram counts instead of percent values it works correctly:\r\n\r\n```\r\nPOST /test/_search\r\n\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"should\": [\r\n        {\r\n          \"match\": {\r\n            \"lastName\": {\r\n              \"query\": \"fischer\",\r\n              \"minimum_should_match\": \"3\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\n```\r\nThis will produce one hit. Change the limit from 3 to 4 and you will no longer get any results.\r\n\r\nSo it seems, that internally the correct number of matching trigrams/tokens is computed, but the interpretation in percent values seems to be buggy.\r\n\r\nregards\r\nMario\r\n\r\n","closed_by":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"performed_via_github_app":null}