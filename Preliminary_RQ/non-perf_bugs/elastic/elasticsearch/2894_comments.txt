[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/16523988","html_url":"https://github.com/elastic/elasticsearch/issues/2894#issuecomment-16523988","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2894","id":16523988,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NTIzOTg4","user":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"created_at":"2013-04-17T18:25:25Z","updated_at":"2013-04-17T18:25:25Z","author_association":"MEMBER","body":"this boils down to an MVEL problem, here is a unit test for MVEL which fails reliably. Possibly this is expected behaviour in MVEL, so I need to check that out\n\n```\n    @Test\n    public void mveltest() throws Exception {\n        Map<String, Object> vars = Maps.newHashMap();\n        vars.put(\"x\", 1);\n\n        Object compiled = MVEL.compileExpression(\"x == 11 ? x = 10 : x += 5\");\n        MVEL.executeExpression(compiled, vars);\n        assertThat(vars.get(\"x\").toString(), is(\"6\"));\n    }\n```\n\nIf you use `x != 11 ? x += 5 : x = 10` as expression, everything is working... the `else` part seems to cut off somehow.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/16639864","html_url":"https://github.com/elastic/elasticsearch/issues/2894#issuecomment-16639864","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2894","id":16639864,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NjM5ODY0","user":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"created_at":"2013-04-19T07:38:34Z","updated_at":"2013-04-19T07:38:34Z","author_association":"MEMBER","body":"The problem is blatantly obvious, that I overlooked it. It is a simple precedence problem with the ternary operator. Solution is using more brackets:\n\n```\n( x == 11 ) ? (x = 10): (x += 5)\n```\n\nI will update the documentation today to reflect and explain this, so people dont get confused.\n","performed_via_github_app":null}]