[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/434372832","html_url":"https://github.com/elastic/elasticsearch/issues/35095#issuecomment-434372832","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35095","id":434372832,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNDM3MjgzMg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-10-30T16:29:25Z","updated_at":"2018-10-30T16:29:25Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-security","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/434972487","html_url":"https://github.com/elastic/elasticsearch/issues/35095#issuecomment-434972487","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35095","id":434972487,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNDk3MjQ4Nw==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2018-11-01T08:42:50Z","updated_at":"2018-11-01T08:50:05Z","author_association":"CONTRIBUTOR","body":"> However, there are a number of failure scenarios here as a restarted node with security NEEDS to know if it supports plaintext before joining a cluster.\r\n\r\nCould you describe these scenarios in more detail?\r\n\r\nAlso wanted to note that we're already not 100% failure tolerant during rolling upgrades. For instance if you get halfway through a rolling upgrade from 5.6 to 6.x and then all the remaining 5.6 nodes are temporarily disconnected from the 6.x master then they may not be allowed to rejoin the cluster because of `MembershipAction#ensureMajorVersionBarrier()`. Maybe it's ok to be similarly intolerant of failures when enabling security in a rolling fashion?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/435544179","html_url":"https://github.com/elastic/elasticsearch/issues/35095#issuecomment-435544179","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35095","id":435544179,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTU0NDE3OQ==","user":{"login":"tbrooks8","id":862472,"node_id":"MDQ6VXNlcjg2MjQ3Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/862472?v=4","gravatar_id":"","url":"https://api.github.com/users/tbrooks8","html_url":"https://github.com/tbrooks8","followers_url":"https://api.github.com/users/tbrooks8/followers","following_url":"https://api.github.com/users/tbrooks8/following{/other_user}","gists_url":"https://api.github.com/users/tbrooks8/gists{/gist_id}","starred_url":"https://api.github.com/users/tbrooks8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbrooks8/subscriptions","organizations_url":"https://api.github.com/users/tbrooks8/orgs","repos_url":"https://api.github.com/users/tbrooks8/repos","events_url":"https://api.github.com/users/tbrooks8/events{/privacy}","received_events_url":"https://api.github.com/users/tbrooks8/received_events","type":"User","site_admin":false},"created_at":"2018-11-03T00:16:30Z","updated_at":"2018-11-03T00:16:30Z","author_association":"CONTRIBUTOR","body":"> Could you describe these scenarios in more detail?\r\n\r\nI mean lets say that `dual_stack: enabled` is a persistent dynamic setting and it is `false` by default. You would need to apply that setting before doing your rolling restart. The failure scenario is if, for any reason, a node did not receive that setting before restarting, it would not be able to join the cluster after restart (as it would only be speaking TLS and the cluster would be speaking plaintext).\r\n\r\nAdditionally, if you wanted to add nodes during the rolling restart, you would need to apply the setting locally. \r\n\r\nI'm not saying that scenario (a node not receiving a dynamic setting) is likely. It just seems to introduce confusing failure scenarios. Obviously this can be avoided by applying the setting to every `yml` file. But that is some overhead to users.\r\n\r\nAnd I wanted to make sure we had an agreement on how we wanted to handle the \"indicator\" that we should accept plaintext connections. If a setting is the correct approach?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/436960701","html_url":"https://github.com/elastic/elasticsearch/issues/35095#issuecomment-436960701","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35095","id":436960701,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNjk2MDcwMQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2018-11-08T11:18:05Z","updated_at":"2018-11-08T11:18:05Z","author_association":"CONTRIBUTOR","body":"thanks @tbrooks8 for starting this initiative. The way I was thinking about this was more of an anti-viral setting or a one-way door, once it's closed you can't open it anymore. Lemme explain, the typical scenario here is you have an existing cluster that is plain text and you want to upgrade. New nodes will have a dual stack and old nodes won't. Once you join a cluster with a new node we start to connect to all nodes in the cluster. Once we are connected to all nodes in the cluster ie. fully joined we switch the plain text transport into it's anti-viral mode which means once it's last connection is closed it won't accept any new connections anymore and will never try to use plain text. This is typically the moment when the last node that uses plaintext is shut-down. This also means that if you restart a node after we crossed that point can safely go through the same process again and will end up automatically disabling itself once it has fully joined the cluster. The cluster will then not allow nodes with plain text to join anymore.\r\n\r\ndoes this make sense or do I miss anything?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/438487380","html_url":"https://github.com/elastic/elasticsearch/issues/35095#issuecomment-438487380","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35095","id":438487380,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODQ4NzM4MA==","user":{"login":"tbrooks8","id":862472,"node_id":"MDQ6VXNlcjg2MjQ3Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/862472?v=4","gravatar_id":"","url":"https://api.github.com/users/tbrooks8","html_url":"https://github.com/tbrooks8","followers_url":"https://api.github.com/users/tbrooks8/followers","following_url":"https://api.github.com/users/tbrooks8/following{/other_user}","gists_url":"https://api.github.com/users/tbrooks8/gists{/gist_id}","starred_url":"https://api.github.com/users/tbrooks8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbrooks8/subscriptions","organizations_url":"https://api.github.com/users/tbrooks8/orgs","repos_url":"https://api.github.com/users/tbrooks8/repos","events_url":"https://api.github.com/users/tbrooks8/events{/privacy}","received_events_url":"https://api.github.com/users/tbrooks8/received_events","type":"User","site_admin":false},"created_at":"2018-11-14T00:09:38Z","updated_at":"2018-11-14T00:09:38Z","author_association":"CONTRIBUTOR","body":"> This is typically the moment when the last node that uses plaintext is shut-down.\r\n\r\nDo you have a thought about what our indicator is here? Like when we start a new node and always accept TLS and plaintext. And then have a listener for when a node disconnects, we check and see if all the nodes a now TLS. If they are all TLS, we stop accepting new plaintext connects?\r\n\r\nOr is there somewhere else the listener should be attached? \r\n\r\nDoes this make sense from a security perspective @jaymode?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/438693195","html_url":"https://github.com/elastic/elasticsearch/issues/35095#issuecomment-438693195","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35095","id":438693195,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODY5MzE5NQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2018-11-14T15:04:25Z","updated_at":"2018-11-14T15:04:25Z","author_association":"CONTRIBUTOR","body":"> Do you have a thought about what our indicator is here? Like when we start a new node and always accept TLS and plaintext. And then have a listener for when a node disconnects, we check and see if all the nodes a now TLS. If they are all TLS, we stop accepting new plaintext connects?\r\n\r\nyeah that is what I was thinking about.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/438721120","html_url":"https://github.com/elastic/elasticsearch/issues/35095#issuecomment-438721120","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35095","id":438721120,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODcyMTEyMA==","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"created_at":"2018-11-14T16:16:30Z","updated_at":"2018-11-14T16:16:30Z","author_association":"MEMBER","body":"> Does this make sense from a security perspective\r\n\r\nIt does; that said I want to lay out what could be seen as a \"weakness\" here in that during a rolling restart, nodes would allow plaintext initially and with a hijack of DNS someone could essentially have the cluster join with nodes it shouldn't join with and then gain access to data. This would be a pretty tough thing to do and at that point you probably have much worse things to worry about if part of your critical infrastructure has been comprised.\r\n\r\nDo we plan on having a setting to disable this behavior at the node level? Also, cc @elastic/es-security to keep me honest.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/438792479","html_url":"https://github.com/elastic/elasticsearch/issues/35095#issuecomment-438792479","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35095","id":438792479,"node_id":"MDEyOklzc3VlQ29tbWVudDQzODc5MjQ3OQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2018-11-14T19:42:35Z","updated_at":"2018-11-14T19:42:35Z","author_association":"CONTRIBUTOR","body":"+1 or have a setting","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/468400893","html_url":"https://github.com/elastic/elasticsearch/issues/35095#issuecomment-468400893","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35095","id":468400893,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2ODQwMDg5Mw==","user":{"login":"tbrooks8","id":862472,"node_id":"MDQ6VXNlcjg2MjQ3Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/862472?v=4","gravatar_id":"","url":"https://api.github.com/users/tbrooks8","html_url":"https://github.com/tbrooks8","followers_url":"https://api.github.com/users/tbrooks8/followers","following_url":"https://api.github.com/users/tbrooks8/following{/other_user}","gists_url":"https://api.github.com/users/tbrooks8/gists{/gist_id}","starred_url":"https://api.github.com/users/tbrooks8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbrooks8/subscriptions","organizations_url":"https://api.github.com/users/tbrooks8/orgs","repos_url":"https://api.github.com/users/tbrooks8/repos","events_url":"https://api.github.com/users/tbrooks8/events{/privacy}","received_events_url":"https://api.github.com/users/tbrooks8/received_events","type":"User","site_admin":false},"created_at":"2019-02-28T19:17:12Z","updated_at":"2019-02-28T19:17:12Z","author_association":"CONTRIBUTOR","body":"Closing this in favor of the more expansive #39531 meta issue.","performed_via_github_app":null}]