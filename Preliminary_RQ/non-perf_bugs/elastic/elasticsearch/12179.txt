{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/12179","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12179/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12179/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12179/events","html_url":"https://github.com/elastic/elasticsearch/issues/12179","id":94271858,"node_id":"MDU6SXNzdWU5NDI3MTg1OA==","number":12179,"title":"Fix time sensitive percolator queries","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"labels":[{"id":156502592,"node_id":"MDU6TGFiZWwxNTY1MDI1OTI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Percolator","name":":Search/Percolator","color":"0e8a16","default":false,"description":"Reverse search: find queries that match a document"},{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-07-10T10:08:35Z","updated_at":"2018-02-14T13:41:49Z","closed_at":"2015-09-29T11:48:56Z","author_association":"MEMBER","active_lock_reason":null,"body":"Percolator queries are parsed to a Lucene query at percolator query creation time. It matter what fields are in the mapping at percolator creation time. This is why ES requires fields to exist in the mapping when a percolator query is added. \n\nHowever some percolator queries are even more sensitive to when they are parsed:\n- If a range query contains `now`.\n- If a field in some queries contain wildcards. (depending of what the fields are resolved at percolator query parse time)\n\nFor the first case there is a workaround, but there is an issue with it (#12122), so we can do better.\n\nWith the query refactoring, queries are going to be parsed on the coordination node and the transformed in an intermediate format that gets send to nodes actually executing the queries. On these nodes this intermediate format is transformed into a Lucene query.\n\nThe percolator could for some queries that are time sensitive store the intermediate format instead of the Lucene query. When the a percolator evaluates a query in an intermediate format it just transforms it into a Lucene query before percolating a document.\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}