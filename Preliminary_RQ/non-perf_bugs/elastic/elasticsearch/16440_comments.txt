[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/183771331","html_url":"https://github.com/elastic/elasticsearch/issues/16440#issuecomment-183771331","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16440","id":183771331,"node_id":"MDEyOklzc3VlQ29tbWVudDE4Mzc3MTMzMQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-02-13T23:33:55Z","updated_at":"2016-02-13T23:33:55Z","author_association":"CONTRIBUTOR","body":"could you give us some examples?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/183778880","html_url":"https://github.com/elastic/elasticsearch/issues/16440#issuecomment-183778880","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16440","id":183778880,"node_id":"MDEyOklzc3VlQ29tbWVudDE4Mzc3ODg4MA==","user":{"login":"rnagappan","id":8610755,"node_id":"MDQ6VXNlcjg2MTA3NTU=","avatar_url":"https://avatars3.githubusercontent.com/u/8610755?v=4","gravatar_id":"","url":"https://api.github.com/users/rnagappan","html_url":"https://github.com/rnagappan","followers_url":"https://api.github.com/users/rnagappan/followers","following_url":"https://api.github.com/users/rnagappan/following{/other_user}","gists_url":"https://api.github.com/users/rnagappan/gists{/gist_id}","starred_url":"https://api.github.com/users/rnagappan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnagappan/subscriptions","organizations_url":"https://api.github.com/users/rnagappan/orgs","repos_url":"https://api.github.com/users/rnagappan/repos","events_url":"https://api.github.com/users/rnagappan/events{/privacy}","received_events_url":"https://api.github.com/users/rnagappan/received_events","type":"User","site_admin":false},"created_at":"2016-02-14T00:14:19Z","updated_at":"2016-02-14T00:25:02Z","author_association":"NONE","body":"This first example is from a Get query:\n\n```\n    GetResponse getResponse = new GetRequestBuilder(...).get();\n    GetField getField = getResponse.getField(\"some field\");\n    Map<String, GetField> getFields = getResponse.getFields();\n    Object value = getField.getValue();// not an interface method\n    MyClass myGetObject = new MyClass(getFields) // custom deserialization code on GetField objects\n```\n\nAnd this second example is from a search query for the same document\n\n```\n    SearchResponse searchResponse = new SearchRequestBuilder(...).get();\n    SearchHits hits = searchResponse.getHits();\n    SearchHit searchHit = hits.getAt(0);\n    SearchHitField searchHitField = searchHit.field(\"some field\");\n    Map<String, SearchHitField> searchHitFields = searchHit.getFields();\n    Object value = searchHitField.getValue(); // not an interface method\n    MyClass mySearchObject = new MyClass(searchHitFields) // custom deserialization code on SearchHitField objects\n```\n\nSo both code snippets are finding the same document in ES and both are deserializing to the same java Object in the end. However, they have to go through completely different code paths to get from the same original data to the same end result. \n\n```\n    // constructor 1\n    for (Map.Entry<String, GetField> getField : getFields)\n    {\n        GetField field = getField.getValue();\n        setSomeValue(field.getValue());\n    }\n\n   // constructor 2\n    for (Map.Entry<String, SearchHitField> searchHitField : searchHitFields)\n    {\n        SearchHitField field = searchHitField.getValue();\n        setSomeValue(field.getValue());\n    }\n```\n\nThis is really inconvenient, and prone to bugs, because I have to write almost identical two copies of that custom deserialization code - one to deal with SearchHit and SearchHitField, and the other to deal with GetResponse and GetField - and always remember to keep them in sync with each other. It would be far better if both of these ES class structures implemented a common interface structure so I can write one common deserization method that does not care whether the document given to it came from a Get request or Search request. My deserialization code should not have to be tied to the type of request that generated the data, or even aware of it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/299490415","html_url":"https://github.com/elastic/elasticsearch/issues/16440#issuecomment-299490415","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16440","id":299490415,"node_id":"MDEyOklzc3VlQ29tbWVudDI5OTQ5MDQxNQ==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-05-05T15:07:11Z","updated_at":"2017-05-05T15:07:11Z","author_association":"MEMBER","body":"I agree that this is odd. `SearchHitField` and `GetField` hold the same members and could be unified.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/312134242","html_url":"https://github.com/elastic/elasticsearch/issues/16440#issuecomment-312134242","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16440","id":312134242,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMjEzNDI0Mg==","user":{"login":"rnagappan","id":8610755,"node_id":"MDQ6VXNlcjg2MTA3NTU=","avatar_url":"https://avatars3.githubusercontent.com/u/8610755?v=4","gravatar_id":"","url":"https://api.github.com/users/rnagappan","html_url":"https://github.com/rnagappan","followers_url":"https://api.github.com/users/rnagappan/followers","following_url":"https://api.github.com/users/rnagappan/following{/other_user}","gists_url":"https://api.github.com/users/rnagappan/gists{/gist_id}","starred_url":"https://api.github.com/users/rnagappan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnagappan/subscriptions","organizations_url":"https://api.github.com/users/rnagappan/orgs","repos_url":"https://api.github.com/users/rnagappan/repos","events_url":"https://api.github.com/users/rnagappan/events{/privacy}","received_events_url":"https://api.github.com/users/rnagappan/received_events","type":"User","site_admin":false},"created_at":"2017-06-29T23:24:03Z","updated_at":"2017-06-29T23:24:03Z","author_association":"NONE","body":"Thanks for fixing this :)","performed_via_github_app":null}]