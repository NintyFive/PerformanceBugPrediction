[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/10290649","html_url":"https://github.com/elastic/elasticsearch/issues/2401#issuecomment-10290649","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2401","id":10290649,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMjkwNjQ5","user":{"login":"jprante","id":635745,"node_id":"MDQ6VXNlcjYzNTc0NQ==","avatar_url":"https://avatars1.githubusercontent.com/u/635745?v=4","gravatar_id":"","url":"https://api.github.com/users/jprante","html_url":"https://github.com/jprante","followers_url":"https://api.github.com/users/jprante/followers","following_url":"https://api.github.com/users/jprante/following{/other_user}","gists_url":"https://api.github.com/users/jprante/gists{/gist_id}","starred_url":"https://api.github.com/users/jprante/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jprante/subscriptions","organizations_url":"https://api.github.com/users/jprante/orgs","repos_url":"https://api.github.com/users/jprante/repos","events_url":"https://api.github.com/users/jprante/events{/privacy}","received_events_url":"https://api.github.com/users/jprante/received_events","type":"User","site_admin":false},"created_at":"2012-11-12T15:03:56Z","updated_at":"2012-11-12T15:04:30Z","author_association":"CONTRIBUTOR","body":"Unfortunately, it seems the dynamic template list in org.elasticsearch.index.mapper.object.RootObjectMapper is derived from a map, fetched as Map<String,Object> from the given JSON source. So the keys in the map are not guaranteed to be ordered sequentially. I guess, internally, the entry \"everything\" is ordered before the entry \"strings\".\n\nMy suggestion is to add a positional attribute (\"position\") to the dynamic_templates entries so ES can order them more reliably according to the users preference. Patch wanted?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/10291014","html_url":"https://github.com/elastic/elasticsearch/issues/2401#issuecomment-10291014","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2401","id":10291014,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMjkxMDE0","user":{"login":"jprante","id":635745,"node_id":"MDQ6VXNlcjYzNTc0NQ==","avatar_url":"https://avatars1.githubusercontent.com/u/635745?v=4","gravatar_id":"","url":"https://api.github.com/users/jprante","html_url":"https://github.com/jprante","followers_url":"https://api.github.com/users/jprante/followers","following_url":"https://api.github.com/users/jprante/following{/other_user}","gists_url":"https://api.github.com/users/jprante/gists{/gist_id}","starred_url":"https://api.github.com/users/jprante/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jprante/subscriptions","organizations_url":"https://api.github.com/users/jprante/orgs","repos_url":"https://api.github.com/users/jprante/repos","events_url":"https://api.github.com/users/jprante/events{/privacy}","received_events_url":"https://api.github.com/users/jprante/received_events","type":"User","site_admin":false},"created_at":"2012-11-12T15:13:57Z","updated_at":"2012-11-12T15:13:57Z","author_association":"CONTRIBUTOR","body":"Another cause may be that equals() and hashcode() methods in org.elasticsearch.index.mapper.object.DynamicTemplate do not work as expected.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/10291748","html_url":"https://github.com/elastic/elasticsearch/issues/2401#issuecomment-10291748","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2401","id":10291748,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMjkxNzQ4","user":{"login":"andrewclegg","id":578186,"node_id":"MDQ6VXNlcjU3ODE4Ng==","avatar_url":"https://avatars2.githubusercontent.com/u/578186?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewclegg","html_url":"https://github.com/andrewclegg","followers_url":"https://api.github.com/users/andrewclegg/followers","following_url":"https://api.github.com/users/andrewclegg/following{/other_user}","gists_url":"https://api.github.com/users/andrewclegg/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewclegg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewclegg/subscriptions","organizations_url":"https://api.github.com/users/andrewclegg/orgs","repos_url":"https://api.github.com/users/andrewclegg/repos","events_url":"https://api.github.com/users/andrewclegg/events{/privacy}","received_events_url":"https://api.github.com/users/andrewclegg/received_events","type":"User","site_admin":false},"created_at":"2012-11-12T15:32:46Z","updated_at":"2012-11-12T15:32:46Z","author_association":"NONE","body":"It occurs to me that my original example is a bit bogus anyway -- since the omit_norms and omit_term_freq_and_positions are only valid for string types anyway. But the general point still stands...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/10327282","html_url":"https://github.com/elastic/elasticsearch/issues/2401#issuecomment-10327282","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2401","id":10327282,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzI3Mjgy","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2012-11-13T14:12:05Z","updated_at":"2012-11-13T14:12:05Z","author_association":"MEMBER","body":"Hi, this one is tricky... . The order is actually properly maintained of the dynamic templates, so thats not the problem (the array in the dynamic templates denotes the order, and we respect that).\n\nThe problem is with how we resolve dynamic templates, specifically, with `match_on_type`. When we encounter a `string` type, we first try and match on a dynamic template by name, _without_ the type. Then, if we don't match on it, we try and guess the type of the string value (it can be a date, an attachment, or numbers if numeric auto detection is turned on or something like that). If its not of any specialized non string type, only then we try and match on a dynamic template with the name and the `string` type as well.\n\nThe reason for this behavior is actually down to JSON and binary values. Because binary values in json are strings, trying to auto detect a date for example by trying to convert it to string ends up screwing up the internal parser binary value (I need to check if thats the case still). So we first need to try and match on name without actually knowing the type, and then match on the type...\n\nWhat you see happens because in the initial match on name (without type), it ends up actually matching on the catch all `everything` one, and then its used. \n\nThis one requires some thinking, not an easy one to solve...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/22319732","html_url":"https://github.com/elastic/elasticsearch/issues/2401#issuecomment-22319732","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2401","id":22319732,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMzE5NzMy","user":{"login":"haizaar","id":58201,"node_id":"MDQ6VXNlcjU4MjAx","avatar_url":"https://avatars1.githubusercontent.com/u/58201?v=4","gravatar_id":"","url":"https://api.github.com/users/haizaar","html_url":"https://github.com/haizaar","followers_url":"https://api.github.com/users/haizaar/followers","following_url":"https://api.github.com/users/haizaar/following{/other_user}","gists_url":"https://api.github.com/users/haizaar/gists{/gist_id}","starred_url":"https://api.github.com/users/haizaar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/haizaar/subscriptions","organizations_url":"https://api.github.com/users/haizaar/orgs","repos_url":"https://api.github.com/users/haizaar/repos","events_url":"https://api.github.com/users/haizaar/events{/privacy}","received_events_url":"https://api.github.com/users/haizaar/received_events","type":"User","site_admin":false},"created_at":"2013-08-08T12:25:08Z","updated_at":"2013-08-08T12:25:08Z","author_association":"NONE","body":"Is there any plan to fix this? On recent ElasticSearch version it still happens. Is there any other way to provide specific dynamic mapping template for strings and another template for all other types?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/60421519","html_url":"https://github.com/elastic/elasticsearch/issues/2401#issuecomment-60421519","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2401","id":60421519,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNDIxNTE5","user":{"login":"InfinitiesLoop","id":202632,"node_id":"MDQ6VXNlcjIwMjYzMg==","avatar_url":"https://avatars3.githubusercontent.com/u/202632?v=4","gravatar_id":"","url":"https://api.github.com/users/InfinitiesLoop","html_url":"https://github.com/InfinitiesLoop","followers_url":"https://api.github.com/users/InfinitiesLoop/followers","following_url":"https://api.github.com/users/InfinitiesLoop/following{/other_user}","gists_url":"https://api.github.com/users/InfinitiesLoop/gists{/gist_id}","starred_url":"https://api.github.com/users/InfinitiesLoop/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/InfinitiesLoop/subscriptions","organizations_url":"https://api.github.com/users/InfinitiesLoop/orgs","repos_url":"https://api.github.com/users/InfinitiesLoop/repos","events_url":"https://api.github.com/users/InfinitiesLoop/events{/privacy}","received_events_url":"https://api.github.com/users/InfinitiesLoop/received_events","type":"User","site_admin":false},"created_at":"2014-10-24T17:31:27Z","updated_at":"2014-10-24T17:31:27Z","author_association":"NONE","body":"I've just run into this as well. I want strings within a subpath to be analyzed with a specific analyzer, and for all other types in the same subpath to be not_analyzed (but with some other changes for which I need a mapping defined -- for example, a set index_name). It seems because of this behavior I may need to put my strings into a different subpath. I was hoping to avoid making structure choices in my documents just so I can map it correctly.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/64920091","html_url":"https://github.com/elastic/elasticsearch/issues/2401#issuecomment-64920091","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2401","id":64920091,"node_id":"MDEyOklzc3VlQ29tbWVudDY0OTIwMDkx","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-11-28T18:35:41Z","updated_at":"2014-11-28T18:35:41Z","author_association":"CONTRIBUTOR","body":"Wondering if an `unmatch_mapping_type` will help here?  Possibly combined with rules without `match_mapping_type` being placed below rules with a specified (or wildcard) `match_mapping_type`?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/85208238","html_url":"https://github.com/elastic/elasticsearch/issues/2401#issuecomment-85208238","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2401","id":85208238,"node_id":"MDEyOklzc3VlQ29tbWVudDg1MjA4MjM4","user":{"login":"ppf2","id":7216393,"node_id":"MDQ6VXNlcjcyMTYzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/7216393?v=4","gravatar_id":"","url":"https://api.github.com/users/ppf2","html_url":"https://github.com/ppf2","followers_url":"https://api.github.com/users/ppf2/followers","following_url":"https://api.github.com/users/ppf2/following{/other_user}","gists_url":"https://api.github.com/users/ppf2/gists{/gist_id}","starred_url":"https://api.github.com/users/ppf2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppf2/subscriptions","organizations_url":"https://api.github.com/users/ppf2/orgs","repos_url":"https://api.github.com/users/ppf2/repos","events_url":"https://api.github.com/users/ppf2/events{/privacy}","received_events_url":"https://api.github.com/users/ppf2/received_events","type":"User","site_admin":false},"created_at":"2015-03-23T21:40:55Z","updated_at":"2015-03-23T21:41:02Z","author_association":"MEMBER","body":"Recently came across this.  The following is the use case:\n\nhttps://gist.github.com/ppf2/6da223f9517ddc0e9465\n\nIn this case, what appears to work (Test 2 in the gist) is if I add `\"match_mapping_type\": \"*\"` in addition to `\"match\": \"*\"` in the dynamic template mapping for the default/everything fields.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/86337227","html_url":"https://github.com/elastic/elasticsearch/issues/2401#issuecomment-86337227","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2401","id":86337227,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MzM3MjI3","user":{"login":"yanjunh","id":1834562,"node_id":"MDQ6VXNlcjE4MzQ1NjI=","avatar_url":"https://avatars2.githubusercontent.com/u/1834562?v=4","gravatar_id":"","url":"https://api.github.com/users/yanjunh","html_url":"https://github.com/yanjunh","followers_url":"https://api.github.com/users/yanjunh/followers","following_url":"https://api.github.com/users/yanjunh/following{/other_user}","gists_url":"https://api.github.com/users/yanjunh/gists{/gist_id}","starred_url":"https://api.github.com/users/yanjunh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanjunh/subscriptions","organizations_url":"https://api.github.com/users/yanjunh/orgs","repos_url":"https://api.github.com/users/yanjunh/repos","events_url":"https://api.github.com/users/yanjunh/events{/privacy}","received_events_url":"https://api.github.com/users/yanjunh/received_events","type":"User","site_admin":false},"created_at":"2015-03-26T04:29:51Z","updated_at":"2015-03-26T04:29:51Z","author_association":"CONTRIBUTOR","body":"This is a sweet workaround.  It appears working for me. thanks\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/89756841","html_url":"https://github.com/elastic/elasticsearch/issues/2401#issuecomment-89756841","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2401","id":89756841,"node_id":"MDEyOklzc3VlQ29tbWVudDg5NzU2ODQx","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-04-05T11:57:13Z","updated_at":"2015-04-05T11:57:13Z","author_association":"CONTRIBUTOR","body":"Given @ppf2 's workaround in https://github.com/elastic/elasticsearch/issues/2401#issuecomment-85208238 it seems that we just need to default `match_mapping_type` to `*`?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/90972832","html_url":"https://github.com/elastic/elasticsearch/issues/2401#issuecomment-90972832","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2401","id":90972832,"node_id":"MDEyOklzc3VlQ29tbWVudDkwOTcyODMy","user":{"login":"erikringsmuth","id":1128965,"node_id":"MDQ6VXNlcjExMjg5NjU=","avatar_url":"https://avatars0.githubusercontent.com/u/1128965?v=4","gravatar_id":"","url":"https://api.github.com/users/erikringsmuth","html_url":"https://github.com/erikringsmuth","followers_url":"https://api.github.com/users/erikringsmuth/followers","following_url":"https://api.github.com/users/erikringsmuth/following{/other_user}","gists_url":"https://api.github.com/users/erikringsmuth/gists{/gist_id}","starred_url":"https://api.github.com/users/erikringsmuth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erikringsmuth/subscriptions","organizations_url":"https://api.github.com/users/erikringsmuth/orgs","repos_url":"https://api.github.com/users/erikringsmuth/repos","events_url":"https://api.github.com/users/erikringsmuth/events{/privacy}","received_events_url":"https://api.github.com/users/erikringsmuth/received_events","type":"User","site_admin":false},"created_at":"2015-04-08T16:51:43Z","updated_at":"2015-04-08T16:51:43Z","author_association":"CONTRIBUTOR","body":"+1\n\nThe workaround of adding `\"match_mapping_type\": \"*\"` to all fields works in the meantime.\n\n``` js\nPUT /_template/log_template\n{\n  \"template\": \"log*\",\n  \"mappings\": {\n    \"_default_\": {\n      \"dynamic_templates\": [\n        {\n          \"timestamp\": {\n            \"match\": \"@timestamp\",\n            \"match_mapping_type\": \"*\",\n            \"mapping\": {\n              \"type\": \"date\",\n              \"index\": \"not_analyzed\",\n              \"doc_values\": true\n            }\n          }\n        },\n        {\n          \"string_multifield\": {\n            \"match\": \"*\",\n            \"match_mapping_type\": \"string\",\n            \"mapping\": {\n              \"type\": \"string\",\n              \"fields\": {\n                \"raw\": {\n                  \"type\": \"string\",\n                  \"index\": \"not_analyzed\",\n                  \"doc_values\": true\n                }\n              }\n            }\n          }\n        },\n        {\n          \"catch_all\": {\n            \"match\": \"*\",\n            \"match_mapping_type\": \"*\",\n            \"mapping\": {\n              \"index\": \"not_analyzed\",\n              \"doc_values\": true\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/91566774","html_url":"https://github.com/elastic/elasticsearch/issues/2401#issuecomment-91566774","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2401","id":91566774,"node_id":"MDEyOklzc3VlQ29tbWVudDkxNTY2Nzc0","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-04-10T13:58:21Z","updated_at":"2015-04-10T13:58:21Z","author_association":"CONTRIBUTOR","body":"@kimchy can you expand on what you mean here:\n\n> The reason for this behavior is actually down to JSON and binary values. Because binary values in json are strings, trying to auto detect a date for example by trying to convert it to string ends up screwing up the internal parser binary value (I need to check if thats the case still). So we first need to try and match on name without actually knowing the type, and then match on the type...\n\nThis patch:\n\n```\n         if (unmatch != null && patternMatch(unmatch, name)) {\n             return false;\n         }\n-        if (matchMappingType != null) {\n-            if (dynamicType == null) {\n-                return false;\n-            }\n-            if (!patternMatch(matchMappingType, dynamicType)) {\n-                return false;\n-            }\n+        if (dynamicType == null) {\n+            return false;\n+        }\n+        if (matchMappingType != null && !patternMatch(matchMappingType, dynamicType)) {\n+            return false;\n         }\n         return true;\n     }\n```\n\nseems to work fine with binary strings, eg:\n\n```\nDELETE test\n\nPUT test\n{\n  \"mappings\": {\n    \"_default_\": {\n      \"_source\": {\n        \"enabled\": false\n      },\n      \"dynamic_templates\": [\n        {\n          \"dates\": {\n            \"match\": \"*\",\n            \"match_mapping_type\": \"date\",\n            \"mapping\": {\n              \"type\": \"date\",\n              \"format\": \"YYYY-mm-dd\"\n            }\n          }\n        },\n        {\n          \"everything\": {\n            \"match\": \"*\",\n            \"mapping\": {\n              \"type\": \"binary\",\n              \"store\": true\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n\nPUT test/test/1\n{\n  \"binary\": \"QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVoB\",\n  \"date\": \"2014-01-01\"\n}\n\nGET /test/test/_mapping\n```\n\nreturns:\n\n```\n        \"_source\": {\n           \"enabled\": false\n        },\n        \"properties\": {\n           \"binary\": {\n              \"type\": \"binary\",\n              \"store\": true\n           },\n           \"date\": {\n              \"type\": \"date\",\n              \"format\": \"YYYY-mm-dd\"\n           }\n        }\n```\n\nand\n\n```\nGET test/test/_search?fields=*\n```\n\nreturns:\n\n```\n        \"fields\": {\n           \"binary\": [\n              \"QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVoB\"\n           ]\n        }\n```\n\nAnd to update the original example, this seems to work correctly:\n\n```\nDELETE test\n\nPUT test\n{\n  \"mappings\": {\n    \"_default_\": {\n      \"dynamic_templates\": [\n        {\n          \"strings\": {\n            \"match\": \"*\",\n            \"match_mapping_type\": \"string\",\n            \"mapping\": {\n              \"type\": \"string\",\n              \"fields\": {\n                \"raw\": {\n                  \"type\": \"string\",\n                  \"index\": \"not_analyzed\"\n                }\n              }\n            }\n          }\n        },\n        {\n          \"everything\": {\n            \"match\": \"*\",\n            \"mapping\": {\n              \"type\": \"{dynamic_type}\",\n              \"doc_values\": true\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n\nPUT test/test/1\n{\n  \"string\": \"bar\",\n  \"bool\": true,\n  \"date\": \"2014-01-01\",\n  \"int\": 5\n}\n\nGET test/test/_mapping\n```\n\nreturns:\n\n```\n        \"properties\": {\n           \"bool\": {\n              \"type\": \"boolean\",\n              \"doc_values\": true\n           },\n           \"date\": {\n              \"type\": \"date\",\n              \"doc_values\": true,\n              \"format\": \"dateOptionalTime\"\n           },\n           \"int\": {\n              \"type\": \"long\",\n              \"doc_values\": true\n           },\n           \"string\": {\n              \"type\": \"string\",\n              \"fields\": {\n                 \"raw\": {\n                    \"type\": \"string\",\n                    \"index\": \"not_analyzed\"\n                 }\n              }\n           }\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/222647766","html_url":"https://github.com/elastic/elasticsearch/issues/2401#issuecomment-222647766","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2401","id":222647766,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMjY0Nzc2Ng==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-05-31T10:13:23Z","updated_at":"2016-05-31T10:13:23Z","author_association":"CONTRIBUTOR","body":"Closed by https://github.com/elastic/elasticsearch/pull/18638\n","performed_via_github_app":null}]