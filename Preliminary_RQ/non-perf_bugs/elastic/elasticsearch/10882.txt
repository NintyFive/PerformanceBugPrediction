{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/10882","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10882/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10882/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10882/events","html_url":"https://github.com/elastic/elasticsearch/issues/10882","id":71900674,"node_id":"MDU6SXNzdWU3MTkwMDY3NA==","number":10882,"title":"Dynamic mapping for nested objects","user":{"login":"dvdeurse","id":1244392,"node_id":"MDQ6VXNlcjEyNDQzOTI=","avatar_url":"https://avatars1.githubusercontent.com/u/1244392?v=4","gravatar_id":"","url":"https://api.github.com/users/dvdeurse","html_url":"https://github.com/dvdeurse","followers_url":"https://api.github.com/users/dvdeurse/followers","following_url":"https://api.github.com/users/dvdeurse/following{/other_user}","gists_url":"https://api.github.com/users/dvdeurse/gists{/gist_id}","starred_url":"https://api.github.com/users/dvdeurse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dvdeurse/subscriptions","organizations_url":"https://api.github.com/users/dvdeurse/orgs","repos_url":"https://api.github.com/users/dvdeurse/repos","events_url":"https://api.github.com/users/dvdeurse/events{/privacy}","received_events_url":"https://api.github.com/users/dvdeurse/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-04-29T15:08:48Z","updated_at":"2015-04-29T17:37:08Z","closed_at":"2015-04-29T17:37:07Z","author_association":"NONE","active_lock_reason":null,"body":"Suppose we create an index with the following dynamic mapping in order to indicate that any element starting with 'nested_' should be typed as nested:\n\n``` json\n{\n  \"test\": {\n    \"dynamic_templates\":[\n      {\n        \"nested_field\": {\n          \"mapping\":{\n            \"type\":\"nested\"\n          },\n          \"match\":\"nested_*\"\n        }\n      }\n    ]  \n  }\n}\n```\n\nIf you want to perform a nested query when there is no data in the index yet, we'll get an exception. For example:\n\n``` json\n{\n  \"query\": {\n    \"nested\": {\n      \"path\": \"nested_field\",\n      \"query\": {\n        \"match\": {\"nested_field.a\": \"foo\"} \n      } \n    }\n  }\n}\n```\n\nwould give us a \"failed to find nested object under path\" exception.\n\nWe can avoid this error by declaring the mapping of the nested fields in a static way (instead of dynamic), but then you loose the power of these dynamic templates. \n\nSo my question is: would it be possible to silently ignore these \"failed to find nested object under path\" exceptions so that it makes sense to declare nested types inside the dynamic templates?\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}