[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/465485474","html_url":"https://github.com/elastic/elasticsearch/issues/39170#issuecomment-465485474","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39170","id":465485474,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NTQ4NTQ3NA==","user":{"login":"astefan","id":893749,"node_id":"MDQ6VXNlcjg5Mzc0OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/893749?v=4","gravatar_id":"","url":"https://api.github.com/users/astefan","html_url":"https://github.com/astefan","followers_url":"https://api.github.com/users/astefan/followers","following_url":"https://api.github.com/users/astefan/following{/other_user}","gists_url":"https://api.github.com/users/astefan/gists{/gist_id}","starred_url":"https://api.github.com/users/astefan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/astefan/subscriptions","organizations_url":"https://api.github.com/users/astefan/orgs","repos_url":"https://api.github.com/users/astefan/repos","events_url":"https://api.github.com/users/astefan/events{/privacy}","received_events_url":"https://api.github.com/users/astefan/received_events","type":"User","site_admin":false},"created_at":"2019-02-20T09:00:32Z","updated_at":"2019-02-20T09:00:32Z","author_association":"CONTRIBUTOR","body":"@parkhekishor1988 not 100% sure I understand, not necessarily the issue, but how you tested this? The steps you mentioned are executed inside Java code or? If so, can you share that code or, if not, provide more details about the reproduction method? Sorry, but it's not clear to me.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/465516570","html_url":"https://github.com/elastic/elasticsearch/issues/39170#issuecomment-465516570","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39170","id":465516570,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NTUxNjU3MA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-02-20T10:27:23Z","updated_at":"2019-02-20T10:27:23Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-analytics-geo","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/465858390","html_url":"https://github.com/elastic/elasticsearch/issues/39170#issuecomment-465858390","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39170","id":465858390,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NTg1ODM5MA==","user":{"login":"parkhekishor1988","id":23350376,"node_id":"MDQ6VXNlcjIzMzUwMzc2","avatar_url":"https://avatars3.githubusercontent.com/u/23350376?v=4","gravatar_id":"","url":"https://api.github.com/users/parkhekishor1988","html_url":"https://github.com/parkhekishor1988","followers_url":"https://api.github.com/users/parkhekishor1988/followers","following_url":"https://api.github.com/users/parkhekishor1988/following{/other_user}","gists_url":"https://api.github.com/users/parkhekishor1988/gists{/gist_id}","starred_url":"https://api.github.com/users/parkhekishor1988/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/parkhekishor1988/subscriptions","organizations_url":"https://api.github.com/users/parkhekishor1988/orgs","repos_url":"https://api.github.com/users/parkhekishor1988/repos","events_url":"https://api.github.com/users/parkhekishor1988/events{/privacy}","received_events_url":"https://api.github.com/users/parkhekishor1988/received_events","type":"User","site_admin":false},"created_at":"2019-02-21T04:32:51Z","updated_at":"2019-02-21T04:33:25Z","author_association":"NONE","body":"> @parkhekishor1988 not 100% sure I understand, not necessarily the issue, but how you tested this? The steps you mentioned are executed inside Java code or? If so, can you share that code or, if not, provide more details about the reproduction method? Sorry, but it's not clear to me.\r\n\r\nHi, \r\n**Yes, I am using JAVA code for aggregation.**\r\n**Below is test code to reproduce an issue, But code is working for fine with Search query only**, \r\n\r\nimport java.io.IOException;\r\nimport org.elasticsearch.action.search.SearchRequest;\r\nimport org.elasticsearch.action.search.SearchResponse;\r\nimport org.elasticsearch.search.aggregations.AggregationBuilders;\r\nimport org.elasticsearch.search.aggregations.BucketOrder;\r\nimport org.elasticsearch.search.aggregations.bucket.terms.TermsAggregationBuilder;\r\nimport org.elasticsearch.search.builder.SearchSourceBuilder;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.context.annotation.Lazy;\r\n\r\n\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\n\r\npublic class Test {\r\n\t@Lazy\r\n\t@Autowired\r\n\tprivate ElasticsearchIndexerConfig esConfig;\r\n\tprivate static final String TERM_AGGREGATION = \"TERM_AGG\";\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tTest test = new Test();\r\n\r\n\t\ttry {\r\n\t\t\tSystem.out.println(test.getAggregationResponseAsJSON());\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @return Aggregation result in String format.\r\n\t * @throws IOException\r\n\t */\r\n\tpublic String getAggregationResponseAsJSON() throws IOException {\r\n\r\n\t\tObjectMapper objectMapper = new ObjectMapper();\r\n\t\tTermsAggregationBuilder termsAggregationBuilder = AggregationBuilders.terms(TERM_AGGREGATION).field(\"name\")\r\n\t\t\t\t.order(BucketOrder.key(true));\r\n\r\n\t\tSearchRequest searchRequest = new SearchRequest(\"testindex\");\r\n\t\tsearchRequest.source(new \r\n               SearchSourceBuilder().size(0).aggregation(termsAggregationBuilder));\r\n\r\n\t\tSearchResponse searchResponse = esConfig.getRestHighLevelClient().search(searchRequest);\r\n\t\tString json = objectMapper.writeValueAsString(searchResponse);\r\n\t\treturn json;\r\n\t}\r\n\r\n}\r\n\r\n**After running above code, I am getting an error for number format exception. Below is code snippet for refernce.**\r\n\r\npackage org.elasticsearch.search.aggregations.bucket.terms;\r\n\r\nimport org.elasticsearch.search.aggregations.bucket.MultiBucketsAggregation;\r\n\r\nimport java.util.List;\r\n\r\n/**\r\n * A {@code terms} aggregation. Defines multiple bucket, each associated with a unique term for a specific field.\r\n * All documents in a bucket has the bucket's term in that field.\r\n */\r\npublic interface Terms extends MultiBucketsAggregation {\r\n\r\n    /**\r\n     * A bucket that is associated with a single term\r\n     */\r\n    interface Bucket extends MultiBucketsAggregation.Bucket {\r\n\r\n        **#Number getKeyAsNumber();**\r\n\r\n        long getDocCountError();\r\n    }\r\n\r\n    /**\r\n     * Return the sorted list of the buckets in this terms aggregation.\r\n     */\r\n    @Override\r\n    List<? extends Bucket> getBuckets();\r\n\r\n    /**\r\n     * Get the bucket for the given term, or null if there is no such bucket.\r\n     */\r\n    Bucket getBucketByKey(String term);\r\n\r\n    /**\r\n     * Get an upper bound of the error on document counts in this aggregation.\r\n     */\r\n    long getDocCountError();\r\n\r\n    /**\r\n     * Return the sum of the document counts of all buckets that did not make\r\n     * it to the top buckets.\r\n     */\r\n    long getSumOfOtherDocCounts();\r\n}\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/466089930","html_url":"https://github.com/elastic/elasticsearch/issues/39170#issuecomment-466089930","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39170","id":466089930,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NjA4OTkzMA==","user":{"login":"hudsonb","id":1359976,"node_id":"MDQ6VXNlcjEzNTk5NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1359976?v=4","gravatar_id":"","url":"https://api.github.com/users/hudsonb","html_url":"https://github.com/hudsonb","followers_url":"https://api.github.com/users/hudsonb/followers","following_url":"https://api.github.com/users/hudsonb/following{/other_user}","gists_url":"https://api.github.com/users/hudsonb/gists{/gist_id}","starred_url":"https://api.github.com/users/hudsonb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hudsonb/subscriptions","organizations_url":"https://api.github.com/users/hudsonb/orgs","repos_url":"https://api.github.com/users/hudsonb/repos","events_url":"https://api.github.com/users/hudsonb/events{/privacy}","received_events_url":"https://api.github.com/users/hudsonb/received_events","type":"User","site_admin":false},"created_at":"2019-02-21T17:28:44Z","updated_at":"2019-02-21T17:28:44Z","author_association":"NONE","body":"This doesn't sound like an elasticsearch bug to me. Can't you add a filter to your `ObjectMapper` to ignore this?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/466169587","html_url":"https://github.com/elastic/elasticsearch/issues/39170#issuecomment-466169587","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39170","id":466169587,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NjE2OTU4Nw==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-02-21T21:16:13Z","updated_at":"2019-02-21T21:16:13Z","author_association":"MEMBER","body":"I agree, I think this is just an issue with how Jackson is trying to automagically convert an object to JSON.  E.g. `StringTerms` objects, the result of a terms agg on a string field, [knows how to convert strings to numbers](https://github.com/elastic/elasticsearch/blob/master/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTerms.java#L69-L79).\r\n\r\nIf you want a JSON value out of a `SearchResponse`, you can just call `SearchResponse.toString()` which [internally calls `Strings.toString()`](https://github.com/elastic/elasticsearch/blob/master/server/src/main/java/org/elasticsearch/common/Strings.java#L772) on the `SearchResponse` because it's a `ToXContent` object.  You could alternatively call `toXContent()` yourself and pass in the builder etc, but toString is easier :)\r\n\r\nI'm going to close this issue.  In the future questions like this are probably better handled in our [discuss forums](https://discuss.elastic.co/c/elasticsearch).","performed_via_github_app":null}]