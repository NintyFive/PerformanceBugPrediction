{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/41372","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41372/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41372/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41372/events","html_url":"https://github.com/elastic/elasticsearch/issues/41372","id":435153966,"node_id":"MDU6SXNzdWU0MzUxNTM5NjY=","number":41372,"title":"Can't get text on a START OBJECT (please improve error handling for key=>{} case)","user":{"login":"Mekk","id":161873,"node_id":"MDQ6VXNlcjE2MTg3Mw==","avatar_url":"https://avatars2.githubusercontent.com/u/161873?v=4","gravatar_id":"","url":"https://api.github.com/users/Mekk","html_url":"https://github.com/Mekk","followers_url":"https://api.github.com/users/Mekk/followers","following_url":"https://api.github.com/users/Mekk/following{/other_user}","gists_url":"https://api.github.com/users/Mekk/gists{/gist_id}","starred_url":"https://api.github.com/users/Mekk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mekk/subscriptions","organizations_url":"https://api.github.com/users/Mekk/orgs","repos_url":"https://api.github.com/users/Mekk/repos","events_url":"https://api.github.com/users/Mekk/events{/privacy}","received_events_url":"https://api.github.com/users/Mekk/received_events","type":"User","site_admin":false},"labels":[{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":23715,"node_id":"MDU6TGFiZWwyMzcxNQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Edocs","name":">docs","color":"db755e","default":false,"description":"General docs changes"},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2019-04-19T12:00:20Z","updated_at":"2019-07-10T21:35:01Z","closed_at":"2019-07-10T21:35:01Z","author_association":"NONE","active_lock_reason":null,"body":"**What happened**\r\n\r\nOnce more I pushed some logstash changes just to see my logs filled with errors\r\n\r\n- logstash side:\r\n```\r\n[2019-04-19T13:02:13,946][WARN ][logstash.outputs.elasticsearch] Could not index event to Elasticsearch. {:status=>400, :action=>[\"index\", {:_id=>\"664d4df1-1603-487e-89f5-5f5bc81ef959\", :_index=>\"sfx-0.9.8.1-2019.16\", :_type=>\"_doc\", :routing=>nil}, #<LogStash::Event:0x22254bd0>], :response=>{\"index\"=>{\"_index\"=>\"sfx-0.9.8.1-2019.16\", \"_type\"=>\"_doc\", \"_id\"=>\"664d4df1-1603-487e-89f5-5f5bc81ef959\", \"status\"=>400, \"error\"=>{\"type\"=>\"mapper_parsing_exception\", \"reason\"=>\"failed to parse field [call.component] of type [keyword] in document with id '664d4df1-1603-487e-89f5-5f5bc81ef959'\", \"caused_by\"=>{\"type\"=>\"illegal_state_exception\", \"reason\"=>\"Can't get text on a START_OBJECT at 1:2204\"}}}}}\r\n```\r\n\r\n- elastic side:\r\n```\r\n[2019-04-19T12:42:42,427][DEBUG][o.e.a.b.TransportShardBulkAction] [logstashdb.test] [sfx-0.9.8-2019.16][1] failed to execute bulk item (index) index {[sfx-0.9.8-2019.16][_doc][4188698c-2348-4c45-b364-0cd512f8126f], source[n/a, actual length: [2.2kb], max length: 2kb]}\r\norg.elasticsearch.index.mapper.MapperParsingException: failed to parse field [call.component] of type [keyword] in document with id '4188698c-2348-4c45-b364-0cd512f8126f'\r\n        at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:280) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n        at org.elasticsearch.index.mapper.DocumentParser.parseObjectOrField(DocumentParser.java:468) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n        at org.elasticsearch.index.mapper.DocumentParser.parseObject(DocumentParser.java:485) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n        at org.elasticsearch.index.mapper.DocumentParser.innerParseObject(DocumentParser.java:392) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n        at org.elasticsearch.index.mapper.DocumentParser.parseObjectOrNested(DocumentParser.java:381) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n        at org.elasticsearch.index.mapper.DocumentParser.parseObjectOrField(DocumentParser.java:465) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n        at org.elasticsearch.index.mapper.DocumentParser.parseObject(DocumentParser.java:485) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n        at org.elasticsearch.index.mapper.DocumentParser.innerParseObject(DocumentParser.java:392) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n        at org.elasticsearch.index.mapper.DocumentParser.parseObjectOrNested(DocumentParser.java:381) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n        at org.elasticsearch.index.mapper.DocumentParser.internalParseDocument(DocumentParser.java:98) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n        at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:71) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n        at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:267) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n        at org.elasticsearch.index.shard.IndexShard.prepareIndex(IndexShard.java:770) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n        at org.elasticsearch.index.shard.IndexShard.applyIndexOperation(IndexShard.java:747) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n```\r\n\r\nIt took me an hour (to setup dead-letter-queue and write logstash config to prettyprint it's contents) to find out what happened. And it happened that I accidentally constructed\r\n```{\r\n    …\r\n   \"call\":   { \"component\":  {} }\r\n}\r\n```\r\n(where component is usually short text and is mapped as keyword).\r\nI face this third or fourth time, nevertheless every time I am deeply confused.\r\n\r\n**What I would be grateful for**\r\n\r\nThere are a few things which seem easy, but would improve the situation very noticeably:\r\n\r\n1. Please log the problematic value.\r\n\r\n In case field can't be parsed, Elastic error message really could quote the problematic value. This would be a giant improvement (not just here but also in all those bad number/bad date/… cases), especially in ELK setups (where there is no easy way to find the event source).\r\n\r\n2. Handle ignore_malformed for keywords\r\n\r\nAs keyword parsing can fail, it should be possible to write in mapping\r\n```\"component\": {  \"type\": \"keyword\",  \"ignore_malformed\": true  },```\r\n(I tried, my mapping was rejected with syntax error, looks like for keywords this\r\nsetting is illegal just now)\r\n\r\n3. Consider handling this dictionary case in some non-failing way\r\n\r\nBoth ignoring it, and stringifying it in any way, would be welcome.\r\n\r\n\r\n**Realistic use case (for curious)**\r\n\r\nSending empty dictionary instead of text seems strange and unlikely, but rather simple logstash code happens to do.  I use\r\n```\r\nxml {\r\n    …\r\n   force_array => false\r\n   suppress_empty => false\r\n   target => \"[@metadata][xml]\"\r\n}\r\n```\r\n(I need disabled suppress_empty as I have some meaningful ```<flag-like-tags/>``` to probe for in rules used later). Then I copy some values, in particular this very case is related to\r\n```\r\nmutate {\r\n    copy => { \"[@metadata][xml][component]\" => \"[call][component]\" }\r\n}\r\n```\r\nIt works fine for messages where ```<component>``` is missing (no such field in parsed xml, so nothing to copy), it works fine for messages like\r\n```\r\n<some-message>\r\n    <component>something</component>\r\n    …\r\n```\r\n(proper copy of ```something```) but from time to time something logs\r\n```\r\n<some-message>\r\n    <component></component>\r\n    …\r\n```\r\nand  buuuum, I get empty dictionary. \r\n\r\n","closed_by":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"performed_via_github_app":null}