[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/297679619","html_url":"https://github.com/elastic/elasticsearch/issues/24364#issuecomment-297679619","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24364","id":297679619,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NzY3OTYxOQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-04-27T10:46:24Z","updated_at":"2017-04-27T10:46:24Z","author_association":"CONTRIBUTOR","body":"The way to do this is to use search after, but to sort in reverse order.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/297680440","html_url":"https://github.com/elastic/elasticsearch/issues/24364#issuecomment-297680440","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24364","id":297680440,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NzY4MDQ0MA==","user":{"login":"joan38","id":1200478,"node_id":"MDQ6VXNlcjEyMDA0Nzg=","avatar_url":"https://avatars0.githubusercontent.com/u/1200478?v=4","gravatar_id":"","url":"https://api.github.com/users/joan38","html_url":"https://github.com/joan38","followers_url":"https://api.github.com/users/joan38/followers","following_url":"https://api.github.com/users/joan38/following{/other_user}","gists_url":"https://api.github.com/users/joan38/gists{/gist_id}","starred_url":"https://api.github.com/users/joan38/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joan38/subscriptions","organizations_url":"https://api.github.com/users/joan38/orgs","repos_url":"https://api.github.com/users/joan38/repos","events_url":"https://api.github.com/users/joan38/events{/privacy}","received_events_url":"https://api.github.com/users/joan38/received_events","type":"User","site_admin":false},"created_at":"2017-04-27T10:50:44Z","updated_at":"2017-04-27T11:14:38Z","author_association":"NONE","body":"@clintongormley That's the way I'm trying to implement but it's super difficulte as I want to generalise that for many requests. And in this implementation I get the opaque SearchRequestBuilder.\r\nAlso the result is sorted in reverse order so I need to somehow reverse again the result once it comes back for ES and again it's almost impossible to encapsulate that in a module that manages Pagination.\r\n\r\nBut I agree this is a workaround but quiet dirty.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/536769141","html_url":"https://github.com/elastic/elasticsearch/issues/24364#issuecomment-536769141","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24364","id":536769141,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNjc2OTE0MQ==","user":{"login":"apachunuri","id":896207,"node_id":"MDQ6VXNlcjg5NjIwNw==","avatar_url":"https://avatars2.githubusercontent.com/u/896207?v=4","gravatar_id":"","url":"https://api.github.com/users/apachunuri","html_url":"https://github.com/apachunuri","followers_url":"https://api.github.com/users/apachunuri/followers","following_url":"https://api.github.com/users/apachunuri/following{/other_user}","gists_url":"https://api.github.com/users/apachunuri/gists{/gist_id}","starred_url":"https://api.github.com/users/apachunuri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apachunuri/subscriptions","organizations_url":"https://api.github.com/users/apachunuri/orgs","repos_url":"https://api.github.com/users/apachunuri/repos","events_url":"https://api.github.com/users/apachunuri/events{/privacy}","received_events_url":"https://api.github.com/users/apachunuri/received_events","type":"User","site_admin":false},"created_at":"2019-09-30T21:55:28Z","updated_at":"2019-09-30T21:55:28Z","author_association":"NONE","body":"I have a sort by 3 different fields (as in the example below)\r\n\"sort\":[\r\n{\"field1\":\"asc\"},\r\n{\"field2\":\"desc\"},\r\n{\"field3\": \"asc\"}\r\n]\r\nNow what does it mean to sort this in the reverse order?\r\nClearly flipping the order for each field doesn't actually make it the right reverse order.\r\n\"sort\":[\r\n{\"field1\":\"desc\"},\r\n{\"field2\":\"asc\"},\r\n{\"field3\": \"desc\"}\r\n]\r\nis there a composite sort which basically takes the sort operations as one unit, so we can effectively do a forward or reverse sort. I am using the java high level rest client api (code below). Not sure how to associate sort builder as a single unit of all sorts included, so itâ€™s possible to reverse?\r\n\r\n    SortBuilder sortBuilder = new FieldSortBuilder(\"field1\");\r\n    sortBuilder.order(org.elasticsearch.search.sort.SortOrder.ASC);\r\n\r\n    SortBuilder sortBuilder1 = new FieldSortBuilder(\"field2\");\r\n    sortBuilder1.order(org.elasticsearch.search.sort.SortOrder.ASC);\r\n\r\n    SortBuilder sortBuilder2 = new FieldSortBuilder(\"field3\");\r\n    sortBuilder2.order(org.elasticsearch.search.sort.SortOrder.ASC);\r\n\r\n    searchSourceBuilder.sort(sortBuilder);\r\n    searchSourceBuilder.sort(sortBuilder1);\r\n    searchSourceBuilder.sort(sortBuilder2);","performed_via_github_app":null}]