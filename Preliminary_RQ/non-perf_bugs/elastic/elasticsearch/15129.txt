{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/15129","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15129/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15129/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15129/events","html_url":"https://github.com/elastic/elasticsearch/issues/15129","id":119610398,"node_id":"MDU6SXNzdWUxMTk2MTAzOTg=","number":15129,"title":"Batched mapping updates can overwrite existing mappings","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"labels":[{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":246685314,"node_id":"MDU6TGFiZWwyNDY2ODUzMTQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v5.0.0-alpha1","name":"v5.0.0-alpha1","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"assignees":[{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2015-12-01T00:03:05Z","updated_at":"2015-12-01T12:53:23Z","closed_at":"2015-12-01T12:53:23Z","author_association":"MEMBER","active_lock_reason":null,"body":"The introduction in #14899 of applying mapping updates in batches brought with it a bug that could cause existing mappings to be lost during an update. In particular, in a scenario in which a batch contained updates for at least two distinct existing types on the same index, the existing mappings for all but the first existing type on the index would be lost. This arises because the workflow for applying mapping updates in batches now looks like:\n1. [if](https://github.com/elastic/elasticsearch/blob/c4a229819406deb4407d8401d698453d936186cf/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java#L234) any of the indices in the request batch do not exist on master, [create](https://github.com/elastic/elasticsearch/blob/c4a229819406deb4407d8401d698453d936186cf/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java#L236) them for the purpose of applying the mapping update and [merge](https://github.com/elastic/elasticsearch/blob/c4a229819406deb4407d8401d698453d936186cf/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java#L244) in the existing index mappings from the cluster state\n2. [apply](https://github.com/elastic/elasticsearch/blob/c4a229819406deb4407d8401d698453d936186cf/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java#L250-L257) the mapping updates\n3. [if](https://github.com/elastic/elasticsearch/blob/c4a229819406deb4407d8401d698453d936186cf/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java#L261-L263) any indices were created, [delete](https://github.com/elastic/elasticsearch/blob/c4a229819406deb4407d8401d698453d936186cf/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java#L262) them from master\n\nThe code for step 1. [looks like](https://github.com/elastic/elasticsearch/blob/c4a229819406deb4407d8401d698453d936186cf/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java#L229-L249):\n\n``` java\nfor (PutMappingClusterStateUpdateRequest request : tasks) {\n  // failures here mean something is broken with our cluster state - fail all tasks by letting exceptions bubble up\n  for (String index : request.indices()) {\n      if (currentState.metaData().hasIndex(index)) {\n          // if we don't have the index, we will throw exceptions later;\n          if (indicesService.hasIndex(index) == false) {\n              final IndexMetaData indexMetaData = currentState.metaData().index(index);\n              IndexService indexService = indicesService.createIndex(nodeServicesProvider, indexMetaData, Collections.EMPTY_LIST);\n              indicesToClose.add(indexMetaData.getIndex());\n              // make sure to add custom default mapping if exists\n              if (indexMetaData.getMappings().containsKey(MapperService.DEFAULT_MAPPING)) {\n                  indexService.mapperService().merge(MapperService.DEFAULT_MAPPING, indexMetaData.getMappings().get(MapperService.DEFAULT_MAPPING).source(), false, request.updateAllTypes());\n              }\n              // only add the current relevant mapping (if exists)\n              if (indexMetaData.getMappings().containsKey(request.type())) {\n                  indexService.mapperService().merge(request.type(), indexMetaData.getMappings().get(request.type()).source(), false, request.updateAllTypes());\n              }\n          }\n      }\n  }\n}\n```\n\nThe flaw is that on the second distinct existing type for the same index, [`indicesService.hasIndex(index) == false`](https://github.com/elastic/elasticsearch/blob/c4a229819406deb4407d8401d698453d936186cf/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java#L234) will evaluate to false (because the [index was created](https://github.com/elastic/elasticsearch/blob/c4a229819406deb4407d8401d698453d936186cf/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java#L236) for the first existing type for the index) and the existing mapping will never get merged in. This will then cause the mapping update to overwrite the existing mapping so losing it.\n","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}