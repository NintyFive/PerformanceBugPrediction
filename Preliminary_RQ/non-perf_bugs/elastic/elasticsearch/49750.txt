{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/49750","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49750/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49750/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49750/events","html_url":"https://github.com/elastic/elasticsearch/issues/49750","id":531026929,"node_id":"MDU6SXNzdWU1MzEwMjY5Mjk=","number":49750,"title":"Custom function for Text Similarity Search","user":{"login":"loretoparisi","id":163333,"node_id":"MDQ6VXNlcjE2MzMzMw==","avatar_url":"https://avatars3.githubusercontent.com/u/163333?v=4","gravatar_id":"","url":"https://api.github.com/users/loretoparisi","html_url":"https://github.com/loretoparisi","followers_url":"https://api.github.com/users/loretoparisi/followers","following_url":"https://api.github.com/users/loretoparisi/following{/other_user}","gists_url":"https://api.github.com/users/loretoparisi/gists{/gist_id}","starred_url":"https://api.github.com/users/loretoparisi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loretoparisi/subscriptions","organizations_url":"https://api.github.com/users/loretoparisi/orgs","repos_url":"https://api.github.com/users/loretoparisi/repos","events_url":"https://api.github.com/users/loretoparisi/events{/privacy}","received_events_url":"https://api.github.com/users/loretoparisi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-12-02T10:17:38Z","updated_at":"2019-12-02T10:39:35Z","closed_at":"2019-12-02T10:26:24Z","author_association":"NONE","active_lock_reason":null,"body":"I'm using a `dense_vector` and `cosineSimilarity` to get documents similarity following the good tutorial [here](https://www.elastic.co/blog/text-similarity-search-with-vectors-in-elasticsearch)\r\n\r\n```python\r\nscript_query = {\r\n        \"script_score\": {\r\n            \"query\": {\"match_all\": {}},\r\n            \"script\": {\r\n                \"source\": \"cosineSimilarity(params.query_vector, doc['text_vector']) + 1.0\",\r\n                \"params\": {\"query_vector\": query_vector}\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\nAs for release 7.3 elasticsearch provide natively for the script the `cosineSimilarity`. When working in the STS (Sentence Textual Similarity), there are more choices for the metrics, among them: \r\n\r\n- Euclidean distance\r\n- Manhattan distance\r\n- Cosine distance (equivalente alla Euclidean distance dei vettori normalizzati)\r\n- Hamming distance\r\n- Dot (Inner) Product distance\r\n\r\nSo, how to implement a custom ElasticSearch similarity function for the search query script, let's say Euclidean or dot product?\r\n\r\nThank you.\r\n\r\n**NOTE**\r\n- My reference project was [BertSearch](https://github.com/Hironsan/bertsearch), were the textual embedding has been calculated with Google's BERT.\r\n- We should keep in mind that for a given vectorial distance to get the similarity a common transformation is:`similarity = 1 / (1 + distance)`.\r\n- Regarding BERT, a good similarity scoring approach is described in [bert_score](https://github.com/Tiiiger/bert_score)\r\n","closed_by":{"login":"probakowski","id":3896475,"node_id":"MDQ6VXNlcjM4OTY0NzU=","avatar_url":"https://avatars1.githubusercontent.com/u/3896475?v=4","gravatar_id":"","url":"https://api.github.com/users/probakowski","html_url":"https://github.com/probakowski","followers_url":"https://api.github.com/users/probakowski/followers","following_url":"https://api.github.com/users/probakowski/following{/other_user}","gists_url":"https://api.github.com/users/probakowski/gists{/gist_id}","starred_url":"https://api.github.com/users/probakowski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/probakowski/subscriptions","organizations_url":"https://api.github.com/users/probakowski/orgs","repos_url":"https://api.github.com/users/probakowski/repos","events_url":"https://api.github.com/users/probakowski/events{/privacy}","received_events_url":"https://api.github.com/users/probakowski/received_events","type":"User","site_admin":false},"performed_via_github_app":null}