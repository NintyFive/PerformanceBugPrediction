[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/307794086","html_url":"https://github.com/elastic/elasticsearch/issues/25154#issuecomment-307794086","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25154","id":307794086,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzc5NDA4Ng==","user":{"login":"nknize","id":830187,"node_id":"MDQ6VXNlcjgzMDE4Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/830187?v=4","gravatar_id":"","url":"https://api.github.com/users/nknize","html_url":"https://github.com/nknize","followers_url":"https://api.github.com/users/nknize/followers","following_url":"https://api.github.com/users/nknize/following{/other_user}","gists_url":"https://api.github.com/users/nknize/gists{/gist_id}","starred_url":"https://api.github.com/users/nknize/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nknize/subscriptions","organizations_url":"https://api.github.com/users/nknize/orgs","repos_url":"https://api.github.com/users/nknize/repos","events_url":"https://api.github.com/users/nknize/events{/privacy}","received_events_url":"https://api.github.com/users/nknize/received_events","type":"User","site_admin":false},"created_at":"2017-06-12T13:46:20Z","updated_at":"2017-06-12T13:46:20Z","author_association":"CONTRIBUTOR","body":"Thanks @jpountz. I've got a method in GeoUtils to compute the bounding box from a geohash. I can go ahead and add this to the GeoBoundingBoxBuilder so if the user passes just a geohash (without top_left and bottom_right) the correct bounding box is computed.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/307794421","html_url":"https://github.com/elastic/elasticsearch/issues/25154#issuecomment-307794421","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25154","id":307794421,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzc5NDQyMQ==","user":{"login":"tobias74","id":1889785,"node_id":"MDQ6VXNlcjE4ODk3ODU=","avatar_url":"https://avatars3.githubusercontent.com/u/1889785?v=4","gravatar_id":"","url":"https://api.github.com/users/tobias74","html_url":"https://github.com/tobias74","followers_url":"https://api.github.com/users/tobias74/followers","following_url":"https://api.github.com/users/tobias74/following{/other_user}","gists_url":"https://api.github.com/users/tobias74/gists{/gist_id}","starred_url":"https://api.github.com/users/tobias74/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tobias74/subscriptions","organizations_url":"https://api.github.com/users/tobias74/orgs","repos_url":"https://api.github.com/users/tobias74/repos","events_url":"https://api.github.com/users/tobias74/events{/privacy}","received_events_url":"https://api.github.com/users/tobias74/received_events","type":"User","site_admin":false},"created_at":"2017-06-12T13:47:33Z","updated_at":"2017-06-12T13:48:50Z","author_association":"NONE","body":"which would basically bring back geohash_cell, wouldn't it? üòäüëç","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/307936577","html_url":"https://github.com/elastic/elasticsearch/issues/25154#issuecomment-307936577","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25154","id":307936577,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzkzNjU3Nw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-06-12T21:37:35Z","updated_at":"2017-06-12T21:37:35Z","author_association":"CONTRIBUTOR","body":"Not really, geohash_cell worked by indexing geohashes at index-time and querying at search time using (combinations of) `term` queries. From a user perspective, it probably looks similar, but in that case we actually plan on running a bbox query on the coordinates of indexed geo-points, without requiring geo hashes to be indexed.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/389210483","html_url":"https://github.com/elastic/elasticsearch/issues/25154#issuecomment-389210483","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25154","id":389210483,"node_id":"MDEyOklzc3VlQ29tbWVudDM4OTIxMDQ4Mw==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2018-05-15T15:31:35Z","updated_at":"2018-05-15T15:31:35Z","author_association":"MEMBER","body":"While writing the tests for this issue I realized that if we index a geopoint specified as a geohash it is indexed as a bottom left corner of the corresponding geohash cell instead of the center as one would expect. On high precision geohashes it doesn't really matter but with low precision geohashes it produces somewhat strange results. Would it makes sense change this as well? @nknize what do you think?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/391105914","html_url":"https://github.com/elastic/elasticsearch/issues/25154#issuecomment-391105914","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25154","id":391105914,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MTEwNTkxNA==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2018-05-22T19:06:23Z","updated_at":"2018-05-22T19:06:23Z","author_association":"MEMBER","body":"I have discussed this with @nknize. For me, the main conclusion of this discussion was that we support two very different data structures using the same elasticsearch datatype: geohashes and geo point and that's the source of many issues. Geo points are zero dimensional objects that are represented by longitude and latitude pairs. The geohashes are two dimensional objects that represent cells of geohash grid, which are stored as longitude and latitude of the bottom left point of the cell. \r\n\r\nCurrently, if we operate only using geopoints or only geohashes with the same precision everything works, but the moment we try to mix together geo points with geohashes or geohashes with different precision, the fact that geohashes are stored as a single point without precision breaks things. \r\n\r\nFor example, if we index 4 geohashes `drt70`, `drt71`, `drt40`, and `drt41` and then search for:\r\n```\r\n    \"geo_bounding_box\": {\r\n      \"pin\":\r\n      {\r\n        \"top_right\": \"drt7\",\r\n        \"bottom_left\": \"drt4\"\r\n      }\r\n    }\r\n```\r\n we will get back `drt40`, `drt41`, and `drt70` but will not get back `drt71` because our current implementation only includes My PR #30698 fixes this issue, but it introduces another issue - since the top right corner of `drt7` is the same point as the bottom left corner of `drts` with my PR the query above will also include `drts`, `drts0`, `drts00` and so on. I could modify my PR to make top right edges exclusive, but then we will get into a variation of missing edge points problem #29196 but this time for top right edge. I am not really sure what's the right way to proceed here.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/391399881","html_url":"https://github.com/elastic/elasticsearch/issues/25154#issuecomment-391399881","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25154","id":391399881,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MTM5OTg4MQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-05-23T15:54:54Z","updated_at":"2018-05-23T15:54:54Z","author_association":"CONTRIBUTOR","body":"> since the top right corner of drt7 is the same point as the bottom left corner of drts with my PR the query above will also include drts, drts0, drts00 and so on\r\n\r\nI think this is fine since edges of bounding boxes are supposed to be inclusive. Since drts and drt7 have one point in common, matching is fine. Of couse it is more complex than that in practice due to the fact that everything is approximate, but I'm not worried about this.\r\n\r\nI agree it's a bit weird that we accept geo hashes at index time since they are rectangles rather than points, but I think we can fix it by documentation by adding a warning that in case of geohashes, we index an arbitrary point that belongs to the geohash so users should be careful of indexing geohashes that are long enough to suit their accuracy needs.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/408466011","html_url":"https://github.com/elastic/elasticsearch/issues/25154#issuecomment-408466011","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25154","id":408466011,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODQ2NjAxMQ==","user":{"login":"tobias74","id":1889785,"node_id":"MDQ6VXNlcjE4ODk3ODU=","avatar_url":"https://avatars3.githubusercontent.com/u/1889785?v=4","gravatar_id":"","url":"https://api.github.com/users/tobias74","html_url":"https://github.com/tobias74","followers_url":"https://api.github.com/users/tobias74/followers","following_url":"https://api.github.com/users/tobias74/following{/other_user}","gists_url":"https://api.github.com/users/tobias74/gists{/gist_id}","starred_url":"https://api.github.com/users/tobias74/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tobias74/subscriptions","organizations_url":"https://api.github.com/users/tobias74/orgs","repos_url":"https://api.github.com/users/tobias74/repos","events_url":"https://api.github.com/users/tobias74/events{/privacy}","received_events_url":"https://api.github.com/users/tobias74/received_events","type":"User","site_admin":false},"created_at":"2018-07-27T16:10:28Z","updated_at":"2018-07-27T21:04:11Z","author_association":"NONE","body":"As @nknize pointed out he has a method that calculates top_left and bottom_right from a geohash_cell. So if a user passes a geohash_cell to the query it could be translated to a bounding_box_query. Without bringing back the old \"geohash_cell\"-filter (calculating geohashes at indexing-time and using terms-filters at query time) **the bounding-box-filter could be used and just accept a geohash_cell as its input**.\r\n\r\nThis would make the process of aggregating over geohashes and filtering over the resulting geohash_cells seamless again. Currently I have to calculate the top_left and bottom_right from the geohash_cell in my client, and perform a bounding-box-query manually. \r\n\r\nIn the end it seems a little odd, having an aggregation-result in form of geohashes and not being able to use them again as an input.\r\n\r\n**Edit:**\r\nI have just realized that [https://github.com/elastic/elasticsearch/pull/30698](https://github.com/elastic/elasticsearch/pull/30698) might fix my issue? Can you give an example query how I could filter a bouding-box represented by a geohash_cell that I got back from a geahash-aggregation?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/412893018","html_url":"https://github.com/elastic/elasticsearch/issues/25154#issuecomment-412893018","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25154","id":412893018,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMjg5MzAxOA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-08-14T14:32:38Z","updated_at":"2018-08-14T14:32:38Z","author_association":"CONTRIBUTOR","body":"@tobias74 that would look something like that:\r\n\r\n```\r\nGET /_search\r\n{\r\n    \"query\": {\r\n        \"geo_bounding_box\" : {\r\n            \"pin.location\" : {\r\n                \"top_left\" : \"mygeohash\",\r\n                \"bottom_right\" : \"mygeohash\"\r\n            }\r\n        }\r\n    }\r\n}\r\n```","performed_via_github_app":null}]