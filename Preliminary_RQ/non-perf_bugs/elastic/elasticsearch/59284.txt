{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/59284","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59284/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59284/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/59284/events","html_url":"https://github.com/elastic/elasticsearch/issues/59284","id":653912571,"node_id":"MDU6SXNzdWU2NTM5MTI1NzE=","number":59284,"title":"Test failure for :qa:mixed-cluster:v7.0.0#mixedClusterTest","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"labels":[{"id":144797810,"node_id":"MDU6TGFiZWwxNDQ3OTc4MTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Core","name":":Core/Infra/Core","color":"0e8a16","default":false,"description":"Core issues without another label"},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"},{"id":1967495446,"node_id":"MDU6TGFiZWwxOTY3NDk1NDQ2","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Core/Infra","name":"Team:Core/Infra","color":"fef2c0","default":false,"description":"Meta label for core/infra team"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-07-09T09:29:56Z","updated_at":"2020-08-05T22:26:00Z","closed_at":"2020-08-05T22:26:00Z","author_association":"MEMBER","active_lock_reason":null,"body":"**Build scan**: https://gradle-enterprise.elastic.co/s/nvus6pdwrc5wy\r\n\r\n**Repro line**: none provided by the build but the CI build has executed the following command:\r\n\r\n```\r\n./gradlew --parallel --scan --build-cache -Dorg.elasticsearch.build.cache.url=https://gradle-enterprise.elastic.co/cache/ -S --parallel --max-workers=16 -Dbwc.checkout.align=true -Dignore.tests.seed v7.0.0#bwcTest\r\n```\r\n\r\n**Reproduces locally?**: no\r\n\r\n**Applicable branches**: `7.x`\r\n\r\n**Failure history**: Only noticed this once so far.\r\n\r\n**Failure excerpt**:\r\n\r\nThe test starts four nodes: `v7.0.0-0`, `v7.0.0-1`, `v7.0.0-2` and `v7.0.0-3` and fails with:\r\n\r\n```\r\nTestClustersException: process was found dead while waiting for ports files, node{:qa:mixed-cluster:v7.0.0-2}\r\n```\r\n\r\nFurther above in the logs we can see the cause for this failure. Starting `v7.0.0-2` has failed with:\r\n\r\n```\r\n01:49:55 » ERROR][o.e.b.ElasticsearchUncaughtExceptionHandler] [v7.0.0-2] fatal error in thread [main], exiting\r\n01:49:55 »  java.lang.AssertionError: null\r\n01:49:55 »  \tat org.elasticsearch.monitor.os.OsProbe.readSingleLine(OsProbe.java:189) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.monitor.os.OsProbe.readSysFsCgroupCpuAcctCpuAcctUsage(OsProbe.java:277) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.monitor.os.OsProbe.getCgroupCpuAcctUsageNanos(OsProbe.java:264) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.monitor.os.OsProbe.getCgroup(OsProbe.java:483) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.monitor.os.OsProbe.osStats(OsProbe.java:603) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.monitor.os.OsService.<init>(OsService.java:49) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.monitor.MonitorService.<init>(MonitorService.java:46) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.node.Node.<init>(Node.java:365) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.node.Node.<init>(Node.java:251) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.bootstrap.Bootstrap$5.<init>(Bootstrap.java:211) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:211) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:325) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:159) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.bootstrap.Elasticsearch.execute(Elasticsearch.java:150) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:86) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:124) ~[elasticsearch-cli-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.cli.Command.main(Command.java:90) ~[elasticsearch-cli-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:115) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n01:49:55 »  \tat org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:92) ~[elasticsearch-7.0.0.jar:7.0.0]\r\n```\r\n\r\nThe assertion checks whether the file `/sys/fs/cgroup/cpuacct/user.slice/cpuacct.usage` contains exactly one line. For all nodes but `v7.0.0-2` this has succeeded (`user.slice` is dynamically determined by parsing `/proc/self/cgroup` - see `OsProbe#getControlGroups()`).","closed_by":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"performed_via_github_app":null}