{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/45336","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45336/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45336/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45336/events","html_url":"https://github.com/elastic/elasticsearch/issues/45336","id":478511734,"node_id":"MDU6SXNzdWU0Nzg1MTE3MzQ=","number":45336,"title":"[CI] RepositoryS3ClientYamlTestSuiteIT failure due to index already existing","user":{"login":"dimitris-athanasiou","id":9351617,"node_id":"MDQ6VXNlcjkzNTE2MTc=","avatar_url":"https://avatars3.githubusercontent.com/u/9351617?v=4","gravatar_id":"","url":"https://api.github.com/users/dimitris-athanasiou","html_url":"https://github.com/dimitris-athanasiou","followers_url":"https://api.github.com/users/dimitris-athanasiou/followers","following_url":"https://api.github.com/users/dimitris-athanasiou/following{/other_user}","gists_url":"https://api.github.com/users/dimitris-athanasiou/gists{/gist_id}","starred_url":"https://api.github.com/users/dimitris-athanasiou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dimitris-athanasiou/subscriptions","organizations_url":"https://api.github.com/users/dimitris-athanasiou/orgs","repos_url":"https://api.github.com/users/dimitris-athanasiou/repos","events_url":"https://api.github.com/users/dimitris-athanasiou/events{/privacy}","received_events_url":"https://api.github.com/users/dimitris-athanasiou/received_events","type":"User","site_admin":false},"labels":[{"id":143077482,"node_id":"MDU6TGFiZWwxNDMwNzc0ODI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Snapshot/Restore","name":":Distributed/Snapshot/Restore","color":"0e8a16","default":false,"description":"Anything directly related to the `_snapshot/*` APIs"},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"assignees":[{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2019-08-08T14:36:27Z","updated_at":"2019-09-10T21:28:06Z","closed_at":"2019-09-10T21:28:06Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Build: https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+master+multijob+fast+part2/640/console\r\n\r\nBuild scan: https://gradle-enterprise.elastic.co/s/zi337tn5jozq4/tests/lnddip5cdajhs-s5kswmsl4dtig\r\n\r\nReproduce:\r\n\r\n```\r\n./gradlew :plugins:repository-s3:integTestMinioRunner --tests \"org.elasticsearch.repositories.s3.RepositoryS3ClientYamlTestSuiteIT.test {yaml=repository_s3/20_repository_permanent_credentials/Snapshot and Restore with repository-s3 using permanent credentials}\" -Dtests.seed=7B7F7EB548DDC3C5 -Dtests.security.manager=true -Dtests.locale=haw-US -Dtests.timezone=America/Moncton -Dcompiler.java=12 -Druntime.java=11 -Dtests.rest.blacklist=repository_s3/30_repository_temporary_credentials/*,repository_s3/40_repository_ec2_credentials/*,repository_s3/50_repository_ecs_credentials/*\r\n```\r\n\r\nFailure:\r\n\r\n```\r\njava.lang.AssertionError: Failure at [repository_s3/20_repository_permanent_credentials:231]: expected [2xx] status code but api [snapshot.restore] returned [500 Internal Server Error] [{\"error\":{\"root_cause\":[{\"type\":\"snapshot_restore_exception\",\"reason\":\"[repository_permanent:snapshot-two/yakZmp42RJynf5AU_EB8MA] cannot restore index [docs] because an open index with same name already exists in the cluster. Either close or delete the existing index or restore the index under a different name by providing a rename pattern and replacement name\",\"stack_trace\":\"SnapshotRestoreException[[repository_permanent:snapshot-two/yakZmp42RJynf5AU_EB8MA] cannot restore index [docs] because an open index with same name already exists in the cluster. Either close or delete the existing index or restore the index under a different name by providing a rename pattern and replacement name]\\n\\tat org.elasticsearch.snapshots.RestoreService$1.validateExistingIndex(RestoreService.java:444)\\n\\tat org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:294)\\n\\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47)\\n\\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697)\\n\\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319)\\n\\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214)\\n\\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:699)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\\n\\tat java.base/java.lang.Thread.run(Thread.java:834)\\n\"}],\"type\":\"snapshot_restore_exception\",\"reason\":\"[repository_permanent:snapshot-two/yakZmp42RJynf5AU_EB8MA] cannot restore index [docs] because an open index with same name already exists in the cluster. Either close or delete the existing index or restore the index under a different name by providing a rename pattern and replacement name\",\"stack_trace\":\"SnapshotRestoreException[[repository_permanent:snapshot-two/yakZmp42RJynf5AU_EB8MA] cannot restore index [docs] because an open index with same name already exists in the cluster. Either close or delete the existing index or restore the index under a different name by providing a rename pattern and replacement name]\\n\\tat org.elasticsearch.snapshots.RestoreService$1.validateExistingIndex(RestoreService.java:444)\\n\\tat org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:294)\\n\\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47)\\n\\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697)\\n\\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319)\\n\\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214)\\n\\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:699)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\\n\\tat java.base/java.lang.Thread.run(Thread.java:834)\\n\"},\"status\":500}]Open stacktrace\r\nCaused by: java.lang.AssertionError: expected [2xx] status code but api [snapshot.restore] returned [500 Internal Server Error] [{\"error\":{\"root_cause\":[{\"type\":\"snapshot_restore_exception\",\"reason\":\"[repository_permanent:snapshot-two/yakZmp42RJynf5AU_EB8MA] cannot restore index [docs] because an open index with same name already exists in the cluster. Either close or delete the existing index or restore the index under a different name by providing a rename pattern and replacement name\",\"stack_trace\":\"SnapshotRestoreException[[repository_permanent:snapshot-two/yakZmp42RJynf5AU_EB8MA] cannot restore index [docs] because an open index with same name already exists in the cluster. Either close or delete the existing index or restore the index under a different name by providing a rename pattern and replacement name]\\n\\tat org.elasticsearch.snapshots.RestoreService$1.validateExistingIndex(RestoreService.java:444)\\n\\tat org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:294)\\n\\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47)\\n\\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697)\\n\\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319)\\n\\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214)\\n\\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:699)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\\n\\tat java.base/java.lang.Thread.run(Thread.java:834)\\n\"}],\"type\":\"snapshot_restore_exception\",\"reason\":\"[repository_permanent:snapshot-two/yakZmp42RJynf5AU_EB8MA] cannot restore index [docs] because an open index with same name already exists in the cluster. Either close or delete the existing index or restore the index under a different name by providing a rename pattern and replacement name\",\"stack_trace\":\"SnapshotRestoreException[[repository_permanent:snapshot-two/yakZmp42RJynf5AU_EB8MA] cannot restore index [docs] because an open index with same name already exists in the cluster. Either close or delete the existing index or restore the index under a different name by providing a rename pattern and replacement name]\\n\\tat org.elasticsearch.snapshots.RestoreService$1.validateExistingIndex(RestoreService.java:444)\\n\\tat org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:294)\\n\\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47)\\n\\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697)\\n\\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319)\\n\\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214)\\n\\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\\n\\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:699)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252)\\n\\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\\n\\tat java.base/java.lang.Thread.run(Thread.java:834)\\n\"},\"status\":500}]Open stacktrace\r\n[2019-08-08T09:04:23,113][INFO ][o.e.r.s.RepositoryS3ClientYamlTestSuiteIT] [test] [yaml=repository_s3/20_repository_permanent_credentials/Snapshot and Restore with repository-s3 using permanent credentials] before test\r\n[2019-08-08T09:04:25,473][WARN ][o.e.c.RestClient         ] [test] request [PUT http://[::1]:38473/_bulk?refresh=true&error_trace=true] returned 1 warnings: [299 Elasticsearch-8.0.0-SNAPSHOT-78e35c2c3df3450ec33348cf8614e26665009d03 \"[types removal] Specifying types in bulk requests is deprecated.\"]\r\n[2019-08-08T09:05:01,606][INFO ][o.e.r.s.RepositoryS3ClientYamlTestSuiteIT] [test] Stash dump on test failure [{\r\n  \"stash\" : {\r\n    \"body\" : {\r\n      \"error\" : {\r\n        \"root_cause\" : [\r\n          {\r\n            \"type\" : \"snapshot_restore_exception\",\r\n            \"reason\" : \"[repository_permanent:snapshot-two/yakZmp42RJynf5AU_EB8MA] cannot restore index [docs] because an open index with same name already exists in the cluster. Either close or delete the existing index or restore the index under a different name by providing a rename pattern and replacement name\",\r\n            \"stack_trace\" : \"SnapshotRestoreException[[repository_permanent:snapshot-two/yakZmp42RJynf5AU_EB8MA] cannot restore index [docs] because an open index with same name already exists in the cluster. Either close or delete the existing index or restore the index under a different name by providing a rename pattern and replacement name]\r\n\tat org.elasticsearch.snapshots.RestoreService$1.validateExistingIndex(RestoreService.java:444)\r\n\tat org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:294)\r\n\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47)\r\n\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697)\r\n\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319)\r\n\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214)\r\n\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151)\r\n\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\r\n\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:699)\r\n\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252)\r\n\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n\"\r\n          }\r\n        ],\r\n        \"type\" : \"snapshot_restore_exception\",\r\n        \"reason\" : \"[repository_permanent:snapshot-two/yakZmp42RJynf5AU_EB8MA] cannot restore index [docs] because an open index with same name already exists in the cluster. Either close or delete the existing index or restore the index under a different name by providing a rename pattern and replacement name\",\r\n        \"stack_trace\" : \"SnapshotRestoreException[[repository_permanent:snapshot-two/yakZmp42RJynf5AU_EB8MA] cannot restore index [docs] because an open index with same name already exists in the cluster. Either close or delete the existing index or restore the index under a different name by providing a rename pattern and replacement name]\r\n\tat org.elasticsearch.snapshots.RestoreService$1.validateExistingIndex(RestoreService.java:444)\r\n\tat org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:294)\r\n\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:47)\r\n\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:697)\r\n\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:319)\r\n\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:214)\r\n\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:151)\r\n\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150)\r\n\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188)\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:699)\r\n\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:252)\r\n\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:215)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n\"\r\n      },\r\n      \"status\" : 500\r\n    }\r\n  }\r\n}]\r\n```\r\n\r\nThis does seem a bit similar to https://github.com/elastic/elasticsearch/issues/32458","closed_by":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"performed_via_github_app":null}