{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/18315","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18315/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18315/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18315/events","html_url":"https://github.com/elastic/elasticsearch/issues/18315","id":154638442,"node_id":"MDU6SXNzdWUxNTQ2Mzg0NDI=","number":18315,"title":"Function score queries in must_not bool clauses producing incorrect results","user":{"login":"rusnyder","id":1737440,"node_id":"MDQ6VXNlcjE3Mzc0NDA=","avatar_url":"https://avatars3.githubusercontent.com/u/1737440?v=4","gravatar_id":"","url":"https://api.github.com/users/rusnyder","html_url":"https://github.com/rusnyder","followers_url":"https://api.github.com/users/rusnyder/followers","following_url":"https://api.github.com/users/rusnyder/following{/other_user}","gists_url":"https://api.github.com/users/rusnyder/gists{/gist_id}","starred_url":"https://api.github.com/users/rusnyder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rusnyder/subscriptions","organizations_url":"https://api.github.com/users/rusnyder/orgs","repos_url":"https://api.github.com/users/rusnyder/repos","events_url":"https://api.github.com/users/rusnyder/events{/privacy}","received_events_url":"https://api.github.com/users/rusnyder/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"assignees":[{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false}],"milestone":null,"comments":17,"created_at":"2016-05-13T05:46:55Z","updated_at":"2016-07-19T08:26:44Z","closed_at":"2016-07-19T08:26:44Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version**: 1.7.5 (Tested against 2.0.2, 2.1.2, 2.2.2, and 2.3.2 as well and this is not an issue in any of those releases)\n\n**JVM version**: 1.8.0_45\n\n**OS version**: OSX 10.11.4\n\n**Problem**:\n\nWhen running a function score query as a must_not bool clause, approximately half of the expected documents are being returned. I've been playing around with replicas, number of shards, optimizing, and refreshing on insert which all have minimal to no impact, so for the sake of testing an demonstration and to eliminate variables, the example focuses on 1 shard with no replicas.  I also played around with different score functions and found this same behavior with all functions I tested.\n\n**Steps to reproduce**:\n\n``` shell\n# Create the sample index with a single shard\ncurl -XPUT http://localhost:9200/fnscore-test-index -d '{\n  \"settings\": {\n    \"index\": {\n      \"number_of_shards\": 1,\n      \"number_of_replicas\": 0\n    }\n  }\n}'\n\n# Index some documents.  Two should be enough to demonstrate the issue \n# in a single-shard index, but I saw some inconsistencies around how many documents\n# failed to match appropriately in smaller sample sizes, so crank up the sample size\n# until you see the query count mismatches\nfor i in {1..2}; do\n  curl -XPUT \"http://localhost:9200/fnscore-test-index/event/$i\" -d \"{\\\"field\\\":\\\"value-$i\\\"}\"\ndone\n\n# Run the must_not function score query, sticking with a simple function\n# score script that SHOULD match every document, therefore making the\n# must_not match zero documents\ncurl -XPOST http://localhost:9200/fnscore-test-index/event/_count -d '{\n   \"query\": {\n      \"bool\": {\n         \"must_not\": [\n            {\n               \"function_score\": {\n                  \"functions\": [\n                     {\n                        \"script_score\": {\n                           \"script\": \"-1\",\n                           \"lang\": \"expression\"\n                        }\n                     }\n                  ],\n                  \"score_mode\": \"sum\",\n                  \"boost_mode\": \"replace\",\n                  \"min_score\": 0\n               }\n            }\n         ]\n      }\n   }\n}'\n# ...which returns...\n{\n   \"count\": 1, # This should be 2 \n   \"_shards\": {\n      \"total\": 1,\n      \"successful\": 1,\n      \"failed\": 0\n   }\n}\n```\n\nSince the function score query should match zero documents, the must_not should (in theory) return ALL documents, but it's really only returning somewhere around half.  Note that small sample sizes have (greater sample sizes )\n\n**Interesting (maybe) notes**:\n- Adding a refresh after each insert changes how many documents fail to match the query criteria in small samples, but with an increased sample size, that difference diminishes as the sample size increases, more/less completely vanishing in the 80-100 document range\n- Using a `not` filter instead of a bool query `must_not` \"fixes\" the problem and returns all expected results (this requires the function score query to be wrapped in a query filter, of course)\n- Adding `must` and `should` clauses to the bool query has no impact on the result\n\nNote that this is only an issue in 1.7.5 and below, which I totally understand makes it way lower priority.  I've tested with all of the most recent 2.x point releases and have been unable to reproduce with those releases.  I'm putting in this report more because I'm not super familiar w/ bool internals and wanted to make sure this wasn't something systemic that may cause future issues.\n","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}