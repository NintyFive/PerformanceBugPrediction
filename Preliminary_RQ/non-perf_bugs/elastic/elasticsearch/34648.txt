{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/34648","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34648/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34648/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34648/events","html_url":"https://github.com/elastic/elasticsearch/issues/34648","id":372022324,"node_id":"MDU6SXNzdWUzNzIwMjIzMjQ=","number":34648,"title":"[ILM] Allow ILM and CCR to work well together","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"labels":[{"id":912828538,"node_id":"MDU6TGFiZWw5MTI4Mjg1Mzg=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/ILM+SLM","name":":Core/Features/ILM+SLM","color":"0e8a16","default":false,"description":"Index and Snapshot lifecycle management"},{"id":912824565,"node_id":"MDU6TGFiZWw5MTI4MjQ1NjU=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/CCR","name":":Distributed/CCR","color":"0e8a16","default":false,"description":"Issues around the Cross Cluster State Replication features"}],"state":"closed","locked":false,"assignee":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"assignees":[{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},{"login":"gwbrown","id":1522844,"node_id":"MDQ6VXNlcjE1MjI4NDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1522844?v=4","gravatar_id":"","url":"https://api.github.com/users/gwbrown","html_url":"https://github.com/gwbrown","followers_url":"https://api.github.com/users/gwbrown/followers","following_url":"https://api.github.com/users/gwbrown/following{/other_user}","gists_url":"https://api.github.com/users/gwbrown/gists{/gist_id}","starred_url":"https://api.github.com/users/gwbrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gwbrown/subscriptions","organizations_url":"https://api.github.com/users/gwbrown/orgs","repos_url":"https://api.github.com/users/gwbrown/repos","events_url":"https://api.github.com/users/gwbrown/events{/privacy}","received_events_url":"https://api.github.com/users/gwbrown/received_events","type":"User","site_admin":false}],"milestone":null,"comments":23,"created_at":"2018-10-19T16:08:29Z","updated_at":"2019-02-20T12:05:48Z","closed_at":"2019-02-20T12:05:48Z","author_association":"MEMBER","active_lock_reason":null,"body":"If an index is a CCR leader or follower index then the delete and shrink action should wait proceding any operations. This is to avoid problems described under original problem description.\r\n\r\n## Leader indices\r\n\r\nILM needs to query the indices stats api and check the shard history retention leases in order to determine whether an index is a leader index.\r\n\r\nIf an index is a leader index then the delete and shrink actions first need to execute the following steps:\r\n* Set the `index.lifecycle.indexing_complete` index setting to `true`.\r\n* Periodically query the indices stats api and check whether there are no shard history retention leases for the leader index.\r\n\r\nAfter this it is safe the proceed any steps that are part of the ILM delete and shrink actions.\r\n\r\n## Follower indices\r\n\r\nILM needs to check an index's custom index metadata to check whether an index is a follower index.\r\nIf an index is a follower index then the shrink action first needs to execute the following steps:\r\n* Wait for the `index.lifecycle.indexing_complete` index setting to be replicated from the leader index.\r\n* Then after that wait for the follower index's global check point to be equal to the leader index's global check point.\r\n* Pause index following for the follower index. (This will release any shard history retention leases a follow index has on its leader index)\r\n* Close the follower index.\r\n* Unfollow the follower index. (Only closed indices can be unfollowed, because it changes the internal engine for all shards.)\r\n* Open the unfollowed index.\r\n\r\nAfter this it is safe the proceed any steps that are part of the ILM shrink action.\r\n\r\nTasks\r\n\r\n- [x] Change the delete and shrink actions to safely handle CCR leader indices. https://github.com/elastic/elasticsearch/pull/38140\r\n- [x] Implement an Unfollow action https://github.com/elastic/elasticsearch/pull/36970\r\n- [x] Inject Unfollow action/steps before Shrink and Rollover actions https://github.com/elastic/elasticsearch/pull/37625\r\n\r\n## Original problem description\r\n\r\nCurrently if a user wishes to use CCR and ILM together on the same index they can run into problems. To help describe these problems imagine we have two clusters (for this discussion I'm going to call them `leader` and `follower`) and we are using CCR's auto-follow on the follower cluster to follow any indices on the leader cluster matching `test-*`. \r\n\r\nNow, because in our scenario we have a time series use case it would also be good to have ILM manage the indices, so on the leader we set up a policy on the leader cluster which uses rollover, warm allocation, forcemerge, and shrink. Then we add the policy name to the index template for `test-*`, bootstrap ILM by creating the first index and now we have ILM working on our leader cluster and managing the `test-*` indices.\r\n\r\n### Problem 1 - Setting up a policy for the following indices\r\n\r\nHaving the `test-*` indices managed by ILM on the leader cluster is great but equally we would like ILM to manage the following indices on the follower cluster too. However, we can't use the exact same policy on the follower cluster because the following index will not have the write alias and even if it did we don't want the following index to rollover on its own criteria, we want it to mirror the leader index. This means the following index needs an indication that the leader has rolled over and moved to the warm phase so the following index also knows it can move to the warm phase.\r\n\r\n### Problem 2 - The leader index and the shrink action\r\n\r\nIn ILM the shrink action allocates one copy of each shard to a single node, then performs the shrink operation and then deletes the original (un-shrunk) index and sets an alias on the new (shrunken) index with the same name as the original index. This allows the naive user to search the index as if it was still the same index but under the covers the index is a different index.\r\n\r\nThe problem when combining this with CCR is that the following index may not be completely up to date with the leader index at the point the shrink action is performed, meaning that it may suddenly discover the leader index no longer exists and not be able to progress since there is no way for it to know that the index is equivalent to the shrunken index on the leader and means that the follower and leader cluster are indefinitely out of sync.\r\n\r\nOne solution to this would be for the un-shrunken following index to delete itself and for there to be a separate auto-follow rule to sync the shrunken indices from the leader. The problem with this is that it requires all the follower shrunken index to be synced from scratch copying all the same data as it had already in the un-shrunken index which is a waste of resources but more importantly means there is a period where the follower cluster will actually be getting further out of sync with the leader since its thrown away the un-shrunken index and is waiting to fully sync the shrunken index from the leader.","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}