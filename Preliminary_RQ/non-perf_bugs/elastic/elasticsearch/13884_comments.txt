[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/145069490","html_url":"https://github.com/elastic/elasticsearch/issues/13884#issuecomment-145069490","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13884","id":145069490,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTA2OTQ5MA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-10-02T15:53:05Z","updated_at":"2015-10-02T15:53:05Z","author_association":"CONTRIBUTOR","body":"This does look like a bug.  The min_should_match is being applied at the wrong level:\n\n```\nGET /test/test/_validate/query?explain\n{\n  \"query\" : {\n    \"simple_query_string\" : {\n      \"fields\" : [ \"title\", \"f1\", \"f2\" ],\n      \"query\" : \"test\",\n      \"minimum_should_match\" : \"-50%\"\n    }\n  }\n}\n```\n\nReturns an explanation of:\n\n```\n+((f1:test title:test f2:test)~2)\n```\n\nWhile the `query_string` and `multi_match` equivalents return:\n\n```\n+(title:test | f1:test | f2:test)\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148000511","html_url":"https://github.com/elastic/elasticsearch/issues/13884#issuecomment-148000511","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13884","id":148000511,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODAwMDUxMQ==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-10-14T10:09:12Z","updated_at":"2015-10-14T21:02:37Z","author_association":"MEMBER","body":"I had a look and saw that `simple_query_string` iterates over all fields for each token in the query string and combines them all in boolean query `should` clauses, and we apply the `minimum_should_match` on the whole result. \n\n@clintongormley As far as I understand you, we should parse the query string for each field separately, apply the `minimum_should_match` there and then combine the result in an overall Boolean query. This however raised another question for me. Suppose we have two terms like `\"query\" : \"test document\"` instead, then currently we we get:\n\n```\n((f1:test title:test f2:test) (f1:document title:document f2:document))~1\n```\n\nIf we would instead create the query per field individually we would get something like\n\n```\n((title:test title:document)~1 (f1:test f1:document)~1 (f2:test f2:document)~1)\n```\n\nWhile treating the query string for each field individually looks like the right behaviour in this case, I wonder if this will break other cases. wdyt?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148023418","html_url":"https://github.com/elastic/elasticsearch/issues/13884#issuecomment-148023418","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13884","id":148023418,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODAyMzQxOA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-10-14T11:31:18Z","updated_at":"2015-10-14T11:31:18Z","author_association":"CONTRIBUTOR","body":"@cbuescher the `query_string` query takes the same approach as your first output, ie:\n\n```\n((f1:test title:test f2:test) (f1:document title:document f2:document))~1\n```\n\nI think the bug is maybe a bit more subtle.  A query across 3 fields for two terms with min should match 80% results in:\n\n```\nbool:\n    min_should_match: 80% (==1)\n    should:\n      bool:\n        should: [ f1:term1, f2:term1, f3:term1]\n      bool:\n        should: [ f1:term2, f2:term2, f3:term2]\n```\n\nhowever with only one term it is producing:\n\n```\nbool:\n  min_should_match: 80% (==2) \n  should: [ f1:term1, f2:term1, f3:term1]\n```\n\nIn other words, min should match is being applied to the wrong `bool` query.  Instead, even the one term case should be wrapped in another `bool` query, and the min should match should be applied at that level.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148028555","html_url":"https://github.com/elastic/elasticsearch/issues/13884#issuecomment-148028555","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13884","id":148028555,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODAyODU1NQ==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-10-14T12:03:12Z","updated_at":"2015-10-14T12:03:12Z","author_association":"MEMBER","body":"@clintongormley Yes, I think thats what I meant. I'm working on a PR that applies the `minimum_should_match` to sub-queries that only target one field. That way your examples above would change to something like\n\n```\nbool:    \n    should:\n      bool:\n        min_should_match: 80% (==1)\n        should: [ f1:term1, f1:term2]\n      bool:\n        min_should_match: 80% (==1)\n        should: [ f2:term1, f2:term2]\n      bool:\n        min_should_match: 80% (==1)\n        should: [ f3:term1, f3:term2]\n```\n\nand for one term\n\n```\nbool:    \n    should:\n      bool:\n        min_should_match: 80% (==0)\n        should: [ f1:term1]\n      bool:\n        min_should_match: 80% (==0)\n        should: [ f2:term1]\n      bool:\n        min_should_match: 80% (==0)\n        should: [ f3:term1]\n```\n\nIn the later case we already additionally simplify one-term bool queries to TermQueries.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148358711","html_url":"https://github.com/elastic/elasticsearch/issues/13884#issuecomment-148358711","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13884","id":148358711,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODM1ODcxMQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-10-15T11:22:45Z","updated_at":"2015-10-15T11:22:45Z","author_association":"CONTRIBUTOR","body":"@cbuescher I think that is incorrect.  The simple query string query (like the query string query) is term-centric rather than field-centric.  In other words, min should match should be applied to the number of terms (regardless of which field the term is in).\n\nI'm guessing that there is an \"optimization\" for the one term case where the field-level bool clause is not wrapped in an outer bool clause.  Then the min should match is applied at the field level instead of at the term level, resulting in the wrong calculation.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148374958","html_url":"https://github.com/elastic/elasticsearch/issues/13884#issuecomment-148374958","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13884","id":148374958,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODM3NDk1OA==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-10-15T12:49:18Z","updated_at":"2015-10-15T12:49:18Z","author_association":"MEMBER","body":"That guess seems right, there is an optimization in lucenes\nSimpleQueryParser for boolean queries with 0 or 1 clauses that seems to be\nthe problem. I think we can overwrite that.\n\nOn Thu, Oct 15, 2015 at 1:23 PM, Clinton Gormley notifications@github.com\nwrote:\n\n> @cbuescher https://github.com/cbuescher I think that is incorrect. The\n> simple query string query (like the query string query) is term-centric\n> rather than field-centric. In other words, min should match should be\n> applied to the number of terms (regardless of which field the term is in).\n> \n> I'm guessing that there is an \"optimization\" for the one term case where\n> the field-level bool clause is not wrapped in an outer bool clause. Then\n> the min should match is applied at the field level instead of at the term\n> level, resulting in the wrong calculation.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/elastic/elasticsearch/issues/13884#issuecomment-148358711\n> .\n\n## \n\nChristoph Büscher\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148414875","html_url":"https://github.com/elastic/elasticsearch/issues/13884#issuecomment-148414875","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13884","id":148414875,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQxNDg3NQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-10-15T15:04:19Z","updated_at":"2015-10-15T15:04:19Z","author_association":"CONTRIBUTOR","body":"If this is in Lucene, perhaps it should be fixed there?\n\n@jdconrad what do you think?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148418387","html_url":"https://github.com/elastic/elasticsearch/issues/13884#issuecomment-148418387","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13884","id":148418387,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQxODM4Nw==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-10-15T15:15:15Z","updated_at":"2015-10-15T15:15:15Z","author_association":"MEMBER","body":"@clintongormley I don't think SimpleQueryParser#simplify() is at the root of this anymore. The problem seems to be that SimpleQueryParser parses term by term-centric, but only starts wrapping the resulting queries when combining more than two of them. For one search term and two fields I get a Boolean query with two TermQuery clauses (without enclosing Boolean query), for two terms and one field I get an enclosing Boolean query with two Boolean query subclauses. I'm not sure yet how this can be distiguished from outside of the Lucene parser without inspecting the query, and if a solution like that holds for more complicated cases.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/149151047","html_url":"https://github.com/elastic/elasticsearch/issues/13884#issuecomment-149151047","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13884","id":149151047,"node_id":"MDEyOklzc3VlQ29tbWVudDE0OTE1MTA0Nw==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-10-19T08:58:58Z","updated_at":"2015-10-19T08:58:58Z","author_association":"MEMBER","body":"Althought it would be nice if Lucene SimpleQueryParse would output a Boolquery with one should-clause and three nested Boolqueries for the 1-term/multi-field case, I think we can detect this case and do the wrapping in the additional Boolquery in the SimpleQueryStringBuilder. I just opened a PR.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/149285553","html_url":"https://github.com/elastic/elasticsearch/issues/13884#issuecomment-149285553","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13884","id":149285553,"node_id":"MDEyOklzc3VlQ29tbWVudDE0OTI4NTU1Mw==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2015-10-19T17:15:49Z","updated_at":"2015-10-19T17:15:49Z","author_association":"CONTRIBUTOR","body":"The SQP wasn't really designed around multi-field terms, but needed to have it added afterwards for use as a default field which is why the min-should-match never gets applied down at that the level.  I don't know if the correct behavior is to make it work on multi-fields.  I'll have to give that some thought given that it really is as @cbuescher described as term-centric, and it sort of supposed to be disguised from the user.  One thing that will make this easier to fix, though, I believe is #4707, since it will flatten the parse tree a bit.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/149486734","html_url":"https://github.com/elastic/elasticsearch/issues/13884#issuecomment-149486734","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13884","id":149486734,"node_id":"MDEyOklzc3VlQ29tbWVudDE0OTQ4NjczNA==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-10-20T09:10:12Z","updated_at":"2015-10-20T09:10:12Z","author_association":"MEMBER","body":"@jdconrad thanks for explaining, in the meantime I opened #14186 which basically tries to distinguish the one vs. multi-field cases and tries wraps the resulting query one more time to get a correct min-should-match. Please leave comment there if my current approach will colide the plans regarding #4707.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/153315208","html_url":"https://github.com/elastic/elasticsearch/issues/13884#issuecomment-153315208","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13884","id":153315208,"node_id":"MDEyOklzc3VlQ29tbWVudDE1MzMxNTIwOA==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-11-03T11:01:39Z","updated_at":"2015-11-03T11:01:39Z","author_association":"MEMBER","body":"Reopening this issue since the fix proposed in #14186 was too fragile. Discussed with @javanna and @jpountz, at this point we think the options are either fixing this in lucenes SimpleQueryParser so that we can apply minimum_should_match correctly on the ES side or remove this option from `simple_query_string` entirely because it cannot properly supported.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/153330850","html_url":"https://github.com/elastic/elasticsearch/issues/13884#issuecomment-153330850","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13884","id":153330850,"node_id":"MDEyOklzc3VlQ29tbWVudDE1MzMzMDg1MA==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-11-03T11:57:40Z","updated_at":"2015-11-03T11:57:40Z","author_association":"MEMBER","body":"Trying to sum up this issue so far: \n- the number of should-clauses returned by `SimpleQueryParser` is not 1 for one search term and multiple fields, so we cannot apply `minimum_should_match` correctly in `SimpleQueryStringBuilder`. e.g. for `\"query\" : \"term1\", \"fields\" : [ \"f1\", \"f2\", \"f3\" ]` SimpleQueryParser returns a BooleanQuery with three should-clauses. As soon  as we add more search terms, the number of should-clauses is the same as the number of search terms, e.g. `\"query\" : \"term1 term2\", \"fields\" : [ \"f1\", \"f2\", \"f3\" ]` returns a BooleanQuery with two subclauses, one per term.\n- it is difficult to determine the number of terms from the query string upfront, because the tokenization depends on the analyzer used, so we really need `SimpleQueryParser#parse()` for this.\n- it is hard to determine the correct number of terms from the returned lucene query without making assumptions about the inner structure of the query (which is subject to change, reason for #14186 beeing reverted). e.g. currently `\"query\" : \"term1\", \"fields\" : [ \"f1\", \"f2\", \"f3\" ]` and `\"query\" : \"term1 term2 term3\", \"fields\" : [ \"f1\" ]` will return a BooleanQuery with same structure (three should-clauses, each containing a TermQuery). \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/179975012","html_url":"https://github.com/elastic/elasticsearch/issues/13884#issuecomment-179975012","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13884","id":179975012,"node_id":"MDEyOklzc3VlQ29tbWVudDE3OTk3NTAxMg==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-02-04T18:11:51Z","updated_at":"2016-02-04T18:11:51Z","author_association":"MEMBER","body":"@cbuescher this issue is fixed by https://github.com/elastic/elasticsearch/pull/16155. \n@rmuir has pointed out a nice way to distinguish between a single word query with multiple fields against a multi word query with a single field: we just have to check if the coord are disabled on the top level BooleanQuery, the simple query parser disables the coord when the boolean query for multiple fields is built.\nThough I tested the single word with multiple fields case only, if you think of other issues please reopen this ticket or open a new one ;).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/180049856","html_url":"https://github.com/elastic/elasticsearch/issues/13884#issuecomment-180049856","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13884","id":180049856,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MDA0OTg1Ng==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2016-02-04T21:08:13Z","updated_at":"2016-02-04T21:08:13Z","author_association":"MEMBER","body":"@jimferenczi thats great, I just checked this with a test which is close to the problem desciption here. I'm not sure if this adds anything to your tests, but just in case I justed opened  #16465 which adds this as an integration test for SimpleQueryStringQuery. Maybe you can take a look and tell me if it makes sense to add those as well.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/180256823","html_url":"https://github.com/elastic/elasticsearch/issues/13884#issuecomment-180256823","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13884","id":180256823,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MDI1NjgyMw==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-02-05T08:55:03Z","updated_at":"2016-02-05T08:55:03Z","author_association":"MEMBER","body":"@cbuescher thanks, a unit test in SimpleQueryStringBuilderTest could be useful as well. The integ test does not check the minimum should match that is applied (or not) to the boolean query. \n","performed_via_github_app":null}]