[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/343110658","html_url":"https://github.com/elastic/elasticsearch/issues/27323#issuecomment-343110658","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27323","id":343110658,"node_id":"MDEyOklzc3VlQ29tbWVudDM0MzExMDY1OA==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2017-11-09T10:21:31Z","updated_at":"2017-11-09T10:21:31Z","author_association":"MEMBER","body":"@pacer11 thanks or raising this, it looks to me like this is a bug. I managed to reproduce it on the master branch with the following script:\r\n```\r\nPUT test\r\n{\r\n  \"settings\": {\r\n    \"number_of_shards\": 1,\r\n    \"number_of_replicas\": 0\r\n  },\r\n  \"mappings\": {\r\n    \"doc\": {\r\n      \"_meta\": {\r\n        \"foo\": \"bar\"\r\n      },\r\n      \"properties\": {\r\n        \"string_field\": {\r\n          \"type\": \"text\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nGET test/_mapping\r\n\r\n#Dynamically mapped field maintain _meta object\r\nPUT test/doc/1\r\n{\r\n  \"string_field\": \"foo\"\r\n}\r\n\r\nGET test/_mapping\r\n\r\n# Adding a field with the PUT mapping API destroys the _meta object\r\nPUT test/doc/_mapping\r\n{\r\n  \"doc\": {\r\n    \"properties\": {\r\n      \"int_field\": {\r\n        \"type\": \"integer\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nGET test/_mapping\r\n```\r\n\r\nUnfortunately I think the only workaround at the moment would be to make sure you include the `_meta` object on every call to the PUT mappings API.\r\n\r\nOut of curiousity, what are you using the `_meta` field in the mappings for? i.e. what information do you store in it and how do you use that information?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/343125697","html_url":"https://github.com/elastic/elasticsearch/issues/27323#issuecomment-343125697","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27323","id":343125697,"node_id":"MDEyOklzc3VlQ29tbWVudDM0MzEyNTY5Nw==","user":{"login":"pacer11","id":25821141,"node_id":"MDQ6VXNlcjI1ODIxMTQx","avatar_url":"https://avatars3.githubusercontent.com/u/25821141?v=4","gravatar_id":"","url":"https://api.github.com/users/pacer11","html_url":"https://github.com/pacer11","followers_url":"https://api.github.com/users/pacer11/followers","following_url":"https://api.github.com/users/pacer11/following{/other_user}","gists_url":"https://api.github.com/users/pacer11/gists{/gist_id}","starred_url":"https://api.github.com/users/pacer11/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pacer11/subscriptions","organizations_url":"https://api.github.com/users/pacer11/orgs","repos_url":"https://api.github.com/users/pacer11/repos","events_url":"https://api.github.com/users/pacer11/events{/privacy}","received_events_url":"https://api.github.com/users/pacer11/received_events","type":"User","site_admin":false},"created_at":"2017-11-09T11:22:26Z","updated_at":"2017-11-09T11:22:26Z","author_association":"NONE","body":"@colings86 Thanks for your confirmation.  We are kinda already using the workaround you suggested, however it's one of those annoying things to remember especially when it's not necessarily intuitive.\r\n\r\nWe use the _meta field for a couple of reasons. \r\n1. The date fields that we define in our mapping are all consistently stored as one format but when we retrieve from ES, we represent in various formats so we track the different formats in the _meta field so that as we are transforming the JSON we get from ES we can apply the applicable transformation before sending it further upstream in our application.  I am sure there are other ways of achieving this but this seems to work well for us.\r\n2. We have a few nested field mappings defined and we keep track of the nested paths within the _meta field.  We have a query generator routine that dynamically generates the ES Queries based upon the fields passed in and we pull nested paths information from the _meta field so that we can determine if a nested path should be incorporated into the query or not.\r\n\r\nHope this helps!","performed_via_github_app":null}]