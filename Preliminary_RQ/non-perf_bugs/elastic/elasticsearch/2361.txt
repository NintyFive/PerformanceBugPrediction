{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/2361","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2361/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2361/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2361/events","html_url":"https://github.com/elastic/elasticsearch/issues/2361","id":7906879,"node_id":"MDU6SXNzdWU3OTA2ODc5","number":2361,"title":"GeoShape intersects operation returns false positives","user":{"login":"IamJeffG","id":2002703,"node_id":"MDQ6VXNlcjIwMDI3MDM=","avatar_url":"https://avatars1.githubusercontent.com/u/2002703?v=4","gravatar_id":"","url":"https://api.github.com/users/IamJeffG","html_url":"https://github.com/IamJeffG","followers_url":"https://api.github.com/users/IamJeffG/followers","following_url":"https://api.github.com/users/IamJeffG/following{/other_user}","gists_url":"https://api.github.com/users/IamJeffG/gists{/gist_id}","starred_url":"https://api.github.com/users/IamJeffG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IamJeffG/subscriptions","organizations_url":"https://api.github.com/users/IamJeffG/orgs","repos_url":"https://api.github.com/users/IamJeffG/repos","events_url":"https://api.github.com/users/IamJeffG/events{/privacy}","received_events_url":"https://api.github.com/users/IamJeffG/received_events","type":"User","site_admin":false},"labels":[{"id":141079527,"node_id":"MDU6TGFiZWwxNDEwNzk1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Geo","name":":Analytics/Geo","color":"0e8a16","default":false,"description":"Indexing, search aggregations of geo points and shapes"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2012-10-27T00:15:58Z","updated_at":"2015-04-21T19:03:55Z","closed_at":"2015-04-21T19:03:54Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The geoShape logic produces false positives in results returned from \"intersects\" queries and filters.  I presume (have not tested) that \"contains\" also produces false positives and \"disjoint\" can fail to return true matches.  This is because the queries/filters check only if the query shape and document shape have grid locations that overlap in the SpatialPrefixTree implementation, without actually comparing the query shape with the document shape.\n\nIn theory this bug can be worked around by increasing the depth of the SpatialPrefixTree (`maxLevels` in the constructor).  In practice both indexing shapes and querying shapes is a O(4^n) algorithm in both space and time, where n is the tree's depth, so highly accurate results and low-latency or limited RAM are mutually exclusive.  100% accurate querying at all resolutions requires an infinitely deep tree, under the current implementation, which is based solely on gridding.\n\nOne solution is to use the existing implementation to find candidate docs, and verify each of those docs by pulling back its geometry and comparing to the query using JTS.  This allows keeping spatial index trees relatively shallow and efficient.  I'm happy to implement this and share the pull request, unless you guys have other ideas.  I have questions:\n- does such a patch go to the elasticsearch project, or upstream (Lucene?)\n- documentation says we don't support storage of geometry fields, except in the `_source`. Where would I start to store the geometry (maybe as WKB) itself in the index (not just its tree nodes)?\n\nHere's how to replicate the bug:\n\n``` java\n   private static final SpatialPrefixTree QUAD_PREFIX_TREE =\n            new QuadPrefixTree(GeoShapeConstants.SPATIAL_CONTEXT,\n            QuadPrefixTree.DEFAULT_MAX_LEVELS);\n    strategy  = new TermQueryPrefixTreeStrategy(\n            new FieldMapper.Names(\"shape\"), QUAD_PREFIX_TREE, 0.0);\n\n    IndexWriter writer = new IndexWriter(directory,\n            new IndexWriterConfig(Version.LUCENE_36, new KeywordAnalyzer()));\n    writer.addDocument(newDocument(\"5\",\n                newPolygon().point(-92.34, 37.56).point(-92.34, 37.55)\n                .point(-92.32, 37.55).point(-92.32, 37.56).point(-92.34, 37.56).build()));\n\n    Point point = new Point(-92.319, 37.54);\n    Filter filter = STRATEGY.createIntersectsFilter(point);\n\n    // BUG: the doc and query do not intersect, but this returns 1 hit\n    indexSearcher.search(new MatchAllDocsQuery(), filter, 10);\n```\n","closed_by":{"login":"nknize","id":830187,"node_id":"MDQ6VXNlcjgzMDE4Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/830187?v=4","gravatar_id":"","url":"https://api.github.com/users/nknize","html_url":"https://github.com/nknize","followers_url":"https://api.github.com/users/nknize/followers","following_url":"https://api.github.com/users/nknize/following{/other_user}","gists_url":"https://api.github.com/users/nknize/gists{/gist_id}","starred_url":"https://api.github.com/users/nknize/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nknize/subscriptions","organizations_url":"https://api.github.com/users/nknize/orgs","repos_url":"https://api.github.com/users/nknize/repos","events_url":"https://api.github.com/users/nknize/events{/privacy}","received_events_url":"https://api.github.com/users/nknize/received_events","type":"User","site_admin":false},"performed_via_github_app":null}