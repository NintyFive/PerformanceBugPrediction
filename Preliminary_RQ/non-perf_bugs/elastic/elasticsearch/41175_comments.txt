[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/482767164","html_url":"https://github.com/elastic/elasticsearch/issues/41175#issuecomment-482767164","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41175","id":482767164,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Mjc2NzE2NA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-04-13T02:01:30Z","updated_at":"2019-04-13T02:01:30Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-analytics-geo","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/483262874","html_url":"https://github.com/elastic/elasticsearch/issues/41175#issuecomment-483262874","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41175","id":483262874,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzI2Mjg3NA==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-04-15T13:58:32Z","updated_at":"2019-04-15T13:58:32Z","author_association":"MEMBER","body":"Thanks for the report @pushshift.  This feels like a bug introduced during the java-time transition and supporting nanoseconds (being off by exactly 1000).  I'll try to reproduce locally and see what's up.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/483324724","html_url":"https://github.com/elastic/elasticsearch/issues/41175#issuecomment-483324724","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41175","id":483324724,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzMyNDcyNA==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-04-15T16:30:47Z","updated_at":"2019-04-15T16:30:47Z","author_association":"MEMBER","body":"Actually, I believe this is intended behavior.  I overlooked that the format is `epoch_seconds`.  The value internally is stored as milliseconds since epoch, so when it's formated to `epoch_seconds` it will be 1000 times less than the milliseconds representation.\r\n\r\nSo the \"as_string\" value is correct, because that represents the formatted version.  It just so happens that the formatter you chose is also a number (in seconds), which is why it looks different.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/483347907","html_url":"https://github.com/elastic/elasticsearch/issues/41175#issuecomment-483347907","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41175","id":483347907,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzM0NzkwNw==","user":{"login":"pushshift","id":12604285,"node_id":"MDQ6VXNlcjEyNjA0Mjg1","avatar_url":"https://avatars3.githubusercontent.com/u/12604285?v=4","gravatar_id":"","url":"https://api.github.com/users/pushshift","html_url":"https://github.com/pushshift","followers_url":"https://api.github.com/users/pushshift/followers","following_url":"https://api.github.com/users/pushshift/following{/other_user}","gists_url":"https://api.github.com/users/pushshift/gists{/gist_id}","starred_url":"https://api.github.com/users/pushshift/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pushshift/subscriptions","organizations_url":"https://api.github.com/users/pushshift/orgs","repos_url":"https://api.github.com/users/pushshift/repos","events_url":"https://api.github.com/users/pushshift/events{/privacy}","received_events_url":"https://api.github.com/users/pushshift/received_events","type":"User","site_admin":false},"created_at":"2019-04-15T17:37:27Z","updated_at":"2019-04-15T17:39:04Z","author_association":"NONE","body":"If that's the intended behavior, that's fine. However, I thought \"value_as_string\" served as an alternate to value in the event that a number was large or a floating point approximation was very large (similar to how Twitter's id_str is used as a supplement to id because Javascript may have conversion issues with 64 bit integers).\r\n\r\nMy feeling on this is that value_as_string should be a string representation of the value field but if this is intended behavior then I understand.\r\n\r\nThanks for looking at this!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/483356671","html_url":"https://github.com/elastic/elasticsearch/issues/41175#issuecomment-483356671","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41175","id":483356671,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzM1NjY3MQ==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-04-15T18:01:16Z","updated_at":"2019-04-15T18:01:16Z","author_association":"MEMBER","body":"Ah I see, gotcha.  Yeah, the `value_as_string` field is the formatted version of the field, which depends on the field formatter of the particular data type. \r\n\r\nThe aggregation framework works will all numeric-based values (numbers, dates, scaled_floats, ip addresses, etc) as numbers internally, so the `value` field will be the result of that computation in numeric format.  The `value_as_string` field will then be the value, formatted with the data types string formatting utility.  E.g. IPs get turned back into dot-notation IP addresses, dates turned into whatever specified date format, scaled floats re-scaled back to their resolution, etc.\r\n\r\nThe naming is perhaps a bit confusing, especially in cases like `epoch_seconds` where there isn't an obvious difference like a string date would have (`1555351107833` vs `Mon Apr 15 2019 17:58:27`).  But at this point changing it would be a big ordeal for backwards compat reasons.\r\n\r\nGonna close this issue, apologies for the confusion!","performed_via_github_app":null}]