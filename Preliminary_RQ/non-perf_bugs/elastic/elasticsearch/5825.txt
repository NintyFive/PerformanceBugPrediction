{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/5825","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5825/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5825/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5825/events","html_url":"https://github.com/elastic/elasticsearch/issues/5825","id":31626471,"node_id":"MDU6SXNzdWUzMTYyNjQ3MQ==","number":5825,"title":"Closing an IndexReader on an already relocated / closed shard can cause memory leaks","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"labels":[{"id":836542781,"node_id":"MDU6TGFiZWw4MzY1NDI3ODE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Engine","name":":Distributed/Engine","color":"0e8a16","default":false,"description":"Anything around managing Lucene and the Translog in an open shard."},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":88454274,"node_id":"MDU6TGFiZWw4ODQ1NDI3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.1.1","name":"v1.1.1","color":"DDDDDD","default":false,"description":null},{"id":85667032,"node_id":"MDU6TGFiZWw4NTY2NzAzMg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.2.0","name":"v1.2.0","color":"dddddd","default":false,"description":null},{"id":76184120,"node_id":"MDU6TGFiZWw3NjE4NDEyMA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v2.0.0-beta1","name":"v2.0.0-beta1","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-04-16T09:35:11Z","updated_at":"2018-02-13T20:28:13Z","closed_at":"2014-04-16T09:35:49Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":" [LUCENE-5553](https://issues.apache.org/jira/browse/LUCENE-5553) can prevent `ReaderClosedListener` from being called if the indexreader is closed and the shard was already closed or relocated. This has been fixed in Lucene 4.7.1 and will be part of the next bugfix release for the `1.1.x` series. We can't backport this to the `1.0.x` series since this branch is running on `LUCENE_46`\n\nThe problem with this bug is that we never release the fielddata or filters that are associated with the index reader that runs into this bug. If the index is moved away from a node the memory is free again as well as during shard cleanups so in production this might not be a huge issue. Yet, there are node level services like the circuit-breaker that relies on the `ReaderClosedListener` to be invoked to adjust memory which can report wrong memory consumptions for the rest of it's lifetime. \n","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}