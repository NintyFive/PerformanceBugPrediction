{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/69","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/69/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/69/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/69/events","html_url":"https://github.com/elastic/elasticsearch/issues/69","id":153682,"node_id":"MDU6SXNzdWUxNTM2ODI=","number":69,"title":"Search API: Support highlighting","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"labels":[{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":25452,"node_id":"MDU6TGFiZWwyNTQ1Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.06.0","name":"v0.06.0","color":"DDDDDD","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2010-03-18T14:02:49Z","updated_at":"2012-04-15T12:30:11Z","closed_at":"2010-03-18T14:05:35Z","author_association":"MEMBER","active_lock_reason":null,"body":"Allow to highlight search results on one or more fields. The implementation uses the lucene fast-vector-highlighter. The search request body:\n\n```\n{\n    query : {...},\n    highlight : {\n        fields : {\n            \"_all\" : {}\n        }\n    }\n}\n```\n\nIn the above case, the `_all` field will be highlighted for each search hit (there will be another element in each search each, called `highlight`, which includes the highlighted fields and the highlighted fragments). \n\nNote, in order to highlight, the field in question must be stored _and_ have termVector of `with_positions_offsets`. In the above case, the mapping should include:\n\n```\n{\n    typeName : {\n        allField : {store : \"yes\", termVector : \"with_positions_offsets\"}\n    }\n}\n```\n\nThe `_all` field can be an easy to use candidate for highlighting.\n\nBy default, the highlighting will wrap highlighted text in `<em>` and `</em>`. This can be controlled by setting `preTags` and `postTags`, for example:\n\n```\n{\n    query : {...},\n    highlight : {\n        preTags : [\"<tag1>\", \"<tag2>\"],\n        postTags : [\"</tag1>\", \"</tag2>\"]\n        fields : {\n            \"_all\" : {}\n        }\n    }\n}\n```\n\nThere can be a single tag or more, and the \"importance\" is ordered. There are also built in \"tag\" schemas, with currently a single schema called `styled` with preTags of:\n\n```\n<em class=\"hlt1\">, <em class=\"hlt2\">, <em class=\"hlt2\">,\n<em class=\"hlt3\">, <em class=\"hlt4\">, <em class=\"hlt5\">,\n<em class=\"hlt6\">, <em class=\"hlt7\">, <em class=\"hlt8\">,\n<em class=\"hlt9\">\n```\n\nAnd post tag of `</em>`. If you think of more nice to have built in tag schemas, just commend on this issue or post another issue to create it. Here is an example of switching tag schemas:\n\n```\n{\n    query : {...},\n    highlight : {\n        tagSchema : \"styled\",\n        fields : {\n            \"_all\" : {}\n        }\n    }\n}\n```\n\nEach field highlighted can control the size of the highlighted fragment in characters (defaults to 100), and the maximum number of fragments to return (defaults to 5). For example:\n\n```\n{\n    query : {...},\n    highlight : {\n        fields : {\n            \"_all\" : {fragmentSize : 150, numberOfFragments : 3}\n        }\n    }\n}\n```\n","closed_by":null,"performed_via_github_app":null}