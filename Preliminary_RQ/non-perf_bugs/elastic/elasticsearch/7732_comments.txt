[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/56361622","html_url":"https://github.com/elastic/elasticsearch/issues/7732#issuecomment-56361622","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7732","id":56361622,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MzYxNjIy","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2014-09-22T11:45:56Z","updated_at":"2014-09-22T11:45:56Z","author_association":"MEMBER","body":"+1\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/57177893","html_url":"https://github.com/elastic/elasticsearch/issues/7732#issuecomment-57177893","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7732","id":57177893,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MTc3ODkz","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-09-29T15:25:20Z","updated_at":"2014-09-29T15:25:20Z","author_association":"CONTRIBUTOR","body":"it would also remove the need for the dedicated `_timestamp` field\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/57298681","html_url":"https://github.com/elastic/elasticsearch/issues/7732#issuecomment-57298681","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7732","id":57298681,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Mjk4Njgx","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2014-09-30T11:18:31Z","updated_at":"2014-09-30T11:18:31Z","author_association":"MEMBER","body":"So I just had a look at how we might do this and thought of something relating to us doing dynamic null values for any type.\n\nThe null_value is obviously used for when there is no supplied value so adding a dynamic value to index is relatively straight forward in this respect. However, the null_value is also used in AbstractFieldMapper.nullValueFilter() to generate a filter for the MissingFilter and here is where the question arises.\n\nWe could say that if you set the null_value to be dynamic then the MissingFilter will essentially be a NoOP and not match any documents (since every document with a null value gets a dynamic value added and therefore doesn't have a missing value).\n\nThis could cause issues in a system where, for example, you set your null_value to 'NO VALUE' and some of your documents come in with the field set to null and some with the field set to 'NO VALUE' (e.g.  for different systems). At the moment we treat both these as the same in the MissingFilter (they will both have the null_value in the index and will be returned by the MissingFilter. But if we make the null_value dynamic then the 'NO VALUE' fields won't be returned by the filter add won't be dynamically given a value either.  I can see two options to solve this:\n- Keep null_value as is and add a new parameter for dynamic value setting with an option to replace anything matching null_value with the dynamic value.\n- Require that if you are using a dynamic null_value you ensure that all documents either have a valid value or null (i.e. we will neither replace things like 'NO VALUE' or return them from the MissingFilter)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/58273610","html_url":"https://github.com/elastic/elasticsearch/issues/7732#issuecomment-58273610","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7732","id":58273610,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjczNjEw","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2014-10-07T22:29:25Z","updated_at":"2014-10-07T22:29:25Z","author_association":"MEMBER","body":"Hmm, I agree..it conflates concerns and is confusing.  `null_value` is mainly used when people need to differentiate \"explicitly null\" from \"missing\".  Adding a default on top of that could lead to hairy situations as you described.\n\nHow about this:\n- If configured, `null_value` will replace explicit NULLs with the placeholder\n- If configured, `missing_value` will add missing fields to the document using the placeholder\n\nBoth `null_value` and `missing_value` can be configured for a static placeholder, or a dynamic value if the type makes sense (e.g. `now()` for dates)\n\nThat would allow everyone to specify exactly what they want with no surprises.  The two settings won't interact, since a field is either null or missing.\n\nIt does break the case where a field was originally \"missing\" but made \"not missing\" by usage of `missing_field`, but I think that will be desired behavior and not a bug, since the user is wanting to replace a missing field with a particular value.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/59231494","html_url":"https://github.com/elastic/elasticsearch/issues/7732#issuecomment-59231494","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7732","id":59231494,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MjMxNDk0","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-10-15T16:11:05Z","updated_at":"2014-10-15T16:11:05Z","author_association":"CONTRIBUTOR","body":"Another thing to consider - if we generate a value for a date field, should it alter the `_source` to include the generated timestamp?  I think probably not.  In which case the only way it would be retrievable would be to make the field stored.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/164586862","html_url":"https://github.com/elastic/elasticsearch/issues/7732#issuecomment-164586862","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7732","id":164586862,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NDU4Njg2Mg==","user":{"login":"bobbyhubbard","id":5067336,"node_id":"MDQ6VXNlcjUwNjczMzY=","avatar_url":"https://avatars1.githubusercontent.com/u/5067336?v=4","gravatar_id":"","url":"https://api.github.com/users/bobbyhubbard","html_url":"https://github.com/bobbyhubbard","followers_url":"https://api.github.com/users/bobbyhubbard/followers","following_url":"https://api.github.com/users/bobbyhubbard/following{/other_user}","gists_url":"https://api.github.com/users/bobbyhubbard/gists{/gist_id}","starred_url":"https://api.github.com/users/bobbyhubbard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bobbyhubbard/subscriptions","organizations_url":"https://api.github.com/users/bobbyhubbard/orgs","repos_url":"https://api.github.com/users/bobbyhubbard/repos","events_url":"https://api.github.com/users/bobbyhubbard/events{/privacy}","received_events_url":"https://api.github.com/users/bobbyhubbard/received_events","type":"User","site_admin":false},"created_at":"2015-12-14T22:57:12Z","updated_at":"2015-12-14T22:57:12Z","author_association":"NONE","body":"With `_timestamp` being deprecated this is a must have moving forward. We have usecases were we can't trust (or more likely dont have) the timestamp of the original document. We want the timestamp when ES last indexed it.\n\nMaybe instead of adding confusion to `null_value`, maybe you could add a new type? For example, a new type called `timestamp` would always default the current timestamp into a stored field outside of the `_source`\n\nThis would update the stored field whenever the document is indexed. Another possible usecase might be to insert the timestamp only the FIRST time the document is indexed...which means if its set, dont update it on subsequent updates of the document. No idea how to name that...maybe `timestamp_once`?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/164702300","html_url":"https://github.com/elastic/elasticsearch/issues/7732#issuecomment-164702300","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7732","id":164702300,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NDcwMjMwMA==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2015-12-15T09:39:44Z","updated_at":"2015-12-15T09:39:44Z","author_association":"MEMBER","body":"@bobbyhubbard I think the way forward is by using the ingest node (#14049) when it gets available.\n\nAdding a timestamp to a document would look like this:\n1) Setup a pipeline with a `set` processor that uses the ingest timestamp:\n\n```\nPUT _ingest/pipeline/1\n{\n  \"processors\" : [\n    {\n      \"set\" : {\n        \"your_timestamp_field\" : \"{{_ingest.timestamp}}\"\n      }\n    }\n  ]\n}\n```\n\n2) Make index/bulk requests use this pipeline:\n\n```\nPUT /index/type/id?pipeline_id=1\n{\n...\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/180393153","html_url":"https://github.com/elastic/elasticsearch/issues/7732#issuecomment-180393153","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7732","id":180393153,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MDM5MzE1Mw==","user":{"login":"PhaedrusTheGreek","id":4387023,"node_id":"MDQ6VXNlcjQzODcwMjM=","avatar_url":"https://avatars0.githubusercontent.com/u/4387023?v=4","gravatar_id":"","url":"https://api.github.com/users/PhaedrusTheGreek","html_url":"https://github.com/PhaedrusTheGreek","followers_url":"https://api.github.com/users/PhaedrusTheGreek/followers","following_url":"https://api.github.com/users/PhaedrusTheGreek/following{/other_user}","gists_url":"https://api.github.com/users/PhaedrusTheGreek/gists{/gist_id}","starred_url":"https://api.github.com/users/PhaedrusTheGreek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PhaedrusTheGreek/subscriptions","organizations_url":"https://api.github.com/users/PhaedrusTheGreek/orgs","repos_url":"https://api.github.com/users/PhaedrusTheGreek/repos","events_url":"https://api.github.com/users/PhaedrusTheGreek/events{/privacy}","received_events_url":"https://api.github.com/users/PhaedrusTheGreek/received_events","type":"User","site_admin":false},"created_at":"2016-02-05T15:06:11Z","updated_at":"2016-02-05T15:06:11Z","author_association":"CONTRIBUTOR","body":"+1\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/190375667","html_url":"https://github.com/elastic/elasticsearch/issues/7732#issuecomment-190375667","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7732","id":190375667,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MDM3NTY2Nw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-02-29T20:35:19Z","updated_at":"2016-02-29T20:35:19Z","author_association":"CONTRIBUTOR","body":"Closing in favour of #14049\n","performed_via_github_app":null}]