[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31230115","html_url":"https://github.com/elastic/elasticsearch/issues/4434#issuecomment-31230115","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4434","id":31230115,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMjMwMTE1","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2013-12-26T18:21:31Z","updated_at":"2013-12-26T18:21:31Z","author_association":"CONTRIBUTOR","body":"Any interest in this?  My primary use case would be some kind of allocation decider that slowly (but automatically) moves high traffic shards away from each other.  Would it be more useful if I bundled work on that into this?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/156389628","html_url":"https://github.com/elastic/elasticsearch/issues/4434#issuecomment-156389628","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4434","id":156389628,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NjM4OTYyOA==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2015-11-13T10:26:51Z","updated_at":"2015-11-13T10:26:51Z","author_association":"CONTRIBUTOR","body":"@nik9000 We were discussing this on FixItFriday - do you have an updated viewpoint?\n\nOur thoughts were that the allocation decider is currently pretty black or white in it's rule evaluation (this needs to be here because this rule says so). If I understand correctly this introduces shades of grey into the rule evaluation which starts to take us down the path of being less easily explainable as to why certain decisions were made. Given all the existing factors that go into the mix of allocation decisions it might be challenging to add this sort of fuzziness?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/156423151","html_url":"https://github.com/elastic/elasticsearch/issues/4434#issuecomment-156423151","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4434","id":156423151,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NjQyMzE1MQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2015-11-13T12:42:58Z","updated_at":"2015-11-13T12:42:58Z","author_association":"CONTRIBUTOR","body":"Ah, man, this one is ancient! At this point I imagine allocation deciders based on runtime conditions are too contentious.\n\nThis PR is so out of date its really only useful from an archaeological standpoint, but if I were to revive it I'd just try to get the weights calculated and fetch-able via `_cat` and friends. At that point it'd mostly be useful for detecting hotspots of various sorts.\n\nThe idea is that things like \"time spent searching\" and \"time spent indexing\" aren't particularly useful measures to _look_ at and make decisions about. But their derivative is. And we can get a decent estimate of it using load average style calculations quite cheaply. This is all stuff you can do in marvel with a derivative aggregation but that requires storing the data and having marvel, both of which make it not something elasticsearch can rely on having at all times.\n\nHere is what I'll do: I'll close this. If we ever want to do smart stuff based off of the relative activity on the shards we can use this as a reference point.\n","performed_via_github_app":null}]