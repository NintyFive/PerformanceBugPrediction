{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/61674","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61674/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61674/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/61674/events","html_url":"https://github.com/elastic/elasticsearch/issues/61674","id":688258634,"node_id":"MDU6SXNzdWU2ODgyNTg2MzQ=","number":61674,"title":"Ingest Node on_failure Condition Not Appending All Values to Field","user":{"login":"cataclysdom","id":41082256,"node_id":"MDQ6VXNlcjQxMDgyMjU2","avatar_url":"https://avatars0.githubusercontent.com/u/41082256?v=4","gravatar_id":"","url":"https://api.github.com/users/cataclysdom","html_url":"https://github.com/cataclysdom","followers_url":"https://api.github.com/users/cataclysdom/followers","following_url":"https://api.github.com/users/cataclysdom/following{/other_user}","gists_url":"https://api.github.com/users/cataclysdom/gists{/gist_id}","starred_url":"https://api.github.com/users/cataclysdom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cataclysdom/subscriptions","organizations_url":"https://api.github.com/users/cataclysdom/orgs","repos_url":"https://api.github.com/users/cataclysdom/repos","events_url":"https://api.github.com/users/cataclysdom/events{/privacy}","received_events_url":"https://api.github.com/users/cataclysdom/received_events","type":"User","site_admin":false},"labels":[{"id":268963484,"node_id":"MDU6TGFiZWwyNjg5NjM0ODQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Ingest","name":":Core/Features/Ingest","color":"0e8a16","default":false,"description":"Execution or management of Ingest Pipelines"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":1967496097,"node_id":"MDU6TGFiZWwxOTY3NDk2MDk3","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Core/Features","name":"Team:Core/Features","color":"fef2c0","default":false,"description":"Meta label for core/features team"},{"id":2040343033,"node_id":"MDU6TGFiZWwyMDQwMzQzMDMz","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v7.9.0","name":"v7.9.0","color":"dddddd","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-08-28T18:00:45Z","updated_at":"2020-11-09T12:02:35Z","closed_at":"2020-11-09T12:02:35Z","author_association":"NONE","active_lock_reason":null,"body":"`on_failure` conditions don't properly append the complete `_ingest.error.*` fields when defining `on_failure` conditions outside the scope of the `processors` context.  Explicitly defining an `on_failure` condition on individual processors does resolve this issue.  This was reproduced in elasticsearch-7.9.0.\r\n\r\nAssume a pipeline expects a UNIX timestamp followed by \"This is a sample message\".  To replicate this error, I'll add a period to the end which results in the pipeline failing.  This error should fail on both the `grok` and `date` processors.\r\n\r\n```\r\nPOST /_ingest/pipeline/_simulate\r\n{\r\n  \"pipeline\": {\r\n    \"processors\": [\r\n      {\r\n        \"grok\": {\r\n          \"field\": \"message\",\r\n          \"patterns\": [\r\n            \"^%{NUMBER:date} This is a sample message$\"\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        \"date\": {\r\n          \"field\": \"date\",\r\n          \"formats\": [\r\n            \"UNIX\"\r\n          ]\r\n        }\r\n      }\r\n    ],\r\n    \"on_failure\": [\r\n      {\r\n        \"append\": {\r\n          \"field\": \"_ingest.error.type\",\r\n          \"value\": \"{{ _ingest.on_failure_processor_type }}\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"docs\": [\r\n    {\r\n      \"_source\": {\r\n        \"message\": \"1598635722 This is a sample message.\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nThe result is a single value (the first) making it into `_ingest.error.type` but should include both failed processors.\r\n\r\n```json\r\n      \"doc\" : {\r\n        \"_index\" : \"_index\",\r\n        \"_type\" : \"_doc\",\r\n        \"_id\" : \"_id\",\r\n        \"_source\" : {\r\n          \"message\" : \"1598635722 This is a sample message.\"\r\n        },\r\n        \"_ingest\" : {\r\n          \"error\" : {\r\n            \"type\" : [\r\n              \"grok\"\r\n            ]\r\n          },\r\n          \"timestamp\" : \"2020-08-28T17:43:22.773307Z\"\r\n        }\r\n      }\r\n```\r\n<hr/>\r\n\r\nHowever, the intended result should be similar to moving the global `on_failiure` condition to each processor.\r\n\r\n```\r\nPOST /_ingest/pipeline/_simulate\r\n{\r\n  \"pipeline\": {\r\n    \"processors\": [\r\n      {\r\n        \"grok\": {\r\n          \"field\": \"message\",\r\n          \"patterns\": [\r\n            \"^%{NUMBER:date} This is a sample message$\"\r\n          ],\r\n          \"on_failure\": [\r\n            {\r\n              \"append\": {\r\n                \"field\": \"_ingest.error.type\",\r\n                \"value\": \"{{ _ingest.on_failure_processor_type }}\"\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        \"date\": {\r\n          \"field\": \"date\",\r\n          \"formats\": [\r\n            \"UNIX\"\r\n          ],\r\n          \"on_failure\": [\r\n            {\r\n              \"append\": {\r\n                \"field\": \"_ingest.error.type\",\r\n                \"value\": \"{{ _ingest.on_failure_processor_type }}\"\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"docs\": [\r\n    {\r\n      \"_source\": {\r\n        \"message\": \"1598635722 This is a sample message.\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nWhich results in both error conditions being properly appended to the `_ingest.error.type` field.\r\n\r\n```json\r\n      \"doc\" : {\r\n        \"_index\" : \"_index\",\r\n        \"_type\" : \"_doc\",\r\n        \"_id\" : \"_id\",\r\n        \"_source\" : {\r\n          \"message\" : \"1598635722 This is a sample message.\"\r\n        },\r\n        \"_ingest\" : {\r\n          \"error\" : {\r\n            \"type\" : [\r\n              \"grok\",\r\n              \"date\"\r\n            ]\r\n          },\r\n          \"timestamp\" : \"2020-08-28T17:47:48.669741Z\"\r\n        }\r\n      }\r\n```","closed_by":{"login":"probakowski","id":3896475,"node_id":"MDQ6VXNlcjM4OTY0NzU=","avatar_url":"https://avatars1.githubusercontent.com/u/3896475?v=4","gravatar_id":"","url":"https://api.github.com/users/probakowski","html_url":"https://github.com/probakowski","followers_url":"https://api.github.com/users/probakowski/followers","following_url":"https://api.github.com/users/probakowski/following{/other_user}","gists_url":"https://api.github.com/users/probakowski/gists{/gist_id}","starred_url":"https://api.github.com/users/probakowski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/probakowski/subscriptions","organizations_url":"https://api.github.com/users/probakowski/orgs","repos_url":"https://api.github.com/users/probakowski/repos","events_url":"https://api.github.com/users/probakowski/events{/privacy}","received_events_url":"https://api.github.com/users/probakowski/received_events","type":"User","site_admin":false},"performed_via_github_app":null}