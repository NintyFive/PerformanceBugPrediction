{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/32369","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32369/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32369/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32369/events","html_url":"https://github.com/elastic/elasticsearch/issues/32369","id":344514650,"node_id":"MDU6SXNzdWUzNDQ1MTQ2NTA=","number":32369,"title":"[CI] RangeFieldMapperTests failed due to unterminated threads","user":{"login":"dimitris-athanasiou","id":9351617,"node_id":"MDQ6VXNlcjkzNTE2MTc=","avatar_url":"https://avatars3.githubusercontent.com/u/9351617?v=4","gravatar_id":"","url":"https://api.github.com/users/dimitris-athanasiou","html_url":"https://github.com/dimitris-athanasiou","followers_url":"https://api.github.com/users/dimitris-athanasiou/followers","following_url":"https://api.github.com/users/dimitris-athanasiou/following{/other_user}","gists_url":"https://api.github.com/users/dimitris-athanasiou/gists{/gist_id}","starred_url":"https://api.github.com/users/dimitris-athanasiou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dimitris-athanasiou/subscriptions","organizations_url":"https://api.github.com/users/dimitris-athanasiou/orgs","repos_url":"https://api.github.com/users/dimitris-athanasiou/repos","events_url":"https://api.github.com/users/dimitris-athanasiou/events{/privacy}","received_events_url":"https://api.github.com/users/dimitris-athanasiou/received_events","type":"User","site_admin":false},"labels":[{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"},{"id":1223177445,"node_id":"MDU6TGFiZWwxMjIzMTc3NDQ1","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v7.0.0-beta1","name":"v7.0.0-beta1","color":"dddddd","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-07-25T16:20:33Z","updated_at":"2019-02-07T10:11:54Z","closed_at":"2018-08-03T09:02:18Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Build link: https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+master+intake/2401/console\r\n\r\nFailure:\r\n\r\n```\r\nERROR   0.00s J1 | RangeFieldMapperTests (suite) <<< FAILURES!\r\n14:49:19    > Throwable #1: com.carrotsearch.randomizedtesting.ThreadLeakError: 2 threads leaked from SUITE scope at org.elasticsearch.index.mapper.RangeFieldMapperTests: \r\n14:49:19    >    1) Thread[id=1553, name=elasticsearch[node_s_0][__mock_network_thread][T#2], state=RUNNABLE, group=TGRP-RangeFieldMapperTests]\r\n14:49:19    >         at java.net.PlainSocketImpl.socketAccept(Native Method)\r\n14:49:19    >         at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)\r\n14:49:19    >         at java.net.ServerSocket.implAccept(ServerSocket.java:545)\r\n14:49:19    >         at java.net.ServerSocket.accept(ServerSocket.java:513)\r\n14:49:19    >         at org.elasticsearch.mocksocket.MockServerSocket.access$101(MockServerSocket.java:32)\r\n14:49:19    >         at org.elasticsearch.mocksocket.MockServerSocket.lambda$accept$0(MockServerSocket.java:53)\r\n14:49:19    >         at org.elasticsearch.mocksocket.MockServerSocket$$Lambda$1737/460128403.run(Unknown Source)\r\n14:49:19    >         at java.security.AccessController.doPrivileged(Native Method)\r\n14:49:19    >         at org.elasticsearch.mocksocket.MockServerSocket.accept(MockServerSocket.java:53)\r\n14:49:19    >         at org.elasticsearch.transport.MockTcpTransport$MockChannel.accept(MockTcpTransport.java:273)\r\n14:49:19    >         at org.elasticsearch.transport.MockTcpTransport$1.doRun(MockTcpTransport.java:128)\r\n14:49:19    >         at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n14:49:19    >         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n14:49:19    >         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n14:49:19    >         at java.lang.Thread.run(Thread.java:748)\r\n14:49:19    >    2) Thread[id=1552, name=elasticsearch[node_s_0][__mock_network_thread][T#1], state=RUNNABLE, group=TGRP-RangeFieldMapperTests]\r\n14:49:19    >         at java.net.PlainSocketImpl.socketAccept(Native Method)\r\n14:49:19    >         at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)\r\n14:49:19    >         at java.net.ServerSocket.implAccept(ServerSocket.java:545)\r\n14:49:19    >         at java.net.ServerSocket.accept(ServerSocket.java:513)\r\n14:49:19    >         at org.elasticsearch.mocksocket.MockServerSocket.access$101(MockServerSocket.java:32)\r\n14:49:19    >         at org.elasticsearch.mocksocket.MockServerSocket.lambda$accept$0(MockServerSocket.java:53)\r\n14:49:19    >         at org.elasticsearch.mocksocket.MockServerSocket$$Lambda$1737/460128403.run(Unknown Source)\r\n14:49:19    >         at java.security.AccessController.doPrivileged(Native Method)\r\n14:49:19    >         at org.elasticsearch.mocksocket.MockServerSocket.accept(MockServerSocket.java:53)\r\n14:49:19    >         at org.elasticsearch.transport.MockTcpTransport$MockChannel.accept(MockTcpTransport.java:273)\r\n14:49:19    >         at org.elasticsearch.transport.MockTcpTransport$1.doRun(MockTcpTransport.java:128)\r\n14:49:19    >         at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n14:49:19    >         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n14:49:19    >         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n14:49:19    >         at java.lang.Thread.run(Thread.java:748)\r\n14:49:19    > \tat __randomizedtesting.SeedInfo.seed([52D6EBFEF1E0C47A]:0)Throwable #2: com.carrotsearch.randomizedtesting.ThreadLeakError: There are still zombie threads that couldn't be terminated:\r\n14:49:19    >    1) Thread[id=1553, name=elasticsearch[node_s_0][__mock_network_thread][T#2], state=RUNNABLE, group=TGRP-RangeFieldMapperTests]\r\n14:49:19    >         at java.net.PlainSocketImpl.socketAccept(Native Method)\r\n14:49:19    >         at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)\r\n14:49:19    >         at java.net.ServerSocket.implAccept(ServerSocket.java:545)\r\n14:49:19    >         at java.net.ServerSocket.accept(ServerSocket.java:513)\r\n14:49:19    >         at org.elasticsearch.mocksocket.MockServerSocket.access$101(MockServerSocket.java:32)\r\n14:49:19    >         at org.elasticsearch.mocksocket.MockServerSocket.lambda$accept$0(MockServerSocket.java:53)\r\n14:49:19    >         at org.elasticsearch.mocksocket.MockServerSocket$$Lambda$1737/460128403.run(Unknown Source)\r\n14:49:19    >         at java.security.AccessController.doPrivileged(Native Method)\r\n14:49:19    >         at org.elasticsearch.mocksocket.MockServerSocket.accept(MockServerSocket.java:53)\r\n14:49:19    >         at org.elasticsearch.transport.MockTcpTransport$MockChannel.accept(MockTcpTransport.java:273)\r\n14:49:19    >         at org.elasticsearch.transport.MockTcpTransport$1.doRun(MockTcpTransport.java:128)\r\n14:49:19    >         at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n14:49:19    >         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n14:49:19    >         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n14:49:19    >         at java.lang.Thread.run(Thread.java:748)\r\n14:49:19    >    2) Thread[id=1552, name=elasticsearch[node_s_0][__mock_network_thread][T#1], state=RUNNABLE, group=TGRP-RangeFieldMapperTests]\r\n14:49:19    >         at java.net.PlainSocketImpl.socketAccept(Native Method)\r\n14:49:19    >         at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)\r\n14:49:19    >         at java.net.ServerSocket.implAccept(ServerSocket.java:545)\r\n14:49:19    >         at java.net.ServerSocket.accept(ServerSocket.java:513)\r\n14:49:19    >         at org.elasticsearch.mocksocket.MockServerSocket.access$101(MockServerSocket.java:32)\r\n14:49:19    >         at org.elasticsearch.mocksocket.MockServerSocket.lambda$accept$0(MockServerSocket.java:53)\r\n14:49:19    >         at org.elasticsearch.mocksocket.MockServerSocket$$Lambda$1737/460128403.run(Unknown Source)\r\n14:49:19    >         at java.security.AccessController.doPrivileged(Native Method)\r\n14:49:19    >         at org.elasticsearch.mocksocket.MockServerSocket.accept(MockServerSocket.java:53)\r\n14:49:19    >         at org.elasticsearch.transport.MockTcpTransport$MockChannel.accept(MockTcpTransport.java:273)\r\n14:49:19    >         at org.elasticsearch.transport.MockTcpTransport$1.doRun(MockTcpTransport.java:128)\r\n14:49:19    >         at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n14:49:19    >         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n14:49:19    >         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n14:49:19    >         at java.lang.Thread.run(Thread.java:748)\r\n14:49:19    > \tat __randomizedtesting.SeedInfo.seed([52D6EBFEF1E0C47A]:0)\r\n14:49:19 Completed [780/1115] on J1 in 28.53s, 11 tests, 2 errors <<< FAILURES!\r\n```\r\n\r\nReproduce with:\r\n\r\n```\r\n./gradlew :server:test -Dtests.seed=52D6EBFEF1E0C47A -Dtests.class=org.elasticsearch.index.mapper.RangeFieldMapperTests -Dtests.security.manager=true -Dtests.locale=en-US -Dtests.timezone=Etc/UTC\r\n```\r\n\r\nDoes not reproduce locally for me.","closed_by":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"performed_via_github_app":null}