{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/34679","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34679/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34679/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34679/events","html_url":"https://github.com/elastic/elasticsearch/issues/34679","id":372322922,"node_id":"MDU6SXNzdWUzNzIzMjI5MjI=","number":34679,"title":"[Painless] custom LM relevance equation not possible in Similarity context without acess to query terms","user":{"login":"lemontheme","id":15968876,"node_id":"MDQ6VXNlcjE1OTY4ODc2","avatar_url":"https://avatars3.githubusercontent.com/u/15968876?v=4","gravatar_id":"","url":"https://api.github.com/users/lemontheme","html_url":"https://github.com/lemontheme","followers_url":"https://api.github.com/users/lemontheme/followers","following_url":"https://api.github.com/users/lemontheme/following{/other_user}","gists_url":"https://api.github.com/users/lemontheme/gists{/gist_id}","starred_url":"https://api.github.com/users/lemontheme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lemontheme/subscriptions","organizations_url":"https://api.github.com/users/lemontheme/orgs","repos_url":"https://api.github.com/users/lemontheme/repos","events_url":"https://api.github.com/users/lemontheme/events{/privacy}","received_events_url":"https://api.github.com/users/lemontheme/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-10-21T14:53:38Z","updated_at":"2018-10-23T09:16:14Z","closed_at":"2018-10-23T08:16:15Z","author_association":"NONE","active_lock_reason":null,"body":"<!-- Feature request -->\r\nHi,\r\n\r\nI'm trying to gauge whether elasticsearch is a good fit for future projects by taking a deep dive into the Painless API. We're an NLP shop with tight deadlines. The prospect of being able to write custom similarity functions *without* having to create a full-blown Java plugin is prettttty interesting.\r\n\r\nSo, one of the things I'm looking into is whether it's possible to implement a custom [language model](https://www.elastic.co/blog/language-models-in-elasticsearch)-based Similarity. For example: a similarity that defines relevance in terms of the Kulback-Leibler divergence between a document generation and a [query generation](https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules-similarity.html#lm_jelinek_mercer) model. In order to do this though, I need access to the terms that occur in the query, something which the Painless API currently does not provide for in the [Similarity context](https://www.elastic.co/guide/en/elasticsearch/painless/current/painless-similarity-context.html#painless-similarity-context), or in any context, for that matter. In fact, I can't really see how 'Scriped Similarities' (as demonstrated [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules-similarity.html#scripted_similarity)) allow for much more than writing variations on the TF-IDF weighting scheme.\r\n\r\nUnless I'm missing something (please tell me if I am; I would realllly like to be able to use elasticsearch) â€“ would it be possible to open up access to the `query` variable in the Similarity context?\r\n\r\nApologies in advance if it's unclear what I'm asking for. What it comes down to, I suppose, is that Scripted Similarities don't really feel like first-class relevance functions at the moment. Their scope seems to be the individual terms in the term vector, which is pretty restrictive.","closed_by":{"login":"alpar-t","id":2565652,"node_id":"MDQ6VXNlcjI1NjU2NTI=","avatar_url":"https://avatars1.githubusercontent.com/u/2565652?v=4","gravatar_id":"","url":"https://api.github.com/users/alpar-t","html_url":"https://github.com/alpar-t","followers_url":"https://api.github.com/users/alpar-t/followers","following_url":"https://api.github.com/users/alpar-t/following{/other_user}","gists_url":"https://api.github.com/users/alpar-t/gists{/gist_id}","starred_url":"https://api.github.com/users/alpar-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpar-t/subscriptions","organizations_url":"https://api.github.com/users/alpar-t/orgs","repos_url":"https://api.github.com/users/alpar-t/repos","events_url":"https://api.github.com/users/alpar-t/events{/privacy}","received_events_url":"https://api.github.com/users/alpar-t/received_events","type":"User","site_admin":false},"performed_via_github_app":null}