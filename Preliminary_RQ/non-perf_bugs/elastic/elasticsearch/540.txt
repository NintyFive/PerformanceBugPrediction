{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/540","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/540/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/540/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/540/events","html_url":"https://github.com/elastic/elasticsearch/issues/540","id":440401,"node_id":"MDU6SXNzdWU0NDA0MDE=","number":540,"title":"Index Templates","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"labels":[{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":58413,"node_id":"MDU6TGFiZWw1ODQxMw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.14.0","name":"v0.14.0","color":"DDDDDD","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2010-11-26T13:44:27Z","updated_at":"2010-11-26T13:45:39Z","closed_at":"2010-11-26T13:45:39Z","author_association":"MEMBER","active_lock_reason":null,"body":"Index templates allows to define templates that will automatically be applied to indices created. The templates include both settings and mappings, and a simple pattern template that controls if the template will be applied to the index created. For example:\n\n```\ncurl -XPUT localhost:9200/_template/template_1 -d '\n{\n    \"template\" : \"te*\",\n    \"settings\" : {\n        \"number_of_shards\" : 1\n    },\n    \"mappings\" : {\n        \"type1\" : {\n            \"_source\" : { \"enabled\" : false }\n        }\n    }\n}\n'\n```\n\nDefines a template named `template_1`, with a template pattern of `te*`. The settings and mappings will be applied to any index name that matches the `te*` template.\n## Removing an Index Template\n\nIndex templates are identified by a name (in the above case `template_1`) and can be delete as well:\n\n```\ncurl -XDELETE localhost:9200/_template/template_1\n```\n## Getting an Index Template\n\nGetting a specific index template can be done using (for example):\n\n```\ncurl -XGET localhost:9200/_template/template_1\n```\n## Multiple Templates Matching\n\nMultiple index templates can potentially match an index, in this case, both the settings and mappings are merged into the final configuration of the index. The order of the merging can be controlled using the `order` parameter, with lower `order` being applied first, and higher orders overriding them. For example:\n\n```\ncurl -XPUT localhost:9200/_template/template_1 -d '\n{\n    \"template\" : \"*\",\n    \"order\" : 0\n    \"settings\" : {\n        \"number_of_shards\" : 1\n    },\n    \"mappings\" : {\n        \"type1\" : {\n            \"_source\" : { \"enabled\" : false }\n        }\n    }\n}\n'\n\ncurl -XPUT localhost:9200/_template/template_2 -d '\n{\n    \"template\" : \"te*\",\n    \"order\" : 1\n    \"settings\" : {\n        \"number_of_shards\" : 1\n    },\n    \"mappings\" : {\n        \"type1\" : {\n            \"_source\" : { \"enabled\" : true }\n        }\n    }\n}\n'\n```\n\nThe above will disable storing the `_source` on all `type1` types, but for indices of that start with `te*`, source will still be enabled. Note, for mappings, the merging is \"deep\", meaning that specific object/property based mappings can easily be added/overridden on higher order templates, with lower order templates providing the basis.\n\nNote, when creating an index, settings can be specified as well. Those will be merged as well, replacing template settings. In the future, mappings will also be allowed to be defined on index creation for the REST API.\n","closed_by":null,"performed_via_github_app":null}