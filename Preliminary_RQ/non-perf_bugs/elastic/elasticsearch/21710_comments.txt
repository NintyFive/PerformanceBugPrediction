[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262253577","html_url":"https://github.com/elastic/elasticsearch/issues/21710#issuecomment-262253577","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21710","id":262253577,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MjI1MzU3Nw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-11-22T14:24:55Z","updated_at":"2016-11-22T14:24:55Z","author_association":"CONTRIBUTOR","body":"The bug is that we don't throw an exception when specifying `include_in_all` on sub-fields:\r\n\r\n```\r\nPUT t\r\n{\r\n  \"mappings\": {\r\n    \"t\": {\r\n      \"properties\": {\r\n        \"foo\": {\r\n          \"type\": \"string\",\r\n          \"fields\": {\r\n            \"bar\": {\r\n              \"type\": \"string\",\r\n              \"include_in_all\": false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n@Mates1500 The value of each main field (not sub field) is copied to the `_all` field as a string, and the `_all` field applies its own analyzer.  Those fields are being included in all because don't specify `include_in_all` on the main fields.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262487891","html_url":"https://github.com/elastic/elasticsearch/issues/21710#issuecomment-262487891","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21710","id":262487891,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MjQ4Nzg5MQ==","user":{"login":"Mates1500","id":732314,"node_id":"MDQ6VXNlcjczMjMxNA==","avatar_url":"https://avatars2.githubusercontent.com/u/732314?v=4","gravatar_id":"","url":"https://api.github.com/users/Mates1500","html_url":"https://github.com/Mates1500","followers_url":"https://api.github.com/users/Mates1500/followers","following_url":"https://api.github.com/users/Mates1500/following{/other_user}","gists_url":"https://api.github.com/users/Mates1500/gists{/gist_id}","starred_url":"https://api.github.com/users/Mates1500/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mates1500/subscriptions","organizations_url":"https://api.github.com/users/Mates1500/orgs","repos_url":"https://api.github.com/users/Mates1500/repos","events_url":"https://api.github.com/users/Mates1500/events{/privacy}","received_events_url":"https://api.github.com/users/Mates1500/received_events","type":"User","site_admin":false},"created_at":"2016-11-23T11:16:38Z","updated_at":"2016-11-23T11:22:25Z","author_association":"NONE","body":"> The value of each main field (not sub field) is copied to the _all field as a string, and the _all field applies its own analyzer. Those fields are being included in all because don't specify include_in_all on the main fields.\r\n\r\nSo is it possible to somehow **include the main field** in `_all`, **but not the sub field**? It does not necessarily have to be set in the mapping, perhaps it could be specified in the query?\r\n\r\nI've been reading through the documentation for a long time but couldn't find anything useful for my specific case: \r\nI'm searching through a lot of types, each with about a dozen properties, so specifying every single property in the query would really be a pain. The sub fields are there for the client front-end for language analysis, but they're pointless in the admin front-end where I'm just trying to search through everything _precisely_, without the language analyzers transforming the entire thing around.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262504107","html_url":"https://github.com/elastic/elasticsearch/issues/21710#issuecomment-262504107","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21710","id":262504107,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MjUwNDEwNw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-11-23T12:47:08Z","updated_at":"2016-11-23T12:47:08Z","author_association":"CONTRIBUTOR","body":"> So is it possible to somehow include the main field in _all, but not the sub field? \r\n\r\nIt's the main field's string value which is included in all, not the tokens.  (The string value is the same for sub-fields, so there is no point in including it twice).  The _all field takes these string values and analyses them using the `standard` analyzer by default - this can be changed.  Or alternatively you can use `copy_to` to copy the fields you're interested in to a custom field with its own analyzer.\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262540613","html_url":"https://github.com/elastic/elasticsearch/issues/21710#issuecomment-262540613","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21710","id":262540613,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MjU0MDYxMw==","user":{"login":"Mates1500","id":732314,"node_id":"MDQ6VXNlcjczMjMxNA==","avatar_url":"https://avatars2.githubusercontent.com/u/732314?v=4","gravatar_id":"","url":"https://api.github.com/users/Mates1500","html_url":"https://github.com/Mates1500","followers_url":"https://api.github.com/users/Mates1500/followers","following_url":"https://api.github.com/users/Mates1500/following{/other_user}","gists_url":"https://api.github.com/users/Mates1500/gists{/gist_id}","starred_url":"https://api.github.com/users/Mates1500/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mates1500/subscriptions","organizations_url":"https://api.github.com/users/Mates1500/orgs","repos_url":"https://api.github.com/users/Mates1500/repos","events_url":"https://api.github.com/users/Mates1500/events{/privacy}","received_events_url":"https://api.github.com/users/Mates1500/received_events","type":"User","site_admin":false},"created_at":"2016-11-23T15:10:42Z","updated_at":"2016-11-23T15:10:42Z","author_association":"NONE","body":"@clintongormley Yeah, you're right, I just found out that my web app has been using the client (nonadmin) service the whole time due to a routing bug in the framework, therefore I was still seeing the language analyzed subfields.\r\nThough, in the end it's still good that this bug has been discovered. :+1: ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262757039","html_url":"https://github.com/elastic/elasticsearch/issues/21710#issuecomment-262757039","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21710","id":262757039,"node_id":"MDEyOklzc3VlQ29tbWVudDI2Mjc1NzAzOQ==","user":{"login":"makeyang","id":13898618,"node_id":"MDQ6VXNlcjEzODk4NjE4","avatar_url":"https://avatars2.githubusercontent.com/u/13898618?v=4","gravatar_id":"","url":"https://api.github.com/users/makeyang","html_url":"https://github.com/makeyang","followers_url":"https://api.github.com/users/makeyang/followers","following_url":"https://api.github.com/users/makeyang/following{/other_user}","gists_url":"https://api.github.com/users/makeyang/gists{/gist_id}","starred_url":"https://api.github.com/users/makeyang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/makeyang/subscriptions","organizations_url":"https://api.github.com/users/makeyang/orgs","repos_url":"https://api.github.com/users/makeyang/repos","events_url":"https://api.github.com/users/makeyang/events{/privacy}","received_events_url":"https://api.github.com/users/makeyang/received_events","type":"User","site_admin":false},"created_at":"2016-11-24T11:41:06Z","updated_at":"2016-11-24T11:41:06Z","author_association":"CONTRIBUTOR","body":"@clintongormley  I'd like pull request to fix it. but I got stucked in another pull. can you help to review & merge my pull so I can pull this one?","performed_via_github_app":null}]