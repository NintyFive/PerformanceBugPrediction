[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/391749294","html_url":"https://github.com/elastic/elasticsearch/issues/30841#issuecomment-391749294","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30841","id":391749294,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MTc0OTI5NA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-05-24T15:06:54Z","updated_at":"2018-05-24T15:06:54Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/392481555","html_url":"https://github.com/elastic/elasticsearch/issues/30841#issuecomment-392481555","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30841","id":392481555,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MjQ4MTU1NQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2018-05-28T10:01:06Z","updated_at":"2018-05-28T10:01:06Z","author_association":"CONTRIBUTOR","body":"> Ideally until and unless a nested sub-aggregate overrides the filter the parent nested filter should be honoured despite the introduction of reverse nesting instead of the same filter being repeated in each of the nested sub-aggregate instance.\r\n\r\nI think we are on the same page, but to clarify, the filter is not ignored, the use of `reverse_nested` then `nested` again just changes its meaning. Instead of meaning \"all documents that match X\", it means \"all documents whose parent has a nested document that matches X\" where `X` is the filter that you decided to apply to your nested documents.\r\n\r\nWe might be able to apply your suggestion, but then some aggregations that can be run today couldn't be run anymore. Let's image an index that contains movies and actors as nested documents. Now we want to aggregate all actors that played in a movie with John Wayne. We need to go to the actor documents to filter on \"John Wayne\" then go back to the movies and forth to actors to find other actors from the same movie. But if the second nested aggregation had applied the same filter, then we would only see \"John Wayne\" even though the actors we are interested in are the other ones.\r\n\r\nI also like to keep the behavior of aggregations independent of each other, so I'd be a bit on the fence to implicitly apply filters because they were applied on a parent aggregation on the same nested path.\r\n\r\nNote that since nested and reverse nested aggregations have some overhead, it's also useful to think about whether denormalization can help. For instance in the example from the discuss link, repeating `rootName` on all elements in the second nesting level would help simplify the aggregation by removing the need to use a `reverse_nested` aggregation to aggregate on a property of a parent document. So it wouldn't be necessary to repeat the filter anymore and the aggregation would likely run significantly faster.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/648939129","html_url":"https://github.com/elastic/elasticsearch/issues/30841#issuecomment-648939129","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30841","id":648939129,"node_id":"MDEyOklzc3VlQ29tbWVudDY0ODkzOTEyOQ==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2020-06-24T16:52:10Z","updated_at":"2020-06-24T16:52:10Z","author_association":"MEMBER","body":"Based on @jpountz comment this is not something that we are planning to implement in the near future. Should we close it? ","performed_via_github_app":null}]