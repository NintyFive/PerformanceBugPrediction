[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/101753157","html_url":"https://github.com/elastic/elasticsearch/issues/11148#issuecomment-101753157","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11148","id":101753157,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMTc1MzE1Nw==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2015-05-13T17:28:51Z","updated_at":"2015-05-13T17:28:51Z","author_association":"MEMBER","body":"I think we can keep the immutability property by creating a new snapshot from pieces of existing snapshots, so instead of move/copy you can have functionally equivalent partial merge. However, currently a snapshot represents a point in time state of a cluster (or part of a cluster) at the moment the snapshot was created. It's nice property to have for several reasons. The most important reason is knowing the version of the cluster that wrote the snapshot and therefore being able to make different discussions based on this version. Slicing and gluing pieces of different snapshots together removes this property and makes handling older versions of the snapshots more complicated. So, considering the additional complexity that this feature will introduce I am not sure if the use case of restoring data from two snapshots at the same time is worth it. @ywelsch-t, could you elaborate a bit more on the benefits of combining two separate snapshots into one comparing to restoring them one after another. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103006711","html_url":"https://github.com/elastic/elasticsearch/issues/11148#issuecomment-103006711","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11148","id":103006711,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzAwNjcxMQ==","user":{"login":"ywelsch-t","id":8446609,"node_id":"MDQ6VXNlcjg0NDY2MDk=","avatar_url":"https://avatars0.githubusercontent.com/u/8446609?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch-t","html_url":"https://github.com/ywelsch-t","followers_url":"https://api.github.com/users/ywelsch-t/followers","following_url":"https://api.github.com/users/ywelsch-t/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch-t/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch-t/subscriptions","organizations_url":"https://api.github.com/users/ywelsch-t/orgs","repos_url":"https://api.github.com/users/ywelsch-t/repos","events_url":"https://api.github.com/users/ywelsch-t/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch-t/received_events","type":"User","site_admin":false},"created_at":"2015-05-18T10:10:54Z","updated_at":"2015-05-18T10:10:54Z","author_association":"NONE","body":"Let me try and explain some more. The setting we have is backing up data using the Hadoop HDFS Snapshot/Restore plugin. Source of the backup is a large ES cluster (> 500 nodes) with lots of data and destination is an HDFS cluster (many nodes as well).\n\nThe tricky part is finding the right amount of throughput between the ES cluster and the HDFS cluster such that\n- our indices that we want to backup / restore are transfered as fast as possible but\n- without impacting the performance of the cluster too much (i.e. saturating the shared network for regular ES communication).\n\nThe HDFS cluster is specifically set up to store ES backups and has no resource limitations.\n\nCurrently, the only way to control speed and concurrency with ES is using three parameters:\n- max_snapshot_bytes_per_sec / max_restore_bytes_per_sec which trottles the bandwidth per node.\n- The parameter concurrent_streams for the HDFS plugin determines the amount of parallel transfers of low-level files (e.g. Lucene segments) per node.\n- Amount of nodes participating in the snapshot / restore process. This cannot be directly selected but is determined \n  - by the number of shards that are part of the snapshot and\n  - by the distribution of shards in the cluster (i.e. allocation to node)\n\nA limitation which we face is that multiple snapshots / restore actions cannot run concurrently.\n\nThis means that:\n- To reach a certain throughput, we must snapshot / restore as many shards as possible in parallel.\n- To not oversaturate our network, we cannot have too many nodes (and hence shards) as part of the backup action. This means that only max. 10% of the nodes in our cluster should be involved at the same time in backup operations.\n\nOur solution is thus to backup batches of similarly sized indices (and hence shards) to have constant throughput.\n\nIn conclusion, our snapshots are sized based on transfer capabilites and network concerns.\n\nHowever, this leads to the following conflicts if a snapshot can only be manipulated / deleted in its whole:\n1) Some indices (in a snapshot) have different life spans than others. The operation \"Delete index from snapshot\" is useful in that case to \"clean up\" older snapshots. Deleting some of the indices in a snapshot also does not violate the property that a snapshot represents a point in time of a cluster (or part of a cluster) at the moment the snapshot was created.\n\n2) In case of an emergency restore, we want to restore as fast as possible (i.e. fully saturate the network). Additionally, we need to prioritize the restore process of the most relevant indices. With the possibility to create a new snapshot based on the contents of other snapshots (or to merge snapshots), we can selectively pick the indices from different snapshots that we want to restore, create fake snapshots based on them and restore the fake snapshots in custom order.\n\nWe have patched ES with an implementation to create fake snapshots based on the contents of other snapshots and to delete parts of a snapshot. We believe this fine-granular snapshot manipulation gives us the flexibility for more customized backup strategies.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103188092","html_url":"https://github.com/elastic/elasticsearch/issues/11148#issuecomment-103188092","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11148","id":103188092,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzE4ODA5Mg==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2015-05-18T19:44:16Z","updated_at":"2015-05-18T19:44:16Z","author_association":"MEMBER","body":"@ywelsch-t this is a great explanation. Thank you! So, if we assume for a moment that besides node-level throttling you have a cluster-level (or better to say repository-level) throttling for both snapshot and restore operations, would it make this feature unnecessary? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103509258","html_url":"https://github.com/elastic/elasticsearch/issues/11148#issuecomment-103509258","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11148","id":103509258,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzUwOTI1OA==","user":{"login":"ywelsch-t","id":8446609,"node_id":"MDQ6VXNlcjg0NDY2MDk=","avatar_url":"https://avatars0.githubusercontent.com/u/8446609?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch-t","html_url":"https://github.com/ywelsch-t","followers_url":"https://api.github.com/users/ywelsch-t/followers","following_url":"https://api.github.com/users/ywelsch-t/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch-t/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch-t/subscriptions","organizations_url":"https://api.github.com/users/ywelsch-t/orgs","repos_url":"https://api.github.com/users/ywelsch-t/repos","events_url":"https://api.github.com/users/ywelsch-t/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch-t/received_events","type":"User","site_admin":false},"created_at":"2015-05-19T14:05:12Z","updated_at":"2015-05-19T14:05:12Z","author_association":"NONE","body":"Repository-level throttling is only part of the solution. It solves the issue of snapshot transfer impacting the overall performance of the cluster too much (i.e. saturating the shared network for regular ES communication).\n\nTwo issues I have described in the previous comment are remaining, however.\n1. To reach a certain throughput, we must snapshot / restore multiple indices in parallel.\n   - For backups, this means that we may have to combine different indices into a single snapshot although they have different lifetimes.\n   - For restores, this means that we have to combine the restore of indices in different snapshots.\n2. Prioritization. This is particularly important for restore operations (see point 2 of previous post).\n\nFor SNAPSHOT operations, I see three solutions:\na) allow concurrent snapshots (of disjoint indices sets). We then group indices by lifetimes / prioritization and do concurrent backups.\nb) give possibility to dissect snapshot after the backup. The initial snapshot is then only a means of concurrent transfer. If lifetime expires, we delete the \"expired\" indices from the snapshot. For that we need an operation \"delete index from snapshot\" (which, as previously said, does not conflict with the original intent of snapshots). Advantage is that lifetime of certain indices in the backup can be controlled not only before but also after snapshotting.\nc) allow both a) and b). My preferred solution.\n\nFor RESTORE operations, I see two solutions:\na) allow concurrent snapshot restores (of disjoint indices sets). My preferred solution.\nb) give possibility to combine snapshots before the restore. This is a poor substitute for a).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103612197","html_url":"https://github.com/elastic/elasticsearch/issues/11148#issuecomment-103612197","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11148","id":103612197,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzYxMjE5Nw==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2015-05-19T17:46:33Z","updated_at":"2015-05-19T17:46:33Z","author_association":"MEMBER","body":"@ywelsch-t ok, so if we will enable concurrent snapshots of non-intersecting sets of indices into different repositories and concurrent restore plus repository-level throttling, will it completely solve the issue?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103815265","html_url":"https://github.com/elastic/elasticsearch/issues/11148#issuecomment-103815265","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11148","id":103815265,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzgxNTI2NQ==","user":{"login":"ywelsch-t","id":8446609,"node_id":"MDQ6VXNlcjg0NDY2MDk=","avatar_url":"https://avatars0.githubusercontent.com/u/8446609?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch-t","html_url":"https://github.com/ywelsch-t","followers_url":"https://api.github.com/users/ywelsch-t/followers","following_url":"https://api.github.com/users/ywelsch-t/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch-t/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch-t/subscriptions","organizations_url":"https://api.github.com/users/ywelsch-t/orgs","repos_url":"https://api.github.com/users/ywelsch-t/repos","events_url":"https://api.github.com/users/ywelsch-t/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch-t/received_events","type":"User","site_admin":false},"created_at":"2015-05-20T08:57:02Z","updated_at":"2015-05-20T08:57:02Z","author_association":"NONE","body":"1) Why the restriction to different repositories? If snapshots are concurrently done on the same repository but for disjoint sets of indices, isn't it only the update of the snapshot list at the end that needs to be synchronized (as far as BlobStoreRepository is concerned)?\n\n2) I would prefer to also have official support for the \"delete index from snapshot\" operation (Advantage is that lifetime of certain indices in the backup can be controlled not only before but also after snapshotting.) . A workaround would be to do snapshots that are only comprised of single indices.\n\n3) Repository-level throttling becomes actually less important if we have concurrent snapshots/restores because we can then approximately control the level of network throughput by sizing the snapshot / restore operations appropriately. Also, I am not sure whether throttling at the repository level makes the most sense. Should we do it at a cluster level, or even at a per-snapshot or per-restore level? How does it relate to node-level throttling? Could nodes as well be throttled at a per-snapshot or per-restore level? For me, this feature has the most unknowns right now.\n\nIn conclusion, what would solve our issues:\n- concurrent snapshots of disjoint sets of indices\n- concurrent restore of disjoint sets of indices from different snapshots\n- \"delete index from snapshot\" operation\n\nA nice-to-have:\n- some form of throttling for snapshot and restore operations.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/105562452","html_url":"https://github.com/elastic/elasticsearch/issues/11148#issuecomment-105562452","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11148","id":105562452,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNTU2MjQ1Mg==","user":{"login":"ywelsch-t","id":8446609,"node_id":"MDQ6VXNlcjg0NDY2MDk=","avatar_url":"https://avatars0.githubusercontent.com/u/8446609?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch-t","html_url":"https://github.com/ywelsch-t","followers_url":"https://api.github.com/users/ywelsch-t/followers","following_url":"https://api.github.com/users/ywelsch-t/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch-t/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch-t/subscriptions","organizations_url":"https://api.github.com/users/ywelsch-t/orgs","repos_url":"https://api.github.com/users/ywelsch-t/repos","events_url":"https://api.github.com/users/ywelsch-t/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch-t/received_events","type":"User","site_admin":false},"created_at":"2015-05-26T15:17:08Z","updated_at":"2015-05-26T15:17:08Z","author_association":"NONE","body":"@imotov I could help contribute on the following items:\n- concurrent snapshots of disjoint sets of indices\n- concurrent restore of disjoint sets of indices from different snapshots\n- \"delete index from snapshot\" operation\n  Is that something you would consider accepting as PR?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/105570668","html_url":"https://github.com/elastic/elasticsearch/issues/11148#issuecomment-105570668","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11148","id":105570668,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNTU3MDY2OA==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2015-05-26T15:38:59Z","updated_at":"2015-05-26T15:38:59Z","author_association":"MEMBER","body":"@ywelsch-t concurrent snapshot and concurrent restore is definitely on the roadmap. The infrastructure is there that can be enabled with a couple of lines of code, but it is lacking good test coverage. So, you can definitely start working on that if you wish. \n\nI am not completely sold on the \"delete index from snapshot\" operation to be honest. I would wait for others to comment. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/105797340","html_url":"https://github.com/elastic/elasticsearch/issues/11148#issuecomment-105797340","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11148","id":105797340,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNTc5NzM0MA==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2015-05-27T07:27:55Z","updated_at":"2015-05-27T07:27:55Z","author_association":"MEMBER","body":"My current understanding is that we need a) concurrent snapshot and concurrent restore of non-intersecting sets of indices b) throttling at repository level in order to not saturate the repository (ie limit the number of shards that are concurrently snapshot to/restored from the repo) c) throttling at cluster level in order to limit impact on cluster performance.\n\nWith concurrent restore and the fact it’s already possible to select indices that should be restored by using `indices` I'm not sure we need a \"delete index from snapshot\" operation. The only advantage I see is to clean and reduce a too large snapshot to free space. If indices have different lifespans, maybe they should be put into different snapshots?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/120215774","html_url":"https://github.com/elastic/elasticsearch/issues/11148#issuecomment-120215774","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11148","id":120215774,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMDIxNTc3NA==","user":{"login":"4ydx","id":1169544,"node_id":"MDQ6VXNlcjExNjk1NDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1169544?v=4","gravatar_id":"","url":"https://api.github.com/users/4ydx","html_url":"https://github.com/4ydx","followers_url":"https://api.github.com/users/4ydx/followers","following_url":"https://api.github.com/users/4ydx/following{/other_user}","gists_url":"https://api.github.com/users/4ydx/gists{/gist_id}","starred_url":"https://api.github.com/users/4ydx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/4ydx/subscriptions","organizations_url":"https://api.github.com/users/4ydx/orgs","repos_url":"https://api.github.com/users/4ydx/repos","events_url":"https://api.github.com/users/4ydx/events{/privacy}","received_events_url":"https://api.github.com/users/4ydx/received_events","type":"User","site_admin":false},"created_at":"2015-07-10T03:47:10Z","updated_at":"2015-07-10T03:50:47Z","author_association":"NONE","body":"Just to speak up concurrent restoration of non-intersecting sets of indices would be much appreciated.  I am not at all familiar with the internals of ES, but if somebody were willing to point me in the right direction, I would be happy to take a look at how that could be enabled in the code.  My company needs this feature in the coming months.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/121474002","html_url":"https://github.com/elastic/elasticsearch/issues/11148#issuecomment-121474002","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11148","id":121474002,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMTQ3NDAwMg==","user":{"login":"4ydx","id":1169544,"node_id":"MDQ6VXNlcjExNjk1NDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1169544?v=4","gravatar_id":"","url":"https://api.github.com/users/4ydx","html_url":"https://github.com/4ydx","followers_url":"https://api.github.com/users/4ydx/followers","following_url":"https://api.github.com/users/4ydx/following{/other_user}","gists_url":"https://api.github.com/users/4ydx/gists{/gist_id}","starred_url":"https://api.github.com/users/4ydx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/4ydx/subscriptions","organizations_url":"https://api.github.com/users/4ydx/orgs","repos_url":"https://api.github.com/users/4ydx/repos","events_url":"https://api.github.com/users/4ydx/events{/privacy}","received_events_url":"https://api.github.com/users/4ydx/received_events","type":"User","site_admin":false},"created_at":"2015-07-15T03:25:11Z","updated_at":"2015-07-15T03:26:05Z","author_association":"NONE","body":"I was wondering if somebody might be able to take a look at\n\nhttps://github.com/4ydx/elasticsearch/commit/e10ac70ef7c5f0bc1d06478dd9efda94fcf85cd5\n\nand let me know if those minor changes seem reasonable for allowing concurrent restoration.  I am currently running mvn clean test as per the \"Contributing to Elasticsearch\" docs.  As a side note an unaltered clone followed by running mv clean test is producing failures so I submitted a separate issue to find out if this is common or not.  At the end of the day I would like to be able to contribute something if possible, but please remember that I am new to Java as well as the Elasticsearch codebase.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/121574249","html_url":"https://github.com/elastic/elasticsearch/issues/11148#issuecomment-121574249","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11148","id":121574249,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMTU3NDI0OQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-07-15T10:50:31Z","updated_at":"2015-07-15T10:50:31Z","author_association":"CONTRIBUTOR","body":"Hi @4ydx \n\nBest idea is to send your changes as a pull request - here it'll just get lost.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/192155861","html_url":"https://github.com/elastic/elasticsearch/issues/11148#issuecomment-192155861","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11148","id":192155861,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MjE1NTg2MQ==","user":{"login":"balooka","id":12339941,"node_id":"MDQ6VXNlcjEyMzM5OTQx","avatar_url":"https://avatars2.githubusercontent.com/u/12339941?v=4","gravatar_id":"","url":"https://api.github.com/users/balooka","html_url":"https://github.com/balooka","followers_url":"https://api.github.com/users/balooka/followers","following_url":"https://api.github.com/users/balooka/following{/other_user}","gists_url":"https://api.github.com/users/balooka/gists{/gist_id}","starred_url":"https://api.github.com/users/balooka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/balooka/subscriptions","organizations_url":"https://api.github.com/users/balooka/orgs","repos_url":"https://api.github.com/users/balooka/repos","events_url":"https://api.github.com/users/balooka/events{/privacy}","received_events_url":"https://api.github.com/users/balooka/received_events","type":"User","site_admin":false},"created_at":"2016-03-04T07:23:55Z","updated_at":"2016-03-04T07:23:55Z","author_association":"NONE","body":"I'll add my vote regarding the \"delete indice from snapshot\" feature,\nAs it'll definitely allow for cleanup in 2 occasions I've encountered in my current environment:\n- as described by @ywelsch-t, allowing better management of indices with different life spans, although in our case the reason for snapshots containing such a mix relates more to original strategy vs actual need. Reviewing and amending the snapshot strategy,  I'm still \"locked\" by the older snapshots created, where fairly small indices that should be kept are mixed with larger indices that consume all the spaces but could/should be deleted because there is no need to keep them any longer\n- due to filesystem space issue, some snapshots have only completed partially, so we wouldn't be able to use safely the snapshot for some of the indices anyway, better to be able to clean them then\n\nAnother approach that would be completely satisfactory to our use case (but doesn't cover the throughput aspect brought up in this discussion) would be to allow for snapshot generations based on existing snapshots, only allowing splitting (new snapshot has a subset of the indices of the older snapshot)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/235357297","html_url":"https://github.com/elastic/elasticsearch/issues/11148#issuecomment-235357297","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11148","id":235357297,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNTM1NzI5Nw==","user":{"login":"DravenJohnson","id":17575167,"node_id":"MDQ6VXNlcjE3NTc1MTY3","avatar_url":"https://avatars0.githubusercontent.com/u/17575167?v=4","gravatar_id":"","url":"https://api.github.com/users/DravenJohnson","html_url":"https://github.com/DravenJohnson","followers_url":"https://api.github.com/users/DravenJohnson/followers","following_url":"https://api.github.com/users/DravenJohnson/following{/other_user}","gists_url":"https://api.github.com/users/DravenJohnson/gists{/gist_id}","starred_url":"https://api.github.com/users/DravenJohnson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DravenJohnson/subscriptions","organizations_url":"https://api.github.com/users/DravenJohnson/orgs","repos_url":"https://api.github.com/users/DravenJohnson/repos","events_url":"https://api.github.com/users/DravenJohnson/events{/privacy}","received_events_url":"https://api.github.com/users/DravenJohnson/received_events","type":"User","site_admin":false},"created_at":"2016-07-26T18:16:32Z","updated_at":"2016-07-26T18:16:32Z","author_association":"NONE","body":"1. How about add combine/merge feature that you can organize your snapshot every month (daily snapshot merge into a monthly one.)\n2. I would prefer if we have retake option for failed snapshot so I don't have to spend more time retaking entire snapshot. (Time consuming and also not well organized.)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/374996376","html_url":"https://github.com/elastic/elasticsearch/issues/11148#issuecomment-374996376","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11148","id":374996376,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NDk5NjM3Ng==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2018-03-21T16:07:33Z","updated_at":"2018-03-21T16:07:33Z","author_association":"CONTRIBUTOR","body":"I'm closing this issue as we're going to tackle the problem from a different angle. In the future, we plan on having a more index-centric view of snapshots. Instead of asking what indices are in a snapshot, you could ask what snapshots exist for an index and do manipulation at index level. This would address the issues mentioned here.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447600478","html_url":"https://github.com/elastic/elasticsearch/issues/11148#issuecomment-447600478","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11148","id":447600478,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzYwMDQ3OA==","user":{"login":"jakauppila","id":4100127,"node_id":"MDQ6VXNlcjQxMDAxMjc=","avatar_url":"https://avatars0.githubusercontent.com/u/4100127?v=4","gravatar_id":"","url":"https://api.github.com/users/jakauppila","html_url":"https://github.com/jakauppila","followers_url":"https://api.github.com/users/jakauppila/followers","following_url":"https://api.github.com/users/jakauppila/following{/other_user}","gists_url":"https://api.github.com/users/jakauppila/gists{/gist_id}","starred_url":"https://api.github.com/users/jakauppila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakauppila/subscriptions","organizations_url":"https://api.github.com/users/jakauppila/orgs","repos_url":"https://api.github.com/users/jakauppila/repos","events_url":"https://api.github.com/users/jakauppila/events{/privacy}","received_events_url":"https://api.github.com/users/jakauppila/received_events","type":"User","site_admin":false},"created_at":"2018-12-15T21:53:33Z","updated_at":"2018-12-15T21:53:33Z","author_association":"NONE","body":"@ywelsch Is there another issue to watch for that index-centric view of snapshots? We'd be very interested in that.","performed_via_github_app":null}]