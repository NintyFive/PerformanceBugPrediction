[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/535833982","html_url":"https://github.com/elastic/elasticsearch/issues/47195#issuecomment-535833982","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47195","id":535833982,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNTgzMzk4Mg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-09-27T07:53:40Z","updated_at":"2019-09-27T07:53:40Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-security","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/597438124","html_url":"https://github.com/elastic/elasticsearch/issues/47195#issuecomment-597438124","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47195","id":597438124,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NzQzODEyNA==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2020-03-11T04:27:17Z","updated_at":"2020-03-11T04:27:17Z","author_association":"CONTRIBUTOR","body":"@ywangd I've assigned this to you, no rush, but I think we should get it sorted when we can.\r\n\r\nI don't know whether we want to add the anonymous role to the`roles` field, or add a new `anonymous_role` field, or something like that, but I think you and @jkakavas could come up with an agreement on that.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/597448011","html_url":"https://github.com/elastic/elasticsearch/issues/47195#issuecomment-597448011","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47195","id":597448011,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NzQ0ODAxMQ==","user":{"login":"ywangd","id":2344308,"node_id":"MDQ6VXNlcjIzNDQzMDg=","avatar_url":"https://avatars3.githubusercontent.com/u/2344308?v=4","gravatar_id":"","url":"https://api.github.com/users/ywangd","html_url":"https://github.com/ywangd","followers_url":"https://api.github.com/users/ywangd/followers","following_url":"https://api.github.com/users/ywangd/following{/other_user}","gists_url":"https://api.github.com/users/ywangd/gists{/gist_id}","starred_url":"https://api.github.com/users/ywangd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywangd/subscriptions","organizations_url":"https://api.github.com/users/ywangd/orgs","repos_url":"https://api.github.com/users/ywangd/repos","events_url":"https://api.github.com/users/ywangd/events{/privacy}","received_events_url":"https://api.github.com/users/ywangd/received_events","type":"User","site_admin":false},"created_at":"2020-03-11T05:14:00Z","updated_at":"2020-03-11T05:14:00Z","author_association":"MEMBER","body":"Thanks @tvernum \r\n\r\n@jkakavas From the surface, I'd prefer a new field for it because of clarity. Otherwise users may have new confusion from another direction, i.e. from \"where are my missing roles\" to \"what are these extra roles\". I'd personally name it to something like `inherited_roles`. But I understand it could be a pre-mature \"optimization\" unless we could extend this concept to tokens, api keys or something else.\r\n\r\nNot sure whether there is any backwards compatibility issue for adding a new field. Hope it's not too much to justify a new field.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/597450742","html_url":"https://github.com/elastic/elasticsearch/issues/47195#issuecomment-597450742","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47195","id":597450742,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NzQ1MDc0Mg==","user":{"login":"jkakavas","id":10281256,"node_id":"MDQ6VXNlcjEwMjgxMjU2","avatar_url":"https://avatars2.githubusercontent.com/u/10281256?v=4","gravatar_id":"","url":"https://api.github.com/users/jkakavas","html_url":"https://github.com/jkakavas","followers_url":"https://api.github.com/users/jkakavas/followers","following_url":"https://api.github.com/users/jkakavas/following{/other_user}","gists_url":"https://api.github.com/users/jkakavas/gists{/gist_id}","starred_url":"https://api.github.com/users/jkakavas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkakavas/subscriptions","organizations_url":"https://api.github.com/users/jkakavas/orgs","repos_url":"https://api.github.com/users/jkakavas/repos","events_url":"https://api.github.com/users/jkakavas/events{/privacy}","received_events_url":"https://api.github.com/users/jkakavas/received_events","type":"User","site_admin":false},"created_at":"2020-03-11T05:27:10Z","updated_at":"2020-03-11T05:27:10Z","author_association":"CONTRIBUTOR","body":"We generally are fine with adding fields to responses, these are not considered breaking changes and we have the tooling in our serialization logic to take care of version guards. We recently ( in a minor in 6.x ) added the realm information in the _authenticate response too. \r\n\r\nI agree that the new field fits the principle of least astonishment better ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/601007479","html_url":"https://github.com/elastic/elasticsearch/issues/47195#issuecomment-601007479","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47195","id":601007479,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMTAwNzQ3OQ==","user":{"login":"ywangd","id":2344308,"node_id":"MDQ6VXNlcjIzNDQzMDg=","avatar_url":"https://avatars3.githubusercontent.com/u/2344308?v=4","gravatar_id":"","url":"https://api.github.com/users/ywangd","html_url":"https://github.com/ywangd","followers_url":"https://api.github.com/users/ywangd/followers","following_url":"https://api.github.com/users/ywangd/following{/other_user}","gists_url":"https://api.github.com/users/ywangd/gists{/gist_id}","starred_url":"https://api.github.com/users/ywangd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywangd/subscriptions","organizations_url":"https://api.github.com/users/ywangd/orgs","repos_url":"https://api.github.com/users/ywangd/repos","events_url":"https://api.github.com/users/ywangd/events{/privacy}","received_events_url":"https://api.github.com/users/ywangd/received_events","type":"User","site_admin":false},"created_at":"2020-03-19T06:15:35Z","updated_at":"2020-03-19T06:19:35Z","author_association":"MEMBER","body":"We had a fair amount of discussion since last post here. This issue is getting more involved and here is a status update based on the discussion during team meeting:\r\n\r\n**TLDR**: We prefer to have anonymous roles listed under existing `roles` field. I personally prefer to solve the immediate problem first and create a separate issue for relocating the logic of anonymous role resolving.\r\n\r\n**First of all**, on the contrary to the initial discussion, we now agree that the anonymous roles should be just part of the existing `roles` field instead of a new one. I think the single strong argument is from @jkakavas as the follows:\r\n> The purpose of the API is to tell us which roles the user has, but not why they have them.\r\n\r\n**The second question** is where the anonymous role should be handled. The lifecycle of a role goes through following phases:\r\n\r\n1. Get role name (RoleMapper)\r\n2. Retrieve role descriptor (RolesStore, BiConsumer functional interface)\r\n3. Build role object (CompositeRolesStore, which is not a RolesStore)\r\n\r\nIn general, step 1 is handled in authentication phase, while step 2 and 3 are handled in authorization phase. However, the anonymous role is a special case in that its role names are handled in authorization phase, specifically `CompositeRolesStore#getRoles`. Consequently, these role names are _not_ available in the `authentication` object. This has two implications:\r\n\r\n1. The anonymous role names are inconvenient to access when constructing the response for `/_security/_authenticate`. This belongs to the bug we are trying to fix here.\r\n2. The `authentication` object is no longer the source of truth for user roles, which is a deeper problem and can possibly be handled in a separate issue.\r\n\r\nIf we just focus on **issue 1**, we can add new logic in `TransportAuthenticateAction` to retrieve the full list of user roles from the transient data in threadContext, details can be found [here](https://github.com/elastic/elasticsearch/pull/53453#discussion_r392731757).\r\n\r\nFor **issue 2**, we need to move some logic from  `CompositeRolesStore#getRoles` to the authentication phase. Based on my reading, there is no a single choke point in authentication where this logic can be applied. We need at least add it in two places, `Authenticator#handleNullToken` and `Authenticator#finishAuthentication`. **There will also be a behaviour change (possibly breaking change?).** The anonymous role settings are node scope, current handling in the authorization phase means they could be different depends on which node performs authorization. If we move this logic into authentication, the anonymous role will then just depend on the node where authentication is performed, because the roles are transfered across wires as part of `authentication` and honored by all nodes.\r\n\r\nBase on above analysis, I prefer to fix issue 1 first and create a separate issue to deal with issue 2. This way we treat the symptom first for immediate user benefit and buy more time to think through on issue 2 and its implications. Once issue 2 is fixed, it should be simple to leverage it to refactor issue 1 (most likely deleting code).\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/601013401","html_url":"https://github.com/elastic/elasticsearch/issues/47195#issuecomment-601013401","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47195","id":601013401,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMTAxMzQwMQ==","user":{"login":"jkakavas","id":10281256,"node_id":"MDQ6VXNlcjEwMjgxMjU2","avatar_url":"https://avatars2.githubusercontent.com/u/10281256?v=4","gravatar_id":"","url":"https://api.github.com/users/jkakavas","html_url":"https://github.com/jkakavas","followers_url":"https://api.github.com/users/jkakavas/followers","following_url":"https://api.github.com/users/jkakavas/following{/other_user}","gists_url":"https://api.github.com/users/jkakavas/gists{/gist_id}","starred_url":"https://api.github.com/users/jkakavas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkakavas/subscriptions","organizations_url":"https://api.github.com/users/jkakavas/orgs","repos_url":"https://api.github.com/users/jkakavas/repos","events_url":"https://api.github.com/users/jkakavas/events{/privacy}","received_events_url":"https://api.github.com/users/jkakavas/received_events","type":"User","site_admin":false},"created_at":"2020-03-19T06:37:55Z","updated_at":"2020-03-19T06:37:55Z","author_association":"CONTRIBUTOR","body":">  There will also be a behaviour change (possibly breaking change?). The anonymous role settings are node scope, current handling in the authorization phase means they could be different depends on which node performs authorization. If we move this logic into authentication, the anonymous role will then just depend on the node where authentication is performed, because the roles are transfered across wires as part of authentication and honored by all nodes.\r\n\r\nAuthentication _is_ by design node specific so I don't see any issue here. \r\n\r\n> Base on above analysis, I prefer to fix issue 1 first and create a separate issue to deal with issue 2. \r\n\r\n++","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/601027310","html_url":"https://github.com/elastic/elasticsearch/issues/47195#issuecomment-601027310","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47195","id":601027310,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMTAyNzMxMA==","user":{"login":"ywangd","id":2344308,"node_id":"MDQ6VXNlcjIzNDQzMDg=","avatar_url":"https://avatars3.githubusercontent.com/u/2344308?v=4","gravatar_id":"","url":"https://api.github.com/users/ywangd","html_url":"https://github.com/ywangd","followers_url":"https://api.github.com/users/ywangd/followers","following_url":"https://api.github.com/users/ywangd/following{/other_user}","gists_url":"https://api.github.com/users/ywangd/gists{/gist_id}","starred_url":"https://api.github.com/users/ywangd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywangd/subscriptions","organizations_url":"https://api.github.com/users/ywangd/orgs","repos_url":"https://api.github.com/users/ywangd/repos","events_url":"https://api.github.com/users/ywangd/events{/privacy}","received_events_url":"https://api.github.com/users/ywangd/received_events","type":"User","site_admin":false},"created_at":"2020-03-19T07:24:42Z","updated_at":"2020-03-19T07:24:42Z","author_association":"MEMBER","body":"> Authentication is by design node specific so I don't see any issue here.\r\n\r\nBut that specific node will be different after the code change. Say we have a 2-node cluster, A and B and they have different anonymous role settings, `a` and `b`, respectively. The user authenticates against node A and request is also passed to node B from A.\r\n\r\nCurrently, the logic is as follows:\r\n```\r\nuser  -->   A   -->   B\r\n           (a)       (b)  <- runtime anonymous role\r\n```\r\n\r\nAfter the change, it will become\r\n```\r\nuser  -->   A   -->   B\r\n           (a)       (a)  <- runtime anonymous role\r\n```\r\n\r\nNote that the runtime anonymous role is change to `a` instead of `b` for node B . This could be what we want since it feels more inline with other authentication behaviours, i.e. authenticating node specific. But the behaviour is different nonetheless.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/601028064","html_url":"https://github.com/elastic/elasticsearch/issues/47195#issuecomment-601028064","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47195","id":601028064,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMTAyODA2NA==","user":{"login":"jkakavas","id":10281256,"node_id":"MDQ6VXNlcjEwMjgxMjU2","avatar_url":"https://avatars2.githubusercontent.com/u/10281256?v=4","gravatar_id":"","url":"https://api.github.com/users/jkakavas","html_url":"https://github.com/jkakavas","followers_url":"https://api.github.com/users/jkakavas/followers","following_url":"https://api.github.com/users/jkakavas/following{/other_user}","gists_url":"https://api.github.com/users/jkakavas/gists{/gist_id}","starred_url":"https://api.github.com/users/jkakavas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkakavas/subscriptions","organizations_url":"https://api.github.com/users/jkakavas/orgs","repos_url":"https://api.github.com/users/jkakavas/repos","events_url":"https://api.github.com/users/jkakavas/events{/privacy}","received_events_url":"https://api.github.com/users/jkakavas/received_events","type":"User","site_admin":false},"created_at":"2020-03-19T07:27:04Z","updated_at":"2020-03-19T07:27:04Z","author_association":"CONTRIBUTOR","body":"Gotcha. I think I see it as current behavior is a bug and we should fix it, rather than we're making a breaking change in expected behavior.  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/601553068","html_url":"https://github.com/elastic/elasticsearch/issues/47195#issuecomment-601553068","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47195","id":601553068,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMTU1MzA2OA==","user":{"login":"ywangd","id":2344308,"node_id":"MDQ6VXNlcjIzNDQzMDg=","avatar_url":"https://avatars3.githubusercontent.com/u/2344308?v=4","gravatar_id":"","url":"https://api.github.com/users/ywangd","html_url":"https://github.com/ywangd","followers_url":"https://api.github.com/users/ywangd/followers","following_url":"https://api.github.com/users/ywangd/following{/other_user}","gists_url":"https://api.github.com/users/ywangd/gists{/gist_id}","starred_url":"https://api.github.com/users/ywangd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywangd/subscriptions","organizations_url":"https://api.github.com/users/ywangd/orgs","repos_url":"https://api.github.com/users/ywangd/repos","events_url":"https://api.github.com/users/ywangd/events{/privacy}","received_events_url":"https://api.github.com/users/ywangd/received_events","type":"User","site_admin":false},"created_at":"2020-03-20T06:20:57Z","updated_at":"2020-03-20T06:20:57Z","author_association":"MEMBER","body":"I have a change of heart again. I'd like to tackle both issues together. Because fixing issue 1 alone feels hacky and the solution does not do exactly what I want in all cases. The role names are sanitized, deduplicated and compacted during authorization. Although they do represent the final runtime privileges, they could read quite different from those in the authentication object.\r\nGiven we consider the behaviour change of issue 2 as bug fixing, plus the fact that the combine solution is better than individual ones, I am working towards having both of them fixed.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/641643116","html_url":"https://github.com/elastic/elasticsearch/issues/47195#issuecomment-641643116","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47195","id":641643116,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTY0MzExNg==","user":{"login":"ywangd","id":2344308,"node_id":"MDQ6VXNlcjIzNDQzMDg=","avatar_url":"https://avatars3.githubusercontent.com/u/2344308?v=4","gravatar_id":"","url":"https://api.github.com/users/ywangd","html_url":"https://github.com/ywangd","followers_url":"https://api.github.com/users/ywangd/followers","following_url":"https://api.github.com/users/ywangd/following{/other_user}","gists_url":"https://api.github.com/users/ywangd/gists{/gist_id}","starred_url":"https://api.github.com/users/ywangd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywangd/subscriptions","organizations_url":"https://api.github.com/users/ywangd/orgs","repos_url":"https://api.github.com/users/ywangd/repos","events_url":"https://api.github.com/users/ywangd/events{/privacy}","received_events_url":"https://api.github.com/users/ywangd/received_events","type":"User","site_admin":false},"created_at":"2020-06-10T00:06:11Z","updated_at":"2020-06-10T00:06:11Z","author_association":"MEMBER","body":"Reopenning the issue since the change is reverted with #57853","performed_via_github_app":null}]