[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/524303011","html_url":"https://github.com/elastic/elasticsearch/issues/45900#issuecomment-524303011","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45900","id":524303011,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNDMwMzAxMQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-08-23T12:50:04Z","updated_at":"2019-08-23T12:50:04Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-features","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/524898023","html_url":"https://github.com/elastic/elasticsearch/issues/45900#issuecomment-524898023","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45900","id":524898023,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNDg5ODAyMw==","user":{"login":"gwbrown","id":1522844,"node_id":"MDQ6VXNlcjE1MjI4NDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1522844?v=4","gravatar_id":"","url":"https://api.github.com/users/gwbrown","html_url":"https://github.com/gwbrown","followers_url":"https://api.github.com/users/gwbrown/followers","following_url":"https://api.github.com/users/gwbrown/following{/other_user}","gists_url":"https://api.github.com/users/gwbrown/gists{/gist_id}","starred_url":"https://api.github.com/users/gwbrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gwbrown/subscriptions","organizations_url":"https://api.github.com/users/gwbrown/orgs","repos_url":"https://api.github.com/users/gwbrown/repos","events_url":"https://api.github.com/users/gwbrown/events{/privacy}","received_events_url":"https://api.github.com/users/gwbrown/received_events","type":"User","site_admin":false},"created_at":"2019-08-26T15:06:24Z","updated_at":"2019-08-26T15:06:24Z","author_association":"CONTRIBUTOR","body":"I've changed the tag on this from ILM to Indices APIs, as most of this change would be to the Rollover API - the only ILM changes needed would be to make sure the parameter is passed through to the Rollover API.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/526395090","html_url":"https://github.com/elastic/elasticsearch/issues/45900#issuecomment-526395090","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45900","id":526395090,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjM5NTA5MA==","user":{"login":"gwbrown","id":1522844,"node_id":"MDQ6VXNlcjE1MjI4NDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1522844?v=4","gravatar_id":"","url":"https://api.github.com/users/gwbrown","html_url":"https://github.com/gwbrown","followers_url":"https://api.github.com/users/gwbrown/followers","following_url":"https://api.github.com/users/gwbrown/following{/other_user}","gists_url":"https://api.github.com/users/gwbrown/gists{/gist_id}","starred_url":"https://api.github.com/users/gwbrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gwbrown/subscriptions","organizations_url":"https://api.github.com/users/gwbrown/orgs","repos_url":"https://api.github.com/users/gwbrown/repos","events_url":"https://api.github.com/users/gwbrown/events{/privacy}","received_events_url":"https://api.github.com/users/gwbrown/received_events","type":"User","site_admin":false},"created_at":"2019-08-29T23:12:46Z","updated_at":"2019-08-29T23:12:46Z","author_association":"CONTRIBUTOR","body":"We discussed this in the Core/Features meeting today - here's the results of that discussion:\r\nThis seems to be a relatively rare use case. Adding this feature would add significant complexity to the Rollover API, which has already proven confusing to some users, and would add complexity to the code as well.\r\n\r\nAs for the situation you've described in the Discuss post linked above:\r\n>It worked well except for the last index automatically created by the rollover aliased, which can contain very few documents. I know it can be fine because it is the only one with 8 shards for the ILM managed index, but I'd like to avoid having indices with several shards, because the same policy could be applied to numerous other indices, so I'd like to limit the number of shards in the cluster.\r\n\r\nWe have a planned improvement to ILM to allow manually rolling over indices without causing errors in ILM (https://github.com/elastic/elasticsearch/issues/44175). Once we've implemented this, when you've determined an index pattern is \"complete\", you could manually roll over the index, which would allow that index to continue through its lifecycle, then manually delete the new, empty index.  As for the concerns about the same policy being applied to other indices, we recommend creating separate policies if you have indices with different requirements - ILM policies are relatively cheap, so you shouldn't worry about having multiple policies.\r\n\r\nDuring the discussion, a more generally applicable use case came up: ILM-managed indices with `max_age` conditions which have no indexing going on, potentially for long periods of time. This can be the case if a Beat is set up, but then never run. We opened https://github.com/elastic/elasticsearch/issues/46161, describing a feature which would allow indices to progress through their lifecycle immediately if they contain zero documents. This may be helpful in the above case as well.\r\n\r\nI'm going to close this issue, as we do not intend to implement this feature at the moment.  However, if anyone finds this and has this or another use case that this feature would address, please comment here.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/586513408","html_url":"https://github.com/elastic/elasticsearch/issues/45900#issuecomment-586513408","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45900","id":586513408,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NjUxMzQwOA==","user":{"login":"peterpramb","id":11035668,"node_id":"MDQ6VXNlcjExMDM1NjY4","avatar_url":"https://avatars0.githubusercontent.com/u/11035668?v=4","gravatar_id":"","url":"https://api.github.com/users/peterpramb","html_url":"https://github.com/peterpramb","followers_url":"https://api.github.com/users/peterpramb/followers","following_url":"https://api.github.com/users/peterpramb/following{/other_user}","gists_url":"https://api.github.com/users/peterpramb/gists{/gist_id}","starred_url":"https://api.github.com/users/peterpramb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/peterpramb/subscriptions","organizations_url":"https://api.github.com/users/peterpramb/orgs","repos_url":"https://api.github.com/users/peterpramb/repos","events_url":"https://api.github.com/users/peterpramb/events{/privacy}","received_events_url":"https://api.github.com/users/peterpramb/received_events","type":"User","site_admin":false},"created_at":"2020-02-14T23:08:17Z","updated_at":"2020-02-14T23:09:05Z","author_association":"NONE","body":"Just a slightly different use case for ingest failures:\r\n- `ingest-failures` policy\r\n```\r\n{\r\n  \"policy\": {\r\n    \"phases\": {\r\n      \"hot\": {\r\n        \"actions\": {\r\n          \"rollover\": {\r\n            \"max_age\": \"7d\",\r\n            \"max_size\": \"1gb\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"min_age\": \"30d\",\r\n        \"actions\": {\r\n          \"delete\": {}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n- Indices\r\n```\r\nhealth status index                  uuid                   pri rep docs.count docs.deleted store.size pri.store.size\r\ngreen  open   ingest-failures-000001 THOGb_NRT8GfJaU2_CwAVQ   1   1         15            0      143kb         53.7kb\r\ngreen  open   ingest-failures-000002 j87TKyYzSma3sGpr5-CWmw   1   1     397541            0    377.9mb        189.1mb\r\ngreen  open   ingest-failures-000003 G7KcHrq0Tvu3X5DOIxAzCQ   1   1          0            0       566b           283b\r\ngreen  open   ingest-failures-000004 Qo2k_dyAT3CS7Ke2nrYObQ   1   1          0            0       566b           283b\r\n```\r\nSo this might eventually cause issues in a long-running cluster with a very short `max_age` setting and a poorly choosen index `suffix number` (is an overflow there allowed?), when one does not expect empty indices to roll over at all.\r\n\r\nBeside that it's probably more an cosmetic issue...","performed_via_github_app":null}]