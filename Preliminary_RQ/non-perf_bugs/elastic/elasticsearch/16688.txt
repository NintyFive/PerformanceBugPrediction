{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/16688","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16688/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16688/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16688/events","html_url":"https://github.com/elastic/elasticsearch/issues/16688","id":133880103,"node_id":"MDU6SXNzdWUxMzM4ODAxMDM=","number":16688,"title":"make EngineConfig.INACTIVE_SHARD_INDEXING_BUFFER configurable for ES-1.7.x","user":{"login":"Dieken","id":2365,"node_id":"MDQ6VXNlcjIzNjU=","avatar_url":"https://avatars0.githubusercontent.com/u/2365?v=4","gravatar_id":"","url":"https://api.github.com/users/Dieken","html_url":"https://github.com/Dieken","followers_url":"https://api.github.com/users/Dieken/followers","following_url":"https://api.github.com/users/Dieken/following{/other_user}","gists_url":"https://api.github.com/users/Dieken/gists{/gist_id}","starred_url":"https://api.github.com/users/Dieken/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Dieken/subscriptions","organizations_url":"https://api.github.com/users/Dieken/orgs","repos_url":"https://api.github.com/users/Dieken/repos","events_url":"https://api.github.com/users/Dieken/events{/privacy}","received_events_url":"https://api.github.com/users/Dieken/received_events","type":"User","site_admin":false},"labels":[{"id":144797810,"node_id":"MDU6TGFiZWwxNDQ3OTc4MTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Core","name":":Core/Infra/Core","color":"0e8a16","default":false,"description":"Core issues without another label"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null},{"id":299866753,"node_id":"MDU6TGFiZWwyOTk4NjY3NTM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.7.5","name":"v1.7.5","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-02-16T04:06:51Z","updated_at":"2016-02-28T21:59:45Z","closed_at":"2016-02-28T21:59:45Z","author_association":"NONE","active_lock_reason":null,"body":"In my use case, I setup hourly index for ELK, unluckily the logs come from everywhere and don't have consistent pace,  often hours ago old logs suddenly comes in, that leads to big trouble due to 500kb index buffer size for inactive shard.\n\nFor example, my machines have 32 CPUs,  \"index.concurrency\" is max(8, 0.65*cpus), that's 20 Lucene thread states, also means 20 concurrent segment flushes.  And \"indices.memory.interval\" is 30s by default (this is 5s in ES-2.x),  so if a single shard has 10MB/s documents suddenly being ingested, that will produce a lot of (500kb/20)=25kb tiny segments:\n\n30s / (500kb / 10240 kb) \\* 20 concurrency = 12288 segments.\n\nThe huge amount of small segments will trigger many merging, exceed the max_merge_count limit, thus indexing is throttled, unluckily this throttling is 100% stop, not  base on some probability,  then ES data node will accumulate a lot of IndexRequest or ReplicatedIndexRequest, the ES gateway also accumulates a lot of Request,  they will run out of memory and just hang,  the ES cluster will be down.\n\nIf I pre-create ES indices for future hours, this issue also kicks in,  the inactive future ES index will suddenly become active and produce a lot of segment,  but this scenario is less critical than old logs suddenly goes into old indices because the volume of new log usually gradually increases.\n\nI made a rude patch to increase INACTIVE_SHARD_INDEXING_BUFFER to 120MB (I set min_shard_index_buffer_size to 128MB),   it works well for me, I don't worry the memory waste because Lucene allocates  memory lazily.\n\nI also checked ES-2.x code,  it totally removes the logic of inactive buffer size and doesn't average total index buffer among active shards,  this is much better, but I'm not sure whether it's easy to port that change to ES-1.7.x.\n\nMy rude patch against ES-1.7.5, just FYI:\n\n```\ndiff --git a/src/main/java/org/elasticsearch/index/engine/EngineConfig.java b/src/main/java/org/elasticsearch/index/engine/EngineConfig.java\nindex d907082..9504a89 100644\n--- a/src/main/java/org/elasticsearch/index/engine/EngineConfig.java\n+++ b/src/main/java/org/elasticsearch/index/engine/EngineConfig.java\n@@ -138,11 +138,15 @@ public final class EngineConfig {\n      */\n     public static final String INDEX_VERSION_MAP_SIZE = \"index.version_map_size\";\n\n+    /**\n+     * The indexing buffer size reserved for inactive shard.\n+     */\n+    public static final String INDEX_INACTIVE_SHARD_INDEX_BUFFER_SIZE = \"index.inactive_shard_index_buffer_size\";\n\n     public static final TimeValue DEFAULT_REFRESH_INTERVAL = new TimeValue(1, TimeUnit.SECONDS);\n     public static final TimeValue DEFAULT_GC_DELETES = TimeValue.timeValueSeconds(60);\n     public static final ByteSizeValue DEFAUTL_INDEX_BUFFER_SIZE = new ByteSizeValue(64, ByteSizeUnit.MB);\n-    public static final ByteSizeValue INACTIVE_SHARD_INDEXING_BUFFER = ByteSizeValue.parseBytesSizeValue(\"500kb\");\n+    public static ByteSizeValue INACTIVE_SHARD_INDEXING_BUFFER = ByteSizeValue.parseBytesSizeValue(\"500kb\");\n\n     public static final String DEFAULT_VERSION_MAP_SIZE = \"25%\";\n\n@@ -182,6 +186,7 @@ public final class EngineConfig {\n         failOnMergeFailure = indexSettings.getAsBoolean(INDEX_FAIL_ON_MERGE_FAILURE_SETTING, true);\n         gcDeletesInMillis = indexSettings.getAsTime(INDEX_GC_DELETES_SETTING, EngineConfig.DEFAULT_GC_DELETES).millis();\n         versionMapSizeSetting = indexSettings.get(INDEX_VERSION_MAP_SIZE, DEFAULT_VERSION_MAP_SIZE);\n+        INACTIVE_SHARD_INDEXING_BUFFER = indexSettings.getAsBytesSize(INDEX_INACTIVE_SHARD_INDEX_BUFFER_SIZE, ByteSizeValue.parseBytesSizeValue(\"500kb\"));\n         updateVersionMapSize();\n     }\n\ndiff --git a/src/main/java/org/elasticsearch/index/shard/IndexShard.java b/src/main/java/org/elasticsearch/index/shard/IndexShard.java\nindex 4ff1b06..27354fa 100644\n--- a/src/main/java/org/elasticsearch/index/shard/IndexShard.java\n+++ b/src/main/java/org/elasticsearch/index/shard/IndexShard.java\n@@ -1073,7 +1073,7 @@ public class IndexShard extends AbstractIndexShardComponent {\n             // its inactive, make sure we do a refresh / full IW flush in this case, since the memory\n             // changes only after a \"data\" change has happened to the writer\n             // the index writer lazily allocates memory and a refresh will clean it all up.\n-            if (shardIndexingBufferSize == EngineConfig.INACTIVE_SHARD_INDEXING_BUFFER && preValue != EngineConfig.INACTIVE_SHARD_INDEXING_BUFFER) {\n+            if (shardIndexingBufferSize.equals(EngineConfig.INACTIVE_SHARD_INDEXING_BUFFER) && ! preValue.equals(EngineConfig.INACTIVE_SHARD_INDEXING_BUFFER)) {\n                 logger.debug(\"updating index_buffer_size from [{}] to (inactive) [{}]\", preValue, shardIndexingBufferSize);\n                 try {\n                     refresh(\"update index buffer\");\n```\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}