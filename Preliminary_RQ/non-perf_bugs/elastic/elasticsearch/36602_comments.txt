[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447013145","html_url":"https://github.com/elastic/elasticsearch/issues/36602#issuecomment-447013145","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36602","id":447013145,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzAxMzE0NQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-12-13T15:39:10Z","updated_at":"2018-12-13T15:39:10Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447046254","html_url":"https://github.com/elastic/elasticsearch/issues/36602#issuecomment-447046254","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36602","id":447046254,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzA0NjI1NA==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2018-12-13T17:07:59Z","updated_at":"2018-12-13T17:07:59Z","author_association":"MEMBER","body":"@spinscale This is concerning to me because the new way is mimicking what we must do with java 8 time. So I would expect this same issue to appear when using java 8 time, because it does not have the equivalent to Joda's multiple parsers within a date formatter. Thoughts?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447100305","html_url":"https://github.com/elastic/elasticsearch/issues/36602#issuecomment-447100305","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36602","id":447100305,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzEwMDMwNQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2018-12-13T19:58:02Z","updated_at":"2018-12-13T19:58:02Z","author_association":"MEMBER","body":"To clarify my previous statement: @dm reached out to me on another channel with this info:\r\n\r\n> it seems the problem might be due to a lot of `IllegalArgumentException` instances getting thrown during date parsing\r\n\r\nWith java 8 time, and what the referenced PR does, is try each format in a multi date format one at a time, catching IllegalArgumentException. In joda, multiple parsers could be set within a DateTimeFormatter. This can be done (sort of) in java time by using DateTimeFormatterBuilder and using `appendOptional` with each DateTimeFormatter. However, there is no builtin or easy way to make a DateTimeFormatter for epoch seconds or milliseconds. The first is possible, but kludgy, and the second is not possible with the ChronoFields built into java, although it should be possible in theory. But this seems to be our only option to avoid having many IAEs thrown internally.\r\n\r\nI'm going to try reworking the multi date formats back to having a single parser as described above.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447312142","html_url":"https://github.com/elastic/elasticsearch/issues/36602#issuecomment-447312142","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36602","id":447312142,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzMxMjE0Mg==","user":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"created_at":"2018-12-14T12:34:06Z","updated_at":"2018-12-14T12:34:06Z","author_association":"MEMBER","body":"@rjernst ++ that outlined approach makes sense to me! Thanks for checking","performed_via_github_app":null}]