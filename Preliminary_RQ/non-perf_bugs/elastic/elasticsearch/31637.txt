{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/31637","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31637/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31637/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31637/events","html_url":"https://github.com/elastic/elasticsearch/issues/31637","id":336411851,"node_id":"MDU6SXNzdWUzMzY0MTE4NTE=","number":31637,"title":"Per doc replica rollbacks","user":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"labels":[{"id":836542781,"node_id":"MDU6TGFiZWw4MzY1NDI3ODE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Engine","name":":Distributed/Engine","color":"0e8a16","default":false,"description":"Anything around managing Lucene and the Translog in an open shard."},{"id":152510590,"node_id":"MDU6TGFiZWwxNTI1MTA1OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Recovery","name":":Distributed/Recovery","color":"0e8a16","default":false,"description":"Anything around constructing a new shard, either from a local or a remote source."},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null},{"id":113234020,"node_id":"MDU6TGFiZWwxMTMyMzQwMjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/stalled","name":"stalled","color":"fef2c0","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-06-27T22:38:25Z","updated_at":"2019-03-07T17:12:08Z","closed_at":"2019-03-07T17:12:08Z","author_association":"MEMBER","active_lock_reason":null,"body":"When a replica switches to follow/recover from a new primary, it may have indexed some operations that do not exist on the new primary. We need to undo those operations. This meta issue tracks works to be done on this story.\r\n\r\n- [ ] Use an updatable numeric docValues to record the sequence number of an updating operation (https://github.com/elastic/elasticsearch/pull/31846)\r\n\r\n- [ ] Do we need an optimized version of the soft-deletes retention merge policy? I am not sure if we can avoid the slowness of the range query of a numeric docValues with the builtin soft-deletes retention merge policy.\r\n\r\n- [ ] Handle duplicate and nested documents. With the current implementation, if a nested doc arrives twice, we will index the first nested doc as live and the second as deleted. Suppose we delete that doc, then subsequently would like to un-delete. We have no way to un-delete only the child docs of the first nested doc. We can solve this by not index the second doc (https://github.com/elastic/elasticsearch/pull/31806).\r\n\r\n- [ ] Provide a capacitiy to rollback a single document with the specific seqno/term in both Lucene and VersionMap (https://github.com/elastic/elasticsearch/pull/31910)\r\n\r\n- [ ] Capture the maximum of max_seqno on all active replicas before resync, then issue no-ops on the primary for every seqno from its max_seqno to the max of max_seqno on replicas. Another option is to let replicas locally rollback operations whose seq# >= max_seqno of the primary.\r\n\r\n- [ ] Live Lucene per doc rollback on the replica during the primary-replica resync using the single doc rollback method. This is the main task of this story.\r\n\r\n~~Live VersionMap rollback on the replica during the primary-replica resync. If we replace the tombstone map with Lucene soft-deletes, we may not need to rollback the VersionMap because a refresh will flush all entries in the version map~~.\r\n\r\n### Benchmarking\r\n\r\n- [ ] We need to benchmark to make sure this change does not reduce the indexing throughput or slow down a refresh/merge significantly.\r\n\r\n### Removing the safe commit\r\n\r\nCurrently, a primary and replica roll back to the safe commit before executing a store or peer recovery respectively. We can achieve the same thing with the last commit and per-doc rollback.\r\n\r\n- [ ] A replica can start a peer-recovery with the last commit (instead of the safe commit), then apply per-doc rollback to that commit before phase2 if the recovery is an operation-based.\r\n\r\n- [ ] With this change, a primary does not have to transfer the safe commit in the peer-recovery, we can keep only the last commit on the primary \r\n\r\n- [ ] Once a replica uses the last commit in a peer-recovery, we can keep only the last commit on the replica\r\n\r\n### Misc\r\n- [ ] A formal model to prove the correctness of the Lucene rollback\r\n\r\nRelates to https://github.com/elastic/elasticsearch/issues/10708 ","closed_by":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"performed_via_github_app":null}