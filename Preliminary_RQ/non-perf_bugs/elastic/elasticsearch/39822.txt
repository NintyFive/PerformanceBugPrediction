{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/39822","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39822/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39822/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39822/events","html_url":"https://github.com/elastic/elasticsearch/issues/39822","id":418618254,"node_id":"MDU6SXNzdWU0MTg2MTgyNTQ=","number":39822,"title":"client and data nodes cannot discover master if master changes its IP - kubernetes","user":{"login":"manojtr","id":7928180,"node_id":"MDQ6VXNlcjc5MjgxODA=","avatar_url":"https://avatars0.githubusercontent.com/u/7928180?v=4","gravatar_id":"","url":"https://api.github.com/users/manojtr","html_url":"https://github.com/manojtr","followers_url":"https://api.github.com/users/manojtr/followers","following_url":"https://api.github.com/users/manojtr/following{/other_user}","gists_url":"https://api.github.com/users/manojtr/gists{/gist_id}","starred_url":"https://api.github.com/users/manojtr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manojtr/subscriptions","organizations_url":"https://api.github.com/users/manojtr/orgs","repos_url":"https://api.github.com/users/manojtr/repos","events_url":"https://api.github.com/users/manojtr/events{/privacy}","received_events_url":"https://api.github.com/users/manojtr/received_events","type":"User","site_admin":false},"labels":[{"id":881394071,"node_id":"MDU6TGFiZWw4ODEzOTQwNzE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Cluster%20Coordination","name":":Distributed/Cluster Coordination","color":"0e8a16","default":false,"description":"Cluster formation and cluster state publication, including cluster membership and fault detection."}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-03-08T03:40:21Z","updated_at":"2019-03-08T06:13:23Z","closed_at":"2019-03-08T03:48:28Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Feature request -->\r\n\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version**: `2.4.6`\r\n\r\n**Plugins installed**: `marvel-agent delete-by-query shield license cloud-aws`\r\n\r\n**JVM version** : `1.8.0 Open JDK`\r\n\r\n**OS version**: `CentOS 7`\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nI am running the ES cluster (1 client pod, 2 data pods and 1 master pod) in kubernetes. The discovery is set to a kubernetes service and all works fine in a normal setup. \r\n\r\nBut when master pod dies and k8s will create a new pod (with new IP), the client and data fails to connect to master because it is somehow cannot get the new IP from the discovery service. If I do nslookup on the discovery service it is resolving to a new IP but client and data nodes cannot see the IP change. And on client node and data node, it produces the below error\r\n\r\n```\r\n\tCaused by: ClusterBlockException[blocked by: [SERVICE_UNAVAILABLE/2/no master];]\r\n\t\tat org.elasticsearch.cluster.block.ClusterBlocks.globalBlockedException(ClusterBlocks.java:158)\r\n\t\tat org.elasticsearch.cluster.block.ClusterBlocks.globalBlockedRaiseException(ClusterBlocks.java:144)\r\n\t\tat org.elasticsearch.action.bulk.TransportBulkAction.executeBulk(TransportBulkAction.java:204)\r\n\t\tat org.elasticsearch.action.bulk.TransportBulkAction.doExecute(TransportBulkAction.java:151)\r\n\t\tat org.elasticsearch.action.bulk.TransportBulkAction.doExecute(TransportBulkAction.java:71)\r\n\t\tat org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:149)\r\n\t\tat org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:172)\r\n\t\tat org.elasticsearch.shield.action.ShieldActionFilter.apply(ShieldActionFilter.java:137)\r\n\t\tat org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:170)\r\n\t\tat org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:144)\r\n\t\tat org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:85)\r\n\t\tat org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:58)\r\n\t\tat org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:359)\r\n\t\tat org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:52)\r\n\t\tat org.elasticsearch.marvel.shield.SecuredClient.doExecute(SecuredClient.java:45)\r\n\t\tat org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:359)\r\n\t\tat org.elasticsearch.action.ActionRequestBuilder.execute(ActionRequestBuilder.java:86)\r\n\t\tat org.elasticsearch.action.ActionRequestBuilder.execute(ActionRequestBuilder.java:56)\r\n\t\tat org.elasticsearch.action.ActionRequestBuilder.get(ActionRequestBuilder.java:64)\r\n\t\tat org.elasticsearch.marvel.agent.exporter.local.LocalBulk.flush(LocalBulk.java:116)\r\n\t\tat org.elasticsearch.marvel.agent.exporter.ExportBulk$Compound.flush(ExportBulk.java:101)\r\n\t\t... 3 more\r\n```\r\n\r\n**Steps to reproduce**:\r\n\r\n 1. Create a simple ES cluster with 1 client, 1 data and 1 master in k8s. \r\n 2. Kill the master pod\r\n 3. The master pod will come up with a new IP and waiting other nodes to join. \r\n 4. Both client and dat nodes are stuck by saying no master to connect. It looks like it doesn't respect the DNS discovery name and seems to cache the IP\r\n\r\n\r\n","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}