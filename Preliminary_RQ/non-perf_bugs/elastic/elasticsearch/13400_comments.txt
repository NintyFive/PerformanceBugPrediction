[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/138708220","html_url":"https://github.com/elastic/elasticsearch/issues/13400#issuecomment-138708220","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13400","id":138708220,"node_id":"MDEyOklzc3VlQ29tbWVudDEzODcwODIyMA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-09-08T21:31:30Z","updated_at":"2015-09-08T21:31:30Z","author_association":"CONTRIBUTOR","body":"What kind of text do you analyze? If this is simple text that you just happen to normalize (lowercasing, removal of accents, etc.), this other issue should allow you to enable doc values on it: #12394\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/138715302","html_url":"https://github.com/elastic/elasticsearch/issues/13400#issuecomment-138715302","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13400","id":138715302,"node_id":"MDEyOklzc3VlQ29tbWVudDEzODcxNTMwMg==","user":{"login":"jmacdonald92","id":4910195,"node_id":"MDQ6VXNlcjQ5MTAxOTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4910195?v=4","gravatar_id":"","url":"https://api.github.com/users/jmacdonald92","html_url":"https://github.com/jmacdonald92","followers_url":"https://api.github.com/users/jmacdonald92/followers","following_url":"https://api.github.com/users/jmacdonald92/following{/other_user}","gists_url":"https://api.github.com/users/jmacdonald92/gists{/gist_id}","starred_url":"https://api.github.com/users/jmacdonald92/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmacdonald92/subscriptions","organizations_url":"https://api.github.com/users/jmacdonald92/orgs","repos_url":"https://api.github.com/users/jmacdonald92/repos","events_url":"https://api.github.com/users/jmacdonald92/events{/privacy}","received_events_url":"https://api.github.com/users/jmacdonald92/received_events","type":"User","site_admin":false},"created_at":"2015-09-08T21:55:08Z","updated_at":"2015-09-08T21:55:08Z","author_association":"NONE","body":"Sorry I was not clear about that. The primary use of the field is terms aggregation to find the top tokens in a slice of the data. We analyze the data using the standard analyzer. So basically, the only type of data that will not have doc_values as the default post #12394. \n\nI know that allowing doc_values for tokenized string data would have terrible performance. I was wondering if it would be possible to store the current fielddata structure for these string fields on disk and keep it updated/page it in to the FS cache like doc_values. From what I understand, the problems with enabling doc values stem from the data structures used, but it appears that whichever data structure is backing the fielddata implementations doesn't have this issue. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/138717264","html_url":"https://github.com/elastic/elasticsearch/issues/13400#issuecomment-138717264","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13400","id":138717264,"node_id":"MDEyOklzc3VlQ29tbWVudDEzODcxNzI2NA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-09-08T22:04:49Z","updated_at":"2015-09-08T22:04:49Z","author_association":"CONTRIBUTOR","body":"OK, so this is actual full text content and wouldn't be covered by #12394. \n\nIndeed doc values are good to store string fields when documents have at most a couple values. Full text makes it harder because there can be a lot of variance in the number of terms that each document has, which is hard to store efficiently.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/138717904","html_url":"https://github.com/elastic/elasticsearch/issues/13400#issuecomment-138717904","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13400","id":138717904,"node_id":"MDEyOklzc3VlQ29tbWVudDEzODcxNzkwNA==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-09-08T22:08:06Z","updated_at":"2015-09-08T22:08:06Z","author_association":"CONTRIBUTOR","body":"Fielddata is just as bad, it just blows up memory faster. Again, frequencies are lost so its just a bad idea for tokenized text.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/138724605","html_url":"https://github.com/elastic/elasticsearch/issues/13400#issuecomment-138724605","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13400","id":138724605,"node_id":"MDEyOklzc3VlQ29tbWVudDEzODcyNDYwNQ==","user":{"login":"jmacdonald92","id":4910195,"node_id":"MDQ6VXNlcjQ5MTAxOTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4910195?v=4","gravatar_id":"","url":"https://api.github.com/users/jmacdonald92","html_url":"https://github.com/jmacdonald92","followers_url":"https://api.github.com/users/jmacdonald92/followers","following_url":"https://api.github.com/users/jmacdonald92/following{/other_user}","gists_url":"https://api.github.com/users/jmacdonald92/gists{/gist_id}","starred_url":"https://api.github.com/users/jmacdonald92/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmacdonald92/subscriptions","organizations_url":"https://api.github.com/users/jmacdonald92/orgs","repos_url":"https://api.github.com/users/jmacdonald92/repos","events_url":"https://api.github.com/users/jmacdonald92/events{/privacy}","received_events_url":"https://api.github.com/users/jmacdonald92/received_events","type":"User","site_admin":false},"created_at":"2015-09-08T22:46:54Z","updated_at":"2015-09-08T22:46:54Z","author_association":"NONE","body":"I am either fundamentally miss-understanding how fielddata works in the context of aggregations or @rmuir and I are not talking about the same thing/use case. \n\nAs far as I understand, when Elasticsearch performs an aggregation it has to un-invert the stored index first. By default it does this with field data, but this process causes a latency spike if the field data isn't in the cache, since the process of constructing it (and potentially garbage collecting whatever was in the cache previously) is computationally expensive. The alternative is to index the field with doc_values = true, which constructs an inverted index using a different data structure and saves it to disk. Then when that doc_values data is needed the file on disk is page in to the file system cache outside the JVM heap. A cache miss here is much less problematic, since there is no need to garbage collect and the data structure is pre-built, since the only cost is reading from disk (usually an SSD). \n\nGiven that understanding (which is likely wrong), I am confused about the statement that fielddata is bad for tokenized text. As far as I understand, fielddata is currently the only un-inverted form Elasticsearch supports for tokenized text. I absolutely agree that is takes a lot of memory, however, I have never encountered an issue with performance. Also, I don't know why frequencies being lost is problematic, since as far as I know the terms aggregation never supported terms frequency anyway (and if I am wrong and it does, I am not sure how).\n\nAnyway, what I am really looking for is a way to replicate the job the fielddata currently performs for tokenized text without the requirement of having it constantly loaded into memory or face terrible performance. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/138725983","html_url":"https://github.com/elastic/elasticsearch/issues/13400#issuecomment-138725983","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13400","id":138725983,"node_id":"MDEyOklzc3VlQ29tbWVudDEzODcyNTk4Mw==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-09-08T22:56:40Z","updated_at":"2015-09-08T22:56:40Z","author_association":"CONTRIBUTOR","body":"Thats the issue though, frequencies are important for tokenized text. I think somehow for whatever reason, your use case is ok with this, but generally speaking it is the wrong datastructure. I dont think we should try to provide enhancements around fielddata or docvalues support for that reason alone.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/138741027","html_url":"https://github.com/elastic/elasticsearch/issues/13400#issuecomment-138741027","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13400","id":138741027,"node_id":"MDEyOklzc3VlQ29tbWVudDEzODc0MTAyNw==","user":{"login":"jmacdonald92","id":4910195,"node_id":"MDQ6VXNlcjQ5MTAxOTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4910195?v=4","gravatar_id":"","url":"https://api.github.com/users/jmacdonald92","html_url":"https://github.com/jmacdonald92","followers_url":"https://api.github.com/users/jmacdonald92/followers","following_url":"https://api.github.com/users/jmacdonald92/following{/other_user}","gists_url":"https://api.github.com/users/jmacdonald92/gists{/gist_id}","starred_url":"https://api.github.com/users/jmacdonald92/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmacdonald92/subscriptions","organizations_url":"https://api.github.com/users/jmacdonald92/orgs","repos_url":"https://api.github.com/users/jmacdonald92/repos","events_url":"https://api.github.com/users/jmacdonald92/events{/privacy}","received_events_url":"https://api.github.com/users/jmacdonald92/received_events","type":"User","site_admin":false},"created_at":"2015-09-09T00:42:39Z","updated_at":"2015-09-09T00:42:39Z","author_association":"NONE","body":"I agree 100% that frequencies are important for tokenized text and that for that reason (among others) fielddata and docvalues are not a great format for storing and using an un-inverted index of tokenized text. What has me confused is that, as far as I know, fielddata is the only format Elasticsearch currently uses for that purpose. \n\nAt the end of the day, the thing I really care about is reducing the memory requirement to run Elasticsearch. As far as I know, that means I need some way to store the data needed for aggregations in a way that does not take a long time to retrieve, or have to be held in memory constantly. As far as I know, we currently have this option for every other field type in dovvalues. So what I am really looking for is not specific to either fielddata or docvalues. \n\nThat said, (I think) Elasticsearch currently uses fielddata (only) to fulfill this purpose for tokenized string fields. So my thought was saving the fielddata structure to disk and treating it like a cache backed by files on disk. I have no idea if that is the best solution, or if it is even possible but I wanted to start a discussion about moving (or having the option to move) tokenized string field storage to disk in some way if possible. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/139266169","html_url":"https://github.com/elastic/elasticsearch/issues/13400#issuecomment-139266169","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13400","id":139266169,"node_id":"MDEyOklzc3VlQ29tbWVudDEzOTI2NjE2OQ==","user":{"login":"jmacdonald92","id":4910195,"node_id":"MDQ6VXNlcjQ5MTAxOTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4910195?v=4","gravatar_id":"","url":"https://api.github.com/users/jmacdonald92","html_url":"https://github.com/jmacdonald92","followers_url":"https://api.github.com/users/jmacdonald92/followers","following_url":"https://api.github.com/users/jmacdonald92/following{/other_user}","gists_url":"https://api.github.com/users/jmacdonald92/gists{/gist_id}","starred_url":"https://api.github.com/users/jmacdonald92/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmacdonald92/subscriptions","organizations_url":"https://api.github.com/users/jmacdonald92/orgs","repos_url":"https://api.github.com/users/jmacdonald92/repos","events_url":"https://api.github.com/users/jmacdonald92/events{/privacy}","received_events_url":"https://api.github.com/users/jmacdonald92/received_events","type":"User","site_admin":false},"created_at":"2015-09-10T14:37:46Z","updated_at":"2015-09-10T14:37:46Z","author_association":"NONE","body":"I wanted to update that I have been doing some digging into the way fielddata is generated, stored and used in Elasticsearch, and I am starting to realize that adding an FS backed cache not be possible.\n\nI may be wrong about this, but as far as I could tell fielddata is comprised of some sort of tree of lucene data structures containing that allows you to map global ordinals to segment specific ordinals (which is obviously a gross oversimplification). The potential problem I am seeing is that these data structures are likely not serializable. I am not sure if there is a better or more possible way to store fielddata, but as @rmuir  said, fielddata is probably not the best way to accomplish the goal anyway. \n\nAnyway, I am still interested in some solution that would allow us stop keeping fielddata for tokenized strings in memory constantly without negatively impacting performance. \n\nThanks\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/141677231","html_url":"https://github.com/elastic/elasticsearch/issues/13400#issuecomment-141677231","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13400","id":141677231,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MTY3NzIzMQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-09-19T14:53:49Z","updated_at":"2015-09-19T14:53:49Z","author_association":"CONTRIBUTOR","body":"@jmacdonald92 There appear to be two different use cases for doc values (or some other structure) with analyzed string fields. One is just the normalization case (eg lower-casing all terms), which is covered by https://github.com/elastic/elasticsearch/issues/10061.\n\nThe other use case is harder to pin down.  Suggested purposes include tag clouds, aggregated term statistics for naive bayes training, feature selection, and query expansion.\n\nThe problem is coming up with an efficient data structure which supports these cases.  Some require term statistics, and some don't. But all of them look pretty heavy. For the significant terms agg, we provide the sampler aggregation to reduce the load (see https://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-aggregations-bucket-sampler-aggregation.html), but more details about real use cases would be useful.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/372684170","html_url":"https://github.com/elastic/elasticsearch/issues/13400#issuecomment-372684170","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13400","id":372684170,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MjY4NDE3MA==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2018-03-13T14:27:40Z","updated_at":"2018-03-13T14:27:40Z","author_association":"MEMBER","body":"/cc @elastic/es-search-aggs ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/424013820","html_url":"https://github.com/elastic/elasticsearch/issues/13400#issuecomment-424013820","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13400","id":424013820,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNDAxMzgyMA==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2018-09-24T15:20:43Z","updated_at":"2018-09-24T15:20:43Z","author_association":"MEMBER","body":"We discussed this internally and we are not looking to implement this in the foreseeable future. Since this issue was opened we have dedicated keyword fields with normalisers supported and field data on text fields is largely no longer necessary. For this reason we are going to close this issue for now.\r\n\r\nIf anyone coming across this issue has a specific use case that they require field data on text fields for that is not covered by existing functionality please open a new issue with details on the exact use case and feature request and we can look into the best way to support that use case (hopefully without needing to use field data on the text field)","performed_via_github_app":null}]