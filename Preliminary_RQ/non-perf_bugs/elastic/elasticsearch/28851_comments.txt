[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/369262358","html_url":"https://github.com/elastic/elasticsearch/issues/28851#issuecomment-369262358","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28851","id":369262358,"node_id":"MDEyOklzc3VlQ29tbWVudDM2OTI2MjM1OA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2018-02-28T14:48:50Z","updated_at":"2018-02-28T14:48:50Z","author_association":"MEMBER","body":"hi @detro thanks for opening this issue. Could you post an example of a test where you've been struggling and what you would like to see implemented that it's currently missing? In our tests we tend to use `awaitClose` which is usually enough to make sure that all the documents that we need indexed have been sent.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/369279828","html_url":"https://github.com/elastic/elasticsearch/issues/28851#issuecomment-369279828","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28851","id":369279828,"node_id":"MDEyOklzc3VlQ29tbWVudDM2OTI3OTgyOA==","user":{"login":"detro","id":114508,"node_id":"MDQ6VXNlcjExNDUwOA==","avatar_url":"https://avatars2.githubusercontent.com/u/114508?v=4","gravatar_id":"","url":"https://api.github.com/users/detro","html_url":"https://github.com/detro","followers_url":"https://api.github.com/users/detro/followers","following_url":"https://api.github.com/users/detro/following{/other_user}","gists_url":"https://api.github.com/users/detro/gists{/gist_id}","starred_url":"https://api.github.com/users/detro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/detro/subscriptions","organizations_url":"https://api.github.com/users/detro/orgs","repos_url":"https://api.github.com/users/detro/repos","events_url":"https://api.github.com/users/detro/events{/privacy}","received_events_url":"https://api.github.com/users/detro/received_events","type":"User","site_admin":false},"created_at":"2018-02-28T15:41:43Z","updated_at":"2018-02-28T15:41:43Z","author_association":"NONE","body":"So, it's complicated to share the details without sharing the actual code.\r\n\r\nWhat I'm testing is, essentially, a DAO that internally uses Elasticsearch as backend. This DAO will allow both single-document requests (normal CRUD kind of thing) and Bulk operations (for when we need to index a lot of stuff).\r\n\r\nThe `BulkProcessor` is kinda perfect for this, hence the choice of using it (until now we were using Jest as REST client, and we have come up with, essentially, the same kind of Bulk loader you guys built).\r\n\r\nWhat my test does is simple:\r\n1. DAO.bulkLoad(lots_of_write_document_requests)\r\n2. DAO.query(searchRequest)\r\n3. Check Total Hits\r\n4. Check hits\r\n5. Deserialize hits (i.e. deserialize them into our own POJOs)\r\n\r\n### Small update since I wrote this issue\r\n\r\n@antoniopironti (colleague) suggested I'd take a look at your tests of `BulkProcessor`, and I found that essentially you guys do 2 things to ensure _synchronization_ when testing:\r\n* a `CountDownLatch`\r\n* 2 `AtomicLong` counter to check the amount of BEFORE and AFTER requests\r\n\r\nThe file: https://github.com/elastic/elasticsearch/blob/99f88f15c5febbca2d13b5b5fda27b844153bf1a/server/src/test/java/org/elasticsearch/action/bulk/BulkProcessorIT.java#L341\r\n\r\nSo, in my DAO I'm following this route for now (keep 2 counters and have a `hasPendingRequests` method that just does a difference). But I'm essentially inferring the internal status of the `BulkProcessor`. And that smells of _anti pattern_.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/371828164","html_url":"https://github.com/elastic/elasticsearch/issues/28851#issuecomment-371828164","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28851","id":371828164,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MTgyODE2NA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-03-09T14:32:17Z","updated_at":"2018-03-09T14:32:17Z","author_association":"MEMBER","body":"We discussed this in Fix-it-Friday. We think that using the listener callbacks exposed here are the way to track this information, if needed. We prefer to keep our public-facing APIs small and since this information is already available via the callback mechanism, we would prefer not to expose this information directly increasing the weight of the public-facing API.","performed_via_github_app":null}]