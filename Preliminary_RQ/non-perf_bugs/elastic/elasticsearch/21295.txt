{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/21295","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21295/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21295/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21295/events","html_url":"https://github.com/elastic/elasticsearch/issues/21295","id":186988624,"node_id":"MDU6SXNzdWUxODY5ODg2MjQ=","number":21295,"title":"Strict shard request cache in 5.0 should automatically not cache non-deterministic queries  rather than throw an error","user":{"login":"geekpete","id":2070843,"node_id":"MDQ6VXNlcjIwNzA4NDM=","avatar_url":"https://avatars2.githubusercontent.com/u/2070843?v=4","gravatar_id":"","url":"https://api.github.com/users/geekpete","html_url":"https://github.com/geekpete","followers_url":"https://api.github.com/users/geekpete/followers","following_url":"https://api.github.com/users/geekpete/following{/other_user}","gists_url":"https://api.github.com/users/geekpete/gists{/gist_id}","starred_url":"https://api.github.com/users/geekpete/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geekpete/subscriptions","organizations_url":"https://api.github.com/users/geekpete/orgs","repos_url":"https://api.github.com/users/geekpete/repos","events_url":"https://api.github.com/users/geekpete/events{/privacy}","received_events_url":"https://api.github.com/users/geekpete/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"assignees":[{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2016-11-03T06:48:43Z","updated_at":"2016-11-04T12:53:03Z","closed_at":"2016-11-04T12:53:03Z","author_association":"MEMBER","active_lock_reason":null,"body":"**Elasticsearch version**: \r\n5.0\r\n\r\n**Plugins installed**: \r\nWaiting on more info can backfill once collected.\r\n\r\n**JVM version**: \r\n1.8.x (waiting on confirmation)\r\n\r\n**OS version**:\r\nWaiting on more info\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nRunning a bool query with a range using \"now\" in the query throws an error due to the shard request cache refusing to cache it:\r\n\r\neg the range portion of a sample query:\r\n\r\n```\r\n        {\r\n          \"range\": {\r\n            \"sentAt\": {\r\n              \"from\": \"now-2M\",\r\n              \"to\": \"now-1M\",\r\n              \"include_lower\": true,\r\n              \"include_upper\": true,\r\n              \"boost\": 1\r\n            }\r\n          }\r\n        }\r\n```\r\nA full example query is here:\r\nhttps://gist.github.com/geekpete/9b9d61dea18a86b47ce6d85d3ed6b839\r\n\r\n**Steps to reproduce**:\r\n 1. Use elasticsearch 5.0\r\n 2. Run a range query (in this case was a bool query that used range\r\n 3. Receive a RemoteTransportException with \"features that prevent cachability are disabled on this context\":\r\n\r\n\r\n**Provide logs (if relevant)**:\r\n```\r\nRemoteTransportException[[ZRykcOY][XXXX:xxxx][indices:data/read/search[phase/fetch/id]]]; nested: FetchPhaseExecutionException[Fetch Failed [Failed to highlight field [message]]]; nested: ElasticsearchParseException[could not read the current timestamp]; nested: IllegalArgumentException[features that prevent cachability are disabled on this context]; \r\n```\r\n\r\nThe new version of Elasticsearch has the Shard Request Cache on by default and it's suggest that to avoid this error when using \"now\" in queries that the cache be disabled per-request, index-wide or cluster-wide:\r\nhttps://www.elastic.co/guide/en/elasticsearch/reference/5.0/shard-request-cache.html\r\n\r\nAn alternative to this behaviour might be to automatically not cache the requests that cannot be cached without throwing an error. Perhaps provide detail in the logs at debug level (or whatever level is suitable) whenever this occurs per request \"features detected that prevent cachability\" so that users can still debug when this is occurring such as when performance isn't good and the user expects that the requests are being cached.\r\n\r\n\r\n","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}