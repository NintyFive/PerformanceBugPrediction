{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/26244","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26244/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26244/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26244/events","html_url":"https://github.com/elastic/elasticsearch/issues/26244","id":250676296,"node_id":"MDU6SXNzdWUyNTA2NzYyOTY=","number":26244,"title":"Index with lots of fields consumes lot of memory","user":{"login":"yiguolei","id":9208457,"node_id":"MDQ6VXNlcjkyMDg0NTc=","avatar_url":"https://avatars2.githubusercontent.com/u/9208457?v=4","gravatar_id":"","url":"https://api.github.com/users/yiguolei","html_url":"https://github.com/yiguolei","followers_url":"https://api.github.com/users/yiguolei/followers","following_url":"https://api.github.com/users/yiguolei/following{/other_user}","gists_url":"https://api.github.com/users/yiguolei/gists{/gist_id}","starred_url":"https://api.github.com/users/yiguolei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yiguolei/subscriptions","organizations_url":"https://api.github.com/users/yiguolei/orgs","repos_url":"https://api.github.com/users/yiguolei/repos","events_url":"https://api.github.com/users/yiguolei/events{/privacy}","received_events_url":"https://api.github.com/users/yiguolei/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-08-16T15:53:47Z","updated_at":"2017-08-17T08:04:20Z","closed_at":"2017-08-16T16:02:17Z","author_association":"NONE","active_lock_reason":null,"body":"One of my index contains about 6000 fields, and I found the field info consumes lots of JVM memory. This is the jmap info:\r\n num     instances         bytes  class name\r\n   1:       6008442     4577941768  [B\r\n   2:       2792701     4396718000  [J\r\n   3:      35410100     3652501000  [C\r\n   4:      49411788     1581177216  java.util.HashMap$Entry\r\n   5:      35241631      845799144  java.lang.String\r\n   6:       6420067      790259072  [Ljava.util.HashMap$Entry;\r\n   7:      12440681      497627240  java.util.TreeMap$Entry\r\n   8:       6181515      494521200  org.apache.lucene.codecs.lucene410.Lucene410DocValuesProducer$NumericEntry\r\n   9:      17975247      431405928  org.elasticsearch.common.collect.ImmutableEntry\r\n  10:       4846348      348937056  org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput\r\n  11:      20881305      334100880  java.lang.Integer\r\n  12:       6502117      312101616  java.util.HashMap\r\n  13:       6307597      302764656  org.apache.lucene.index.FieldInfo\r\n  14:       6131061      196193952  java.util.Collections$UnmodifiableMap\r\n\r\nYou can see, there are 6307597  field infos, because there are about   1000 segments. Every field info contains a hashmap<string,string>， like `{PerFieldDocValuesFormat.format=Lucene410, PerFieldPostingsFormat.format=Lucene41, PerFieldPostingsFormat.suffix=0, PerFieldDocValuesFormat.suffix=0}` these strings consumes lot of memory.\r\n\r\nI think we could use a map for one segment to contains these values and in fieldinfo just maintains the pointer to these string values. I will reduce lots of memory.\r\n\r\nMy version is Elasticsearch 1.7.3 and Lucene version 4.10。 And I have checked Elasticsearch 2.3.3 and Lucene 5.x , it is the same issue.","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}