{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/55530","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55530/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55530/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55530/events","html_url":"https://github.com/elastic/elasticsearch/issues/55530","id":604026088,"node_id":"MDU6SXNzdWU2MDQwMjYwODg=","number":55530,"title":"Optimize translog writes by moving the older file deletes in trimUnreferencedReaders call outside the write lock.","user":{"login":"itiyamas","id":45985097,"node_id":"MDQ6VXNlcjQ1OTg1MDk3","avatar_url":"https://avatars3.githubusercontent.com/u/45985097?v=4","gravatar_id":"","url":"https://api.github.com/users/itiyamas","html_url":"https://github.com/itiyamas","followers_url":"https://api.github.com/users/itiyamas/followers","following_url":"https://api.github.com/users/itiyamas/following{/other_user}","gists_url":"https://api.github.com/users/itiyamas/gists{/gist_id}","starred_url":"https://api.github.com/users/itiyamas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/itiyamas/subscriptions","organizations_url":"https://api.github.com/users/itiyamas/orgs","repos_url":"https://api.github.com/users/itiyamas/repos","events_url":"https://api.github.com/users/itiyamas/events{/privacy}","received_events_url":"https://api.github.com/users/itiyamas/received_events","type":"User","site_admin":false},"labels":[{"id":836542781,"node_id":"MDU6TGFiZWw4MzY1NDI3ODE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Engine","name":":Distributed/Engine","color":"0e8a16","default":false,"description":"Anything around managing Lucene and the Translog in an open shard."}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-04-21T14:05:32Z","updated_at":"2020-04-22T13:08:07Z","closed_at":"2020-04-21T16:51:03Z","author_association":"NONE","active_lock_reason":null,"body":"TrimUnreferencedReaders call involves closing and removing old reader files and then updating the checkpoint of current writer to change minimum translog generation. Because the reader references are changed, we make this call under a writeLock to maintain consistency. However, the actual file deletes and file channel close need not be in the write lock once the references are switched and checkpoint updated. The recoverFromFiles can take care of it by deleting the older translog files. Also, the sync can be done once for a batch of files instead of doing it multiple times. This will reduce the total amount of time a writeLock is held.\r\nI did an experiment on ES version 7.4 on a single node i3.8xl. The nyc_taxis rally benchmark was used with a refresh interval of 30seconds and 50 bulk clients.\r\n\r\nHere are the results:\r\nThe total amount of writeLock time was reduced from close to 800-1000 ms to close to 20ms at a per minute level. This is for an i3.8xl instance which has a fast disk. I suppose the improvement would be higher for slower disks.\r\n\r\nThe overall improvement in indexing throughput is close to 1% by just moving the delete and channel close calls outside of the lock. The sync was also done just once instead of multiple times as we are anyway within the writeLock.\r\n\r\nLet me know if this makes sense.\r\n","closed_by":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"performed_via_github_app":null}