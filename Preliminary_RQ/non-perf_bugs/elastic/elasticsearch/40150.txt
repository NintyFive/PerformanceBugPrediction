{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/40150","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40150/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40150/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40150/events","html_url":"https://github.com/elastic/elasticsearch/issues/40150","id":422151598,"node_id":"MDU6SXNzdWU0MjIxNTE1OTg=","number":40150,"title":"Avoid blocking a thread waiting for connections","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"labels":[{"id":146854632,"node_id":"MDU6TGFiZWwxNDY4NTQ2MzI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Network","name":":Distributed/Network","color":"0e8a16","default":false,"description":"Http and internode communication implementations"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null},{"id":111053151,"node_id":"MDU6TGFiZWwxMTEwNTMxNTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/resiliency","name":"resiliency","color":"009800","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-03-18T10:49:49Z","updated_at":"2019-07-25T20:54:59Z","closed_at":"2019-07-25T20:54:59Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Today we block a thread waiting for connections to open. Threads are a precious resource, and opening a connection can be time-consuming if the remote node is unresponsive. Although #39629 mostly alleviates the effects seen in #28920, it is still possible that a poorly-timed attempt by the `NodeConnectionsService` to reconnect to all the known nodes in the cluster state could saturate the small-yet-important management threadpool in a network partition.\r\n\r\nIn #29023 we suggested creating a dedicated threadpool for connections, but then the work in #35144 brought us closer to being able to open these connections asynchronously and the idea of introducing a dedicated threadpool was dropped. However it's not yet possible to open a connection fully asynchronously, so there is still a risk of saturating a threadpool during a network partition.\r\n\r\nTo avoid losing track of this, here is a meta-issue which tracks the remaining places that need to work asynchronously:\r\n\r\n- [x] `ConnectionManager#internalOpenConnection`, `ConnectionManager#openConnection` and `ConnectionManager#connectToNode` (#42636)\r\n- [x] `TransportService#connectToNode` (#42636)\r\n- [x] `HandshakingTransportAddressConnector#connectToRemoteMasterNode` (#42636)\r\n- [x] `NodeConnectionsService#ConnectionTarget` (#44211)\r\n- [x] `Coordinator#handleJoinRequest` (#42636)\r\n- [x] `RemoteClusterConnection#ConnectHandler` (#44825)\r\n\r\nIn each case there are quite a few tests that will need adjusting, so I think it makes sense to break the work up like this.\r\n\r\nConnections are also opened by the transport client, but it seems less important to make these connections asynchronously.\r\n","closed_by":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"performed_via_github_app":null}