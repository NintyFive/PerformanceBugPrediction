{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/19787","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19787/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19787/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19787/events","html_url":"https://github.com/elastic/elasticsearch/issues/19787","id":169198394,"node_id":"MDU6SXNzdWUxNjkxOTgzOTQ=","number":19787,"title":"Can we somehow make the engine's LiveVersionMap tracking optional?","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars0.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","site_admin":false},"labels":[{"id":836542781,"node_id":"MDU6TGFiZWw4MzY1NDI3ODE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Engine","name":":Distributed/Engine","color":"0e8a16","default":false,"description":"Anything around managing Lucene and the Translog in an open shard."},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2016-08-03T18:19:26Z","updated_at":"2018-04-03T03:15:38Z","closed_at":"2018-04-03T01:10:15Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I'm opening this to discuss possible options:\n\nI've been scrutinizing ES indexing performance on the NYC taxi data set (1.2 B taxi rides, numerics heavy: http://www.nyc.gov/html/tlc/html/about/trip_record_data.shtml).\n\nThese documents are small (24 fields, though a bit sparse with ~23% cells missing) and are almost entirely numbers (indexed as points + doc values).\n\nAs a \"ceiling\" for indexing performance I also indexed the same data set using Lucene's \"thin wrapper\" demo server (http://github.com/mikemccand/luceneserver), indexing the same documents as efficiently as I know how (see `indexTaxis.py`).\n\nThe demo Lucene server has many differences vs. ES: it has no transaction log (does not periodically fsync), uses `addDocuments` not `updateDocument`, can index from a more compact documents source (190 GB CSV file, vs 512 GB json file for ES), does not add a costly `_uid` field (nor `_version`, `_type`) , uses a streaming bulk API, etc.  I disabled `_all` and `_source` in ES, but net/net ES is substantially slower than the demo Lucene server.\n\nSo, one big thing I noticed that is maybe a lowish hanging fruit is that ES loses a lot of its indexing buffer to `LiveVersionMap`: if I give ES 1 GB indexing buffer, and index into only 1 shard, and disable refresh, the version map is taking ~2/3 of that buffer, leaving only ~1/3 for Lucene's `IndexWriter`:\n\n```\nnode0: [2016-08-03 09:39:07,557][DEBUG][index.engine             ] [node0] [taxis][0] use refresh to write indexing buffer (heap size=[313.7mb]), to also clear version map (heap size=[730.3mb])\n```\n\nThis also means ES is necessarily doing periodic refresh when I didn't ask it to.\n\nThis is quite frustrating because I don't need optimistic concurrency here, nor real-time gets, nor refreshes.  However, I fear the version map might be required during recovery, to ensure when playing back indexing operations from the transaction log that they do not incorrectly overwrite newer indexing operations?  But then, this use case is also append-only, so maybe during recovery we could safely skip that, if the user turns on this new setting.\n\nThe version map makes an entry in a `HashMap` for each document indexed, and the entry stores non-trivial information, creating at least 4 new objects, holding longs/ints, etc.  If we can't make it turn-off-able maybe we should instead try to reduce its per-indexing-op overhead...\n","closed_by":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"performed_via_github_app":null}