[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/394086293","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-394086293","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":394086293,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NDA4NjI5Mw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-06-02T13:05:21Z","updated_at":"2018-06-02T13:05:21Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-security","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/400394064","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-400394064","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":400394064,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMDM5NDA2NA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2018-06-26T17:15:40Z","updated_at":"2018-06-26T17:15:40Z","author_association":"CONTRIBUTOR","body":"When we have discussed structured logging in the past, we had agreed to go down the path of structured logging instead of JSON because it is human readable yet machine parseable, and is more succinct.\r\n\r\nI think it'd be a shame to have to use JSON for the audit logs.  I understand the issues with escaping, and I don't think we want several regexes to parse different log files. Instead I'm thinking of something like: \r\n\r\n```\r\nCPU high [cpu:90%] on [node:abcdefg][ip:1.2.3.4]\r\n```\r\n\r\nSo we can extract the message plus each individual field using the same process for every log line.\r\n\r\n@rjernst You use structured logging in a previous job - you must have faced similar problems.  Any suggestions for this?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/400421058","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-400421058","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":400421058,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMDQyMTA1OA==","user":{"login":"albertzaharovits","id":4568420,"node_id":"MDQ6VXNlcjQ1Njg0MjA=","avatar_url":"https://avatars2.githubusercontent.com/u/4568420?v=4","gravatar_id":"","url":"https://api.github.com/users/albertzaharovits","html_url":"https://github.com/albertzaharovits","followers_url":"https://api.github.com/users/albertzaharovits/followers","following_url":"https://api.github.com/users/albertzaharovits/following{/other_user}","gists_url":"https://api.github.com/users/albertzaharovits/gists{/gist_id}","starred_url":"https://api.github.com/users/albertzaharovits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertzaharovits/subscriptions","organizations_url":"https://api.github.com/users/albertzaharovits/orgs","repos_url":"https://api.github.com/users/albertzaharovits/repos","events_url":"https://api.github.com/users/albertzaharovits/events{/privacy}","received_events_url":"https://api.github.com/users/albertzaharovits/received_events","type":"User","site_admin":false},"created_at":"2018-06-26T18:42:32Z","updated_at":"2018-06-26T18:42:32Z","author_association":"CONTRIBUTOR","body":"@clintongormley in the context of my pretentious lingo about petty matters, JSON is a structured logging example.\r\nWhat I think you mean is that in the past *templated* logging has been preferred over *structured* because of its conciseness and human readability.\r\n\r\nBasically the difference between *templated* and *structured* logging is if values are accompanied by the field name.\r\nThe example you propose is a novel breed of *templated* where values have field names. I haven't seen this before.\r\nWhat I've seen, is that entries have a \"message\" field that is free text to soothe the human soul.\r\nSo, using your example, this should look like this:\r\n```\r\n{ \"message\": \"CPU is high at 90% on node abcdefg with ip 1.2.3.4\",\r\n  \"cpu\": \"90%\",\r\n  \"node\": \"abcdefg\",\r\n  \"ip\": \"1.2.3.4\"\r\n}\r\n```\r\nThe JSON will **not** be nested, so a one line entry (unformatted with spaces)  should still be readable by the typical IT admin eye.\r\n\r\nI am leaning towards the flat JSON with the text \"message\" field because it is the canonical way (parsers don't require Regexp), although it loses on the conciseness field. WDYT?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/400440351","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-400440351","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":400440351,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMDQ0MDM1MQ==","user":{"login":"pcsanwald","id":163306,"node_id":"MDQ6VXNlcjE2MzMwNg==","avatar_url":"https://avatars1.githubusercontent.com/u/163306?v=4","gravatar_id":"","url":"https://api.github.com/users/pcsanwald","html_url":"https://github.com/pcsanwald","followers_url":"https://api.github.com/users/pcsanwald/followers","following_url":"https://api.github.com/users/pcsanwald/following{/other_user}","gists_url":"https://api.github.com/users/pcsanwald/gists{/gist_id}","starred_url":"https://api.github.com/users/pcsanwald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pcsanwald/subscriptions","organizations_url":"https://api.github.com/users/pcsanwald/orgs","repos_url":"https://api.github.com/users/pcsanwald/repos","events_url":"https://api.github.com/users/pcsanwald/events{/privacy}","received_events_url":"https://api.github.com/users/pcsanwald/received_events","type":"User","site_admin":false},"created_at":"2018-06-26T19:50:57Z","updated_at":"2018-06-26T19:57:16Z","author_association":"CONTRIBUTOR","body":"My personal experience here is that at my last job I used [winston](https://github.com/winstonjs/winston) using the default JSON formatting feeding into [papertrail](https://papertrailapp.com). I found the lack of conciseness to be extremely annoying, and as a business we never derived any particular value from the JSON structure. that is obviously anecdotal. I set it up that way because it seemed like a good idea at the time, but I would think twice before doing it again.\r\n\r\nAlso, since it's not trivial for things like postgres to log in JSON format, anyone using an alternate or additional log aggregation service is going to likely be dealing with templated logs regardless. And in the case of audit logging, there will very often be a 3rd party aggregation service involved somehow (certainly this was the case when I worked at a large investment bank).\r\n\r\nI'm a bit curious why we can't support both formats via config? ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/400441088","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-400441088","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":400441088,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMDQ0MTA4OA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2018-06-26T19:53:55Z","updated_at":"2018-06-26T19:53:55Z","author_association":"CONTRIBUTOR","body":"It's still not fantastically human readable, and we do want to optimise for readability so that sysadmins don't hate us at 3am.  The most important thing for me is that we use the same style of logging across all logs generated by Elasticsearch.  Think about what a stack trace would look like in JSON?  Awful!\r\n\r\n/cc @elastic/es-core-infra  for opinions.\r\n\r\n> I'm a bit curious why we can't support both formats via config?\r\n\r\nOf course this is a possibility, but it'd be much nicer to be able to satisfy both needs out of the box, so that centralised logging doesn't require config changes that then make local access unreadable.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/400449026","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-400449026","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":400449026,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMDQ0OTAyNg==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2018-06-26T20:22:52Z","updated_at":"2018-06-26T20:22:52Z","author_association":"MEMBER","body":"> @rjernst You use structured logging in a previous job - you must have faced similar problems. Any suggestions for this?\r\n\r\nI'm torn on which is more readable, json or text. In my previous use of structured logging, it was for search request timings (among other things). It was a multi line format with an end of record marker and became hard to read because it was packed together so tightly with no extra spacing. The format would roughly look something like:\r\n\r\n```\r\nDATE\r\npath=...\r\nip=...\r\ntimers=timer1:57,timer2:230\r\n...\r\nEOR\r\n```\r\n\r\nSo there was a general set of \"timers\" (which could change in code based on the request/parts of the code executed), and the times were always in milliseconds. I believe there were some other generalized keys with subkeys, but the timers I think is the most illustrative for my point: having types of the values based on structure (eg all subkeys of \"timers\") makes the server side a lot more flexible.\r\n\r\nObviously this could be in json as well, it would just be more verbose. In some cases (large entries), the json is probably easier to read (if pretty printing is used). I would just make sure in this case that the superfluous formatting (ie spaces/newlines) are removed before transferring the records.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/400450819","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-400450819","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":400450819,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMDQ1MDgxOQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2018-06-26T20:28:38Z","updated_at":"2018-06-26T20:28:38Z","author_association":"MEMBER","body":"I should also mention my use was a dedicated log for search requests, while I think part of our dilemma is we have multiple logs for different purposes that we are trying to have a unified format for. IMO logs with general messages should look different than request logs, etc.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/400536016","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-400536016","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":400536016,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMDUzNjAxNg==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-06-27T04:03:16Z","updated_at":"2018-06-27T04:03:16Z","author_association":"MEMBER","body":"I am concerned by the fact that this discussion is being driven on a targeted issue (structured logging for audit logging) rather than more broadly within Elasticsearch. Is there a reason that we are approaching this from this angle?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/400542204","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-400542204","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":400542204,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMDU0MjIwNA==","user":{"login":"albertzaharovits","id":4568420,"node_id":"MDQ6VXNlcjQ1Njg0MjA=","avatar_url":"https://avatars2.githubusercontent.com/u/4568420?v=4","gravatar_id":"","url":"https://api.github.com/users/albertzaharovits","html_url":"https://github.com/albertzaharovits","followers_url":"https://api.github.com/users/albertzaharovits/followers","following_url":"https://api.github.com/users/albertzaharovits/following{/other_user}","gists_url":"https://api.github.com/users/albertzaharovits/gists{/gist_id}","starred_url":"https://api.github.com/users/albertzaharovits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertzaharovits/subscriptions","organizations_url":"https://api.github.com/users/albertzaharovits/orgs","repos_url":"https://api.github.com/users/albertzaharovits/repos","events_url":"https://api.github.com/users/albertzaharovits/events{/privacy}","received_events_url":"https://api.github.com/users/albertzaharovits/received_events","type":"User","site_admin":false},"created_at":"2018-06-27T04:53:27Z","updated_at":"2018-06-27T04:53:39Z","author_association":"CONTRIBUTOR","body":"> Is there a reason that we are approaching this from this angle?\r\n\r\nI have tried to scope my work to achieve the removal of audit indexing https://github.com/elastic/elasticsearch/issues/29881. To that end, only logfile audit has to be machine readable so that it's easy to parse it (without utilizing multiple regexp). The topic did touched matters that are not audit logfile specific, such as stacktraces.\r\n\r\nIMO log formats can differ: request, slowlog, audit can have different formats, although I agree it would be desirable that **all logs** are templated or **all logs** are JSON-like. In the light of this, given that in the current implementation, we are mostly on the templated bandwagon with all the logs (and no JSON-like), **I am now swayed to the templated proposal that @clintongormley proposed, which has names for fields, so that a single regexp is required to parse all entries, and there is no possibility for multiple ones to overlap. It is also readable (entries are phrases instead of tabular) being alike to the general log.**\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/400589307","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-400589307","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":400589307,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMDU4OTMwNw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2018-06-27T08:35:06Z","updated_at":"2018-06-27T08:35:06Z","author_association":"CONTRIBUTOR","body":"> Is there a reason that we are approaching this from this angle?\r\n\r\nI think the only reason is that the audit log is the first one to get an overhaul, so it serves as a test case.\r\n\r\n> I am now swayed to the templated proposal\r\n\r\n@albertzaharovits I'm not saying we MUST go down this route, but I would appreciate at least some investigation to see if it is feasible.  We still have the escaping issue to sort out, but that may be as simple as escaping `:` and `]` to `\\:` and `:]`.\r\n\r\nIf this ends up proving too difficult or unusable, then I'm OK going back to the JSON route.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/400602591","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-400602591","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":400602591,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMDYwMjU5MQ==","user":{"login":"albertzaharovits","id":4568420,"node_id":"MDQ6VXNlcjQ1Njg0MjA=","avatar_url":"https://avatars2.githubusercontent.com/u/4568420?v=4","gravatar_id":"","url":"https://api.github.com/users/albertzaharovits","html_url":"https://github.com/albertzaharovits","followers_url":"https://api.github.com/users/albertzaharovits/followers","following_url":"https://api.github.com/users/albertzaharovits/following{/other_user}","gists_url":"https://api.github.com/users/albertzaharovits/gists{/gist_id}","starred_url":"https://api.github.com/users/albertzaharovits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertzaharovits/subscriptions","organizations_url":"https://api.github.com/users/albertzaharovits/orgs","repos_url":"https://api.github.com/users/albertzaharovits/repos","events_url":"https://api.github.com/users/albertzaharovits/events{/privacy}","received_events_url":"https://api.github.com/users/albertzaharovits/received_events","type":"User","site_admin":false},"created_at":"2018-06-27T09:16:00Z","updated_at":"2018-06-27T09:16:00Z","author_association":"CONTRIBUTOR","body":"\r\nGiven the \"Filebeat module for Elasticsearch\" effort https://github.com/elastic/beats/issues/5301, and specific to the audit logfile in https://github.com/elastic/beats/pull/7365 , I think @ruflin and @radoondas might help weighing in trade offs from an ingest perspective.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/402131784","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-402131784","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":402131784,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMjEzMTc4NA==","user":{"login":"ruflin","id":244900,"node_id":"MDQ6VXNlcjI0NDkwMA==","avatar_url":"https://avatars3.githubusercontent.com/u/244900?v=4","gravatar_id":"","url":"https://api.github.com/users/ruflin","html_url":"https://github.com/ruflin","followers_url":"https://api.github.com/users/ruflin/followers","following_url":"https://api.github.com/users/ruflin/following{/other_user}","gists_url":"https://api.github.com/users/ruflin/gists{/gist_id}","starred_url":"https://api.github.com/users/ruflin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruflin/subscriptions","organizations_url":"https://api.github.com/users/ruflin/orgs","repos_url":"https://api.github.com/users/ruflin/repos","events_url":"https://api.github.com/users/ruflin/events{/privacy}","received_events_url":"https://api.github.com/users/ruflin/received_events","type":"User","site_admin":false},"created_at":"2018-07-03T12:05:45Z","updated_at":"2018-07-03T12:05:45Z","author_association":"CONTRIBUTOR","body":"From an ingest perspective I would hope that any new format does not require to use grok patterns but that we can use dissect instead: https://www.elastic.co/guide/en/logstash/current/plugins-filters-dissect.html I'm linking to the Logstash docs as they are more extensive but the dissect implementations on the Beats and Logstash side are identical.\r\n\r\nJSON is nice from a machine perspective but also has it's downside which we see now in Kibana as we don't know in advance what fields will show up in the log line as any plugin can add it's own fields. For the unkown parts of a log line having it all in one field and let Elasticsearch tokenize it is very powerful.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/402178140","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-402178140","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":402178140,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMjE3ODE0MA==","user":{"login":"albertzaharovits","id":4568420,"node_id":"MDQ6VXNlcjQ1Njg0MjA=","avatar_url":"https://avatars2.githubusercontent.com/u/4568420?v=4","gravatar_id":"","url":"https://api.github.com/users/albertzaharovits","html_url":"https://github.com/albertzaharovits","followers_url":"https://api.github.com/users/albertzaharovits/followers","following_url":"https://api.github.com/users/albertzaharovits/following{/other_user}","gists_url":"https://api.github.com/users/albertzaharovits/gists{/gist_id}","starred_url":"https://api.github.com/users/albertzaharovits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertzaharovits/subscriptions","organizations_url":"https://api.github.com/users/albertzaharovits/orgs","repos_url":"https://api.github.com/users/albertzaharovits/repos","events_url":"https://api.github.com/users/albertzaharovits/events{/privacy}","received_events_url":"https://api.github.com/users/albertzaharovits/received_events","type":"User","site_admin":false},"created_at":"2018-07-03T14:31:02Z","updated_at":"2018-07-03T14:32:35Z","author_association":"CONTRIBUTOR","body":"I need to work on a POC, but I think we can meet all the demands, i.e. unambiguous and parsable by both man and machine. I think we can use `log4j 2`'s [PatternLayout](http://logging.apache.org/log4j/2.x/manual/layouts.html#PatternLayout) and [JSONLayout](https://logging.apache.org/log4j/2.x/manual/layouts.html#JSONLayout) , while ES generates [StringMapMessage](https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/StringMapMessage.html)s.\r\nThe idea is that audit logs will continue to be 'templated' (but unambiguous) and will be generated by the *PatternLayout*. They will be parsable with a grok pattern unfortunately. Logstash's dissect requires tabular format which I don't think is suitable here, entries vary wildly, the header will be too wide, ie. unreadable IMO.\r\nIf structured entries are *required* there will be a commented out section in the log4j conf file, which will enable (at run time) a new appender with a *JSONLayout*. This will be parsable by a machine without any pattern matching.\r\n\r\nworking on a POC, will come back with details!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/402449877","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-402449877","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":402449877,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMjQ0OTg3Nw==","user":{"login":"ruflin","id":244900,"node_id":"MDQ6VXNlcjI0NDkwMA==","avatar_url":"https://avatars3.githubusercontent.com/u/244900?v=4","gravatar_id":"","url":"https://api.github.com/users/ruflin","html_url":"https://github.com/ruflin","followers_url":"https://api.github.com/users/ruflin/followers","following_url":"https://api.github.com/users/ruflin/following{/other_user}","gists_url":"https://api.github.com/users/ruflin/gists{/gist_id}","starred_url":"https://api.github.com/users/ruflin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruflin/subscriptions","organizations_url":"https://api.github.com/users/ruflin/orgs","repos_url":"https://api.github.com/users/ruflin/repos","events_url":"https://api.github.com/users/ruflin/events{/privacy}","received_events_url":"https://api.github.com/users/ruflin/received_events","type":"User","site_admin":false},"created_at":"2018-07-04T11:22:35Z","updated_at":"2018-07-04T11:22:35Z","author_association":"CONTRIBUTOR","body":"Filebeat will have to support whatever the default is. So even if we have JSON option which is off by default it will mean Filebeat has to implement and maintain the grok patterns.\r\n\r\nOne thing we started experimenting with is mixing grok and dissect. Doing all the basic work with dissect and only have a simple grok patterns for the parts which can't be covered by dissect. \r\n\r\nLooking forward to the POC.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/411743994","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-411743994","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":411743994,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTc0Mzk5NA==","user":{"login":"albertzaharovits","id":4568420,"node_id":"MDQ6VXNlcjQ1Njg0MjA=","avatar_url":"https://avatars2.githubusercontent.com/u/4568420?v=4","gravatar_id":"","url":"https://api.github.com/users/albertzaharovits","html_url":"https://github.com/albertzaharovits","followers_url":"https://api.github.com/users/albertzaharovits/followers","following_url":"https://api.github.com/users/albertzaharovits/following{/other_user}","gists_url":"https://api.github.com/users/albertzaharovits/gists{/gist_id}","starred_url":"https://api.github.com/users/albertzaharovits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertzaharovits/subscriptions","organizations_url":"https://api.github.com/users/albertzaharovits/orgs","repos_url":"https://api.github.com/users/albertzaharovits/repos","events_url":"https://api.github.com/users/albertzaharovits/events{/privacy}","received_events_url":"https://api.github.com/users/albertzaharovits/received_events","type":"User","site_admin":false},"created_at":"2018-08-09T12:43:18Z","updated_at":"2018-08-09T12:50:27Z","author_association":"CONTRIBUTOR","body":"The structured audit log events PR https://github.com/elastic/elasticsearch/pull/31931 is plodding forward and I can now run most tests. That PR constructs audit event entries as log4j's `StringMapMessage` instead of plain java `String`. This aims for the best flexibility in terms of the actual final format of the event, which is delegated to [log4j layouts](https://logging.apache.org/log4j/2.x/manual/layouts.html) .\r\n\r\nAfter some internal mulling over the most clear and extensible log event format, I wish to gather some external input on this matter.\r\n\r\n**In a few words, I think JSON structured entries for the audit log is the most concise and readable format, even considering that it is read exclusively by humans. In addition, the real value comes from easy machine ingestion. This is in contrast to the other proposed format of 'templated' entries, i.e. entries with values interspersed with text.\r\nWhat follows is my reasoning.**\r\n\r\nForeword:\r\nThis is all a matter of taste and educated opinions, there is no good and bad answer. We just have to agree on a **default** log line format which, by touching only log4j config files and not the code, can be changed by the administrator. Ideally opinions should be weighted by the respective operational experience, yet all input is valuable!! (i.e. the weight coefficient is very small 😁 )\r\n\r\nI think it's best if I start with some examples of the current entry format followed by the proposed entry format. Also, it's worth keeping in mind that the audit log trail **is a separate file** from all the other logs.\r\n\r\nCurrent audit events (with randomization):\r\n```\r\n[transport] [access_granted]       origin_type=[rest], origin_address=[127.0.0.1], principal=[_username], realm=[authRealm], roles=[fVrd], action=[_action], request=[MockMessage], opaque_id=[xUXGgzAcIa]\r\n[transport] [anonymous_access_denied]      origin_type=[rest], origin_address=[127.0.0.1], action=[_action], request=[MockMessage], opaque_id=[xUXGgzAcIa]\r\n[transport] [authentication_failed]        origin_type=[rest], origin_address=[127.0.0.1], principal= _principal], action=[_action], request=[MockMessage], opaque_id=[xUXGgzAcIa]\r\n[] [rest] [realm_authentication_failed]    realm=[_realm], origin_address=[::1], principal=[_principal], uri=[_uri], opaque_id=[NiPseBvEEw], request_body=[]\r\n[0.0.0.0:8] [] [rest] [anonymous_access_denied]    origin_address=[127.0.0.1], uri=[_uri], opaque_id=[moFIRdIcWA], request_body=[]\r\n[transport] [anonymous_access_denied]      origin_type=[local_node], origin_address=[0.0.0.0:9], action=[_action], request=[MockMessage]\r\n[0.0.0.0:11] [transport] [access_granted]  origin_type=[rest], origin_address=[127.0.0.1], principal=[_system], realm=[authRealm], roles=[uw], action=[internal:_action], indices=[idx1,idx2], request=[MockIndicesRequest], opaque_id=[liGwWHzFtE]\r\n[transport] [authentication_failed]        origin_type=[rest], origin_address=[127.0.0.1], action=[_action], request=[MockIndicesRequest], opaque_id=[xUXGgzAcIa]\r\n[transport] [access_denied]        origin_type=[rest], origin_address=[127.0.0.1], principal=[_username], realm=[authRealm], roles=[fVrd], action=[_action], request=[MockIndicesRequest], opaque_id=[xUXGgzAcIa]\r\n[0.0.0.0:14] [rest] [authentication_success]       principal=[running as], run_by_principal=[_username], realm=[_realm], uri=[_uri], params=[{foo=bar}], request_body=[{ \"key\": \"value\" ]\r\n```\r\nProposed audit events:\r\n```\r\n{action=\"_action/bar\", event.action=\"access_denied\", event.category=\"elasticsearch-audit\", event.type=\"transport\", host.ip=\"0.0.0.0:1\", opaque_id=\"Up\", origin.address=\"127.0.0.1\", origin.type=\"rest\" request.name=\"MockMessage\", user.name=\"running_as\", user.realm=\"lookRealm\", user.roles=\"xusDS\", user.run_by.name=\"_username\", user.run_by.realm=\"authRealm\"}\r\n{event.action=\"connection_granted\", event.category=\"elasticsearch-audit\", event.type=\"ip_filter\", opaque_id=\"Zpet\", origin.address=\"127.0.0.1\", origin.type=\"ip_filter\", rule=\"allow default:accept_all\", transport.profile=\"lwVSs\"}\r\n{action=\"internal:_action\", event.action=\"access_granted\", event.category=\"elasticsearch-audit\", event.type=\"transport\", opaque_id=\"dHiE\", origin.address=\"0.0.0.0:3\", origin.type=\"local_node\", request.name=\"MockMessage\", user.name=\"running_as\", user.realm=\"lookRealm\", user.roles=\"IShQaX\", user.run_by.name=\"_username\", user.run_by.realm=\"authRealm\"}\r\n{action=\"_action\", event.action=\"access_granted\", event.category=\"elasticsearch-audit\", event.type=\"transport\", host.ip=\"0.0.0.0:7\", indices=\"idx1,idx2\", origin.address=\"127.0.0.1\", origin.type=\"rest\", request.name=\"MockIndicesRequest\", user.name=\"_username\", user.realm=\"authRealm\", user.roles=\"araSL\"}\r\n{action=\"_action\", event.action=\"authentication_failed\", event.category=\"elasticsearch-audit\", event.type=\"transport\", host.ip=\"0.0.0.0:9\", origin.address=\"127.0.0.1\", origin.type=\"rest\", request.name=\"MockMessage\", user.name=\"_principal\"}\r\n{action=\"_action\", event.action=\"access_granted\", event.category=\"elasticsearch-audit\", event.type=\"transport\", host.ip=\"0.0.0.0:9\", origin.address=\"127.0.0.1\", origin.type=\"rest\", request.name=\"MockMessage\", user.name=\"running_as\", user.realm=\"lookRealm\", user.roles=\"EJ\", user.run_by.name=\"_username\", user.run_by.realm=\"authRealm\"}\r\n{action=\"_action\", event.action=\"access_denied\", event.category=\"elasticsearch-audit\", event.type=\"transport\", host.ip=\"0.0.0.0:9\", origin.address=\"127.0.0.1\", origin.type=\"rest\", request.name=\"MockMessage\", user.name=\"running_as\", user.realm=\"lookRealm\", user.roles=\"EJ\", user.run_by.name=\"_username\", user.run_by.realm=\"authRealm\"}\r\n{action=\"_action\", event.action=\"run_as_granted\", event.category=\"elasticsearch-audit\", event.type=\"transport\", host.ip=\"0.0.0.0:9\", origin.address=\"127.0.0.1\", origin.type=\"rest\", request.name=\"MockMessage\", user.name=\"_username\", user.realm=\"authRealm\", user.roles=\"EJ\", user.run_as.name=\"_username\"}\r\n{action=\"_action\", event.action=\"run_as_denied\", event.category=\"elasticsearch-audit\", event.type=\"transport\", host.ip=\"0.0.0.0:9\", origin.address=\"127.0.0.1\", origin.type=\"rest\", request.name=\"MockMessage\", user.name=\"_username\", user.realm=\"authRealm\", user.roles=\"EJ\", user.run_as.name=\"running_as\", user.run_as.realm=\"lookRealm\"}\r\n```\r\nSome things to note about the proposed alternative:\r\n- all fields are named\r\n- names of fields are (should be) [ecs](https://github.com/elastic/ecs) compatible \r\n- any field with an empty value is not printed\r\n- entries vary wildly in the number and types of fields\r\n- `origin.*` field although redundant at times is ecs compatible and adds consistency\r\n\r\nMy argumentation rests on the opinion that templated entries (that have text interspersed between these values) do not add value and on the contrary might hurt the eye of the human administrator. For example, for the `run_as_denied` event; trying to put `event.action=\"run_as_denied\"`, `event.type=\"transport\"`, `origin.address=\"127.0.0.1\"`, `origin.type=\"rest\"`, `user.name=\"_username\"`, `user.realm=\"authRealm\"`, `user.roles=\"EJ\"`, `user.run_as.name=\"running_as\"`, `user.run_as.realm=\"lookRealm\"` in a phrase on the lines with: \r\n> username `_username` from realm `authRealm` with roles `EJ` has been denied run as for the user `running_as` from realm `lookRealm` from a request over the `transport` channel with the remote endpoint having the address `127.0.0.1`.\r\n\r\nIt is not really an improvement. Maybe, for a first time user that had not heard about `run as` before, it might. But this rookie user is not someone we should optimize for. This log is very verbose and consulted rarely by the naked eye. After seeing the phrase a few times, the eye instinctively jumps between the templated values, ignoring the filling words in between. Ignoring words is safe, but it can lead to jumbling entries in the head and confusion since such phrases are heterogeneous, and they might look alike one to another. I think that the human might wish to be able to use `jq` (equivalent of `sed`) than to strain his eyes over phrases, even though upon seeing an event type for the first time it might spend 10 seconds more to understand it.\r\n\r\nI might agree that we could add another field to the JSON proposed format containing a proper phrase. But again, I don't see the value, but maybe I am too deep into this stuff and it's just my narrow vision on the subject.\r\n\r\nI want to conclude by underscoring that this trail should be in a separate file, with different rotation and ingestion preferences. It does not contain stacktraces or suggestions that human (users or administrators) should follow.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/411747648","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-411747648","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":411747648,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTc0NzY0OA==","user":{"login":"ruflin","id":244900,"node_id":"MDQ6VXNlcjI0NDkwMA==","avatar_url":"https://avatars3.githubusercontent.com/u/244900?v=4","gravatar_id":"","url":"https://api.github.com/users/ruflin","html_url":"https://github.com/ruflin","followers_url":"https://api.github.com/users/ruflin/followers","following_url":"https://api.github.com/users/ruflin/following{/other_user}","gists_url":"https://api.github.com/users/ruflin/gists{/gist_id}","starred_url":"https://api.github.com/users/ruflin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruflin/subscriptions","organizations_url":"https://api.github.com/users/ruflin/orgs","repos_url":"https://api.github.com/users/ruflin/repos","events_url":"https://api.github.com/users/ruflin/events{/privacy}","received_events_url":"https://api.github.com/users/ruflin/received_events","type":"User","site_admin":false},"created_at":"2018-08-09T12:55:56Z","updated_at":"2018-08-09T12:55:56Z","author_association":"CONTRIBUTOR","body":"There is an other argument for using `json` I recently stumbled over. ES is more and more often run inside Docker. A docker container normally only has two outputs: stdout and stderr. In most cases logs are consume through this outputs (yes, there are alternative options). This causes a problem for most services which have more then 1-2 different logs. Assuming in Docker all logs are sent out through stdout, having JSON makes it for log collectors like Filebeat really simple to differentiate the events for example based on an additional filed `type: audit` or similar and use the appropriate processors. For example: `if type == \"audit\": remove fields x,yz`.\r\n\r\nI think there is also an opportunity on the UI side to make JSON logs more human readable friendly to get the best of both worlds.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/411788505","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-411788505","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":411788505,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTc4ODUwNQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2018-08-09T15:00:13Z","updated_at":"2018-08-09T15:00:13Z","author_association":"CONTRIBUTOR","body":"Just had a chat with @albertzaharovits and I agree that the templated approach is a poor cousin to just using JSON in the case of the audit log.  Ideally, I'd like to keep some human readability by having eg the timestamp and severity as the first two positional arguments, followed by the JSON string.\r\n\r\n@ruflin how feasible would it be to parse a format like this in Beats?\r\n\r\n```\r\n[2018-08-08T19:20:01,251][INFO ][{\"action\":\"_action/bar\", \"event.action\":\"access_denied\", \"event.category\":\"elasticsearch-audit\", \"event.type\":\"transport\", \"host.ip\":\"0.0.0.0:1\", \"opaque_id\":\"Up\", \"origin.address\":\"127.0.0.1\", \"origin.type\":\"rest\" \"request.name\":\"MockMessage\", \"user.name\":\"running_as\", \"user.realm\":\"lookRealm\", \"user.roles\":\"xusDS\", \"user.run_by.name\":\"_username\", \"user.run_by.realm\":\"authRealm\"}]\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/411867696","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-411867696","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":411867696,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTg2NzY5Ng==","user":{"login":"ruflin","id":244900,"node_id":"MDQ6VXNlcjI0NDkwMA==","avatar_url":"https://avatars3.githubusercontent.com/u/244900?v=4","gravatar_id":"","url":"https://api.github.com/users/ruflin","html_url":"https://github.com/ruflin","followers_url":"https://api.github.com/users/ruflin/followers","following_url":"https://api.github.com/users/ruflin/following{/other_user}","gists_url":"https://api.github.com/users/ruflin/gists{/gist_id}","starred_url":"https://api.github.com/users/ruflin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruflin/subscriptions","organizations_url":"https://api.github.com/users/ruflin/orgs","repos_url":"https://api.github.com/users/ruflin/repos","events_url":"https://api.github.com/users/ruflin/events{/privacy}","received_events_url":"https://api.github.com/users/ruflin/received_events","type":"User","site_admin":false},"created_at":"2018-08-09T19:20:17Z","updated_at":"2018-08-09T19:23:31Z","author_association":"CONTRIBUTOR","body":"This should definitively be doable. Haven't tested it but I think a processor would look as following on the Beats side:\r\n\r\n```\r\nprocessors:\r\n- dissect:\r\n    tokenizer: \"[%{@timestamp}][%{log.level}\"][%{json.data}\"]\r\n    field: \"message\"\r\n    target_prefix: \"\"\r\n - decode_json_fields:\r\n    fields: \"json.data\"\r\n    target: \"elasticsearch.audit\"\r\n```\r\n\r\nNote: Are the [] brackets for the last part needed? Was just thinking that things could become more complicated if there is a ] inside the json somewhere.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/411965380","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-411965380","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":411965380,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTk2NTM4MA==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2018-08-10T03:33:10Z","updated_at":"2018-08-10T03:33:10Z","author_association":"CONTRIBUTOR","body":"If we take the JSON path, I think it would be helpful (if possible) to make sure the keys are ordered in a logical way.\r\nTo my thinking that would be things like `event.action` and `user.name` being early in the message and things like  `host.ip` and `event.category` being at the end.\r\nI'm sure there's a bunch of different arguments that could be made, and I don't want to bike-shed it, but trying to make it readable from left-to-right would be very helpful and random order would be absolutely terrible.\r\n\r\n ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/413219915","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-413219915","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":413219915,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzIxOTkxNQ==","user":{"login":"albertzaharovits","id":4568420,"node_id":"MDQ6VXNlcjQ1Njg0MjA=","avatar_url":"https://avatars2.githubusercontent.com/u/4568420?v=4","gravatar_id":"","url":"https://api.github.com/users/albertzaharovits","html_url":"https://github.com/albertzaharovits","followers_url":"https://api.github.com/users/albertzaharovits/followers","following_url":"https://api.github.com/users/albertzaharovits/following{/other_user}","gists_url":"https://api.github.com/users/albertzaharovits/gists{/gist_id}","starred_url":"https://api.github.com/users/albertzaharovits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertzaharovits/subscriptions","organizations_url":"https://api.github.com/users/albertzaharovits/orgs","repos_url":"https://api.github.com/users/albertzaharovits/repos","events_url":"https://api.github.com/users/albertzaharovits/events{/privacy}","received_events_url":"https://api.github.com/users/albertzaharovits/received_events","type":"User","site_admin":false},"created_at":"2018-08-15T14:43:52Z","updated_at":"2018-08-16T05:51:57Z","author_association":"CONTRIBUTOR","body":"Here is a generous assortment of log lines, as they are generated in the https://github.com/elastic/elasticsearch/pull/31931 PR :\r\n```\r\n{\"timestamp\":\"2018-08-15T20:53:50,372\", \"event.type\":\"transport\", \"event.action\":\"authentication_failed\", \"origin.type\":\"rest\", \"origin.address\":\"127.0.0.1\", \"action\":\"_action\", \"request.name\":\"MockIndicesRequest\", \"indices\":\"idx1,idx2\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,440\", \"host.ip\":\"0.0.0.0:3\", \"event.type\":\"transport\", \"event.action\":\"access_denied\", \"user.name\":\"_username\", \"user.realm\":\"authRealm\", \"user.roles\":\"pqNltU\", \"origin.type\":\"rest\", \"origin.address\":\"127.0.0.1\", \"action\":\"_action/bar\", \"request.name\":\"MockIndicesRequest\", \"indices\":\"idx1,idx2\", \"opaque_id\":\"Ce\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,485\", \"event.type\":\"transport\", \"event.action\":\"anonymous_access_denied\", \"origin.type\":\"transport\", \"origin.address\":\"0.0.0.0\", \"action\":\"_action\", \"request.name\":\"MockMessage\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,490\", \"event.type\":\"transport\", \"event.action\":\"authentication_failed\", \"user.name\":\"_principal\", \"origin.type\":\"transport\", \"origin.address\":\"0.0.0.0\", \"action\":\"_action\", \"request.name\":\"MockMessage\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,491\", \"event.type\":\"transport\", \"event.action\":\"authentication_failed\", \"origin.type\":\"transport\", \"origin.address\":\"0.0.0.0\", \"action\":\"_action\", \"request.name\":\"MockMessage\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,492\", \"event.type\":\"transport\", \"event.action\":\"realm_authentication_failed\", \"user.name\":\"_principal\", \"origin.type\":\"transport\", \"origin.address\":\"0.0.0.0\", \"realm\":\"IlHf\", \"action\":\"_action\", \"request.name\":\"MockMessage\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,776\", \"event.type\":\"transport\", \"event.action\":\"access_granted\", \"user.name\":\"_username\", \"user.realm\":\"authRealm\", \"user.roles\":\"xo\", \"origin.type\":\"transport\", \"origin.address\":\"0.0.0.0\", \"action\":\"_action\", \"request.name\":\"MockMessage\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,777\", \"event.type\":\"transport\", \"event.action\":\"access_denied\", \"user.name\":\"_username\", \"user.realm\":\"authRealm\", \"user.roles\":\"xo\", \"origin.type\":\"transport\", \"origin.address\":\"0.0.0.0\", \"action\":\"_action\", \"request.name\":\"MockMessage\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,778\", \"event.type\":\"transport\", \"event.action\":\"tampered_request\", \"origin.type\":\"transport\", \"origin.address\":\"0.0.0.0\", \"action\":\"_action\", \"request.name\":\"MockMessage\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,778\", \"event.type\":\"transport\", \"event.action\":\"tampered_request\", \"user.name\":\"_username\", \"origin.type\":\"transport\", \"origin.address\":\"0.0.0.0\", \"action\":\"_action\", \"request.name\":\"MockMessage\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,779\", \"event.type\":\"transport\", \"event.action\":\"run_as_granted\", \"user.name\":\"_username\", \"user.run_as.name\":\"_username\", \"user.realm\":\"authRealm\", \"user.roles\":\"xo\", \"origin.type\":\"transport\", \"origin.address\":\"0.0.0.0\", \"action\":\"_action\", \"request.name\":\"MockMessage\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,780\", \"event.type\":\"transport\", \"event.action\":\"run_as_denied\", \"user.name\":\"_username\", \"user.run_as.name\":\"running_as\", \"user.realm\":\"authRealm\", \"user.run_as.realm\":\"lookRealm\", \"user.roles\":\"xo\", \"origin.type\":\"transport\", \"origin.address\":\"0.0.0.0\", \"action\":\"_action\", \"request.name\":\"MockMessage\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,781\", \"event.type\":\"transport\", \"event.action\":\"authentication_success\", \"user.name\":\"_username\", \"origin.type\":\"transport\", \"origin.address\":\"0.0.0.0\", \"realm\":\"IlHf\", \"action\":\"_action\", \"request.name\":\"MockMessage\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,781\", \"event.type\":\"transport\", \"event.action\":\"anonymous_access_denied\", \"origin.type\":\"local_node\", \"origin.address\":\"0.0.0.0:6\", \"action\":\"_action\", \"request.name\":\"MockIndicesRequest\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,785\", \"event.type\":\"transport\", \"event.action\":\"tampered_request\", \"origin.type\":\"local_node\", \"origin.address\":\"0.0.0.0:6\", \"action\":\"_action\", \"request.name\":\"MockIndicesRequest\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,785\", \"event.type\":\"transport\", \"event.action\":\"tampered_request\", \"user.name\":\"_username\", \"origin.type\":\"local_node\", \"origin.address\":\"0.0.0.0:6\", \"action\":\"_action\", \"request.name\":\"MockIndicesRequest\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,791\", \"event.type\":\"transport\", \"event.action\":\"tampered_request\", \"origin.type\":\"local_node\", \"origin.address\":\"0.0.0.0:6\", \"action\":\"_action\", \"request.name\":\"MockIndicesRequest\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,792\", \"event.type\":\"transport\", \"event.action\":\"tampered_request\", \"user.name\":\"_username\", \"origin.type\":\"local_node\", \"origin.address\":\"0.0.0.0:6\", \"action\":\"_action\", \"request.name\":\"MockIndicesRequest\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,792\", \"event.type\":\"transport\", \"event.action\":\"run_as_granted\", \"user.name\":\"_username\", \"user.run_as.name\":\"_username\", \"user.realm\":\"authRealm\", \"user.roles\":\"xo\", \"origin.type\":\"local_node\", \"origin.address\":\"0.0.0.0:6\", \"action\":\"_action\", \"request.name\":\"MockIndicesRequest\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,793\", \"event.type\":\"transport\", \"event.action\":\"run_as_denied\", \"user.name\":\"_username\", \"user.run_as.name\":\"running_as\", \"user.realm\":\"authRealm\", \"user.run_as.realm\":\"lookRealm\", \"user.roles\":\"xo\", \"origin.type\":\"local_node\", \"origin.address\":\"0.0.0.0:6\", \"action\":\"_action\", \"request.name\":\"MockIndicesRequest\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,793\", \"event.type\":\"transport\", \"event.action\":\"authentication_success\", \"user.name\":\"_username\", \"origin.type\":\"local_node\", \"origin.address\":\"0.0.0.0:6\", \"realm\":\"IlHf\", \"action\":\"_action\", \"request.name\":\"MockIndicesRequest\", \"opaque_id\":\"oh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,817\", \"event.type\":\"rest\", \"event.action\":\"authentication_failed\", \"user.name\":\"_principal\", \"origin.type\":\"rest\", \"origin.address\":\"::1\", \"url.path\":\"_uri\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,849\", \"event.type\":\"transport\", \"event.action\":\"access_granted\", \"user.name\":\"_username\", \"user.realm\":\"authRealm\", \"user.roles\":\"hBRjWv\", \"origin.type\":\"transport\", \"origin.address\":\"127.0.0.1\", \"action\":\"internal:_action\", \"request.name\":\"MockMessage\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,865\", \"event.type\":\"rest\", \"event.action\":\"tampered_request\", \"origin.type\":\"rest\", \"origin.address\":\"::1\", \"url.path\":\"_uri\", \"url.query\":\"_param=baz\", \"opaque_id\":\"eHXy\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,902\", \"event.type\":\"transport\", \"event.action\":\"realm_authentication_failed\", \"user.name\":\"_principal\", \"origin.type\":\"rest\", \"origin.address\":\"127.0.0.1\", \"realm\":\"y\", \"action\":\"_action\", \"request.name\":\"MockMessage\", \"opaque_id\":\"jmzI\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,960\", \"event.type\":\"transport\", \"event.action\":\"access_granted\", \"user.name\":\"_system\", \"user.realm\":\"_reserved\", \"user.roles\":\"ZbLX\", \"origin.type\":\"rest\", \"origin.address\":\"127.0.0.1\", \"action\":\"internal:_action\", \"request.name\":\"MockIndicesRequest\", \"indices\":\"idx1,idx2\", \"opaque_id\":\"rV\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:50,973\", \"event.type\":\"transport\", \"event.action\":\"anonymous_access_denied\", \"origin.type\":\"rest\", \"origin.address\":\"127.0.0.1\", \"action\":\"_action\", \"request.name\":\"MockMessage\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:51,019\", \"host.ip\":\"0.0.0.0:15\", \"event.type\":\"transport\", \"event.action\":\"run_as_granted\", \"user.name\":\"_username\", \"user.run_as.name\":\"running as\", \"user.realm\":\"authRealm\", \"user.run_as.realm\":\"lookRealm\", \"user.roles\":\"L\", \"origin.type\":\"local_node\", \"origin.address\":\"0.0.0.0:15\", \"action\":\"_action\", \"request.name\":\"MockMessage\", \"opaque_id\":\"woq\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:51,046\", \"event.type\":\"ip_filter\", \"event.action\":\"connection_granted\", \"origin.type\":\"ip_filter\", \"origin.address\":\"127.0.0.1\", \"transport.profile\":\"IEJu\", \"rule\":\"allow default:accept_all\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:51,058\", \"event.type\":\"transport\", \"event.action\":\"authentication_success\", \"user.name\":\"_username\", \"origin.type\":\"transport\", \"origin.address\":\"127.0.0.1\", \"realm\":\"GZkVN\", \"action\":\"_action\", \"request.name\":\"MockMessage\", \"opaque_id\":\"r\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:51,076\", \"event.type\":\"rest\", \"event.action\":\"realm_authentication_failed\", \"user.name\":\"_principal\", \"origin.type\":\"rest\", \"origin.address\":\"127.0.0.1\", \"realm\":\"usmY\", \"url.path\":\"_uri\", \"url.query\":\"_param=baz\", \"opaque_id\":\"IQgi\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:51,087\", \"event.type\":\"transport\", \"event.action\":\"access_granted\", \"user.name\":\"running_as\", \"user.run_by.name\":\"_username\", \"user.realm\":\"lookRealm\", \"user.run_by.realm\":\"authRealm\", \"user.roles\":\"FHHq\", \"origin.type\":\"transport\", \"origin.address\":\"0.0.0.0\", \"action\":\"_action\", \"request.name\":\"MockIndicesRequest\", \"indices\":\"idx1,idx2\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:51,102\", \"host.ip\":\"0.0.0.0:21\", \"event.type\":\"ip_filter\", \"event.action\":\"connection_denied\", \"origin.type\":\"ip_filter\", \"origin.address\":\"127.0.0.1\", \"transport.profile\":\"wcvzs\", \"rule\":\"deny _all\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:51,120\", \"host.ip\":\"0.0.0.0:22\", \"event.type\":\"rest\", \"event.action\":\"authentication_success\", \"user.name\":\"_username\", \"origin.type\":\"rest\", \"origin.address\":\"127.0.0.1\", \"realm\":\"OX\", \"url.path\":\"_uri\", \"url.query\":\"foo=bar&evac=true\", \"request.body\":\"{ \\\"key\\\": \\\"value\\\" \", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:51,159\", \"host.ip\":\"0.0.0.0:23\", \"event.type\":\"rest\", \"event.action\":\"authentication_failed\", \"origin.type\":\"rest\", \"origin.address\":\"127.0.0.1\", \"url.path\":\"_uri\", \"url.query\":\"bar=baz\", \"opaque_id\":\"JQcU\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:51,185\", \"host.ip\":\"0.0.0.0:24\", \"event.type\":\"transport\", \"event.action\":\"authentication_failed\", \"user.name\":\"_principal\", \"origin.type\":\"transport\", \"origin.address\":\"127.0.0.1\", \"action\":\"_action\", \"request.name\":\"MockMessage\", \"opaque_id\":\"gAd\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:51,200\", \"event.type\":\"transport\", \"event.action\":\"tampered_request\", \"origin.type\":\"transport\", \"origin.address\":\"127.0.0.1\", \"action\":\"_action\", \"request.name\":\"MockMessage\", \"opaque_id\":\"Bh\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:51,214\", \"event.type\":\"transport\", \"event.action\":\"run_as_denied\", \"user.name\":\"_username\", \"user.run_as.name\":\"running as\", \"user.realm\":\"authRealm\", \"user.run_as.realm\":\"lookRealm\", \"user.roles\":\"dUbU\", \"origin.type\":\"rest\", \"origin.address\":\"127.0.0.1\", \"action\":\"_action\", \"request.name\":\"MockIndicesRequest\", \"indices\":\"idx1,idx2\", \"event.category\":\"elasticsearch-audit\"}\r\n{\"timestamp\":\"2018-08-15T20:53:51,227\", \"event.type\":\"rest\", \"event.action\":\"anonymous_access_denied\", \"origin.type\":\"rest\", \"origin.address\":\"127.0.0.1\", \"url.path\":\"_uri\", \"request.body\":\"{ \\\"key\\\": \\\"value\\\" \", \"event.category\":\"elasticsearch-audit\"}\r\n```\r\nThese are the complete formatted entries, there is no other preamble or sufix.\r\nA few things to note:\r\n- entries are structured, all event fields are of the `\"key\":\"value\"` form; there is no human friendly phrase message which binds all the values together.\r\n- entries are formatted as valid, flat (**no** nested objects), JSONs, each on a single line\r\n- **event fields are arranged** in a specified order via the `log4j2.properties` config file . This is achieved by formatting the event using the `PatternLayout` instead of `JSONLayout`. The field order, as well as the layout altogether, may be changed at runtime in the log4j conf file.\r\n- fields without values (`null` or `empty`) are not printed. This is to make good use of the structured format. If we were to print empty or missing values we would have reorganized the log as a wide table, with field names as table headers, and values would be positional, with placeholders for missing values, i.e. the usual tabular log format. However, entries here vary a lot in the set of fields, allegedly resulting in a too wide tabular format, populated with sparse entries. Therefore it is preferred to have structured entries.\r\n- `request.body` is printed as an ordinary JSON escaped string.\r\n\r\nBesides the low level questions, such as field names, order and data types, which are tracked in the  https://github.com/elastic/elasticsearch/pull/31931 PR, there is an important question still to be discussed:\r\n**Should this new format replace the existing format? Or should it be printed on a new file alongside the existing one? Is completely changing the format too much for a minor version upgrade? I know adding new fields to the log entries, between minors, is alright, but this is at a different level. Should we view this log as any other and therefore have no bwc binding?**","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/413783224","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-413783224","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":413783224,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzc4MzIyNA==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2018-08-17T07:34:55Z","updated_at":"2018-08-17T07:34:55Z","author_association":"CONTRIBUTOR","body":"I think we should be reluctant to make this sort of change to the `logfile` audit output in a minor release. I don't think it's a flat-out \"no way\", but we have other options and we should use them.\r\n\r\nI would lean towards:\r\n- a new output type (\"file\", or \"json-file\", or something)\r\n- name it \"{cluster}_audit.log\" rather than _access.log (so users can technically have both while they transition)\r\n- deprecate the \"logfile\" output with a view to removing it in either 7.0 or 8.0 depending on how generous we feel.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/414269180","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-414269180","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":414269180,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDI2OTE4MA==","user":{"login":"albertzaharovits","id":4568420,"node_id":"MDQ6VXNlcjQ1Njg0MjA=","avatar_url":"https://avatars2.githubusercontent.com/u/4568420?v=4","gravatar_id":"","url":"https://api.github.com/users/albertzaharovits","html_url":"https://github.com/albertzaharovits","followers_url":"https://api.github.com/users/albertzaharovits/followers","following_url":"https://api.github.com/users/albertzaharovits/following{/other_user}","gists_url":"https://api.github.com/users/albertzaharovits/gists{/gist_id}","starred_url":"https://api.github.com/users/albertzaharovits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertzaharovits/subscriptions","organizations_url":"https://api.github.com/users/albertzaharovits/orgs","repos_url":"https://api.github.com/users/albertzaharovits/repos","events_url":"https://api.github.com/users/albertzaharovits/events{/privacy}","received_events_url":"https://api.github.com/users/albertzaharovits/received_events","type":"User","site_admin":false},"created_at":"2018-08-20T10:22:44Z","updated_at":"2018-08-20T10:30:31Z","author_association":"CONTRIBUTOR","body":"I tend to agree with `we have other options and we should use them`.\r\n\r\nBut I don't like to have another `output type` because I think we can get away without writing code for this.\r\nInstead I propose we ship with two file appenders in the `log4j2.properties` file:\r\n1) the existing layout written to the  `_access.log` rolling file\r\n2) the new JSON layout written to the `_audit.log` rolling file (new file)\r\n\r\nEnabling both is probably suboptimal because of wasted resources. Ultimately nobody would use both. I think we should **enable the new appender only**, the previous one being commented out. This way we are more explicit that something changed  (the file is not there as opposed to the content format changed), and if this comes as a surprise (because of not reading the release change notes) users can switch on the previous behavior at runtime, changing the log4j file. If we're defaulting to enabling the existing format, and commenting out the new one, we are implicitly delaying it's adoption (untill we decide we don't want our stack to parse the existing format, since beats has to support the default), as I don't think users will like to tinker with log4j files if everything \"works\".\r\nEnabling both, although wastes resources, has zero impact on the users feeding on the file audit trail and allows beats to read structured entries soonest.\r\n\r\nIn a way, I propose to force the new format onto our users, and be very obvious about it, while at the same time, making it easy for them to keep using the deprecated format. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/414366582","html_url":"https://github.com/elastic/elasticsearch/issues/31046#issuecomment-414366582","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31046","id":414366582,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDM2NjU4Mg==","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"created_at":"2018-08-20T15:50:57Z","updated_at":"2018-08-20T15:50:57Z","author_association":"MEMBER","body":"> Enabling both, although wastes resources, has zero impact on the users feeding on the file audit trail and allows beats to read structured entries soonest.\r\n\r\nI suggest we ship with both outputs enabled for 6.x and remove the old output for 7. I think there is even a possibility that we can programmatically get the appenders for that logger, see if the old format is enabled, and log the deprecation message in 6.x. Existing consumers will work and the beats consumer will work as well with the downside of more disk usage and i/o.","performed_via_github_app":null}]