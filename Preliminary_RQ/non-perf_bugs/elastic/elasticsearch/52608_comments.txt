[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/589406789","html_url":"https://github.com/elastic/elasticsearch/issues/52608#issuecomment-589406789","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52608","id":589406789,"node_id":"MDEyOklzc3VlQ29tbWVudDU4OTQwNjc4OQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-02-20T23:25:39Z","updated_at":"2020-02-20T23:25:39Z","author_association":"COLLABORATOR","body":"Pinging @elastic/ml-core (:ml)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/589573087","html_url":"https://github.com/elastic/elasticsearch/issues/52608#issuecomment-589573087","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52608","id":589573087,"node_id":"MDEyOklzc3VlQ29tbWVudDU4OTU3MzA4Nw==","user":{"login":"davidkyle","id":2353640,"node_id":"MDQ6VXNlcjIzNTM2NDA=","avatar_url":"https://avatars1.githubusercontent.com/u/2353640?v=4","gravatar_id":"","url":"https://api.github.com/users/davidkyle","html_url":"https://github.com/davidkyle","followers_url":"https://api.github.com/users/davidkyle/followers","following_url":"https://api.github.com/users/davidkyle/following{/other_user}","gists_url":"https://api.github.com/users/davidkyle/gists{/gist_id}","starred_url":"https://api.github.com/users/davidkyle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidkyle/subscriptions","organizations_url":"https://api.github.com/users/davidkyle/orgs","repos_url":"https://api.github.com/users/davidkyle/repos","events_url":"https://api.github.com/users/davidkyle/events{/privacy}","received_events_url":"https://api.github.com/users/davidkyle/received_events","type":"User","site_admin":false},"created_at":"2020-02-21T09:30:57Z","updated_at":"2020-02-21T09:30:57Z","author_association":"MEMBER","body":"Thanks for raising this @mark-vieira the build link is missing I've added those details here:\r\n\r\nhttps://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+7.6+multijob-unix-compatibility/os=sles-15&&immutable/73/console\r\nhttps://gradle-enterprise.elastic.co/s/7u76m7hino3a6\r\nand [log](https://gradle-enterprise.elastic.co/s/7u76m7hino3a6/tests/lf2lfu4ufazso-de42uixmysp7e)\r\n\r\n```\r\n./gradlew ':x-pack:plugin:ml:internalClusterTest' --tests \"org.elasticsearch.xpack.ml.integration.MlDistributedFailureIT.testCloseUnassignedFailedJobAndStopUnassignedStoppingDatafeed\" \\\r\n  -Dtests.seed=2D1FFA30C2A5A434 \\\r\n  -Dtests.security.manager=true \\\r\n  -Dtests.locale=he-IL \\\r\n  -Dtests.timezone=Pacific/Tongatapu \\\r\n  -Dcompiler.java=13\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/589579989","html_url":"https://github.com/elastic/elasticsearch/issues/52608#issuecomment-589579989","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52608","id":589579989,"node_id":"MDEyOklzc3VlQ29tbWVudDU4OTU3OTk4OQ==","user":{"login":"davidkyle","id":2353640,"node_id":"MDQ6VXNlcjIzNTM2NDA=","avatar_url":"https://avatars1.githubusercontent.com/u/2353640?v=4","gravatar_id":"","url":"https://api.github.com/users/davidkyle","html_url":"https://github.com/davidkyle","followers_url":"https://api.github.com/users/davidkyle/followers","following_url":"https://api.github.com/users/davidkyle/following{/other_user}","gists_url":"https://api.github.com/users/davidkyle/gists{/gist_id}","starred_url":"https://api.github.com/users/davidkyle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidkyle/subscriptions","organizations_url":"https://api.github.com/users/davidkyle/orgs","repos_url":"https://api.github.com/users/davidkyle/repos","events_url":"https://api.github.com/users/davidkyle/events{/privacy}","received_events_url":"https://api.github.com/users/davidkyle/received_events","type":"User","site_admin":false},"created_at":"2020-02-21T09:49:15Z","updated_at":"2020-02-21T09:49:15Z","author_association":"MEMBER","body":"The NPE is in this code\r\n\r\n```        \r\nPersistentTasksCustomMetaData.PersistentTask<?> task = MlTasks.getDatafeedTask(datafeedId, tasks);\r\nUpdatePersistentTaskStatusAction.Request updatePersistentTaskStatusRequest =\r\n            new UpdatePersistentTaskStatusAction.Request(task.getId(), task.getAllocationId(), DatafeedState.STOPPING);       <-- NPE here\r\n```\r\n\r\n`task` must be null which means the datafeed has no task looking in the log we see the reason why.\r\n\r\n```\r\n[2020-02-21T12:00:01,140][WARN ][o.e.p.AllocatedPersistentTask] [node_tc4] task datafeed-test-stop-unassigned-datafeed-for-failed-job-datafeed failed with an exception\r\norg.elasticsearch.xpack.ml.datafeed.DatafeedJob$AnalysisProblemException: ElasticsearchStatusException[Cannot flush because job [test-stop-unassigned-datafeed-for-failed-job] does not have a corresponding autodetect process]\r\n\tat org.elasticsearch.xpack.ml.datafeed.DatafeedJob.flushJob(DatafeedJob.java:470) ~[main/:?]\r\n\tat org.elasticsearch.xpack.ml.datafeed.DatafeedJob.run(DatafeedJob.java:411) ~[main/:?]\r\n\tat org.elasticsearch.xpack.ml.datafeed.DatafeedJob.runRealtime(DatafeedJob.java:190) ~[main/:?]\r\n\tat org.elasticsearch.xpack.ml.datafeed.DatafeedManager$Holder.executeRealTime(DatafeedManager.java:421) [main/:?]\r\n\tat org.elasticsearch.xpack.ml.datafeed.DatafeedManager$Holder.access$600(DatafeedManager.java:304) [main/:?]\r\n\tat org.elasticsearch.xpack.ml.datafeed.DatafeedManager$3.doRun(DatafeedManager.java:234) [main/:?]\r\n...\r\n```\r\n\r\nFlush is a `TransportJobTaskAction` the request is directed to the node where the job is running but there is a tiny window where the job dies after the Transport Action has started but before flush has executed. The data feed correctly considers this a fatal error as there is no point continuing once the job has failed so the datafeed fails itself. This is not a problem as the errors are handled properly but the test does not expect this situation. \r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/589586556","html_url":"https://github.com/elastic/elasticsearch/issues/52608#issuecomment-589586556","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52608","id":589586556,"node_id":"MDEyOklzc3VlQ29tbWVudDU4OTU4NjU1Ng==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2020-02-21T10:06:52Z","updated_at":"2020-02-21T10:06:52Z","author_association":"CONTRIBUTOR","body":"This is a symptom of the way the test tries to simulate an incredibly unlikely situation by directly messing with task states as there is no easy way to create it (i.e. an unassigned `stopping` datafeed whose associated job is also unassigned and in the `failed` state).\r\n\r\nThe problem here would not happen in production code.  It is trying to set up the rare situation to test that the production code copes with that, but fails during the setup process.\r\n\r\nSince the test fails so rarely in this way and the alternatives for reliably creating an unassigned `stopping` datafeed whose associated job is also unassigned and in the `failed` state are basically non-existent I wonder if the best solution is just to catch the NPE and redo the entire test?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/594672152","html_url":"https://github.com/elastic/elasticsearch/issues/52608#issuecomment-594672152","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52608","id":594672152,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDY3MjE1Mg==","user":{"login":"mark-vieira","id":4106672,"node_id":"MDQ6VXNlcjQxMDY2NzI=","avatar_url":"https://avatars2.githubusercontent.com/u/4106672?v=4","gravatar_id":"","url":"https://api.github.com/users/mark-vieira","html_url":"https://github.com/mark-vieira","followers_url":"https://api.github.com/users/mark-vieira/followers","following_url":"https://api.github.com/users/mark-vieira/following{/other_user}","gists_url":"https://api.github.com/users/mark-vieira/gists{/gist_id}","starred_url":"https://api.github.com/users/mark-vieira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mark-vieira/subscriptions","organizations_url":"https://api.github.com/users/mark-vieira/orgs","repos_url":"https://api.github.com/users/mark-vieira/repos","events_url":"https://api.github.com/users/mark-vieira/events{/privacy}","received_events_url":"https://api.github.com/users/mark-vieira/received_events","type":"User","site_admin":false},"created_at":"2020-03-04T17:13:44Z","updated_at":"2020-03-04T17:13:44Z","author_association":"CONTRIBUTOR","body":"@davidkyle We got another failure here. It seems `assumeFalse` isn't resulting in the behavior we are looking for.\r\n\r\nhttps://gradle-enterprise.elastic.co/s/w7kppcm2ut4ay/tests/lf2lfu4ufazso-de42uixmysp7e?open-stacktraces=WzBd","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/594689785","html_url":"https://github.com/elastic/elasticsearch/issues/52608#issuecomment-594689785","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52608","id":594689785,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDY4OTc4NQ==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2020-03-04T17:36:48Z","updated_at":"2020-03-04T17:36:48Z","author_association":"CONTRIBUTOR","body":"The fatal problem occurs in the cleanup code:\r\n\r\n```\r\n    java.lang.RuntimeException: Had to resort to force-closing job, something went wrong?\r\n```\r\n\r\nWe need to get rid of the failed job before `assume`ing, because the standard post test cleanup treats leftover failed jobs as fatal errors.\r\n\r\nI will open a PR.","performed_via_github_app":null}]