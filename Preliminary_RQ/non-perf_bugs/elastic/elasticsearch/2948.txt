{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/2948","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2948/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2948/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2948/events","html_url":"https://github.com/elastic/elasticsearch/issues/2948","id":13774935,"node_id":"MDU6SXNzdWUxMzc3NDkzNQ==","number":2948,"title":"support more options for _all field","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2013-04-29T18:47:08Z","updated_at":"2014-08-08T11:43:04Z","closed_at":"2014-08-08T11:43:04Z","author_association":"NONE","active_lock_reason":null,"body":"_all supports busting based on contributing field boost \nSimilar support for position_offset_gap between contributing would be very helpful for more meaningful phrase seraches on _all. Gap could be the same for entire _all and configured in _all's config or prehaps by using alternative form of include_in_all - object rather than boolean\n\nActually allowing for include_in_all to be either boolean or object would allow configuring how a field contributes to all without breaking backward compatibility\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}