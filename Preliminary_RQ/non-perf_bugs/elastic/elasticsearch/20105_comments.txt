[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265434891","html_url":"https://github.com/elastic/elasticsearch/issues/20105#issuecomment-265434891","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20105","id":265434891,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTQzNDg5MQ==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-12-07T12:27:26Z","updated_at":"2016-12-07T12:27:26Z","author_association":"MEMBER","body":"Hi @JD557 sorry it has taken a while to get back to you on this but can you please share your java api code?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265470616","html_url":"https://github.com/elastic/elasticsearch/issues/20105#issuecomment-265470616","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20105","id":265470616,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTQ3MDYxNg==","user":{"login":"JD557","id":1187242,"node_id":"MDQ6VXNlcjExODcyNDI=","avatar_url":"https://avatars3.githubusercontent.com/u/1187242?v=4","gravatar_id":"","url":"https://api.github.com/users/JD557","html_url":"https://github.com/JD557","followers_url":"https://api.github.com/users/JD557/followers","following_url":"https://api.github.com/users/JD557/following{/other_user}","gists_url":"https://api.github.com/users/JD557/gists{/gist_id}","starred_url":"https://api.github.com/users/JD557/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JD557/subscriptions","organizations_url":"https://api.github.com/users/JD557/orgs","repos_url":"https://api.github.com/users/JD557/repos","events_url":"https://api.github.com/users/JD557/events{/privacy}","received_events_url":"https://api.github.com/users/JD557/received_events","type":"User","site_admin":false},"created_at":"2016-12-07T15:05:31Z","updated_at":"2016-12-07T15:07:07Z","author_association":"NONE","body":"I don't really have a Java API code (I use a elastic4s, which is a Java API wrapper).\r\n\r\nNevertheless, here's my scala specs2 test that I used to reproduce this problem:\r\n\r\n```scala\r\n\"silently ignore failures\" in {\r\n  val f = for {\r\n    _ <- client.execute(index into \"deleted-index\" -> \"t\" fields (\"test\" -> \"deleted\"))\r\n    _ <- client.execute(index into \"closed-index\" -> \"t\" fields (\"test\" -> \"closed\"))\r\n    _ <- client.execute(index into \"open-index\" -> \"t\" fields (\"test\" -> \"open\"))\r\n    _ <- client.execute(delete index \"deleted-index\")\r\n    ff <- client.execute(close index \"closed-index\")\r\n  } yield ff\r\n\r\n  Await.result(f, 60.seconds) // Hackish way to make sure that everything was executed\r\n\r\n  val ignoreUnavailable = IndicesOptions.fromOptions(\r\n    true, // ignoreUnavailable\r\n    true, // allowNoIndices\r\n    true, // expandToOpenIndices\r\n    false // expandToClosedIndices\r\n  )\r\n\r\n  // Make sure that closed indices are not forbidden\r\n  ignoreUnavailable.forbidClosedIndices() === false \r\n\r\n  // Normal queries should fail on unknown, deleted and closed indices\r\n  client.execute(search in \"unknown-index\" -> \"t\") must throwAn[Exception].await // PASS\r\n  client.execute(search in \"deleted-index\" -> \"t\") must throwAn[Exception].await // PASS\r\n  client.execute(search in \"closed-index\" -> \"t\") must throwAn[Exception].await // PASS\r\n\r\n\r\n  // Normal queries should fail on unknown, deleted and closed indices\r\n  client.execute(search in \"open-index\" -> \"t\") must not(throwAn[Exception]).await // PASS\r\n\r\n\r\n  // Queries with custom flags should succeed on unknown, deleted and closed indices\r\n  client.execute(search in \"unknown-index\" -> \"t\" indicesOptions ignoreUnavailable) must not(throwAn[Exception]).await // PASS\r\n  client.execute(search in \"deleted-index\" -> \"t\" indicesOptions ignoreUnavailable) must not(throwAn[Exception]).await // PASS\r\n  client.execute(search in \"closed-index\" -> \"t\" indicesOptions ignoreUnavailable) must not(throwAn[Exception]).await // FAIL\r\n}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265606715","html_url":"https://github.com/elastic/elasticsearch/issues/20105#issuecomment-265606715","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20105","id":265606715,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTYwNjcxNQ==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-12-07T23:27:35Z","updated_at":"2016-12-07T23:28:43Z","author_association":"MEMBER","body":"heya @JD557 the problem is caused by setting `forbidClosedIndices` to `false`. That is an internal option, that is not exposed through REST and should be left to `true` for search, as search cannot execute, like many other apis, against closed indices. If you don't ignore unavailable indices, then you get back an `IndexClosedException` (better than the cluster block you are seeing), otherwise we just ignore the closed indices. Setting forbid closed indices to false causes the search api to try and execute against closed indices which hits a wall just a bit later on, the error that you got. I hope this clarifies things for you.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265615068","html_url":"https://github.com/elastic/elasticsearch/issues/20105#issuecomment-265615068","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20105","id":265615068,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTYxNTA2OA==","user":{"login":"JD557","id":1187242,"node_id":"MDQ6VXNlcjExODcyNDI=","avatar_url":"https://avatars3.githubusercontent.com/u/1187242?v=4","gravatar_id":"","url":"https://api.github.com/users/JD557","html_url":"https://github.com/JD557","followers_url":"https://api.github.com/users/JD557/followers","following_url":"https://api.github.com/users/JD557/following{/other_user}","gists_url":"https://api.github.com/users/JD557/gists{/gist_id}","starred_url":"https://api.github.com/users/JD557/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JD557/subscriptions","organizations_url":"https://api.github.com/users/JD557/orgs","repos_url":"https://api.github.com/users/JD557/repos","events_url":"https://api.github.com/users/JD557/events{/privacy}","received_events_url":"https://api.github.com/users/JD557/received_events","type":"User","site_admin":false},"created_at":"2016-12-08T00:15:05Z","updated_at":"2016-12-08T00:15:05Z","author_association":"NONE","body":"Thanks for your response.\r\n\r\nI think that either you misunderstood my post or I misunderstood yours: Are you saying that there's no way to get the same behavior using the Java API? Can I only either get an Exception or a cluster block?\r\n\r\nIf that's not the case (and it's possible to perform a query equivalent to the REST API), then I need to ask another question:\r\n\r\n>heya @JD557 the problem is caused by setting `forbidClosedIndices` to `false`.\r\n\r\nJust to make things clear, I'm not setting it to `false`: The `===` operator is a shorthand for an equality assertion (I'm not sure if this was clear in my example).\r\n\r\nAs you might be aware, it's \"impossible\" to set the value of `forbidClosedIndices` directly. I believe that all methods that change that value are private, as you can see in [IndicesOptions.java](https://github.com/elastic/elasticsearch/blob/2.3/core/src/main/java/org/elasticsearch/action/support/IndicesOptions.java), so my only choice is to pick one of the predefined sets of indices options.\r\n\r\nSo, to get a query equivalent to the REST API, which predefined `IndicesOptions` do I need to pick?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/265692775","html_url":"https://github.com/elastic/elasticsearch/issues/20105#issuecomment-265692775","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20105","id":265692775,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NTY5Mjc3NQ==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-12-08T09:22:08Z","updated_at":"2016-12-08T09:22:08Z","author_association":"MEMBER","body":"You are right, I didn't notice that you weren't setting `forbidClosedIndices` yourself. This is quite odd. This is how you can work around this issue: `IndicesOptions.fromOptions(true, true, true, false, SearchRequest.DEFAULT_INDICES_OPTIONS)`. This way only the flags that you pass in will be changed, the others will come from the default for a search request that has `forbidClosedIndices` set to `true`.\r\n\r\nWe are planning to revisit the indices options as they expose some internal bits to the Java API which is not desirable. See #9438. We will take this into account for sure.\r\n","performed_via_github_app":null}]