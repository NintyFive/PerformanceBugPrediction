{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/10807","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10807/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10807/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10807/events","html_url":"https://github.com/elastic/elasticsearch/issues/10807","id":70933662,"node_id":"MDU6SXNzdWU3MDkzMzY2Mg==","number":10807,"title":"FSTranslog#snapshot() can enter infinite loop","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"labels":[{"id":836542781,"node_id":"MDU6TGFiZWw4MzY1NDI3ODE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Engine","name":":Distributed/Engine","color":"0e8a16","default":false,"description":"Anything around managing Lucene and the Translog in an open shard."},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":197540995,"node_id":"MDU6TGFiZWwxOTc1NDA5OTU=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.5.2","name":"v1.5.2","color":"dddddd","default":false,"description":null},{"id":182334038,"node_id":"MDU6TGFiZWwxODIzMzQwMzg=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.6.0","name":"v1.6.0","color":"dddddd","default":false,"description":null},{"id":76184120,"node_id":"MDU6TGFiZWw3NjE4NDEyMA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v2.0.0-beta1","name":"v2.0.0-beta1","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"assignees":[{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2015-04-25T16:26:45Z","updated_at":"2018-02-13T20:33:55Z","closed_at":"2015-04-26T12:08:37Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"If a translog is closed while there is still a recovery running we can end up in an infinite loop keeping the shard and the store etc. open. I bet there are more bad thing that can happen here...\n\nit manifested in exceptions like this:\n\n```\n 2> REPRODUCE WITH: mvn test -Pdev -Dtests.seed=89A1F19C6ECBCF0C -Dtests.class=org.elasticsearch.test.rest.Rest2Tests -Dtests.slow=true -Dtests.method=\"test {yaml=indices.get_field_mapping/10_basic/Get field mapping with include_defaults}\" -Des.logger.level=DEBUG -Des.node.mode=local -Dtests.security.manager=true -Dtests.nightly=false -Dtests.heap.size=1024m -Dtests.jvm.argline=\"-server -XX:+UseG1GC -XX:+UseCompressedOops -XX:+AggressiveOpts\" -Dtests.locale=tr -Dtests.timezone=Europe/Isle_of_Man -Dtests.rest.blacklist=cat.recovery/10_basic/*\nFAILURE 30.4s J4 | Rest2Tests.test {yaml=indices.get_field_mapping/10_basic/Get field mapping with include_defaults} <<<\n   > Throwable #1: java.lang.AssertionError: Delete Index failed - not acked\n```\n\nand exceptions like:\n\n```\n  1> [2015-04-25 16:10:50,790][DEBUG][indices                  ] [node_s1] [test_index] failed to delete index store - at least one shards is still locked\n  1> org.apache.lucene.store.LockObtainFailedException: Can't lock shard [test_index][2], timed out after 0ms\n  1>    at org.elasticsearch.env.NodeEnvironment$InternalShardLock.acquire(NodeEnvironment.java:520)\n  1>    at org.elasticsearch.env.NodeEnvironment.shardLock(NodeEnvironment.java:448)\n  1>    at org.elasticsearch.env.NodeEnvironment.lockAllForIndex(NodeEnvironment.java:392)\n  1>    at org.elasticsearch.env.NodeEnvironment.deleteIndexDirectorySafe(NodeEnvironment.java:342)\n  1>    at org.elasticsearch.indices.IndicesService.deleteIndexStore(IndicesService.java:494)\n  1>    at org.elasticsearch.indices.IndicesService.removeIndex(IndicesService.java:401)\n  1>    at org.elasticsearch.indices.IndicesService.deleteIndex(IndicesService.java:443)\n  1>    at org.elasticsearch.indices.cluster.IndicesClusterStateService.deleteIndex(IndicesClusterStateService.java:845)\n```\n\nall subsequent tests also fail with the delete not acked and print the same thread always sitting on a yield call in `FSTranslog`\n\n```\n  1>         at java.lang.Thread.run(Thread.java:745)\n  1>    8) Thread[id=178, name=elasticsearch[node_s0][generic][T#1], state=RUNNABLE, group=TGRP-Rest2Tests]\n  1>         at java.lang.Thread.yield(Native Method)\n  1>         at org.elasticsearch.index.translog.fs.FsTranslog.snapshot(FsTranslog.java:362)\n  1>         at org.elasticsearch.index.translog.fs.FsTranslog.snapshot(FsTranslog.java:61)\n  1>         at org.elasticsearch.index.engine.InternalEngine.recover(InternalEngine.java:845)\n  1>         at org.elasticsearch.index.shard.IndexShard.recover(IndexShard.java:730)\n  1>         at org.elasticsearch.indices.recovery.RecoverySource.recover(RecoverySource.java:125)\n  1>         at org.elasticsearch.indices.recovery.RecoverySource.access$200(RecoverySource.java:49)\n  1>         at org.elasticsearch.indices.recovery.RecoverySource$StartRecoveryTransportRequestHandler.messageReceived(RecoverySource.java:135)\n```\n\nif the translog is actually closed `current.snapshot()` always returns `null` and we will spin forever....\n\n``` Java\n @Override\n    public FsChannelSnapshot snapshot() throws TranslogException {\n        while (true) {\n            FsChannelSnapshot snapshot = current.snapshot();\n            if (snapshot != null) {\n                return snapshot;\n            }\n            Thread.yield();\n        }\n    }\n```\n\nphew I am happy I finally tracked it down, it's super rare but annoying :)\n","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}