[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/40343431","html_url":"https://github.com/elastic/elasticsearch/issues/5789#issuecomment-40343431","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5789","id":40343431,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMzQzNDMx","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-04-14T08:29:09Z","updated_at":"2014-04-14T08:29:09Z","author_association":"CONTRIBUTOR","body":"Can you give an example of what the output of this aggregation should look like, given these 4 json documents?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/40361227","html_url":"https://github.com/elastic/elasticsearch/issues/5789#issuecomment-40361227","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5789","id":40361227,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMzYxMjI3","user":{"login":"ncolomer","id":941891,"node_id":"MDQ6VXNlcjk0MTg5MQ==","avatar_url":"https://avatars0.githubusercontent.com/u/941891?v=4","gravatar_id":"","url":"https://api.github.com/users/ncolomer","html_url":"https://github.com/ncolomer","followers_url":"https://api.github.com/users/ncolomer/followers","following_url":"https://api.github.com/users/ncolomer/following{/other_user}","gists_url":"https://api.github.com/users/ncolomer/gists{/gist_id}","starred_url":"https://api.github.com/users/ncolomer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ncolomer/subscriptions","organizations_url":"https://api.github.com/users/ncolomer/orgs","repos_url":"https://api.github.com/users/ncolomer/repos","events_url":"https://api.github.com/users/ncolomer/events{/privacy}","received_events_url":"https://api.github.com/users/ncolomer/received_events","type":"User","site_admin":false},"created_at":"2014-04-14T12:44:07Z","updated_at":"2014-04-14T14:47:08Z","author_association":"NONE","body":"Hi @jpountz, sure, let's detail this washing machine use case :)\n\nSo we have the following docs indexed (removed `core` and `presets` specs, added `weight` spec to all 4 products and an `os` additional spec to one of the washing machine to improve the example):\n\n```\ncurl -XPOST 'localhost:9200/store/product/1' -d '{\"name\":\"Galaxy S4\",\"manufacturer\":\"Samsung\",\"type\":\"phone\",\"specs\":{\"os\":\"Android\",\"ram\":\"2GB\",\"weight\":0.13}}'\ncurl -XPOST 'localhost:9200/store/product/2' -d '{\"name\":\"iPhone 5\",\"manufacturer\":\"Apple\",\"type\":\"phone\",\"specs\":{\"os\":\"iOS\",\"ram\":\"1GB\",\"weight\":0.112}}'\ncurl -XPOST 'localhost:9200/store/product/3' -d '{\"name\":\"WF210ANW/XAA\",\"manufacturer\":\"Samsung\",\"type\":\"washing-machine\",\"specs\":{\"capacity\":3.5,\"loadType\":\"front\",\"weight\":82.9,\"os\":\"Android\"}}'\ncurl -XPOST 'localhost:9200/store/product/4' -d '{\"name\":\"WT4801CW\",\"manufacturer\":\"LG\",\"type\":\"washing-machine\",\"specs\":{\"capacity\":3.7,\"loadType\":\"top\",\"weight\":57.6}}'\n```\n\nMy **first query** filters on product type and retains phones only. In this query, the dynamic field name is accessible via the `{key}` keyword. The field may (or may not) be relative to the parent `magic_common_fields_agg` aggregation (see the `path` property).\n\n```\n{\n   \"query\": {\n      \"filtered\": {\n         \"query\": {\"match_all\": {}},\n         \"filter\": {\"term\": {\"type\":\"phone\"}}\n      }\n   },\n   \"aggs\": {\n      \"specs\": {\n         \"magic_common_fields_agg\": {\"path\": \"specs\"},\n         \"aggs\": {\n           \"values\": {\"terms\" : { \"field\": \"{key}\"}}\n         }\n      }\n   }\n}\n```\n\nThe result would be:\n\n```\n{\n    ...\n    \"aggregations\": {\n        \"specs\": {\n            \"buckets\": [\n                {\n                    \"key\": \"weight\", \"doc_count\": 2,\n                    \"values\": {\n                        \"buckets\": [\n                            {\"key\": 0.13, \"doc_count\": 1},\n                            {\"key\": 0.112, \"doc_count\": 1}\n                        ]\n                    }\n                },\n                {\n                    \"key\": \"os\", \"doc_count\": 2,\n                    \"values\": {\n                        \"buckets\": [\n                            {\"key\": \"Android\", \"doc_count\": 1},\n                            {\"key\": \"iOS\", \"doc_count\": 1}\n                        ]\n                    }\n                },\n                {\n                    \"key\": \"ram\", \"doc_count\": 2,\n                    \"values\": {\n                        \"buckets\": [\n                            {\"key\": \"1GB\", \"doc_count\": 1},\n                            {\"key\": \"2GB\", \"doc_count\": 1}\n                        ]\n                    }\n                }\n            ]\n        }\n    }\n}\n```\n\nMy **second query** filters on product type and retains washing machines only:\n\n```\n{\n   \"query\": {\n      \"filtered\": {\n         \"query\": {\"match_all\": {}},\n         \"filter\": {\"term\": {\"type\":\"washing-machine\"}}\n      }\n   },\n   \"aggs\": {\n      \"specs\": {\n         \"magic_common_fields_agg\": {\"path\": \"specs\"},\n         \"aggs\": {\n           \"values\": {\"terms\" : { \"field\": \"{key}\"}}\n         }\n      }\n   }\n}\n```\n\nThe result would be:\n\n```\n{\n    ...\n    \"aggregations\": {\n        \"specs\": {\n            \"buckets\": [\n                {\n                    \"key\": \"weight\", \"doc_count\": 2,\n                    \"values\": {\n                        \"buckets\": [\n                            {\"key\": 82.9, \"doc_count\": 1},\n                            {\"key\": 57.6, \"doc_count\": 1}\n                        ]\n                    }\n                },\n                {\n                    \"key\": \"capacity\", \"doc_count\": 2,\n                    \"values\": {\n                        \"buckets\": [\n                            {\"key\": 3.5, \"doc_count\": 1},\n                            {\"key\": 3.7, \"doc_count\": 1}\n                        ]\n                    }\n                },\n                {\n                    \"key\": \"loadType\", \"doc_count\": 2,\n                    \"values\": {\n                        \"buckets\": [\n                            {\"key\": \"front\", \"doc_count\": 1},\n                            {\"key\": \"top\", \"doc_count\": 1}\n                        ]\n                    }\n                },\n                {\n                    \"key\": \"os\", \"doc_count\": 1,\n                    \"values\": {\n                        \"buckets\": [\n                            {\"key\": \"Android\", \"doc_count\": 1}\n                        ]\n                    }\n                }\n            ]\n        }\n    }\n}\n```\n\nFinally, my **third query** does not filter anything but limits the number of returned buckets to 2 (ie. we want the 2 most occurring fields only). Additionally, we can imagine add kind of field name match pattern (as with dynamic_templates matching) or even field type match (useful to avoid computing a term on high cardinality field such as numeric field) to apply a sub-agg to specific field(s) only.\n\n```\n{\n   \"query\": {\"match_all\": {}},\n   \"aggs\": {\n      \"specs\": {\n         \"magic_common_fields_agg\": {\"path\": \"specs\", \"size\": 2},\n         \"aggs\": {\n           \"range\": {\"range\" : { \"field_match\": \"weight\", \"ranges\": [{\"to\": 1},{\"from\": 1,\"to\": 20},{\"from\": 20}]}},\n           \"values\": {\"terms\" : { \"field_match\": \"*\", \"field_exclude\": \"weight\"}}\n         }\n      }\n   }\n}\n```\n\nThe result would be:\n\n```\n{\n    ...\n    \"aggregations\": {\n        \"specs\": {\n            \"buckets\": [\n                {\n                    \"key\": \"weight\", \"doc_count\": 4,\n                    \"range\": {\n                        \"buckets\": [\n                            {\"to\": 1, \"doc_count\": 2},\n                            {\"from\": 1, \"to\": 20, \"doc_count\": 0},\n                            {\"from\": 20, \"doc_count\": 2}\n                        ]\n                    }\n                },\n                {\n                    \"key\": \"os\", \"doc_count\": 3,\n                    \"values\": {\n                        \"buckets\": [\n                            {\"key\": \"Android\", \"doc_count\": 2},\n                            {\"key\": \"iOS\", \"doc_count\": 1}\n                        ]\n                    }\n                }\n            ]\n        }\n    }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/51399133","html_url":"https://github.com/elastic/elasticsearch/issues/5789#issuecomment-51399133","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5789","id":51399133,"node_id":"MDEyOklzc3VlQ29tbWVudDUxMzk5MTMz","user":{"login":"kostiklv","id":620982,"node_id":"MDQ6VXNlcjYyMDk4Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/620982?v=4","gravatar_id":"","url":"https://api.github.com/users/kostiklv","html_url":"https://github.com/kostiklv","followers_url":"https://api.github.com/users/kostiklv/followers","following_url":"https://api.github.com/users/kostiklv/following{/other_user}","gists_url":"https://api.github.com/users/kostiklv/gists{/gist_id}","starred_url":"https://api.github.com/users/kostiklv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kostiklv/subscriptions","organizations_url":"https://api.github.com/users/kostiklv/orgs","repos_url":"https://api.github.com/users/kostiklv/repos","events_url":"https://api.github.com/users/kostiklv/events{/privacy}","received_events_url":"https://api.github.com/users/kostiklv/received_events","type":"User","site_admin":false},"created_at":"2014-08-06T21:22:09Z","updated_at":"2014-08-06T21:22:09Z","author_association":"NONE","body":"We are currently prototyping a very similar approach with 2 queries:\n\nTo avoid scripting, we're just indexing an additional field, like: `\"spec_fields\": [\"os\", \"ram\", \"weight\"]`. (But since 1.3 you can use [_field_names](http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/mapping-field-names-field.html#mapping-field-names-field) instead)\n\nThen, in the first query we are doing simple `terms` aggregation on `spec_fields` field and getting the list of (most popular) spec field names for a given products query. This aggregation is very lightweight and fast, as cardinality of `spec_fields` is pretty limited. BTW, you can get the actual products along with aggregation in the same query.\n\nThen, we are building the second query, which includes a separate `terms` aggregation for each of the fields returned by the first query.\n\nI would also be interested in ability to do this in a single query, or even better to use it in sub-aggregation. Any plans to implement that?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/59472925","html_url":"https://github.com/elastic/elasticsearch/issues/5789#issuecomment-59472925","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5789","id":59472925,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDcyOTI1","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-10-17T06:50:29Z","updated_at":"2014-10-17T06:50:29Z","author_association":"CONTRIBUTOR","body":"You can do this using nested documents as follows:\n\n```\nDELETE /store\n\nPUT /store\n{\n  \"mappings\": {\n    \"product\": {\n      \"properties\": {\n        \"specs\": {\n          \"type\": \"nested\",\n          \"properties\": {\n            \"key\": {\n              \"type\": \"string\",\n              \"index\": \"not_analyzed\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"index\": \"not_analyzed\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nPOST /store/product/1\n{\n  \"name\": \"Galaxy S4\",\n  \"manufacturer\": \"Samsung\",\n  \"type\": \"phone\",\n  \"specs\": [\n    {\n      \"key\": \"os\",\n      \"value\": \"Android\"\n    },\n    {\n      \"key\": \"core\",\n      \"value\": 4\n    },\n    {\n      \"key\": \"ram\",\n      \"value\": \"2GB\"\n    }\n  ]\n}\n\nPOST /store/product/2\n{\n  \"name\": \"iPhone 5\",\n  \"manufacturer\": \"Apple\",\n  \"type\": \"phone\",\n  \"specs\": [\n    {\n      \"key\": \"os\",\n      \"value\": \"iOS\"\n    },\n    {\n      \"key\": \"core\",\n      \"value\": 2\n    },\n    {\n      \"key\": \"ram\",\n      \"value\": \"1GB\"\n    }\n  ]\n}\n\nPOST /store/product/3\n{\n  \"name\": \"WF210ANW/XAA\",\n  \"manufacturer\": \"Samsung\",\n  \"type\": \"washing-machine\",\n  \"specs\": [\n    {\n      \"key\": \"capacity\",\n      \"value\": 3.5\n    },\n    {\n      \"key\": \"loadType\",\n      \"value\": \"front\"\n    },\n    {\n      \"key\": \"presets\",\n      \"value\": 6\n    }\n  ]\n}\n\nPOST /store/product/4\n{\n  \"name\": \"WT4801CW\",\n  \"manufacturer\": \"LG\",\n  \"type\": \"washing-machine\",\n  \"specs\": [\n    {\n      \"key\": \"capacity\",\n      \"value\": 3.7\n    },\n    {\n      \"key\": \"loadType\",\n      \"value\": \"top\"\n    },\n    {\n      \"key\": \"presets\",\n      \"value\": 9\n    }\n  ]\n}\n\nGET /store/_search?search_type=count\n{\n  \"aggs\": {\n    \"specs\": {\n      \"nested\": {\n        \"path\": \"specs\"\n      },\n      \"aggs\": {\n        \"key\": {\n          \"terms\": {\n            \"field\": \"specs.key\"\n          },\n          \"aggs\": {\n            \"value\": {\n              \"terms\": {\n                \"field\": \"specs.value\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nThis query returns:\n\n```\n{\n   \"took\": 82,\n   \"timed_out\": false,\n   \"_shards\": {\n      \"total\": 5,\n      \"successful\": 5,\n      \"failed\": 0\n   },\n   \"hits\": {\n      \"total\": 4,\n      \"max_score\": 0,\n      \"hits\": []\n   },\n   \"aggregations\": {\n      \"specs\": {\n         \"doc_count\": 12,\n         \"key\": {\n            \"buckets\": [\n               {\n                  \"key\": \"capacity\",\n                  \"doc_count\": 2,\n                  \"value\": {\n                     \"buckets\": [\n                        {\n                           \"key\": \"3.5\",\n                           \"doc_count\": 1\n                        },\n                        {\n                           \"key\": \"3.7\",\n                           \"doc_count\": 1\n                        }\n                     ]\n                  }\n               },\n               {\n                  \"key\": \"core\",\n                  \"doc_count\": 2,\n                  \"value\": {\n                     \"buckets\": [\n                        {\n                           \"key\": \"2\",\n                           \"doc_count\": 1\n                        },\n                        {\n                           \"key\": \"4\",\n                           \"doc_count\": 1\n                        }\n                     ]\n                  }\n               },\n               {\n                  \"key\": \"loadType\",\n                  \"doc_count\": 2,\n                  \"value\": {\n                     \"buckets\": [\n                        {\n                           \"key\": \"front\",\n                           \"doc_count\": 1\n                        },\n                        {\n                           \"key\": \"top\",\n                           \"doc_count\": 1\n                        }\n                     ]\n                  }\n               },\n               {\n                  \"key\": \"os\",\n                  \"doc_count\": 2,\n                  \"value\": {\n                     \"buckets\": [\n                        {\n                           \"key\": \"Android\",\n                           \"doc_count\": 1\n                        },\n                        {\n                           \"key\": \"iOS\",\n                           \"doc_count\": 1\n                        }\n                     ]\n                  }\n               },\n               {\n                  \"key\": \"presets\",\n                  \"doc_count\": 2,\n                  \"value\": {\n                     \"buckets\": [\n                        {\n                           \"key\": \"6\",\n                           \"doc_count\": 1\n                        },\n                        {\n                           \"key\": \"9\",\n                           \"doc_count\": 1\n                        }\n                     ]\n                  }\n               },\n               {\n                  \"key\": \"ram\",\n                  \"doc_count\": 2,\n                  \"value\": {\n                     \"buckets\": [\n                        {\n                           \"key\": \"1GB\",\n                           \"doc_count\": 1\n                        },\n                        {\n                           \"key\": \"2GB\",\n                           \"doc_count\": 1\n                        }\n                     ]\n                  }\n               }\n            ]\n         }\n      }\n   }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/59473130","html_url":"https://github.com/elastic/elasticsearch/issues/5789#issuecomment-59473130","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5789","id":59473130,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDczMTMw","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-10-17T06:53:30Z","updated_at":"2014-10-17T06:53:30Z","author_association":"CONTRIBUTOR","body":"I think this solution works for all of your requirements, so I'm going to close this issue. Please reopen if I've missed something\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/59573665","html_url":"https://github.com/elastic/elasticsearch/issues/5789#issuecomment-59573665","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5789","id":59573665,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTczNjY1","user":{"login":"ncolomer","id":941891,"node_id":"MDQ6VXNlcjk0MTg5MQ==","avatar_url":"https://avatars0.githubusercontent.com/u/941891?v=4","gravatar_id":"","url":"https://api.github.com/users/ncolomer","html_url":"https://github.com/ncolomer","followers_url":"https://api.github.com/users/ncolomer/followers","following_url":"https://api.github.com/users/ncolomer/following{/other_user}","gists_url":"https://api.github.com/users/ncolomer/gists{/gist_id}","starred_url":"https://api.github.com/users/ncolomer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ncolomer/subscriptions","organizations_url":"https://api.github.com/users/ncolomer/orgs","repos_url":"https://api.github.com/users/ncolomer/repos","events_url":"https://api.github.com/users/ncolomer/events{/privacy}","received_events_url":"https://api.github.com/users/ncolomer/received_events","type":"User","site_admin":false},"created_at":"2014-10-17T20:46:59Z","updated_at":"2014-10-17T20:46:59Z","author_association":"NONE","body":"My approach was way so complicated... thanks a lot for the reply and lucidity!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/61817408","html_url":"https://github.com/elastic/elasticsearch/issues/5789#issuecomment-61817408","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5789","id":61817408,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE3NDA4","user":{"login":"phani546","id":3141109,"node_id":"MDQ6VXNlcjMxNDExMDk=","avatar_url":"https://avatars3.githubusercontent.com/u/3141109?v=4","gravatar_id":"","url":"https://api.github.com/users/phani546","html_url":"https://github.com/phani546","followers_url":"https://api.github.com/users/phani546/followers","following_url":"https://api.github.com/users/phani546/following{/other_user}","gists_url":"https://api.github.com/users/phani546/gists{/gist_id}","starred_url":"https://api.github.com/users/phani546/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phani546/subscriptions","organizations_url":"https://api.github.com/users/phani546/orgs","repos_url":"https://api.github.com/users/phani546/repos","events_url":"https://api.github.com/users/phani546/events{/privacy}","received_events_url":"https://api.github.com/users/phani546/received_events","type":"User","site_admin":false},"created_at":"2014-11-05T14:48:14Z","updated_at":"2014-11-05T14:48:14Z","author_association":"NONE","body":"Hi @clintongormley,\n   I have a database table to index the data into nested type.what is the better approach to index nested type values in to elastic search.\n\nThanks,\nphani\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/61817749","html_url":"https://github.com/elastic/elasticsearch/issues/5789#issuecomment-61817749","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5789","id":61817749,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE3NzQ5","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-11-05T14:50:11Z","updated_at":"2014-11-05T14:50:11Z","author_association":"CONTRIBUTOR","body":"@phani546 you need to do the conversion in your application, before it reaches Elasticsearch\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/61818273","html_url":"https://github.com/elastic/elasticsearch/issues/5789#issuecomment-61818273","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5789","id":61818273,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE4Mjcz","user":{"login":"phani546","id":3141109,"node_id":"MDQ6VXNlcjMxNDExMDk=","avatar_url":"https://avatars3.githubusercontent.com/u/3141109?v=4","gravatar_id":"","url":"https://api.github.com/users/phani546","html_url":"https://github.com/phani546","followers_url":"https://api.github.com/users/phani546/followers","following_url":"https://api.github.com/users/phani546/following{/other_user}","gists_url":"https://api.github.com/users/phani546/gists{/gist_id}","starred_url":"https://api.github.com/users/phani546/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phani546/subscriptions","organizations_url":"https://api.github.com/users/phani546/orgs","repos_url":"https://api.github.com/users/phani546/repos","events_url":"https://api.github.com/users/phani546/events{/privacy}","received_events_url":"https://api.github.com/users/phani546/received_events","type":"User","site_admin":false},"created_at":"2014-11-05T14:53:15Z","updated_at":"2014-11-05T14:53:15Z","author_association":"NONE","body":"@clintongormley Thank you for the response. i will try in that way .\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/62152348","html_url":"https://github.com/elastic/elasticsearch/issues/5789#issuecomment-62152348","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5789","id":62152348,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMTUyMzQ4","user":{"login":"phani546","id":3141109,"node_id":"MDQ6VXNlcjMxNDExMDk=","avatar_url":"https://avatars3.githubusercontent.com/u/3141109?v=4","gravatar_id":"","url":"https://api.github.com/users/phani546","html_url":"https://github.com/phani546","followers_url":"https://api.github.com/users/phani546/followers","following_url":"https://api.github.com/users/phani546/following{/other_user}","gists_url":"https://api.github.com/users/phani546/gists{/gist_id}","starred_url":"https://api.github.com/users/phani546/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phani546/subscriptions","organizations_url":"https://api.github.com/users/phani546/orgs","repos_url":"https://api.github.com/users/phani546/repos","events_url":"https://api.github.com/users/phani546/events{/privacy}","received_events_url":"https://api.github.com/users/phani546/received_events","type":"User","site_admin":false},"created_at":"2014-11-07T14:34:50Z","updated_at":"2014-11-07T14:34:50Z","author_association":"NONE","body":"@clintongormley ,\n\n   I tried with ES JAVA API to insert the data for the following index. please find the schema created.As per you suggestion i created index like this but while indexing data i am not getting best approach to do this but i am trying through java API.can you post me any sample code snippet to insert data in to elastic search.\n\n{\n   \"test\": {\n      \"mappings\": {\n         \"testv1\": {\n            \"properties\": {\n               \"PROPERTY1\": {\n                  \"type\": \"nested\",\n                  \"properties\": {\n                     \"key\": {\n                        \"type\": \"string\",\n                        \"index\": \"not_analyzed\"\n                     },\n                     \"value\": {\n                        \"type\": \"string\",\n                        \"index\": \"not_analyzed\"\n                     }\n                  }\n               },\n               \"PROPERTY2\": {\n                  \"type\": \"nested\",\n                  \"properties\": {\n                     \"key\": {\n                        \"type\": \"string\",\n                        \"index\": \"not_analyzed\"\n                     },\n                     \"value\": {\n                        \"type\": \"string\",\n                        \"index\": \"not_analyzed\"\n                     }\n                  }\n               }\n            }\n         }\n      }\n   }\n}\n\nThanks \n\nphani.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/62152790","html_url":"https://github.com/elastic/elasticsearch/issues/5789#issuecomment-62152790","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5789","id":62152790,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMTUyNzkw","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-11-07T14:38:08Z","updated_at":"2014-11-07T14:38:08Z","author_association":"CONTRIBUTOR","body":"@phani546 Please ask these questions in the mailing list: http://elasticsearch.org/community\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/62701707","html_url":"https://github.com/elastic/elasticsearch/issues/5789#issuecomment-62701707","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5789","id":62701707,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNzAxNzA3","user":{"login":"phani546","id":3141109,"node_id":"MDQ6VXNlcjMxNDExMDk=","avatar_url":"https://avatars3.githubusercontent.com/u/3141109?v=4","gravatar_id":"","url":"https://api.github.com/users/phani546","html_url":"https://github.com/phani546","followers_url":"https://api.github.com/users/phani546/followers","following_url":"https://api.github.com/users/phani546/following{/other_user}","gists_url":"https://api.github.com/users/phani546/gists{/gist_id}","starred_url":"https://api.github.com/users/phani546/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phani546/subscriptions","organizations_url":"https://api.github.com/users/phani546/orgs","repos_url":"https://api.github.com/users/phani546/repos","events_url":"https://api.github.com/users/phani546/events{/privacy}","received_events_url":"https://api.github.com/users/phani546/received_events","type":"User","site_admin":false},"created_at":"2014-11-12T10:58:05Z","updated_at":"2014-11-12T10:58:05Z","author_association":"NONE","body":"Hi clintongormley ,\n\n   i followed the above procedure and done with index creation. from the builded index can i get the top 10 facets?\n\nthanks,\nphani.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/66958165","html_url":"https://github.com/elastic/elasticsearch/issues/5789#issuecomment-66958165","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5789","id":66958165,"node_id":"MDEyOklzc3VlQ29tbWVudDY2OTU4MTY1","user":{"login":"binlaniua","id":5960462,"node_id":"MDQ6VXNlcjU5NjA0NjI=","avatar_url":"https://avatars3.githubusercontent.com/u/5960462?v=4","gravatar_id":"","url":"https://api.github.com/users/binlaniua","html_url":"https://github.com/binlaniua","followers_url":"https://api.github.com/users/binlaniua/followers","following_url":"https://api.github.com/users/binlaniua/following{/other_user}","gists_url":"https://api.github.com/users/binlaniua/gists{/gist_id}","starred_url":"https://api.github.com/users/binlaniua/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/binlaniua/subscriptions","organizations_url":"https://api.github.com/users/binlaniua/orgs","repos_url":"https://api.github.com/users/binlaniua/repos","events_url":"https://api.github.com/users/binlaniua/events{/privacy}","received_events_url":"https://api.github.com/users/binlaniua/received_events","type":"User","site_admin":false},"created_at":"2014-12-15T07:32:26Z","updated_at":"2014-12-15T07:32:26Z","author_association":"NONE","body":"@clintongormley your solution is so perfect, i like it\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148281971","html_url":"https://github.com/elastic/elasticsearch/issues/5789#issuecomment-148281971","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5789","id":148281971,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODI4MTk3MQ==","user":{"login":"kaleemullah","id":56748,"node_id":"MDQ6VXNlcjU2NzQ4","avatar_url":"https://avatars3.githubusercontent.com/u/56748?v=4","gravatar_id":"","url":"https://api.github.com/users/kaleemullah","html_url":"https://github.com/kaleemullah","followers_url":"https://api.github.com/users/kaleemullah/followers","following_url":"https://api.github.com/users/kaleemullah/following{/other_user}","gists_url":"https://api.github.com/users/kaleemullah/gists{/gist_id}","starred_url":"https://api.github.com/users/kaleemullah/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaleemullah/subscriptions","organizations_url":"https://api.github.com/users/kaleemullah/orgs","repos_url":"https://api.github.com/users/kaleemullah/repos","events_url":"https://api.github.com/users/kaleemullah/events{/privacy}","received_events_url":"https://api.github.com/users/kaleemullah/received_events","type":"User","site_admin":false},"created_at":"2015-10-15T04:59:30Z","updated_at":"2015-10-15T04:59:30Z","author_association":"NONE","body":"@clintongormley Thanks for the solution but how can we filter aggregations with nested docs? Following above example, Lets say I choose 'android' as OS then aggregations should filter other buckets 'Core' and 'RAM' only for 'android' but also it should not hide the 'ios' key in 'OS' so that i can see other 'os' options also. is there any way to implement this? Thanks.\n","performed_via_github_app":null}]