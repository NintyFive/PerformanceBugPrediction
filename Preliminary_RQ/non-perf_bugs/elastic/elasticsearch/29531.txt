{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/29531","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29531/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29531/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29531/events","html_url":"https://github.com/elastic/elasticsearch/issues/29531","id":314654650,"node_id":"MDU6SXNzdWUzMTQ2NTQ2NTA=","number":29531,"title":"Time outs at coordinating node for outgoing replica requests","user":{"login":"vigyasharma","id":869395,"node_id":"MDQ6VXNlcjg2OTM5NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/869395?v=4","gravatar_id":"","url":"https://api.github.com/users/vigyasharma","html_url":"https://github.com/vigyasharma","followers_url":"https://api.github.com/users/vigyasharma/followers","following_url":"https://api.github.com/users/vigyasharma/following{/other_user}","gists_url":"https://api.github.com/users/vigyasharma/gists{/gist_id}","starred_url":"https://api.github.com/users/vigyasharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vigyasharma/subscriptions","organizations_url":"https://api.github.com/users/vigyasharma/orgs","repos_url":"https://api.github.com/users/vigyasharma/repos","events_url":"https://api.github.com/users/vigyasharma/events{/privacy}","received_events_url":"https://api.github.com/users/vigyasharma/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-04-16T13:37:28Z","updated_at":"2018-05-07T09:23:44Z","closed_at":"2018-04-16T13:54:08Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Feature request -->\r\n\r\n**Describe the feature**: \r\nCurrently replica requests have ```force_execution``` enabled, wherein they override thread pool queue sizes. The request increases queue size and adds itself to it. If the node processing these requests is slow, the queue grows indefinitely. \r\n\r\nAdditionally, it seems that request payload is also at the coordinating node (which received the original request from client), until all replica requests have completed. If there is a **single slow shard** in cluster, it keeps accumulating replica requests and coordinating nodes keep waiting on it indefinitely. This eventually increases memory consumption at coordinating node causing it to crash.\r\n \r\nExample, for a ```_bulk``` request that hits coordinating node, it is divided into sub-requests sent to each primary shard involved. Say primary is on a good node, but replica is on a bad (slow) node; different from coordinating node. After primary passes, coordinating node starts a replica request and waits for slow node to complete. If slow node has disk issues, this can cause an indefinite wait. Occupying memory at coordinating node causing it to crash (along with possibly the slow node that was anyway queueing requests indefinitely)\r\n\r\nHow does elasticsearch protect itself against such scenarios? Can we time out replica requests at coordinating nodes (and possibly the slow node) to free up memory after some time?\r\nFrom what I understand, this can lead to inconsistent replicas. The async replica requests are replica's mechanism for syncing with primary (apart from recovering a completely new replica shard). \r\n\r\n1. Can this be handled instead, with replicas pulling a delta of changes from primary asynchronously, without the need for coordinating nodes to keep replica request data.\r\n2. Or can the coordinating node discard its payload once it has an ack that replica request has been added to replica shard queue?\r\n3. Another option is to have a time out on replica requests, and consider shard failure when number of timed out requests breach a threshold.\r\n\r\n**Elasticsearch version** <= 5.5\r\n\r\n**JVM version** (`java -version`): 1.8\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): Linux\r\n","closed_by":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"performed_via_github_app":null}