{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/32186","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32186/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32186/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32186/events","html_url":"https://github.com/elastic/elasticsearch/issues/32186","id":342590275,"node_id":"MDU6SXNzdWUzNDI1OTAyNzU=","number":32186,"title":"bug report: select not return all document after index","user":{"login":"LYKZZzz","id":18306383,"node_id":"MDQ6VXNlcjE4MzA2Mzgz","avatar_url":"https://avatars2.githubusercontent.com/u/18306383?v=4","gravatar_id":"","url":"https://api.github.com/users/LYKZZzz","html_url":"https://github.com/LYKZZzz","followers_url":"https://api.github.com/users/LYKZZzz/followers","following_url":"https://api.github.com/users/LYKZZzz/following{/other_user}","gists_url":"https://api.github.com/users/LYKZZzz/gists{/gist_id}","starred_url":"https://api.github.com/users/LYKZZzz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LYKZZzz/subscriptions","organizations_url":"https://api.github.com/users/LYKZZzz/orgs","repos_url":"https://api.github.com/users/LYKZZzz/repos","events_url":"https://api.github.com/users/LYKZZzz/events{/privacy}","received_events_url":"https://api.github.com/users/LYKZZzz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-07-19T06:06:49Z","updated_at":"2018-07-19T06:52:30Z","closed_at":"2018-07-19T06:52:30Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** : 6.3.1\r\n\r\n**Plugins installed**: null\r\n\r\n**JVM version** (`java -version`): 10.0.1\r\n\r\n**OS version** : windows7 64bit\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nI am using RestHighLevelClient to index documents and search them, when I create an index and put some JSON document in it and then search them, some of document will not be returned, seems like client.index() execute asynchronously. If this is not a bug, would you like to tell me how to know whether all documents have been indexed, thank you!\r\n\r\n\r\n**Steps to reproduce**:\r\n\r\nthe java program will throw AssertError:\r\n```Java\r\nimport com.alibaba.fastjson.JSON;\r\nimport org.apache.http.HttpHost;\r\nimport org.elasticsearch.action.admin.indices.create.CreateIndexRequest;\r\nimport org.elasticsearch.action.admin.indices.delete.DeleteIndexRequest;\r\nimport org.elasticsearch.action.admin.indices.get.GetIndexRequest;\r\nimport org.elasticsearch.action.index.IndexRequest;\r\nimport org.elasticsearch.action.search.SearchRequest;\r\nimport org.elasticsearch.action.search.SearchResponse;\r\nimport org.elasticsearch.client.RestClient;\r\nimport org.elasticsearch.client.RestHighLevelClient;\r\nimport org.elasticsearch.common.xcontent.XContentType;\r\nimport org.elasticsearch.index.query.QueryBuilders;\r\nimport org.elasticsearch.search.builder.SearchSourceBuilder;\r\nimport java.io.IOException;\r\nimport java.util.Vector;\r\n\r\npublic class Test {\r\n    public static void main(String[] args) throws IOException, InterruptedException {\r\n        // init client and create index \"test\" (delete it if already exist)\r\n        RestHighLevelClient client = new RestHighLevelClient(RestClient.builder(new HttpHost(\"localhost\", 9200, \"http\")));\r\n        GetIndexRequest getIndexRequest = new GetIndexRequest();\r\n        getIndexRequest.indices(\"test\");\r\n        if (client.indices().exists(getIndexRequest)){\r\n            DeleteIndexRequest clearAllData = new DeleteIndexRequest(\"test\");\r\n            client.indices().delete(clearAllData);\r\n        }\r\n        CreateIndexRequest createIndexRequest = new CreateIndexRequest(\"test\");\r\n        client.indices().create(createIndexRequest);\r\n\r\n        // generate test data\r\n        Vector<WebPageData> testData = new Vector<>();\r\n        for (int i = 0; i < 10; i++){\r\n            WebPageData data = new WebPageData();\r\n            Vector<String> tags = new Vector<>();\r\n            tags.add(\"test\" + i);\r\n            data.setUrl(i + \".html\");\r\n            data.setTitle(i + \"ttest\");\r\n            data.setPrice(i + 100);\r\n            data.setChildPrice(i + 50);\r\n            data.setTags(tags);\r\n            testData.add(data);\r\n        }\r\n\r\n        // index 10 json document\r\n        for (WebPageData i : testData) {\r\n            IndexRequest indexRequest = new IndexRequest(\"test\", \"doc\");\r\n            indexRequest.source(JSON.toJSONString(i), XContentType.JSON);\r\n            client.index(indexRequest);\r\n        }\r\n\r\n        // if sleep 1s, everything looks good\r\n        //Thread.sleep(1000);\r\n\r\n        // search all doc in index \"test\"\r\n        SearchRequest searchRequest = new SearchRequest(\"test\");\r\n        SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder();\r\n        searchSourceBuilder.query(QueryBuilders.matchAllQuery());\r\n        searchRequest.source(searchSourceBuilder);\r\n        SearchResponse searchResponse = client.search(searchRequest);\r\n        System.out.println(searchResponse.getHits().totalHits);\r\n\r\n        // totalHits == 10 should be true\r\n        if (searchResponse.getHits().totalHits != 10){\r\n            throw new AssertionError();\r\n        }\r\n    }\r\n}\r\n```\r\n**WebPageData** is a JavaBean class:\r\n```Java\r\nimport java.util.Vector;\r\n\r\npublic class WebPageData {\r\n    private String title;\r\n    private String url;\r\n    private int price;\r\n    private int childPrice;\r\n    private Vector<String> tags;\r\n\r\n    // omit set and get\r\n\r\n}\r\n```","closed_by":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"performed_via_github_app":null}