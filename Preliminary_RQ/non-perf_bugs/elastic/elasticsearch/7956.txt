{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/7956","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7956/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7956/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7956/events","html_url":"https://github.com/elastic/elasticsearch/issues/7956","id":44650906,"node_id":"MDU6SXNzdWU0NDY1MDkwNg==","number":7956,"title":"Feature: Terms Aggregation with From Parameter","user":{"login":"kelaban","id":1447443,"node_id":"MDQ6VXNlcjE0NDc0NDM=","avatar_url":"https://avatars1.githubusercontent.com/u/1447443?v=4","gravatar_id":"","url":"https://api.github.com/users/kelaban","html_url":"https://github.com/kelaban","followers_url":"https://api.github.com/users/kelaban/followers","following_url":"https://api.github.com/users/kelaban/following{/other_user}","gists_url":"https://api.github.com/users/kelaban/gists{/gist_id}","starred_url":"https://api.github.com/users/kelaban/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kelaban/subscriptions","organizations_url":"https://api.github.com/users/kelaban/orgs","repos_url":"https://api.github.com/users/kelaban/repos","events_url":"https://api.github.com/users/kelaban/events{/privacy}","received_events_url":"https://api.github.com/users/kelaban/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-10-02T04:54:41Z","updated_at":"2014-10-14T14:09:55Z","closed_at":"2014-10-14T14:09:55Z","author_association":"NONE","active_lock_reason":null,"body":"Forgive me if there is a better way to do this.\n\nIn the #6299, `from` was added to `top_hits` aggregations. If `terms` aggregations also had a `from` field, it would allow to to do `distinct` type of queries. \n\nConsider the following documents in an index:\n\n```\n[\n  { \"revision\": \"a1\", \"id\": 1, \"updatedAt\": 0 },\n  { \"revision\": \"b1\", \"id\": 1, \"updatedAt\": 1 },\n  { \"revision\": \"a2\", \"id\": 2, \"updatedAt\": 2 }\n]\n```\n\nWe can use a `terms` aggregation on `id` + `top_hits` aggregation sorted by `updatedAt` to get the latest revision for each `id`. However to get the second page of this request would be non-trivial as it would require getting both the first and second page of the top level terms aggregation combined in one response.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}