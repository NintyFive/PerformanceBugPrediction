{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/12816","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12816/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12816/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12816/events","html_url":"https://github.com/elastic/elasticsearch/issues/12816","id":100420616,"node_id":"MDU6SXNzdWUxMDA0MjA2MTY=","number":12816,"title":"Java SDK: LongTerms.Bucket#getKeyAsText should return the string value for date aggregation","user":{"login":"cooniur","id":3030052,"node_id":"MDQ6VXNlcjMwMzAwNTI=","avatar_url":"https://avatars0.githubusercontent.com/u/3030052?v=4","gravatar_id":"","url":"https://api.github.com/users/cooniur","html_url":"https://github.com/cooniur","followers_url":"https://api.github.com/users/cooniur/followers","following_url":"https://api.github.com/users/cooniur/following{/other_user}","gists_url":"https://api.github.com/users/cooniur/gists{/gist_id}","starred_url":"https://api.github.com/users/cooniur/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cooniur/subscriptions","organizations_url":"https://api.github.com/users/cooniur/orgs","repos_url":"https://api.github.com/users/cooniur/repos","events_url":"https://api.github.com/users/cooniur/events{/privacy}","received_events_url":"https://api.github.com/users/cooniur/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-08-11T21:55:18Z","updated_at":"2016-01-28T12:20:18Z","closed_at":"2016-01-28T12:20:18Z","author_association":"NONE","active_lock_reason":null,"body":"`TL;DR;` For example, when querying for the following aggregation on field `createDate` (which is a Date field): \n\n```\n{\n  \"size\": 0,\n  \"query\": { \"match_all\": {} },\n  \"aggregations\": {\n    \"DATE_TERMS\": {\n      \"terms\": {\n        \"field\": \"createDate\",\n        \"size\": 10\n      }\n    }\n  }\n}\n```\n\nThe response in JSON is:\n\n```\n\"DATE_TERMS\": {\n    \"doc_count_error_upper_bound\": 0,\n    \"sum_other_doc_count\": 0,\n    \"buckets\": [\n      {\n        \"key\": 592444800000,\n        \"key_as_string\": \"10/10/88\",\n        \"doc_count\": 12\n      },\n      {\n        \"key\": 646876800000,\n        \"key_as_string\": \"07/02/90\",\n        \"doc_count\": 7\n      },\n      {\n        \"key\": 744940800000,\n        \"key_as_string\": \"08/10/93\",\n        \"doc_count\": 3\n      }\n    ]\n  }\n```\n\nWhen I loop through the buckets in Java code, \n\n```\nTerms terms = response.getAggregations().get(\"DATE_TERMS\");\nterms.getBuckets().stream.forEach( bucket -> {\n  String keyAsString = bucket.getKeyAsText().string(); \n  System.out.println(keyAsString);\n})\n```\n\nThe output is\n\n```\n592444800000\n646876800000\n744940800000\n```\n\nI'm expecting `bucket.getKeyAsText().string()` would give me the actual date in string format (e.g. `10/10/88`, `07/02/90`, etc..), but currently it gives me the long value of the date (e.g. `592444800000`, `646876800000`, ...). This behavior in the SDK is inconsistent with the JSON response, where there is a field called `key_as_string`.\n# \n\nThe workaround (as shown in the following code) would be first to check if `terms` is a `LongTerms` type, and if it is, during the loop, use `ValueFormatter.DateTime.DEFAULT.format()` to convert the long value to the actually date string, which is tedious. Moreover the default formatter doesn't give me the same string as in the JSON response either.\n\n```\nTerms terms = response.getAggregations().get(\"DATE_TERMS\");\nterms.getBuckets().stream.forEach( bucket -> {\n  String keyAsString\n  if (terms instanceof LongTerms)\n    keyAsString = ValueFormatter.DateTime.DEFAULT.format(bucket.getKeyAsNumber().longValue());\n  else\n    keyAsString = bucket.getKeyAsText().string(); \n  System.out.println(keyAsString);\n})\n```\n\nThe output is\n\n```\n1988-10-10T00:00:00.000Z\n1990-07-02T00:00:00.000Z\n1993-08-10T00:00:00.000Z\n```\n\nwhich is fine, but I would expect the same output as in the JSON response:\n\n```\n10/10/88\n07/02/90\n08/10/93\n```\n\nMoreover, it is not generally applicable. If the aggregation term is a number type (long, integer), the conversion to date will be wrong.\n\nThe SDK version I'm using is `1.7.1`.\n\nI'm not sure whether I describe the problem clearly, but let me know if you need more elaboration.\n\nThanks!\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}