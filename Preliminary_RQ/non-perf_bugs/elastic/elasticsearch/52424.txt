{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/52424","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52424/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52424/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52424/events","html_url":"https://github.com/elastic/elasticsearch/issues/52424","id":566366674,"node_id":"MDU6SXNzdWU1NjYzNjY2NzQ=","number":52424,"title":"data_nanos based search_after query with custom timestamp format causes exception","user":{"login":"kertal","id":463851,"node_id":"MDQ6VXNlcjQ2Mzg1MQ==","avatar_url":"https://avatars0.githubusercontent.com/u/463851?v=4","gravatar_id":"","url":"https://api.github.com/users/kertal","html_url":"https://github.com/kertal","followers_url":"https://api.github.com/users/kertal/followers","following_url":"https://api.github.com/users/kertal/following{/other_user}","gists_url":"https://api.github.com/users/kertal/gists{/gist_id}","starred_url":"https://api.github.com/users/kertal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kertal/subscriptions","organizations_url":"https://api.github.com/users/kertal/orgs","repos_url":"https://api.github.com/users/kertal/repos","events_url":"https://api.github.com/users/kertal/events{/privacy}","received_events_url":"https://api.github.com/users/kertal/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":1967498216,"node_id":"MDU6TGFiZWwxOTY3NDk4MjE2","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Search","name":"Team:Search","color":"fef2c0","default":false,"description":"Meta label for search team"}],"state":"closed","locked":false,"assignee":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"assignees":[{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2020-02-17T15:20:07Z","updated_at":"2020-07-29T18:29:11Z","closed_at":"2020-07-29T18:29:11Z","author_association":"NONE","active_lock_reason":null,"body":"<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):\r\nMaster\r\n\r\n**JVM version** (`java -version`):\r\n\r\n**OS version** (`uname -a` if on a Unix-like system):\r\n\r\nDarwin Kernel Version 18.7.0\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nA query using `search_after` based on an index using a `date_nanos` with a custom timestamp format throws an exception\r\n\r\n**Steps to reproduce**:\r\n\r\n 1. Create custom mapping\r\n```\r\nPUT date_nanos_custom_timestamp\r\n{\r\n    \"mappings\": {\r\n      \"properties\": {\r\n        \"timestamp\": {\r\n          \"format\": \"yyyy-MM-dd HH:mm:ss.SSSSSS\",\r\n          \"type\": \"date_nanos\"\r\n        }\r\n      }\r\n    },\r\n    \"settings\": {\r\n      \"index\": {\r\n        \"number_of_replicas\": \"1\",\r\n        \"number_of_shards\": \"1\"\r\n      }\r\n    }\r\n}\r\n```\r\n 2. Add same sample data\r\n```\r\nPUT date_nanos_custom_timestamp/_doc/1\r\n{\r\n  \"timestamp\": \"2019-10-21 00:30:04.828740\"\r\n}\r\n\r\nPUT date_nanos_custom_timestamp/_doc/2\r\n{\r\n  \"timestamp\": \"2019-10-21 08:30:04.828733\"\r\n}\r\n```\r\n 3. Search\r\n\r\n```\r\nPOST date_nanos_custom_timestamp/_search\r\n{\r\n  \"size\": 5,\r\n  \"search_after\": [\r\n    \"1571617804828740000\",\r\n    1\r\n  ],\r\n  \"sort\": [\r\n    {\r\n      \"timestamp\": {\r\n        \"order\": \"asc\",\r\n        \"unmapped_type\": \"boolean\"\r\n      }\r\n    },\r\n    {\r\n      \"_doc\": {\r\n        \"order\": \"asc\",\r\n        \"unmapped_type\": \"boolean\"\r\n      }\r\n    }\r\n  ]\r\n  }\r\n}\r\n```\r\n\r\nNow you're getting an exception:\r\n\r\n```\r\n{\r\n  \"error\" : {\r\n    \"root_cause\" : [\r\n      {\r\n        \"type\" : \"parse_exception\",\r\n        \"reason\" : \"failed to parse date field [1571617804828740000] with format [yyyy-MM-dd HH:mm:ss.SSSSSS]: [failed to parse date field [1571617804828740000] with format [yyyy-MM-dd HH:mm:ss.SSSSSS]]\"\r\n      }\r\n    ],\r\n    \"type\" : \"search_phase_execution_exception\",\r\n    \"reason\" : \"all shards failed\",\r\n    \"phase\" : \"query\",\r\n    \"grouped\" : true,\r\n    \"failed_shards\" : [\r\n      {\r\n        \"shard\" : 0,\r\n        \"index\" : \"date_nanos_custom_timestamp\",\r\n        \"node\" : \"059iRHeFT-ObiKskYJ_29w\",\r\n        \"reason\" : {\r\n          \"type\" : \"parse_exception\",\r\n          \"reason\" : \"failed to parse date field [1571617804828740000] with format [yyyy-MM-dd HH:mm:ss.SSSSSS]: [failed to parse date field [1571617804828740000] with format [yyyy-MM-dd HH:mm:ss.SSSSSS]]\",\r\n          \"caused_by\" : {\r\n            \"type\" : \"illegal_argument_exception\",\r\n            \"reason\" : \"failed to parse date field [1571617804828740000] with format [yyyy-MM-dd HH:mm:ss.SSSSSS]\",\r\n            \"caused_by\" : {\r\n              \"type\" : \"date_time_parse_exception\",\r\n              \"reason\" : \"Text '1571617804828740000' could not be parsed at index 0\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"status\" : 400\r\n}\r\n```\r\nThis worked a while ago, I've created a functional test in Kibana\r\n\r\nhttps://github.com/elastic/kibana/pull/54089\r\n\r\nBut had to skip it, since it caused the 400\r\n\r\nhttps://github.com/elastic/kibana/pull/56178\r\n\r\n\r\nThis works when providing the sort params as number\r\n```\r\n \"search_after\": [\r\n    1571617804828740000,\r\n    1\r\n  ],\r\n```\r\nBut that's no a solution due to Browser limitation with BigInt numbers\r\n\r\n\r\n","closed_by":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"performed_via_github_app":null}