[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/287902830","html_url":"https://github.com/elastic/elasticsearch/issues/13397#issuecomment-287902830","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13397","id":287902830,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NzkwMjgzMA==","user":{"login":"nknize","id":830187,"node_id":"MDQ6VXNlcjgzMDE4Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/830187?v=4","gravatar_id":"","url":"https://api.github.com/users/nknize","html_url":"https://github.com/nknize","followers_url":"https://api.github.com/users/nknize/followers","following_url":"https://api.github.com/users/nknize/following{/other_user}","gists_url":"https://api.github.com/users/nknize/gists{/gist_id}","starred_url":"https://api.github.com/users/nknize/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nknize/subscriptions","organizations_url":"https://api.github.com/users/nknize/orgs","repos_url":"https://api.github.com/users/nknize/repos","events_url":"https://api.github.com/users/nknize/events{/privacy}","received_events_url":"https://api.github.com/users/nknize/received_events","type":"User","site_admin":false},"created_at":"2017-03-20T21:24:41Z","updated_at":"2017-03-20T21:25:43Z","author_association":"CONTRIBUTOR","body":"Looks like we may not even need SIS. :tada: Closing as FAKE_NEWS","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/287910079","html_url":"https://github.com/elastic/elasticsearch/issues/13397#issuecomment-287910079","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13397","id":287910079,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NzkxMDA3OQ==","user":{"login":"desruisseaux","id":1324414,"node_id":"MDQ6VXNlcjEzMjQ0MTQ=","avatar_url":"https://avatars2.githubusercontent.com/u/1324414?v=4","gravatar_id":"","url":"https://api.github.com/users/desruisseaux","html_url":"https://github.com/desruisseaux","followers_url":"https://api.github.com/users/desruisseaux/followers","following_url":"https://api.github.com/users/desruisseaux/following{/other_user}","gists_url":"https://api.github.com/users/desruisseaux/gists{/gist_id}","starred_url":"https://api.github.com/users/desruisseaux/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/desruisseaux/subscriptions","organizations_url":"https://api.github.com/users/desruisseaux/orgs","repos_url":"https://api.github.com/users/desruisseaux/repos","events_url":"https://api.github.com/users/desruisseaux/events{/privacy}","received_events_url":"https://api.github.com/users/desruisseaux/received_events","type":"User","site_admin":false},"created_at":"2017-03-20T21:53:42Z","updated_at":"2017-03-20T21:53:42Z","author_association":"NONE","body":"Just as a side note, it is true that Apache SIS is not needed for geometric objects. If there is a wish to handle Coordinate Reference Systems however (WKT, GML, map projections, etc.), then it may still worth consideration.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/287911642","html_url":"https://github.com/elastic/elasticsearch/issues/13397#issuecomment-287911642","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13397","id":287911642,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NzkxMTY0Mg==","user":{"login":"nknize","id":830187,"node_id":"MDQ6VXNlcjgzMDE4Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/830187?v=4","gravatar_id":"","url":"https://api.github.com/users/nknize","html_url":"https://github.com/nknize","followers_url":"https://api.github.com/users/nknize/followers","following_url":"https://api.github.com/users/nknize/following{/other_user}","gists_url":"https://api.github.com/users/nknize/gists{/gist_id}","starred_url":"https://api.github.com/users/nknize/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nknize/subscriptions","organizations_url":"https://api.github.com/users/nknize/orgs","repos_url":"https://api.github.com/users/nknize/repos","events_url":"https://api.github.com/users/nknize/events{/privacy}","received_events_url":"https://api.github.com/users/nknize/received_events","type":"User","site_admin":false},"created_at":"2017-03-20T22:00:18Z","updated_at":"2017-03-20T22:00:18Z","author_association":"CONTRIBUTOR","body":"Thanks @desruisseaux! I am still considering SIS for handling CRS in the ES geo parse phase; but I'm also considering Proj4J. Any (objective) thoughts :smile: for one over the other?\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/287942967","html_url":"https://github.com/elastic/elasticsearch/issues/13397#issuecomment-287942967","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13397","id":287942967,"node_id":"MDEyOklzc3VlQ29tbWVudDI4Nzk0Mjk2Nw==","user":{"login":"desruisseaux","id":1324414,"node_id":"MDQ6VXNlcjEzMjQ0MTQ=","avatar_url":"https://avatars2.githubusercontent.com/u/1324414?v=4","gravatar_id":"","url":"https://api.github.com/users/desruisseaux","html_url":"https://github.com/desruisseaux","followers_url":"https://api.github.com/users/desruisseaux/followers","following_url":"https://api.github.com/users/desruisseaux/following{/other_user}","gists_url":"https://api.github.com/users/desruisseaux/gists{/gist_id}","starred_url":"https://api.github.com/users/desruisseaux/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/desruisseaux/subscriptions","organizations_url":"https://api.github.com/users/desruisseaux/orgs","repos_url":"https://api.github.com/users/desruisseaux/repos","events_url":"https://api.github.com/users/desruisseaux/events{/privacy}","received_events_url":"https://api.github.com/users/desruisseaux/received_events","type":"User","site_admin":false},"created_at":"2017-03-21T00:46:10Z","updated_at":"2017-03-21T00:46:10Z","author_association":"NONE","body":"Proj4J is a port in Java of Proj.4, a library in C. Proj.4 has a solid community; Proj4J a little bit less, but it may not be a risk factor since that project is a port. Apache SIS in comparison currently depends on a very small committer base, but we are trying to improve that with the help of the Apache Software Foundation and Google Summer of Code. Apache SIS is in very active development.\r\n\r\nProj4J has more map projections than SIS while being much more lightweight (307 kb compared to 2 or 3 Mb for SIS), which may seem paradoxical. But the map projections currently supported by SIS cover 96% of EPSG geodetic dataset, and the missing projections are progressively added. The difference in the size of the two libraries are explained by the amount of features that are not directly map projections but are still needed in referencing applications. More on it below.\r\n\r\nBoth Proj4J and SIS have some form of EPSG geodetic dataset. But the EPSG data included in Proj.4/Proj4J are a subset of the real EPSG database with all metadata (precision, domain of validity, transformation paths, etc.) trimmed. Absence of those metadata can cause errors like accidentally using for USA a coordinate operation designed for Cuba (this error happened because there is about 80 coordinate operations from NAD27 to WGS84; just specifying the source and target CRS are not sufficient). Absence of information about transformation paths put Proj4 in the category of \"early-binding implementations\", while Apache SIS is a \"late-binding implementations\" (EPSG guidance notes have a short discussion about \"early-binding\" versus \"late-binding\" implementations). In short, \"early-binding\" means that Proj.4 uses WGS84 has a pivot system for almost every datum changes, as seen from their \"+towgs84\" parameter. While EPSG recognizes that this is a common practice because easier to implement, EPSG does not recommend it. Not all coordinate transformations are defined relative to WGS84. Furthermore there is today 6 different versions of WGS84 with an offset up to 1.5 meters between them. For those reasons, the \"TOWGS84\" keyword that existed in WKT 1 does not exist anymore in the WKT 2 standard (ISO 19162) - more on WKT later. Instead we are supposed to check for transformation paths in the EPSG database for every pair of CRS (\"late-binding\" approach), which is what SIS does. We may object that a few meters error does not matter for most practical applications. This is true, but the problem is that Proj.4 is a black box; it does not tell which operation method it selected for a pair of CRS, where the operation is valid and what is its accuracy. So the user is not informed about the fact that the coordinate operations (s)he is doing may not be as accurate as (s)he think. Apache SIS by contrast provides those EPSG metadata. It also logs a warning if the user asks for a deprecated EPSG code, with a message telling what the replacement is.\r\n\r\nAn other issue is the Proj.4 EPSG file ignores axis order, which causes interoperability problems. I question whether this handling is compliant with EPSG terms of use. EPSG data are not open source; one of their constraint is that any change that modify the numerical results (as changing axis order does) shall not be attributed to EPSG. There is discussion at OGC right now about making this statement clearer (\"if it is not compliant with EPSG definition, make it very obvious for example with a ';axisOrder=lon,lat' suffix in the code\"), specifically because of this axis order issue. Apache SIS is compliant with EPSG definitions, but also provides some way to get (lon,lat) axis order if this is really what the user wants. But SIS does that in a way that can not be confused with EPSG definition.\r\n\r\nApache SIS supports multi-dimensional CRS with elevation, time and parametric axes. Transformations between different elevations is currently limited to ellipsoidal heights, but this will be fixed with the ISO 19111 revision in progress right now (by the introduction of \"interpolation CRS\").\r\n\r\nApache SIS has a Well Known Text (WKT) parser and formatter, supporting both version 1 and 2 (ISO 19162) of WKT. Except for an ESRI prototype, SIS is currently the only open-source project to support WKT 2 as far as I know. WKT 2 fixes some interoperability problems caused by different softwares interpreting WKT 1 in different ways. It also brings new features like temporal CRS, polar projections support (there is no standard way to represent a projection over a pole in WKT 1), the above-cited interpolation CRS, and more.\r\n\r\nApache SIS can read and write Coordinate Reference System in GML. What we get after reading GML is a fully operational object ready to perform map projections.\r\n\r\nIn addition of transforming points, Apache SIS provides a method for transforming multi-dimensional bounding box. This is a difficult task because of the need to locate e.g. where is the lowest or highest point of the curve (this is not necessarily a box corner). Iterating on 40 points on each side of the box is not sufficient. Instead, Apache SIS provides a quite accurate answer by leveraging its capability to compute Jacobian matrices in addition of projected points for each map projection. Again, things become more complicated at poles.\r\n\r\nThere is other features (JSR-363 - Unit of Measurement API - implementation, derived CRS, performance and more). An other aspect is that Apache SIS follows more closely the OGC and ISO standards.\r\n\r\nIn case of doubt, it is possible to write code in a way that allow to change implementation. Apache SIS in an implementation of GeoAPI 3.0 interfaces. There is also an implementation for Proj.4 (the C version; not yet for Proj4J but we could add it). By coding against the GeoAPI 3.0 interfaces, it is possible to keep ElasticSearch relatively independent of the underlying referencing library.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/288796075","html_url":"https://github.com/elastic/elasticsearch/issues/13397#issuecomment-288796075","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13397","id":288796075,"node_id":"MDEyOklzc3VlQ29tbWVudDI4ODc5NjA3NQ==","user":{"login":"desruisseaux","id":1324414,"node_id":"MDQ6VXNlcjEzMjQ0MTQ=","avatar_url":"https://avatars2.githubusercontent.com/u/1324414?v=4","gravatar_id":"","url":"https://api.github.com/users/desruisseaux","html_url":"https://github.com/desruisseaux","followers_url":"https://api.github.com/users/desruisseaux/followers","following_url":"https://api.github.com/users/desruisseaux/following{/other_user}","gists_url":"https://api.github.com/users/desruisseaux/gists{/gist_id}","starred_url":"https://api.github.com/users/desruisseaux/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/desruisseaux/subscriptions","organizations_url":"https://api.github.com/users/desruisseaux/orgs","repos_url":"https://api.github.com/users/desruisseaux/repos","events_url":"https://api.github.com/users/desruisseaux/events{/privacy}","received_events_url":"https://api.github.com/users/desruisseaux/received_events","type":"User","site_admin":false},"created_at":"2017-03-23T17:23:48Z","updated_at":"2017-03-23T17:23:48Z","author_association":"NONE","body":"To elaborate on the last paragraph of my above comment, I can help a little bit in making Proj4J a GeoAPI 3.0.1 implementation if there is an interest for that. If ElasticSearch is coded against only those interfaces, or keep implementation-specific API calls in a small area of the code only, it would be easier for the users to choose their implementation. Those who want a lightweight (early-binding) implementation and are okay with the absence of envelope transformations, metadata, GML / WKT parser, etc. may use Proj4J (however the axis order problem is more serious and may need a hack) without penalizing the users who need a more elaborated implementation.","performed_via_github_app":null}]