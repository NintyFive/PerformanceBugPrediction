{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/9738","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9738/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9738/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9738/events","html_url":"https://github.com/elastic/elasticsearch/issues/9738","id":58038742,"node_id":"MDU6SXNzdWU1ODAzODc0Mg==","number":9738,"title":"Terms aggregation: add include_values","user":{"login":"ewgRa","id":735804,"node_id":"MDQ6VXNlcjczNTgwNA==","avatar_url":"https://avatars0.githubusercontent.com/u/735804?v=4","gravatar_id":"","url":"https://api.github.com/users/ewgRa","html_url":"https://github.com/ewgRa","followers_url":"https://api.github.com/users/ewgRa/followers","following_url":"https://api.github.com/users/ewgRa/following{/other_user}","gists_url":"https://api.github.com/users/ewgRa/gists{/gist_id}","starred_url":"https://api.github.com/users/ewgRa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ewgRa/subscriptions","organizations_url":"https://api.github.com/users/ewgRa/orgs","repos_url":"https://api.github.com/users/ewgRa/repos","events_url":"https://api.github.com/users/ewgRa/events{/privacy}","received_events_url":"https://api.github.com/users/ewgRa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-02-18T08:14:41Z","updated_at":"2015-02-18T08:21:56Z","closed_at":"2015-02-18T08:21:56Z","author_association":"NONE","active_lock_reason":null,"body":"There is \"include\" in terms aggregation.\n\nI want filter by array of values. For example record have \"categories\" field, and I want aggregate only by specific categories, not all categories.\n\nI can make regular expression like \"category1id|category2id\" and use \"include\", or use \"script\" for this, but seems best performance will be reached by intersecting array.\n","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}