[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/527059752","html_url":"https://github.com/elastic/elasticsearch/issues/46222#issuecomment-527059752","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46222","id":527059752,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzA1OTc1Mg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-09-02T08:44:07Z","updated_at":"2019-09-02T08:44:07Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/527217605","html_url":"https://github.com/elastic/elasticsearch/issues/46222#issuecomment-527217605","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46222","id":527217605,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzIxNzYwNQ==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2019-09-02T18:13:13Z","updated_at":"2019-09-02T18:13:13Z","author_association":"MEMBER","body":"> But it is saved in that form which comes in. So then in search response hits there are mixed values \"true\", true, ...\r\n\r\nI assume by this statement you refer to the way those values are returned in the \"_source\" section of the documents in search hits, correct? In that case I can probably explain. The [_source field](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-source-field.html) the original JSON document body that was passed at index time. We do this so that the \"ground truth\" of what the user indexed is preserved in its original form, e.g. to be able to re-index it into another index later, but also for other purposes. The values are \"indexed\" internally in a common form (and in case of e.g. text in its analyzed form).\r\nIt would be helpful to understand what you are trying to do that the current behaviour doesn't allow to see if there is anything missing in terms of functionality, but returning \"_source\" the way it was entered is likely going to stay this way.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/527330543","html_url":"https://github.com/elastic/elasticsearch/issues/46222#issuecomment-527330543","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46222","id":527330543,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzMzMDU0Mw==","user":{"login":"regfaker","id":1756775,"node_id":"MDQ6VXNlcjE3NTY3NzU=","avatar_url":"https://avatars0.githubusercontent.com/u/1756775?v=4","gravatar_id":"","url":"https://api.github.com/users/regfaker","html_url":"https://github.com/regfaker","followers_url":"https://api.github.com/users/regfaker/followers","following_url":"https://api.github.com/users/regfaker/following{/other_user}","gists_url":"https://api.github.com/users/regfaker/gists{/gist_id}","starred_url":"https://api.github.com/users/regfaker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regfaker/subscriptions","organizations_url":"https://api.github.com/users/regfaker/orgs","repos_url":"https://api.github.com/users/regfaker/repos","events_url":"https://api.github.com/users/regfaker/events{/privacy}","received_events_url":"https://api.github.com/users/regfaker/received_events","type":"User","site_admin":false},"created_at":"2019-09-03T06:57:09Z","updated_at":"2019-09-03T06:57:09Z","author_association":"NONE","body":"Yes, _source has \"unconverted\" values passed at index time. I just don't think the type tolerance is ok, well maybe would be ok if it is converted (\"true\" -> true). It should throw an error if value is of other type or it should convert to that type.\r\nI don't see the value of keeping it in its original form because either you have it all in same form and then it doesn't bring any additional value or values are in mixed form (some true, some \"true\") and you have to resolve this before/after re-index anyway.\r\nBut if you will stay this way - is there a way to return that common form you've talked about in hits?\r\nThanks","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/527628001","html_url":"https://github.com/elastic/elasticsearch/issues/46222#issuecomment-527628001","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46222","id":527628001,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzYyODAwMQ==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2019-09-03T20:33:31Z","updated_at":"2019-09-03T20:33:31Z","author_association":"MEMBER","body":">  is there a way to return that common form you've talked about in hits\r\n\r\nIn the case of boolean fields, yes. Its called [doc_values](https://www.elastic.co/guide/en/elasticsearch/reference/current/doc-values.html) and is enabled by default on fields supporting it. You can include it in your search result like described [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-body.html#request-body-search-docvalue-fields). E.g.\r\n```\r\nPUT /index_2\r\n{\r\n  \"mappings\": {\r\n    \"properties\": {\r\n      \"flag\" : {\r\n        \"type\": \"boolean\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPUT /index_2/_doc/1\r\n{\r\n  \"flag\" : true\r\n}\r\n\r\nPUT /index_2/_doc/2\r\n{\r\n  \"flag\" : \"true\"\r\n}\r\n\r\nPOST /index_2/_search\r\n{\r\n  \"docvalue_fields\" : [\"flag\"]\r\n}\r\n```\r\nwill return\r\n```\r\n\"hits\" : [\r\n      {\r\n        \"_index\" : \"index_2\",\r\n        \"_type\" : \"_doc\",\r\n        \"_id\" : \"1\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"flag\" : true\r\n        },\r\n        \"fields\" : {\r\n          \"flag\" : [\r\n            true\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"index_2\",\r\n        \"_type\" : \"_doc\",\r\n        \"_id\" : \"2\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"flag\" : \"true\"\r\n        },\r\n        \"fields\" : {\r\n          \"flag\" : [\r\n            true\r\n          ]\r\n        }\r\n      }   \r\n    ]\r\n```\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/527629211","html_url":"https://github.com/elastic/elasticsearch/issues/46222#issuecomment-527629211","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/46222","id":527629211,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzYyOTIxMQ==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2019-09-03T20:36:52Z","updated_at":"2019-09-03T20:36:52Z","author_association":"MEMBER","body":"I'm going to close this issue for now, but feel free to add anything if you feels there is anything missing. For more general follow-up questions around doc_values and the search API we prefer folks using the support forums over at https://discuss.elastic.co. Thanks.","performed_via_github_app":null}]