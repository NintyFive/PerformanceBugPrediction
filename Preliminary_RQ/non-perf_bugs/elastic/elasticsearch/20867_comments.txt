[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/347497414","html_url":"https://github.com/elastic/elasticsearch/issues/20867#issuecomment-347497414","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20867","id":347497414,"node_id":"MDEyOklzc3VlQ29tbWVudDM0NzQ5NzQxNA==","user":{"login":"liketic","id":3806117,"node_id":"MDQ6VXNlcjM4MDYxMTc=","avatar_url":"https://avatars0.githubusercontent.com/u/3806117?v=4","gravatar_id":"","url":"https://api.github.com/users/liketic","html_url":"https://github.com/liketic","followers_url":"https://api.github.com/users/liketic/followers","following_url":"https://api.github.com/users/liketic/following{/other_user}","gists_url":"https://api.github.com/users/liketic/gists{/gist_id}","starred_url":"https://api.github.com/users/liketic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liketic/subscriptions","organizations_url":"https://api.github.com/users/liketic/orgs","repos_url":"https://api.github.com/users/liketic/repos","events_url":"https://api.github.com/users/liketic/events{/privacy}","received_events_url":"https://api.github.com/users/liketic/received_events","type":"User","site_admin":false},"created_at":"2017-11-28T11:38:56Z","updated_at":"2017-11-28T11:38:56Z","author_association":"CONTRIBUTOR","body":"@ppf2 @clintongormley Is this still worth to fix? Thanks in advance. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/347531932","html_url":"https://github.com/elastic/elasticsearch/issues/20867#issuecomment-347531932","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20867","id":347531932,"node_id":"MDEyOklzc3VlQ29tbWVudDM0NzUzMTkzMg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-11-28T14:01:16Z","updated_at":"2017-11-28T14:01:16Z","author_association":"CONTRIBUTOR","body":"@tlrx do you know if this has already been fixed?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/347819474","html_url":"https://github.com/elastic/elasticsearch/issues/20867#issuecomment-347819474","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20867","id":347819474,"node_id":"MDEyOklzc3VlQ29tbWVudDM0NzgxOTQ3NA==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2017-11-29T10:34:22Z","updated_at":"2017-11-29T10:34:22Z","author_association":"MEMBER","body":"@clintongormley None of the two suggested improvements have been implemented.\r\n\r\n> Provide a way for users to easily tell if a snapshot contains previously created indices. Currently, the snapshot _status API does not include index.version.created information. It will be nice to include index.version.created and index.version.upgraded as metadata as part of the _status API.\r\n\r\nThe versions are already read while building the output of the snapshot status response but they are not used and propagated to the response. I agree that they are useful information so I think we can add them under a `settings` object (located the same level as  `shards_stats`, `stats` and `shards`) for each index in the snapshot:\r\n\r\n```\r\n{\r\n  \"snapshots\" : [\r\n    {\r\n      \"snapshot\" : \"snap-5.6.4-upgraded\",\r\n      ...\r\n      \"indices\" : {\r\n        \"books\" : {\r\n          \"settings\" : {\r\n                \"index.version.created\":\"2040699\",\r\n                \"index.version.upgraded\":\"5060499\"\r\n          },\r\n          \"shards_stats\" : {\r\n            ...\r\n          },\r\n          \"stats\" : {\r\n            ...\r\n          },\r\n          \"shards\" : {\r\n            ...\r\n          }\r\n        },\r\n\r\n```\r\n\r\nAs we are here, we could also show the full index settings that contain creation_date, number_of_replicas, number_of_shards, uuid etc. It adds verbosity but it can help administrators to know if they need to override some setting.\r\n\r\n> Currently snapshot restore fails right away when the list of indices requested contains ones created in versions that it does not support/not compatible with (eg. if a snapshot contains both indices created on 1.x and 2.x, the restore will fail completely). It will be nice to provide an option to ignore these 1.x snapshots (eg. a flag like ignore_incompatible, ignore_obsolete, etc..).\r\n\r\nI agree such an option could be useful but I'm worried by the side effects, specially when the global state is restored too. I think it's doable but I'd prefer to know what @imotov thinks about this before moving forward - and I'm not sure this one is a good adoptme candidate.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/347963885","html_url":"https://github.com/elastic/elasticsearch/issues/20867#issuecomment-347963885","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20867","id":347963885,"node_id":"MDEyOklzc3VlQ29tbWVudDM0Nzk2Mzg4NQ==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2017-11-29T19:09:13Z","updated_at":"2017-11-29T19:09:13Z","author_association":"MEMBER","body":"I think this is needed if we want to have the same repository shared between major version. Saying that, my opinion didn't change, I would like to get to the state where the repo, created with the previous major version of elasticsearch becomes read-only and we start a fresh repo after each major version upgrade. I think, that's the only way to keep things sane upgrade-wise. If such model is implemented all these flags became unnecessary. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/348112660","html_url":"https://github.com/elastic/elasticsearch/issues/20867#issuecomment-348112660","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20867","id":348112660,"node_id":"MDEyOklzc3VlQ29tbWVudDM0ODExMjY2MA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-11-30T08:08:01Z","updated_at":"2017-11-30T08:08:01Z","author_association":"CONTRIBUTOR","body":"> I would like to get to the state where the repo, created with the previous major version of elasticsearch becomes read-only and we start a fresh repo after each major version upgrade\r\n\r\nðŸ’¯ ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/420990686","html_url":"https://github.com/elastic/elasticsearch/issues/20867#issuecomment-420990686","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20867","id":420990686,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMDk5MDY4Ng==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2018-09-13T12:35:15Z","updated_at":"2018-09-13T12:35:15Z","author_association":"CONTRIBUTOR","body":"I've discussed this with @tlrx and we decided not to take action on this. Given that we have the upgrade assistant today which will identify the indices that are out-of-date before an upgrade, we think that the benefits of adding the suggested functionality here are rather small, and have the down-side of convoluting the snap/restore APIs. I'm therefore closing this issue for now, but I'm open to reopen it if there's renewed interest in this.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/508162597","html_url":"https://github.com/elastic/elasticsearch/issues/20867#issuecomment-508162597","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20867","id":508162597,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODE2MjU5Nw==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2019-07-03T16:22:51Z","updated_at":"2019-07-04T08:57:25Z","author_association":"MEMBER","body":"I'd like to reopen this, given the current work on cleaning up unreferenced data. \r\nI think we should take some action here to:\r\n\r\n1.  Either clean up snapshots that are definitely not restorable anymore (segment files are too old). Currently these are simply dead data in the repository because they can't even be restored by using an older ES versions if another snapshot happened as the older version will fail to deserialize the most recent `index-N` blob.\r\n2. Ensure that at least an older Elasticsearch version will still be able to restore the unreferenced indices.\r\n\r\nI think the second option is a lot safer than the first so I'd prefer it. I think we could implement this relatively easily going forward at least (this wouldn't help those that already ran into this and have dead 2.x data in a 6.x+ cluster) by:\r\n\r\nSimply using a new naming schema for `index-N` (`BlobData`) blobs at the repository root for every new major version. Could use something like `index7-N`, `index8-N` and so on at the repo root as well as the shard level index-N  blobs. Then whenever we upgrade to a newer ES version we simply leave the latest version for each `V` of those `index{V}-{N}` behind, allowing older versions of ES to still restore these snapshots if needed (we would probably also want to add code to prevent older versions from writing to the repo if a newer `index{V}` blob is present).\r\n\r\nLong story short: let's either delete unusable data blobs are keep them useful, but not keep collecting stale blobs on every update if snapshots aren't deleted.\r\n\r\nWDYT?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/582347148","html_url":"https://github.com/elastic/elasticsearch/issues/20867#issuecomment-582347148","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20867","id":582347148,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjM0NzE0OA==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2020-02-05T10:42:08Z","updated_at":"2020-02-05T10:42:08Z","author_association":"MEMBER","body":"I'm closing this one, we have a solution for now with https://github.com/elastic/elasticsearch/pull/50692","performed_via_github_app":null}]