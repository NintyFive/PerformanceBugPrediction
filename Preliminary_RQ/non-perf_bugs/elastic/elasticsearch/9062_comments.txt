[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/68303721","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-68303721","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":68303721,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MzAzNzIx","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2014-12-29T21:14:26Z","updated_at":"2014-12-29T21:14:26Z","author_association":"MEMBER","body":"+1\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/72637544","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-72637544","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":72637544,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNjM3NTQ0","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-03T11:48:15Z","updated_at":"2015-02-03T11:48:15Z","author_association":"MEMBER","body":"Since I just changed the \"pre_/post_offset\" in #9417 for the histogram I can also look into this. I changed the date_histogram to only use the simpler \"offset\" option which only allows shifting the bucket start and endpoints. \n\nJust to make sure I understand the way offest should work here: If I have two docs, one at 5am and one 7am on Feb 3 and I use a daily bucket with \"offset\" : \"6h\", then the first doc should go into the Feb 2nd bucket, keyed with \"2015-02-02T06:00:00\" and the second in the Feb 3rd bucket. \n\nAs for the changes in 'pre_zone' and 'post_zone'. As far as I understand it so far 'post_zone' only affects the 'valueForKey' of the underlying Roundings, so it would probably be sufficient to rename 'pre_zone' to 'zone' and drop the other parameter. Or am I missing something here?\n\n@jpountz I could work on this further, adapt the existing tests etc. Would need some advice on what to consider in terms of bwc though, because dropping the parameters will affect serialization. Not sure how much of an issues this is when this only goes to v2.0.0.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/72647581","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-72647581","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":72647581,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNjQ3NTgx","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-02-03T13:13:10Z","updated_at":"2015-02-03T13:13:10Z","author_association":"CONTRIBUTOR","body":"> Just to make sure I understand the way offest should work here: If I have two docs, one at 5am and one 7am on Feb 3 and I use a daily bucket with \"offset\" : \"6h\", then the first doc should go into the Feb 2nd bucket, keyed with \"2015-02-02T06:00:00\" and the second in the Feb 3rd bucket. \n\nYes.\n\n> As for the changes in 'pre_zone' and 'post_zone'. As far as I understand it so far 'post_zone' only affects the 'valueForKey' of the underlying Roundings, so it would probably be sufficient to rename 'pre_zone' to 'zone' and drop the other parameter. Or am I missing something here?\n\nElasticsearch should always return UTC dates so I think we need both?\n\nThe time zone parameter should essentially behave the same way as the `offset` parameter, except that it is not fixed but adapts itself to things like daylight saving times. When a user specifies a timezone, it means that all buckets should start at `offset` (midnight by default) in this time zone. So for instance with `Europe/Berlin`, daily buckets would be `2015-02-02T23:00:00Z`, `2015-02-03T23:00:00Z`, ...\n\nIf we keep this `Europe/Berlin` + daily buckets example, when a date is aggregated, I think the workflow should look like this:\n1. temporary convert the date from UTC to the desired time zone, for instance `2015-02-03T70:00:00` would become `2015-02-03T08:00:00`\n2. apply the rounding: `2015-02-03T08:00:00` becomes `2015-02-03T00:00:00`\n3. convert back from the desired time zone to UTC: `2015-02-03T00:00:00` becomes `2015-02-02T23:00:00` which is midnight in Berlin.\n\n> Would need some advice on what to consider in terms of bwc though, because dropping the parameters will affect serialization. Not sure how much of an issues this is when this only goes to v2.0.0.\n\nFor backward compatibility I think we need to do the following:\n- On 1.5:\n  - Add support for the `offset` parameter which does not exist there yet\n  - Make `pre_offset`, `post_offset`, `pre_zone`, and `post_zone` parsed with the `ParseField` class. This way users will have a way to know they are using deprecated settings (see https://github.com/elasticsearch/elasticsearch/issues/8964)\n  - Modify the migration guide (in `docs/reference/migration`) to say that the `pre_offset`, `post_offset` parameter are deprecated in favour of `offset` and that `pre_zone` and `post_zone` are deprecated in favour of `time_zone`.\n- On 2.0\n  - Remove the `pre_offset`, `post_offset`, `pre_zone` and `post_zone` parameters. The fact that serialization is affected is not  an issue since 2.0 will require a full cluster restart, so it will not need to be able to talk with a 1.x node.\n  - Add a note to the 2.0 migration guide explaining that these parameters were deprecated and have been removed\n  - Potentially add a note that the behaviour of the `time_zone` parameter changed (I may be wrong but it seems to me like it does not always return UTC dates today).\n\n@clintongormley Would be great if you could confirm that what I wrote above looks good to you.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/72903671","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-72903671","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":72903671,"node_id":"MDEyOklzc3VlQ29tbWVudDcyOTAzNjcx","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-04T17:54:16Z","updated_at":"2015-02-04T17:55:54Z","author_association":"MEMBER","body":"Working on this I start to see now why the current options are a bit confusing. Removing the \"pre/post offset\" part seems fairly straightforward, but for the pre/postZone deletion I had trouble getting all the test to run after my modifications to the TimeZoneRounding classes. \n\nWhen I finally got my Tests running I stumbled into a test failure in IndicesQueryCacheTests which I first thought was due to my code changes, but digging into it I found I can reproduce the failure also on master.\n\nThere is an assertion in \nhttps://github.com/elasticsearch/elasticsearch/blob/29c24d75e733d8f3409bac8488dce0e950118968/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalHistogram.java#L398\n\nthat checks keys of subsequent buckets. When using a postZone(-1) in IndicesQueryCacheTests this can be made to fail. I added examples and an isolated test for this in the \"test-timeZoneRounding\" branch in my repo at \n\nhttps://github.com/cbuescher/elasticsearch/compare/test-timeZoneRounding\n\n@jpountz should I open separate issue for this? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/72904321","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-72904321","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":72904321,"node_id":"MDEyOklzc3VlQ29tbWVudDcyOTA0MzIx","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-02-04T17:57:56Z","updated_at":"2015-02-04T17:57:56Z","author_association":"CONTRIBUTOR","body":"Haven't dug yet but your description of the issue looks similar to #7673\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/72906463","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-72906463","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":72906463,"node_id":"MDEyOklzc3VlQ29tbWVudDcyOTA2NDYz","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-04T18:09:21Z","updated_at":"2015-02-04T18:09:21Z","author_association":"MEMBER","body":"Looks related. The problem seems to lie in the nextRoundingValue() methods in the unit-based TimeZoneRoundings, haven't checked the proposed fix fo #7673 in #9029 but that solution is probably incomplete because it only corrects the case for one of the TimeZoneRounding classes.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73105597","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-73105597","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":73105597,"node_id":"MDEyOklzc3VlQ29tbWVudDczMTA1NTk3","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-05T19:04:13Z","updated_at":"2015-02-05T19:04:13Z","author_association":"MEMBER","body":"Just to clarify a few things I got really confused about when digging deeper into the current state of TimeZoneRoundings:\n\nCurrently pre_Zone offset is applied in roundKey() and postZone in valueForKey(). Would it be possible to just do all the zone conversion in roundKey() and return that in UTC after the cleanup? Apart from beeing confusing the current solution leads to things like roundKey() not beeing an idempotent operation when preZone!=0. \n\nAlso, should one safely assume that the input and output values to the rounding methods are alway UTC after the cleanup? Currently this seems not to be the case since the values returned by roundKey() and valueForKey() can both be in local time zones. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73108493","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-73108493","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":73108493,"node_id":"MDEyOklzc3VlQ29tbWVudDczMTA4NDkz","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-02-05T19:20:40Z","updated_at":"2015-02-05T19:20:40Z","author_association":"CONTRIBUTOR","body":"> Currently pre_Zone offset is applied in roundKey() and postZone in valueForKey(). Would it be possible to just do all the zone conversion in roundKey() and return that in UTC after the cleanup? Apart from beeing confusing the current solution leads to things like roundKey() not beeing an idempotent operation when preZone!=0. \n\nThe reason why it works this way is that these rounding methods are called in HistogramCollector.collect which is a typical bottleneck when running histogram aggregations. By splitting the rounding logic into roundKey and valueForKey, we still call roundKey for every value (typically millions of times), but valueForKey only once for every unique roundKey (typically only a couple tens). I don't know if roundKey should be idempotent, but X -> valueForKey(roundKey(X)) certainly should.\n\nThat said, we should favour correctness over performance so if this distinction makes things harder to reason about, let's disable it for now (eg. by putting all the logic into roundKey and making valueForKey return the provided argument).\n\n> Also, should one safely assume that the input and output values to the rounding methods are alway UTC after the cleanup? Currently this seems not to be the case since the values returned by roundKey() and valueForKey() can both be in local time zones.\n\nThe return value of roundKey is really an identifier of a bucket, it doesn't carry any meaning and has no notion of timezone. However, indeed, one can safely assume that the input of roundKey is a UTC date, and the output of valueForKey should be a UTC date as well.\n\nI know the current state of timezone handling is a bit messy so if it makes things easier for you, feel free to break this issue into several smaller issues/pull requests.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73110007","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-73110007","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":73110007,"node_id":"MDEyOklzc3VlQ29tbWVudDczMTEwMDA3","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-05T19:28:50Z","updated_at":"2015-02-05T19:29:13Z","author_association":"MEMBER","body":"Probably separating removal of pre/postOffset from the whole time zone issue in two pull requests makes sense. I think that part is almost done, will revise the tests and go over the documentation for that one tomorrow and maybe can issue a PR then. Also merging this to 1.x seperately would be good.\nThe whole time zone thing also relies a bit on the discussion in #9029, so I see how that develops.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73239718","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-73239718","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":73239718,"node_id":"MDEyOklzc3VlQ29tbWVudDczMjM5NzE4","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-06T13:58:36Z","updated_at":"2015-02-06T13:58:36Z","author_association":"MEMBER","body":"From discussion this morning: also the 'pre_zone_adjust_large_interval' should be removed if possible.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73243970","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-73243970","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":73243970,"node_id":"MDEyOklzc3VlQ29tbWVudDczMjQzOTcw","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-02-06T14:28:20Z","updated_at":"2015-02-06T14:28:20Z","author_association":"CONTRIBUTOR","body":"+1\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73260816","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-73260816","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":73260816,"node_id":"MDEyOklzc3VlQ29tbWVudDczMjYwODE2","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-06T16:08:41Z","updated_at":"2015-02-06T16:08:41Z","author_association":"MEMBER","body":"Opened a pull request for the 'offset' part of this task. Will do the changes needed for the deprecation of 'pre/postOffset' on the 1.x branch separately.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73716743","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-73716743","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":73716743,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzE2NzQz","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-10T15:20:10Z","updated_at":"2015-02-10T15:20:10Z","author_association":"MEMBER","body":"Writing randomized tests I started wondering if the 'interval' setting should only be allowed to be positive. This isn't supported at the moment but if I issue a date_histogram request on  with negative interval setting I seem to get an OOM.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73717378","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-73717378","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":73717378,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzE3Mzc4","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-02-10T15:23:14Z","updated_at":"2015-02-10T15:23:14Z","author_association":"CONTRIBUTOR","body":"+1 on validating the interval\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73719472","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-73719472","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":73719472,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzE5NDcy","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-10T15:33:15Z","updated_at":"2015-02-10T15:33:15Z","author_association":"MEMBER","body":"Should I open a separate issue for a fix for that also on 1.x? Using negative intervals I think I can reliable reproduce an OOM error. This can be rejected quiet early in the REST call already.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73720975","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-73720975","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":73720975,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzIwOTc1","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-02-10T15:40:33Z","updated_at":"2015-02-10T15:40:33Z","author_association":"CONTRIBUTOR","body":"Yes, please!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/73759003","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-73759003","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":73759003,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzU5MDAz","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-10T18:53:15Z","updated_at":"2015-02-10T18:53:15Z","author_association":"MEMBER","body":"I think I have the time zone simplification in #9637. However there are a few potential simplifications that I would still like to discuss in that PR.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/74036179","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-74036179","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":74036179,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MDM2MTc5","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-02-12T08:45:44Z","updated_at":"2015-02-12T08:45:44Z","author_association":"CONTRIBUTOR","body":"Something else that would be nice to do when we have a single time_zone parameter would be to use this time_zone to format bucket keys. Here is a quick code example that probably better explains what I mean:\n\n``` java\nFormatDateTimeFormatter formatter = DateFieldMapper.Defaults.DATE_TIME_FORMATTER;\n// this is midnight in Berlin\nDateTime dateTime = formatter.parser().parseDateTime(\"2015-02-03T23:00:00Z\");\n\n// What we are basically doing today:\nSystem.out.println(formatter.printer().print(dateTime));\n// prints 2015-02-03T23:00:00.000Z\n\n// What we could do instead\nSystem.out.println(formatter.printer().withZone(DateTimeZone.forID(\"Europe/Berlin\")).print(dateTime));\n// prints 2015-02-04T00:00:00.000+01:00\n```\n\nLike the post_zone parameter this helps make buckets look like they still start at midnight, but on the contrary to the post_zone parameter we did not move the date to a different time zone, we are only _printing_ it in the desired time zone (hence the \"+01:00\" at the end).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/74290069","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-74290069","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":74290069,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MjkwMDY5","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-13T17:18:36Z","updated_at":"2015-02-13T17:18:36Z","author_association":"MEMBER","body":"Printing bucket keys in local time zones is another great idea, maybe this should be configurable as well? I would prefer opening a separate issue from the current PR though.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/74291165","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-74291165","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":74291165,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MjkxMTY1","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-02-13T17:25:17Z","updated_at":"2015-02-13T17:25:17Z","author_association":"CONTRIBUTOR","body":"+1 on a different issue, I was just suggesting it here since I think it's quite tied to this issue. I tend to think as time zones as something which is quite complicated to get right (a bit like encodings) so the fewer parameters we have about time zones, the better I think? Maybe we could just architecture the code so that adding this parameter would be straightforward to do in the future (if we ever decide to add it)?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/74530532","html_url":"https://github.com/elastic/elasticsearch/issues/9062#issuecomment-74530532","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9062","id":74530532,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NTMwNTMy","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2015-02-16T16:02:41Z","updated_at":"2015-02-16T16:02:41Z","author_association":"MEMBER","body":"Just opened the above follow up issue for using the time zone formatting for bucket keys.\n","performed_via_github_app":null}]