[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/27980041","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-27980041","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":27980041,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTgwMDQx","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2013-11-07T16:19:40Z","updated_at":"2013-11-07T16:19:40Z","author_association":"CONTRIBUTOR","body":"Ping @karmi \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28189366","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-28189366","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":28189366,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTg5MzY2","user":{"login":"karmi","id":4790,"node_id":"MDQ6VXNlcjQ3OTA=","avatar_url":"https://avatars1.githubusercontent.com/u/4790?v=4","gravatar_id":"","url":"https://api.github.com/users/karmi","html_url":"https://github.com/karmi","followers_url":"https://api.github.com/users/karmi/followers","following_url":"https://api.github.com/users/karmi/following{/other_user}","gists_url":"https://api.github.com/users/karmi/gists{/gist_id}","starred_url":"https://api.github.com/users/karmi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karmi/subscriptions","organizations_url":"https://api.github.com/users/karmi/orgs","repos_url":"https://api.github.com/users/karmi/repos","events_url":"https://api.github.com/users/karmi/events{/privacy}","received_events_url":"https://api.github.com/users/karmi/received_events","type":"User","site_admin":false},"created_at":"2013-11-11T10:47:44Z","updated_at":"2013-11-11T10:47:44Z","author_association":"CONTRIBUTOR","body":"This looks very good to me. I''m a bit cautious about the `cast` name, but couldn't come up with something which would feel significantly better. I was thinking about `convert`, `parse`, etc. Would maybe like `convert` a bit more, since it could be used in other places maybe.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28278081","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-28278081","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":28278081,"node_id":"MDEyOklzc3VlQ29tbWVudDI4Mjc4MDgx","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2013-11-12T09:10:30Z","updated_at":"2013-11-12T09:10:30Z","author_association":"MEMBER","body":"I agree `cast` is a bit technical. The ideal situation is to have something that conveys it will try but still throw an error if possible. How about `lenient` (as opposed to strict) - trying to do the best job and fail if not possible.\n\nAlso `ignore` to me suggest it will ignore malformed values completely as opposed to try casting them and ignoring errors.  Perhaps we need another mode like `lenient_ignore_errors` (but shorter ... ).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28281548","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-28281548","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":28281548,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MjgxNTQ4","user":{"login":"karmi","id":4790,"node_id":"MDQ6VXNlcjQ3OTA=","avatar_url":"https://avatars1.githubusercontent.com/u/4790?v=4","gravatar_id":"","url":"https://api.github.com/users/karmi","html_url":"https://github.com/karmi","followers_url":"https://api.github.com/users/karmi/followers","following_url":"https://api.github.com/users/karmi/following{/other_user}","gists_url":"https://api.github.com/users/karmi/gists{/gist_id}","starred_url":"https://api.github.com/users/karmi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karmi/subscriptions","organizations_url":"https://api.github.com/users/karmi/orgs","repos_url":"https://api.github.com/users/karmi/repos","events_url":"https://api.github.com/users/karmi/events{/privacy}","received_events_url":"https://api.github.com/users/karmi/received_events","type":"User","site_admin":false},"created_at":"2013-11-12T10:08:07Z","updated_at":"2013-11-12T10:08:07Z","author_association":"CONTRIBUTOR","body":"@bleskes So your suggestion is to use instead `lenient` instead of `ignore`?\n\nBoth do the job to me, with a preference for `lenient`, since that maps well to plain English, \"when receiving _malformed_ input, _ignore_ it\", assuming that's what we do (ie. do not even index/store the field).\n\nIf we do something else, e.g. we receive a malformed value (`\"count\": \"123\"`), we index/store it as it is, i.e. as a string instead of number.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28284874","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-28284874","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":28284874,"node_id":"MDEyOklzc3VlQ29tbWVudDI4Mjg0ODc0","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2013-11-12T11:04:35Z","updated_at":"2013-11-12T11:04:35Z","author_association":"MEMBER","body":"@karmi I mean `lenient` instead of `cast`. Sorry if I wasn't clear.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28285388","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-28285388","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":28285388,"node_id":"MDEyOklzc3VlQ29tbWVudDI4Mjg1Mzg4","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2013-11-12T11:13:32Z","updated_at":"2013-11-12T11:13:32Z","author_association":"CONTRIBUTOR","body":"@karmi @bleskes the last two comments demonstrate the problem :) what does `lenient` mean? `cast` or `ignore`?  I agree that `cast` is a bit technical, but it is accurate.\n\nPossibly we could use `silent`, `convert`, `strict`?\n\nThat said, I think I still prefer `ignore`, `cast`, `strict` - they're closer to what is actually happening.  `cast` is easily explained in the docs, and will be the default so most people will never need to change it or even look it up.\n\nBut I'm not particularly tied to `cast`, happy to use something else as long as it is short and easy to understand\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28287570","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-28287570","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":28287570,"node_id":"MDEyOklzc3VlQ29tbWVudDI4Mjg3NTcw","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2013-11-12T11:55:31Z","updated_at":"2013-11-12T11:55:31Z","author_association":"MEMBER","body":"I have a slight preference to `convert` over `cast`.  \n\nJust to make sure my second point is not lost in the discussion - I think `ignore` is confusing because it still tries to convert things like strings to numbers. Especially because this is not a settings people often set or use, I would prefer something slightly longer but clearer - even going all the way to `convert_ignore_errors`. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28287707","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-28287707","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":28287707,"node_id":"MDEyOklzc3VlQ29tbWVudDI4Mjg3NzA3","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2013-11-12T11:57:55Z","updated_at":"2013-11-12T11:57:55Z","author_association":"CONTRIBUTOR","body":"How about `convert`, `convert_silent`, `strict`, `strict_silent`?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28287793","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-28287793","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":28287793,"node_id":"MDEyOklzc3VlQ29tbWVudDI4Mjg3Nzkz","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2013-11-12T11:59:36Z","updated_at":"2013-11-12T11:59:36Z","author_association":"MEMBER","body":"+1\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28298083","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-28298083","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":28298083,"node_id":"MDEyOklzc3VlQ29tbWVudDI4Mjk4MDgz","user":{"login":"GlenRSmith","id":1327920,"node_id":"MDQ6VXNlcjEzMjc5MjA=","avatar_url":"https://avatars3.githubusercontent.com/u/1327920?v=4","gravatar_id":"","url":"https://api.github.com/users/GlenRSmith","html_url":"https://github.com/GlenRSmith","followers_url":"https://api.github.com/users/GlenRSmith/followers","following_url":"https://api.github.com/users/GlenRSmith/following{/other_user}","gists_url":"https://api.github.com/users/GlenRSmith/gists{/gist_id}","starred_url":"https://api.github.com/users/GlenRSmith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GlenRSmith/subscriptions","organizations_url":"https://api.github.com/users/GlenRSmith/orgs","repos_url":"https://api.github.com/users/GlenRSmith/repos","events_url":"https://api.github.com/users/GlenRSmith/events{/privacy}","received_events_url":"https://api.github.com/users/GlenRSmith/received_events","type":"User","site_admin":false},"created_at":"2013-11-12T14:41:20Z","updated_at":"2013-11-12T14:41:20Z","author_association":"CONTRIBUTOR","body":"coerce? ;-)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28378870","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-28378870","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":28378870,"node_id":"MDEyOklzc3VlQ29tbWVudDI4Mzc4ODcw","user":{"login":"karmi","id":4790,"node_id":"MDQ6VXNlcjQ3OTA=","avatar_url":"https://avatars1.githubusercontent.com/u/4790?v=4","gravatar_id":"","url":"https://api.github.com/users/karmi","html_url":"https://github.com/karmi","followers_url":"https://api.github.com/users/karmi/followers","following_url":"https://api.github.com/users/karmi/following{/other_user}","gists_url":"https://api.github.com/users/karmi/gists{/gist_id}","starred_url":"https://api.github.com/users/karmi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karmi/subscriptions","organizations_url":"https://api.github.com/users/karmi/orgs","repos_url":"https://api.github.com/users/karmi/repos","events_url":"https://api.github.com/users/karmi/events{/privacy}","received_events_url":"https://api.github.com/users/karmi/received_events","type":"User","site_admin":false},"created_at":"2013-11-13T09:08:44Z","updated_at":"2013-11-13T09:08:44Z","author_association":"CONTRIBUTOR","body":"a) I'm not a fan of these underscored values,\nb) I like `coerce` :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28382411","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-28382411","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":28382411,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MzgyNDEx","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2013-11-13T10:01:05Z","updated_at":"2013-11-13T10:01:05Z","author_association":"CONTRIBUTOR","body":"I like `coerce` too. \n\n@karmi you want to suggest alternatives for the underscored values?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/29692921","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-29692921","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":29692921,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NjkyOTIx","user":{"login":"merrellb","id":309627,"node_id":"MDQ6VXNlcjMwOTYyNw==","avatar_url":"https://avatars2.githubusercontent.com/u/309627?v=4","gravatar_id":"","url":"https://api.github.com/users/merrellb","html_url":"https://github.com/merrellb","followers_url":"https://api.github.com/users/merrellb/followers","following_url":"https://api.github.com/users/merrellb/following{/other_user}","gists_url":"https://api.github.com/users/merrellb/gists{/gist_id}","starred_url":"https://api.github.com/users/merrellb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrellb/subscriptions","organizations_url":"https://api.github.com/users/merrellb/orgs","repos_url":"https://api.github.com/users/merrellb/repos","events_url":"https://api.github.com/users/merrellb/events{/privacy}","received_events_url":"https://api.github.com/users/merrellb/received_events","type":"User","site_admin":false},"created_at":"2013-12-03T08:59:03Z","updated_at":"2013-12-04T16:05:40Z","author_association":"NONE","body":"It seems like we are trying to combine two related but different ideas.  What efforts do we attempt when a value is not as expected, and what do we do if these efforts fail.   It sounds like there aren't too many options in terms of coercing.  Do we convert strings to numerics and/or do we convert floats to integers (is rounding the only option)?  Regarding failures do we only fail or ignore?  Do we ever want to report the errors (ie not silently \"ignore\")?\n\nIt seems difficult to combine these two aspects in one attribute in a way that enumerates the options (and avoids underscores).  Here is one proposal that uses two attributes to provide additional (perhaps more than we need) flexibility.\n\n`coerce`\n- `loose`  (convert strings to numerics, convert floats to ints) default\n- `string` (convert strings to numerics, fail if float value in an int field)\n- `float` (convert floats to ints, fail if string)\n- `exact` (must be the exact expected type) (perhaps `strict` or `none`?)\n\n`malformed`\n- `ignore` (accept the document, exclude the bad fields silently) (perhaps `silent`?)\n- `report` (accept the document, exclude the bad fields and complain) (perhaps `loud`?)\n- `fail`  (refuse the document, complain) default\n\nI don't mean to muddy the waters but thought I would at least throw out some additional options.\n\n-brian\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31755539","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-31755539","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":31755539,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzU1NTM5","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2014-01-07T16:56:01Z","updated_at":"2014-01-07T16:56:01Z","author_association":"MEMBER","body":"To summarize the discussion and make some progress on the issue, here is what I am proposing to implement:\n- `strict` - doesn't try to perform any conversion, throws an error unless the value is a valid number which fits the field type\n- `cast` - casts when it can but throws an error when it can't (**default**)\n- `ignore` - doesn't try to cast and silently ignores errors\n- `coerse` - casts when it can and silently ignores errors\n\nIn other words, `strict` and `ignore` don't try to convert, `cast` and `coerce` do. `strict` and `cast` complain, `ignore` and `coerce` don't.\n\nMigration path: in 1.0, we will support both `ignore_malformed` and `malformed` as well as\n- `true` which will be equivalent to `coerce`\n- `false` which will be equivalent to `cast`\n\nIn 1.1 we will remove support for `ignore_malformed`, `true` and `false`.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31822365","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-31822365","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":31822365,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODIyMzY1","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2014-01-08T11:00:47Z","updated_at":"2014-01-08T12:03:32Z","author_association":"CONTRIBUTOR","body":"Summarising the options then:\n\n<table>\n  <tr>\n       <th><./th>\n       <th>Attempts conversion<./th>\n       <th>Does not attempt conversion<./th>\n </tr>\n  <tr>\n       <th>Throws errors<./th>\n       <td>Cast<./td>\n       <td>Strict<./td>\n </tr>\n  <tr>\n       <th>Doesn't throw error<./th>\n       <td>Coerce<./td>\n       <td>Ignore<./td>\n </tr>\n</table>\n\nI feel slightly uneasy about \"ignore_malformed\" being truncated to just \"malformed\". It changes the meaning from clearly describing a policy to a word usually used to describe a condition. How about \"conversion_policy\"? \n\nIn fact it may be simpler to understand all round and avoid any deprecation notices if we have 2 booleans representing the fundamental choices in the table - \"ignore_malformed\"  and a new \"attempt_conversions\" which defaults to true. (This is based on the same point merrellb had but with simplified options)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31826627","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-31826627","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":31826627,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODI2NjI3","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2014-01-08T12:18:40Z","updated_at":"2014-01-08T12:18:40Z","author_association":"MEMBER","body":"++, makes sense to me. Just a note, for backward support, we should support the existing flags, but serialize in the `toXContent` to the new options (I think thats what suggested, just verifying), so existing mappings will effectively be \"upgraded\" to the new format.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31830491","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-31830491","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":31830491,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODMwNDkx","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-01-08T13:27:57Z","updated_at":"2014-01-08T13:27:57Z","author_association":"CONTRIBUTOR","body":"Sounds good to me\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31846501","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-31846501","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":31846501,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODQ2NTAx","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2014-01-08T15:53:13Z","updated_at":"2014-01-10T14:24:38Z","author_association":"CONTRIBUTOR","body":"Update after a chat with Kevin and Clinton:\n\nWe chose not to use the one flag with 4 options (strict/cast/ignore/coerce).\n\nInstead, we add a new boolean \"coerce\". The settings that govern format transformations are therefore:\n\n1) The existing \"ignore_malformed\" option will behave as usual where \"true\" will index a doc minus the malformed value and false will throw an error rejecting the document.\n2) The new \"coerce\" flag controls if any attempts are made to convert formats. A value is only considered malformed if it is not possible to force a transformation via the standard Java functions. Any information loss such as rounding or truncation (e.g. when calling Integer.toShort() ) is not considered to be a malformed value and is considered an acceptable transformation when coercing data into the target format. \n\nIf coercion is set to false then we need to check no information loss is occurring as part of the transformation from JSON to target format. Unfortunately the Jackson Json parser we use will silently drop the fraction part of a number when parsing as an int, short or long and so it is necessary to compare this output with the output when parsed as a double to ensure there is no data loss.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31868141","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-31868141","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":31868141,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODY4MTQx","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2014-01-08T19:21:58Z","updated_at":"2014-01-08T19:21:58Z","author_association":"CONTRIBUTOR","body":"For back compatibility, the default setting for coerce should be true and if it is set to false we then don't allow any of the following JSON examples and throw them out as malformed:\n\n```\n\"numberAsString\":\"1.2\" // when mapped to any number\n\"numWithFraction\":1.3 // fractions when mapped to short,int,or long\n```\n\nRegardless of the \"coerce\" flag setting, overly-large values such as these will always be considered malformed:\n\n```\n\"badShort\":1234567789  //Value out of range for short\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/32022110","html_url":"https://github.com/elastic/elasticsearch/issues/4117#issuecomment-32022110","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4117","id":32022110,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDIyMTEw","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2014-01-10T12:01:51Z","updated_at":"2014-01-10T12:01:51Z","author_association":"CONTRIBUTOR","body":"In the Int/Short/Long...FieldMapper classes there is special code that allows for content to be passed from sources other than JSON as a Java object called \"externalValue\". Few classes appear to use this currently and an example is GeoPointFieldMapper which derives lat/lon fields etc from things like GeoHashes provided in JSON.\n\nThe Int/Short/Long...FieldMapper classes have logic that attempts to cast these externalValue objects to strings and then parse them into numerics.\n\n@kimchy agreed that these special conversions should not be governed by the \"coerce\" policy that is applied to the more common case of handling plain values passed as part of the raw JSON content\n","performed_via_github_app":null}]