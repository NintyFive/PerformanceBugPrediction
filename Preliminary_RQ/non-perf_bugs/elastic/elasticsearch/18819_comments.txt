[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225267649","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-225267649","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":225267649,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTI2NzY0OQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-06-10T18:59:37Z","updated_at":"2016-06-10T18:59:37Z","author_association":"CONTRIBUTOR","body":"In the years I've used Elasticsearch I've had two valid uses for it:\n1. To force assign a missing primary and accept that data loss.\n2. To jiggle the allocator to make it start when it stopped.\n\nOther than that I've only ever misused it. For those reading along: you don't usually want to move shards around with this API because it doesn't pin them where you put them. If you want to pin a shard someplace you should use [allocation filtering](https://www.elastic.co/guide/en/elasticsearch/reference/current/shard-allocation-filtering.html). It is much more flexible and actually works.\n\nI'd be quite happy with an API to force assignment of an empty primary and one to jiggle the allocator. A command line tool is less nice because I'd have to connect to the right node and stuff. Also, I'm not sure it'd work in the case where the data is totally gone?\n\nI remember once I reformatted a few machine when I didn't have any replicas. I wasn't paying good attention.....\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225272930","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-225272930","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":225272930,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTI3MjkzMA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-10T19:22:47Z","updated_at":"2016-06-10T19:22:47Z","author_association":"CONTRIBUTOR","body":"> 1. To jiggle the allocator to make it start when it stopped.\n\nthis doesn't need an allocation command right? all you need to do is to run `_reroute` with an empty body?\n\n> I'd be quite happy with an API to force assignment of an empty primary and one to jiggle the allocator. A command line tool is less nice because I'd have to connect to the right node and stuff. Also, I'm not sure it'd work in the case where the data is totally gone?\n> I remember once I reformatted a few machine when I didn't have any replicas. I wasn't paying good attention.....\n\nI think in such a case we should have a cmd tool that creates such an empty primary shard on disk and we let `_reroute?fetch_stores=true` go and figure out the rest?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225279866","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-225279866","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":225279866,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTI3OTg2Ng==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-06-10T19:54:57Z","updated_at":"2016-06-10T19:54:57Z","author_association":"CONTRIBUTOR","body":"> this doesn't need an allocation command right? all you need to do is to run _reroute with an empty body?\n\nI don't believe it is required. I think I always added some small one just in case.\n\n> I think in such a case we should have a cmd tool that creates such an empty primary shard on disk and we let `_reroute?fetch_stores=true` go and figure out the rest?\n\nSorry, I don't know that API. I still don't like having to pick a machine on which to create the empty shard. That was one of the problems with the allow_primary command - you had to pick a node rather than just let Elasticsearch pick a decent choice. It was just another thing to have to think about when you've busted your cluster.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225281674","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-225281674","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":225281674,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTI4MTY3NA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-10T20:03:01Z","updated_at":"2016-06-10T20:03:01Z","author_association":"CONTRIBUTOR","body":"> Sorry, I don't know that API. I still don't like having to pick a machine on which to create the empty shard. That was one of the problems with the allow_primary command - you had to pick a node rather than just let Elasticsearch pick a decent choice. It was just another thing to have to think about when you've busted your cluster. \n\nI made that API up :) I think this is something that you should never use a REST endpoint for. something is seriously fucked up lets build one-off tools for these situations.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225409530","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-225409530","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":225409530,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTQwOTUzMA==","user":{"login":"jonaf","id":456794,"node_id":"MDQ6VXNlcjQ1Njc5NA==","avatar_url":"https://avatars3.githubusercontent.com/u/456794?v=4","gravatar_id":"","url":"https://api.github.com/users/jonaf","html_url":"https://github.com/jonaf","followers_url":"https://api.github.com/users/jonaf/followers","following_url":"https://api.github.com/users/jonaf/following{/other_user}","gists_url":"https://api.github.com/users/jonaf/gists{/gist_id}","starred_url":"https://api.github.com/users/jonaf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonaf/subscriptions","organizations_url":"https://api.github.com/users/jonaf/orgs","repos_url":"https://api.github.com/users/jonaf/repos","events_url":"https://api.github.com/users/jonaf/events{/privacy}","received_events_url":"https://api.github.com/users/jonaf/received_events","type":"User","site_admin":false},"created_at":"2016-06-12T04:26:50Z","updated_at":"2016-06-12T04:26:50Z","author_association":"NONE","body":"I have used the reroute API in many cases to get ES \"unstuck\" from either initializing or unassigned shards. I'm not sure how else I'd recover a cluster besides restarting it (sometimes this means a full cluster restart). Since Elasticsearch is often the primary means of searching for public services, a full cluster restart is rarely an option (in particular, replacing the cluster for a reason such as this is quite expensive from an infrastructure perspective). Restarting individual nodes gets progressively less painful with every release, but I doubt it will ever be a trivial performance cost.\n\nIn older versions of Elasticsearch, I found myself using the reroute API more frequently because it was often unclear why ES would refuse to allocate shards. I think this has also gotten better with every release, and particularly in 2.x, the state of shards (or problems allocating them) gets clearer.\n\nI guess the reroute API gives a (false?) sense of security, since it gives the administrator the hammer with which to enforce a shard movement / allocation, and that just makes a guy feel in control.\n\n> I think this is something that you should never use a REST endpoint for. something is seriously fucked up lets build one-off tools for these situations.\n\nI can see your argument for removing this from the REST API and, for the functionality that is not satisfied by existing API's or other means, moving to a command line tool. Of course, to complement this new tool, it would be really nice if Elasticsearch could identify the node(s) that are good candidates for the allocation, or some API to \"propose\" an allocation where Elasticsearch suggests which nodes are good candidates. That's not more convenient than the REST API, but at least it doesn't suddenly make the process of such allocations go from convenient to painful suddenly.\n\n> That was one of the problems with the allow_primary command - you had to pick a node rather than just let Elasticsearch pick a decent choice. It was just another thing to have to think about when you've busted your cluster.\n\nHm, I would always just allocate to a random node. ES will rebalance afterwards if it isn't happy with the allocation. But I suppose ES could make the destination node optional and pick something better than \"random\" for you.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225555281","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-225555281","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":225555281,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTU1NTI4MQ==","user":{"login":"aewhite","id":4342706,"node_id":"MDQ6VXNlcjQzNDI3MDY=","avatar_url":"https://avatars1.githubusercontent.com/u/4342706?v=4","gravatar_id":"","url":"https://api.github.com/users/aewhite","html_url":"https://github.com/aewhite","followers_url":"https://api.github.com/users/aewhite/followers","following_url":"https://api.github.com/users/aewhite/following{/other_user}","gists_url":"https://api.github.com/users/aewhite/gists{/gist_id}","starred_url":"https://api.github.com/users/aewhite/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aewhite/subscriptions","organizations_url":"https://api.github.com/users/aewhite/orgs","repos_url":"https://api.github.com/users/aewhite/repos","events_url":"https://api.github.com/users/aewhite/events{/privacy}","received_events_url":"https://api.github.com/users/aewhite/received_events","type":"User","site_admin":false},"created_at":"2016-06-13T11:27:10Z","updated_at":"2016-06-13T11:27:10Z","author_association":"NONE","body":"The reroute API has been a critical tool for in keeping the cluster stable when the default allocator over allocated a node. This was a fairly normal case for us before we switched to tempest due to our shard sizes not being equal. \n\nBalance aside, I've had to unallocate shards and let them \"rebuild\" because their translogs got out-of-sync and had deletes showing up on one shard but not another. \n\nIn a perfect world, maybe it's not needed, but I don't think ES is there yet. Yeah, it's a really big hammer but I can't think of another tool that would have solved our problems. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225560075","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-225560075","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":225560075,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTU2MDA3NQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-13T11:53:45Z","updated_at":"2016-06-13T11:53:45Z","author_association":"CONTRIBUTOR","body":"> The reroute API has been a critical tool for in keeping the cluster stable when the default allocator over allocated a node. This was a fairly normal case for us before we switched to tempest due to our shard sizes not being equal.\n\nso you took over the entire shard allocation process and manage everything yourself? I am asking because otherwise the balancer will kick in and reverse your decisions at some random point in time?\n\n> Balance aside, I've had to unallocate shards and let them \"rebuild\" because their translogs got out-of-sync and had deletes showing up on one shard but not another.\n\nthis is a special case which happens rarely I am against an API for, it should be a commandline tool.\n\n> In a perfect world, maybe it's not needed, but I don't think ES is there yet. Yeah, it's a really big hammer but I can't think of another tool that would have solved our problems.\n\nI haven't seen any reason here that convinced me to not remove it. It's too much of a hammer. If the balancer is not smart enough for a usecase we have to fix it. If we need more allocation decider we have to fix it. We can't offer a hammer and expect the user to know how to use it. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225571057","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-225571057","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":225571057,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTU3MTA1Nw==","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2016-06-13T12:48:01Z","updated_at":"2016-06-13T12:48:01Z","author_association":"MEMBER","body":"+1 on this suggestion, simple reroute API to kickstart a reroute is handy. A way to (1) force a primary to be allocated (2) stop shard allocation is also very handy, don't mind if it is in an API (with extra protection flag, or conformation based execution based on random token) or a command line tool.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225571644","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-225571644","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":225571644,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTU3MTY0NA==","user":{"login":"aewhite","id":4342706,"node_id":"MDQ6VXNlcjQzNDI3MDY=","avatar_url":"https://avatars1.githubusercontent.com/u/4342706?v=4","gravatar_id":"","url":"https://api.github.com/users/aewhite","html_url":"https://github.com/aewhite","followers_url":"https://api.github.com/users/aewhite/followers","following_url":"https://api.github.com/users/aewhite/following{/other_user}","gists_url":"https://api.github.com/users/aewhite/gists{/gist_id}","starred_url":"https://api.github.com/users/aewhite/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aewhite/subscriptions","organizations_url":"https://api.github.com/users/aewhite/orgs","repos_url":"https://api.github.com/users/aewhite/repos","events_url":"https://api.github.com/users/aewhite/events{/privacy}","received_events_url":"https://api.github.com/users/aewhite/received_events","type":"User","site_admin":false},"created_at":"2016-06-13T12:50:58Z","updated_at":"2016-06-13T12:50:58Z","author_association":"NONE","body":"> the balancer will kick in and reverse your decisions at some random point in time\n\nThat is not entirely true. It tries to balance by shard _count_ so as long as I swapped a large shard for a small shard the balancer left things alone. \n\n> I haven't seen any reason here that convinced me to not remove it\n\nAs long as the same functionality exists somewhere then I guess I don't really have much of an argument. \n\nMy biggest concern is that a production cluster get's into resource starved or hot-spot-heavy sate and admins have no recourse. Balancers aren't perfect, configuration can miss edge cases, and bugs happens, so make sure the hammer exists somewhere to get the system stable. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225572676","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-225572676","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":225572676,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTU3MjY3Ng==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-13T12:55:39Z","updated_at":"2016-06-13T12:55:39Z","author_association":"CONTRIBUTOR","body":"> My biggest concern is that a production cluster get's into resource starved or hot-spot-heavy sate and admins have no recourse. Balancers aren't perfect, configuration can miss edge cases, and bugs happens, so make sure the hammer exists somewhere to get the system stable.\n\nsee this is my argument, I can support anybody in the community that just goes and uses that hammer. Hence I have to remove the hammer. Edge cases happen but that doesn't mean I am going to build APIs that work around ANY safety mechanism available. The reason \"something might happen\" isn't valid here give how many people get into the \"something happened\" situation because of that hammer?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225572733","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-225572733","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":225572733,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTU3MjczMw==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-13T12:55:59Z","updated_at":"2016-06-13T12:55:59Z","author_association":"CONTRIBUTOR","body":"> As long as the same functionality exists somewhere then I guess I don't really have much of an argument.\n\nyeah no it won't exist. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225574439","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-225574439","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":225574439,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTU3NDQzOQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-06-13T13:03:14Z","updated_at":"2016-06-13T13:03:14Z","author_association":"CONTRIBUTOR","body":"> That is not entirely true. It tries to balance by shard count so as long as I swapped a large shard for a small shard the balancer left things alone.\n\nA combination of [allocation filtering](https://www.elastic.co/guide/en/elasticsearch/reference/current/shard-allocation-filtering.html) and settings [total_shards_per_node](https://www.elastic.co/guide/en/elasticsearch/reference/current/allocation-total-shards.html) on the index level is going to be more permanent. It might not be enough to get the cluster safe, but in that case we should address that issue. Anything you do with the reroute API is going to be undone by the balancer eventually because it doesn't set up constraints. That is why it isn't a good API. It works temporarily.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225577289","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-225577289","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":225577289,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTU3NzI4OQ==","user":{"login":"aewhite","id":4342706,"node_id":"MDQ6VXNlcjQzNDI3MDY=","avatar_url":"https://avatars1.githubusercontent.com/u/4342706?v=4","gravatar_id":"","url":"https://api.github.com/users/aewhite","html_url":"https://github.com/aewhite","followers_url":"https://api.github.com/users/aewhite/followers","following_url":"https://api.github.com/users/aewhite/following{/other_user}","gists_url":"https://api.github.com/users/aewhite/gists{/gist_id}","starred_url":"https://api.github.com/users/aewhite/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aewhite/subscriptions","organizations_url":"https://api.github.com/users/aewhite/orgs","repos_url":"https://api.github.com/users/aewhite/repos","events_url":"https://api.github.com/users/aewhite/events{/privacy}","received_events_url":"https://api.github.com/users/aewhite/received_events","type":"User","site_admin":false},"created_at":"2016-06-13T13:16:13Z","updated_at":"2016-06-13T13:17:22Z","author_association":"NONE","body":"So, what is the the hypothetical solution to the problem of a cluster with a hot spot that is killing bulk loading performance. Or, since ES can't predict the size of shards, put two large shards on the same node and cause resource/hot-spotting issues? These are both very real issues that we have faced and not hypotheticals, and as far as I can tell are unavoidable without a bug-free, configuration perfect, very very advance balancer (or hardware overkill). \n\nI agree with @nik9000 that the use of reroute is a temporarily solution but the alternative of having NO solution in a production environment is very scary. If a bug is discovered in a live environment, I don't see waiting on a code fix as being feasible. To me, this isn't a \"might happen\" but more of a \"when will it happen\" case. \n\nAnyway, I rest my case, I don't want to take over or derail the conversation here. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225583223","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-225583223","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":225583223,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTU4MzIyMw==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-13T13:39:17Z","updated_at":"2016-06-13T13:39:17Z","author_association":"CONTRIBUTOR","body":"> So, what is the the hypothetical solution to the problem of a cluster with a hot spot that is killing bulk loading performance. Or, since ES can't predict the size of shards, put two large shards on the same node and cause resource/hot-spotting issues? These are both very real issues that we have faced and not hypotheticals, and as far as I can tell are unavoidable without a bug-free, configuration perfect, very very advance balancer (or hardware overkill).\n\nI have been thinking about this for a while and I think the solution to this is to give the user more control how the balancer handles individual indices. The ultimate flexibility here would be a adding a weight to an index that the balancer can take into account. This weight would be updatable such that the user can reduce the weight if the index goes readonly or can raise it if bulk indexing happens. This could be even combined with a node level max weight where certain nodes can only hold shards up to a certain weight. I think what we won't do as a start is to make the weight dynamic in terms of changing it automatically if indexing rate drops, it's too fragile and might change too quickly. But for your situation this seems to be the right solution and the user knows much better if an index is much bigger than another index. It can still be a function of the # of docs or so but it's up to the user I guess\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/226550067","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-226550067","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":226550067,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNjU1MDA2Nw==","user":{"login":"jonaf","id":456794,"node_id":"MDQ6VXNlcjQ1Njc5NA==","avatar_url":"https://avatars3.githubusercontent.com/u/456794?v=4","gravatar_id":"","url":"https://api.github.com/users/jonaf","html_url":"https://github.com/jonaf","followers_url":"https://api.github.com/users/jonaf/followers","following_url":"https://api.github.com/users/jonaf/following{/other_user}","gists_url":"https://api.github.com/users/jonaf/gists{/gist_id}","starred_url":"https://api.github.com/users/jonaf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonaf/subscriptions","organizations_url":"https://api.github.com/users/jonaf/orgs","repos_url":"https://api.github.com/users/jonaf/repos","events_url":"https://api.github.com/users/jonaf/events{/privacy}","received_events_url":"https://api.github.com/users/jonaf/received_events","type":"User","site_admin":false},"created_at":"2016-06-16T17:08:35Z","updated_at":"2016-06-16T17:10:40Z","author_association":"NONE","body":"As an update, I ran into a use-case for the reroute API today in Elasticsearch 1.7.3. I had a cluster in yellow state with 2242 unassigned shards. When I looked at the shards API, I saw that they were all the third replica of all of the indices in the cluster. The day before, the cluster had a node go unhealthy and recover during heavy indexing / index creation. I restarted the node that went unhealthy to see if Elasticsearch would start assigning shards again, and it didn't do anything. So I then used the reroute API to assign one of the replicas to a random node -- I expected to get an error with a message from Elasticsearch explaining why the shard couldn't be assigned. To my surprise, though, the replica shard _was_ assigned. So I proceeded to assign the rest in the same way.\n\nThese were replica shards, so a command line tool to create empty primaries would not have helped as a replacement for the reroute API. I'm not sure what else I could have done to recover the cluster, except muck with the allocation settings and try to convince Elasticsearch to move shards around in some way and hopefully pick up and assign those other shards.\n\nAt the very least, it would have been really helpful if ES had logged errors to indicate the reason why those replicas were never assigned so I could know in what way I needed to adjust my cluster settings and/or topology to satisfy the allocation requirements.\n\nHere's the cluster health API output after I started assigning shards:\n\n``` json\n{\n  \"cluster_name\": \"anon_polloi_agrippasrc_lyamtestfiltalloca_elasticsearch\",\n  \"status\": \"yellow\",\n  \"timed_out\": false,\n  \"number_of_nodes\": 24,\n  \"number_of_data_nodes\": 18,\n  \"active_primary_shards\": 7548,\n  \"active_shards\": 20295,\n  \"relocating_shards\": 21,\n  \"initializing_shards\": 2,\n  \"unassigned_shards\": 2347,\n  \"delayed_unassigned_shards\": 0,\n  \"number_of_pending_tasks\": 1459,\n  \"number_of_in_flight_fetch\": 17040\n}\n```\n\nHere's what it looked like before I did anything:\n\n``` json\n{\n  \"cluster_name\": \"anon_polloi_agrippasrc_lyamtestfiltalloca_elasticsearch\",\n  \"status\": \"yellow\",\n  \"timed_out\": false,\n  \"number_of_nodes\": 24,\n  \"number_of_data_nodes\": 18,\n  \"active_primary_shards\": 7548,\n  \"active_shards\": 20222,\n  \"relocating_shards\": 0,\n  \"initializing_shards\": 0,\n  \"unassigned_shards\": 2422,\n  \"delayed_unassigned_shards\": 0,\n  \"number_of_pending_tasks\": 0,\n  \"number_of_in_flight_fetch\": 17572\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/226704632","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-226704632","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":226704632,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNjcwNDYzMg==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-06-17T07:53:53Z","updated_at":"2016-06-17T07:53:53Z","author_association":"CONTRIBUTOR","body":"you have to wait until `\"number_of_in_flight_fetch\": 17572` goes to 0 it's still looking for unallocated version of those shards. See this is exactly why I think this API is trappy and must go away.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/255031664","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-255031664","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":255031664,"node_id":"MDEyOklzc3VlQ29tbWVudDI1NTAzMTY2NA==","user":{"login":"radu-gheorghe","id":1482088,"node_id":"MDQ6VXNlcjE0ODIwODg=","avatar_url":"https://avatars0.githubusercontent.com/u/1482088?v=4","gravatar_id":"","url":"https://api.github.com/users/radu-gheorghe","html_url":"https://github.com/radu-gheorghe","followers_url":"https://api.github.com/users/radu-gheorghe/followers","following_url":"https://api.github.com/users/radu-gheorghe/following{/other_user}","gists_url":"https://api.github.com/users/radu-gheorghe/gists{/gist_id}","starred_url":"https://api.github.com/users/radu-gheorghe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/radu-gheorghe/subscriptions","organizations_url":"https://api.github.com/users/radu-gheorghe/orgs","repos_url":"https://api.github.com/users/radu-gheorghe/repos","events_url":"https://api.github.com/users/radu-gheorghe/events{/privacy}","received_events_url":"https://api.github.com/users/radu-gheorghe/received_events","type":"User","site_admin":false},"created_at":"2016-10-20T07:38:02Z","updated_at":"2016-10-20T07:38:02Z","author_association":"CONTRIBUTOR","body":"> I think this stuff needs to go. We can't offer APIs like this where basically nothing in the docs tells you:\n> - this is an expert API\n> - 99% of the times you are going to use it you should either user a different API, report a but or just don't mess with the cluster at all\n> - use a cmd tool to repair state on disc so primaries can be allocated (we don't have that yet I know but you get the drift)\n> \n> I spend so much time on pulling folks out of the dirt after using this I don't think it's worth it. \n\nMaybe changing the docs to point these things out, while still leaving users with the flexibility, is a better solution.\n\nReporting a bug when we find one is definitely a good idea, but if it occurs in production it's nice to have a workaround, you can't wait for the bug to be fixed. Granted, now ES is more stable than it used to be (and thanks so much for the titanic work on making it happen!), but I'm still scared of not having the option to allocate shards manually in various corner cases.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/374911506","html_url":"https://github.com/elastic/elasticsearch/issues/18819#issuecomment-374911506","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18819","id":374911506,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NDkxMTUwNg==","user":{"login":"hub-cap","id":613352,"node_id":"MDQ6VXNlcjYxMzM1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/613352?v=4","gravatar_id":"","url":"https://api.github.com/users/hub-cap","html_url":"https://github.com/hub-cap","followers_url":"https://api.github.com/users/hub-cap/followers","following_url":"https://api.github.com/users/hub-cap/following{/other_user}","gists_url":"https://api.github.com/users/hub-cap/gists{/gist_id}","starred_url":"https://api.github.com/users/hub-cap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hub-cap/subscriptions","organizations_url":"https://api.github.com/users/hub-cap/orgs","repos_url":"https://api.github.com/users/hub-cap/repos","events_url":"https://api.github.com/users/hub-cap/events{/privacy}","received_events_url":"https://api.github.com/users/hub-cap/received_events","type":"User","site_admin":false},"created_at":"2018-03-21T11:50:06Z","updated_at":"2018-03-21T11:50:06Z","author_association":"CONTRIBUTOR","body":"After chatting with @s1monw we prefer to close this issue as a clear indication that we are not going to work on this at this time. We are always open to reconsidering this in the future based on compelling feedback; despite this issue being closed please feel free to leave feedback on the proposal (including +1s).","performed_via_github_app":null}]