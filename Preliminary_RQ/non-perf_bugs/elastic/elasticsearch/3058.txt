{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3058","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3058/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3058/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3058/events","html_url":"https://github.com/elastic/elasticsearch/issues/3058","id":14482256,"node_id":"MDU6SXNzdWUxNDQ4MjI1Ng==","number":3058,"title":"Query norm doesn't apply to custom_score queries","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2013-05-18T11:30:32Z","updated_at":"2014-07-03T19:40:42Z","closed_at":"2014-07-03T19:40:42Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Should query norm apply to custom_score queries? Currently it doesn't - it just returns the \"pure\" _score returned from the script.  This can make for inconsistencies, eg:\n\n```\ncurl -XDELETE 'http://127.0.0.1:9200/test/?pretty=1'\n\ncurl -XPUT 'http://127.0.0.1:9200/test/product/1?pretty=1'  -d '\n{\n   \"foo\" : 1\n}\n'\n\ncurl -XPUT 'http://127.0.0.1:9200/test/product/2?pretty=1&refresh=1'  -d '\n{\n   \"foo\" : 2\n}\n'\n```\n\nI would assume that both `should` clauses would return a score of 3, but the `constant_score` clause has its boost normalised by the query norm, and the `custom_score` doesn't:\n\n```\ncurl -XGET 'http://127.0.0.1:9200/test/product/_search?pretty&format=yaml&explain=true'  -d '\n{\n   \"query\" : {\n      \"bool\" : {\n         \"disable_coord\" : 1,\n         \"should\" : [\n            {\n               \"custom_score\" : {\n                  \"script\" : \"3\",\n                  \"query\" : {\n                     \"constant_score\" : {\n                        \"filter\" : {\n                           \"term\" : {\n                              \"foo\" : 1\n                           }\n                        }\n                     }\n                  }\n               }\n            },\n            {\n               \"constant_score\" : {\n                  \"boost\" : 3,\n                  \"filter\" : {\n                     \"term\" : {\n                        \"foo\" : 2\n                     }\n                  }\n               }\n            }\n         ]\n      }\n   }\n}\n'\n```\n\nExplain output:\n\n```\ntook: 2\ntimed_out: false\n_shards:\n  total: 5\n  successful: 5\n  failed: 0\nhits:\n  total: 2\n  max_score: 3.0\n  hits:\n  - _shard: 2\n    _node: \"iGrI9-xiQQ2zn6aozlwmZQ\"\n    _index: \"test\"\n    _type: \"product\"\n    _id: \"1\"\n    _score: 3.0\n    _source:\n      foo: 1\n    _explanation:\n      value: 3.0\n      description: \"sum of:\"\n      details:\n      - value: 3.0\n        description: \"custom score, product of:\"\n        details:\n        - value: 3.0\n          description: \"script score function: composed of:\"\n          details:\n          - value: 0.31622776\n            description: \"ConstantScore(cache(foo:[1 TO 1])), product of:\"\n            details:\n            - value: 1.0\n              description: \"boost\"\n            - value: 0.31622776\n              description: \"queryNorm\"\n        - value: 1.0\n          description: \"queryBoost\"\n  - _shard: 3\n    _node: \"iGrI9-xiQQ2zn6aozlwmZQ\"\n    _index: \"test\"\n    _type: \"product\"\n    _id: \"2\"\n    _score: 0.94868326\n    _source:\n      foo: 2\n    _explanation:\n      value: 0.94868326\n      description: \"sum of:\"\n      details:\n      - value: 0.94868326\n        description: \"ConstantScore(cache(foo:[2 TO 2]))^3.0, product of:\"\n        details:\n        - value: 3.0\n          description: \"boost\"\n        - value: 0.31622776\n          description: \"queryNorm\"\n```\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}