{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35293/events","html_url":"https://github.com/elastic/elasticsearch/issues/35293","id":377815213,"node_id":"MDU6SXNzdWUzNzc4MTUyMTM=","number":35293,"title":"Function score functions filter executed in query context","user":{"login":"telendt","id":85191,"node_id":"MDQ6VXNlcjg1MTkx","avatar_url":"https://avatars2.githubusercontent.com/u/85191?v=4","gravatar_id":"","url":"https://api.github.com/users/telendt","html_url":"https://github.com/telendt","followers_url":"https://api.github.com/users/telendt/followers","following_url":"https://api.github.com/users/telendt/following{/other_user}","gists_url":"https://api.github.com/users/telendt/gists{/gist_id}","starred_url":"https://api.github.com/users/telendt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/telendt/subscriptions","organizations_url":"https://api.github.com/users/telendt/orgs","repos_url":"https://api.github.com/users/telendt/repos","events_url":"https://api.github.com/users/telendt/events{/privacy}","received_events_url":"https://api.github.com/users/telendt/received_events","type":"User","site_admin":false},"labels":[{"id":418189364,"node_id":"MDU6TGFiZWw0MTgxODkzNjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Ranking","name":":Search/Ranking","color":"0e8a16","default":false,"description":"Scoring, rescoring, rank evaluation."},{"id":23715,"node_id":"MDU6TGFiZWwyMzcxNQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Edocs","name":">docs","color":"db755e","default":false,"description":"General docs changes"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2018-11-06T11:58:40Z","updated_at":"2018-12-10T08:38:44Z","closed_at":"2018-12-03T10:49:12Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Elasticsearch version** (`bin/elasticsearch --version`):\r\n\r\nVersion: 6.4.2, Build: default/deb/04711c2/2018-09-26T13:34:09.098244Z, JVM: 1.8.0_191\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nWhen executing function score query with a bunch of function, each with its `filter` clause I would expect them (the `filter` queries) to be executed in [filter context](https://www.elastic.co/guide/en/elasticsearch/reference/6.4/query-filter-context.html), but they seem to be executed in query context instead.\r\n\r\n**Steps to reproduce**:\r\n\r\n### Step 1: Index 2 documents:\r\n\r\n```\r\ncurl -H 'Content-Type: application/x-ndjson' -XPOST localhost:9200/_bulk --data-binary '\r\n{\"index\":{\"_index\":\"test\",\"_type\":\"_doc\",\"_id\":\"1\"}}\r\n{\"tags\":[\"a\", \"b\"]}\r\n{\"index\":{\"_index\":\"test\",\"_type\":\"_doc\",\"_id\":\"2\"}}\r\n{\"tags\":[\"a\", \"c\"]}\r\n'\r\n```\r\n\r\n### Step 2: Prepare query\r\n\r\n```json\r\n{\r\n  \"query\": {\r\n    \"function_score\": {\r\n      \"functions\": [\r\n\t{\r\n\t  \"filter\": {\r\n\t    \"bool\": {\r\n\t      \"must\":   {\"match\": {\"tags\": \"a\"}},\r\n\t      \"should\": {\"match\": {\"tags\": \"c\"}}\r\n\t    }\r\n\t  },\r\n\t  \"weight\": 100\r\n\t}\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Step 3: Observe the results\r\n\r\n```json\r\n{\r\n  \"took\": 21,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 5,\r\n    \"successful\": 5,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": 2,\r\n    \"max_score\": 100,\r\n    \"hits\": [\r\n      {\r\n        \"_index\": \"test\",\r\n        \"_type\": \"_doc\",\r\n        \"_id\": \"2\",\r\n        \"_score\": 100,\r\n        \"_source\": {\r\n          \"tags\": [\r\n            \"a\",\r\n            \"c\"\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        \"_index\": \"test\",\r\n        \"_type\": \"_doc\",\r\n        \"_id\": \"1\",\r\n        \"_score\": 100,\r\n        \"_source\": {\r\n          \"tags\": [\r\n            \"a\",\r\n            \"b\"\r\n          ]\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n### Analysis\r\n\r\nBoth documents get 100 score, which means that the (only) function from `function_score` applied there. Which means that the `bool` query from its `filter` clause matched both documents. Which -- according to documentation -- means that the bool query has been executed in query context:\r\n\r\n> **SHOULD**: The clause (query) should appear in the matching document. If the bool query is in a query context and has a must or filter clause then a document will match the bool query even if none of the should queries match. In this case these clauses are only used to influence the score. If the bool query is a filter context or has neither must or filter then at least one of the should queries must match a document for it to match the bool query. This behavior may be explicitly controlled by settings the minimum_should_match parameter.\r\n\r\nSince the bool query has a *must* clause (`{\"match\": {\"tags\": \"a\"}}`) that matches both documents, the behaviour of *should* depends on execution context. According to the quoted text in *filter* context there's an implicit `minimum_should_match=1`. The fact that both documents matched suggests that it got executed in query context though. But that seems counter intuitive to:\r\n\r\n> Filter context is in effect whenever a query clause is passed to a filter parameter, such as the filter or must_not parameters in the bool query, the filter parameter in the constant_score query, or the filter aggregation.\r\n\r\nAlso, [this fragment from the docs](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html) says:\r\n\r\n> The scores produced by the filtering query of each function do not matter.\r\n\r\nWhich would suggest filter context.\r\n\r\n### Final words\r\n\r\nI'm not 100% sure whether it's really an implementation bug, documentation bug or me not understanding the docs and would be happy if someone could help me figure that out.","closed_by":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}