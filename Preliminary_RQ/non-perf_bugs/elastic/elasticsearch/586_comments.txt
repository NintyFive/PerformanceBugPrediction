[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/645250","html_url":"https://github.com/elastic/elasticsearch/issues/586#issuecomment-645250","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/586","id":645250,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NTI1MA==","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2011-01-01T10:09:22Z","updated_at":"2011-01-01T10:09:22Z","author_association":"MEMBER","body":"Basically, ES parses the json, and if it passes parsing, then as far as ES is concerned, its a valid json. The parser ES uses is instructed (it was like that form the start) to allow for unquoted field names in the json, I am not sure I can change it now. \n\nThe idea I had for allowing for unquoted json structures is the benefit in it both in parsing speed and json size. It might have been a mistake to allow for that (by default), but I am not sure I can change it now...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/645252","html_url":"https://github.com/elastic/elasticsearch/issues/586#issuecomment-645252","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/586","id":645252,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NTI1Mg==","user":{"login":"mobz","id":45259,"node_id":"MDQ6VXNlcjQ1MjU5","avatar_url":"https://avatars1.githubusercontent.com/u/45259?v=4","gravatar_id":"","url":"https://api.github.com/users/mobz","html_url":"https://github.com/mobz","followers_url":"https://api.github.com/users/mobz/followers","following_url":"https://api.github.com/users/mobz/following{/other_user}","gists_url":"https://api.github.com/users/mobz/gists{/gist_id}","starred_url":"https://api.github.com/users/mobz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mobz/subscriptions","organizations_url":"https://api.github.com/users/mobz/orgs","repos_url":"https://api.github.com/users/mobz/repos","events_url":"https://api.github.com/users/mobz/events{/privacy}","received_events_url":"https://api.github.com/users/mobz/received_events","type":"User","site_admin":false},"created_at":"2011-01-01T10:19:07Z","updated_at":"2011-01-01T10:19:07Z","author_association":"NONE","body":"if you accept invalid json at input, but then modify it to be valid before it is output, I would not think that would break any applications. any parser should accept { foo: \"bar\" } or { \"foo\" : \"bar\" }, unless it is non-conforming in the first place.\n\nMy client app is an ES browser, and will be run against clusters where the strictness of the input is not guaranteed. I can not use a non-conforming json parser (eg eval) because of security considerations.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/645256","html_url":"https://github.com/elastic/elasticsearch/issues/586#issuecomment-645256","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/586","id":645256,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NTI1Ng==","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2011-01-01T10:30:43Z","updated_at":"2011-01-01T10:30:43Z","author_association":"MEMBER","body":"The process of regenerating a json based on the input is not something that ES is going to do because of performance implications.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/645338","html_url":"https://github.com/elastic/elasticsearch/issues/586#issuecomment-645338","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/586","id":645338,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NTMzOA==","user":{"login":"mobz","id":45259,"node_id":"MDQ6VXNlcjQ1MjU5","avatar_url":"https://avatars1.githubusercontent.com/u/45259?v=4","gravatar_id":"","url":"https://api.github.com/users/mobz","html_url":"https://github.com/mobz","followers_url":"https://api.github.com/users/mobz/followers","following_url":"https://api.github.com/users/mobz/following{/other_user}","gists_url":"https://api.github.com/users/mobz/gists{/gist_id}","starred_url":"https://api.github.com/users/mobz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mobz/subscriptions","organizations_url":"https://api.github.com/users/mobz/orgs","repos_url":"https://api.github.com/users/mobz/repos","events_url":"https://api.github.com/users/mobz/events{/privacy}","received_events_url":"https://api.github.com/users/mobz/received_events","type":"User","site_admin":false},"created_at":"2011-01-01T12:32:07Z","updated_at":"2011-01-01T12:32:07Z","author_association":"NONE","body":"fair enough, we'll just have to work around it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/645349","html_url":"https://github.com/elastic/elasticsearch/issues/586#issuecomment-645349","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/586","id":645349,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NTM0OQ==","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2011-01-01T13:15:06Z","updated_at":"2011-01-01T13:15:06Z","author_association":"MEMBER","body":"I think that its such an uncommon case, that you don't need specifically handle it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49624343","html_url":"https://github.com/elastic/elasticsearch/issues/586#issuecomment-49624343","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/586","id":49624343,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NjI0MzQz","user":{"login":"oaubert","id":301906,"node_id":"MDQ6VXNlcjMwMTkwNg==","avatar_url":"https://avatars1.githubusercontent.com/u/301906?v=4","gravatar_id":"","url":"https://api.github.com/users/oaubert","html_url":"https://github.com/oaubert","followers_url":"https://api.github.com/users/oaubert/followers","following_url":"https://api.github.com/users/oaubert/following{/other_user}","gists_url":"https://api.github.com/users/oaubert/gists{/gist_id}","starred_url":"https://api.github.com/users/oaubert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oaubert/subscriptions","organizations_url":"https://api.github.com/users/oaubert/orgs","repos_url":"https://api.github.com/users/oaubert/repos","events_url":"https://api.github.com/users/oaubert/events{/privacy}","received_events_url":"https://api.github.com/users/oaubert/received_events","type":"User","site_admin":false},"created_at":"2014-07-21T15:53:04Z","updated_at":"2014-07-21T15:53:04Z","author_association":"NONE","body":"This is in fact not such an uncommon case when testing things. And the https://github.com/elasticsearch/kibana/issues/1088 issue illustrates the kind of side effects this can have: a mostly working kibana dashboard, except for the table component (because it requires the source). While I can agree on the performance issues that would be incurred by regenerating correct data, I +1 the first part of the suggestion (making the parser more strict, and just refuse incorrect JSON, instead of polluting the database with invalid JSON values that will bite at unexpected places).\n","performed_via_github_app":null}]