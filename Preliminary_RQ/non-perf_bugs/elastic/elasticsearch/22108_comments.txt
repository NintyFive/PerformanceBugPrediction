[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/266397825","html_url":"https://github.com/elastic/elasticsearch/issues/22108#issuecomment-266397825","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22108","id":266397825,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NjM5NzgyNQ==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2016-12-12T10:49:28Z","updated_at":"2016-12-12T10:49:28Z","author_association":"CONTRIBUTOR","body":"Interesting find. This shows a discrepancy between node settings and persistent (cluster-level) settings. When es1 is restarted it uses its node-local setting of min_master_nodes (which is 1) to publish the initial cluster state (that's the cluster state that establishes es1 as master). It also does so for the second cluster state where the state is recovered (only the recovered state has the information min_master_nodes = 2). That state will not allow that the settings be applied on the local node though, as there is a check in place that prevents updating min_master_nodes to a value that is higher than the current number of master-eligible nodes. The node thus continues working as if it had min_master_nodes = 1 but is unable to apply settings locally ðŸ‘Ž .\r\n\r\nI see a few options to address this:\r\n1) Remove the check that prevents min_master_nodes to be set to a value that is higher than the current number of master-eligible nodes.\r\n2) Don't allow the recovered state to be published.\r\n3) make `min_master_nodes` a non-dynamic setting so that it can only be set at node-level.\r\n\r\nWhat are the advantages / disadvantages of these solutions?\r\n\r\n1) has the downside that only after publishing the state to itself will the node detect that min_master_nodes is set to less than a quorum and step down as master, i.e. there is a short time where the node will still appear as fully-recovered master (but at least it takes corrective action).\r\n2) has a similar issue (although less bad). It makes the master switch between master-election and `state not recovered / initialized` mode as it can become master but not publish the recovered state. If, in the future, we don't have a separate step for recovering the state but tie this into master-election, this would be my preferred method.\r\n3) eliminates the discrepancy between node and cluster-level but puts an additional burden on the user to make sure that every master-eligible node has the correct settings (i.e. that the node settings do not diverge among the master-eligible nodes). Also, BWC...\r\n\r\nAs a short-term fix, 1) seems to be the simplest solution. WDYT @bleskes @jasontedor?\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/266454057","html_url":"https://github.com/elastic/elasticsearch/issues/22108#issuecomment-266454057","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22108","id":266454057,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NjQ1NDA1Nw==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-12-12T15:06:36Z","updated_at":"2016-12-12T15:06:36Z","author_association":"CONTRIBUTOR","body":"@ywelsch can we in this particular case check if the cluster state we use to get the number of master nodes in the cluster has the same value as the one we are trying to apply and then skip the check and apply? I think for this particular situation this is enough?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/266474884","html_url":"https://github.com/elastic/elasticsearch/issues/22108#issuecomment-266474884","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22108","id":266474884,"node_id":"MDEyOklzc3VlQ29tbWVudDI2NjQ3NDg4NA==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2016-12-12T16:20:25Z","updated_at":"2016-12-12T16:20:25Z","author_association":"CONTRIBUTOR","body":"The check is called by the settings update validator, which is called in two contexts:\r\n1) when the user submits a settings change and master validates the setting (dryRun).\r\n2) when the cluster service applies a cluster state update with the updated setting (that was published and validated before).\r\n\r\nIf I understand your suggestion, you would like to distinguish between those 2 situations and only check the property in the first case. These two situations can be distinguished currently by looking at the cluster state available in `ClusterService.state()`. In case 1), the cluster state will be the one before applying this change, and in case 2), it will be the one after applying this change. With PR #21817, this changes however, and the 2 situations become indistinguishable in that regard (I've made a related comment as well on that PR regarding this aspect).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/374544481","html_url":"https://github.com/elastic/elasticsearch/issues/22108#issuecomment-374544481","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22108","id":374544481,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NDU0NDQ4MQ==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2018-03-20T10:17:15Z","updated_at":"2018-03-20T10:17:15Z","author_association":"CONTRIBUTOR","body":"Closing this as it is superseded by the changes we have planned in the Zen 2 project.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/463727706","html_url":"https://github.com/elastic/elasticsearch/issues/22108#issuecomment-463727706","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22108","id":463727706,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzcyNzcwNg==","user":{"login":"thomassuckow","id":3100037,"node_id":"MDQ6VXNlcjMxMDAwMzc=","avatar_url":"https://avatars2.githubusercontent.com/u/3100037?v=4","gravatar_id":"","url":"https://api.github.com/users/thomassuckow","html_url":"https://github.com/thomassuckow","followers_url":"https://api.github.com/users/thomassuckow/followers","following_url":"https://api.github.com/users/thomassuckow/following{/other_user}","gists_url":"https://api.github.com/users/thomassuckow/gists{/gist_id}","starred_url":"https://api.github.com/users/thomassuckow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomassuckow/subscriptions","organizations_url":"https://api.github.com/users/thomassuckow/orgs","repos_url":"https://api.github.com/users/thomassuckow/repos","events_url":"https://api.github.com/users/thomassuckow/events{/privacy}","received_events_url":"https://api.github.com/users/thomassuckow/received_events","type":"User","site_admin":false},"created_at":"2019-02-14T18:00:54Z","updated_at":"2019-02-14T18:00:54Z","author_association":"NONE","body":"What is the status of Zen2? From what i can tell it looks like it is part of 7.0 and a new cluster.initial_master_nodes","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/463964929","html_url":"https://github.com/elastic/elasticsearch/issues/22108#issuecomment-463964929","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22108","id":463964929,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mzk2NDkyOQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2019-02-15T09:18:06Z","updated_at":"2019-02-15T09:18:06Z","author_association":"MEMBER","body":"@thomassuckow zen2 will indeed be released as part of 7.0","performed_via_github_app":null}]