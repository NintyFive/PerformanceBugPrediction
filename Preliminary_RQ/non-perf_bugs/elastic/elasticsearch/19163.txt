{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/19163","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19163/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19163/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19163/events","html_url":"https://github.com/elastic/elasticsearch/issues/19163","id":163001610,"node_id":"MDU6SXNzdWUxNjMwMDE2MTA=","number":19163,"title":"ES 5 Doesn't allow registering default analyzer","user":{"login":"mitchswaldman","id":8648823,"node_id":"MDQ6VXNlcjg2NDg4MjM=","avatar_url":"https://avatars0.githubusercontent.com/u/8648823?v=4","gravatar_id":"","url":"https://api.github.com/users/mitchswaldman","html_url":"https://github.com/mitchswaldman","followers_url":"https://api.github.com/users/mitchswaldman/followers","following_url":"https://api.github.com/users/mitchswaldman/following{/other_user}","gists_url":"https://api.github.com/users/mitchswaldman/gists{/gist_id}","starred_url":"https://api.github.com/users/mitchswaldman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mitchswaldman/subscriptions","organizations_url":"https://api.github.com/users/mitchswaldman/orgs","repos_url":"https://api.github.com/users/mitchswaldman/repos","events_url":"https://api.github.com/users/mitchswaldman/events{/privacy}","received_events_url":"https://api.github.com/users/mitchswaldman/received_events","type":"User","site_admin":false},"labels":[{"id":142001965,"node_id":"MDU6TGFiZWwxNDIwMDE5NjU=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Analysis","name":":Search/Analysis","color":"0e8a16","default":false,"description":"How text is split into tokens"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":396750536,"node_id":"MDU6TGFiZWwzOTY3NTA1MzY=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v5.0.0-alpha5","name":"v5.0.0-alpha5","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":22,"created_at":"2016-06-29T19:02:27Z","updated_at":"2017-05-09T08:15:26Z","closed_at":"2016-07-21T07:32:47Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\nGitHub is reserved for bug reports and feature requests. The best place\nto ask a general question is at the Elastic Discourse forums at\nhttps://discuss.elastic.co. If you are in fact posting a bug report or\na feature request, please include one and only one of the below blocks\nin your new issue.\n-->\n\n<!--\nIf you are filing a bug report, please remove the below feature\nrequest block and provide responses for all of the below items.\n-->\n\n**Elasticsearch version**: 5.0.0-alpha3\n\n**JVM version**: 1.8.0_73-b02\n\n**OS version**: CentOS Linux release 7.2.1511\n\n**Description of the problem including expected versus actual behavior**:\nI'm trying to upgrade an ES plugin from 2.3 to 5.0.0-alpha3, and a template we previously had working is now causing an issue. The template attempts to set some default analyzers for an index, but when the index is created it throws an error saying there's already an analyzer with the default name. \n\nHere's the template I'm using:\n`{\n  \"order\": 0, \n  \"settings\": {\n    \"index.analysis.analyzer.fairhairIndexAnalyzerv3.alias\": \"default\",\n    \"index.analysis.analyzer.fairhairIndexAnalyzerv3.type\": \"fairhair-index-analyzer\",\n    \"index.analysis.analyzer.fairhairTokenizingAnalyzer.type\": \"fairhair-tokenizing-analyzer\",\n    \"index.analysis.analyzer.fairhairTokenizingAnalyzer.alias\": \"default_search\"\n  },\n\"mappings\" : {\n   //some mappings\n},\n\"template\" : \"document.*\"\n}`\n\n**Provide logs (if relevant)**:\nHere's the error stack trace I get:\n`elasticsearch_1  | [2016-06-28 23:40:43,871][DEBUG][action.admin.indices.create] [Iridia] [document.document-20151106] failed to create\nelasticsearch_1  | java.lang.IllegalStateException: already registered analyzer with name: default\nelasticsearch_1  |  at org.elasticsearch.index.analysis.AnalysisService.<init>(AnalysisService.java:109)\nelasticsearch_1  |  at org.elasticsearch.index.analysis.AnalysisRegistry.build(AnalysisRegistry.java:161)\nelasticsearch_1  |  at org.elasticsearch.index.IndexService.<init>(IndexService.java:138)\nelasticsearch_1  |  at org.elasticsearch.index.IndexModule.newIndexService(IndexModule.java:328)\nelasticsearch_1  |  at org.elasticsearch.indices.IndicesService.createIndexService(IndicesService.java:398)\nelasticsearch_1  |  at org.elasticsearch.indices.IndicesService.createIndex(IndicesService.java:363)\n`\n\nI've looked at the AnalysisService class constructor, and I see it does a check for analyzers with the name \"default\" in the passed in analyzer mappings. I believe these conditional statements fire:\n\n`if (!analyzerProviders.containsKey(\"default\")) {\n            analyzerProviders.put(\"default\", new StandardAnalyzerProvider(indexSettings, null, \"default\", Settings.Builder.EMPTY_SETTINGS));\n        }\n        if (!analyzerProviders.containsKey(\"default_search\")) {\n            analyzerProviders.put(\"default_search\", analyzerProviders.get(\"default\"));\n        }\n        if (!analyzerProviders.containsKey(\"default_search_quoted\")) {\n            analyzerProviders.put(\"default_search_quoted\", analyzerProviders.get(\"default_search\"));\n        }`\n\nSo it registers the standard analyzer, but while iterating through the passed in analyzers, this check also fires:\n\n`if (analyzers.containsKey(name)) { //Grabs the name from each entry in analyzer map\n                throw new IllegalStateException(\"already registered analyzer with name: \" + name);\n            }`\n\nI'm confused as to how both these conditions are firing. This check to see if the current map of analyzers already contains the key \"name\" was introduced in ES 5. \n\nEDIT: I know why the illegal state exception is being thrown. The Analysis Registry automatically adds the entry: \"default\" => StandardAnalyzer. So from what I can tell, it's actually impossible to register your own default index analyzer, since there will always be the standard analyzer. I think the check for whether a name is already in the analyzer mappings is a bug and should be removed. \n","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}