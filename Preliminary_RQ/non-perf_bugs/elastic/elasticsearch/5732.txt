{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/5732","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5732/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5732/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5732/events","html_url":"https://github.com/elastic/elasticsearch/issues/5732","id":31066377,"node_id":"MDU6SXNzdWUzMTA2NjM3Nw==","number":5732,"title":"Controlling shard placing in a globally distributed cluster.","user":{"login":"schmorgs","id":5444727,"node_id":"MDQ6VXNlcjU0NDQ3Mjc=","avatar_url":"https://avatars0.githubusercontent.com/u/5444727?v=4","gravatar_id":"","url":"https://api.github.com/users/schmorgs","html_url":"https://github.com/schmorgs","followers_url":"https://api.github.com/users/schmorgs/followers","following_url":"https://api.github.com/users/schmorgs/following{/other_user}","gists_url":"https://api.github.com/users/schmorgs/gists{/gist_id}","starred_url":"https://api.github.com/users/schmorgs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmorgs/subscriptions","organizations_url":"https://api.github.com/users/schmorgs/orgs","repos_url":"https://api.github.com/users/schmorgs/repos","events_url":"https://api.github.com/users/schmorgs/events{/privacy}","received_events_url":"https://api.github.com/users/schmorgs/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-04-08T12:36:05Z","updated_at":"2014-04-09T08:21:01Z","closed_at":"2014-04-09T08:21:01Z","author_association":"NONE","active_lock_reason":null,"body":"I've read a number of articles / forums on the placing of indexes/shards but have not yet found a solution to my requirement.\n\nFundamentally, I want to use Logstash (+ Elasticsearch/Kibana) to build a globally distributed cluster, but I want to limit the placement of primary and replica shards to be local to the region they were created in to reduce WAN traffic, but I also want to be able to query all data as a single dataset.\n\nExample\nLet's say I have two ES nodes in UK (uknode1/uknode2), and two in US (usnode1/usnode2). If Logstash sends some data to usnode1, I want it to place the replica on usnode2, and not send this across the WAN to the uknode\\* nodes.\n\nI've tried playing around with index and routing allocation settings, but cannot stop the shards being distributed across all 4 nodes. It's slightly complicated by the fact that index names are dynamically built based on the \"type\" but that's another challenge for a later date. Even with one index, I can't get it to work.\n\nnode.zone: etf1\n\ne.g. I thought this config would only sync between zones (nodes) \"testlab1\" and \"testlab2\", and explicitly exclude \"zones\" beginning with \"l\" (for live).\nnode.zone: testlab1\nindex.routing.allocation.exclude.zone: l*\nindex.routing.allocation.include.zone: testlab1,testlab2\n\nI could split the cluster into regional cluster, but as I want to be able to query all nodes as a single dataset (via Kibana) that doesn't sound like  a valid option at this stage as Kibana can only query one cluster afaik.\n\nSo, is this request even possible to achieve?\n\nThe reason I ask if this is possible is what would happen if I write to an index called \"myTest\" on UK node, and the same index on a US node.....as this is ultimately the same index and I'm not sure how ES would handle this.\n\nSo if anyone has any suggestions, or just some words around why this is not possible, that would be very helpful.\n","closed_by":{"login":"schmorgs","id":5444727,"node_id":"MDQ6VXNlcjU0NDQ3Mjc=","avatar_url":"https://avatars0.githubusercontent.com/u/5444727?v=4","gravatar_id":"","url":"https://api.github.com/users/schmorgs","html_url":"https://github.com/schmorgs","followers_url":"https://api.github.com/users/schmorgs/followers","following_url":"https://api.github.com/users/schmorgs/following{/other_user}","gists_url":"https://api.github.com/users/schmorgs/gists{/gist_id}","starred_url":"https://api.github.com/users/schmorgs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmorgs/subscriptions","organizations_url":"https://api.github.com/users/schmorgs/orgs","repos_url":"https://api.github.com/users/schmorgs/repos","events_url":"https://api.github.com/users/schmorgs/events{/privacy}","received_events_url":"https://api.github.com/users/schmorgs/received_events","type":"User","site_admin":false},"performed_via_github_app":null}