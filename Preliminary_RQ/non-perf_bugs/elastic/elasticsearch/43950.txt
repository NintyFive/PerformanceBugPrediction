{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/43950","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43950/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43950/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43950/events","html_url":"https://github.com/elastic/elasticsearch/issues/43950","id":463992867,"node_id":"MDU6SXNzdWU0NjM5OTI4Njc=","number":43950,"title":"SnapshotLifecycleTemplateRegistryTests.testThatNonExistingTemplatesAreAddedImmediately fails on CI non-reproducibly","user":{"login":"gwbrown","id":1522844,"node_id":"MDQ6VXNlcjE1MjI4NDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1522844?v=4","gravatar_id":"","url":"https://api.github.com/users/gwbrown","html_url":"https://github.com/gwbrown","followers_url":"https://api.github.com/users/gwbrown/followers","following_url":"https://api.github.com/users/gwbrown/following{/other_user}","gists_url":"https://api.github.com/users/gwbrown/gists{/gist_id}","starred_url":"https://api.github.com/users/gwbrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gwbrown/subscriptions","organizations_url":"https://api.github.com/users/gwbrown/orgs","repos_url":"https://api.github.com/users/gwbrown/repos","events_url":"https://api.github.com/users/gwbrown/events{/privacy}","received_events_url":"https://api.github.com/users/gwbrown/received_events","type":"User","site_admin":false},"labels":[{"id":912828538,"node_id":"MDU6TGFiZWw5MTI4Mjg1Mzg=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/ILM+SLM","name":":Core/Features/ILM+SLM","color":"0e8a16","default":false,"description":"Index and Snapshot lifecycle management"},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":{"login":"andreidan","id":1217601,"node_id":"MDQ6VXNlcjEyMTc2MDE=","avatar_url":"https://avatars2.githubusercontent.com/u/1217601?v=4","gravatar_id":"","url":"https://api.github.com/users/andreidan","html_url":"https://github.com/andreidan","followers_url":"https://api.github.com/users/andreidan/followers","following_url":"https://api.github.com/users/andreidan/following{/other_user}","gists_url":"https://api.github.com/users/andreidan/gists{/gist_id}","starred_url":"https://api.github.com/users/andreidan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andreidan/subscriptions","organizations_url":"https://api.github.com/users/andreidan/orgs","repos_url":"https://api.github.com/users/andreidan/repos","events_url":"https://api.github.com/users/andreidan/events{/privacy}","received_events_url":"https://api.github.com/users/andreidan/received_events","type":"User","site_admin":false},"assignees":[{"login":"andreidan","id":1217601,"node_id":"MDQ6VXNlcjEyMTc2MDE=","avatar_url":"https://avatars2.githubusercontent.com/u/1217601?v=4","gravatar_id":"","url":"https://api.github.com/users/andreidan","html_url":"https://github.com/andreidan","followers_url":"https://api.github.com/users/andreidan/followers","following_url":"https://api.github.com/users/andreidan/following{/other_user}","gists_url":"https://api.github.com/users/andreidan/gists{/gist_id}","starred_url":"https://api.github.com/users/andreidan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andreidan/subscriptions","organizations_url":"https://api.github.com/users/andreidan/orgs","repos_url":"https://api.github.com/users/andreidan/repos","events_url":"https://api.github.com/users/andreidan/events{/privacy}","received_events_url":"https://api.github.com/users/andreidan/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2019-07-03T23:24:28Z","updated_at":"2020-01-31T09:54:30Z","closed_at":"2020-01-31T09:54:30Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"[Build scan](https://scans.gradle.com/s/kgpuaemqbil5i) from a PR that changes this test, but it fails in a similar way unchanged as well.\r\n\r\nReproduce line (does not reproduce locally):\r\n```\r\n./gradlew :x-pack:plugin:core:test --tests \"org.elasticsearch.xpack.core.snapshotlifecycle.history.SnapshotLifecycleTemplateRegistryTests.testThatNonExistingTemplatesAreAddedImmediately\" -Dtests.seed=1F3A88753168CB4 -Dtests.security.manager=true -Dtests.locale=hsb -Dtests.timezone=America/Boise -Dcompiler.java=12 -Druntime.java=11\r\n```\r\n\r\nStack trace:\r\n```\r\njava.lang.AssertionError: \r\nexpected latch to be counted down after 10s, but was not\r\nExpected: is <true>\r\n     but: was <false>\r\nat __randomizedtesting.SeedInfo.seed([1F3A88753168CB4:6AF45AD77CF822B5]:0)\r\nat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)\r\nat org.elasticsearch.test.hamcrest.ElasticsearchAssertions.awaitLatch(ElasticsearchAssertions.java:686)\r\nat org.elasticsearch.xpack.core.snapshotlifecycle.history.SnapshotLifecycleTemplateRegistryTests.testThatNonExistingTemplatesAreAddedImmediately(SnapshotLifecycleTemplateRegistryTests.java:145)\r\nat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\nat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\nat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\nat java.lang.reflect.Method.invoke(Method.java:566)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1750)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:938)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:974)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:988)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\nat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\nat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\nat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\nat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\r\nat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:817)\r\nat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:468)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:947)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:832)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:883)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:894)\r\nat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\nat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\nat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\nat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\nat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\nat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\r\nat java.lang.Thread.run(Thread.java:834)\r\n```\r\n\r\nI've tried increasing the timeout to 60s but that [doesn't prevent failures](https://scans.gradle.com/s/orldrheojt7iw). This one is going to need some more thorough investigation.  There's a very similar test for Watcher's index templates, which uses a mocked threadpool that runs client invocations on the same thread as the test, which is very stable. This test uses a real threadpool and waits for the call to happen in the background, but is otherwise extremely similar, so I suspect there's just an issue with the test.","closed_by":{"login":"andreidan","id":1217601,"node_id":"MDQ6VXNlcjEyMTc2MDE=","avatar_url":"https://avatars2.githubusercontent.com/u/1217601?v=4","gravatar_id":"","url":"https://api.github.com/users/andreidan","html_url":"https://github.com/andreidan","followers_url":"https://api.github.com/users/andreidan/followers","following_url":"https://api.github.com/users/andreidan/following{/other_user}","gists_url":"https://api.github.com/users/andreidan/gists{/gist_id}","starred_url":"https://api.github.com/users/andreidan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andreidan/subscriptions","organizations_url":"https://api.github.com/users/andreidan/orgs","repos_url":"https://api.github.com/users/andreidan/repos","events_url":"https://api.github.com/users/andreidan/events{/privacy}","received_events_url":"https://api.github.com/users/andreidan/received_events","type":"User","site_admin":false},"performed_via_github_app":null}