[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/330101717","html_url":"https://github.com/elastic/elasticsearch/issues/26665#issuecomment-330101717","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26665","id":330101717,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMDEwMTcxNw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2017-09-17T23:32:06Z","updated_at":"2017-09-17T23:32:06Z","author_association":"MEMBER","body":"As I mentioned in another channel, this is not going to work as a bootstrap check. The location could be a location that we do not grant security manager file permissions for, but the Elasticsearch user could have filesystem permissions for and therefore the JVM will have no trouble writing the heap dump from this perspective should it exit on out of memory exception. Trying to check if we have filesystem permissions will die with a security manager access control exception. While we could grant ourselves the requisite permissions, this strikes me as a bad idea as this location can be an arbitrary location on disk. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/331018241","html_url":"https://github.com/elastic/elasticsearch/issues/26665#issuecomment-331018241","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26665","id":331018241,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMTAxODI0MQ==","user":{"login":"geekpete","id":2070843,"node_id":"MDQ6VXNlcjIwNzA4NDM=","avatar_url":"https://avatars2.githubusercontent.com/u/2070843?v=4","gravatar_id":"","url":"https://api.github.com/users/geekpete","html_url":"https://github.com/geekpete","followers_url":"https://api.github.com/users/geekpete/followers","following_url":"https://api.github.com/users/geekpete/following{/other_user}","gists_url":"https://api.github.com/users/geekpete/gists{/gist_id}","starred_url":"https://api.github.com/users/geekpete/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geekpete/subscriptions","organizations_url":"https://api.github.com/users/geekpete/orgs","repos_url":"https://api.github.com/users/geekpete/repos","events_url":"https://api.github.com/users/geekpete/events{/privacy}","received_events_url":"https://api.github.com/users/geekpete/received_events","type":"User","site_admin":false},"created_at":"2017-09-21T00:35:20Z","updated_at":"2017-09-21T00:35:57Z","author_association":"MEMBER","body":"How about if it's an rpm/deb install that we put this check in the service manager script?\r\nThis way before the elasticsearch process is kicked off, the script can test this location is writable. \r\nProbably a bit hacky as the script needs to read configs and check if the setting is writable by the configured elastic user, but it's also specific to those users who might have the common packaging issue causing it.\r\n\r\nThere's also the approach of ensuring any default packaging/installs on common (or all supported?) OSes works properly for writing heap dumps out of the box and fix any packaging bug if it exists. I didn't see any existing packaging bugs related to heap dump location default writability that I could find.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/331018869","html_url":"https://github.com/elastic/elasticsearch/issues/26665#issuecomment-331018869","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26665","id":331018869,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMTAxODg2OQ==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2017-09-21T00:40:13Z","updated_at":"2017-09-21T00:40:13Z","author_association":"MEMBER","body":"Sorry, parsing the JVM options file from the startup scripts is not something that I would be willing to add as it's too messy.","performed_via_github_app":null}]