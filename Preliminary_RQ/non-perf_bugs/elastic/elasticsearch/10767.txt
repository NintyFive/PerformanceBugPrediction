{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/10767","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10767/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10767/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10767/events","html_url":"https://github.com/elastic/elasticsearch/issues/10767","id":70611127,"node_id":"MDU6SXNzdWU3MDYxMTEyNw==","number":10767,"title":"Sharing calculations between filter, sort and field scripts","user":{"login":"bsander","id":517850,"node_id":"MDQ6VXNlcjUxNzg1MA==","avatar_url":"https://avatars1.githubusercontent.com/u/517850?v=4","gravatar_id":"","url":"https://api.github.com/users/bsander","html_url":"https://github.com/bsander","followers_url":"https://api.github.com/users/bsander/followers","following_url":"https://api.github.com/users/bsander/following{/other_user}","gists_url":"https://api.github.com/users/bsander/gists{/gist_id}","starred_url":"https://api.github.com/users/bsander/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bsander/subscriptions","organizations_url":"https://api.github.com/users/bsander/orgs","repos_url":"https://api.github.com/users/bsander/repos","events_url":"https://api.github.com/users/bsander/events{/privacy}","received_events_url":"https://api.github.com/users/bsander/received_events","type":"User","site_admin":false},"labels":[{"id":146834791,"node_id":"MDU6TGFiZWwxNDY4MzQ3OTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Scripting","name":":Core/Infra/Scripting","color":"0e8a16","default":false,"description":"Scripting abstractions, Painless, and Mustache"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2015-04-24T07:23:21Z","updated_at":"2017-04-11T15:44:10Z","closed_at":"2015-08-26T19:35:56Z","author_association":"NONE","active_lock_reason":null,"body":"For a current project, we have an index containing products which have a complex pricing model. Some price components are stored in the documents, where others are influenced by external parameters. Prices are calculated on the fly by a groovy script which is passed these external parameters from our application. The calculation performed by this script is pretty cpu-intensive and may take several ms per document.\n\nThe use case here is \"_I have a budget between X and Y. Show me the 10 products that have a price within this range, sorted by price descending, and show me the price buildup (including all price components)_\".\n\nSince it doesn't seem to be possible to share information between scripts executed in different query phases, we currently need three groovy scripts in order to achieve this:\n- A filter script, performing the entire calculation and returning a boolean indicating whether the calculated price is between X and Y\n- A sorting script, performing the entire calculation and returning the total price as a number\n- A field script, performing the entire calculation and returning an object containing the total price along with a summary of how the price was calculated.\n\nThese scripts are almost exactly alike, only differing in the type of value they return. This creates a lot of overhead. Let's say we have 10000 documents in our index, 5000 of which are eligible for a given price range and parameter set. That means the scripts will be evaluated:\n- 10000x for filtering purposes (`script_filter`)\n- 5000x for sorting documents that passed through the filter\n- 10x for displaying the price components for the top 10 matching products that will actually be returned (`script_field`)\n\nFor a grand total of 15010 full calculations. About a third of these (those in sort and display) should not have been necessary because the bulk of what they're calculating has already been found by the filter script.\n\nIdeally, the scripted field would be evaluated first and remain available during the rest of the query scope, so that the filtering and sorting scripts could access its calculated results (or one of its properties) and not have to perform the entire calculation again. This would reduce our total script execution time greatly.\n\nIs there, or will there be, any way to achieve this in elasticsearch?\n","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}