[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/555164376","html_url":"https://github.com/elastic/elasticsearch/issues/49264#issuecomment-555164376","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49264","id":555164376,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTE2NDM3Ng==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-11-18T19:11:31Z","updated_at":"2019-11-18T19:11:31Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search (:Search/Mapping)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/555179702","html_url":"https://github.com/elastic/elasticsearch/issues/49264#issuecomment-555179702","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49264","id":555179702,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTE3OTcwMg==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2019-11-18T19:48:32Z","updated_at":"2019-11-18T19:48:32Z","author_association":"MEMBER","body":"One complexity to note is that a field could have a different `source_path` across indices. For example, a field could be mapped as an field alias in one index, and as a concrete field in another. (We actually expect this set-up to be common, as it is part of the workflow for renaming a field with time-based indices). So I think the response format would need to support separate source paths for different indexes.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/555193824","html_url":"https://github.com/elastic/elasticsearch/issues/49264#issuecomment-555193824","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49264","id":555193824,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTE5MzgyNA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2019-11-18T20:25:00Z","updated_at":"2019-11-18T20:25:00Z","author_association":"CONTRIBUTOR","body":"Would it be good enough to return an array that contains both the old and new name in that case? I believe we would need the `source_path` to be an array anyway because `copy_to` means that a single field might have sources in multiple fields? And we would compute the union when merging field caps from multiple indices?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/564270080","html_url":"https://github.com/elastic/elasticsearch/issues/49264#issuecomment-564270080","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49264","id":564270080,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDI3MDA4MA==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2019-12-10T21:37:29Z","updated_at":"2019-12-10T21:42:41Z","author_association":"MEMBER","body":"We discussed offline and came up with the proposal that `source_path` could be treated differently than the existing components in the response. We largely expect components like `searchable` and `aggregatable` to be consistent across indices, and what's most helpful to the user is a merged view of their values. But for `source_path`, there is no expectation of consistency across indices, and in some common use cases (like the field alias case described above), the values will differ.\r\n\r\nHere's a sketch for how it could look to include index information for `source_path`. The last section `all_field` represents a field where other field values have been copied into it through `copy_to`.\r\n```\r\n{\r\n  \"indices\" : [ \"index1\", \"index2\" ],\r\n  \"fields\" : {\r\n    \"alias_field\" : {\r\n      \"keyword\" : {\r\n        \"searchable\" : true,\r\n        \"aggregatable\" : true,\r\n        \"source_path\": [{\r\n            \"paths\": [\"concrete_field\"],\r\n            \"indices\": [\"index1\"]\r\n        }]\r\n      }\r\n    },\r\n    \"some_field.multi_field\" : {\r\n      \"keyword\" : {\r\n        \"searchable\" : true,\r\n        \"aggregatable\" : true,\r\n        \"source_path\": [{\r\n            \"paths\": [\"some_field\"],\r\n            \"indices\": [\"index1\", \"index2\"]\r\n        }]\r\n      }\r\n    }\r\n  },\r\n   \"all_field\" : {\r\n     \"text\" : {\r\n       \"searchable\" : true,\r\n       \"aggregatable\" : true,\r\n       \"source_path\": [{\r\n           \"paths\": [\"title_field\", \"abstract_field\", \"body_field\"],\r\n           \"indices\": [\"index1\"],\r\n       }, {\r\n           \"paths\": [\"title_field\", \"body_field\"],\r\n           \"indices\": [\"index2\"]\r\n       }]\r\n     }\r\n   }\r\n}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/564969294","html_url":"https://github.com/elastic/elasticsearch/issues/49264#issuecomment-564969294","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49264","id":564969294,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDk2OTI5NA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2019-12-12T11:31:24Z","updated_at":"2019-12-12T11:31:24Z","author_association":"CONTRIBUTOR","body":"This makes sense to me. I wonder how to handle meta fields (e.g. `_id` or `_index`) and `constant_keyword` fields too.\r\n\r\nFor meta fields, maybe we don't need to do anything and just expect clients to rely on the assumption that fields that start with an underscore are a meta field and expected to be returned directly as part of the hit?\r\n\r\nRegarding `constant_keyword` maybe we could slightly modify your proposal to make it possible to return a value directly, e.g.\r\n\r\n```\r\n{\r\n  \"indices\" : [ \"index1\", \"index2\" ],\r\n  \"fields\" : {\r\n    \"my_keyword\" : {\r\n      \"constant_keyword\" : {\r\n        \"searchable\" : true,\r\n        \"aggregatable\" : true,\r\n        \"source\": [{\r\n            \"value\": [\"foo\"],\r\n            \"indices\": [\"index1\"]\r\n        }]\r\n      },\r\n      \"keyword\" : {\r\n        \"searchable\" : true,\r\n        \"aggregatable\" : true,\r\n        \"source\": [{\r\n            \"path\": [\"my_keyword\"],\r\n            \"indices\": [\"index2\"]\r\n        }]\r\n      }\r\n    },\r\n    \"alias_field\" : {\r\n      \"keyword\" : {\r\n        \"searchable\" : true,\r\n        \"aggregatable\" : true,\r\n        \"source\": [{\r\n            \"paths\": [\"concrete_field\"],\r\n            \"indices\": [\"index1\"]\r\n        }]\r\n      }\r\n    },\r\n    \"some_field.multi_field\" : {\r\n      \"keyword\" : {\r\n        \"searchable\" : true,\r\n        \"aggregatable\" : true,\r\n        \"source\": [{\r\n            \"paths\": [\"some_field\"],\r\n            \"indices\": [\"index1\", \"index2\"]\r\n        }]\r\n      }\r\n    }\r\n  },\r\n   \"all_field\" : {\r\n     \"text\" : {\r\n       \"searchable\" : true,\r\n       \"aggregatable\" : true,\r\n       \"source\": [{\r\n           \"paths\": [\"title_field\", \"abstract_field\", \"body_field\"],\r\n           \"indices\": [\"index1\"],\r\n       }, {\r\n           \"paths\": [\"title_field\", \"body_field\"],\r\n           \"indices\": [\"index2\"]\r\n       }]\r\n     }\r\n   }\r\n}\r\n```\r\n\r\nAnother question is whether we should always return the `source` information, or whether we should skip it in the common case that the source path is equal to the field name on all indices?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/582571750","html_url":"https://github.com/elastic/elasticsearch/issues/49264#issuecomment-582571750","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49264","id":582571750,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjU3MTc1MA==","user":{"login":"wylieconlon","id":666475,"node_id":"MDQ6VXNlcjY2NjQ3NQ==","avatar_url":"https://avatars2.githubusercontent.com/u/666475?v=4","gravatar_id":"","url":"https://api.github.com/users/wylieconlon","html_url":"https://github.com/wylieconlon","followers_url":"https://api.github.com/users/wylieconlon/followers","following_url":"https://api.github.com/users/wylieconlon/following{/other_user}","gists_url":"https://api.github.com/users/wylieconlon/gists{/gist_id}","starred_url":"https://api.github.com/users/wylieconlon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wylieconlon/subscriptions","organizations_url":"https://api.github.com/users/wylieconlon/orgs","repos_url":"https://api.github.com/users/wylieconlon/repos","events_url":"https://api.github.com/users/wylieconlon/events{/privacy}","received_events_url":"https://api.github.com/users/wylieconlon/received_events","type":"User","site_admin":false},"created_at":"2020-02-05T19:28:45Z","updated_at":"2020-02-05T19:28:45Z","author_association":"MEMBER","body":"It seems like this proposal would work for `alias` and multi-mapped fields like the default text/keyword multi-mapping, and I'm looking forward to using it in Lens.\r\n\r\nWhat is the expected behavior when the field is mapped with optional properties like `index: false` or `doc_values: true`? Are there edge cases to be careful of?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/582682927","html_url":"https://github.com/elastic/elasticsearch/issues/49264#issuecomment-582682927","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49264","id":582682927,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjY4MjkyNw==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2020-02-06T00:46:35Z","updated_at":"2020-02-06T00:46:35Z","author_association":"MEMBER","body":"Thanks for taking a look @wylieconlon !\r\n\r\n> What is the expected behavior when the field is mapped with optional properties like index: false or doc_values: true? Are there edge cases to be careful of?\r\n\r\nThis proposal centers on adding information about the field's path in `_source` and won't change the existing behavior of the field caps API around parameters like `index` and `doc_values`. These parameters are reflected in the `searchable`, `aggregatable`, `non_searchable_indices`, etc. components of the field caps response. Let me know if I'm missing part of your question.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/585435442","html_url":"https://github.com/elastic/elasticsearch/issues/49264#issuecomment-585435442","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49264","id":585435442,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NTQzNTQ0Mg==","user":{"login":"Bargs","id":6239176,"node_id":"MDQ6VXNlcjYyMzkxNzY=","avatar_url":"https://avatars3.githubusercontent.com/u/6239176?v=4","gravatar_id":"","url":"https://api.github.com/users/Bargs","html_url":"https://github.com/Bargs","followers_url":"https://api.github.com/users/Bargs/followers","following_url":"https://api.github.com/users/Bargs/following{/other_user}","gists_url":"https://api.github.com/users/Bargs/gists{/gist_id}","starred_url":"https://api.github.com/users/Bargs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bargs/subscriptions","organizations_url":"https://api.github.com/users/Bargs/orgs","repos_url":"https://api.github.com/users/Bargs/repos","events_url":"https://api.github.com/users/Bargs/events{/privacy}","received_events_url":"https://api.github.com/users/Bargs/received_events","type":"User","site_admin":false},"created_at":"2020-02-12T21:50:25Z","updated_at":"2020-02-12T21:50:25Z","author_association":"NONE","body":"Answering a couple questions asked over email:\r\n\r\n> Is adding information about the 'source path' enough, or would you need explicit indication that the field is an alias?\r\n\r\nI think we might still need an explicit indication that the field is an alias. Unless I'm missing something, the currently proposed API response wouldn't allow us to determine which fields are aliases and which are `copy_to`. I don't have an example off the top of my head, but perhaps we'd want to treat those two differently somewhere in Kibana. A \"sub_type\" property on the source_path objects might be generally useful. Although it *is* possible to determine which fields are multi fields currently, the logic for doing so is [a bit hairy](https://github.com/elastic/kibana/blob/8ae51abe193e7e5274eb04426150c3e1d79f17ba/src/plugins/data/server/index_patterns/fetcher/lib/field_capabilities/field_caps_response.ts#L154-L187) and it would be nice to have a central place to check for any sub type. To be clear, this is what I'm thinking:\r\n\r\n```\r\n{\r\n  \"indices\": [\r\n    \"index1\",\r\n    \"index2\"\r\n  ],\r\n  \"fields\": {\r\n    \"alias_field\": {\r\n      \"keyword\": {\r\n        \"searchable\": true,\r\n        \"aggregatable\": true,\r\n        \"source_path\": [\r\n          {\r\n            \"paths\": [\r\n              \"concrete_field\"\r\n            ],\r\n            \"indices\": [\r\n              \"index1\"\r\n            ],\r\n            \"sub_type\": \"alias\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    \"some_field.multi_field\": {\r\n      \"keyword\": {\r\n        \"searchable\": true,\r\n        \"aggregatable\": true,\r\n        \"source_path\": [\r\n          {\r\n            \"paths\": [\r\n              \"some_field\"\r\n            ],\r\n            \"indices\": [\r\n              \"index1\",\r\n              \"index2\"\r\n            ],\r\n            \"sub_type\": \"multi\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"all_field\": {\r\n    \"text\": {\r\n      \"searchable\": true,\r\n      \"aggregatable\": true,\r\n      \"source_path\": [\r\n        {\r\n          \"paths\": [\r\n            \"title_field\",\r\n            \"abstract_field\",\r\n            \"body_field\"\r\n          ],\r\n          \"indices\": [\r\n            \"index1\"\r\n          ],\r\n          \"sub_type\": \"copy_to\"\r\n        },\r\n        {\r\n          \"paths\": [\r\n            \"title_field\",\r\n            \"body_field\"\r\n          ],\r\n          \"indices\": [\r\n            \"index2\"\r\n          ],\r\n          \"sub_type\": \"copy_to\"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n> The multi-index case is a bit tricky. In particular, a field can be mapped as an alias in one index, and as a concrete field in another. We currently propose to return the full source path information separated out by index, but I'm curious if it'd be just as helpful to return a merged list of source paths across all indices.\r\n\r\nI like how you're currently separating it out by index. Since we don't know of 100% of the places we'll need to use this info in Kibana, I think the more info the better. \r\n\r\nAside from my `sub_type` suggestion I think the API looks great and it should definitely give us the info we need in Kibana.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/595672875","html_url":"https://github.com/elastic/elasticsearch/issues/49264#issuecomment-595672875","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49264","id":595672875,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTY3Mjg3NQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2020-03-06T09:08:21Z","updated_at":"2020-03-06T09:08:21Z","author_association":"CONTRIBUTOR","body":"@jtibshirani @jimczi Should we close this in favor of #49028?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/595866768","html_url":"https://github.com/elastic/elasticsearch/issues/49264#issuecomment-595866768","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49264","id":595866768,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTg2Njc2OA==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2020-03-06T17:08:06Z","updated_at":"2020-03-06T17:08:06Z","author_association":"MEMBER","body":"That works for me, we can always reopen if the idea becomes relevant again.","performed_via_github_app":null}]