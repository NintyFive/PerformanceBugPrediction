[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/289521773","html_url":"https://github.com/elastic/elasticsearch/issues/23765#issuecomment-289521773","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23765","id":289521773,"node_id":"MDEyOklzc3VlQ29tbWVudDI4OTUyMTc3Mw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-03-27T17:18:43Z","updated_at":"2017-03-27T17:18:43Z","author_association":"CONTRIBUTOR","body":"I don't think there is a good way to combine range queries and term queries and get \"good\" scores. You mention query norm, but term freq and doc freq are problematic too since those metrics either do not make sense for ranges or would be too costly to compute. It is fairly unusual to want range queries to take part of the scores, I'm wondering that you might just want to use them for filtering?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/289632622","html_url":"https://github.com/elastic/elasticsearch/issues/23765#issuecomment-289632622","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23765","id":289632622,"node_id":"MDEyOklzc3VlQ29tbWVudDI4OTYzMjYyMg==","user":{"login":"nbqyqx","id":14268143,"node_id":"MDQ6VXNlcjE0MjY4MTQz","avatar_url":"https://avatars1.githubusercontent.com/u/14268143?v=4","gravatar_id":"","url":"https://api.github.com/users/nbqyqx","html_url":"https://github.com/nbqyqx","followers_url":"https://api.github.com/users/nbqyqx/followers","following_url":"https://api.github.com/users/nbqyqx/following{/other_user}","gists_url":"https://api.github.com/users/nbqyqx/gists{/gist_id}","starred_url":"https://api.github.com/users/nbqyqx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nbqyqx/subscriptions","organizations_url":"https://api.github.com/users/nbqyqx/orgs","repos_url":"https://api.github.com/users/nbqyqx/repos","events_url":"https://api.github.com/users/nbqyqx/events{/privacy}","received_events_url":"https://api.github.com/users/nbqyqx/received_events","type":"User","site_admin":false},"created_at":"2017-03-28T01:11:03Z","updated_at":"2017-03-28T01:12:17Z","author_association":"NONE","body":"The scenario(4 queries in should bool query) wants the range queries be part of the score. If we can disable the query norm for the range query, then the score=boost*isMatch. The customized term query score=boost*isMatch also, hence if we match all 4 conditions, the score=100.\r\n\r\n{\r\n  \"from\":0, \"size\":10,\r\n  \r\n  \"query\": {\r\n     \"bool\" : {\r\n       \t\t\t\"disable_coord\":\"true\",\r\n                \"should\": [\r\n                  {\"term\" : { \"building_house_type_building_city_id\" : \"112\", \"boost\":0 }},\r\n                  {\"term\" : { \"building_house_type_building_region_id\" : \"1195\", \"boost\":40 }},\r\n                  {\"term\" : { \"building_house_type_house_room_type_s\": \"3\", \"boost\":20}},\r\n                  { \"range\" : {\r\n                      \"building_house_type_covered_area\": {\r\n                                \"gte\":130,\r\n                                  \"lte\":150,\r\n                                  \"boost\":20               \r\n                        }\r\n                    }\r\n                  },\r\n                  { \"range\" : {\r\n                      \"building_house_type_price\": {\r\n                                \"gte\":105675200,\r\n                                  \"lte\":255675200,\r\n                                  \"boost\":20\r\n                    \r\n                        }\r\n                    }\r\n                  }\r\n                ]               \r\n     }\r\n  }\t\r\n}\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/289685157","html_url":"https://github.com/elastic/elasticsearch/issues/23765#issuecomment-289685157","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23765","id":289685157,"node_id":"MDEyOklzc3VlQ29tbWVudDI4OTY4NTE1Nw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-03-28T07:20:51Z","updated_at":"2017-03-28T07:20:51Z","author_association":"CONTRIBUTOR","body":"OK I get what you are trying to do now. I think disabling `queryNorm` won't be enough, you need to disable the contribution from the term and doc freqs as well for it to work, which should be possible with the `boolean` similarity that we are adding: #23637. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/289690688","html_url":"https://github.com/elastic/elasticsearch/issues/23765#issuecomment-289690688","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23765","id":289690688,"node_id":"MDEyOklzc3VlQ29tbWVudDI4OTY5MDY4OA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-03-28T07:47:32Z","updated_at":"2017-03-28T07:47:32Z","author_association":"CONTRIBUTOR","body":"You can already achieve a similar result today by wrapping the `term` queries under a `constant_score` query and setting the boost on the `constant_score` query.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/289965813","html_url":"https://github.com/elastic/elasticsearch/issues/23765#issuecomment-289965813","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23765","id":289965813,"node_id":"MDEyOklzc3VlQ29tbWVudDI4OTk2NTgxMw==","user":{"login":"nbqyqx","id":14268143,"node_id":"MDQ6VXNlcjE0MjY4MTQz","avatar_url":"https://avatars1.githubusercontent.com/u/14268143?v=4","gravatar_id":"","url":"https://api.github.com/users/nbqyqx","html_url":"https://github.com/nbqyqx","followers_url":"https://api.github.com/users/nbqyqx/followers","following_url":"https://api.github.com/users/nbqyqx/following{/other_user}","gists_url":"https://api.github.com/users/nbqyqx/gists{/gist_id}","starred_url":"https://api.github.com/users/nbqyqx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nbqyqx/subscriptions","organizations_url":"https://api.github.com/users/nbqyqx/orgs","repos_url":"https://api.github.com/users/nbqyqx/repos","events_url":"https://api.github.com/users/nbqyqx/events{/privacy}","received_events_url":"https://api.github.com/users/nbqyqx/received_events","type":"User","site_admin":false},"created_at":"2017-03-29T02:47:23Z","updated_at":"2017-03-29T02:47:45Z","author_association":"NONE","body":"the query norm still has the side effect. I want the score 100 not  1.3867505 if all match the query\r\n\r\n\"_explanation\": {\r\n\"value\": 1.3867505,\r\n\"description\": \"sum of:\",\r\n\"details\": [\r\n  {\r\n\"value\": 1.3867505,\r\n\"description\": \"sum of:\",\r\n\"details\": [\r\n  {\r\n\"value\": 0.5547002,\r\n\"description\": \"ConstantScore(building_house_type_building_region_id: \u0001\t+), product of:\",\r\n\"details\": [\r\n  {\r\n\"value\": 40,\r\n\"description\": \"boost\",\r\n\"details\": [],\r\n},\r\n  {\r\n\"value\": 0.013867505,\r\n\"description\": \"queryNorm\",\r\n\"details\": [],\r\n}\r\n],\r\n},\r\n  {\r\n\"value\": 0.8320503,\r\n\"description\": \"ConstantScore(building_house_type_covered_area:[130.0 TO 140.0]), product of:\",\r\n\"details\": [\r\n  {\r\n\"value\": 60,\r\n\"description\": \"boost\",\r\n\"details\": [],\r\n},\r\n  {\r\n\"value\": 0.013867505,\r\n\"description\": \"queryNorm\",\r\n\"details\": [],\r\n}\r\n],\r\n}\r\n],\r\n},\r\n\r\n\r\n======\r\n{\r\n  \"query\": {\r\n  \t\"bool\" : {\r\n  \t\t\"should\": [   \r\n        \t{\t\r\n            \t\"constant_score\": {\r\n    \t\t\t\t\"filter\":{ \r\n    \t\t\t\t\t\"term\" : {\r\n    \t\t\t\t\t\t\"building_house_type_building_region_id\": \"1195\"\r\n    \t\t\t\t\t}\r\n    \t\t\t\t},\r\n        \t\t\t\"boost\": 40\r\n            \t}\r\n            },\r\n          \t{\t\r\n            \t\"constant_score\": {\r\n    \t\t\t\t\"query\":{ \r\n    \t\t\t\t\t\"range\" : {\r\n                      \t\t\"building_house_type_covered_area\": {\r\n                                \"gte\":130,\r\n                                  \"lte\":140\r\n                    \r\n                        \t}\r\n                        }\r\n                    },\r\n        \t\t\t\"boost\": 60\r\n                }\r\n            }\r\n         ]\r\n    }\r\n   \r\n  }\r\n\t\r\n}","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/289973438","html_url":"https://github.com/elastic/elasticsearch/issues/23765#issuecomment-289973438","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23765","id":289973438,"node_id":"MDEyOklzc3VlQ29tbWVudDI4OTk3MzQzOA==","user":{"login":"nbqyqx","id":14268143,"node_id":"MDQ6VXNlcjE0MjY4MTQz","avatar_url":"https://avatars1.githubusercontent.com/u/14268143?v=4","gravatar_id":"","url":"https://api.github.com/users/nbqyqx","html_url":"https://github.com/nbqyqx","followers_url":"https://api.github.com/users/nbqyqx/followers","following_url":"https://api.github.com/users/nbqyqx/following{/other_user}","gists_url":"https://api.github.com/users/nbqyqx/gists{/gist_id}","starred_url":"https://api.github.com/users/nbqyqx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nbqyqx/subscriptions","organizations_url":"https://api.github.com/users/nbqyqx/orgs","repos_url":"https://api.github.com/users/nbqyqx/repos","events_url":"https://api.github.com/users/nbqyqx/events{/privacy}","received_events_url":"https://api.github.com/users/nbqyqx/received_events","type":"User","site_admin":false},"created_at":"2017-03-29T03:43:22Z","updated_at":"2017-03-29T03:43:22Z","author_association":"NONE","body":"I tried the boolean similarity found it can not be applied to range query either:\r\n========\r\n{\r\n  \"query\": {\r\n     \"bool\" : {\r\n       \t\t\t\"disable_coord\":\"true\",\r\n                \"should\": [\r\n                  {\"term\" : { \"building_house_type_building_city_id\" : \"112\", \"boost\":0 }},\r\n                  {\"term\" : { \"building_house_type_building_region_id\" : \"1195\", \"boost\":40 }},\r\n                  {\"term\" : { \"building_house_type_house_room_type_s\": \"3\", \"boost\":20}},\r\n                  {\r\n                    \t\r\n                    \r\n                                \"term\" : {\r\n                      \t\t\t\t\"building_house_type_covered_area\": \r\n                                \t\t\"138\",\r\n                                \t\t\"boost\":20\r\n                        \t\t\t\r\n                    \t\t\t}\r\n                            \r\n                        \r\n                  },\r\n                  { \"range\" : {\r\n                      \"building_house_type_price\": {\r\n                                \"gte\":105675200,\r\n                                  \"lte\":255675200,\r\n                                  \"boost\":20\r\n                    \r\n                        }\r\n                    }\r\n                  }\r\n                ]\r\n                 \r\n     }\r\n  }\r\n\t\r\n}\r\n=====\r\n\r\n\"_explanation\": {\r\n\"value\": 80.99627,\r\n\"description\": \"sum of:\",\r\n\"details\": [\r\n  {\r\n\"value\": 80.99627,\r\n\"description\": \"sum of:\",\r\n\"details\": [\r\n  {\r\n\"value\": 0,\r\n\"description\": \"ConstantScore(building_house_type_building_city_id:`\bp), product of:\",\r\n\"details\": [\r\n  {\r\n\"value\": 0,\r\n\"description\": \"boost\",\r\n\"details\": [],\r\n},\r\n  {\r\n\"value\": 0.04981355,\r\n\"description\": \"queryNorm\",\r\n\"details\": [],\r\n}\r\n],\r\n},\r\n  {\r\n\"value\": 40,\r\n\"description\": \"weight(building_house_type_building_region_id: \u0001\t+ in 1970) [PerFieldSimilarity], result of:\",\r\n\"details\": [\r\n  {\r\n\"value\": 40,\r\n\"description\": \"singlematch\",\r\n\"details\": [\r\n  {\r\n\"value\": 1,\r\n\"description\": \"fieldNorm(doc=1970)\",\r\n\"details\": [],\r\n},\r\n  {\r\n\"value\": 40,\r\n\"description\": \"queryWeight\",\r\n\"details\": [],\r\n}\r\n],\r\n}\r\n],\r\n},\r\n  {\r\n\"value\": 20,\r\n\"description\": \"weight(building_house_type_house_room_type_s:`\b\u0003 in 1970) [PerFieldSimilarity], result of:\",\r\n\"details\": [\r\n  {\r\n\"value\": 20,\r\n\"description\": \"singlematch\",\r\n\"details\": [\r\n  {\r\n\"value\": 1,\r\n\"description\": \"fieldNorm(doc=1970)\",\r\n\"details\": [],\r\n},\r\n  {\r\n\"value\": 20,\r\n\"description\": \"queryWeight\",\r\n\"details\": [],\r\n}\r\n],\r\n}\r\n],\r\n},\r\n  {\r\n\"value\": 20,\r\n\"description\": \"weight(building_house_type_covered_area:`\f\u0018( in 1970) [PerFieldSimilarity], result of:\",\r\n\"details\": [\r\n  {\r\n\"value\": 20,\r\n\"description\": \"score(, doc=1970), computed from:\",\r\n\"details\": [\r\n  {\r\n\"value\": 20,\r\n\"description\": \"query boost\",\r\n\"details\": [],\r\n}\r\n],\r\n}\r\n],\r\n},\r\n  {\r\n\"value\": 0.996271,\r\n\"description\": \"building_house_type_price:[1.056752E8 TO 2.556752E8], product of:\",\r\n\"details\": [\r\n  {\r\n\"value\": 20,\r\n\"description\": \"boost\",\r\n\"details\": [],\r\n},\r\n  {\r\n\"value\": 0.04981355,\r\n\"description\": \"queryNorm\",\r\n\"details\": [],\r\n}\r\n],\r\n}\r\n],\r\n},\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/290014695","html_url":"https://github.com/elastic/elasticsearch/issues/23765#issuecomment-290014695","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23765","id":290014695,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MDAxNDY5NQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-03-29T08:04:41Z","updated_at":"2017-03-29T08:04:41Z","author_association":"CONTRIBUTOR","body":"Query norm is only a feature of the `classic` similarity, so I suspect you are somehow opting in for it at index creation time by doing something like this:\r\n\r\n```\r\nPUT /my_index\r\n{\r\n  \"settings\": {\r\n    \"index\": {\r\n      \"similarity\": {\r\n        \"default\": {\r\n          \"type\": \"classic\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nIf that is the case, just remove these index settings, which will cause Elasticsearch to use BM25 as the base similarity, which does not perform query normalization.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/290022572","html_url":"https://github.com/elastic/elasticsearch/issues/23765#issuecomment-290022572","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23765","id":290022572,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MDAyMjU3Mg==","user":{"login":"nbqyqx","id":14268143,"node_id":"MDQ6VXNlcjE0MjY4MTQz","avatar_url":"https://avatars1.githubusercontent.com/u/14268143?v=4","gravatar_id":"","url":"https://api.github.com/users/nbqyqx","html_url":"https://github.com/nbqyqx","followers_url":"https://api.github.com/users/nbqyqx/followers","following_url":"https://api.github.com/users/nbqyqx/following{/other_user}","gists_url":"https://api.github.com/users/nbqyqx/gists{/gist_id}","starred_url":"https://api.github.com/users/nbqyqx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nbqyqx/subscriptions","organizations_url":"https://api.github.com/users/nbqyqx/orgs","repos_url":"https://api.github.com/users/nbqyqx/repos","events_url":"https://api.github.com/users/nbqyqx/events{/privacy}","received_events_url":"https://api.github.com/users/nbqyqx/received_events","type":"User","site_admin":false},"created_at":"2017-03-29T08:38:09Z","updated_at":"2017-03-29T08:38:09Z","author_association":"NONE","body":"I have no classic  similarity setting, instead using custom boolean similarity\r\n=====\r\n\"settings\": {\r\n    \"index\": {\r\n      \"refresh_interval\": \"5s\",\r\n      \"max_result_window\" : 500000\r\n    },\r\n    \"similarity\" : {\r\n      \"custom_similarity\" : {\r\n        \"type\" : \"essimilarity\"\r\n      },\r\n      \"boolean_similarity\" : {\r\n        \"type\" : \"boolean\"\r\n      }\r\n    }","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/290023863","html_url":"https://github.com/elastic/elasticsearch/issues/23765#issuecomment-290023863","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23765","id":290023863,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MDAyMzg2Mw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-03-29T08:43:29Z","updated_at":"2017-03-29T08:43:29Z","author_association":"CONTRIBUTOR","body":"Oh sorry I'm seeing you are using Elasticsearch 2.3. I thought you were on 5.x since you were able to test the boolean similarity. Then you need to explicitly opt in for BM25. In order to do that, you should close your index, update the default similarity and open the index again. The update call should look something like that:\r\n\r\n```\r\nPUT /my_index/_settings\r\n{\r\n  \"settings\": {\r\n    \"index\": {\r\n      \"similarity\": {\r\n        \"default\": {\r\n          \"type\": \"BM25\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/290051768","html_url":"https://github.com/elastic/elasticsearch/issues/23765#issuecomment-290051768","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23765","id":290051768,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MDA1MTc2OA==","user":{"login":"nbqyqx","id":14268143,"node_id":"MDQ6VXNlcjE0MjY4MTQz","avatar_url":"https://avatars1.githubusercontent.com/u/14268143?v=4","gravatar_id":"","url":"https://api.github.com/users/nbqyqx","html_url":"https://github.com/nbqyqx","followers_url":"https://api.github.com/users/nbqyqx/followers","following_url":"https://api.github.com/users/nbqyqx/following{/other_user}","gists_url":"https://api.github.com/users/nbqyqx/gists{/gist_id}","starred_url":"https://api.github.com/users/nbqyqx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nbqyqx/subscriptions","organizations_url":"https://api.github.com/users/nbqyqx/orgs","repos_url":"https://api.github.com/users/nbqyqx/repos","events_url":"https://api.github.com/users/nbqyqx/events{/privacy}","received_events_url":"https://api.github.com/users/nbqyqx/received_events","type":"User","site_admin":false},"created_at":"2017-03-29T10:39:25Z","updated_at":"2017-03-29T10:39:25Z","author_association":"NONE","body":"It does work when I removed the field similarity setting and set the default similarity to BM25. :)\r\nThanks~ ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/290315872","html_url":"https://github.com/elastic/elasticsearch/issues/23765#issuecomment-290315872","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23765","id":290315872,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MDMxNTg3Mg==","user":{"login":"nbqyqx","id":14268143,"node_id":"MDQ6VXNlcjE0MjY4MTQz","avatar_url":"https://avatars1.githubusercontent.com/u/14268143?v=4","gravatar_id":"","url":"https://api.github.com/users/nbqyqx","html_url":"https://github.com/nbqyqx","followers_url":"https://api.github.com/users/nbqyqx/followers","following_url":"https://api.github.com/users/nbqyqx/following{/other_user}","gists_url":"https://api.github.com/users/nbqyqx/gists{/gist_id}","starred_url":"https://api.github.com/users/nbqyqx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nbqyqx/subscriptions","organizations_url":"https://api.github.com/users/nbqyqx/orgs","repos_url":"https://api.github.com/users/nbqyqx/repos","events_url":"https://api.github.com/users/nbqyqx/events{/privacy}","received_events_url":"https://api.github.com/users/nbqyqx/received_events","type":"User","site_admin":false},"created_at":"2017-03-30T06:34:41Z","updated_at":"2017-03-30T06:34:41Z","author_association":"NONE","body":"set the default similarity to my customized boolean similarity also get the expected result.\r\nMy question is why set the default similarity from classic to BM25 or mine will change the range query score?","performed_via_github_app":null}]