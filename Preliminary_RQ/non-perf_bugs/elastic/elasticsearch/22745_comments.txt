[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274518205","html_url":"https://github.com/elastic/elasticsearch/issues/22745#issuecomment-274518205","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22745","id":274518205,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDUxODIwNQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-01-23T15:27:53Z","updated_at":"2017-01-23T15:27:53Z","author_association":"CONTRIBUTOR","body":"Fuzziness is behaving correctly here.  The idea is that words will be spelled correctly most of the time, with a few misspellings, so with fuzziness we give a slight edge to terms that appear more frequently, as this is more likely to be the correct spelling.\r\n\r\nIf your correct spelling is the only occurrence in the document collection, then it's going to rank more poorly","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274534626","html_url":"https://github.com/elastic/elasticsearch/issues/22745#issuecomment-274534626","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22745","id":274534626,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDUzNDYyNg==","user":{"login":"jeantil","id":22979,"node_id":"MDQ6VXNlcjIyOTc5","avatar_url":"https://avatars3.githubusercontent.com/u/22979?v=4","gravatar_id":"","url":"https://api.github.com/users/jeantil","html_url":"https://github.com/jeantil","followers_url":"https://api.github.com/users/jeantil/followers","following_url":"https://api.github.com/users/jeantil/following{/other_user}","gists_url":"https://api.github.com/users/jeantil/gists{/gist_id}","starred_url":"https://api.github.com/users/jeantil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeantil/subscriptions","organizations_url":"https://api.github.com/users/jeantil/orgs","repos_url":"https://api.github.com/users/jeantil/repos","events_url":"https://api.github.com/users/jeantil/events{/privacy}","received_events_url":"https://api.github.com/users/jeantil/received_events","type":"User","site_admin":false},"created_at":"2017-01-23T16:20:15Z","updated_at":"2017-01-23T16:20:15Z","author_association":"NONE","body":"Let me rephrase so I am sure I understand : \r\nYou are saying the reason why `abb` gets score for `fuzzy aab` _and_ `exact abb` while `aae` gets score only for `exact aae` and not for fuzzy on `aab` is to give the  edge to the term appearing most frequently event if it is a fuzzy match ? \r\n\r\nThis is effectively overriding an exact match with a fuzzy match which runs counter to what both #9105 ( match/multi_match +fuzzy replace FLT ) and #5883 (don't rank fuzzy above exact match) were saying... \r\n\r\nIs there a way to configure this behaviour ? \r\nWith FLT there was an option to disable TF/IDF for specific use cases. I would like an option to always rank exact matches over fuzzy matches. \r\n\r\nMy exact use case is searching for cars and this bug breaks the search for porsche cars ranking the `911 type 991` over the `911 type 997` for people who searched for `911  997`. We have been stuck on 1.7.X ever since the fuzzy like this search was removed and I was really looking forward to being able to get back on the upgrade trains with #9103 fixed ...","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274570792","html_url":"https://github.com/elastic/elasticsearch/issues/22745#issuecomment-274570792","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22745","id":274570792,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDU3MDc5Mg==","user":{"login":"jeantil","id":22979,"node_id":"MDQ6VXNlcjIyOTc5","avatar_url":"https://avatars3.githubusercontent.com/u/22979?v=4","gravatar_id":"","url":"https://api.github.com/users/jeantil","html_url":"https://github.com/jeantil","followers_url":"https://api.github.com/users/jeantil/followers","following_url":"https://api.github.com/users/jeantil/following{/other_user}","gists_url":"https://api.github.com/users/jeantil/gists{/gist_id}","starred_url":"https://api.github.com/users/jeantil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeantil/subscriptions","organizations_url":"https://api.github.com/users/jeantil/orgs","repos_url":"https://api.github.com/users/jeantil/repos","events_url":"https://api.github.com/users/jeantil/events{/privacy}","received_events_url":"https://api.github.com/users/jeantil/received_events","type":"User","site_admin":false},"created_at":"2017-01-23T18:15:54Z","updated_at":"2017-01-23T18:15:54Z","author_association":"NONE","body":"The more I think about this the worse it sounds : \r\n\"A correctly spelled but rarer term is less relevant than a misspelled but more frequent term ? \" that's one hell of a confirmation bias ... you would never see rarer results shadowed by a more frequent spelling. ( in my specific car example I have over 40 `911 type 991` results before the first correctly spelled case this would mean page 4 on google ...\r\n\r\nSo please consider this a feature request to be able to tweak the relevance model.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274573801","html_url":"https://github.com/elastic/elasticsearch/issues/22745#issuecomment-274573801","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22745","id":274573801,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDU3MzgwMQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-01-23T18:26:30Z","updated_at":"2017-01-23T18:26:30Z","author_association":"CONTRIBUTOR","body":"@jeantil it doesn't work like that.  What it should do is say: \r\n\r\n* which terms are within edit distance 1/2 of `xxx`\r\n* find the min IDF of all the fuzzy terms\r\n* use that IDF for all terms (with a tiny boost for the current term)\r\n\r\nSo this is working correctly.  However, I think there is a different bug: the more fuzzy terms that match, the higher the score.\r\n\r\nWith explain, the score for the first two matching documents includes this:\r\n\r\n```\r\n            {\r\n              \"value\": 0.5333638,\r\n              \"description\": \"sum of:\",\r\n              \"details\": [\r\n                {\r\n                  \"value\": 0.21334553,\r\n                  \"description\": \"weight(foo:aab in 1) [PerFieldSimilarity], result of:\",\r\n                  \"details\": []\r\n                    }\r\n                  ]\r\n                },\r\n                {\r\n                  \"value\": 0.3200183,\r\n                  \"description\": \"weight(foo:abb in 1) [PerFieldSimilarity], result of:\",\r\n                  \"details\": []\r\n                }\r\n              ]\r\n            }\r\n```\r\n\r\nWhile the last matching doc has just this:\r\n\r\n```\r\n            {\r\n              \"value\": 0.3200183,\r\n              \"description\": \"sum of:\",\r\n              \"details\": [\r\n                {\r\n                  \"value\": 0.3200183,\r\n                  \"description\": \"weight(foo:abb in 3) [PerFieldSimilarity], result of:\",\r\n                  \"details\": []\r\n                }\r\n              ]\r\n            }\r\n```\r\n\r\nThat's just wrong.  Instead, we should be taking the max score for each of these fuzzy \"synonyms\".\r\n\r\n@jimczi what do you think?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274586257","html_url":"https://github.com/elastic/elasticsearch/issues/22745#issuecomment-274586257","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22745","id":274586257,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDU4NjI1Nw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-01-23T19:10:40Z","updated_at":"2017-01-23T19:10:40Z","author_association":"CONTRIBUTOR","body":"Oh I'm stupid - `abb` is matching both terms (`aab` and `abb`), that's why it is being summed.\r\n\r\nNot a bug.  Closing","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274591418","html_url":"https://github.com/elastic/elasticsearch/issues/22745#issuecomment-274591418","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22745","id":274591418,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDU5MTQxOA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-01-23T19:28:42Z","updated_at":"2017-01-23T19:28:42Z","author_association":"MEMBER","body":"Right the query matches the fuzzy terms twice. It's more obvious with the `validate` API:\r\n\r\n````\r\nGET /_validate/query?explain&rewrite\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"should\": [\r\n        {\r\n          \"multi_match\": {\r\n            \"query\": \"aae abb\",\r\n            \"fields\": \"foo\",\r\n            \"fuzziness\": \"AUTO\",\r\n            \"fuzzy_rewrite\": \"top_terms_blended_freqs_10\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\n{\r\n   \"valid\": true,\r\n   \"_shards\": {\r\n      \"total\": 1,\r\n      \"successful\": 1,\r\n      \"failed\": 0\r\n   },\r\n   \"explanations\": [\r\n      {\r\n         \"index\": \"t\",\r\n         \"valid\": true,\r\n         \"explanation\": \"((foo:aab)^0.6666666 foo:aae) ((foo:aab)^0.6666666 foo:abb)\"\r\n      }\r\n   ]\r\n}\r\n`````\r\nThe boost is computed based on the distance with the exact string.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274605497","html_url":"https://github.com/elastic/elasticsearch/issues/22745#issuecomment-274605497","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22745","id":274605497,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDYwNTQ5Nw==","user":{"login":"jeantil","id":22979,"node_id":"MDQ6VXNlcjIyOTc5","avatar_url":"https://avatars3.githubusercontent.com/u/22979?v=4","gravatar_id":"","url":"https://api.github.com/users/jeantil","html_url":"https://github.com/jeantil","followers_url":"https://api.github.com/users/jeantil/followers","following_url":"https://api.github.com/users/jeantil/following{/other_user}","gists_url":"https://api.github.com/users/jeantil/gists{/gist_id}","starred_url":"https://api.github.com/users/jeantil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeantil/subscriptions","organizations_url":"https://api.github.com/users/jeantil/orgs","repos_url":"https://api.github.com/users/jeantil/repos","events_url":"https://api.github.com/users/jeantil/events{/privacy}","received_events_url":"https://api.github.com/users/jeantil/received_events","type":"User","site_admin":false},"created_at":"2017-01-23T20:22:15Z","updated_at":"2017-01-23T20:22:15Z","author_association":"NONE","body":"While I understand the current logic, I still argue that it effectively ends up ranking an exact match below a fuzzy match because it matches the *same* input token twice again different document tokens even when one of the document token has an exact match with a differnt input token. \r\n\r\nhere abb in the input is an exact match for abb in the document, yet aab is fuzzy matched with both aae and abb ?\r\n \r\n@clintongormley  Is there any way to tweak the ranking algorithm to avoid scoring an input token against an output token which already has an exact match (or anything which would alway result in full exact matches to actually be ranked above partial exact match+fuzzy match really)  ?\r\n\r\n@jimczi the validate result seems very weird as it doesn't account for the exact match abb<->abb does this stem from using a specific rewrite `top_terms_blended_freqs_10` ? ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274733551","html_url":"https://github.com/elastic/elasticsearch/issues/22745#issuecomment-274733551","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22745","id":274733551,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDczMzU1MQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-01-24T07:55:52Z","updated_at":"2017-01-24T07:55:52Z","author_association":"MEMBER","body":"@jeantil the validate query uses `top_terms_blended_freqs_10` which is the default rewrite method (except that we keep the top 50 by default). If you want to have exact match always first, you can add the same `match` query without the fuzziness and with the operator set to `AND` and boost that query with a ridiculous number. Though your example is really an edge case, if your language produces only three letter words with an alphabet of two letters I understand that you may have some problems with the fuzziness but that should not be a problem with real words. You can also set the `prefix_length` > 0 in order to skip small words in the fuzzy scoring.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274740286","html_url":"https://github.com/elastic/elasticsearch/issues/22745#issuecomment-274740286","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22745","id":274740286,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDc0MDI4Ng==","user":{"login":"jeantil","id":22979,"node_id":"MDQ6VXNlcjIyOTc5","avatar_url":"https://avatars3.githubusercontent.com/u/22979?v=4","gravatar_id":"","url":"https://api.github.com/users/jeantil","html_url":"https://github.com/jeantil","followers_url":"https://api.github.com/users/jeantil/followers","following_url":"https://api.github.com/users/jeantil/following{/other_user}","gists_url":"https://api.github.com/users/jeantil/gists{/gist_id}","starred_url":"https://api.github.com/users/jeantil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeantil/subscriptions","organizations_url":"https://api.github.com/users/jeantil/orgs","repos_url":"https://api.github.com/users/jeantil/repos","events_url":"https://api.github.com/users/jeantil/events{/privacy}","received_events_url":"https://api.github.com/users/jeantil/received_events","type":"User","site_admin":false},"created_at":"2017-01-24T08:33:07Z","updated_at":"2017-01-24T08:33:07Z","author_association":"NONE","body":">that should not be a problem with real words\r\n\r\nyet I did provide a very real world example of why this issue is important to me. We have a search for cars from all manufacturers. You probably heard of the Porshe 911 in the real world. Except that's a fairly old line of cards so porsche created multiple versions of the Porsche 911 : \r\n* 911 type 911\r\n* 911 type 930\r\n* 911 type 964\r\n* 911 type 991\r\n* 911 type 993\r\n* 911 type 996\r\n* 911 type 997\r\n\r\nAccording to our domain experts, people \"in the know\" talk and search these cars using `911 997`guess what happens ? using ES 5.x our search returns the 40 different motorisations of 911 type 991 before the first 911 type 997.\r\n\r\nThis is not the only brand causing issues. BMW classifies cars as Serie 1, Serie 2, Serie 3, etc ... then goes to decline the series in different categories (E30) Berline, (E36) Berline, (E46) cabrio, etc\r\nBut that's only in the catalog, on the cards they write 320d, 318i, 316xxx\r\n\r\nAnd people use that to refer to their cars and therefore to search for it, I'll let you guess what happened to my test cases when I switched to 1.7.x with the now retired Fuzzy Like This to 5.x with a fuzzy multimatch. At the same time, in the same index, we have brands who enjoy much longer names in which typos are easily found. \r\n\r\n\r\nI took the time to create an easily reproductible test case but that was driven by a very real world issue. \r\n\r\nby the way our current query is already heavily tweaked: \r\n\r\n```\r\nGET vehicle_fr_fr/cartype/_search?search_type=dfs_query_then_fetch\r\n{\r\n  \"size\" : 100,\r\n  \"query\" : {\r\n    \"bool\" : {\r\n      \"should\" : [ {\r\n        \"flt\" : {\r\n          \"fields\" : [ \"motor_search\", \"motor_keywords\", \"cartype_search\", \"cartype_keywords\", \"segment_search\", \"segment_keywords\", \"maker_search\", \"maker_keywords\" ],\r\n          \"like_text\" : \"energy saver+\",\r\n          \"fuzziness\" : \"AUTO\",\r\n          \"ignore_tf\" : true,\r\n          \"boost\" : 0.5\r\n        }\r\n      }, {\r\n        \"constant_score\" : {\r\n          \"query\" : {\r\n            \"multi_match\" : {\r\n              \"query\" : \"energy saver+\",\r\n              \"fields\" : [ \"phrase\" ],\r\n              \"type\" : \"phrase\"\r\n            }\r\n          },\r\n          \"boost\" : 3.0\r\n        }\r\n      }, {\r\n        \"constant_score\" : {\r\n          \"query\" : {\r\n            \"multi_match\" : {\r\n              \"query\" : \"energy saver+\",\r\n              \"fields\" : [ \"motor_search\", \"cartype_search\", \"segment_search\", \"maker_search\" ]\r\n            }\r\n          },\r\n          \"boost\" : 3.0\r\n        }\r\n      }, {\r\n        \"constant_score\" : {\r\n          \"query\" : {\r\n            \"multi_match\" : {\r\n              \"query\" : \"energy saver+\",\r\n              \"fields\" : [ \"motor_keywords\", \"cartype_keywords\", \"segment_keywords\", \"maker_keywords\" ]\r\n            }\r\n          },\r\n          \"boost\" : 3.0\r\n        }\r\n      } ]\r\n    }\r\n  },\r\n  \"highlight\" : {\r\n    \"pre_tags\" : [ \"{\" ],\r\n    \"post_tags\" : [ \"}\" ],\r\n    \"require_field_match\" : true,\r\n    \"fields\" : {\r\n      \"phrase\" : {\r\n        \"type\" : \"fvh\"\r\n      },\r\n      \"motor_search\" : {\r\n        \"type\" : \"fvh\"\r\n      },\r\n      \"motor_keywords\" : {\r\n        \"type\" : \"fvh\"\r\n      },\r\n      \"cartype_search\" : {\r\n        \"type\" : \"fvh\"\r\n      },\r\n      \"cartype_keywords\" : {\r\n        \"type\" : \"fvh\"\r\n      },\r\n      \"segment_search\" : {\r\n        \"type\" : \"fvh\"\r\n      },\r\n      \"segment_keywords\" : {\r\n        \"type\" : \"fvh\"\r\n      },\r\n      \"maker_search\" : {\r\n        \"type\" : \"fvh\"\r\n      },\r\n      \"maker_keywords\" : {\r\n        \"type\" : \"fvh\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274746045","html_url":"https://github.com/elastic/elasticsearch/issues/22745#issuecomment-274746045","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22745","id":274746045,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDc0NjA0NQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-01-24T09:00:37Z","updated_at":"2017-01-24T09:00:37Z","author_association":"MEMBER","body":"Sorry my wording was not clear enough. You should not try to apply fuzziness to a three letter word. If people search for `911 997` you can maybe make the words optional but applying fuzziness to this query is problematic for scoring even when the max distance is 1.\r\nI can see how the \"rank exact match first\" can be useful but it would require a special query for this purpose. Currently each clause is independent from each other so they can only boost exact match at the word level. Having multiple clauses that match the same fuzzy word is an edge case that you can counterbalance by removing problematic words.  \r\nWe can continue the discussion on the forum if you want:\r\nhttps://discuss.elastic.co/c/elasticsearch\r\nYou have some nice cars in your parking ;)\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/274756889","html_url":"https://github.com/elastic/elasticsearch/issues/22745#issuecomment-274756889","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22745","id":274756889,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDc1Njg4OQ==","user":{"login":"jeantil","id":22979,"node_id":"MDQ6VXNlcjIyOTc5","avatar_url":"https://avatars3.githubusercontent.com/u/22979?v=4","gravatar_id":"","url":"https://api.github.com/users/jeantil","html_url":"https://github.com/jeantil","followers_url":"https://api.github.com/users/jeantil/followers","following_url":"https://api.github.com/users/jeantil/following{/other_user}","gists_url":"https://api.github.com/users/jeantil/gists{/gist_id}","starred_url":"https://api.github.com/users/jeantil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeantil/subscriptions","organizations_url":"https://api.github.com/users/jeantil/orgs","repos_url":"https://api.github.com/users/jeantil/repos","events_url":"https://api.github.com/users/jeantil/events{/privacy}","received_events_url":"https://api.github.com/users/jeantil/received_events","type":"User","site_admin":false},"created_at":"2017-01-24T09:49:44Z","updated_at":"2017-01-24T09:49:44Z","author_association":"NONE","body":"Thanks for taking the time. I fail to understand how I can \"remove the problematic words\" since they convey 100% of the information I am trying to retrieve. I have created a topic on the forum to continue this disussion: \r\nhttps://discuss.elastic.co/t/fuzzy-query-ranks-misspellings-over-exact-for-repeated-close-tokens/72605\r\n\r\nThanks again for your help. ","performed_via_github_app":null}]