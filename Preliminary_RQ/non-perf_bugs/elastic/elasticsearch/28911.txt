{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/28911","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28911/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28911/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/28911/events","html_url":"https://github.com/elastic/elasticsearch/issues/28911","id":302655912,"node_id":"MDU6SXNzdWUzMDI2NTU5MTI=","number":28911,"title":"Percolator query not returning document that the query matches (multiple must nested conditions)","user":{"login":"maricn","id":3995223,"node_id":"MDQ6VXNlcjM5OTUyMjM=","avatar_url":"https://avatars1.githubusercontent.com/u/3995223?v=4","gravatar_id":"","url":"https://api.github.com/users/maricn","html_url":"https://github.com/maricn","followers_url":"https://api.github.com/users/maricn/followers","following_url":"https://api.github.com/users/maricn/following{/other_user}","gists_url":"https://api.github.com/users/maricn/gists{/gist_id}","starred_url":"https://api.github.com/users/maricn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maricn/subscriptions","organizations_url":"https://api.github.com/users/maricn/orgs","repos_url":"https://api.github.com/users/maricn/repos","events_url":"https://api.github.com/users/maricn/events{/privacy}","received_events_url":"https://api.github.com/users/maricn/received_events","type":"User","site_admin":false},"labels":[{"id":156502592,"node_id":"MDU6TGFiZWwxNTY1MDI1OTI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Percolator","name":":Search/Percolator","color":"0e8a16","default":false,"description":"Reverse search: find queries that match a document"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-03-06T11:01:55Z","updated_at":"2018-03-09T06:10:56Z","closed_at":"2018-03-09T06:10:56Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):\r\n```\r\nVersion: 6.2.2, Build: 10b1edd/2018-02-16T19:01:30.685723Z, JVM: 9.0.4\r\n```\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`):\r\n```\r\njava version \"9.0.4\"\r\nJava(TM) SE Runtime Environment (build 9.0.4+11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 9.0.4+11, mixed mode)\r\n```\r\n\r\n**OS version** (`uname -a` if on a Unix-like system):\r\n```\r\nDarwin anotherMBP.local 17.4.0 Darwin Kernel Version 17.4.0: Sun Dec 17 09:19:54 PST 2017; root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64\r\n```\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nPercolator queries are not matching the documents that matched using the same queries.\r\n\r\nI will include a query and a document below - when I index the document and then run the provided query against it, the document is found. When I add the same query to a percolator document and query the user against it, it is not found.\r\n\r\nRelated to https://github.com/elastic/elasticsearch/issues/28315.\r\n\r\nI noticed this behavior only when the query has `must: []` containing multiple `nested` queries, having at least one of them containing multiple `must: []` conditions.\r\n\r\n**Steps to reproduce**:\r\n\r\n 1. I've just noticed this bug with must condition. I'm executing the following query: `GET /user/_search`\r\n```\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"must\": [\r\n        {\r\n          \"nested\": {\r\n            \"query\": {\r\n              \"bool\": {\r\n                \"must\": [\r\n                  {\r\n                    \"term\": {\r\n                      \"stories.storyId\": 2\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            \"path\": \"stories\"\r\n          }\r\n        },\r\n        {\r\n          \"nested\": {\r\n            \"query\": {\r\n              \"bool\": {\r\n                \"must\": [\r\n                  {\r\n                    \"term\": {\r\n                      \"stories.storyId\": 1\r\n                    }\r\n                  },\r\n                  {\r\n                    \"term\": {\r\n                      \"stories.storyName\": \"story1\"\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            \"path\": \"stories\"\r\n          }\r\n        },\r\n        {\r\n          \"nested\": {\r\n            \"query\": {\r\n              \"bool\": {\r\n                \"must\": [\r\n                  {\r\n                    \"range\": {\r\n                      \"stories.executedAt\": {\r\n                        \"gte\": \"now-1w\"\r\n                      }\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            \"path\": \"stories\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n2. I get back the response with the document: \r\n```\r\n{\r\n  \"took\": 3,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 5,\r\n    \"successful\": 5,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": 1,\r\n    \"max_score\": 4.568616,\r\n    \"hits\": [\r\n      {\r\n        \"_index\": \"user-180306\",\r\n        \"_type\": \"user\",\r\n        \"_id\": \"kpF7-mEBH3oCPpbkErLB\",\r\n        \"_score\": 4.568616,\r\n        \"_source\": {\r\n          \"stories\": [\r\n            {\r\n              \"storyId\": 1,\r\n              \"storyName\": \"story1\",\r\n              \"executedAt\": \"2018-03-06T07:45:00.000+01:00\"\r\n            },\r\n            {\r\n              \"storyId\": 2,\r\n              \"storyName\": \"story2\",\r\n              \"executedAt\": \"2018-03-06T07:55:00.000+01:00\"\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n 3. I percolate that search: `POST /story-query/doctype/`\r\n```\r\n{\r\n          \"query\": {\r\n            \"bool\": {\r\n              \"must\": [\r\n                {\r\n                  \"nested\": {\r\n                    \"query\": {\r\n                      \"bool\": {\r\n                        \"must\": [\r\n                          {\r\n                            \"term\": {\r\n                              \"stories.storyId\": 2\r\n                            }\r\n                          }\r\n                        ]\r\n                      }\r\n                    },\r\n                    \"path\": \"stories\"\r\n                  }\r\n                },\r\n                {\r\n                  \"nested\": {\r\n                    \"query\": {\r\n                      \"bool\": {\r\n                        \"must\": [\r\n                          {\r\n                            \"term\": {\r\n                              \"stories.storyId\": 1\r\n                            }\r\n                          },\r\n                          {\r\n                            \"term\": {\r\n                              \"stories.storyName\": \"story1\"\r\n                            }\r\n                          }\r\n                        ]\r\n                      }\r\n                    },\r\n                    \"path\": \"stories\"\r\n                  }\r\n                },\r\n                {\r\n                  \"nested\": {\r\n                    \"query\": {\r\n                      \"bool\": {\r\n                        \"must\": [\r\n                          {\r\n                            \"range\": {\r\n                              \"stories.executedAt\": {\r\n                                \"gt\": \"now-1w\"\r\n                              }\r\n                            }\r\n                          }\r\n                        ]\r\n                      }\r\n                    },\r\n                    \"path\": \"stories\"\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          },\r\n          \"meta\": {\r\n            \"storyId\": 303,\r\n            \"storyName\": \"story-last-week-name\",\r\n            \"storyDescription\": \"some story happened inside the last week, multiple conditions - name\"\r\n          }\r\n        }\r\n```\r\n 4. When I run that document from result against the percolator, I don't get the percolated query in result list (i get other valid queries). Running document against percolator `GET story-query/doctype/_search`:\r\n```\r\n{\r\n  \"query\": {\r\n    \"percolate\": {\r\n      \"field\": \"query\",\r\n      \"document_type\": \"doctype\",\r\n      \"index\": \"user-180306\",\r\n      \"type\": \"user\",\r\n      \"id\": \"kpF7-mEBH3oCPpbkErLB\"\r\n    }\r\n  },\r\n  \"_source\": {\r\n    \"includes\": \"meta.*\"\r\n  }\r\n}\r\n```\r\n\r\n**Provide logs (if relevant)**:\r\n\r\n","closed_by":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"performed_via_github_app":null}