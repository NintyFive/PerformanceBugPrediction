[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/30945768","html_url":"https://github.com/elastic/elasticsearch/issues/4520#issuecomment-30945768","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4520","id":30945768,"node_id":"MDEyOklzc3VlQ29tbWVudDMwOTQ1NzY4","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2013-12-19T16:59:37Z","updated_at":"2013-12-19T16:59:37Z","author_association":"NONE","body":"@clintongormley  \n\nOn Different analyzer chains:\nI would not discount the value of different analyzer chains. Any chain that create multiple tokens at the same position (synonyms, stemmers) currently handled gracefully in various AND queries by treating tokens at the same position as (OR) fragment. It works very well for cases where I want to have an _all-like field but I want to decide which contributing fields should be stemmed and which should be precise (would not want to stem people names for example whlie would want to stem their comment). With potential implementation of text fragment boosting #4364 we could even have logic to boost originals higher that stemmed/synonym tokens\n\nOn Proposed syntax:\n1. It does not support different analyzer chains :-)\n2. It does not allow inheriting boosts of the contributing fields forcing us to repeat them. It would be nice if it would inherit it unless overridden\n\nI would consider it a shorthand form but would like to retain complete verbose form\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/30946217","html_url":"https://github.com/elastic/elasticsearch/issues/4520#issuecomment-30946217","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4520","id":30946217,"node_id":"MDEyOklzc3VlQ29tbWVudDMwOTQ2MjE3","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2013-12-19T17:03:52Z","updated_at":"2013-12-19T17:03:52Z","author_association":"CONTRIBUTOR","body":"@roytmana stemming some words and not others is pretty meaningless - you have to choose at query time whether you want to query the stemmed form or the unstemmed form. At that stage better to have it in two different fields. \n\nPutting tokens from multiple analysis chains results in a mess - it really doesn't work well.\n\nSecond, for field-level index time boosting:  I don't recommend using it for a single field.  You lose precision in field norms and you have to reindex if you want to change it. Much better to use query-time boosting on a field instead.\n\nFor the custom `_all` field you can't do it at query time, which is why I would like to support it there.  So you should only end up specifying it once: in the `copy_to` parameter.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/30947470","html_url":"https://github.com/elastic/elasticsearch/issues/4520#issuecomment-30947470","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4520","id":30947470,"node_id":"MDEyOklzc3VlQ29tbWVudDMwOTQ3NDcw","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2013-12-19T17:18:01Z","updated_at":"2013-12-19T17:18:01Z","author_association":"NONE","body":"It is not meaningless. Yes you have freedom to choose analyzer at query time but you do not have to. As I said latest ES versions handle AND queries for tokens on the same position gracefully removing issue with not being able to use the same (stem+no-stem) analyzer at query time\n\nIn some cases it will create a mess and in some no. In the case I outlined above it works better for me than trying to combine several flavors of _all like field (stemmed and unstemmed) and it is the only way to have an _all like field combining stemmed and unstemmed input very importand for cases where stemming of certain contributing fileds can screw up data (like stemming people names)\n\nin cases when you have hundreds of fields contributing to an _all like field I would like to have as much control over how it is put together (boosts, position gaps and analyzer chain) as possible. It would be up to me to make sure it is not mess in the end. I would not want ES preventing me from getting burned by denying me such functionality. Not to mention that there could be many people who do use it already and removing it would break their code. \n\nI do not dispute that _all like field level analyzer chain without per contributing field chains is the most common use case but why not use shorthand default config - absence of analyzers on contributing field definition which will be the case when using your shorthand version as indication that the _all like field analyzers should be used\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/30950303","html_url":"https://github.com/elastic/elasticsearch/issues/4520#issuecomment-30950303","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4520","id":30950303,"node_id":"MDEyOklzc3VlQ29tbWVudDMwOTUwMzAz","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2013-12-19T17:52:51Z","updated_at":"2013-12-19T17:52:51Z","author_association":"CONTRIBUTOR","body":"I'm wondering that it may actually be a better idea to stem your family names at indexing time? For example, let's imagine that one of the family names is Y, which is also a common name whose stem is X. I assume that you would apply stemming at query time so a query on `Y` would be translated into (`X` or `Y`). And then if you didn't apply stemming at indexing time, X is going to have a lower frequency, so matches on X are going to get better scores?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/30952799","html_url":"https://github.com/elastic/elasticsearch/issues/4520#issuecomment-30952799","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4520","id":30952799,"node_id":"MDEyOklzc3VlQ29tbWVudDMwOTUyNzk5","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2013-12-19T18:25:59Z","updated_at":"2013-12-19T18:25:59Z","author_association":"NONE","body":"from that perspective, yes (ideally I would want to give stemmed form a slight negative boost), I did not test it enough with real data as I had to switch from all-like to back to _all field due to field based boosts not supported. \n\nBut here is another scenario: I am most interested in real words not people names. I am searching on \"turn\" but getting also Turner because names were stemmed.\n\nalso in case of synonyms it is not as obvious\n\nI guess it is never perfect for all the scenarious\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31018123","html_url":"https://github.com/elastic/elasticsearch/issues/4520#issuecomment-31018123","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4520","id":31018123,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMDE4MTIz","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2013-12-20T15:43:02Z","updated_at":"2013-12-20T15:43:02Z","author_association":"NONE","body":"@clintongormley if we use copy-to syntax, it would be great if we could copy multifields recursively into other multifields.\n\nFor example I may have a my_all field which includes 100 fields and I want a stemmed version of it and shingled one being able to create my_all_stemmed by copying my_all would be a huge benefit\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31018493","html_url":"https://github.com/elastic/elasticsearch/issues/4520#issuecomment-31018493","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4520","id":31018493,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMDE4NDkz","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2013-12-20T15:47:34Z","updated_at":"2013-12-20T15:47:34Z","author_association":"CONTRIBUTOR","body":"@roytmana I don't think that would work with how ES uses stream parsing.  We would have to hold on to a bunch of information to support this, plus would have to handle circular dependencies. Sounds more complex than we want to make this.  \n\nInstead, you'll just be able to specify:  \n\n```\n\"copy_to\": [ \"my_all\", \"my_all_stemmed\"]\n```\n\n(yes I realise you'll have to do it on all 100 fields, but I think the advantages of being explicit outweigh the complications of recursion here)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31021859","html_url":"https://github.com/elastic/elasticsearch/issues/4520#issuecomment-31021859","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4520","id":31021859,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMDIxODU5","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2013-12-20T16:29:51Z","updated_at":"2013-12-20T16:29:51Z","author_association":"NONE","body":"@clintongormley fair enough it's not too hard . \n\nwhat about reversing it: \n\n```\n\"my_all\":{\"copy-from\":[\"message.title\", \"message.body\", \"message.sender.email\"....]}\n```\n\nmakes it easy to maintain all in one place the big disadvantage is the need to use full property names\n\nI still have some concern re. using just copy-to form:\n\nI would like to be able to inherit boosts from contributing fields if no boost is specified in copy-to statement and I would like to be able to specify position gap offset for each contributing field even if you decide not to support different analysis pipelines\n\nWill copy_to support bott strings ( field names to copy to) and objects with field name and options such as boos and gap offset and anything else we may need in the future. The string form would be a shorthand for default copy logic\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31022508","html_url":"https://github.com/elastic/elasticsearch/issues/4520#issuecomment-31022508","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4520","id":31022508,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMDIyNTA4","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2013-12-20T16:37:27Z","updated_at":"2013-12-20T16:37:27Z","author_association":"CONTRIBUTOR","body":"We did consider `copy_from`, but it suffers from similar issues with stream parsing. You essentially need to reparse the document in order to get all of the values from the other fields.\n\nAs far as `position_offset_gap`, that would be configured (like analyzer, type, etc) in the mapping for the destination field, as it is a single setting per analyzer (and we only have one analyzer -- the analyzer associated with the destination field).\n\nRe inheriting boosts... hmmm, I suppose we could do that.  However, I repeat, using field-level index-time boosting is a bad idea, with the exception of when you use a custom `_all` field and are left with no other option.\n\n> and anything else we may need in the future\n\nThere shouldn't be anything other than boost. All we're doing is taking the value from one place and indexing as a different field, which has all the settings you need.  The only exception being per-field boost.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31023607","html_url":"https://github.com/elastic/elasticsearch/issues/4520#issuecomment-31023607","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4520","id":31023607,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMDIzNjA3","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2013-12-20T16:51:38Z","updated_at":"2013-12-20T16:51:38Z","author_association":"NONE","body":"thanks for the explanation @clintongormley  I still feel that providing flexibility in hos all-like fields are put together (multiple pipelines) would have very valuable but it is your call of course :-)\n\nWill traditional field-scoped concept of multifield remain (say for not analyzed version of a field no copying from multiple sources involved) or will we have to declare them separately and then use copy_to?\n\nis this slotted for near future 0.9.x or 1.0.x? I just want to plan better as I have a rather big mapping file to rework. Thankfully it is all defined in javascript code and generates itself including proper naming (full name) of multifields where  both all-like and field scoped multifields are needed but still it is fair amount of work.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31023768","html_url":"https://github.com/elastic/elasticsearch/issues/4520#issuecomment-31023768","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4520","id":31023768,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMDIzNzY4","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2013-12-20T16:53:47Z","updated_at":"2013-12-20T16:53:47Z","author_association":"CONTRIBUTOR","body":"> Will traditional field-scoped concept of multifield remain (say for not analyzed version of a field no copying from multiple sources involved) or will we have to declare them separately and then use copy_to?\n\nMulti-fields will remain, although I'd like to see their syntax improved as per #4521 \n\n> is this slotted for near future 0.9.x or 1.0.x?\n\nIt won't be in 0.90 but hoping to get it in for 1.0\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31024067","html_url":"https://github.com/elastic/elasticsearch/issues/4520#issuecomment-31024067","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4520","id":31024067,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMDI0MDY3","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"created_at":"2013-12-20T16:57:47Z","updated_at":"2013-12-20T16:57:47Z","author_association":"NONE","body":"@clintongormley many thanks!  \n#4521 would be very nice to have as well.\n","performed_via_github_app":null}]