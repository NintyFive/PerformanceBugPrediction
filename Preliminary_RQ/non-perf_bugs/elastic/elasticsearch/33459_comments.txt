[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/419040013","html_url":"https://github.com/elastic/elasticsearch/issues/33459#issuecomment-419040013","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33459","id":419040013,"node_id":"MDEyOklzc3VlQ29tbWVudDQxOTA0MDAxMw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-09-06T10:09:55Z","updated_at":"2018-09-06T10:09:55Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-security","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/419097700","html_url":"https://github.com/elastic/elasticsearch/issues/33459#issuecomment-419097700","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33459","id":419097700,"node_id":"MDEyOklzc3VlQ29tbWVudDQxOTA5NzcwMA==","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"created_at":"2018-09-06T13:42:00Z","updated_at":"2018-09-06T13:42:00Z","author_association":"MEMBER","body":"From the PKCS#11 guide:\r\n\r\n> To use a PKCS#11 token as a keystore or trust store, set the javax.net.ssl.keyStoreType and javax.net.ssl.trustStoreType system properties, respectively, to \"PKCS11\", and set the javax.net.ssl.keyStore and javax.net.ssl.trustStore system properties, respectively, to NONE. To specify the use of a specific provider instance, use the javax.net.ssl.keyStoreProvider and javax.net.ssl.trustStoreProvider system properties (e.g., \"SunPKCS11-SmartCard\").\r\n\r\nWhat do you think about adding support for keyStoreProvider and trustStoreProvider?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/420357934","html_url":"https://github.com/elastic/elasticsearch/issues/33459#issuecomment-420357934","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33459","id":420357934,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMDM1NzkzNA==","user":{"login":"jkakavas","id":10281256,"node_id":"MDQ6VXNlcjEwMjgxMjU2","avatar_url":"https://avatars2.githubusercontent.com/u/10281256?v=4","gravatar_id":"","url":"https://api.github.com/users/jkakavas","html_url":"https://github.com/jkakavas","followers_url":"https://api.github.com/users/jkakavas/followers","following_url":"https://api.github.com/users/jkakavas/following{/other_user}","gists_url":"https://api.github.com/users/jkakavas/gists{/gist_id}","starred_url":"https://api.github.com/users/jkakavas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkakavas/subscriptions","organizations_url":"https://api.github.com/users/jkakavas/orgs","repos_url":"https://api.github.com/users/jkakavas/repos","events_url":"https://api.github.com/users/jkakavas/events{/privacy}","received_events_url":"https://api.github.com/users/jkakavas/received_events","type":"User","site_admin":false},"created_at":"2018-09-11T17:39:19Z","updated_at":"2018-09-11T17:39:19Z","author_association":"CONTRIBUTOR","body":"JSSE assumes that there is only one PrivateKeyEntry in the keystore that is used to initialize the `X509ExtendedKeyManager` (or that we are only interested in the first entry), see https://github.com/frohoff/jdk8u-jdk/blob/da0da73ab82ed714dc5be94acd2f0d00fbdfe2e9/src/share/classes/sun/security/ssl/SunX509KeyManagerImpl.java#L50\r\n\r\n>   The JSSE handshake code currently calls into this class via\r\n>   chooseClientAlias() and chooseServerAlias() to find the certificates to\r\n>   use. As implemented here, both always return the first alias returned by\r\n>   getClientAliases() and getServerAliases(). In turn, these methods are\r\n>   implemented by calling getAliases(), which performs the actual lookup.\r\n\r\nIf we were to support keystores that contain multiple PrivateKeyEntry and the possibility to select the appropriate alias to use via configuration (ie `xpack.ssl.keystore.key_alias` , then we'd have to implement our own KeyManager extending `X509ExtendedKeyManager` and implement the `chooseServerAlias()` method accordingly. Unfortunately we cannot do that as, as [we figured out during the FIPS effort](https://github.com/elastic/elasticsearch/pull/30509), [we cannot use KeyManagers that extend the SunJSSE ones](http://hg.openjdk.java.net/jdk8/jdk8/jdk/file/687fd7c7986d/src/share/classes/sun/security/ssl/SSLContextImpl.java#l152)\r\n\r\nSince we can only use one`PKCS#11` Keystore per Provider with and the KeyStore can only contain one entry, we can effectively use only one Key throughout our configuration. \r\n\r\nAn alternative to the above is to support multiple Security Providers, configured in the Java security properties and use a different one for each (`KeyManager-KeyStore-Key`) that needs to be used in a configuration. This will require the introduction of an optional configuration setting that can be used wherever a certificate/key or a keystore can be configured in order to denote the provider ID to use for the `KeyManagerFactory`. We should probably limit this to be allowed only when `PKCS#11` keystores/tokens are in use and also verify that a provider ID is valid when we parse the newly introduced setting's value. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/424516537","html_url":"https://github.com/elastic/elasticsearch/issues/33459#issuecomment-424516537","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33459","id":424516537,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNDUxNjUzNw==","user":{"login":"jkakavas","id":10281256,"node_id":"MDQ6VXNlcjEwMjgxMjU2","avatar_url":"https://avatars2.githubusercontent.com/u/10281256?v=4","gravatar_id":"","url":"https://api.github.com/users/jkakavas","html_url":"https://github.com/jkakavas","followers_url":"https://api.github.com/users/jkakavas/followers","following_url":"https://api.github.com/users/jkakavas/following{/other_user}","gists_url":"https://api.github.com/users/jkakavas/gists{/gist_id}","starred_url":"https://api.github.com/users/jkakavas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkakavas/subscriptions","organizations_url":"https://api.github.com/users/jkakavas/orgs","repos_url":"https://api.github.com/users/jkakavas/repos","events_url":"https://api.github.com/users/jkakavas/events{/privacy}","received_events_url":"https://api.github.com/users/jkakavas/received_events","type":"User","site_admin":false},"created_at":"2018-09-25T22:01:14Z","updated_at":"2018-09-25T22:01:14Z","author_association":"CONTRIBUTOR","body":"It turns out that multiple PKCS#11 Security Providers cannot be used, as only one can be configured at a given time. \r\nThis basically means that there is no FIPS Compliant way to bypass the single keystore ( == single private key and certificate for TLS ) limitation. \r\nA PR that allows the use of PKCS#11 tokens is opened : https://github.com/elastic/elasticsearch/pull/34063/","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/425496772","html_url":"https://github.com/elastic/elasticsearch/issues/33459#issuecomment-425496772","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33459","id":425496772,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNTQ5Njc3Mg==","user":{"login":"jkakavas","id":10281256,"node_id":"MDQ6VXNlcjEwMjgxMjU2","avatar_url":"https://avatars2.githubusercontent.com/u/10281256?v=4","gravatar_id":"","url":"https://api.github.com/users/jkakavas","html_url":"https://github.com/jkakavas","followers_url":"https://api.github.com/users/jkakavas/followers","following_url":"https://api.github.com/users/jkakavas/following{/other_user}","gists_url":"https://api.github.com/users/jkakavas/gists{/gist_id}","starred_url":"https://api.github.com/users/jkakavas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkakavas/subscriptions","organizations_url":"https://api.github.com/users/jkakavas/orgs","repos_url":"https://api.github.com/users/jkakavas/repos","events_url":"https://api.github.com/users/jkakavas/events{/privacy}","received_events_url":"https://api.github.com/users/jkakavas/received_events","type":"User","site_admin":false},"created_at":"2018-09-28T16:46:46Z","updated_at":"2018-09-28T16:46:46Z","author_association":"CONTRIBUTOR","body":"> It turns out that multiple PKCS#11 Security Providers cannot be used, as only one can be configured at a given time.\r\n\r\nThat was misleading. Mulitple PKCS#11 (of type `sun.security.pkcs11.SunPKCS11`) can be configured both statically ( in `java.security` ) or dynamically. For example using the `security.properties` one can define:\r\n```\r\n...\r\n...\r\nsecurity.provider.10=sun.security.pkcs11.SunPKCS11 nss.cfg\r\nsecurity.provider.11=sun.security.pkcs11.SunPKCS11 nss2.cfg\r\n```\r\n\r\nwith `nss.cfg` and `nss.cfg` pointing to different databases ( or HW tokens ), ie.\r\n\r\n```\r\nname=NSS\r\nnssLibraryDirectory=/usr/lib/x86_64-linux-gnu\r\nnssSecmodDirectory=/path/to/nss/fips/db\r\nnssModule=fips\r\n```\r\n\r\nand \r\n\r\n```\r\nname=NSS\r\nnssLibraryDirectory=/usr/lib/x86_64-linux-gnu\r\nnssSecmodDirectory=/path/to/nss2/fips/db\r\nnssModule=fips\r\n```\r\n\r\nWhat **cannot** be done is to initialize both. An error: \r\n```\r\nSecmod directory /path/to/nss2/fips/db invalid, NSS already initialized with /path/to/nss/fips/db\r\n```\r\nis thrown. See \r\n\r\nhttps://github.com/frohoff/jdk8u-jdk/blob/master/src/share/classes/sun/security/pkcs11/SunPKCS11.java#L172\r\n\r\nA minimal example that reproduces the above behavior is:\r\n\r\n``` java\r\npublic class MultipleNssProviders {\r\n    private static final String PROVIDER_ID_1 = \"SunPKCS11-NSS\";\r\n    private static final String PROVIDER_ID_2 = \"SunPKCS11-NSSTrust\";\r\n    private static final String KEYSTORE_TYPE = \"PKCS11\";\r\n    private static final String KEYSTORE_PWD = \"ThePassword\";\r\n\r\n    public static void main(String[] args) throws Exception{\r\n        KeyStore ks1 = KeyStore.getInstance(KEYSTORE_TYPE, PROVIDER_ID_1);\r\n        ks1.load(null, KEYSTORE_PWD.toCharArray());\r\n        KeyStore ks2 = KeyStore.getInstance(KEYSTORE_TYPE, PROVIDER_ID_2);\r\n        // throws java.security.ProviderException\r\n        ks2.load(null, KEYSTORE_PWD.toCharArray());\r\n    }\r\n}\r\n```\r\n\r\nAs such we cannot use two PKCS#11 tokens simultaneously , i.e one for the http layer keystore and one for the transport layer one. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/425517780","html_url":"https://github.com/elastic/elasticsearch/issues/33459#issuecomment-425517780","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33459","id":425517780,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNTUxNzc4MA==","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"created_at":"2018-09-28T17:59:13Z","updated_at":"2018-09-28T17:59:13Z","author_association":"MEMBER","body":"That is really an unfortunate limitation. I agree then we don't need the provider support.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/435350544","html_url":"https://github.com/elastic/elasticsearch/issues/33459#issuecomment-435350544","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33459","id":435350544,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTM1MDU0NA==","user":{"login":"jkakavas","id":10281256,"node_id":"MDQ6VXNlcjEwMjgxMjU2","avatar_url":"https://avatars2.githubusercontent.com/u/10281256?v=4","gravatar_id":"","url":"https://api.github.com/users/jkakavas","html_url":"https://github.com/jkakavas","followers_url":"https://api.github.com/users/jkakavas/followers","following_url":"https://api.github.com/users/jkakavas/following{/other_user}","gists_url":"https://api.github.com/users/jkakavas/gists{/gist_id}","starred_url":"https://api.github.com/users/jkakavas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkakavas/subscriptions","organizations_url":"https://api.github.com/users/jkakavas/orgs","repos_url":"https://api.github.com/users/jkakavas/repos","events_url":"https://api.github.com/users/jkakavas/events{/privacy}","received_events_url":"https://api.github.com/users/jkakavas/received_events","type":"User","site_admin":false},"created_at":"2018-11-02T11:31:32Z","updated_at":"2018-11-02T11:31:32Z","author_association":"CONTRIBUTOR","body":"Resolved (with limitations) by #34063 and #33460","performed_via_github_app":null}]