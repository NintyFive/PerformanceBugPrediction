[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/403636567","html_url":"https://github.com/elastic/elasticsearch/issues/31908#issuecomment-403636567","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31908","id":403636567,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMzYzNjU2Nw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-07-09T22:10:42Z","updated_at":"2018-07-09T22:10:42Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/467456587","html_url":"https://github.com/elastic/elasticsearch/issues/31908#issuecomment-467456587","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31908","id":467456587,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NzQ1NjU4Nw==","user":{"login":"SergSlipushenko","id":6264313,"node_id":"MDQ6VXNlcjYyNjQzMTM=","avatar_url":"https://avatars1.githubusercontent.com/u/6264313?v=4","gravatar_id":"","url":"https://api.github.com/users/SergSlipushenko","html_url":"https://github.com/SergSlipushenko","followers_url":"https://api.github.com/users/SergSlipushenko/followers","following_url":"https://api.github.com/users/SergSlipushenko/following{/other_user}","gists_url":"https://api.github.com/users/SergSlipushenko/gists{/gist_id}","starred_url":"https://api.github.com/users/SergSlipushenko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SergSlipushenko/subscriptions","organizations_url":"https://api.github.com/users/SergSlipushenko/orgs","repos_url":"https://api.github.com/users/SergSlipushenko/repos","events_url":"https://api.github.com/users/SergSlipushenko/events{/privacy}","received_events_url":"https://api.github.com/users/SergSlipushenko/received_events","type":"User","site_admin":false},"created_at":"2019-02-26T14:22:10Z","updated_at":"2019-02-26T14:22:10Z","author_association":"NONE","body":"@nik9000  Is this bug going to be fixed someday? It might be helpful at least to state in the docs the reindexing to a remote cluster is not supported for external versioning...","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/492649579","html_url":"https://github.com/elastic/elasticsearch/issues/31908#issuecomment-492649579","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31908","id":492649579,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MjY0OTU3OQ==","user":{"login":"tbrooks8","id":862472,"node_id":"MDQ6VXNlcjg2MjQ3Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/862472?v=4","gravatar_id":"","url":"https://api.github.com/users/tbrooks8","html_url":"https://github.com/tbrooks8","followers_url":"https://api.github.com/users/tbrooks8/followers","following_url":"https://api.github.com/users/tbrooks8/following{/other_user}","gists_url":"https://api.github.com/users/tbrooks8/gists{/gist_id}","starred_url":"https://api.github.com/users/tbrooks8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbrooks8/subscriptions","organizations_url":"https://api.github.com/users/tbrooks8/orgs","repos_url":"https://api.github.com/users/tbrooks8/repos","events_url":"https://api.github.com/users/tbrooks8/events{/privacy}","received_events_url":"https://api.github.com/users/tbrooks8/received_events","type":"User","site_admin":false},"created_at":"2019-05-15T13:15:42Z","updated_at":"2019-05-15T13:15:42Z","author_association":"CONTRIBUTOR","body":"I think I have identified why this is happening. In `AbstractAsyncBulkByScrollAction` we set that we need the version on `SearchSourceBuilder`. The `RemoteScrollableHitSource` calls `RemoteRequestBuilders#initialSearch` to convert this into the http request. In that method it does NOT propagate the need for the version:\r\n\r\n```\r\nif (searchRequest.source().version() == null || searchRequest.source().version() == true) {\r\n    /*\r\n     * Passing `null` here just add the `version` request parameter\r\n     * without any value. This way of requesting the version works\r\n     * for all supported versions of Elasticsearch.\r\n     */\r\n    request.addParameter(\"version\", null);\r\n}\r\n```\r\n\r\nUnfortunately, if the version configured on `SearchSourceBuilder` is null, the version is not returned. Currently, the `DefaultSearchContext.java` is configured to not return the version by default:\r\n\r\n```\r\nprivate boolean version = false; // by default, we don't return versions\r\n```\r\n\r\nThis leads to the exception, because the version (when not requested) is set to -1. And that is an invalid version.\r\n\r\nI was able to reproduce this issue locally, if I modified the `RemoteRequestBuilders#initialSearch` to propagate \"version\"=true, the test started passing. However, I do not know if there are some backwards compatibility concerns? The comment in the `RemoteRequestBuilders.java` seems to suggest there might be. @nik9000 I think this was initially your work/comment. Do you have some context on that?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/493404085","html_url":"https://github.com/elastic/elasticsearch/issues/31908#issuecomment-493404085","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31908","id":493404085,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzQwNDA4NQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2019-05-17T10:21:19Z","updated_at":"2019-05-17T10:21:19Z","author_association":"CONTRIBUTOR","body":"This is reaching back pretty far in my memory but I'm fairly sure there are\nbackwards compatibility problems with setting `version=true` in some\nversions of elasticsearch. We have those versions running for the reindex\ntests but we might not have that case covered. It's certainly worth running\nall the tests with the change locally to see. If it fails then I'd be\ncomfortable with the coverage. If not then it'll take some investigating.\n\nOn Wed, May 15, 2019, 09:18 Tim Brooks <notifications@github.com> wrote:\n\n> I think I have identified why this is happening. In\n> AbstractAsyncBulkByScrollAction we set that we need the version on\n> SearchSourceBuilder. The RemoteScrollableHitSource calls\n> RemoteRequestBuilders#initialSearch to convert this into the http\n> request. In that method it does NOT propagate the need for the version:\n>\n> if (searchRequest.source().version() == null || searchRequest.source().version() == true) {\n>     /*\n>      * Passing `null` here just add the `version` request parameter\n>      * without any value. This way of requesting the version works\n>      * for all supported versions of Elasticsearch.\n>      */\n>     request.addParameter(\"version\", null);\n> }\n>\n> Unfortunately, if the version configured on SearchSourceBuilder is null,\n> the version is not returned. Currently, the DefaultSearchContext.java is\n> configured to not return the version by default:\n>\n> private boolean version = false; // by default, we don't return versions\n>\n> This leads to the exception, because the version (when not requested) is\n> set to -1. And that is an invalid version.\n>\n> I was able to reproduce this issue locally, if I modified the\n> RemoteRequestBuilders#initialSearch to propagate \"version\"=true, the test\n> started passing. However, I do not know if there are some backwards\n> compatibility concerns? The comment in the RemoteRequestBuilders.java\n> seems to suggest there might be. @nik9000 <https://github.com/nik9000> I\n> think this was initially your work/comment. Do you have some context on\n> that?\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/elastic/elasticsearch/issues/31908?email_source=notifications&email_token=AABUXISRYS7RK5P3IM7UFHLPVQEQRA5CNFSM4FJB3NVKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODVOTY2Y#issuecomment-492649579>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABUXIX7PEFZRDS7KUUO76LPVQEQRANCNFSM4FJB3NVA>\n> .\n>\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/499679828","html_url":"https://github.com/elastic/elasticsearch/issues/31908#issuecomment-499679828","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31908","id":499679828,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5OTY3OTgyOA==","user":{"login":"tbrooks8","id":862472,"node_id":"MDQ6VXNlcjg2MjQ3Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/862472?v=4","gravatar_id":"","url":"https://api.github.com/users/tbrooks8","html_url":"https://github.com/tbrooks8","followers_url":"https://api.github.com/users/tbrooks8/followers","following_url":"https://api.github.com/users/tbrooks8/following{/other_user}","gists_url":"https://api.github.com/users/tbrooks8/gists{/gist_id}","starred_url":"https://api.github.com/users/tbrooks8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbrooks8/subscriptions","organizations_url":"https://api.github.com/users/tbrooks8/orgs","repos_url":"https://api.github.com/users/tbrooks8/repos","events_url":"https://api.github.com/users/tbrooks8/events{/privacy}","received_events_url":"https://api.github.com/users/tbrooks8/received_events","type":"User","site_admin":false},"created_at":"2019-06-06T21:46:05Z","updated_at":"2019-06-06T21:46:05Z","author_association":"CONTRIBUTOR","body":"Closed as this should be fixed at this point. @SergSlipushenko this should be fixed in 7.2.","performed_via_github_app":null}]