[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/453120388","html_url":"https://github.com/elastic/elasticsearch/issues/37286#issuecomment-453120388","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37286","id":453120388,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzEyMDM4OA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-01-10T14:46:53Z","updated_at":"2019-01-10T14:46:53Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/453128767","html_url":"https://github.com/elastic/elasticsearch/issues/37286#issuecomment-453128767","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37286","id":453128767,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzEyODc2Nw==","user":{"login":"andrershov","id":600624,"node_id":"MDQ6VXNlcjYwMDYyNA==","avatar_url":"https://avatars1.githubusercontent.com/u/600624?v=4","gravatar_id":"","url":"https://api.github.com/users/andrershov","html_url":"https://github.com/andrershov","followers_url":"https://api.github.com/users/andrershov/followers","following_url":"https://api.github.com/users/andrershov/following{/other_user}","gists_url":"https://api.github.com/users/andrershov/gists{/gist_id}","starred_url":"https://api.github.com/users/andrershov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrershov/subscriptions","organizations_url":"https://api.github.com/users/andrershov/orgs","repos_url":"https://api.github.com/users/andrershov/repos","events_url":"https://api.github.com/users/andrershov/events{/privacy}","received_events_url":"https://api.github.com/users/andrershov/received_events","type":"User","site_admin":false},"created_at":"2019-01-10T15:10:11Z","updated_at":"2019-01-10T15:10:11Z","author_association":"CONTRIBUTOR","body":"@kkewwei On node startup, Elasticsearch node reads metadata from the disk. If the metadata file is corrupted, node startup will fail. In this case, it seems that `/data1/es_data/lc_gh_3/nodes/0/indices/rDD73n7GR7uw_vE0Fk1FrA/_state/state-0.st` is corrupted, which is the metadata file of the index with uuid `rDD73n7GR7uw_vE0Fk1FrA`. File corruption can easily be caused by hardware mulfunction that you mention in you comment.\r\nIf you were running with number of replicas > 0 (meaning index data was residing on other nodes as well), you can safely remove data folder from this node and let it join the cluster as a fresh node. Elasticsearch will re-distribute shards ownership across the nodes automatically.\r\nIf it was the single node holding the index, there is not much you can do. We don't have a tool to perform metadata recovery.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/453339510","html_url":"https://github.com/elastic/elasticsearch/issues/37286#issuecomment-453339510","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37286","id":453339510,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzMzOTUxMA==","user":{"login":"kkewwei","id":16730433,"node_id":"MDQ6VXNlcjE2NzMwNDMz","avatar_url":"https://avatars1.githubusercontent.com/u/16730433?v=4","gravatar_id":"","url":"https://api.github.com/users/kkewwei","html_url":"https://github.com/kkewwei","followers_url":"https://api.github.com/users/kkewwei/followers","following_url":"https://api.github.com/users/kkewwei/following{/other_user}","gists_url":"https://api.github.com/users/kkewwei/gists{/gist_id}","starred_url":"https://api.github.com/users/kkewwei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kkewwei/subscriptions","organizations_url":"https://api.github.com/users/kkewwei/orgs","repos_url":"https://api.github.com/users/kkewwei/repos","events_url":"https://api.github.com/users/kkewwei/events{/privacy}","received_events_url":"https://api.github.com/users/kkewwei/received_events","type":"User","site_admin":false},"created_at":"2019-01-11T01:49:24Z","updated_at":"2019-01-11T01:49:24Z","author_association":"CONTRIBUTOR","body":"it does not appear with ES2 in no circumstances. and it indeed arises  with number of replicas = 0. a little files are corrupted and most files is good,maybe formatting data is not a good  idea because of the importance of data. As a treatment, I delete the corruped file and it works well. Can we improve the process by skipping the corruped files on node startup? if this is the case, we can recovery most of data.\r\n\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/471561759","html_url":"https://github.com/elastic/elasticsearch/issues/37286#issuecomment-471561759","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37286","id":471561759,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTU2MTc1OQ==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2019-03-11T14:29:51Z","updated_at":"2019-03-11T14:29:51Z","author_association":"CONTRIBUTOR","body":"@andrershov as part of #32006, do you think it would be useful to have a command-line tool that would allow a node to recover all index metadata except corrupted ones? In particular, rewrite the cluster state manifest file to remove a \"corrupted\" index?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/471583026","html_url":"https://github.com/elastic/elasticsearch/issues/37286#issuecomment-471583026","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37286","id":471583026,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTU4MzAyNg==","user":{"login":"andrershov","id":600624,"node_id":"MDQ6VXNlcjYwMDYyNA==","avatar_url":"https://avatars1.githubusercontent.com/u/600624?v=4","gravatar_id":"","url":"https://api.github.com/users/andrershov","html_url":"https://github.com/andrershov","followers_url":"https://api.github.com/users/andrershov/followers","following_url":"https://api.github.com/users/andrershov/following{/other_user}","gists_url":"https://api.github.com/users/andrershov/gists{/gist_id}","starred_url":"https://api.github.com/users/andrershov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrershov/subscriptions","organizations_url":"https://api.github.com/users/andrershov/orgs","repos_url":"https://api.github.com/users/andrershov/repos","events_url":"https://api.github.com/users/andrershov/events{/privacy}","received_events_url":"https://api.github.com/users/andrershov/received_events","type":"User","site_admin":false},"created_at":"2019-03-11T15:18:34Z","updated_at":"2019-03-11T15:18:34Z","author_association":"CONTRIBUTOR","body":"@ywelsch I think it's a bigger discussion: not only index metadata, but global metadata and manifest itself could be affected. Do we want to recover from this kind of situations?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/472328019","html_url":"https://github.com/elastic/elasticsearch/issues/37286#issuecomment-472328019","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37286","id":472328019,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MjMyODAxOQ==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2019-03-13T08:36:07Z","updated_at":"2019-03-13T08:36:07Z","author_association":"CONTRIBUTOR","body":"I think we can treat this in a similar way as shard corruptions, for which we currently have a command-line tool. We could do a best-effort recovery of the metadata, with plenty of warnings. I don't think we should do this automatically at startup, however, but require an explicit administrative step. I also think that there are two levels of severeness here: master-eligible or non-master-eligible node. When it comes to a non-master-eligible nodes, temporarily removing the metadata might be relatively harmless, as when joining the cluster, this metadata will be recreated on the node. For master-eligible nodes, it is trickier as the revised metadata might now be published to other nodes, overriding the intact metadata that they might have.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/662868717","html_url":"https://github.com/elastic/elasticsearch/issues/37286#issuecomment-662868717","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37286","id":662868717,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Mjg2ODcxNw==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2020-07-23T07:53:18Z","updated_at":"2020-07-23T07:53:18Z","author_association":"CONTRIBUTOR","body":"The storage format for metadata has changed in recent ES version (7.6+), and is now Lucene-based. Given how few cases we have seen of metadata corruption (due to faulty hardware), I don't see the need to build automated tooling to support this (instead it should be treated as a full node failure).","performed_via_github_app":null}]