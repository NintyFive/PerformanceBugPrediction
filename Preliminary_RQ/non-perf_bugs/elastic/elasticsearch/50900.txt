{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/50900","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50900/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50900/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/50900/events","html_url":"https://github.com/elastic/elasticsearch/issues/50900","id":548820903,"node_id":"MDU6SXNzdWU1NDg4MjA5MDM=","number":50900,"title":"Too verbose logging creating significant garbage on master ","user":{"login":"Bukhtawar","id":12809319,"node_id":"MDQ6VXNlcjEyODA5MzE5","avatar_url":"https://avatars0.githubusercontent.com/u/12809319?v=4","gravatar_id":"","url":"https://api.github.com/users/Bukhtawar","html_url":"https://github.com/Bukhtawar","followers_url":"https://api.github.com/users/Bukhtawar/followers","following_url":"https://api.github.com/users/Bukhtawar/following{/other_user}","gists_url":"https://api.github.com/users/Bukhtawar/gists{/gist_id}","starred_url":"https://api.github.com/users/Bukhtawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bukhtawar/subscriptions","organizations_url":"https://api.github.com/users/Bukhtawar/orgs","repos_url":"https://api.github.com/users/Bukhtawar/repos","events_url":"https://api.github.com/users/Bukhtawar/events{/privacy}","received_events_url":"https://api.github.com/users/Bukhtawar/received_events","type":"User","site_admin":false},"labels":[{"id":837246479,"node_id":"MDU6TGFiZWw4MzcyNDY0Nzk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Allocation","name":":Distributed/Allocation","color":"0e8a16","default":false,"description":"All issues relating to the decision making around placing a shard (both master logic & on the nodes)"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2020-01-13T10:00:52Z","updated_at":"2020-06-08T11:17:50Z","closed_at":"2020-01-13T11:28:13Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"## Problem\r\nWhen a node goes bad due to hardware failure(checksum errors) or network disconnections, the async shard fetch does too verbose logging at a per shard listing basis generating too much garbage as seen below from one of the traces. This occurred on a ES 6.8 cluster, but my assumption is it would happen on later versions too. Please correct me if my understanding is wrong.\r\n\r\n**Stack trace from JVM allocation profiler** \r\n\r\n`\r\n[ 0] char[]\r\n  [ 1] java.util.Arrays.copyOf\r\n  [ 2] java.lang.AbstractStringBuilder.ensureCapacityInternal\r\n  [ 3] java.lang.AbstractStringBuilder.append\r\n  [ 4] java.lang.StringBuilder.append\r\n  [ 2] java.lang.AbstractStringBuilder.ensureCapacityInternal\r\n  [ 3] java.lang.AbstractStringBuilder.append\r\n  [ 4] java.lang.StringBuilder.append\r\n  [ 4] java.lang.StringBuilder.append\r\n  [ 5] org.apache.logging.log4j.core.pattern.PlainTextRenderer.render\r\n  [ 6] org.apache.logging.log4j.core.impl.ExtendedStackTraceElement.render\r\n  [ 7] org.apache.logging.log4j.core.impl.ExtendedStackTraceElement.renderOn\r\n  [ 8] org.apache.logging.log4j.core.impl.ThrowableProxy.formatEntry\r\n  [ 9] org.apache.logging.log4j.core.impl.ThrowableProxy.formatElements\r\n  [10] org.apache.logging.log4j.core.impl.ThrowableProxy.getExtendedStackTraceAsString\r\n  [11] org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format\r\n  [12] org.apache.logging.log4j.core.pattern.PatternFormatter.format\r\n  [13] org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable\r\n  [14] org.apache.logging.log4j.core.layout.PatternLayout.toText\r\n  [15] org.apache.logging.log4j.core.layout.PatternLayout.encode\r\n  [16] org.apache.logging.log4j.core.layout.PatternLayout.encode\r\n  [17] org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent\r\n  [18] org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend\r\n  [19] org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append\r\n  [20] org.apache.logging.log4j.core.appender.RollingFileAppender.append\r\n  [21] org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender\r\n  [22] org.apache.logging.log4j.core.config.AppenderControl.callAppender0\r\n  [23] org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion\r\n  [24] org.apache.logging.log4j.core.config.AppenderControl.callAppender\r\n  [25] org.apache.logging.log4j.core.config.LoggerConfig.callAppenders\r\n  [26] org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent\r\n  [27] org.apache.logging.log4j.core.config.LoggerConfig.log\r\n  [28] org.apache.logging.log4j.core.config.LoggerConfig.log\r\n  [29] org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log\r\n  [30] org.apache.logging.log4j.core.Logger.logMessage\r\n  [31] org.apache.logging.log4j.spi.AbstractLogger.tryLogMessage\r\n  [32] org.apache.logging.log4j.spi.AbstractLogger.logMessageTrackRecursion\r\n  [33] org.apache.logging.log4j.spi.AbstractLogger.logMessageSafely\r\n  [34] org.apache.logging.log4j.spi.AbstractLogger.logMessage\r\n  [35] org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled\r\n  [36] org.apache.logging.log4j.spi.AbstractLogger.warn\r\n  [37] org.elasticsearch.gateway.AsyncShardFetch.processAsyncFetch\r\n  [38] org.elasticsearch.gateway.AsyncShardFetch$1.onResponse\r\n  [39] org.elasticsearch.gateway.AsyncShardFetch$1.onResponse\r\n  [40] org.elasticsearch.action.support.TransportAction$1.onResponse\r\n  [41] org.elasticsearch.action.support.TransportAction$1.onResponse\r\n  [42] org.elasticsearch.action.support.nodes.TransportNodesAction$AsyncAction.finishHim\r\n  [43] org.elasticsearch.action.support.nodes.TransportNodesAction$AsyncAction.onFailure\r\n  [44] org.elasticsearch.action.support.nodes.TransportNodesAction$AsyncAction.access$200\r\n  [45] org.elasticsearch.action.support.nodes.TransportNodesAction$AsyncAction$1.handleException\r\n  [46] org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleException\r\n  [47] org.elasticsearch.transport.TcpTransport.lambda$handleException$24\r\n  [48] org.elasticsearch.transport.TcpTransport$$Lambda$2567.728518351.run\r\n  [49] org.elasticsearch.common.util.concurrent.EsExecutors$DirectExecutorService.execute\r\n  [50] org.elasticsearch.transport.TcpTransport.handleException\r\n  [51] org.elasticsearch.transport.TcpTransport.handlerResponseError\r\n  [52] org.elasticsearch.transport.TcpTransport.messageReceived\r\n  [53] org.elasticsearch.transport.TcpTransport.inboundMessage\r\n  [25] org.apache.logging.log4j.core.config.LoggerConfig.callAppenders\r\n  [26] org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent\r\n  [27] org.apache.logging.log4j.core.config.LoggerConfig.log\r\n  [28] org.apache.logging.log4j.core.config.LoggerConfig.log\r\n  [29] org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log\r\n  [30] org.apache.logging.log4j.core.Logger.logMessage\r\n  [31] org.apache.logging.log4j.spi.AbstractLogger.tryLogMessage\r\n  [32] org.apache.logging.log4j.spi.AbstractLogger.logMessageTrackRecursion\r\n  [33] org.apache.logging.log4j.spi.AbstractLogger.logMessageSafely\r\n  [34] org.apache.logging.log4j.spi.AbstractLogger.logMessage\r\n  [35] org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled\r\n  [36] org.apache.logging.log4j.spi.AbstractLogger.warn\r\n  [37] org.elasticsearch.gateway.AsyncShardFetch.processAsyncFetch\r\n  [38] org.elasticsearch.gateway.AsyncShardFetch$1.onResponse\r\n  [39] org.elasticsearch.gateway.AsyncShardFetch$1.onResponse\r\n  [40] org.elasticsearch.action.support.TransportAction$1.onResponse\r\n  [41] org.elasticsearch.action.support.TransportAction$1.onResponse\r\n  [42] org.elasticsearch.action.support.nodes.TransportNodesAction$AsyncAction.finishHim\r\n  [43] org.elasticsearch.action.support.nodes.TransportNodesAction$AsyncAction.onFailure\r\n`\r\n\r\n\r\n**Below is a sample exception on a hardware failure** \r\n\r\n`\r\nCaused by: org.elasticsearch.transport.RemoteTransportException: [xxxxxx][10.xxx.xxx.xx:9300][internal:cluster/nodes/indices/shard/store[n]]\r\nCaused by: org.elasticsearch.ElasticsearchException: Failed to list store metadata for shard [[test-2019.12.27-000225][109]]\r\n\tat org.elasticsearch.indices.store.TransportNodesListShardStoreMetaData.nodeOperation(TransportNodesListShardStoreMetaData.java:115) ~[elasticsearch-6.8.0.jar:6.8.0]\r\n\tat org.elasticsearch.indices.store.TransportNodesListShardStoreMetaData.nodeOperation(TransportNodesListShardStoreMetaData.java:61) ~[elasticsearch-6.8.0.jar:6.8.0]\r\n\tat org.elasticsearch.action.support.nodes.TransportNodesAction.nodeOperation(TransportNodesAction.java:138) ~[elasticsearch-6.8.0.jar:6.8.0]\r\n\tat org.elasticsearch.action.support.nodes.TransportNodesAction$NodeTransportHandler.messageReceived(TransportNodesAction.java:259) ~[elasticsearch-6.8.0.jar:6.8.0]\r\n...\r\nCaused by: org.apache.lucene.index.CorruptIndexException: failed engine (reason: [recovery]) (resource=preexisting_corruption)\r\n\tat org.elasticsearch.index.store.Store.failIfCorrupted(Store.java:599) ~[elasticsearch-6.8.0.jar:6.8.0]\r\n\tat org.elasticsearch.index.store.Store.readMetadataSnapshot(Store.java:442) ~[elasticsearch-6.8.0.jar:6.8.0]\r\n\tat org.elasticsearch.indices.store.TransportNodesListShardStoreMetaData.listStoreMetaData(TransportNodesListShardStoreMetaData.java:155) ~[elasticsearch-6.8.0.jar:6.8.0]\r\n\tat org.elasticsearch.indices.store.TransportNodesListShardStoreMetaData.nodeOperation(TransportNodesListShardStoreMetaData.java:113) ~[elasticsearch-6.8.0.jar:6.8.0]\r\n\tat org.elasticsearch.indices.store.TransportNodesListShardStoreMetaData.nodeOperation(TransportNodesListShardStoreMetaData.java:61) ~[elasticsearch-6.8.0.jar:6.8.0]\r\n\tat org.elasticsearch.action.support.nodes.TransportNodesAction.nodeOperation(TransportNodesAction.java:138) ~[elasticsearch-6.8.0.jar:6.8.0]\r\n\tat org.elasticsearch.action.support.nodes.TransportNodesAction$NodeTransportHandler.messageReceived(TransportNodesAction.java:259) ~[elasticsearch-6.8.0.jar:6.8.0]\r\n\tat org.elasticsearch.action.support.nodes.TransportNodesAction$NodeTransportHandler.messageReceived(TransportNodesAction.java:255) ~[elasticsearch-6.8.0.jar:6.8.0]\r\n`","closed_by":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"performed_via_github_app":null}