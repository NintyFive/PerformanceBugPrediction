{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/21495","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21495/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21495/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21495/events","html_url":"https://github.com/elastic/elasticsearch/issues/21495","id":188758050,"node_id":"MDU6SXNzdWUxODg3NTgwNTA=","number":21495,"title":"FS-based repository does not honour readonly setting when restoring from a broken snapshot ","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"labels":[{"id":143077482,"node_id":"MDU6TGFiZWwxNDMwNzc0ODI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Snapshot/Restore","name":":Distributed/Snapshot/Restore","color":"0e8a16","default":false,"description":"Anything directly related to the `_snapshot/*` APIs"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-11-11T13:16:20Z","updated_at":"2017-11-03T12:10:51Z","closed_at":"2017-11-03T12:10:51Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The FS-based repository does not honour the `readonly` setting when restoring from a broken snapshot (in fact, restoring a snapshot should not require any writes at all).\r\n\r\nA write can currently happen, however, if the repository has missing index folders.\r\n\r\nReproduction scenario:\r\n\r\n1) Create snapshot of an index\r\n2) Remove the folder in the repository under `indices`\r\n3) Try to restore the snapshot. This will try to recreate said folder.\r\n\r\nStack trace when using a read-only filesystem:\r\n\r\n```\r\n[2016-11-11T20:32:22,830][WARN ][o.e.s.RestoreService     ] [node_sm0] [test-repo:test-snap] failed to restore snapshot\r\norg.elasticsearch.ElasticsearchException: failed to create blob container\r\n\tat org.elasticsearch.common.blobstore.fs.FsBlobStore.blobContainer(FsBlobStore.java:67) ~[main/:?]\r\n\tat org.elasticsearch.repositories.blobstore.BlobStoreRepository.readSnapshotMetaData(BlobStoreRepository.java:599) ~[main/:?]\r\n\tat org.elasticsearch.repositories.blobstore.BlobStoreRepository.getSnapshotMetaData(BlobStoreRepository.java:554) ~[main/:?]\r\n\tat org.elasticsearch.snapshots.RestoreService.restoreSnapshot(RestoreService.java:187) ~[main/:?]\r\n\tat org.elasticsearch.action.admin.cluster.snapshots.restore.TransportRestoreSnapshotAction.masterOperation(TransportRestoreSnapshotAction.java:89) ~[main/:?]\r\n\tat org.elasticsearch.action.admin.cluster.snapshots.restore.TransportRestoreSnapshotAction.masterOperation(TransportRestoreSnapshotAction.java:49) ~[main/:?]\r\n\tat org.elasticsearch.action.support.master.TransportMasterNodeAction.masterOperation(TransportMasterNodeAction.java:87) ~[main/:?]\r\n\tat org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction$3.doRun(TransportMasterNodeAction.java:171) ~[main/:?]\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:520) ~[main/:?]\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) ~[main/:?]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[?:1.8.0_60]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[?:1.8.0_60]\r\n\tat java.lang.Thread.run(Thread.java:745) ~[?:1.8.0_60]\r\nCaused by: java.nio.file.AccessDeniedException: /private/var/folders/68/3gzf12zs4qb0q_gfjw5lx1fm0000gn/T/org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT_73B55FFF46128756-001/tempDir-002/repos/prkihNFaMA/indices/Odv1GtZFSlaFEOwTZWQcdQ\r\n\tat sun.nio.fs.UnixException.translateToIOException(UnixException.java:84) ~[?:?]\r\n\tat sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102) ~[?:?]\r\n\tat sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107) ~[?:?]\r\n\tat sun.nio.fs.UnixFileSystemProvider.createDirectory(UnixFileSystemProvider.java:384) ~[?:?]\r\n\tat org.apache.lucene.mockfile.FilterFileSystemProvider.createDirectory(FilterFileSystemProvider.java:132) ~[lucene-test-framework-6.3.0-snapshot-a66a445.jar:6.3.0-snapshot-a66a445 a66a44513ee8191e25b477372094bfa846450316 - jpountz - 2016-11-03 16:32:47]\r\n\tat org.apache.lucene.mockfile.FilterFileSystemProvider.createDirectory(FilterFileSystemProvider.java:132) ~[lucene-test-framework-6.3.0-snapshot-a66a445.jar:6.3.0-snapshot-a66a445 a66a44513ee8191e25b477372094bfa846450316 - jpountz - 2016-11-03 16:32:47]\r\n\tat org.apache.lucene.mockfile.FilterFileSystemProvider.createDirectory(FilterFileSystemProvider.java:132) ~[lucene-test-framework-6.3.0-snapshot-a66a445.jar:6.3.0-snapshot-a66a445 a66a44513ee8191e25b477372094bfa846450316 - jpountz - 2016-11-03 16:32:47]\r\n\tat org.apache.lucene.mockfile.FilterFileSystemProvider.createDirectory(FilterFileSystemProvider.java:132) ~[lucene-test-framework-6.3.0-snapshot-a66a445.jar:6.3.0-snapshot-a66a445 a66a44513ee8191e25b477372094bfa846450316 - jpountz - 2016-11-03 16:32:47]\r\n\tat java.nio.file.Files.createDirectory(Files.java:674) ~[?:1.8.0_60]\r\n\tat java.nio.file.Files.createAndCheckIsDirectory(Files.java:781) ~[?:1.8.0_60]\r\n\tat java.nio.file.Files.createDirectories(Files.java:767) ~[?:1.8.0_60]\r\n\tat org.elasticsearch.common.blobstore.fs.FsBlobStore.buildAndCreate(FsBlobStore.java:83) ~[main/:?]\r\n\tat org.elasticsearch.common.blobstore.fs.FsBlobStore.blobContainer(FsBlobStore.java:65) ~[main/:?]\r\n\t... 12 more\r\n```\r\n\r\nLine at fault:\r\n\r\nhttps://github.com/elastic/elasticsearch/blob/44ac5d057a8ceb6940c26275d9963bccb9f5065a/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobStore.java#L65\r\n\r\nJust getting a BlobContainer for reading does an `mkdirs` on the root directory for that container.\r\n","closed_by":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"performed_via_github_app":null}