{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/14955","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14955/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14955/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14955/events","html_url":"https://github.com/elastic/elasticsearch/issues/14955","id":118509376,"node_id":"MDU6SXNzdWUxMTg1MDkzNzY=","number":14955,"title":"Terms aggregation by `_parent` with multi-level parent mapping returns bad buckets. ","user":{"login":"jemc","id":4623870,"node_id":"MDQ6VXNlcjQ2MjM4NzA=","avatar_url":"https://avatars0.githubusercontent.com/u/4623870?v=4","gravatar_id":"","url":"https://api.github.com/users/jemc","html_url":"https://github.com/jemc","followers_url":"https://api.github.com/users/jemc/followers","following_url":"https://api.github.com/users/jemc/following{/other_user}","gists_url":"https://api.github.com/users/jemc/gists{/gist_id}","starred_url":"https://api.github.com/users/jemc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jemc/subscriptions","organizations_url":"https://api.github.com/users/jemc/orgs","repos_url":"https://api.github.com/users/jemc/repos","events_url":"https://api.github.com/users/jemc/events{/privacy}","received_events_url":"https://api.github.com/users/jemc/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-11-24T01:04:26Z","updated_at":"2015-11-28T16:31:26Z","closed_at":"2015-11-28T16:31:26Z","author_association":"NONE","active_lock_reason":null,"body":"With a multi-level mapping of parent/child relationships on an index, searching with a `terms` aggregation by `_parent` on the \"middle\" child document type (mapped as a child of one type and a parent of another) yields \"duplicate\" buckets with bogus values for the `_parent` keys.\n\nHere is an example, with document types `my_parent`, `my_child`, and `my_grandchild`.  The query attempts to find, for a given list of parent IDs, the counts of children of those parents, aggregated by `color`.  When `my_grandchild` is not part of the mapping, the correct expected result buckets are returned.  When `my_grandchild` _is_ included in the mapping, the \"duplicate\" buckets with bogus `_parent` keys are also included.  The bogus bucket `_parent` keys are the `id`s of the `my_child` documents, though there are no `my_grandchild` documents, and the `my_grandchild` document type was not targetted by the query, and would not have matched the `_parent` values given in the query.\n\nTo reproduce, run the following script using the `WITH_GRANDCHILD` environment variable to dictate whether the `my_grandchild` mapping should be included or not.  For example, run `env WITH_GRANDCHILD=true bash script.sh` to include the `my_grandchild` mapping:\n\n``` bash\n#!/usr/bin/env bash\n\nES_HOST=\"${ES_HOST:-http://localhost:9200}\"\nWITH_GRANDCHILD=\"${WITH_GRANDCHILD:-false}\"\n\necho \"env: ES_HOST=${ES_HOST}\"\necho \"     WITH_GRANDCHILD=${WITH_GRANDCHILD}\"\n\nfunction es() {\n  echo\n  echo \"es ${1} ${2} ${3}\"\n  curl -X\"${1}\" \"${ES_HOST}/${2}\" -d \"${3}\"\n  echo\n}\n\nes DELETE my_index\n\nif [[ X\"${WITH_GRANDCHILD}\" == X\"false\" ]]; then\n  es PUT my_index '{\n    \"mappings\": {\n      \"my_parent\":     {},\n      \"my_child\":      { \"_parent\": { \"type\": \"my_parent\" } }\n    }\n  }'\nelse\n  es PUT my_index '{\n    \"mappings\": {\n      \"my_parent\":     {},\n      \"my_child\":      { \"_parent\": { \"type\": \"my_parent\" } },\n      \"my_grandchild\": { \"_parent\": { \"type\": \"my_child\"  } }\n    }\n  }'\nfi\n\necho\necho \"---\"\n\nes PUT 'my_index/my_parent/P1' '{ \"text\": \"first parent\" }'\nes PUT 'my_index/my_parent/P2' '{ \"text\": \"second parent\" }'\n\nes PUT 'my_index/my_child/P1_C1?parent=P1' '{ \"color\": \"red\" }'\nes PUT 'my_index/my_child/P1_C2?parent=P1' '{ \"color\": \"yellow\" }'\nes PUT 'my_index/my_child/P1_C3?parent=P1' '{ \"color\": \"yellow\" }'\nes PUT 'my_index/my_child/P2_C1?parent=P2' '{ \"color\": \"green\" }'\nes PUT 'my_index/my_child/P2_C2?parent=P2' '{ \"color\": \"green\" }'\nes PUT 'my_index/my_child/P3_C1?parent=P3' '{ \"color\": \"blue\" }'\n\nes POST 'my_index/_refresh'\n\necho\necho \"---\"\n\nes GET 'my_index/my_child/_search?search_type=count&format=yaml' '{\n  \"query\": {\n    \"terms\": {\n      \"_parent\": [ \"P1\", \"P2\" ]\n    }\n  },\n  \"aggs\": {\n    \"parents\": {\n      \"terms\": { \"field\": \"_parent\" },\n      \"aggs\": {\n        \"colors\": {\n          \"terms\": { \"field\": \"color\" }\n        }\n      }\n    }\n  }\n}'\n```\n\n---\n\nFor completeness, here is the expected output of the final query (in YAML format):\n\n``` yaml\n\n---\ntook: 2\ntimed_out: false\n_shards:\n  total: 5\n  successful: 5\n  failed: 0\nhits:\n  total: 5\n  max_score: 0.0\n  hits: []\naggregations:\n  parents:\n    doc_count_error_upper_bound: 0\n    sum_other_doc_count: 0\n    buckets:\n    - key: \"P1\"\n      doc_count: 3\n      colors:\n        doc_count_error_upper_bound: 0\n        sum_other_doc_count: 0\n        buckets:\n        - key: \"yellow\"\n          doc_count: 2\n        - key: \"red\"\n          doc_count: 1\n    - key: \"P2\"\n      doc_count: 2\n      colors:\n        doc_count_error_upper_bound: 0\n        sum_other_doc_count: 0\n        buckets:\n        - key: \"green\"\n          doc_count: 2\n```\n\n---\n\nAnd here is the bogus output of the final query (with `WITH_GRANDCHILD=true` set):\n\n``` yaml\n\n---\ntook: 2\ntimed_out: false\n_shards:\n  total: 5\n  successful: 5\n  failed: 0\nhits:\n  total: 5\n  max_score: 0.0\n  hits: []\naggregations:\n  parents:\n    doc_count_error_upper_bound: 0\n    sum_other_doc_count: 0\n    buckets:\n    - key: \"P1\"\n      doc_count: 3\n      colors:\n        doc_count_error_upper_bound: 0\n        sum_other_doc_count: 0\n        buckets:\n        - key: \"yellow\"\n          doc_count: 2\n        - key: \"red\"\n          doc_count: 1\n    - key: \"P2\"\n      doc_count: 2\n      colors:\n        doc_count_error_upper_bound: 0\n        sum_other_doc_count: 0\n        buckets:\n        - key: \"green\"\n          doc_count: 2\n    - key: \"P1_C1\"\n      doc_count: 1\n      colors:\n        doc_count_error_upper_bound: 0\n        sum_other_doc_count: 0\n        buckets:\n        - key: \"red\"\n          doc_count: 1\n    - key: \"P1_C2\"\n      doc_count: 1\n      colors:\n        doc_count_error_upper_bound: 0\n        sum_other_doc_count: 0\n        buckets:\n        - key: \"yellow\"\n          doc_count: 1\n    - key: \"P1_C3\"\n      doc_count: 1\n      colors:\n        doc_count_error_upper_bound: 0\n        sum_other_doc_count: 0\n        buckets:\n        - key: \"yellow\"\n          doc_count: 1\n    - key: \"P2_C1\"\n      doc_count: 1\n      colors:\n        doc_count_error_upper_bound: 0\n        sum_other_doc_count: 0\n        buckets:\n        - key: \"green\"\n          doc_count: 1\n    - key: \"P2_C2\"\n      doc_count: 1\n      colors:\n        doc_count_error_upper_bound: 0\n        sum_other_doc_count: 0\n        buckets:\n        - key: \"green\"\n          doc_count: 1\n```\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}