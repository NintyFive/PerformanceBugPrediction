[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31534457","html_url":"https://github.com/elastic/elasticsearch/issues/4071#issuecomment-31534457","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4071","id":31534457,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNTM0NDU3","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2014-01-03T16:39:18Z","updated_at":"2014-01-03T16:39:18Z","author_association":"CONTRIBUTOR","body":"[...]\n\n_I think _all should be an acceptable alias for \\* for all of them_\n\nI agree.\n\nJust for completeness: we also currently have the `DELETE` for alias\n\n```\n  DELETE /{index}/_alias/name\n```\n\nand also for warmers:\n\n```\n DELETE index/_warmer/name\n\n DELETE index/_warmer/prefix*\n\n DELETE index/_warmer/\n```\n\nFor mappings, delete is:\n\n```\nDELETE index/type\n```\n\nFor settings there is none and would probably not make sense to have that.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31534483","html_url":"https://github.com/elastic/elasticsearch/issues/4071#issuecomment-31534483","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4071","id":31534483,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNTM0NDgz","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2014-01-03T16:39:31Z","updated_at":"2014-01-03T16:39:31Z","author_association":"CONTRIBUTOR","body":"So we have `PUT/POST`, `GET` and `DELETE` for all three we have several options. I list some here again. Please feel free to add your own option and vote.\n\nI vote for \n\n`PUT/POST`: Option 1\n\n`GET`: Option 2\n\n`DELETE`: Option 1\n\n## `PUT/POST`:\n\n### Option 1:\n\nRemove all singular `PUT`s, do not distinguish between `PUT` and `POST` and only allow putting multiple items for all 4 APIs like this:\n\n```\n   POST (or PUT) /index/_mappings|_settings|_warmers|_aliases\n   { name: {....}, name2: {....} ... }\n```\n\nThe `PUT` like\n\n```\n PUT /index/_alias|_warmer/{name}\n```\n\nwould be removed completely. This might cause some overhead when typing requests but at least you can remember the syntax even when you are braindead.\n\n### Option 2:\n\nMake the distinction singular/plural (`PUT/POST`) like @clintongormley wrote:\n\n```\n PUT /index/_mapping|_alias|_warmer/{name}\n { ... }\n\n POST /index/_mappings|_settings|_warmers|_aliases\n { name: {....}, name2: {....} ... }\n```\n\nThis would cause the syntax to be slightly more complex but is still sort of intuitive.\n\n### Option 3:\n\nLike option 2 but allow singlar and plural for `PUT` and `POST`. Would not break bwc.\n\n## `GET`\n\n### Option 1\n\nallow plural and singular but only `GET /index/_api/{name|*|_all|blank}`\n\n```\n GET /index/_mapping|_alias|_warmer|_setting/{name|*|_all|blank}\n GET /index/_mappings|_aliases|_warmers|_settings/{name|*|_all|blank}\n```\n\n### Option 2\n\nallow only plural\n\n```\nGET /index/_mappings|_aliases|_warmers|_settings/{name|*|_all|blank}\n```\n\n### Option 3\n\nallow plural and singular with `GET /index/_api/{name|*|_all|blank}` and `GET /index/{name|*|_all|blank}/_api`\n\n```\n GET /index/_mapping|_alias|_warmer|_setting/{name|*|_all|blank}\n GET /index/_mappings|_aliases|_warmers|_settings/{name|*|_all|blank}\n\n GET /index/{name|*|_all|blank}/_mapping|_alias|_warmer|_setting\n GET /index/{name|*|_all|blank}/_mappings|_aliases|_warmers|_settings\n```\n\nWould not break bwc.\n\n### Option 4\n\nallow only plural\n\n```\nGET /index/_mappings|_aliases|_warmers|_settings/{name|*|_all|blank}\nGET /index/{name|*|_all|blank}/_mappings|_aliases|_warmers|_settings\n```\n\n## `DELETE`\n\n### Option 1\n\nMake the `DELETE` available for 3 APIs like in `_warmer`:\n\n```\n DELETE index/_mapping|_alias|_warmer/name\n\n DELETE index/_mapping|_alias|_warmer/prefix*\n\n DELETE index/_mapping|_alias|_warmer/\n```\n\n### Option 2:\n\nLeave everything as is.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31730378","html_url":"https://github.com/elastic/elasticsearch/issues/4071#issuecomment-31730378","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4071","id":31730378,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzMwMzc4","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2014-01-07T11:29:35Z","updated_at":"2014-01-07T11:29:35Z","author_association":"CONTRIBUTOR","body":"After discussion here is what I will implement:\n\n`PUT/POST`: Option 2. both plural and singular version should be supported for PUT and POST but only singular for `PUT` and plural for `POST` documented.\n\nFor `PUT` `_mapping` remove \"type\" from body, because it has to be defined in url anyway and is therefore redundant.\n\n`GET`: Option 1 but also support two different orderings for `_mapping` in order to not break bwc. Do not document this. Make sure that for index `*` and `_all` is supported. Make sure that for type `*`, `_all` and blank is supported.\nReturn data structure should be the same for getting a single item or multiple ones. For example `_mapping`: Getting a single type and multiple types should be \n\n```\n{\n     \"index\": {\n         \"type\" : {\n                 .....\n        }\n    }\n}\n```\n\n`DELETE`: Should be like `GET` but do not support blank as item name in order to remove all, only `_all` or `*` allowed.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31734830","html_url":"https://github.com/elastic/elasticsearch/issues/4071#issuecomment-31734830","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4071","id":31734830,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzM0ODMw","user":{"login":"electrical","id":271677,"node_id":"MDQ6VXNlcjI3MTY3Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/271677?v=4","gravatar_id":"","url":"https://api.github.com/users/electrical","html_url":"https://github.com/electrical","followers_url":"https://api.github.com/users/electrical/followers","following_url":"https://api.github.com/users/electrical/following{/other_user}","gists_url":"https://api.github.com/users/electrical/gists{/gist_id}","starred_url":"https://api.github.com/users/electrical/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/electrical/subscriptions","organizations_url":"https://api.github.com/users/electrical/orgs","repos_url":"https://api.github.com/users/electrical/repos","events_url":"https://api.github.com/users/electrical/events{/privacy}","received_events_url":"https://api.github.com/users/electrical/received_events","type":"User","site_admin":false},"created_at":"2014-01-07T12:54:05Z","updated_at":"2014-01-07T12:54:05Z","author_association":"CONTRIBUTOR","body":"Just like to give my Â£0.02\n\nfew years ago i was designing REST API's and was following some webinars by a company who design api's ( http://www.youtube.com/apigee ) and following in a few nice discussions on the google groups ( https://groups.google.com/forum/#!forum/api-craft )\n\nOne of those items was the singular/plural discussion and at the end of it the 'pragmatic' approach would be to use only plural names.\nHaving singular and plural endpoints can become very confusing especially if its for same sort of endpoint ( GET /index/_mapping & POST /index/_mappings for example )\n\nAn other thing is the ordering, by allowing different methods it can become confusing again.\nPersonally i like the GET /index/_mappings/name  because it makes it very clear what you expect.. ( GET me mapping 'name' from 'index' )\n\nCheers.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31735240","html_url":"https://github.com/elastic/elasticsearch/issues/4071#issuecomment-31735240","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4071","id":31735240,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzM1MjQw","user":{"login":"electrical","id":271677,"node_id":"MDQ6VXNlcjI3MTY3Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/271677?v=4","gravatar_id":"","url":"https://api.github.com/users/electrical","html_url":"https://github.com/electrical","followers_url":"https://api.github.com/users/electrical/followers","following_url":"https://api.github.com/users/electrical/following{/other_user}","gists_url":"https://api.github.com/users/electrical/gists{/gist_id}","starred_url":"https://api.github.com/users/electrical/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/electrical/subscriptions","organizations_url":"https://api.github.com/users/electrical/orgs","repos_url":"https://api.github.com/users/electrical/repos","events_url":"https://api.github.com/users/electrical/events{/privacy}","received_events_url":"https://api.github.com/users/electrical/received_events","type":"User","site_admin":false},"created_at":"2014-01-07T13:02:10Z","updated_at":"2014-01-07T13:02:10Z","author_association":"CONTRIBUTOR","body":"Forgot to address the single or multiple items in an endpoint call.\nPersonally i wouldn't differentiate between a single or multiple items in a call but always name them like its done with multiple items right now.\n\n```\nPOST /index/_mappings|_settings|_warmers|_aliases\n{ name: {....}, name2: {....} ... }\n```\n\nthis makes things consistent across the board and avoid having different endpoints for pretty much the same thing.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31750150","html_url":"https://github.com/elastic/elasticsearch/issues/4071#issuecomment-31750150","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4071","id":31750150,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzUwMTUw","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2014-01-07T16:03:29Z","updated_at":"2014-01-10T10:21:23Z","author_association":"CONTRIBUTOR","body":"In principle I agree to the plural only. However, since some APIs are already singular, it might be good have plural and singular as synonyms?\n\nThere is several issues we would like to fix:\n1. plural and singular should be unified. \n2. index and item name definition should be treated the same way. That is, `*`, `_all` and `blank` should be synonyms, except for `DELETE` where we should not allow `blank`\n3. Order of `index/_api/item_name` should be consistent.\n4. `PUT` and `POST` should be equally supported by all four APIs.\n\nAssuming that we agree on making plural and singular synonyms, this would require the following list of changes:\n\n## `_mapping`\n\n### `PUT`\n\n```\nPUT {index|_all|*|prefix*}/type/_mapping\n{\n    \"type\" : {\n          \"properties\": {...}\n    }\n}\n```\n\nwould become\n\n```\nPUT {index|_all|*|prefix*|blank}/_mapping/type\n{\n     \"properties\": {...}\n}\n```\n\nand `_mappings` as synonym.\n\nWe would keep the old behavior but remove the documentation.\n\nNote that currently there is also the option to write \n\n`PUT {index|_all|*|prefix*}/_mapping?type=typename`\n\nalthough this is not documented.\n\n### `POST`\n\nCurrently exactly the same as PUT.\n\nWe would add \n\n```\nPOST {index|_all|*|prefix*|blank}/_mappings\n{\n    \"type1\" :\n         \"properties\": {...}\n    },\n    \"type2\" :\n         \"properties\": {...}\n    },\n    ...\n}\n```\n\nand `_mapping` as synonym.\n\n### `GET`\n\n`GET {index|_all|*|prefix*|blank}/{type|*|blank}/_mapping`\n\nwould become\n\n`GET {index|_all|*|prefix*|blank}/_mappings/{type|_all|*|prefix*|blank}`\n\nand `_mapping` as synonym.\n\nWe would keep the old behavior but remove the documentation.\n\n### `DELETE`\n\n`DELETE index/type`\n\nwould become:\n\n`DELETE {index|_all|*|prefix*|blank}/_mapping/{type|_all|*|prefix*}`\n\nWe would add `_mappings` as synonym.\n\nWe would keep the old behavior but remove the documentation.\n\n## `_settings`\n\n### `PUT`\n\n```\nPUT {index|_all|*|prefix*|blank}/_settings {\n    ...\n}\n\n```\n\nwould remain.\n\nWe would add `_setting` as synonym\n\n### `POST`\n\nDoes not exist yet. \n\nWe would add \n\n```\nPOST {index|_all|*|prefix*|blank}/_settings {\n    ...\n}\n\n```\n\nWe would add `_setting` as synonym.\n\n### `GET`\n\n`GET {index|*|_all|pref*|blank}/_settings`\n\nwould remain as is.\n\nWe would add `_setting` as synonym.\n\n### `DELETE`\n\nDoes not exist and we will not add it since it is unclear what it should do.\n\n## `_warmer`\n\n### `PUT`\n\n```\nPUT {index|_all|*|prefix*}/{type|_all|*|prefix*|blank}/_warmer/warmer_name {\n    ...\n}\n```\n\nwould become:\n\n```\nPUT {index|_all|*|prefix*|blank}/{type|_all|*|prefix*|blank}/_warmer/warmer_name {\n    ...\n}\n```\n\nWe would add `_warmers` as synonym.\n\n### `POST`\n\ndoes not exist yet. We would add\n\n```\nPOST {index|_all|*|prefix*|blank}/{type|_all|*|prefix*|blank}/_warmers {\n    \"warmer1\":{...},\n    \"warmer2\":{â¦},\n    ...\n}\n```\n\nWe would add `_warmer` as synonym.\n\n### `GET`\n\n`GET {index|*|_all|pref*}/_warmer/{warmer_name|*|pref*}`\n\nwould become\n\n`GET {index|*|_all|pref*|blank}/{type|_all|*|prefix*|blank}/_warmers/{warmer_name|*|_all|pref*|blank}`\n\nWe would add `_warmer` as synonym.\n\n### `DELETE`\n\n`DELETE {index|_all|*|prefix*}/_warmer/{warmer|*|prefix*}`\n\nwould become\n\n`DELETE {index|_all|*|prefix*}/{type|_all|*|prefix*}/_warmers/{warmer|*|_all|prefix*}`\n\nWe would add `_warmer` as synonym.\n\n## `_alias`\n\n### `PUT`\n\n`PUT index/_alias/alias`\n\nwould become\n\n`PUT {index|_all|*|prefix*|blank}/_alias/alias`\n\nWe would add `_aliases` as synonym.\n\n### `POST`\n\nRemains as is. The alias API is a special case because post triggers different actions.\n\n### `GET`\n\n`GET {index|_all|*|prefix*|blank}/_alias/{alias|*|prefix*}`\n\nand\n\n`GET {index|_all|*|prefix*|blank}/_aliases`\n\nwould become\n\n`GET {index|_all|*|prefix*|blank}/_aliases/{alias|*|prefix*|_all|blank}`\n\nWe would add `_alias` as synonym.\n\n### `DELETE`\n\n`DELETE index/_alias/alias`\n\nwould become \n\n`DELETE {index|_all|*|prefix*|blank}/_alias/{alias|*|prefix*|_all}`\n\nWe would add `_aliases` as synonym.\n\nNote that `DELETE index/_alias/*` currently returns ok but does not actually remove the aliases.\n\n## Things to keep in mind\n\nKeep an eye on https://github.com/elasticsearch/elasticsearch/issues/4549\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/31919497","html_url":"https://github.com/elastic/elasticsearch/issues/4071#issuecomment-31919497","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4071","id":31919497,"node_id":"MDEyOklzc3VlQ29tbWVudDMxOTE5NDk3","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-01-09T10:45:34Z","updated_at":"2014-01-09T10:45:34Z","author_association":"CONTRIBUTOR","body":"Here's a proposed roadmap of what should be done for RC1, and what can follow later:\n\n## PUT (singular)\n\n```\nRequest                                 Status\n-----------------------------------------------------------------------------------\nPUT /{index}/_mapping/{type}            Add URL\n{ single defn }\n\nPUT /{index}/_warmer/{name}             Already supported\n{ single defn }\n\nPUT /{index}/_alias/{name}              Already supported\n{ single defn }\n\nPUT /{index}/_setting/{name}            Will not support\n{ single defn }\n```\n\nAlso support:\n\n```\n PUT /{index}/{type}/_mapping           Already supported\n PUT & POST                             Add URLs\n```\n\nWhere: \n- `{index}` = `blank | * | _all | prefix* | name,name`\n- `{name}`  = `name`\n\n## POST (plural)\n\n```\nRequest                                 Status\n-----------------------------------------------------------------------------------\nPOST /{index}/_mappings                 Post 1.0\n{ multi defn }\n\nPOST /{index}/_warmers                  Post 1.0\n{ multi defn }\n\nPOST /_aliases                          Already supported\n{ actions }\n\nPOST /{index}/_settings                 Already supported\n{ multi defn }\n```\n\nAlso support:\n\n```\n PUT & POST                             Add URLs\n```\n\nWhere: \n- `{index}` = `blank | * | _all | prefix* | name,name` (Or should we just allow `name,name`? `prefix*`?)\n\nShould we also support this? \n\n```\nPOST /{index}/_aliases\n{ alias: { defn},... }\n```\n\nProbably not as we can't delete aliases at the same time.\n\n## GET (singular or plural)\n\n```\nRequest                                 Status\n-----------------------------------------------------------------------------------\nGET /{index}/_mappings/{type}           Add URL - make response consistent\nGET /{index}/_mapping/{type}            Add URL - make response consistent\n\nGET /{index}/_warmers/{name}            Add URL\nGET /{index}/_warmer/{name}             Already supported\n\nGET /{index}/_aliases/{name}            Already supported\nGET /{index}/_alias/{name}              Already supported\n\nGET /{index}/_settings/{name}           Already supported where {name}=blank\n                                        Add {name} support post 1?\nGET /{index}/_setting/{name}            Add URL? Or should not support?\n```\n\nAlso support:\n\n```\nGET /{index}/{type}/_mapping            Already supported - make response consistent\n```\n\n Where: \n- `{index}` = `blank | * | _all | prefix* | name,name`\n- `{name}`  = `blank | * | _all | prefix* | name,name`\n\nMissing types/warmers/aliases/settings should return empty objects, not throw 404s\n\n## DELETE (singular or plural)\n\n```\nRequest                                 Status\n-----------------------------------------------------------------------------------\nDELETE /{index}/_mappings/{type}        Add URL\nDELETE /{index}/_mapping/{type}         Add URL\n\nDELETE /{index}/_warmers/{name}         Add URL\nDELETE /{index}/_warmer/{name}          Already supported\n\nDELETE /{index}/_aliases/{name}         Already supported\nDELETE /{index}/_alias/{name}           Already supported\n\nDELETE /{index}/_settings/{name}        Will not be supported\nDELETE /{index}/_setting/{name}         Will not be supported\n```\n\nAlso support:\n\n```\nDELETE /{index}/{type}/_mapping         Already supported\n```\n\n Where: \n- `{index}` = `* | _all | prefix* | name,name` BLANK NOT ALLOWED\n- `{name}`  = `* | _all | prefix* | name,name` BLANK NOT ALLOWED\n\nIf no matching types/warmers/aliases/settings found, throw 404.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/32045177","html_url":"https://github.com/elastic/elasticsearch/issues/4071#issuecomment-32045177","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4071","id":32045177,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDQ1MTc3","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-01-10T17:01:41Z","updated_at":"2014-01-10T17:01:41Z","author_association":"CONTRIBUTOR","body":"The output from GET requests should have the following format:\n\n```\n{\n    \"index_name\": {\n        \"element_name\":  ...element value ...,\n        ...\n    },\n    ....\n}\n```\n\nIn other words:\n- the first level should always be the index name or names\n- the second level is the name of each element, eg the name of the type for `_mappings`, the name of the warmer for `_warmers`etc\n- if no matching element is found, then we return an empty object `{ }`, we don't throw a 404\n- the response object is only populated with the elements we find.  \n\nFor example:\n\n```\nGET /index_1,index_2,alias_3/_mappings/foo\n```\n\nIf `index_1` and `alias_3` (which points to `index_3`) both contain type `foo`, but `index_2` doesn't, then the response would be:\n\n```\n{\n    \"index_1\": {\n        \"foo\": { .... }\n    },\n    \"index_3\": {\n        \"foo\": { .... }\n    }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/32398112","html_url":"https://github.com/elastic/elasticsearch/issues/4071#issuecomment-32398112","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4071","id":32398112,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMzk4MTEy","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-01-15T19:09:53Z","updated_at":"2014-01-15T19:09:53Z","author_association":"CONTRIBUTOR","body":"RC1 work completed.  Remaining work moved to #4743 \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/35199544","html_url":"https://github.com/elastic/elasticsearch/issues/4071#issuecomment-35199544","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4071","id":35199544,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MTk5NTQ0","user":{"login":"lfrancke","id":122850,"node_id":"MDQ6VXNlcjEyMjg1MA==","avatar_url":"https://avatars2.githubusercontent.com/u/122850?v=4","gravatar_id":"","url":"https://api.github.com/users/lfrancke","html_url":"https://github.com/lfrancke","followers_url":"https://api.github.com/users/lfrancke/followers","following_url":"https://api.github.com/users/lfrancke/following{/other_user}","gists_url":"https://api.github.com/users/lfrancke/gists{/gist_id}","starred_url":"https://api.github.com/users/lfrancke/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lfrancke/subscriptions","organizations_url":"https://api.github.com/users/lfrancke/orgs","repos_url":"https://api.github.com/users/lfrancke/repos","events_url":"https://api.github.com/users/lfrancke/events{/privacy}","received_events_url":"https://api.github.com/users/lfrancke/received_events","type":"User","site_admin":false},"created_at":"2014-02-16T15:36:15Z","updated_at":"2014-02-16T15:36:15Z","author_association":"CONTRIBUTOR","body":"Two questions about this.\n\nThe first is about a comment @brwe left:\n\n> For PUT _mapping remove \"type\" from body, because it has to be defined in url anyway and is therefore redundant.\n\nWas this implemented in the end? When I'm posting a mapping containing a type to a URL with a non-matching I see a message acknowledging it but I don't think anything actually happened.\n\nSecond question is about deprecation. The PUT Mapping API doc mentions this:\n\n> Instead of `_mapping` you can also use the plural `_mappings`. The uri `PUT /{index}/{type}/_mapping` is still supported for backwards compatibility.  \n\nAre the singular versions supposed to be removed at some point?\n","performed_via_github_app":null}]