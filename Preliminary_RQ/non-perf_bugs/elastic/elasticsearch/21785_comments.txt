[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262819686","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-262819686","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":262819686,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MjgxOTY4Ng==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-11-24T17:11:05Z","updated_at":"2016-11-24T17:11:05Z","author_association":"CONTRIBUTOR","body":">Other search engines are able to provide this feature,\r\n\r\nTaking a quick look at the Solr docs it seems to be that all docs sharing the common grouping field value have to be physically located on the same shard. If that is a concession you are willing to make then I expect it is possible to use parent/child queries to achieve what you are after in elasticsearch.\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262820504","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-262820504","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":262820504,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MjgyMDUwNA==","user":{"login":"paullovessearch","id":1406946,"node_id":"MDQ6VXNlcjE0MDY5NDY=","avatar_url":"https://avatars3.githubusercontent.com/u/1406946?v=4","gravatar_id":"","url":"https://api.github.com/users/paullovessearch","html_url":"https://github.com/paullovessearch","followers_url":"https://api.github.com/users/paullovessearch/followers","following_url":"https://api.github.com/users/paullovessearch/following{/other_user}","gists_url":"https://api.github.com/users/paullovessearch/gists{/gist_id}","starred_url":"https://api.github.com/users/paullovessearch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paullovessearch/subscriptions","organizations_url":"https://api.github.com/users/paullovessearch/orgs","repos_url":"https://api.github.com/users/paullovessearch/repos","events_url":"https://api.github.com/users/paullovessearch/events{/privacy}","received_events_url":"https://api.github.com/users/paullovessearch/received_events","type":"User","site_admin":false},"created_at":"2016-11-24T17:16:34Z","updated_at":"2016-11-24T17:16:34Z","author_association":"NONE","body":"Yes, I can make it work with parent/child. But that's more effort (and more work on the ingestion side) than simply collapsing on a field.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262821321","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-262821321","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":262821321,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MjgyMTMyMQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-11-24T17:22:23Z","updated_at":"2016-11-24T17:22:23Z","author_association":"CONTRIBUTOR","body":">But that's more effort\r\n\r\nAre you at least prepared to route related content to the same shard? Otherwise I expect you'll struggle to find a technology that can gather the scattered pieces of the puzzle together in a way that supports fast searches.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262824509","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-262824509","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":262824509,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MjgyNDUwOQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-11-24T17:46:50Z","updated_at":"2016-11-24T17:46:50Z","author_association":"CONTRIBUTOR","body":"For this we have the [top-hits aggregation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-top-hits-aggregation.html)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262831852","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-262831852","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":262831852,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MjgzMTg1Mg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-11-24T18:52:36Z","updated_at":"2016-11-24T18:52:36Z","author_association":"CONTRIBUTOR","body":">not allowing results to be cluttered up with many similar results\r\n\r\nIf that is your use-case, then something like https://issues.apache.org/jira/browse/LUCENE-6066 looks like a better fit to me.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262847238","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-262847238","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":262847238,"node_id":"MDEyOklzc3VlQ29tbWVudDI2Mjg0NzIzOA==","user":{"login":"paullovessearch","id":1406946,"node_id":"MDQ6VXNlcjE0MDY5NDY=","avatar_url":"https://avatars3.githubusercontent.com/u/1406946?v=4","gravatar_id":"","url":"https://api.github.com/users/paullovessearch","html_url":"https://github.com/paullovessearch","followers_url":"https://api.github.com/users/paullovessearch/followers","following_url":"https://api.github.com/users/paullovessearch/following{/other_user}","gists_url":"https://api.github.com/users/paullovessearch/gists{/gist_id}","starred_url":"https://api.github.com/users/paullovessearch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paullovessearch/subscriptions","organizations_url":"https://api.github.com/users/paullovessearch/orgs","repos_url":"https://api.github.com/users/paullovessearch/repos","events_url":"https://api.github.com/users/paullovessearch/events{/privacy}","received_events_url":"https://api.github.com/users/paullovessearch/received_events","type":"User","site_admin":false},"created_at":"2016-11-24T21:35:45Z","updated_at":"2016-11-24T21:39:06Z","author_association":"NONE","body":"@markharwood : Sure, this could required related content be routed to the same shard. Of course, it would be nice if the index had a configuration which did this automatically. I.e. choose the field name and the routing happens automatically.\r\n@jpountz : Yes, but it needs to work within the context of the Elasticsearch cluster as a whole.\r\n@clintongormley : What got this started is that you can't page through aggregation buckets. So, what is needed is, essentially, the top-hits aggregation with paging through the buckets.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262851330","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-262851330","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":262851330,"node_id":"MDEyOklzc3VlQ29tbWVudDI2Mjg1MTMzMA==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-11-24T22:25:15Z","updated_at":"2016-11-24T22:25:15Z","author_association":"CONTRIBUTOR","body":">. I.e. choose the field name and the routing happens automatically.\r\n\r\nThat adds a fair amount of cost if you don't supply the routing value separately - the coordinating node has to parse the JSON body just to know where to route. Kind of like the Post Office having to open all the envelopes on letters just to read where they should be sent.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262852460","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-262852460","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":262852460,"node_id":"MDEyOklzc3VlQ29tbWVudDI2Mjg1MjQ2MA==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-11-24T22:40:24Z","updated_at":"2016-11-24T22:41:21Z","author_association":"CONTRIBUTOR","body":">what is needed is, essentially, the top-hits aggregation with paging through the buckets.\r\n\r\nTo me it feels closer to parent/child with inner hits but relaxing the requirement for a physical parent doc to group the children. Parent-child already enforces the idea of shard-locality and routing based on a value.  Pagination support is already there (unlike terms aggs). Child docs can exist without the parent. The sticking point is that, currently, \"orphaned\" child docs are not returned in results and you don't want to have to create parent docs for them in order to group. I'm not sure how much work would be involved in adding support for \"orphans\".\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262853909","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-262853909","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":262853909,"node_id":"MDEyOklzc3VlQ29tbWVudDI2Mjg1MzkwOQ==","user":{"login":"paullovessearch","id":1406946,"node_id":"MDQ6VXNlcjE0MDY5NDY=","avatar_url":"https://avatars3.githubusercontent.com/u/1406946?v=4","gravatar_id":"","url":"https://api.github.com/users/paullovessearch","html_url":"https://github.com/paullovessearch","followers_url":"https://api.github.com/users/paullovessearch/followers","following_url":"https://api.github.com/users/paullovessearch/following{/other_user}","gists_url":"https://api.github.com/users/paullovessearch/gists{/gist_id}","starred_url":"https://api.github.com/users/paullovessearch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paullovessearch/subscriptions","organizations_url":"https://api.github.com/users/paullovessearch/orgs","repos_url":"https://api.github.com/users/paullovessearch/repos","events_url":"https://api.github.com/users/paullovessearch/events{/privacy}","received_events_url":"https://api.github.com/users/paullovessearch/received_events","type":"User","site_admin":false},"created_at":"2016-11-24T23:00:43Z","updated_at":"2016-11-24T23:00:43Z","author_association":"NONE","body":"@markharwood : This all makes sense to me. It is a really useful feature, and definitely worth it.\r\n\r\nIn another use case, I have a customer which has bill lines and wants to group them into bills. It's another type of group-by clause, which I think could also be useful for aggregations.\r\n\r\nGrouping log lines by purchase transaction ID, for example.\r\n\r\nThe list goes on and on.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262894433","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-262894433","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":262894433,"node_id":"MDEyOklzc3VlQ29tbWVudDI2Mjg5NDQzMw==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-11-25T07:17:10Z","updated_at":"2016-11-25T07:17:10Z","author_association":"CONTRIBUTOR","body":">Grouping log lines by purchase transaction ID, for example.\r\n>The list goes on and on.\r\n\r\nLet's try keep this focused. If you're analyzing transactions or bills that represent a single unit then create transaction or bill objects. See entity-centric indexing: https://www.youtube.com/watch?v=yBf7oeJKH2Y\r\n\r\nIf we're talking about Google -style collapsing of free-text search results (e.g. pages grouped under a site) then we need to be discussing different techniques.\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262966596","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-262966596","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":262966596,"node_id":"MDEyOklzc3VlQ29tbWVudDI2Mjk2NjU5Ng==","user":{"login":"paullovessearch","id":1406946,"node_id":"MDQ6VXNlcjE0MDY5NDY=","avatar_url":"https://avatars3.githubusercontent.com/u/1406946?v=4","gravatar_id":"","url":"https://api.github.com/users/paullovessearch","html_url":"https://github.com/paullovessearch","followers_url":"https://api.github.com/users/paullovessearch/followers","following_url":"https://api.github.com/users/paullovessearch/following{/other_user}","gists_url":"https://api.github.com/users/paullovessearch/gists{/gist_id}","starred_url":"https://api.github.com/users/paullovessearch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paullovessearch/subscriptions","organizations_url":"https://api.github.com/users/paullovessearch/orgs","repos_url":"https://api.github.com/users/paullovessearch/repos","events_url":"https://api.github.com/users/paullovessearch/events{/privacy}","received_events_url":"https://api.github.com/users/paullovessearch/received_events","type":"User","site_admin":false},"created_at":"2016-11-25T14:25:48Z","updated_at":"2016-11-25T14:31:48Z","author_association":"NONE","body":"@markharwood : I'm sorry, I was just providing examples of lists of records which could be collapsed over a field. I believe they can all be handled by the new feature proposed.\r\n\r\nI'll watch the video of entity centric indexing, but in all the cases I'm talking about, there is no record which is the \"parent\". The parent is a collection off records with some sort of binding value (domain ID, transaction ID, etc.).\r\n\r\nIn the log-line example, one of our customers is an ecommerce site. When a new order is created it is stamped with an order-id, and that order-ID is carried along across many different servers and is stamped into hundreds (if not thousands) of log lines in dozens of log files.\r\n\r\nThis customer wants to show a list of orders in the search results, not a list of log lines.\r\n\r\nOf course, we could reach back into the RDBMS where the order was first created and index that, then make that the parent and parse out all of the log lines with the order ID and make them children of the original order.\r\n\r\nBut 1) We don't actually have access to the original RDBMS table [it is managed by a separate group] and 2) Sometimes orders are deleted [and so the record goes away in the RDBMS - but it lives on in the logs], and 3) we would need to modify the records for all of the log lines with order IDs so that they are children records (extra processing and integration required).\r\n\r\nAnother option (the one which we are pursuing right now) is to create a Kafka consumer which reads the Kafka data with Spark, aggregates on order ID, then writes another Kafka stream with the stream of orders which is then indexed by Elasticsearch. This allows us some additional aggregation power which may be useful later.\r\n\r\nBut it would be much easier if we could simply collapse the results by order-ID.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262995178","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-262995178","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":262995178,"node_id":"MDEyOklzc3VlQ29tbWVudDI2Mjk5NTE3OA==","user":{"login":"bpolaszek","id":5569077,"node_id":"MDQ6VXNlcjU1NjkwNzc=","avatar_url":"https://avatars0.githubusercontent.com/u/5569077?v=4","gravatar_id":"","url":"https://api.github.com/users/bpolaszek","html_url":"https://github.com/bpolaszek","followers_url":"https://api.github.com/users/bpolaszek/followers","following_url":"https://api.github.com/users/bpolaszek/following{/other_user}","gists_url":"https://api.github.com/users/bpolaszek/gists{/gist_id}","starred_url":"https://api.github.com/users/bpolaszek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bpolaszek/subscriptions","organizations_url":"https://api.github.com/users/bpolaszek/orgs","repos_url":"https://api.github.com/users/bpolaszek/repos","events_url":"https://api.github.com/users/bpolaszek/events{/privacy}","received_events_url":"https://api.github.com/users/bpolaszek/received_events","type":"User","site_admin":false},"created_at":"2016-11-25T16:46:50Z","updated_at":"2016-11-25T16:46:50Z","author_association":"NONE","body":"Besides, (tell me if I'm on the wrong topic)\r\n\r\nSolR has a `numberOfGroups` option (group.ngroups in [Result Grouping](https://cwiki.apache.org/confluence/display/solr/Result+Grouping)) that allows, for each group, to return the... number of groups.\r\n\r\nActually with the following request:\r\n```\r\n{\r\n  \"from\": 0,\r\n  \"size\": 0,\r\n  \"aggs\": {\r\n    \"groupby.city\": {\r\n      \"terms\": {\r\n        \"field\": \"city\",\r\n        \"size\" : 999,\r\n        \"order\": {\r\n          \"_term\": \"asc\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nI will actually fetch 999 cities, but the result won't tell me how many cities really match that aggregation.  So, trying to paginate group results is a real pain.\r\nPinging #4915 again.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/262997042","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-262997042","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":262997042,"node_id":"MDEyOklzc3VlQ29tbWVudDI2Mjk5NzA0Mg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-11-25T16:55:50Z","updated_at":"2016-11-25T16:55:50Z","author_association":"CONTRIBUTOR","body":"@paullovessearch i don't think you meant to close it, so reopening","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263004523","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-263004523","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":263004523,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzAwNDUyMw==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-11-25T17:50:49Z","updated_at":"2016-11-25T17:50:49Z","author_association":"MEMBER","body":"I think we need to distinguish the collapsing and the grouping. To me collapsing means that you  want to limit the number of top documents that belongs to the same collapsing key. You don't group top hits with the same collapsing key you just filter those that breaks the collapsing rule. \r\nToday this can be done with the diversified_sampler agg but it's a best effort at the shard level:\r\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-diversified-sampler-aggregation.html#_controlling_diversity\r\n\r\nGrouping is different, first it finds the best groups matching the query and then for each group it keeps the N best match. The results are top groups and not top hits. For instance in a e-commerce context I want to group my results by product and keep the N best items for each product. For this we have the `top_hits` aggregation coupled with the terms aggregation. For accurate results you can also route your document at indexing time based on the grouping field. It works fine except when you want to paginate the results. We could paginate the terms aggregation like we do for regular search pagination but it would suffer from the same limitation. If you want to access page number 10 all shards need to send their results for page 0 to 10. This is one of the reason why we are reluctant to add the pagination in the terms aggregation. It won't scale. Solr is no different here, they have the pagination on grouping but if you try to go deep you'll likely kill your cluster.\r\n\r\n> SolR has a numberOfGroups option (group.ngroups in Result Grouping) that allows, for each group, to return the... number of groups.\r\n\r\nIt returns the total number of groups but to be accurate all documents in each group must be co-located on the same shard. In ES you can simply do a cardinality aggregation on the grouping field:\r\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-cardinality-aggregation.html","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263022359","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-263022359","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":263022359,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzAyMjM1OQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-11-25T21:05:13Z","updated_at":"2016-11-25T21:05:13Z","author_association":"CONTRIBUTOR","body":">I'll watch the video of entity centric indexing, but in all the cases I'm talking about, there is no record which is the \"parent\".\r\n\r\nThat is also true of _all_ the examples in the video (I do recommend you watch it). Many of the examples you have given, Paul (transactions+log-records, orders+items, bills+lines) have potential attributes e.g. duration which are better computed in an entity-centric fashion rather than assembled at query-time using aggs. The benefits are:\r\n1) More complex consolidation logic is possible e.g. flagging anomalous sequences of events.\r\n2) Expensive query-time aggs are avoided\r\n3) The fused entity is a document that can be paginated using normal search APIs\r\n4) The event store can still be organized along time-based indices (no routing of event docs required)\r\nSo the general advice is it doesn't always pay to do _all_ of your aggregation logic at query time.\r\n\r\nOf course there is still Jim's other use case of result-collapsing to diversify search results but that doesn't sound like the primary use case you want to discuss here? (again, we need to establish a clear focus for this issue).\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263032819","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-263032819","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":263032819,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzAzMjgxOQ==","user":{"login":"paullovessearch","id":1406946,"node_id":"MDQ6VXNlcjE0MDY5NDY=","avatar_url":"https://avatars3.githubusercontent.com/u/1406946?v=4","gravatar_id":"","url":"https://api.github.com/users/paullovessearch","html_url":"https://github.com/paullovessearch","followers_url":"https://api.github.com/users/paullovessearch/followers","following_url":"https://api.github.com/users/paullovessearch/following{/other_user}","gists_url":"https://api.github.com/users/paullovessearch/gists{/gist_id}","starred_url":"https://api.github.com/users/paullovessearch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paullovessearch/subscriptions","organizations_url":"https://api.github.com/users/paullovessearch/orgs","repos_url":"https://api.github.com/users/paullovessearch/repos","events_url":"https://api.github.com/users/paullovessearch/events{/privacy}","received_events_url":"https://api.github.com/users/paullovessearch/received_events","type":"User","site_admin":false},"created_at":"2016-11-25T23:42:44Z","updated_at":"2016-11-25T23:42:44Z","author_association":"NONE","body":"@markharwood : Agreed, all of those are useful when collapsing at index time - and we are pursing methods (using Kafka and Spark) for doing this sort of management of these sorts of streams at index time.\r\nBut there are lots of use cases where these sorts of complex benefits are not required. Lots of times all you need to do is collapse on a field and show the top N matching records which belong to the same value of that field. Additional use cases (such as your 1-4 above) are not required.\r\n\r\n@jimczi : In terms of diversity, I think a lot of users are looking for a very simple way to explain the results to their users. And (like Google) - collapsing results on a field is very intuitive and easy to understand for the end-user. \"Oh look, you only get a single result from each host name\", etc.\r\n\r\nCollapse-by-field implementations that I've seen imply that the groups are ordered by the strongest (first-occuring) record within the group, based on the sort order. And so it's not really \"ordering of the groups\", it's really \"ordering of the records\" and then collapsing by group.\r\n\r\nSo it's not a \"group by\" / \"order by\" clause in the traditional RDBMS sense. It's more of a \"show the results in the same order, but then skip / collapse all the ones which occur later in the results with a field-value which has already been seen before.\r\n\r\nHowever, if we can provide some of the same advantages of parent-child functions for more complex processing of the groups, then cool. But that isn't what I've used in the past and what my customers need right now.\r\n\r\n@clintongormley : Thanks for re-opening! Why do they put the \"close and comment\" button right next to the \"comment\" button anyway? Crazy.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263053919","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-263053919","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":263053919,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzA1MzkxOQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-11-26T09:35:19Z","updated_at":"2016-11-26T09:35:19Z","author_association":"CONTRIBUTOR","body":">Additional use cases (such as your 1-4 above) are not required.\r\n\r\nExcept use case 3 which is pagination - where we came from in https://github.com/elastic/elasticsearch/issues/4915\r\n\r\nSearch (and not aggs) is the mechanism for paginated results. We support (for good reason) the following styles of doc search, in order of performance:\r\n1) Single documents e.g. text doc\r\n2) Nested documents e.g. order plus order lines\r\n3) Parent/child e.g. company and employees\r\n\r\nYou'll notice the order of performance is directly related to the locality of the data (same doc, same segment or same shard). We do not support an option 4 where we try and rank elements scattered across multiple nodes as we can't defy physics e.g. overcome the speed limitations of networks to support fast searches. However, entity-centric indexing is a valid approach to consolidating related data together as a background process rather than deferring these tasks until query time.\r\n\r\nSo these are the tools that are available to you for \"grouped search\". You'll need to organise your indexing strategies to pick the best approach. I recognise that this can require effort on your part and I'd love to offer a miracle cure-all pill but at some point \"eat less, exercise more\" is the only advice you can give. The one change we could possibly explore is that option 3) parent/child might be made to work where clients had not actually chosen to provide a physical parent doc and only children.\r\n\r\nIf you agree with these points lets put this \"grouped\" thing to bed and move on to tackling collapsing with **Diversity** which has a different set of challenges to discuss...\r\n\r\n\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263064933","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-263064933","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":263064933,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzA2NDkzMw==","user":{"login":"paullovessearch","id":1406946,"node_id":"MDQ6VXNlcjE0MDY5NDY=","avatar_url":"https://avatars3.githubusercontent.com/u/1406946?v=4","gravatar_id":"","url":"https://api.github.com/users/paullovessearch","html_url":"https://github.com/paullovessearch","followers_url":"https://api.github.com/users/paullovessearch/followers","following_url":"https://api.github.com/users/paullovessearch/following{/other_user}","gists_url":"https://api.github.com/users/paullovessearch/gists{/gist_id}","starred_url":"https://api.github.com/users/paullovessearch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paullovessearch/subscriptions","organizations_url":"https://api.github.com/users/paullovessearch/orgs","repos_url":"https://api.github.com/users/paullovessearch/repos","events_url":"https://api.github.com/users/paullovessearch/events{/privacy}","received_events_url":"https://api.github.com/users/paullovessearch/received_events","type":"User","site_admin":false},"created_at":"2016-11-26T14:01:11Z","updated_at":"2016-11-26T14:01:11Z","author_association":"NONE","body":"Okay then. I'll state outright that what I want is option 3) parent/child, without a physical parent document.\r\n\r\nDoes that help?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263067288","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-263067288","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":263067288,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzA2NzI4OA==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-11-26T14:50:50Z","updated_at":"2016-11-26T14:50:50Z","author_association":"CONTRIBUTOR","body":">Does that help?\r\n\r\nAlways helps to discuss something concrete :) We've meandered a little here in getting to this point so maybe close this issue in favour of a more targeted one?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263067747","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-263067747","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":263067747,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzA2Nzc0Nw==","user":{"login":"paullovessearch","id":1406946,"node_id":"MDQ6VXNlcjE0MDY5NDY=","avatar_url":"https://avatars3.githubusercontent.com/u/1406946?v=4","gravatar_id":"","url":"https://api.github.com/users/paullovessearch","html_url":"https://github.com/paullovessearch","followers_url":"https://api.github.com/users/paullovessearch/followers","following_url":"https://api.github.com/users/paullovessearch/following{/other_user}","gists_url":"https://api.github.com/users/paullovessearch/gists{/gist_id}","starred_url":"https://api.github.com/users/paullovessearch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paullovessearch/subscriptions","organizations_url":"https://api.github.com/users/paullovessearch/orgs","repos_url":"https://api.github.com/users/paullovessearch/repos","events_url":"https://api.github.com/users/paullovessearch/events{/privacy}","received_events_url":"https://api.github.com/users/paullovessearch/received_events","type":"User","site_admin":false},"created_at":"2016-11-26T15:00:08Z","updated_at":"2016-11-26T15:00:19Z","author_association":"NONE","body":"Sure, makes sense. Should I do it?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263236706","html_url":"https://github.com/elastic/elasticsearch/issues/21785#issuecomment-263236706","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21785","id":263236706,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzIzNjcwNg==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-11-28T10:31:19Z","updated_at":"2016-11-28T10:31:19Z","author_association":"CONTRIBUTOR","body":"Closing in favour of https://github.com/elastic/elasticsearch/issues/21820","performed_via_github_app":null}]