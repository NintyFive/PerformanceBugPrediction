{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/57585","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57585/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57585/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57585/events","html_url":"https://github.com/elastic/elasticsearch/issues/57585","id":629746708,"node_id":"MDU6SXNzdWU2Mjk3NDY3MDg=","number":57585,"title":"[CI] Failure in org.elasticsearch.cluster.MinimumMasterNodesIT","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"labels":[{"id":836504707,"node_id":"MDU6TGFiZWw4MzY1MDQ3MDc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Distributed","name":":Distributed/Distributed","color":"0e8a16","default":false,"description":"A catch all label for anything in the Distributed Area. If you aren't sure, use this one."},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"},{"id":1967496670,"node_id":"MDU6TGFiZWwxOTY3NDk2Njcw","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Distributed","name":"Team:Distributed","color":"fef2c0","default":false,"description":"Meta label for distributed team"}],"state":"closed","locked":false,"assignee":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"assignees":[{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2020-06-03T07:03:38Z","updated_at":"2020-06-10T06:49:10Z","closed_at":"2020-06-10T06:49:10Z","author_association":"MEMBER","active_lock_reason":null,"body":"Failed on CI and once locally for me https://gradle-enterprise.elastic.co/s/3lz2nfmnfm5xm/\r\n\r\nWe're tripping an assertion in this test:\r\n\r\n\r\n```\r\n./gradlew ':server:internalClusterTest' --tests \"org.elasticsearch.cluster.MinimumMasterNodesIT\" -Dtests.seed=2B9777EED69586A8 -Dtests.security.manager=true -Dtests.locale=en-US -Dtests.timezone=Etc/UTC -Druntime.java=11\r\n```\r\n\r\n```\r\ncom.carrotsearch.randomizedtesting.UncaughtExceptionError: Captured an uncaught exception in thread: Thread[id=310, name=elasticsearch[node_t2][scheduler][T#1], state=RUNNABLE, group=TGRP-MinimumMasterNodesIT]\r\nCaused by: java.lang.AssertionError: Expected current thread [Thread[elasticsearch[node_t2][scheduler][T#1],5,TGRP-MinimumMasterNodesIT]] to not be the scheduler thread. Reason: [Blocking operation]\r\n\tat __randomizedtesting.SeedInfo.seed([2B9777EED69586A8]:0)\r\n\tat org.elasticsearch.threadpool.ThreadPool.assertNotScheduleThread(ThreadPool.java:731)\r\n\tat org.elasticsearch.common.util.concurrent.BaseFuture.blockingAllowed(BaseFuture.java:93)\r\n\tat org.elasticsearch.common.util.concurrent.BaseFuture.get(BaseFuture.java:86)\r\n\tat org.elasticsearch.common.util.concurrent.FutureUtils.get(FutureUtils.java:56)\r\n\tat org.elasticsearch.indices.recovery.RecoverySourceHandler.lambda$acquireStore$22(RecoverySourceHandler.java:408)\r\n\tat org.elasticsearch.core.internal.io.IOUtils.close(IOUtils.java:106)\r\n\tat org.elasticsearch.core.internal.io.IOUtils.close(IOUtils.java:88)\r\n\tat org.elasticsearch.common.lease.Releasables.close(Releasables.java:36)\r\n\tat org.elasticsearch.common.lease.Releasables.close(Releasables.java:46)\r\n\tat org.elasticsearch.common.lease.Releasables.close(Releasables.java:51)\r\n\tat org.elasticsearch.common.lease.Releasables.lambda$releaseOnce$2(Releasables.java:105)\r\n\tat org.elasticsearch.core.internal.io.IOUtils.close(IOUtils.java:106)\r\n\tat org.elasticsearch.core.internal.io.IOUtils.close(IOUtils.java:64)\r\n\tat org.elasticsearch.indices.recovery.RecoverySourceHandler.lambda$recoverToTarget$8(RecoverySourceHandler.java:248)\r\n\tat org.elasticsearch.action.ActionListener$1.onFailure(ActionListener.java:71)\r\n\tat org.elasticsearch.action.ActionRunnable.onFailure(ActionRunnable.java:88)\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:39)\r\n\tat org.elasticsearch.common.util.concurrent.EsExecutors$DirectExecutorService.execute(EsExecutors.java:178)\r\n\tat org.elasticsearch.common.util.concurrent.ListenableFuture.notifyListener(ListenableFuture.java:106)\r\n\tat org.elasticsearch.common.util.concurrent.ListenableFuture.lambda$done$0(ListenableFuture.java:98)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1540)\r\n\tat org.elasticsearch.common.util.concurrent.ListenableFuture.done(ListenableFuture.java:98)\r\n\tat org.elasticsearch.common.util.concurrent.BaseFuture.setException(BaseFuture.java:162)\r\n\tat org.elasticsearch.common.util.concurrent.ListenableFuture.onFailure(ListenableFuture.java:135)\r\n\tat org.elasticsearch.action.StepListener.innerOnFailure(StepListener.java:67)\r\n\tat org.elasticsearch.action.NotifyOnceListener.onFailure(NotifyOnceListener.java:47)\r\n\tat org.elasticsearch.action.ActionListener$1.onFailure(ActionListener.java:71)\r\n\tat org.elasticsearch.action.ActionRunnable.onFailure(ActionRunnable.java:88)\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:39)\r\n\tat org.elasticsearch.common.util.concurrent.EsExecutors$DirectExecutorService.execute(EsExecutors.java:178)\r\n\tat org.elasticsearch.common.util.concurrent.ListenableFuture.notifyListener(ListenableFuture.java:106)\r\n\tat org.elasticsearch.common.util.concurrent.ListenableFuture.lambda$done$0(ListenableFuture.java:98)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1540)\r\n\tat org.elasticsearch.common.util.concurrent.ListenableFuture.done(ListenableFuture.java:98)\r\n\tat org.elasticsearch.common.util.concurrent.BaseFuture.setException(BaseFuture.java:162)\r\n\tat org.elasticsearch.common.util.concurrent.ListenableFuture.onFailure(ListenableFuture.java:135)\r\n\tat org.elasticsearch.action.StepListener.innerOnFailure(StepListener.java:67)\r\n\tat org.elasticsearch.action.NotifyOnceListener.onFailure(NotifyOnceListener.java:47)\r\n\tat org.elasticsearch.indices.recovery.MultiFileTransfer.onCompleted(MultiFileTransfer.java:146)\r\n\tat org.elasticsearch.indices.recovery.MultiFileTransfer.handleItems(MultiFileTransfer.java:134)\r\n\tat org.elasticsearch.indices.recovery.MultiFileTransfer$1.write(MultiFileTransfer.java:79)\r\n\tat org.elasticsearch.common.util.concurrent.AsyncIOProcessor.processList(AsyncIOProcessor.java:108)\r\n\tat org.elasticsearch.common.util.concurrent.AsyncIOProcessor.drainAndProcessAndRelease(AsyncIOProcessor.java:96)\r\n\tat org.elasticsearch.common.util.concurrent.AsyncIOProcessor.put(AsyncIOProcessor.java:84)\r\n\tat org.elasticsearch.indices.recovery.MultiFileTransfer.addItem(MultiFileTransfer.java:90)\r\n\tat org.elasticsearch.indices.recovery.MultiFileTransfer.lambda$handleItems$4(MultiFileTransfer.java:126)\r\n\tat org.elasticsearch.action.ActionListener$1.onFailure(ActionListener.java:71)\r\n\tat org.elasticsearch.action.ActionListener$6.onFailure(ActionListener.java:292)\r\n\tat org.elasticsearch.action.ActionListener$4.onFailure(ActionListener.java:173)\r\n\tat org.elasticsearch.action.ActionListener$6.onFailure(ActionListener.java:292)\r\n\tat org.elasticsearch.action.support.RetryableAction$RetryingListener.onFailure(RetryableAction.java:149)\r\n\tat org.elasticsearch.action.ActionListenerResponseHandler.handleException(ActionListenerResponseHandler.java:59)\r\n\tat org.elasticsearch.transport.TransportService.sendRequest(TransportService.java:545)\r\n\tat org.elasticsearch.indices.recovery.RemoteRecoveryTargetHandler$1.tryAction(RemoteRecoveryTargetHandler.java:258)\r\n\tat org.elasticsearch.action.support.RetryableAction$1.doRun(RetryableAction.java:98)\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:691)\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n```\r\n\r\nThe issue seems to be with the fact that we are scheduling some of the retrying in `org.elasticsearch.action.support.RetryableAction` on `SAME` so it runs on the scheduler thread. This in turn in some corner cases will use blocking `get` on a future and trip the above assertion.\r\n\r\n","closed_by":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"performed_via_github_app":null}