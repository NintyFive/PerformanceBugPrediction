{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/36815","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36815/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36815/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36815/events","html_url":"https://github.com/elastic/elasticsearch/issues/36815","id":392435918,"node_id":"MDU6SXNzdWUzOTI0MzU5MTg=","number":36815,"title":"[CI] AutoFollowIT.testCleanFollowedLeaderIndexUUIDs failure to get remote license","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"labels":[{"id":912824565,"node_id":"MDU6TGFiZWw5MTI4MjQ1NjU=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/CCR","name":":Distributed/CCR","color":"0e8a16","default":false,"description":"Issues around the Cross Cluster State Replication features"},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"assignees":[{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2018-12-19T04:25:54Z","updated_at":"2019-01-11T16:34:11Z","closed_at":"2019-01-11T16:34:11Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+master+multijob-darwin-compatibility/127/\r\n\r\nDoesn't reproduce\r\n```\r\n./gradlew :x-pack:plugin:ccr:internalClusterTest -Dtests.seed=8B7CD44168C1888C -Dtests.class=org.elasticsearch.xpack.ccr.AutoFollowIT -Dtests.method=\"testCleanFollowedLeaderIndexUUIDs\" -Dtests.security.manager=true -Dtests.locale=sr-Latn-RS -Dtests.timezone=Pacific/Guam -Dcompiler.java=11 -Druntime.java=8\r\n```\r\n\r\n```\r\n03:15:41   1> [2018-12-19T13:14:50,195][INFO ][o.e.x.c.AutoFollowIT     ] [testCleanFollowedLeaderIndexUUIDs] after test\r\n03:15:41 ERROR   16.6s J0 | AutoFollowIT.testCleanFollowedLeaderIndexUUIDs <<< FAILURES!\r\n03:15:41    > Throwable #1: ElasticsearchStatusException[can not fetch remote cluster state as the license state of the remote cluster [leader_cluster] could not be determined]; nested: ElasticsearchException[could not determine the license type for cluster [leader_cluster]]; nested: RemoteTransportException[[java.lang.NullPointerException]]; nested: ResponseHandlerFailureTransportException[java.lang.NullPointerException]; nested: NullPointerException;\r\n03:15:41    > \tat __randomizedtesting.SeedInfo.seed([8B7CD44168C1888C:C2E1D68121E99BF7]:0)\r\n03:15:41    > \tat org.elasticsearch.xpack.ccr.CcrLicenseChecker.clusterStateUnknownRemoteLicense(CcrLicenseChecker.java:433)\r\n03:15:41    > \tat org.elasticsearch.xpack.ccr.CcrLicenseChecker.lambda$checkRemoteClusterLicenseAndFetchClusterState$5(CcrLicenseChecker.java:174)\r\n03:15:41    > \tat org.elasticsearch.xpack.ccr.CcrLicenseChecker$1.onFailure(CcrLicenseChecker.java:225)\r\n03:15:41    > \tat org.elasticsearch.license.RemoteClusterLicenseChecker$1.onFailure(RemoteClusterLicenseChecker.java:180)\r\n03:15:41    > \tat org.elasticsearch.action.support.ContextPreservingActionListener.onFailure(ContextPreservingActionListener.java:50)\r\n03:15:41    > \tat org.elasticsearch.action.ActionListenerResponseHandler.handleException(ActionListenerResponseHandler.java:53)\r\n03:15:41    > \tat org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleException(TransportService.java:1104)\r\n03:15:41    > \tat org.elasticsearch.transport.TcpTransport.lambda$handleException$22(TcpTransport.java:1208)\r\n03:15:41    > \tat org.elasticsearch.common.util.concurrent.EsExecutors$1.execute(EsExecutors.java:140)\r\n03:15:41    > \tat org.elasticsearch.transport.TcpTransport.handleException(TcpTransport.java:1206)\r\n03:15:41    > \tat org.elasticsearch.transport.TcpTransport.access$900(TcpTransport.java:111)\r\n03:15:41    > \tat org.elasticsearch.transport.TcpTransport$2.onFailure(TcpTransport.java:1177)\r\n03:15:41    > \tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:39)\r\n03:15:41    > \tat org.elasticsearch.common.util.concurrent.EsExecutors$1.execute(EsExecutors.java:140)\r\n03:15:41    > \tat org.elasticsearch.transport.TcpTransport.handleResponse(TcpTransport.java:1174)\r\n03:15:41    > \tat org.elasticsearch.transport.TcpTransport.messageReceived(TcpTransport.java:1129)\r\n03:15:41    > \tat org.elasticsearch.transport.TcpTransport.inboundMessage(TcpTransport.java:913)\r\n03:15:41    > \tat org.elasticsearch.transport.TcpTransport.consumeNetworkReads(TcpTransport.java:940)\r\n03:15:41    > \tat org.elasticsearch.transport.nio.MockNioTransport$MockTcpReadWriteHandler.consumeReads(MockNioTransport.java:236)\r\n03:15:41    > \tat org.elasticsearch.nio.SocketChannelContext.handleReadBytes(SocketChannelContext.java:213)\r\n03:15:41    > \tat org.elasticsearch.nio.BytesChannelContext.read(BytesChannelContext.java:47)\r\n03:15:41    > \tat org.elasticsearch.nio.EventHandler.handleRead(EventHandler.java:119)\r\n03:15:41    > \tat org.elasticsearch.nio.NioSelector.handleRead(NioSelector.java:369)\r\n03:15:41    > \tat org.elasticsearch.nio.NioSelector.processKey(NioSelector.java:230)\r\n03:15:41    > \tat org.elasticsearch.nio.NioSelector.singleLoop(NioSelector.java:158)\r\n03:15:41    > \tat org.elasticsearch.nio.NioSelector.runLoop(NioSelector.java:123)\r\n03:15:41    > \tat java.lang.Thread.run(Thread.java:748)\r\n03:15:41    > Caused by: ElasticsearchException[could not determine the license type for cluster [leader_cluster]]; nested: RemoteTransportException[[java.lang.NullPointerException]]; nested: ResponseHandlerFailureTransportException[java.lang.NullPointerException]; nested: NullPointerException;\r\n03:15:41    > \t... 24 more\r\n03:15:41    > Caused by: RemoteTransportException[[java.lang.NullPointerException]]; nested: ResponseHandlerFailureTransportException[java.lang.NullPointerException]; nested: NullPointerException;\r\n03:15:41    > Caused by: ResponseHandlerFailureTransportException[java.lang.NullPointerException]; nested: NullPointerException;\r\n03:15:41    > Caused by: java.lang.NullPointerException\r\n03:15:41    > \tat org.elasticsearch.license.RemoteClusterLicenseChecker$1.onResponse(RemoteClusterLicenseChecker.java:162)\r\n03:15:41    > \tat org.elasticsearch.license.RemoteClusterLicenseChecker$1.onResponse(RemoteClusterLicenseChecker.java:157)\r\n03:15:41    > \tat org.elasticsearch.action.support.ContextPreservingActionListener.onResponse(ContextPreservingActionListener.java:43)\r\n03:15:41    > \tat org.elasticsearch.action.ActionListenerResponseHandler.handleResponse(ActionListenerResponseHandler.java:48)\r\n03:15:41    > \tat org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleResponse(TransportService.java:1094)\r\n```\r\n\r\nI wonder if this could be the same root cause as #36764?\r\n","closed_by":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"performed_via_github_app":null}