{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/41556","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41556/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41556/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41556/events","html_url":"https://github.com/elastic/elasticsearch/issues/41556","id":437408005,"node_id":"MDU6SXNzdWU0Mzc0MDgwMDU=","number":41556,"title":"_analyze with min_hash filter returns invalid JSON","user":{"login":"Kukunin","id":237993,"node_id":"MDQ6VXNlcjIzNzk5Mw==","avatar_url":"https://avatars1.githubusercontent.com/u/237993?v=4","gravatar_id":"","url":"https://api.github.com/users/Kukunin","html_url":"https://github.com/Kukunin","followers_url":"https://api.github.com/users/Kukunin/followers","following_url":"https://api.github.com/users/Kukunin/following{/other_user}","gists_url":"https://api.github.com/users/Kukunin/gists{/gist_id}","starred_url":"https://api.github.com/users/Kukunin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Kukunin/subscriptions","organizations_url":"https://api.github.com/users/Kukunin/orgs","repos_url":"https://api.github.com/users/Kukunin/repos","events_url":"https://api.github.com/users/Kukunin/events{/privacy}","received_events_url":"https://api.github.com/users/Kukunin/received_events","type":"User","site_admin":false},"labels":[{"id":142001965,"node_id":"MDU6TGFiZWwxNDIwMDE5NjU=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Analysis","name":":Search/Analysis","color":"0e8a16","default":false,"description":"How text is split into tokens"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-04-25T21:35:37Z","updated_at":"2019-04-26T07:40:36Z","closed_at":"2019-04-26T07:40:36Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):\r\nVersion: 6.6.1, Build: oss/tar/1fd8f69/2019-02-13T17:10:04.160291Z, JVM: 1.8.0_202\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`):\r\nopenjdk version \"11.0.2\" 2019-01-15\r\nOpenJDK Runtime Environment 18.9 (build 11.0.2+9)\r\nOpenJDK 64-Bit Server VM 18.9 (build 11.0.2+9, mixed mode)\r\n\r\n\r\n**OS version** (`uname -a` if on a Unix-like system):\r\nmacOS Mojave 10.14.2\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nBackground: I need to find near-duplicate documents from my index. I saw that Elasticsearch contains `min_hash` filter that is suitable for this. Because I didn't find a way to find all duplicated documents I decided to do the clustering on the Postgres side while keeping ES to generate `min_hash` set (don't want to re-implement it).\r\n\r\nIn order to get a configured `min_hash` set for a text, I use `GET /articles/_analyze` query:\r\n\r\n```json\r\n{\r\n  \"text\": \"my cool phrases somebody here\",\r\n  \"analyzer\": \"minhash_analyzer\"\r\n}\r\n```\r\n\r\nand it returns to me something like:\r\n\r\n```json\r\n{\r\n  \"tokens\": [\r\n    {\r\n      \"token\": \"瞅䅿磯뎛怉瘡䯿꣪\",\r\n      \"start_offset\": 0,\r\n      \"end_offset\": 29,\r\n      \"type\": \"MIN_HASH\",\r\n      \"position\": 0\r\n    },\r\n    {\r\n      \"token\": \"瞅䅿磯뎛怉瘡䯿꣪\",\r\n      \"start_offset\": 0,\r\n      \"end_offset\": 29,\r\n      \"type\": \"MIN_HASH\",\r\n      \"position\": 0\r\n    },\r\n    {\r\n      \"token\": \"瞅䅿磯뎛怉瘡䯿꣪\",\r\n      \"start_offset\": 0,\r\n      \"end_offset\": 29,\r\n      \"type\": \"MIN_HASH\",\r\n      \"position\": 0\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nAs you can see, tokens are raw binary, which may break JSON. \r\nOut of 100 random texts, 12 generated broken JSON for me.\r\n\r\nIt raises the following exception in Ruby:\r\n\r\n\r\n    MultiJson::ParseError:\r\n      468: incomplete surrogate pair at '陘㖒ꗖ抦ㅵᶚ\\uD8BD\",\"start_offset\":0,\"end_offset\":54,\"type\":\"MIN_HASH\",\"position\":0},{\"token\":\"陘㖒ꗖ抦ㅵᶚ\\uD8BD\",\"start_offset\":0,\"end_offset\":54,\"type\":\"MIN_HASH\",\"position\":0},{\"token\":\"샥鯛䲥짭᜛佪逮\",\"start_offset\":0,\"end_offset\":54,\"type\":\"MIN_HASH\",\"position\":0},{\"token\":\"샥鯛䲥짭᜛佪逮\",\"start_offset\":0,\"end_offset\":54,\"type\":\"MIN_HASH\",\"position\":0},{\"token\":\"샥鯛䲥짭᜛佪逮\",\"start_offset\":0,\"end_offset\":54,\"type\":\"MIN_HASH\",\"position\":0},{\"token\":\"샥鯛䲥짭᜛佪逮\",\"start_offset\":0,\"end_offset\":54,\"type\":\"MIN_HASH\",\"position\":0},{\"token\":\"샥鯛䲥짭᜛佪逮\",\"start_offset\":0,\"end_offset\":54,\"type\":\"MIN_HASH\",\"position\":0},{\"token\":\"샥鯛䲥짭᜛佪逮\",\"start_offset\":0,\"end_offset\":54,\"type\":\"MIN_HASH\",\"position\":0},{\"token\":\"⺩귏쇀ⰹ㱭돎ﾝ❦\",\"start_offset\":0,\"end_offset\":54,\"type\":\"MIN_HASH\",\"position\":0},{\"token\":\"⺩귏쇀ⰹ㱭돎ﾝ❦\",\"start_offset\":0,\"end_offset\":54,\"type\":\"MIN_HASH\",\"position\":0},{\"token\":\"⺩귏쇀ⰹ㱭돎ﾝ❦\",\"start_offset\":0,\"end_offset\":54,\"type\":\"MIN_HASH\",\"position\":0},{\"token\":\"⺩귏쇀ⰹ㱭돎ﾝ❦\",\"start_offset\":0,\"end_offset\":54,\"type\":\"MIN_HASH\",\"position\":0},{\"token\":\"⺩귏쇀ⰹ㱭돎ﾝ❦\",\"start_offset\":0,\"end_offset\":54,\"type\":\"MIN_HASH\",\"position\":0},{\"token\":\"⺩귏쇀ⰹ㱭돎ﾝ❦\",\"start_offset\":0,\"end_offset\":54,\"type\":\"MIN_HASH\",\"position\":0},{\"token\":\"⺩귏쇀ⰹ㱭돎ﾝ❦\",\"start_offset\":0,\"end_offset\":54,\"type\":\"MIN_HASH\",\"position\":0}]}'\r\n\r\n\r\nDidn't find a way to escape it (render as hex or base64).\r\n\r\n**Steps to reproduce**:\r\n\r\nMy mapping:\r\n\r\n```json\r\n{  \r\n   \"filter\":{  \r\n      \"shingle_filter\":{  \r\n         \"type\":\"shingle\",\r\n         \"min_shingle_size\":5,\r\n         \"max_shingle_size\":5,\r\n         \"output_unigrams\":false\r\n      },\r\n      \"minhash_filter\":{  \r\n         \"type\":\"min_hash\",\r\n         \"hash_count\":1,\r\n         \"bucket_count\":32,\r\n         \"hash_set_size\":1,\r\n         \"with_rotation\":true\r\n      }\r\n   },\r\n   \"analyzer\":{  \r\n      \"minhash_analyzer\":{  \r\n         \"tokenizer\":\"whitespace\",\r\n         \"char_filter\":[  \r\n            \"html_strip\"\r\n         ],\r\n         \"filter\":[  \r\n            \"shingle_filter\",\r\n            \"minhash_filter\"\r\n         ]\r\n      }\r\n   }\r\n}\r\n```\r\n\r\nMy request:\r\n\r\n`GET http://localhost:9200/articles_test/_analyze`\r\n\r\n```json\r\n{\r\n  \"text\": \"Ugh goth offal small batch kickstarter ramps leggings.\",\r\n  \"analyzer\": \"minhash_analyzer\"\r\n}\r\n```","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}