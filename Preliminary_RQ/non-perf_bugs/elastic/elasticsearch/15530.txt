{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/15530","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15530/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15530/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15530/events","html_url":"https://github.com/elastic/elasticsearch/issues/15530","id":122901135,"node_id":"MDU6SXNzdWUxMjI5MDExMzU=","number":15530,"title":"Provide item-based listener API in BulkProcessor","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"labels":[{"id":146829143,"node_id":"MDU6TGFiZWwxNDY4MjkxNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Transport%20API","name":":Core/Infra/Transport API","color":"0e8a16","default":false,"description":"Transport client API"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-12-18T08:02:51Z","updated_at":"2018-03-14T08:04:33Z","closed_at":"2018-03-14T08:04:32Z","author_association":"MEMBER","active_lock_reason":null,"body":"This ticket originates from a discussion in #14829. Currently, `BulkProcessor` provides a bulk-based listener API. A listener gets notified before a bulk request is issued and after a response came back. But clients should not need to care about the internal handling of bulk requests and can just work on individual items. Hence we want to introduce a new listener interface `ItemListener` sketched below:\n\n``` java\ninterface ItemListener {\n    void beforeExecute(ActionRequest request);\n    void afterExecute(ActionRequest request, ActionWriteResponse response);\n    void afterExecute(ActionRequest request, Throwable failure);\n}\n```\n\nThis interface is simpler: There is no need to know about bulk requests and how bulk processor handles them internally. Also request / response correlation is straightforward (the current API uses an execution id for that). Consequently, in case a bulk request fails completely, the callback method will be invoked for each `ActionRequest`.\n\nBulk-based listeners are considered to be the exception rather than the rule. Bulk-based listening will still be supported but the idea is to subclass `BulkProcessor` and implement the callback methods in a subclass (i.e. the base class `BulkProcessor` should implement a template method).\n","closed_by":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"performed_via_github_app":null}