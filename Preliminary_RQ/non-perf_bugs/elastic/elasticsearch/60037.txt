{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/60037","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60037/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60037/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60037/events","html_url":"https://github.com/elastic/elasticsearch/issues/60037","id":663566713,"node_id":"MDU6SXNzdWU2NjM1NjY3MTM=","number":60037,"title":"Add timeout for Search Network Action to Improve Cluster Resistance","user":{"login":"boicehuang","id":4607177,"node_id":"MDQ6VXNlcjQ2MDcxNzc=","avatar_url":"https://avatars3.githubusercontent.com/u/4607177?v=4","gravatar_id":"","url":"https://api.github.com/users/boicehuang","html_url":"https://github.com/boicehuang","followers_url":"https://api.github.com/users/boicehuang/followers","following_url":"https://api.github.com/users/boicehuang/following{/other_user}","gists_url":"https://api.github.com/users/boicehuang/gists{/gist_id}","starred_url":"https://api.github.com/users/boicehuang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/boicehuang/subscriptions","organizations_url":"https://api.github.com/users/boicehuang/orgs","repos_url":"https://api.github.com/users/boicehuang/repos","events_url":"https://api.github.com/users/boicehuang/events{/privacy}","received_events_url":"https://api.github.com/users/boicehuang/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":1967498216,"node_id":"MDU6TGFiZWwxOTY3NDk4MjE2","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Search","name":"Team:Search","color":"fef2c0","default":false,"description":"Meta label for search team"},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2020-07-22T08:13:55Z","updated_at":"2020-09-08T22:22:47Z","closed_at":"2020-09-08T22:22:47Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"## Issue\r\nCurrently, the coordinate node sends [Query](https://github.com/elastic/elasticsearch/blob/master/server/src/main/java/org/elasticsearch/action/search/SearchTransportService.java#L138) and [Fetch](https://github.com/elastic/elasticsearch/blob/master/server/src/main/java/org/elasticsearch/action/search/SearchTransportService.java#L163) network action to remote data nodes without any timeout options. \r\n\r\n```\r\n    public <T extends TransportResponse> void sendChildRequest(final Transport.Connection connection, final String action,\r\n                                                               final TransportRequest request, final Task parentTask,\r\n                                                               final TransportResponseHandler<T> handler) {\r\n        sendChildRequest(connection, action, request, parentTask, TransportRequestOptions.EMPTY, handler);\r\n    }\r\n```\r\nIt has a very bad impact, when one of the data nodes' machine is in disk failure,  it can't handle I/0 operations like reading or writing data from disk but it is still connected with other nodes. This node acts as a black hole in the cluster, it stuck every shard search request from the coordinate node. Cumulative requests are increasing and consuming a lot of memory in the coordinate node, soon it will cause the coordinate node to fullGC.\r\n\r\nWe have maintained a Production Environment for about 300 nodes, and Disk Failure is very common. We try to set a timeout in search request body, like https://www.elastic.co/guide/en/elasticsearch/reference/current/search.html#global-search-timeout. But it doesn't take effect in my situation since the timeout is mainly used for Lucene, as discussed in https://github.com/elastic/elasticsearch/issues/9156.  \r\n\r\nSo I have added the request body timeout for the query, fetch, and write network action. It seems to have a very great impact on improving cluster resistance on the Overload or Disk Failure of a node. I wonder if the solution is good enough and there is a better solution instead?","closed_by":{"login":"cjcenizal","id":1238659,"node_id":"MDQ6VXNlcjEyMzg2NTk=","avatar_url":"https://avatars2.githubusercontent.com/u/1238659?v=4","gravatar_id":"","url":"https://api.github.com/users/cjcenizal","html_url":"https://github.com/cjcenizal","followers_url":"https://api.github.com/users/cjcenizal/followers","following_url":"https://api.github.com/users/cjcenizal/following{/other_user}","gists_url":"https://api.github.com/users/cjcenizal/gists{/gist_id}","starred_url":"https://api.github.com/users/cjcenizal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cjcenizal/subscriptions","organizations_url":"https://api.github.com/users/cjcenizal/orgs","repos_url":"https://api.github.com/users/cjcenizal/repos","events_url":"https://api.github.com/users/cjcenizal/events{/privacy}","received_events_url":"https://api.github.com/users/cjcenizal/received_events","type":"User","site_admin":false},"performed_via_github_app":null}