[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/433891020","html_url":"https://github.com/elastic/elasticsearch/issues/34960#issuecomment-433891020","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34960","id":433891020,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMzg5MTAyMA==","user":{"login":"mohmad-null","id":22342282,"node_id":"MDQ6VXNlcjIyMzQyMjgy","avatar_url":"https://avatars0.githubusercontent.com/u/22342282?v=4","gravatar_id":"","url":"https://api.github.com/users/mohmad-null","html_url":"https://github.com/mohmad-null","followers_url":"https://api.github.com/users/mohmad-null/followers","following_url":"https://api.github.com/users/mohmad-null/following{/other_user}","gists_url":"https://api.github.com/users/mohmad-null/gists{/gist_id}","starred_url":"https://api.github.com/users/mohmad-null/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mohmad-null/subscriptions","organizations_url":"https://api.github.com/users/mohmad-null/orgs","repos_url":"https://api.github.com/users/mohmad-null/repos","events_url":"https://api.github.com/users/mohmad-null/events{/privacy}","received_events_url":"https://api.github.com/users/mohmad-null/received_events","type":"User","site_admin":false},"created_at":"2018-10-29T12:26:03Z","updated_at":"2018-10-29T12:26:03Z","author_association":"NONE","body":"To further clarify, the following searches would also partially phrase match that document:\r\n`road south europe`\r\n`country south europe national`\r\netc etc.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/433920822","html_url":"https://github.com/elastic/elasticsearch/issues/34960#issuecomment-433920822","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34960","id":433920822,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMzkyMDgyMg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-10-29T14:01:40Z","updated_at":"2018-10-29T14:01:40Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/435000455","html_url":"https://github.com/elastic/elasticsearch/issues/34960#issuecomment-435000455","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34960","id":435000455,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTAwMDQ1NQ==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2018-11-01T10:35:26Z","updated_at":"2018-11-01T10:35:26Z","author_association":"MEMBER","body":"@mohmad-null sorry, but I don't quite follow your as here. Phrase queries are intended to match exact phrases and even have the \"slop\" factor to incorporate a certain degree of fuzzy matching. What you describe should be already covered by general \"match\" queries, possibly in conjuction with \"span\" queries if you need the terms to be in a certain order. Could you elaborate a bit more why those don't satisfy your needs?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/435007950","html_url":"https://github.com/elastic/elasticsearch/issues/34960#issuecomment-435007950","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34960","id":435007950,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTAwNzk1MA==","user":{"login":"mohmad-null","id":22342282,"node_id":"MDQ6VXNlcjIyMzQyMjgy","avatar_url":"https://avatars0.githubusercontent.com/u/22342282?v=4","gravatar_id":"","url":"https://api.github.com/users/mohmad-null","html_url":"https://github.com/mohmad-null","followers_url":"https://api.github.com/users/mohmad-null/followers","following_url":"https://api.github.com/users/mohmad-null/following{/other_user}","gists_url":"https://api.github.com/users/mohmad-null/gists{/gist_id}","starred_url":"https://api.github.com/users/mohmad-null/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mohmad-null/subscriptions","organizations_url":"https://api.github.com/users/mohmad-null/orgs","repos_url":"https://api.github.com/users/mohmad-null/repos","events_url":"https://api.github.com/users/mohmad-null/events{/privacy}","received_events_url":"https://api.github.com/users/mohmad-null/received_events","type":"User","site_admin":false},"created_at":"2018-11-01T11:07:54Z","updated_at":"2018-11-01T11:07:54Z","author_association":"NONE","body":"My suggestion is based around the fact that in real-world use, a search query can have extraneous words beyond just a phrase itself. For example, in `road transport south europe`, there are two phrases: \"road transport\" and \"south europe\". In `south europe trees`, it's \"South Europe\" as a phrase, and the left over \"trees\".\r\nWhat you want in both cases is higher ranked results when the words are in close proximity. Yes the user can use quote marks to do it explicitly (`\"south europe\" trees`), but 95% of users don't do that, and instead will rely on the search engine to do it for them.\r\n\r\nAs far as I can tell from reading the docs, there's no way to do this with ES, but I'm happy to be proven wrong.\r\n\r\nMatch query - As far as I can see from reading around it, there is no proximity/distance component that gets factored in to the score, match is simply a \"bag of words\" search. That's what the docs explicitly say anyway - https://www.elastic.co/guide/en/elasticsearch/guide/current/proximity-matching.html\r\n\r\nSpan query - I did look into it but the docs suggest it's for a very niche thing where you have lots of knowledge of the search terms and documents, and structure there-in. \"These are typically used to implement very specific queries on legal documents or patents.\" - I'm seeking to use this on a general search engine.\r\n\r\nAs such, a modification of phrase query seemed like the logical way to go.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/435010143","html_url":"https://github.com/elastic/elasticsearch/issues/34960#issuecomment-435010143","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34960","id":435010143,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTAxMDE0Mw==","user":{"login":"mohmad-null","id":22342282,"node_id":"MDQ6VXNlcjIyMzQyMjgy","avatar_url":"https://avatars0.githubusercontent.com/u/22342282?v=4","gravatar_id":"","url":"https://api.github.com/users/mohmad-null","html_url":"https://github.com/mohmad-null","followers_url":"https://api.github.com/users/mohmad-null/followers","following_url":"https://api.github.com/users/mohmad-null/following{/other_user}","gists_url":"https://api.github.com/users/mohmad-null/gists{/gist_id}","starred_url":"https://api.github.com/users/mohmad-null/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mohmad-null/subscriptions","organizations_url":"https://api.github.com/users/mohmad-null/orgs","repos_url":"https://api.github.com/users/mohmad-null/repos","events_url":"https://api.github.com/users/mohmad-null/events{/privacy}","received_events_url":"https://api.github.com/users/mohmad-null/received_events","type":"User","site_admin":false},"created_at":"2018-11-01T11:17:52Z","updated_at":"2018-11-01T11:17:52Z","author_association":"NONE","body":"@cbuescher - And while it may indeed be possible to do this with `span` queries, according to the docs (https://www.elastic.co/guide/en/elasticsearch/guide/current/phrase-matching.html) - the phrase query is only a high-level front end to the low-level span queries behind the scenes anyway.\r\n\r\nMy suggestion is to simply add to the high-level thing so folks don't need to figure out the low-level span query thing (which don't seem to be well documented beyond the basic API - there doesn't seem to be any overarching guidance or explanation of how/why to use them or what problems they solve beyond repeated references to \"specialized fields like patent searches\").","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/435010597","html_url":"https://github.com/elastic/elasticsearch/issues/34960#issuecomment-435010597","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34960","id":435010597,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTAxMDU5Nw==","user":{"login":"romseygeek","id":1347065,"node_id":"MDQ6VXNlcjEzNDcwNjU=","avatar_url":"https://avatars0.githubusercontent.com/u/1347065?v=4","gravatar_id":"","url":"https://api.github.com/users/romseygeek","html_url":"https://github.com/romseygeek","followers_url":"https://api.github.com/users/romseygeek/followers","following_url":"https://api.github.com/users/romseygeek/following{/other_user}","gists_url":"https://api.github.com/users/romseygeek/gists{/gist_id}","starred_url":"https://api.github.com/users/romseygeek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/romseygeek/subscriptions","organizations_url":"https://api.github.com/users/romseygeek/orgs","repos_url":"https://api.github.com/users/romseygeek/repos","events_url":"https://api.github.com/users/romseygeek/events{/privacy}","received_events_url":"https://api.github.com/users/romseygeek/received_events","type":"User","site_admin":false},"created_at":"2018-11-01T11:19:59Z","updated_at":"2018-11-01T11:19:59Z","author_association":"CONTRIBUTOR","body":"We do plan to add a proximity boost option to the match query, although I don't think there's an open issue for it.  The basic idea is to do an interval query over all terms in the match, which will score higher the close the terms are together as a whole, but I can see an argument for adding interval queries over each consecutive pair of terms as well.  We'd want to be careful to avoid expanding the query too much though.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/435186126","html_url":"https://github.com/elastic/elasticsearch/issues/34960#issuecomment-435186126","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34960","id":435186126,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTE4NjEyNg==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2018-11-01T21:02:25Z","updated_at":"2018-11-01T21:02:25Z","author_association":"MEMBER","body":"> there are two phrases: \"road transport\" and \"south europe\"\r\n\r\nCases like this can probably also be solved with n-grams shingles (e.g. 2 and 3-grams cover a lot of phrase-like expressions in english). For starters, e.g. https://www.elastic.co/blog/searching-with-shingles gives a rough idea what to do.","performed_via_github_app":null}]