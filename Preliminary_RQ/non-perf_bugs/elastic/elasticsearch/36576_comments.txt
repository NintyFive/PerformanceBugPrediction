[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/446889052","html_url":"https://github.com/elastic/elasticsearch/issues/36576#issuecomment-446889052","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36576","id":446889052,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0Njg4OTA1Mg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-12-13T08:50:43Z","updated_at":"2018-12-13T08:50:43Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-analytics-geo","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/446897383","html_url":"https://github.com/elastic/elasticsearch/issues/36576#issuecomment-446897383","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36576","id":446897383,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0Njg5NzM4Mw==","user":{"login":"Derya","id":3374003,"node_id":"MDQ6VXNlcjMzNzQwMDM=","avatar_url":"https://avatars2.githubusercontent.com/u/3374003?v=4","gravatar_id":"","url":"https://api.github.com/users/Derya","html_url":"https://github.com/Derya","followers_url":"https://api.github.com/users/Derya/followers","following_url":"https://api.github.com/users/Derya/following{/other_user}","gists_url":"https://api.github.com/users/Derya/gists{/gist_id}","starred_url":"https://api.github.com/users/Derya/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Derya/subscriptions","organizations_url":"https://api.github.com/users/Derya/orgs","repos_url":"https://api.github.com/users/Derya/repos","events_url":"https://api.github.com/users/Derya/events{/privacy}","received_events_url":"https://api.github.com/users/Derya/received_events","type":"User","site_admin":false},"created_at":"2018-12-13T09:19:16Z","updated_at":"2018-12-13T09:19:16Z","author_association":"NONE","body":"Actually I thought about this a bit more and I feel like this must not be such a rare use case. Even if this were in the `query` clause instead of in `aggs`, there are other more complicated kinds of queries that might want to reference parent fields further down the tree... Is there some other way to accomplish this?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/449922828","html_url":"https://github.com/elastic/elasticsearch/issues/36576#issuecomment-449922828","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36576","id":449922828,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0OTkyMjgyOA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-12-26T07:47:14Z","updated_at":"2018-12-26T07:47:14Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/452319839","html_url":"https://github.com/elastic/elasticsearch/issues/36576#issuecomment-452319839","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36576","id":452319839,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjMxOTgzOQ==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2019-01-08T14:35:50Z","updated_at":"2019-01-08T14:35:50Z","author_association":"MEMBER","body":"@Derya while discussing this issue I found and old issue (https://github.com/elastic/elasticsearch/issues/16380) that looks like it discusses the same topic. https://github.com/elastic/elasticsearch/issues/16380#issuecomment-183760673 suggests copying the data you want to filter on from the parent document to the nested docs. Since nested aggregations are already complex as is we'd like to propose this instead of adding another feature. I hope you don't mind me closing this issue. Please let us know if this doesn't help with your use case.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/452864272","html_url":"https://github.com/elastic/elasticsearch/issues/36576#issuecomment-452864272","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36576","id":452864272,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjg2NDI3Mg==","user":{"login":"Derya","id":3374003,"node_id":"MDQ6VXNlcjMzNzQwMDM=","avatar_url":"https://avatars2.githubusercontent.com/u/3374003?v=4","gravatar_id":"","url":"https://api.github.com/users/Derya","html_url":"https://github.com/Derya","followers_url":"https://api.github.com/users/Derya/followers","following_url":"https://api.github.com/users/Derya/following{/other_user}","gists_url":"https://api.github.com/users/Derya/gists{/gist_id}","starred_url":"https://api.github.com/users/Derya/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Derya/subscriptions","organizations_url":"https://api.github.com/users/Derya/orgs","repos_url":"https://api.github.com/users/Derya/repos","events_url":"https://api.github.com/users/Derya/events{/privacy}","received_events_url":"https://api.github.com/users/Derya/received_events","type":"User","site_admin":false},"created_at":"2019-01-09T21:22:13Z","updated_at":"2019-01-09T21:23:52Z","author_association":"NONE","body":"I considered doing just that, actually. Including the top level data I needed in the nested documents would of course solve the problem but it's not feasible in this case unfortunately. Compared to other cases where we might have just flattened the structure, there's just a lot of different stuff at the top level and also on average an awful lot of entries in the nested level per top level entry. So I think even if it were possible, it may not have been desirable to begin with. Though I suppose if I had no other choice, it'd be worth performance testing.\r\n\r\nThe reason it is not feasible in this case is that my mapping is for an Elassandra index, and the realities of how the underlying Cassandra table needs to be updated preclude a flattened structure.\r\n\r\nUltimately we just can't do queries that involve OR, NOR, etc those two levels. We can still make AND queries just by filtering twice at two different levels in the aggregation, so that's a plus at least, but other than that I wasn't really able to work around this problem in any other way.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/453037856","html_url":"https://github.com/elastic/elasticsearch/issues/36576#issuecomment-453037856","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36576","id":453037856,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzAzNzg1Ng==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2019-01-10T09:58:40Z","updated_at":"2019-01-10T09:58:40Z","author_association":"MEMBER","body":"Thanks for the clarification and I'm sorry to hear that copying the information in your case isn't feasible. Its good to hear this in case asks for a kind of \"reverse nested query\" get more frequent. I'm not sure a solution with the current datastructures in Lucene would be possible, at least not in a trivial way, but if there are more cases like this in the future it is certainly worth digging a little deeper.","performed_via_github_app":null}]