{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/17934","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17934/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17934/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17934/events","html_url":"https://github.com/elastic/elasticsearch/issues/17934","id":150431706,"node_id":"MDU6SXNzdWUxNTA0MzE3MDY=","number":17934,"title":"Detect Catastrophic backtracking when using the pattern_replace char_filter","user":{"login":"tomfotherby","id":140179,"node_id":"MDQ6VXNlcjE0MDE3OQ==","avatar_url":"https://avatars0.githubusercontent.com/u/140179?v=4","gravatar_id":"","url":"https://api.github.com/users/tomfotherby","html_url":"https://github.com/tomfotherby","followers_url":"https://api.github.com/users/tomfotherby/followers","following_url":"https://api.github.com/users/tomfotherby/following{/other_user}","gists_url":"https://api.github.com/users/tomfotherby/gists{/gist_id}","starred_url":"https://api.github.com/users/tomfotherby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomfotherby/subscriptions","organizations_url":"https://api.github.com/users/tomfotherby/orgs","repos_url":"https://api.github.com/users/tomfotherby/repos","events_url":"https://api.github.com/users/tomfotherby/events{/privacy}","received_events_url":"https://api.github.com/users/tomfotherby/received_events","type":"User","site_admin":false},"labels":[{"id":142001965,"node_id":"MDU6TGFiZWwxNDIwMDE5NjU=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Analysis","name":":Search/Analysis","color":"0e8a16","default":false,"description":"How text is split into tokens"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-04-22T17:48:34Z","updated_at":"2016-04-26T09:42:32Z","closed_at":"2016-04-26T09:42:32Z","author_association":"NONE","active_lock_reason":null,"body":"I'm using the [Pattern Replace Char Filter](https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-pattern-replace-charfilter.html) to filter out urls from my query text before it is tokenised. But I found that some input strings cause ElasticSearch to crash - It would be good if ElasticSearch could timeout or detect problems with the regexp instead of \"hanging\" forever (slowly eating more CPU and memory).\n\n---\n## Example\n\n``` php\n// Character filters are used to \"tidy up\" a string *before* it is tokenized.\n'char_filter' => [\n    'url_removal_pattern' => [\n        'type'        => 'pattern_replace',\n        'pattern'     => '(?mi)\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:\\'\".,<>?«»“”‘’]))',\n        'replacement' => '',\n    ],\n```\n\nThis filter was working fine for some weeks until suddenly ElasticSearch started crashing. We found someone was trying to do a javascript injection attack in our search box.\n\nI pasted the regex and the attack string into https://regex101.com \n- Regexp: \n  - `(?mi)\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s!()\\[\\]{};:\\'\".,<>?«»“”‘’]))`\n- Test string: \n  - `twitter.com/widgets.js\\\";fjs.parentNode.insertBefore(js,fjs);}}(document,\\\"script\\\",\\\"twitter-wjs\\\"`\n\nhttps://regex101.com shows the problem to be \"Catastrophic backtracking\"\n\n> Catastrophic backtracking has been detected and the execution of your expression has been halted. To find out more what this is, please read the following article: [Runaway Regular Expressions](http://www.regular-expressions.info/catastrophic.html).\n\nIt would be great if ElasticSearch could detect \"Catastrophic backtracking\" and throw a error. It would be great if there was a parameter on `pattern_replace` to provide a timeout, any queries that go over this timeout would just not match, rather than cause a hang.\n\n---\n\nAs an aside, I created a unit test for our PHP application that uses the same regexp and test string. (PHP can understand the same regexp, even though it's obviously for Java in the ElasticSearch case) . Interestingly in php, the regex results in `null` which is the documented response of [preg_replace](http://php.net/manual/en/function.preg-replace.php) when a error occurs. If PHP can return a error rather than crashing - surely ElasticSearch can too :trollface: ?\n\n``` php\nnamespace app\\tests\\unit;\nuse \\yii\\codeception\\TestCase;\n\nclass TagsControllerTest extends TestCase\n{\n    public function testRegexForURLDetection()\n    {\n        $regex = '(?mi)\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:\\'\".,<>?«»“”‘’]))';\n        // Test the Catastrophic backtracking problem\n        $testString = \"twitter.com/widgets.js\\\";fjs.parentNode.insertBefore(js,fjs);}}(document,\\\"script\\\",\\\"twitter-wjs\\\"\";\n        // This shows the regex is not working for our test string - it gives null but should give 'hello '\n        $this->assertEquals(null, preg_replace(\"/$regex/\", '', \"hello $testString\"));\n    }\n}\n```\n","closed_by":{"login":"tomfotherby","id":140179,"node_id":"MDQ6VXNlcjE0MDE3OQ==","avatar_url":"https://avatars0.githubusercontent.com/u/140179?v=4","gravatar_id":"","url":"https://api.github.com/users/tomfotherby","html_url":"https://github.com/tomfotherby","followers_url":"https://api.github.com/users/tomfotherby/followers","following_url":"https://api.github.com/users/tomfotherby/following{/other_user}","gists_url":"https://api.github.com/users/tomfotherby/gists{/gist_id}","starred_url":"https://api.github.com/users/tomfotherby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomfotherby/subscriptions","organizations_url":"https://api.github.com/users/tomfotherby/orgs","repos_url":"https://api.github.com/users/tomfotherby/repos","events_url":"https://api.github.com/users/tomfotherby/events{/privacy}","received_events_url":"https://api.github.com/users/tomfotherby/received_events","type":"User","site_admin":false},"performed_via_github_app":null}