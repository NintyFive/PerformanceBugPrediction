{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/14593","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14593/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14593/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14593/events","html_url":"https://github.com/elastic/elasticsearch/issues/14593","id":115593549,"node_id":"MDU6SXNzdWUxMTU1OTM1NDk=","number":14593,"title":"Add shard allocation explain API to explain why shards are (or aren't) UNASSIGNED","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"labels":[{"id":837246479,"node_id":"MDU6TGFiZWw4MzcyNDY0Nzk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Allocation","name":":Distributed/Allocation","color":"0e8a16","default":false,"description":"All issues relating to the decision making around placing a shard (both master logic & on the nodes)"},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null},{"id":110557212,"node_id":"MDU6TGFiZWwxMTA1NTcyMTI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/high%20hanging%20fruit","name":"high hanging fruit","color":"fc6149","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"assignees":[{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false}],"milestone":null,"comments":12,"created_at":"2015-11-06T21:26:11Z","updated_at":"2018-02-14T14:05:04Z","closed_at":"2016-03-28T22:07:10Z","author_association":"MEMBER","active_lock_reason":null,"body":"# Idea<a id=\"sec-1\" name=\"sec-1\"></a>\n\nRelates to a comment on [#8606](https://github.com/elastic/elasticsearch/issues/8686) and supersedes [#14405](https://github.com/elastic/elasticsearch/issues/14405).\n\nWe currently have the `/_cluster/reroute` API, that, with the `explain` and\n`dry_run` parameters allow a user to manually specify an allocation command and\nget back an explanation for why that shard can or can not undergo the requested\nallocation. This is useful, however, it requires a user to know which node a\nshard should be on, and to construct an allocation command for the shard.\n\nI would like to build an API to answer one of the most often asked questions:\n\"_Why is my shard UNASSIGNED?_\"\n\nInstead of it being shard and node specific, I envision an API that looks like:\n\n```\nGET /_cluster/allocation/explain\n{\n  \"index\": \"myindex\"\n  \"shard\": 0,\n  \"primary\": false\n}\n```\n\nWhich is basically asking \"explain the allocation for a replica of shard 0 for\nthe 'myindex' index\".\n\nHere's an idea of how I'd like the response to look:\n\n```\n{\n    \"shard\": {\n        \"index\": \"myindex\"\n        \"shard\": 0,\n        \"primary\": false\n    },\n    \"cluster_info\": {\n        \"nodes\": {\n            \"nodeuuid1\": {\n                \"lowest_usage\": {\n                    \"path\": \"/var/data1\",\n                    \"free_bytes\": 1000,\n                    \"used_bytes\": 400,\n                    \"total_bytes\": 1400,\n                    \"free_disk_percentage\": \"71.3%\"\n                    \"used_disk_percentage\": \"28.6%\"\n                },\n                \"highest_usage\": {\n                    \"path\": \"/var/data2\",\n                    \"free_bytes\": 1200,\n                    \"used_bytes\": 600,\n                    \"total_bytes\": 1800,\n                    \"free_disk_percentage\": \"66.6%\"\n                    \"used_disk_percentage\": \"33.3%\"\n                }\n            },\n            \"nodeuuid2\": {\n                \"lowest_usage\": {\n                    \"path\": \"/var/data1\",\n                    \"free_bytes\": 1000,\n                    \"used_bytes\": 400,\n                    \"total_bytes\": 1400,\n                    \"free_disk_percentage\": \"71.3%\"\n                    \"used_disk_percentage\": \"28.6%\"\n                },\n                \"highest_usage\": {\n                    \"path\": \"/var/data2\",\n                    \"free_bytes\": 1200,\n                    \"used_bytes\": 600,\n                    \"total_bytes\": 1800,\n                    \"free_disk_percentage\": \"66.6%\"\n                    \"used_disk_percentage\": \"33.3%\"\n                }\n            },\n            \"nodeuuid3\": {\n                \"lowest_usage\": {\n                    \"path\": \"/var/data1\",\n                    \"free_bytes\": 1000,\n                    \"used_bytes\": 400,\n                    \"total_bytes\": 1400,\n                    \"free_disk_percentage\": \"71.3%\"\n                    \"used_disk_percentage\": \"28.6%\"\n                },\n                \"highest_usage\": {\n                    \"path\": \"/var/data2\",\n                    \"free_bytes\": 1200,\n                    \"used_bytes\": 600,\n                    \"total_bytes\": 1800,\n                    \"free_disk_percentage\": \"66.6%\"\n                    \"used_disk_percentage\": \"33.3%\"\n                }\n            }\n        },\n        \"shard_sizes\": {\n            \"[myindex][0][P]\": 1228718,\n            \"[myindex][0][R]\": 1231289,\n            \"[myindex][1][P]\": 1248718,\n            \"[myindex][1][R]\": 1298718,\n        }\n    },\n    \"nodes\": {\n        \"nodeuuid1\": {\n            \"final_decision\": \"NO\"\n            \"decisions\": [\n                {\n                    \"decider\" : \"same_shard\",\n                    \"decision\" : \"NO\",\n                    \"explanation\" : \"shard cannot be allocated on same node [JZU4UIPFQtWn34FyAH6VoQ] it already exists on\"\n                },\n                {\n                    \"decider\" : \"snapshot_in_progress\",\n                    \"decision\" : \"NO\",\n                    \"explanation\" : \"a snapshot is in progress\"\n                }\n            ],\n            \"weight\": 1.9\n        }\n        \"nodeuuid2\": {\n            \"final_decision\": \"NO\"\n            \"decisions\": [\n                {\n                    \"decider\" : \"node_version\",\n                    \"decision\" : \"NO\",\n                    \"explanation\" : \"target node version [1.4.0] is older than source node version [1.7.3]\"\n                }\n            ],\n            \"weight\": 1.3\n        }\n        \"nodeuuid3\": {\n            \"final_decision\": \"YES\"\n            \"decisions\": [],\n            \"weight\": 0.9\n        }\n    }\n}\n```\n\nBreaking down the parts:\n## `shard`<a id=\"sec-1-1\" name=\"sec-1-1\"></a>\n\nThe same information passed into the request, so it is contained in the request\nitself as well.\n## `cluster_info`<a id=\"sec-1-2\" name=\"sec-1-2\"></a>\n\nThis roughly relates to https://github.com/elastic/elasticsearch/issues/14405,\nhowever, I realized this API is not node-specific, so putting it in nodes' stats\nAPI doesn't make sense. Instead, it's master-only information used for\nallocation. Since this is gathered and used for allocation, it makes sense to\nexpose it here since it influences the final decision.\n## `nodes`<a id=\"sec-1-3\" name=\"sec-1-3\"></a>\n\nThis is a map where each key is the node uuid (should probably include the node\nname as well to be helpful). It has sub keys:\n### `final_decision`<a id=\"sec-1-3-1\" name=\"sec-1-3-1\"></a>\n\nA simple \"YES\" or \"NO\" for whether the shard can currently be allocated on this\nnode.\n### `decisions`<a id=\"sec-1-3-2\" name=\"sec-1-3-2\"></a>\n\nA list of all the \"NO\" decisions preventing allocation on this node. I could see\na flag being added to include all the \"YES\" decisions, but I think it should\ndefault to showing \"NO\" only to prevent it being too verbose.\n### `weight`<a id=\"sec-1-3-3\" name=\"sec-1-3-3\"></a>\n\nI'd like to change the `ShardAllocator` interface to add the ability to \"weigh\"\na shard for a node, with whatever criteria it usually balances with. For\nexample, with the `BalancedShardsAllocator`, the weight would be the calculation\nbased on the number of shards for the index as well as the shard count.\n\nI could see this being useful for answering the question \"Okay, if all the\ndecisions where 'YES', where would this shard likely end up?\".\n\nIt might be trickier to implement, but it could be added on at a later time.\n# Conclusion<a id=\"sec-2\" name=\"sec-2\"></a>\n\nI think this would go a long way towards helping users understand from a\ncluster-level (instead of a single node-level) perspective why their shard can\nor cannot be allocated.\n\nThoughts and feedback welcome! This is potentially a non-trivial amount of work\nso I wanted to see what people thought before spending time implementing it.\n","closed_by":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"performed_via_github_app":null}