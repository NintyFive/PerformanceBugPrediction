{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/27984","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27984/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27984/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27984/events","html_url":"https://github.com/elastic/elasticsearch/issues/27984","id":284456133,"node_id":"MDU6SXNzdWUyODQ0NTYxMzM=","number":27984,"title":"Sniffer.sniffOnFailure performs blocking request on AsyncClient callback, freezing all subsequent requests until it fails","user":{"login":"reembs","id":3320973,"node_id":"MDQ6VXNlcjMzMjA5NzM=","avatar_url":"https://avatars0.githubusercontent.com/u/3320973?v=4","gravatar_id":"","url":"https://api.github.com/users/reembs","html_url":"https://github.com/reembs","followers_url":"https://api.github.com/users/reembs/followers","following_url":"https://api.github.com/users/reembs/following{/other_user}","gists_url":"https://api.github.com/users/reembs/gists{/gist_id}","starred_url":"https://api.github.com/users/reembs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reembs/subscriptions","organizations_url":"https://api.github.com/users/reembs/orgs","repos_url":"https://api.github.com/users/reembs/repos","events_url":"https://api.github.com/users/reembs/events{/privacy}","received_events_url":"https://api.github.com/users/reembs/received_events","type":"User","site_admin":false},"labels":[{"id":407508641,"node_id":"MDU6TGFiZWw0MDc1MDg2NDE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Java%20Low%20Level%20REST%20Client","name":":Core/Features/Java Low Level REST Client","color":"0e8a16","default":false,"description":"Minimal dependencies Java Client for Elasticsearch"}],"state":"closed","locked":false,"assignee":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"assignees":[{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2017-12-25T15:44:48Z","updated_at":"2018-03-13T13:17:10Z","closed_at":"2018-03-13T13:17:10Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (5.5.3):\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version**: Java HotSpot(TM) 64-Bit Server VM (build 25.65-b01, mixed mode)\r\n\r\n**OS version**: Darwin MacBook-Pro-2.local 17.3.0 Darwin Kernel Version 17.3.0: Thu Nov  9 18:09:22 PST 2017; root:xnu-4570.31.3~1/RELEASE_X86_64 x86_64\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nInitializing the RestClient in the following manner (using SniffOnFailureListener):\r\n```java\r\nSniffOnFailureListener sniffOnFailureListener = new SniffOnFailureListener();\r\n\r\nRestClientBuilder builder = RestClient.builder(Iterables.toArray(hosts, HttpHost.class))\r\n    .setMaxRetryTimeoutMillis(timeoutInMillis)\r\n    .setFailureListener(sniffOnFailureListener);\r\n\r\nRestClient restClient = builder.build();\r\n\r\nSniffer sniffer = Sniffer.builder(restClient)\r\n    .setSniffIntervalMillis(SNIFFING_INTERVAL)\r\n    .build();\r\n\r\nsniffOnFailureListener.setSniffer(sniffer);\r\n```\r\n\r\nCauses a thread race and freeze due to lock in Apache AsyncHttpClient when cluster nodes terminate.\r\n\r\nThe issue seems to be at ```org.elasticsearch.client.sniff.Sniffer#sniffOnFailure``` [line](https://github.com/elastic/elasticsearch/blob/master/client/sniffer/src/main/java/org/elasticsearch/client/sniff/Sniffer.java#L64). This method invokes the sniffing process in a call stack that originates in the Async event loop's failure() callback. This blocking on the async HTTP client thread blocks all other requests to that HTTP client indefinitely (no timeout) until the sniffing request times out by itself. \r\n\r\nThread dump in blocked state:\r\n\r\n```\r\n\"pool-7-thread-1\" #68 prio=5 os_prio=31 tid=0x00007fbfd2b22000 nid=0x14703 waiting on condition [0x0000700010ee6000]\r\n   java.lang.Thread.State: TIMED_WAITING (parking)\r\n\tat sun.misc.Unsafe.park(Native Method)\r\n\t- parking to wait for  <0x00000007bfb08000> (a java.util.concurrent.CountDownLatch$Sync)\r\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1037)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)\r\n\tat java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)\r\n\tat org.elasticsearch.client.RestClient$SyncResponseListener.get(RestClient.java:659)\r\n\tat org.elasticsearch.client.RestClient.performRequest(RestClient.java:219)\r\n\tat org.elasticsearch.client.RestClient.performRequest(RestClient.java:191)\r\n\tat org.elasticsearch.client.RestClient.performRequest(RestClient.java:170)\r\n\tat org.elasticsearch.client.sniff.ElasticsearchHostsSniffer.sniffHosts(ElasticsearchHostsSniffer.java:93)\r\n\tat org.elasticsearch.client.sniff.Sniffer$Task.sniff(Sniffer.java:113)\r\n\tat org.elasticsearch.client.sniff.Sniffer$Task.sniffOnFailure(Sniffer.java:107)\r\n\tat org.elasticsearch.client.sniff.Sniffer.sniffOnFailure(Sniffer.java:59)\r\n\tat org.elasticsearch.client.sniff.SniffOnFailureListener.onFailure(SniffOnFailureListener.java:62)\r\n\tat org.elasticsearch.client.RestClient.onFailure(RestClient.java:491)\r\n\tat org.elasticsearch.client.RestClient.access$400(RestClient.java:89)\r\n\tat org.elasticsearch.client.RestClient$1.failed(RestClient.java:374)\r\n\tat org.apache.http.concurrent.BasicFuture.failed(BasicFuture.java:134)\r\n\tat org.apache.http.impl.nio.client.AbstractClientExchangeHandler.failed(AbstractClientExchangeHandler.java:419)\r\n\tat org.apache.http.impl.nio.client.AbstractClientExchangeHandler.connectionRequestFailed(AbstractClientExchangeHandler.java:335)\r\n\tat org.apache.http.impl.nio.client.AbstractClientExchangeHandler.access$100(AbstractClientExchangeHandler.java:62)\r\n\tat org.apache.http.impl.nio.client.AbstractClientExchangeHandler$1.failed(AbstractClientExchangeHandler.java:378)\r\n\tat org.apache.http.concurrent.BasicFuture.failed(BasicFuture.java:134)\r\n\tat org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalPoolEntryCallback.failed(PoolingNHttpClientConnectionManager.java:504)\r\n\tat org.apache.http.concurrent.BasicFuture.failed(BasicFuture.java:134)\r\n\tat org.apache.http.nio.pool.RouteSpecificPool.timeout(RouteSpecificPool.java:168)\r\n\tat org.apache.http.nio.pool.AbstractNIOConnPool.requestTimeout(AbstractNIOConnPool.java:561)\r\n\tat org.apache.http.nio.pool.AbstractNIOConnPool$InternalSessionRequestCallback.timeout(AbstractNIOConnPool.java:822)\r\n\tat org.apache.http.impl.nio.reactor.SessionRequestImpl.timeout(SessionRequestImpl.java:183)\r\n\t- locked <0x00000007bfb06e50> (a org.apache.http.impl.nio.reactor.SessionRequestImpl)\r\n\tat org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processTimeouts(DefaultConnectingIOReactor.java:210)\r\n\tat org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents(DefaultConnectingIOReactor.java:155)\r\n\tat org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute(AbstractMultiworkerIOReactor.java:348)\r\n\tat org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.execute(PoolingNHttpClientConnectionManager.java:192)\r\n\tat org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase$1.run(CloseableHttpAsyncClientBase.java:64)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\"KumulusThread-18\" #33 daemon prio=5 os_prio=31 tid=0x00007fbfd1157000 nid=0x9203 waiting on condition [0x000070000eb7d000]\r\n   java.lang.Thread.State: WAITING (parking)\r\n\tat sun.misc.Unsafe.park(Native Method)\r\n\t- parking to wait for  <0x00000007606c1450> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:870)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1199)\r\n\tat java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:209)\r\n\tat java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:285)\r\n\tat org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:272)\r\n\tat org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:266)\r\n\tat org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:363)\r\n\tat org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:125)\r\n\tat org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)\r\n\tat org.elasticsearch.client.RestClient.performRequestAsync(RestClient.java:343)\r\n\tat org.elasticsearch.client.RestClient.performRequestAsync(RestClient.java:325)\r\n\tat org.elasticsearch.client.RestClient.performRequestAsync(RestClient.java:268)\r\n\tat com.forter.utils.storm.bolts.elasticsearch.AbstractElasticsearchRestBolt.performRequest(AbstractElasticsearchRestBolt.java:115)\r\n\tat com.forter.utils.storm.bolts.elasticsearch.AbstractElasticsearchRestBolt.execute(AbstractElasticsearchRestBolt.java:142)\r\n\tat com.forter.utils.storm.builder.wrappers.impl.BaseBasicBoltWrapperFactory$ForterBasicBoltExecutor.execute(BaseBasicBoltWrapperFactory.java:64)\r\n\tat com.forter.utils.storm.bolts.decorators.RichBoltDecorator.execute(RichBoltDecorator.java:28)\r\n\tat com.forter.utils.storm.bolts.decorators.RichBoltDecorator.execute(RichBoltDecorator.java:28)\r\n\tat com.forter.utils.storm.builder.wrappers.ReadyStreamWrapperFactory$ReadyStreamWrapper.execute(ReadyStreamWrapperFactory.java:169)\r\n\tat com.forter.utils.storm.bolts.decorators.RichBoltDecorator.execute(RichBoltDecorator.java:28)\r\n\tat com.forter.utils.storm.bolts.decorators.RichBoltDecorator.execute(RichBoltDecorator.java:28)\r\n\tat com.forter.utils.storm.builder.wrappers.DebugBoltWrapperFactory$DebugBoltWrapper.execute(DebugBoltWrapperFactory.java:50)\r\n\tat com.forter.utils.storm.bolts.decorators.RichBoltDecorator.execute(RichBoltDecorator.java:28)\r\n\tat com.forter.monitoring.MonitoredBolt.execute(MonitoredBolt.java:96)\r\n\tat com.forter.utils.storm.builder.wrappers.impl.MonitorBoltWrapperFactory$BrainTopologyMonitorBolt.execute(MonitorBoltWrapperFactory.java:253)\r\n\tat com.forter.utils.storm.bolts.decorators.RichBoltDecorator.execute(RichBoltDecorator.java:28)\r\n\tat org.xyro.kumulus.component.KumulusBolt.execute(KumulusBolt.kt:38)\r\n\tat org.xyro.kumulus.KumulusTopology.handleQueueItem(KumulusTopology.kt:229)\r\n\tat org.xyro.kumulus.KumulusTopology.access$handleQueueItem(KumulusTopology.kt:13)\r\n\tat org.xyro.kumulus.KumulusTopology$boltExecutionPool$1.invoke(KumulusTopology.kt:19)\r\n\tat org.xyro.kumulus.KumulusTopology$boltExecutionPool$1.invoke(KumulusTopology.kt:13)\r\n\tat org.xyro.kumulus.ExecutionPool.threadMain(ExecutionPool.kt:36)\r\n\tat org.xyro.kumulus.ExecutionPool.access$threadMain(ExecutionPool.kt:7)\r\n\tat org.xyro.kumulus.ExecutionPool$1.invoke(ExecutionPool.kt:18)\r\n\tat org.xyro.kumulus.ExecutionPool$1.invoke(ExecutionPool.kt:7)\r\n\tat org.xyro.kumulus.ExecutionPoolKt$sam$Runnable$8b513235.run(ExecutionPool.kt)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n```\r\n\r\n**Steps to reproduce**:\r\n\r\n- Create a cluster of any size\r\n- Execute a Java app using rest client as initialized above to index/search the cluster repeatedly with timeout 1s.\r\n- Terminate a cluster node\r\n\r\nExpected: the request execution using [performRequest](https://github.com/elastic/elasticsearch/blob/master/client/rest/src/main/java/org/elasticsearch/client/RestClient.java#L217) should not exceed ~1s\r\n\r\nActual: all calls to the rest-client after the onFailure sniffing method begins execution are blocked until the sniffing request that was caused by a previous request failure is timed-out. \r\n\r\n\r\n**Provide logs (if relevant)**:\r\n\r\n","closed_by":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"performed_via_github_app":null}