[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/444455518","html_url":"https://github.com/elastic/elasticsearch/issues/36251#issuecomment-444455518","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36251","id":444455518,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NDQ1NTUxOA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-12-05T11:37:18Z","updated_at":"2018-12-05T11:37:18Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-features","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/444514655","html_url":"https://github.com/elastic/elasticsearch/issues/36251#issuecomment-444514655","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36251","id":444514655,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NDUxNDY1NQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2018-12-05T14:59:07Z","updated_at":"2018-12-05T14:59:07Z","author_association":"CONTRIBUTOR","body":"I don't really *like* `assertWarnings` to be honest. I see it as a necessary evil when interacting with the `ThreadLocal` warnings. I just don't like interacting more with the thread local than I have to. I don't like how the warnings get \"bunched up\" and asserted at the end. Again, I don't think we have much choice for server side code. But for integration tests that work with external Elasticsearch clusters, I'd really prefer to assert the warnings on the response objects if possible, like we do with the yaml test framework. At least, theoretically like we do with the yaml test framework.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/444564221","html_url":"https://github.com/elastic/elasticsearch/issues/36251#issuecomment-444564221","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36251","id":444564221,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NDU2NDIyMQ==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2018-12-05T17:08:25Z","updated_at":"2018-12-05T17:08:25Z","author_association":"CONTRIBUTOR","body":"> I'd really prefer to assert the warnings on the response objects if possible,\r\n\r\nHLRC APIs currently return either existing \"XxxxResponse\" classes used in `server` or an equivalent HLRC-only \"XxxxResponse\" class. Long term the idea is to have no dependencies on server classes. So currently there is no common HLRC Response base class where \"warnings\" could be a common property. Until we make such a cutover we're stuck with ThreadLocals I expect.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/444869462","html_url":"https://github.com/elastic/elasticsearch/issues/36251#issuecomment-444869462","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36251","id":444869462,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NDg2OTQ2Mg==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2018-12-06T13:25:12Z","updated_at":"2018-12-06T13:25:12Z","author_association":"CONTRIBUTOR","body":"After talking with Luca we came up with what looks like a better approach that works for LLRC and HLRC clients - see  https://github.com/elastic/elasticsearch/pull/36307","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/445842553","html_url":"https://github.com/elastic/elasticsearch/issues/36251#issuecomment-445842553","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36251","id":445842553,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NTg0MjU1Mw==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2018-12-10T14:52:44Z","updated_at":"2018-12-10T14:52:44Z","author_association":"CONTRIBUTOR","body":"I closed https://github.com/elastic/elasticsearch/pull/36307 which assumes single-version clusters.\r\nNik's new `WarningsHandler` https://github.com/elastic/elasticsearch/pull/36345 now provides the means for more detailed inspection of warnings.\r\nWe can build on this with helper methods in ESRestTestCase to list the warnings we expect. What to expect will depend on whether the test is targeting a cluster all running the same-as-test-class version  or whether it is a mixed-version cluster. The single-version cluster can list _required_ warnings while the mixed-version can only list _allowed_ warnings. EsRestTestCase has a `nodeVersions` set which we can use to figure out the single-vs-mixed version target cluster","performed_via_github_app":null}]