[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49993739","html_url":"https://github.com/elastic/elasticsearch/issues/7008#issuecomment-49993739","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7008","id":49993739,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5OTkzNzM5","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2014-07-24T10:55:47Z","updated_at":"2014-07-24T10:55:47Z","author_association":"CONTRIBUTOR","body":"sounds useful - do you wanna come up with a PR?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/50002512","html_url":"https://github.com/elastic/elasticsearch/issues/7008#issuecomment-50002512","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7008","id":50002512,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMDAyNTEy","user":{"login":"bobrik","id":89186,"node_id":"MDQ6VXNlcjg5MTg2","avatar_url":"https://avatars0.githubusercontent.com/u/89186?v=4","gravatar_id":"","url":"https://api.github.com/users/bobrik","html_url":"https://github.com/bobrik","followers_url":"https://api.github.com/users/bobrik/followers","following_url":"https://api.github.com/users/bobrik/following{/other_user}","gists_url":"https://api.github.com/users/bobrik/gists{/gist_id}","starred_url":"https://api.github.com/users/bobrik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bobrik/subscriptions","organizations_url":"https://api.github.com/users/bobrik/orgs","repos_url":"https://api.github.com/users/bobrik/repos","events_url":"https://api.github.com/users/bobrik/events{/privacy}","received_events_url":"https://api.github.com/users/bobrik/received_events","type":"User","site_admin":false},"created_at":"2014-07-24T12:33:46Z","updated_at":"2014-07-24T12:33:46Z","author_association":"CONTRIBUTOR","body":"I'm not a java programmer, I can only come up with something like this:\n\n```\n[~] % curl -s http://127.0.0.1:9200/_cat/indices?h=index,fm,fcm,im,pm,sm,siwm,svvm,tm\nwhatever 0b 0b 0b -1b 6.6kb 0b 6.6kb\n```\n\n``` diff\ndiff --git a/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java b/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java\nindex a4dd483..744209d 100644\n--- a/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java\n+++ b/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java\n@@ -24,6 +24,7 @@ import org.elasticsearch.common.Nullable;\n import org.elasticsearch.common.io.stream.StreamInput;\n import org.elasticsearch.common.io.stream.StreamOutput;\n import org.elasticsearch.common.io.stream.Streamable;\n+import org.elasticsearch.common.unit.ByteSizeValue;\n import org.elasticsearch.common.xcontent.ToXContent;\n import org.elasticsearch.common.xcontent.XContentBuilder;\n import org.elasticsearch.index.cache.filter.FilterCacheStats;\n@@ -463,6 +464,18 @@ public class CommonStats implements Streamable, ToXContent {\n         return stats;\n     }\n\n+    public ByteSizeValue getTotalMemory() {\n+        long size = this.getFieldData().getMemorySizeInBytes() +\n+                this.getFilterCache().getMemorySizeInBytes() +\n+                this.getIdCache().getMemorySizeInBytes() +\n+                this.getPercolate().getMemorySizeInBytes() +\n+                this.getSegments().getMemoryInBytes() +\n+                this.getSegments().getIndexWriterMemoryInBytes() +\n+                this.getSegments().getVersionMapMemoryInBytes();\n+\n+        return new ByteSizeValue(size);\n+    }\n+\n     @Override\n     public void readFrom(StreamInput in) throws IOException {\n         if (in.readBoolean()) {\ndiff --git a/src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java b/src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java\nindex 2001a4b..c771787 100644\n--- a/src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java\n+++ b/src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java\n@@ -264,6 +264,8 @@ public class RestIndicesAction extends AbstractCatAction {\n         table.addCell(\"suggest.total\", \"sibling:pri;alias:suto,suggestTotal;default:false;text-align:right;desc:number of suggest ops\");\n         table.addCell(\"pri.suggest.total\", \"default:false;text-align:right;desc:number of suggest ops\");\n\n+        table.addCell(\"memory.total\", \"sibling:pri;alias:tm,memoryTotal;default:false;text-align:right;desc:total used memory\");\n+        table.addCell(\"pri.memory.total\", \"default:false;text-align:right;desc:total user memory\");\n\n         table.endHeaders();\n         return table;\n@@ -443,6 +445,9 @@ public class RestIndicesAction extends AbstractCatAction {\n             table.addCell(indexStats == null ? null : indexStats.getTotal().getSuggest().getCount());\n             table.addCell(indexStats == null ? null : indexStats.getPrimaries().getSuggest().getCount());\n\n+            table.addCell(indexStats == null ? null : indexStats.getTotal().getTotalMemory());\n+            table.addCell(indexStats == null ? null : indexStats.getPrimaries().getTotalMemory());\n+\n             table.endRow();\n         }\n\n\n```\n\nIs that ok?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/58347515","html_url":"https://github.com/elastic/elasticsearch/issues/7008#issuecomment-58347515","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7008","id":58347515,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MzQ3NTE1","user":{"login":"bobrik","id":89186,"node_id":"MDQ6VXNlcjg5MTg2","avatar_url":"https://avatars0.githubusercontent.com/u/89186?v=4","gravatar_id":"","url":"https://api.github.com/users/bobrik","html_url":"https://github.com/bobrik","followers_url":"https://api.github.com/users/bobrik/followers","following_url":"https://api.github.com/users/bobrik/following{/other_user}","gists_url":"https://api.github.com/users/bobrik/gists{/gist_id}","starred_url":"https://api.github.com/users/bobrik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bobrik/subscriptions","organizations_url":"https://api.github.com/users/bobrik/orgs","repos_url":"https://api.github.com/users/bobrik/repos","events_url":"https://api.github.com/users/bobrik/events{/privacy}","received_events_url":"https://api.github.com/users/bobrik/received_events","type":"User","site_admin":false},"created_at":"2014-10-08T12:07:17Z","updated_at":"2014-10-08T12:07:17Z","author_association":"CONTRIBUTOR","body":"Awesome!\n","performed_via_github_app":null}]