{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/64836","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/64836/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/64836/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/64836/events","html_url":"https://github.com/elastic/elasticsearch/issues/64836","id":739428879,"node_id":"MDU6SXNzdWU3Mzk0Mjg4Nzk=","number":64836,"title":"Search API: Allow callers to determine both 'aggregated total' and 'post-filter total' hit counts","user":{"login":"jayaddison","id":55152140,"node_id":"MDQ6VXNlcjU1MTUyMTQw","avatar_url":"https://avatars0.githubusercontent.com/u/55152140?v=4","gravatar_id":"","url":"https://api.github.com/users/jayaddison","html_url":"https://github.com/jayaddison","followers_url":"https://api.github.com/users/jayaddison/followers","following_url":"https://api.github.com/users/jayaddison/following{/other_user}","gists_url":"https://api.github.com/users/jayaddison/gists{/gist_id}","starred_url":"https://api.github.com/users/jayaddison/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jayaddison/subscriptions","organizations_url":"https://api.github.com/users/jayaddison/orgs","repos_url":"https://api.github.com/users/jayaddison/repos","events_url":"https://api.github.com/users/jayaddison/events{/privacy}","received_events_url":"https://api.github.com/users/jayaddison/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":1967499105,"node_id":"MDU6TGFiZWwxOTY3NDk5MTA1","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Analytics","name":"Team:Analytics","color":"fef2c0","default":false,"description":"Meta label for analytics/geo team"},{"id":929267538,"node_id":"MDU6TGFiZWw5MjkyNjc1Mzg=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/team-discuss","name":"team-discuss","color":"fbca04","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-11-09T22:55:58Z","updated_at":"2020-11-18T20:56:23Z","closed_at":"2020-11-18T19:13:47Z","author_association":"NONE","active_lock_reason":null,"body":"NB: I've searched through existing GitHub issues and couldn't find this as an existing feature request, though #16021 touches on some similar ground.\r\n\r\n**Context**\r\nA search application which uses aggregations to provide 'faceted search' over a set of documents - in particular aggregations are used to bucket the website domains (terms) that each document was retrieved from.\r\n\r\nUsers are able to select/deselect individual domains to be displayed, and each time they do, the application invokes a new search.  In order to keep the aggregations 'stable' (meaning: the list of domains still includes entries the user has chosen to exclude), domain filtering is applied by [`using a post_filter`](https://github.com/openculinary/api/blob/95b3745d8b623d65d1a5df21cb53e345117ad693/reciperadar/search/recipes.py#L96-L108).\r\n\r\nThis works great, and in isolation meets the search requirements for the use case.\r\n\r\nHowever the application has one conflicting behaviour - it performs ['query rewriting'](https://hughewilliams.com/2012/03/19/query-rewriting-in-search-engines/) when a search returns an low number of hits.\r\n\r\nThis is implemented by inspecting the `hits.total.value` in the [Search API](https://www.elastic.co/guide/en/elasticsearch/reference/7.9/search-search.html) response - a total value that reflects the document count post-filtering.\r\n\r\n**Feature Request**\r\nThe feature request here is for an additional `hits.prefilter.count` (or better-named) field in the search response that would represent the *pre-filter* hit count -- or, to put it another way: the count of documents involved in the aggregation phase.\r\n\r\nNB: One alternative approach could be to add a raw `count` metric aggregation.  Callers could add that to the `aggs` in their search request, and it would include the aggregation-time document count.  I did look for a way to achieve this using existing metric aggregations, but I don't _think_ it's currently possible in an efficient manner.","closed_by":{"login":"jayaddison","id":55152140,"node_id":"MDQ6VXNlcjU1MTUyMTQw","avatar_url":"https://avatars0.githubusercontent.com/u/55152140?v=4","gravatar_id":"","url":"https://api.github.com/users/jayaddison","html_url":"https://github.com/jayaddison","followers_url":"https://api.github.com/users/jayaddison/followers","following_url":"https://api.github.com/users/jayaddison/following{/other_user}","gists_url":"https://api.github.com/users/jayaddison/gists{/gist_id}","starred_url":"https://api.github.com/users/jayaddison/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jayaddison/subscriptions","organizations_url":"https://api.github.com/users/jayaddison/orgs","repos_url":"https://api.github.com/users/jayaddison/repos","events_url":"https://api.github.com/users/jayaddison/events{/privacy}","received_events_url":"https://api.github.com/users/jayaddison/received_events","type":"User","site_admin":false},"performed_via_github_app":null}