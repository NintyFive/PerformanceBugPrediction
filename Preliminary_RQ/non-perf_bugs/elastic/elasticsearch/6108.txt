{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/6108","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6108/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6108/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6108/events","html_url":"https://github.com/elastic/elasticsearch/issues/6108","id":33170681,"node_id":"MDU6SXNzdWUzMzE3MDY4MQ==","number":6108,"title":"Inner object with same name as type causes query issues","user":{"login":"rtkbkish","id":3708115,"node_id":"MDQ6VXNlcjM3MDgxMTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3708115?v=4","gravatar_id":"","url":"https://api.github.com/users/rtkbkish","html_url":"https://github.com/rtkbkish","followers_url":"https://api.github.com/users/rtkbkish/followers","following_url":"https://api.github.com/users/rtkbkish/following{/other_user}","gists_url":"https://api.github.com/users/rtkbkish/gists{/gist_id}","starred_url":"https://api.github.com/users/rtkbkish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rtkbkish/subscriptions","organizations_url":"https://api.github.com/users/rtkbkish/orgs","repos_url":"https://api.github.com/users/rtkbkish/repos","events_url":"https://api.github.com/users/rtkbkish/events{/privacy}","received_events_url":"https://api.github.com/users/rtkbkish/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-05-09T13:12:29Z","updated_at":"2014-05-09T13:14:46Z","closed_at":"2014-05-09T13:14:46Z","author_association":"NONE","active_lock_reason":null,"body":"If I have an inner object that has the same name as a type, then queries for that inner object will fail.\n\nThe workaround is to rename the type or the inner object, but the behaviour is confusing and misleading (and wrong).\n\nTo reproduce, create a new index, type and document:\ncurl -XPOST 'localhost:9200/test/flow/' -d '{\n  \"device\": {\n    \"id\": \"dummy\"\n  }\n}'\n\nQuerying for that document by device.id will work:\ncurl 'localhost:9200/test/_search?pretty' -d '{\n  \"query\":{\n    \"filtered\": {\n      \"filter\": {\n        \"term\": {\n          \"device.id\": \"dummy\"\n        }\n      }\n    }\n  }\n}'\n\nAdd a type with the same name as the inner object, AND containing an inner object with that name as well:\ncurl -XPOST 'localhost:9200/test/device/' -d '{\n  \"device\": {\n    \"id\": \"foo\"\n  }\n}'\n\nNow querying for the original document by device.id will fail:\n{\n  \"took\" : 0,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 0,\n    \"max_score\" : null,\n    \"hits\" : [ ]\n  }\n}\n\nRemoving the 'device' type will allow the original document to be queryable again:\ncurl -XDELETE 'localhost:9200/test/device'\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}