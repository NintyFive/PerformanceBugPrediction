[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/72121545","html_url":"https://github.com/elastic/elasticsearch/issues/9488#issuecomment-72121545","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9488","id":72121545,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMTIxNTQ1","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2015-01-29T22:56:27Z","updated_at":"2015-01-29T22:56:27Z","author_association":"MEMBER","body":"It sounds like a good idea but it might be really tricky to implement. Imagine somebody creates and deletes the repository with the same name several times in quick succession and repository creation takes long time. We would have to have some sort of repository creation/destruction pipeline to handle this properly. Even with the pipeline if somebody performs a snapshot right after repository creation we will have to hold the snapshot start until a proper repository is created. \n\nI think it might be more prudent to ensure that repository creation doesn't block. After we added repository verification, there is really no good reason for a repository to open a network connection during its initialization - it's possible that such connection will not be even used if a node doesn't have any primary shards. @dadoonet, @tlrx thoughts?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/72169931","html_url":"https://github.com/elastic/elasticsearch/issues/9488#issuecomment-72169931","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9488","id":72169931,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMTY5OTMx","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2015-01-30T08:39:04Z","updated_at":"2015-01-30T08:39:04Z","author_association":"MEMBER","body":"I agree with Igor, this sounds like a good idea but I'm not sure if we can implement it correctly right now. In a near future, maybe we could use a task management API like the one described in #6914 to pipe the repository creation/destruction and snapshot/restore task?\n\nAlso, I agree that the repository verification can take some time. This is usually a quick process but I experienced some latency/network problem while using it.\n\nI'm wondering if we can keep the repository creation process synchronous (ie on the cluster state update thread) and set a repository property like `verification_status: unverified`. Then make the verification process asynchronous, going from `unverified` to `executing` and finally `verified`. We may block snapshot requests on non verified repositories, as well as blocking repository creation/deletion.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/72202193","html_url":"https://github.com/elastic/elasticsearch/issues/9488#issuecomment-72202193","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9488","id":72202193,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMjAyMTkz","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2015-01-30T13:44:40Z","updated_at":"2015-01-30T13:44:40Z","author_association":"MEMBER","body":"> I think it might be more prudent to ensure that repository creation doesn't block.\n\n+1 to that. But we may not always control it, especially if people extend it. \n\n> This is usually a quick process but I experienced some latency/network problem while using it.\n\nFor what it's worth - I saw a 4 minute block. Causing all kind of secondary issues in the cluster.\n\n> I'm wondering if we can keep the repository creation process synchronous (ie on the cluster state update thread) and set a repository property like verification_status: unverified. Then make the verification process asynchronous, going from unverified to executing and finally verified. We may block snapshot requests on non verified repositories, as well as blocking repository creation/deletion.\n\nThat would be good, but I think it's not too far away from having a repository wrapper created by the framework upon cluster state updates and started async. If the repo is deleted while initializing we can mark the wrapper with a deleted flag which will cause it to immediately apply delete code once intialization is completed. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263079805","html_url":"https://github.com/elastic/elasticsearch/issues/9488#issuecomment-263079805","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9488","id":263079805,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzA3OTgwNQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-11-26T18:58:47Z","updated_at":"2016-11-26T18:58:47Z","author_association":"CONTRIBUTOR","body":"@imotov does this still need doing?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263302986","html_url":"https://github.com/elastic/elasticsearch/issues/9488#issuecomment-263302986","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9488","id":263302986,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzMwMjk4Ng==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2016-11-28T15:36:46Z","updated_at":"2016-11-28T15:36:46Z","author_association":"MEMBER","body":"@clintongormley I don't think anything changed in the last year. @tlrx, @abeyad what do you think?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263321806","html_url":"https://github.com/elastic/elasticsearch/issues/9488#issuecomment-263321806","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9488","id":263321806,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzMyMTgwNg==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2016-11-28T16:39:42Z","updated_at":"2016-11-28T16:39:42Z","author_association":"MEMBER","body":"I checked the code again and I don't think anything changed there... so it would be nice to implement any of the suggested solution.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263328815","html_url":"https://github.com/elastic/elasticsearch/issues/9488#issuecomment-263328815","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9488","id":263328815,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzMyODgxNQ==","user":{"login":"abeyad","id":1631297,"node_id":"MDQ6VXNlcjE2MzEyOTc=","avatar_url":"https://avatars2.githubusercontent.com/u/1631297?v=4","gravatar_id":"","url":"https://api.github.com/users/abeyad","html_url":"https://github.com/abeyad","followers_url":"https://api.github.com/users/abeyad/followers","following_url":"https://api.github.com/users/abeyad/following{/other_user}","gists_url":"https://api.github.com/users/abeyad/gists{/gist_id}","starred_url":"https://api.github.com/users/abeyad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abeyad/subscriptions","organizations_url":"https://api.github.com/users/abeyad/orgs","repos_url":"https://api.github.com/users/abeyad/repos","events_url":"https://api.github.com/users/abeyad/events{/privacy}","received_events_url":"https://api.github.com/users/abeyad/received_events","type":"User","site_admin":false},"created_at":"2016-11-28T17:03:30Z","updated_at":"2016-11-28T17:03:30Z","author_association":"CONTRIBUTOR","body":"The S3 and GCE repositories definitely makes network calls during initialization (which will occur on the cluster state update thread).  I don't see the same for the Azure repository though I could've missed it.  In any case, I like @tlrx 's proposed solution of handling repository verification asyc but unless we remove repository initialization itself outside of the cluster state update task, then we will have to require that all plugin developers know not to have any blocking operations like network calls executed in repository construction.  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/263336562","html_url":"https://github.com/elastic/elasticsearch/issues/9488#issuecomment-263336562","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9488","id":263336562,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MzMzNjU2Mg==","user":{"login":"abeyad","id":1631297,"node_id":"MDQ6VXNlcjE2MzEyOTc=","avatar_url":"https://avatars2.githubusercontent.com/u/1631297?v=4","gravatar_id":"","url":"https://api.github.com/users/abeyad","html_url":"https://github.com/abeyad","followers_url":"https://api.github.com/users/abeyad/followers","following_url":"https://api.github.com/users/abeyad/following{/other_user}","gists_url":"https://api.github.com/users/abeyad/gists{/gist_id}","starred_url":"https://api.github.com/users/abeyad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abeyad/subscriptions","organizations_url":"https://api.github.com/users/abeyad/orgs","repos_url":"https://api.github.com/users/abeyad/repos","events_url":"https://api.github.com/users/abeyad/events{/privacy}","received_events_url":"https://api.github.com/users/abeyad/received_events","type":"User","site_admin":false},"created_at":"2016-11-28T17:30:29Z","updated_at":"2016-11-28T17:30:29Z","author_association":"CONTRIBUTOR","body":"we could have a custom method like `onInit` that each repository implementation must override and implement, which would contain any blocking logic and called outside of the cluster state update thread.  Will have to think about it some more. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/374976117","html_url":"https://github.com/elastic/elasticsearch/issues/9488#issuecomment-374976117","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9488","id":374976117,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NDk3NjExNw==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2018-03-21T15:20:30Z","updated_at":"2018-03-21T15:20:30Z","author_association":"MEMBER","body":"We talked about this today with @ywelsch and this is still something we want to do. We think that the repository could be registered as it is today, but the existence of the filesystem/bucket/whatever could be delayed to the first access to the repository.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/443685370","html_url":"https://github.com/elastic/elasticsearch/issues/9488#issuecomment-443685370","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9488","id":443685370,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MzY4NTM3MA==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2018-12-03T11:56:18Z","updated_at":"2018-12-03T11:56:32Z","author_association":"MEMBER","body":"@ywelsch @tlrx I looked into this a bit and it looks like this has been done already in https://github.com/elastic/elasticsearch/pull/31606?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/443687932","html_url":"https://github.com/elastic/elasticsearch/issues/9488#issuecomment-443687932","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9488","id":443687932,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MzY4NzkzMg==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2018-12-03T12:06:34Z","updated_at":"2018-12-03T12:06:34Z","author_association":"CONTRIBUTOR","body":"@original-brownbear A follow-up to this is to make sure the master does not manipulate the list of repositories in the cluster state update task (it calls `registerRepository`). If that cluster state update fails to be published, the master will end up with a dangling repo. The cleaner way is to have the master just do `createRepository`, and this validation can even be done before submitting the cluster state update task. The master then updates the list of repositories in the same way as the other nodes, by applying the cluster state update task. Finally, this prevents concurrent writes to the list of repositories (the `repositories` field in RepositoriesService), as only the single cluster applier service thread will be updating the list of repos.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/443739545","html_url":"https://github.com/elastic/elasticsearch/issues/9488#issuecomment-443739545","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9488","id":443739545,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MzczOTU0NQ==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2018-12-03T15:00:04Z","updated_at":"2018-12-03T15:00:04Z","author_association":"MEMBER","body":"Done in https://github.com/elastic/elasticsearch/pull/36157 I think","performed_via_github_app":null}]