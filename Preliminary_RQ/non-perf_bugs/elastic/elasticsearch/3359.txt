{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3359","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3359/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3359/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3359/events","html_url":"https://github.com/elastic/elasticsearch/issues/3359","id":16975760,"node_id":"MDU6SXNzdWUxNjk3NTc2MA==","number":3359,"title":"[0.90.0, 0.90.2] Can't use empty replacement string in pattern_replace filter","user":{"login":"daliborfilus","id":195891,"node_id":"MDQ6VXNlcjE5NTg5MQ==","avatar_url":"https://avatars1.githubusercontent.com/u/195891?v=4","gravatar_id":"","url":"https://api.github.com/users/daliborfilus","html_url":"https://github.com/daliborfilus","followers_url":"https://api.github.com/users/daliborfilus/followers","following_url":"https://api.github.com/users/daliborfilus/following{/other_user}","gists_url":"https://api.github.com/users/daliborfilus/gists{/gist_id}","starred_url":"https://api.github.com/users/daliborfilus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daliborfilus/subscriptions","organizations_url":"https://api.github.com/users/daliborfilus/orgs","repos_url":"https://api.github.com/users/daliborfilus/repos","events_url":"https://api.github.com/users/daliborfilus/events{/privacy}","received_events_url":"https://api.github.com/users/daliborfilus/received_events","type":"User","site_admin":false},"labels":[{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":45109570,"node_id":"MDU6TGFiZWw0NTEwOTU3MA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.90.3","name":"v0.90.3","color":"DDDDDD","default":false,"description":null},{"id":37906111,"node_id":"MDU6TGFiZWwzNzkwNjExMQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.0.0.Beta1","name":"v1.0.0.Beta1","color":"DDDDDD","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"assignees":[{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2013-07-19T15:07:35Z","updated_at":"2013-07-19T17:14:36Z","closed_at":"2013-07-19T17:14:36Z","author_association":"NONE","active_lock_reason":null,"body":"After upgrading from 0.20.0.rc1 to 0.90.2, this happens when we use blank replacement string in pattern_replace filter:\n\n```\n...\norg.elasticsearch.indices.IndexCreationException: [xxx] failed to create index\n    at org.elasticsearch.indices.InternalIndicesService.createIndex(InternalIndicesService.java:382)\n    at org.elasticsearch.indices.cluster.IndicesClusterStateService.applyNewIndices(IndicesClusterStateService.java:296)\n    at org.elasticsearch.indices.cluster.IndicesClusterStateService.clusterChanged(IndicesClusterStateService.java:162)\n    at org.elasticsearch.cluster.service.InternalClusterService$2.run(InternalClusterService.java:321)\n    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:95)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n    at java.lang.Thread.run(Thread.java:636)\nCaused by: org.elasticsearch.ElasticSearchIllegalArgumentException: replacement is missing for [whitespace_remove] token filter of type 'pattern_replace'\n    at org.elasticsearch.index.analysis.PatternReplaceTokenFilterFactory.<init>(PatternReplaceTokenFilterFactory.java:54)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:532)\n    at org.elasticsearch.common.inject.DefaultConstructionProxyFactory$1.newInstance(DefaultConstructionProxyFactory.java:54)\n    at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:86)\n    at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:98)\n    at org.elasticsearch.common.inject.FactoryProxy.get(FactoryProxy.java:52)\n    at org.elasticsearch.common.inject.InjectorImpl$4$1.call(InjectorImpl.java:763)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:819)\n    at org.elasticsearch.common.inject.InjectorImpl$4.get(InjectorImpl.java:759)\n    at org.elasticsearch.common.inject.assistedinject.FactoryProvider2.invoke(FactoryProvider2.java:221)\n    at $Proxy19.create(Unknown Source)\n    at org.elasticsearch.index.analysis.AnalysisService.<init>(AnalysisService.java:152)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:532)\n    at org.elasticsearch.common.inject.DefaultConstructionProxyFactory$1.newInstance(DefaultConstructionProxyFactory.java:54)\n    at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:86)\n    at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:98)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:45)\n    at org.elasticsearch.common.inject.InjectorImpl.callInContext(InjectorImpl.java:819)\n    at org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:42)\n    at org.elasticsearch.common.inject.Scopes$1$1.get(Scopes.java:57)\n    at org.elasticsearch.common.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)\n    at org.elasticsearch.common.inject.SingleParameterInjector.inject(SingleParameterInjector.java:42)\n    at org.elasticsearch.common.inject.SingleParameterInjector.getAll(SingleParameterInjector.java:66)\n    at org.elasticsearch.common.inject.ConstructorInjector.construct(ConstructorInjector.java:85)\n    at org.elasticsearch.common.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:98)\n    at\n...\n```\n\nOur elasticsearch.json configuration looks like this (note `whitespace_remove` at the bottom, we need that to strip any whitespace in between characters):\n\n``` json\n{\n  \"cluster\": {\n    \"name\": \"1188_production_19_07\"\n  },\n  \"action\": {\n    \"auto_create_index\": false\n  },\n  \"indices\": {\n    \"memory\": {\n      \"index_buffer_size\": \"1024m\"\n    }\n  },\n  \"index\": {\n    \"number_of_replicas\": 2,\n    \"number_of_shards\": 3,\n    \"analysis\": {\n      \"analyzer\": {\n        \"autocomplete_exact_index_analyzer\": {\n          \"type\": \"custom\",\n          \"tokenizer\": \"keyword\",\n          \"filter\": [\n            \"standard\",\n            \"lowercase\",\n            \"edge_ngram\"\n          ]\n        },\n        \"autocomplete_exact_search_analyzer\": {\n          \"type\": \"custom\",\n          \"tokenizer\": \"keyword\",\n          \"filter\": [\n            \"standard\",\n            \"lowercase\"\n          ]\n        },\n        \"autocomplete_index_analyzer\": {\n          \"type\": \"custom\",\n          \"tokenizer\": \"standard\",\n          \"filter\": [\n            \"standard\",\n            \"lowercase\",\n            \"edge_ngram\"\n          ]\n        },\n        \"autocomplete_search_analyzer\": {\n          \"type\": \"custom\",\n          \"tokenizer\": \"keyword\",\n          \"filter\": [\n            \"whitespace_remove\",\n            \"lowercase\"\n          ]\n        },\n        \"ascii_index_analyzer\": {\n          \"type\": \"custom\",\n          \"tokenizer\": \"standard\",\n          \"language\": \"Czech\",\n          \"filter\": [\n            \"standard\",\n            \"lowercase\",\n            \"czech_stem\",\n            \"asciifolding\"\n          ]\n        },\n        \"ascii_search_analyzer\": {\n          \"type\": \"custom\",\n          \"tokenizer\": \"standard\",\n          \"language\": \"Czech\",\n          \"filter\": [\n            \"standard\",\n            \"lowercase\",\n            \"czech_stem\",\n            \"asciifolding\"\n          ]\n        },\n        \"untouched_ascii_index_analyzer\": {\n          \"type\": \"custom\",\n          \"tokenizer\": \"standard\",\n          \"language\": \"Czech\",\n          \"filter\": [\n            \"standard\",\n            \"lowercase\",\n            \"asciifolding\"\n          ]\n        },\n        \"untouched_ascii_search_analyzer\": {\n          \"type\": \"custom\",\n          \"tokenizer\": \"standard\",\n          \"language\": \"Czech\",\n          \"filter\": [\n            \"standard\",\n            \"lowercase\",\n            \"asciifolding\"\n          ]\n        },\n        \"czech_index_analyzer\": {\n          \"type\": \"custom\",\n          \"tokenizer\": \"standard\",\n          \"language\": \"Czech\",\n          \"filter\": [\n            \"standard\",\n            \"lowercase\",\n            \"czech_stem\"\n          ]\n        },\n        \"czech_search_analyzer\": {\n          \"type\": \"custom\",\n          \"tokenizer\": \"standard\",\n          \"language\": \"Czech\",\n          \"filter\": [\n            \"standard\",\n            \"lowercase\",\n            \"czech_stem\"\n          ]\n        },\n        \"untouched_czech_search_analyzer\": {\n          \"type\": \"custom\",\n          \"tokenizer\": \"standard\",\n          \"language\": \"Czech\",\n          \"filter\": [\n            \"standard\",\n            \"lowercase\"\n          ]\n        },\n        \"untouched_czech_index_analyzer\": {\n          \"type\": \"custom\",\n          \"tokenizer\": \"standard\",\n          \"language\": \"Czech\",\n          \"filter\": [\n            \"standard\",\n            \"lowercase\"\n          ]\n        }\n      },\n      \"filter\": {\n        \"full_ngram\": {\n          \"type\": \"nGram\",\n          \"min_gram\": \"1\",\n          \"max_gram\": \"20\"\n        },\n        \"edge_ngram\": {\n          \"type\": \"edgeNGram\",\n          \"min_gram\": 1,\n          \"max_gram\": 20,\n          \"side\": \"front\"\n        },\n        \"whitespace_remove\": {\n          \"type\": \"pattern_replace\",\n          \"pattern\": \" \",\n          \"replacement\": \"\"\n        }\n      }\n    }\n  }\n}\n```\n\nI tried to search when this change occurred, so I tried it on 0.90.0, 0.90.1 and 0.90.2. They all produce the same result.\n\nI've tried to look around and thought the JSON parser was the culprit, so I went digging and discovered, that JSON Loader returns null value for empty strings in JSONs, but YML loader does return empty strings for YMLs (which is by itself strange and should not happen imo :)) ) by adding relevant values to test-settings.json and test-settings.yml + their tests:\n\nhttps://gist.github.com/NoICE/6039088\n(note these added lines: https://gist.github.com/NoICE/6039088#file-jsonsettingsloadertests-java-L51-L53\nhttps://gist.github.com/NoICE/6039088#file-yamlsettingsloadertests-java-L51-L53)\n\nSo I rewrote our elasticsearch.json to elasticsearch.yml, but the error still remains.\n\nSo:\n- JSON parser returns null for \"\" values\n- YML parser does return \"\" for \"\" values\n- pattern replace does not allow empty string in either JSON or YML format (so we can rule out JSON parser is the culprit, maybe...)\n\nLet me know if I can provide some more tests or something...\n","closed_by":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"performed_via_github_app":null}