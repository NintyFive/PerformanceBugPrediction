[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/292520912","html_url":"https://github.com/elastic/elasticsearch/issues/23966#issuecomment-292520912","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23966","id":292520912,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MjUyMDkxMg==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2017-04-07T12:14:46Z","updated_at":"2017-04-07T12:14:46Z","author_association":"CONTRIBUTOR","body":"do we have access to the place where we create the boolean queries so we can maybe wrap them or somehow mark them as eligible for minimum must match? Anyhow I removed the discuss label since we need to fix it either way ....","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/293578652","html_url":"https://github.com/elastic/elasticsearch/issues/23966#issuecomment-293578652","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23966","id":293578652,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzU3ODY1Mg==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2017-04-12T13:36:52Z","updated_at":"2017-04-12T13:36:52Z","author_association":"MEMBER","body":"I think we can just replace the boolean queries with DisjunctionMaxQuery. We already have an option for that in `query_string` called `use_dis_max`. When set to false (the default) we create boolean queries to merge queries targeting different fields and that makes `minimum_should_match` harder to apply. Instead we could still use a DisjunctionMaxQuery but with the tiebreaker set to 1.\r\nThe scoring should be equivalent to the boolean query and this would differentiate cross field queries from position queries and solve this particular problem. \r\nWe could also consider adding `use_dismax` in `simple_query_string` but this is not related to this issue.\r\n","performed_via_github_app":null}]