{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/54925","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54925/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54925/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54925/events","html_url":"https://github.com/elastic/elasticsearch/issues/54925","id":596151314,"node_id":"MDU6SXNzdWU1OTYxNTEzMTQ=","number":54925,"title":"Docker packaging tests for ARM","user":{"login":"pugnascotia","id":8696382,"node_id":"MDQ6VXNlcjg2OTYzODI=","avatar_url":"https://avatars1.githubusercontent.com/u/8696382?v=4","gravatar_id":"","url":"https://api.github.com/users/pugnascotia","html_url":"https://github.com/pugnascotia","followers_url":"https://api.github.com/users/pugnascotia/followers","following_url":"https://api.github.com/users/pugnascotia/following{/other_user}","gists_url":"https://api.github.com/users/pugnascotia/gists{/gist_id}","starred_url":"https://api.github.com/users/pugnascotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pugnascotia/subscriptions","organizations_url":"https://api.github.com/users/pugnascotia/orgs","repos_url":"https://api.github.com/users/pugnascotia/repos","events_url":"https://api.github.com/users/pugnascotia/events{/privacy}","received_events_url":"https://api.github.com/users/pugnascotia/received_events","type":"User","site_admin":false},"labels":[{"id":106454670,"node_id":"MDU6TGFiZWwxMDY0NTQ2NzA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Delivery/Build","name":":Delivery/Build","color":"0e8a16","default":false,"description":"Build or test infrastructure"},{"id":2495976472,"node_id":"MDU6TGFiZWwyNDk1OTc2NDcy","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Delivery","name":"Team:Delivery","color":"fef2c0","default":false,"description":"Meta label for Delivery team"},{"id":1789304462,"node_id":"MDU6TGFiZWwxNzg5MzA0NDYy","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v7.7.0","name":"v7.7.0","color":"dddddd","default":false,"description":""},{"id":1194435738,"node_id":"MDU6TGFiZWwxMTk0NDM1NzM4","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v8.0.0","name":"v8.0.0","color":"dddddd","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-04-07T21:04:43Z","updated_at":"2020-11-11T21:46:55Z","closed_at":"2020-04-23T19:11:36Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"We have a suite of tests for our Docker image in the `DockerTests` class, which can be run via:\r\n\r\n    ./gradlew :qa:os:destructiveDistroTest.default-docker\r\n\r\nThis task is configured to depend on a Docker export task, which itself depends on a Docker build task. This works fine. However following #53936, now we can build Docker images for ARM, with:\r\n\r\n    ./gradlew distribution:docker:buildAarch64DockerImage\r\n\r\nbut there is no support for running the packaging tests against the ARM image, because the dependency graph assumes the x86 build.\r\n\r\nNow, the Docker packaging tests don't actually care what Docker machine's architecture is. We could make the tests depend on an \"alias\" task, which builds whichever is the correct Docker image for the current platform.\r\n\r\nIn so doing, we would also give ourselves a point to override this behaviour, and explicitly target a specific architecture. The use-case is where someone is developing the Docker images and has a Docker machine capable of running more x86 and ARM images (notably, Docker for Mac et al support this via QEMU and `binfmt_misc`). In this case, it would be useful to be able to perform e.g.\r\n\r\n    ./gradlew -Ddocker.arch=aarch64 :qa:os:destructiveDistroTest.default-docker\r\n\r\nOrthogonal but related to this is that for [multi-arch Docker builds](https://www.docker.com/blog/multi-arch-images/), we will need to be able to build and push images with different tags, which are then brought together using `docker manifest`. Right now, the ARM Docker build creates images with the same tags as the x86 images, which is pretty confusing when you're working on the images locally. We should consider including the architecture in the Docker tag, for both `x86` and `aarch64`. In this case it might be useful to use Docker's conventions, which are `amd64` and `arm64`.\r\n\r\nFYI @mark-vieira @jasontedor ","closed_by":{"login":"pugnascotia","id":8696382,"node_id":"MDQ6VXNlcjg2OTYzODI=","avatar_url":"https://avatars1.githubusercontent.com/u/8696382?v=4","gravatar_id":"","url":"https://api.github.com/users/pugnascotia","html_url":"https://github.com/pugnascotia","followers_url":"https://api.github.com/users/pugnascotia/followers","following_url":"https://api.github.com/users/pugnascotia/following{/other_user}","gists_url":"https://api.github.com/users/pugnascotia/gists{/gist_id}","starred_url":"https://api.github.com/users/pugnascotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pugnascotia/subscriptions","organizations_url":"https://api.github.com/users/pugnascotia/orgs","repos_url":"https://api.github.com/users/pugnascotia/repos","events_url":"https://api.github.com/users/pugnascotia/events{/privacy}","received_events_url":"https://api.github.com/users/pugnascotia/received_events","type":"User","site_admin":false},"performed_via_github_app":null}