{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3932","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3932/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3932/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3932/events","html_url":"https://github.com/elastic/elasticsearch/issues/3932","id":21197694,"node_id":"MDU6SXNzdWUyMTE5NzY5NA==","number":3932,"title":"AND, OR, NOT queries","user":{"login":"mvallebr","id":805457,"node_id":"MDQ6VXNlcjgwNTQ1Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/805457?v=4","gravatar_id":"","url":"https://api.github.com/users/mvallebr","html_url":"https://github.com/mvallebr","followers_url":"https://api.github.com/users/mvallebr/followers","following_url":"https://api.github.com/users/mvallebr/following{/other_user}","gists_url":"https://api.github.com/users/mvallebr/gists{/gist_id}","starred_url":"https://api.github.com/users/mvallebr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mvallebr/subscriptions","organizations_url":"https://api.github.com/users/mvallebr/orgs","repos_url":"https://api.github.com/users/mvallebr/repos","events_url":"https://api.github.com/users/mvallebr/events{/privacy}","received_events_url":"https://api.github.com/users/mvallebr/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2013-10-18T02:40:37Z","updated_at":"2013-10-18T08:32:07Z","closed_at":"2013-10-18T08:31:53Z","author_association":"NONE","active_lock_reason":null,"body":"Today ES only have support for AND, OR and NOT filters, but this doesn't allow us to use scoring with it.\n\nFollows bellow a use case for it.\n\nI currently have parents indexed in elastic search (documents) and child (comments) related to these documents. My first objective was to search for a document with more than N comments, based on a child query. Here is how I did it:\n\n```\ndocuments/document/_search\n{\n    \"min_score\": 0,\n    \"query\": {\n       \"has_child\" : {\n            \"type\" : \"comment\",\n            \"score_type\" : \"sum\",\n            \"boost\": 1,\n            \"query\" : {\n               \"range\": {\n                    \"date\": {\n                        \"lte\": 20130204,\n                        \"gte\": 20130201,\n                        \"boost\": 1\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\nI used score to calculate the amount of comments a document has and then I filtered the documents by this amount, using \"min_score\". Now, my objective is to search not just comments, but several other child documents related to the document, always based on frequency. Something like the query bellow:\n\n```\ndocuments/document/_search\n{\n    \"query\": {\n        \"match_all\": {\n        }\n    },\n    \"filter\" : {\n        \"and\" : [{\n            \"query\": {\n                \"has_child\" : {\n                    \"type\" : \"comment\",\n                    \"query\" : {\n                      \"range\": {\n                        \"date\": {\n                            \"lte\": 20130204,\n                            \"gte\": 20130201\n                        }\n                      }\n                    }\n                }   \n            }   \n        },\n        {\n        \"or\" : [\n            {\"query\": {\n                \"has_child\" : {\n                    \"type\" : \"comment\",\n                        \"query\" : {\n                          \"match\": {\n                            \"text\": \"Finally\"\n                        }\n                    }\n                }\n                }\n            },\n            { \"query\": {\n                \"has_child\" : {\n                    \"type\" : \"comment\",\n                        \"query\" : {\n                          \"match\": {\n                            \"text\": \"several\"\n                        }\n                    }\n                }\n                }  \n            }\n        ]\n        }\n    ]\n    }\n}\n```\n\nThe query above works fine, but it doesn't filter based on frequency as the first one does. As filters are computed before scores are calculated, I cannot use min_score to filter each child query.\n\nWith AND, OR and NOT queries, I would be able to use min_score to filter results and still have powerful custom queries.\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}