[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49449799","html_url":"https://github.com/elastic/elasticsearch/issues/6907#issuecomment-49449799","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6907","id":49449799,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDQ5Nzk5","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2014-07-18T16:15:53Z","updated_at":"2014-07-18T16:15:53Z","author_association":"MEMBER","body":"The order docs are scored in (and thus what order the RNG is generating random scores with) is based on the order the documents appear in lucene segments. Merges will also change this by creating new segments.  So even adding or deleting docs can eventually cause the order of existing docs to change with the same seed.\n\nI think we could fix this by having another parameter, `field`, which the RNG can use per document to generate the score.  Instead of updating the seed, the RNG will use that per document value as the randomness (but still incorporate the seed, so a different order can be achieved without reindexing documents).  If the field is numeric, it would use the value of the field.  If it is anything else, it would use a hash of the byte values. Thoughts?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49492048","html_url":"https://github.com/elastic/elasticsearch/issues/6907#issuecomment-49492048","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6907","id":49492048,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDkyMDQ4","user":{"login":"heyarny","id":821278,"node_id":"MDQ6VXNlcjgyMTI3OA==","avatar_url":"https://avatars3.githubusercontent.com/u/821278?v=4","gravatar_id":"","url":"https://api.github.com/users/heyarny","html_url":"https://github.com/heyarny","followers_url":"https://api.github.com/users/heyarny/followers","following_url":"https://api.github.com/users/heyarny/following{/other_user}","gists_url":"https://api.github.com/users/heyarny/gists{/gist_id}","starred_url":"https://api.github.com/users/heyarny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/heyarny/subscriptions","organizations_url":"https://api.github.com/users/heyarny/orgs","repos_url":"https://api.github.com/users/heyarny/repos","events_url":"https://api.github.com/users/heyarny/events{/privacy}","received_events_url":"https://api.github.com/users/heyarny/received_events","type":"User","site_admin":false},"created_at":"2014-07-18T23:47:28Z","updated_at":"2014-07-18T23:47:28Z","author_association":"NONE","body":"Yes, actually ANY other solution other than the current one would make more sense, as long the scores/positions stay the same per seed and per doc/field.\n\nIs there any workaround one could use as of now? Preferably one which is robust and performant enough.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49551775","html_url":"https://github.com/elastic/elasticsearch/issues/6907#issuecomment-49551775","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6907","id":49551775,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTUxNzc1","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-07-20T16:34:11Z","updated_at":"2014-07-20T16:51:10Z","author_association":"CONTRIBUTOR","body":"@rjernst While you're working on this, I think that `random_score` needs a `max` parameter.  Currently it gives a large number like 8207847.5.  It is impossible to combine this with other `function_score` functions to just introduce a little randomness to the results.  \n\nFor instance, imagine you are filtering on \"features\":\n\n```\nGET /_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"filter\": { \n        \"term\": { \"city\": \"Barcelona\" }\n      },\n      \"functions\": [\n        {\n          \"filter\": { \"term\": { \"features\": \"wifi\" }}, \n          \"boost_factor\": 1\n        },\n        {\n          \"filter\": { \"term\": { \"features\": \"garden\" }}, \n          \"boost_factor\": 1\n        },\n        {\n          \"filter\": { \"term\": { \"features\": \"pool\" }}, \n          \"boost_factor\": 2 \n        }\n      ],\n      \"score_mode\": \"sum\", \n    }\n  }\n}\n```\n\nDocuments can have a score of 1, 2, 3, 4 or 5.  It would be nice to use randomization here to randomize all docs that have a score of 2.  In other words, docs with an original score of 2 should end up with: `2.0 <= score <= 3.0.`   Currently, the result from `random_score` would completely swamp the other functions.\n\nYou could do this by specifying a `max` of `0.99`:\n\n```\nGET /_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"filter\": { \n        \"term\": { \"city\": \"Barcelona\" }\n      },\n      \"functions\": [\n        {\n          \"filter\": { \"term\": { \"features\": \"wifi\" }}, \n          \"boost_factor\": 1\n        },\n        {\n          \"filter\": { \"term\": { \"features\": \"garden\" }}, \n          \"boost_factor\": 1\n        },\n        {\n          \"filter\": { \"term\": { \"features\": \"pool\" }}, \n          \"boost_factor\": 2 \n        },\n        {\n          \"random_score\": {\n            \"seed\": \"foo\",\n            \"max\":  0.99\n          }\n        }\n      ],\n      \"score_mode\": \"sum\", \n    }\n  }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49552793","html_url":"https://github.com/elastic/elasticsearch/issues/6907#issuecomment-49552793","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6907","id":49552793,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTUyNzkz","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-07-20T17:07:36Z","updated_at":"2014-07-20T17:07:36Z","author_association":"CONTRIBUTOR","body":"And while you're about it, probably worth supporting a `min` parameter as well...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49641325","html_url":"https://github.com/elastic/elasticsearch/issues/6907#issuecomment-49641325","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6907","id":49641325,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NjQxMzI1","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2014-07-21T17:57:38Z","updated_at":"2014-07-21T17:58:27Z","author_association":"MEMBER","body":"I've done an initial implementation using _uid, and it is about 3x slower than the current random score.  I discussed with @rmuir a bunch and after thinking about it more, it seems this will always be a problem, even when using something \"consistent\" from a document (whether _uid or a unique numeric field), since segments can always be moved around as adds/updates/deletes happen.\n\n@heyarny Have you tried using random score with a [scroll](http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-request-scroll.html)? This _should_ allow a consistent view, given the same seed for each request (although it is possible there is an edge case; I'm working on adding a test).\n\n@clintongormley I think the return values for random score are just wrong right now.  Java's Random.nextFloat() returns a value 0.0 - 1.0.  We should fix random score to do exactly this, and the user can scale it to their range however they want.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49649453","html_url":"https://github.com/elastic/elasticsearch/issues/6907#issuecomment-49649453","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6907","id":49649453,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NjQ5NDUz","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-07-21T18:58:42Z","updated_at":"2014-07-21T18:58:42Z","author_association":"CONTRIBUTOR","body":"@rjernst Is the performance drop off as bad for a numeric field instead of `_uid`.  Also, is 3x slower significant?  I mean, if it is 3 x very fast, it's still fast.\n\nScrolling isn't really useful here - the user would have to pull, eg, 10 pages of results and cache them somewhere.  Scrolling doesn't let you click forward then back (although the page could be cached i suppose). Also, keeping lots of scrolls open uses a lot of extra filehandles.\n\nRe the return value, 0.0 - 1.0 may be OK, but if you want to change that range, it is very difficult to do so.  Supporting it directly in `random_score` would make it a whole lot cleaner.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/50792614","html_url":"https://github.com/elastic/elasticsearch/issues/6907#issuecomment-50792614","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6907","id":50792614,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNzkyNjE0","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2014-07-31T17:40:15Z","updated_at":"2014-07-31T17:40:15Z","author_association":"MEMBER","body":"@clintongormley You are right, I think it is still pretty fast? Sorting 1 million random docs takes on average 13ms with _uid, instead of 4ms as it is now.  Using a numeric field is about the same (5ms for 1mil docs).\n\nI think the `weight` parameter in #6955 will work if you want a value outside of 0.0-1.0?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/50799180","html_url":"https://github.com/elastic/elasticsearch/issues/6907#issuecomment-50799180","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6907","id":50799180,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNzk5MTgw","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-07-31T18:29:05Z","updated_at":"2014-07-31T18:29:05Z","author_association":"CONTRIBUTOR","body":"@rjernst great, and re the  `weight` parameter: yes a much better solution\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/51022418","html_url":"https://github.com/elastic/elasticsearch/issues/6907#issuecomment-51022418","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6907","id":51022418,"node_id":"MDEyOklzc3VlQ29tbWVudDUxMDIyNDE4","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-08-04T06:41:12Z","updated_at":"2014-08-04T06:41:12Z","author_association":"CONTRIBUTOR","body":"Big +1 on making this function return a score between 0 and 1.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/52294625","html_url":"https://github.com/elastic/elasticsearch/issues/6907#issuecomment-52294625","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6907","id":52294625,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMjk0NjI1","user":{"login":"stha","id":3440045,"node_id":"MDQ6VXNlcjM0NDAwNDU=","avatar_url":"https://avatars2.githubusercontent.com/u/3440045?v=4","gravatar_id":"","url":"https://api.github.com/users/stha","html_url":"https://github.com/stha","followers_url":"https://api.github.com/users/stha/followers","following_url":"https://api.github.com/users/stha/following{/other_user}","gists_url":"https://api.github.com/users/stha/gists{/gist_id}","starred_url":"https://api.github.com/users/stha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stha/subscriptions","organizations_url":"https://api.github.com/users/stha/orgs","repos_url":"https://api.github.com/users/stha/repos","events_url":"https://api.github.com/users/stha/events{/privacy}","received_events_url":"https://api.github.com/users/stha/received_events","type":"User","site_admin":false},"created_at":"2014-08-15T10:51:06Z","updated_at":"2014-08-15T10:51:06Z","author_association":"NONE","body":"@rjernst Is it possible that the explain on random score also does not work as intended?\n\nExample Query:\n\n``` json\n{\n  \"explain\": true,\n  \"size\": 1,\n  \"_source\": [\n    \"age\"\n  ],\n  \"query\": {\n    \"function_score\": {\n      \"boost_mode\": \"replace\",\n      \"score_mode\": \"sum\",\n      \"boost\": 1,\n      \"functions\": [\n        {\n          \"random_score\": {\n            \"seed\": 123\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\nResult:\n\n``` json\n{\n   \"took\": 87,\n   \"timed_out\": false,\n   \"_shards\": {\n      \"total\": 2,\n      \"successful\": 2,\n      \"failed\": 0\n   },\n   \"hits\": {\n      \"total\": 1758039,\n      \"max_score\": 16777215,\n      \"hits\": [\n         {\n            \"_shard\": 1,\n            \"_node\": \"EC5O22oVR-aBhjrlgjESqg\",\n            \"_index\": \"index_profile\",\n            \"_type\": \"type_profile\",\n            \"_id\": \"697639\",\n            \"_score\": 16777215,\n            \"_source\": {\n               \"age\": 27\n            },\n            \"_explanation\": {\n               \"value\": 0,\n               \"description\": \"function score, product of:\",\n               \"details\": [\n                  {\n                     \"value\": 0,\n                     \"description\": \"Math.min of\",\n                     \"details\": [\n                        {\n                           \"value\": 0,\n                           \"description\": \"function score, score mode [sum]\",\n                           \"details\": [\n                              {\n                                 \"value\": 0,\n                                 \"description\": \"function score, product of:\",\n                                 \"details\": [\n                                    {\n                                       \"value\": 1,\n                                       \"description\": \"match filter: *:*\"\n                                    },\n                                    {\n                                       \"value\": 0,\n                                       \"description\": \"random score function (seed: -1443338702012022662)\",\n                                       \"details\": [\n                                          {\n                                             \"value\": 1,\n                                             \"description\": \"ConstantScore(*:*), product of:\",\n                                             \"details\": [\n                                                {\n                                                   \"value\": 1,\n                                                   \"description\": \"boost\"\n                                                },\n                                                {\n                                                   \"value\": 1,\n                                                   \"description\": \"queryNorm\"\n                                                }\n                                             ]\n                                          }\n                                       ]\n                                    }\n                                 ]\n                              }\n                           ]\n                        },\n                        {\n                           \"value\": 3.4028235e+38,\n                           \"description\": \"maxBoost\"\n                        }\n                     ]\n                  },\n                  {\n                     \"value\": 1,\n                     \"description\": \"queryBoost\"\n                  }\n               ]\n            }\n         }\n      ]\n   }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/52695334","html_url":"https://github.com/elastic/elasticsearch/issues/6907#issuecomment-52695334","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6907","id":52695334,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjk1MzM0","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2014-08-19T20:40:26Z","updated_at":"2014-08-19T20:40:26Z","author_association":"CONTRIBUTOR","body":"I agree what @rjernst proposes is a much better solution. Even if we loose some perf here I think we can bring it back by improving _uid in the future. +1 to fix this\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/52709794","html_url":"https://github.com/elastic/elasticsearch/issues/6907#issuecomment-52709794","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6907","id":52709794,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzA5Nzk0","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2014-08-19T22:35:19Z","updated_at":"2014-08-19T22:35:19Z","author_association":"MEMBER","body":"@stha What version of elasticsearch are you running on? There are existing tests to check explain correctly contains the original seed.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/52738975","html_url":"https://github.com/elastic/elasticsearch/issues/6907#issuecomment-52738975","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6907","id":52738975,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzM4OTc1","user":{"login":"stha","id":3440045,"node_id":"MDQ6VXNlcjM0NDAwNDU=","avatar_url":"https://avatars2.githubusercontent.com/u/3440045?v=4","gravatar_id":"","url":"https://api.github.com/users/stha","html_url":"https://github.com/stha","followers_url":"https://api.github.com/users/stha/followers","following_url":"https://api.github.com/users/stha/following{/other_user}","gists_url":"https://api.github.com/users/stha/gists{/gist_id}","starred_url":"https://api.github.com/users/stha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stha/subscriptions","organizations_url":"https://api.github.com/users/stha/orgs","repos_url":"https://api.github.com/users/stha/repos","events_url":"https://api.github.com/users/stha/events{/privacy}","received_events_url":"https://api.github.com/users/stha/received_events","type":"User","site_admin":false},"created_at":"2014-08-20T06:34:29Z","updated_at":"2014-08-20T11:58:50Z","author_association":"NONE","body":"@rjernst It's ES `1.2.1`.\n\nEdit: I can reproduce the `explain` issue as well with ES `1.3.2`.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/53351882","html_url":"https://github.com/elastic/elasticsearch/issues/6907#issuecomment-53351882","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6907","id":53351882,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMzUxODgy","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2014-08-25T23:29:15Z","updated_at":"2014-08-25T23:29:15Z","author_association":"MEMBER","body":"@stha I found the issue, and I've added a fix and test.\n\nI have a PR open now to fix the consistency, original seed reporting, and range of values produced.\nSee #7446\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/53383503","html_url":"https://github.com/elastic/elasticsearch/issues/6907#issuecomment-53383503","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6907","id":53383503,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMzgzNTAz","user":{"login":"stha","id":3440045,"node_id":"MDQ6VXNlcjM0NDAwNDU=","avatar_url":"https://avatars2.githubusercontent.com/u/3440045?v=4","gravatar_id":"","url":"https://api.github.com/users/stha","html_url":"https://github.com/stha","followers_url":"https://api.github.com/users/stha/followers","following_url":"https://api.github.com/users/stha/following{/other_user}","gists_url":"https://api.github.com/users/stha/gists{/gist_id}","starred_url":"https://api.github.com/users/stha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stha/subscriptions","organizations_url":"https://api.github.com/users/stha/orgs","repos_url":"https://api.github.com/users/stha/repos","events_url":"https://api.github.com/users/stha/events{/privacy}","received_events_url":"https://api.github.com/users/stha/received_events","type":"User","site_admin":false},"created_at":"2014-08-26T07:13:05Z","updated_at":"2014-08-26T07:13:05Z","author_association":"NONE","body":"@rjernst Thanks! Are you going to fix this in `1.2` and `1.3` too?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/53444394","html_url":"https://github.com/elastic/elasticsearch/issues/6907#issuecomment-53444394","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6907","id":53444394,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNDQ0Mzk0","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2014-08-26T15:57:58Z","updated_at":"2014-08-26T15:57:58Z","author_association":"MEMBER","body":"Since the PR changes existing behavior, it will only be added to 1.4.\n","performed_via_github_app":null}]