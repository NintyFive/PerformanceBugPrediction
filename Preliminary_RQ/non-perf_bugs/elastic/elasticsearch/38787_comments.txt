[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/462822626","html_url":"https://github.com/elastic/elasticsearch/issues/38787#issuecomment-462822626","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38787","id":462822626,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjgyMjYyNg==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2019-02-12T16:12:27Z","updated_at":"2019-02-12T16:12:27Z","author_association":"CONTRIBUTOR","body":"Thanks for this.\r\n\r\n>are very different from the percentiles expected (vs. Python's NumPy):\r\n\r\nNot if you use numpy's \"nearest\" [interpolation](https://docs.scipy.org/doc/numpy/reference/generated/numpy.percentile.html):\r\n\r\n    print np.percentile(a, 99.99, interpolation=\"nearest\")\r\n    3.146\r\n\r\nI suppose we have to be careful on  which basis we're making these comparisons. Does this change your thinking?\r\nGiven this implementation is based on an established algorithm I think I'll label this as a potential documentation issue rather than an implementation issue.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/462822715","html_url":"https://github.com/elastic/elasticsearch/issues/38787#issuecomment-462822715","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38787","id":462822715,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjgyMjcxNQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-02-12T16:12:38Z","updated_at":"2019-02-12T16:12:38Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-analytics-geo","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/462832491","html_url":"https://github.com/elastic/elasticsearch/issues/38787#issuecomment-462832491","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38787","id":462832491,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjgzMjQ5MQ==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-02-12T16:35:16Z","updated_at":"2019-02-12T16:35:16Z","author_association":"MEMBER","body":"I haven't tested it, but I suspect this is just due to the size of the data and how it interacts with the TDigest algorithm.  `compression` affects how many centroids are allowed before the algorithm merges centroids together.  A value of `n` for compression allows roughly `n * 20` centroids to be tracked before a merge is kicked off.\r\n\r\nGenerally, we say that more extreme percentiles are more accurate because the algorithm prefers to merge \"interior\" centroids and keep finer granularity at the extremes of the histogram.  So as centroids are merged, you tend to lose accuracy closer to the median.   \r\n\r\nI'm guessing the small number values simply aren't using the available centroids in a manner that improves accuracy, and the \"inverse\" relationship you're seeing is just an artifact of how the data is laid out and due to the fact that a merge likely hasn't happened (default compression is `100`, meaning potentially up to `20,000` centroids before merging which is << your data size).\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/462839543","html_url":"https://github.com/elastic/elasticsearch/issues/38787#issuecomment-462839543","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38787","id":462839543,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjgzOTU0Mw==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-02-12T16:52:15Z","updated_at":"2019-02-12T16:52:15Z","author_association":"MEMBER","body":"Also to Mark's point, I agree that this is probably just a documentation issue regarding small sizes, and that how percentiles are interpolated matters (both externally, and how TDigest interpolates between centroids to derive the requested value)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/462883764","html_url":"https://github.com/elastic/elasticsearch/issues/38787#issuecomment-462883764","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38787","id":462883764,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjg4Mzc2NA==","user":{"login":"redlus","id":7827282,"node_id":"MDQ6VXNlcjc4MjcyODI=","avatar_url":"https://avatars3.githubusercontent.com/u/7827282?v=4","gravatar_id":"","url":"https://api.github.com/users/redlus","html_url":"https://github.com/redlus","followers_url":"https://api.github.com/users/redlus/followers","following_url":"https://api.github.com/users/redlus/following{/other_user}","gists_url":"https://api.github.com/users/redlus/gists{/gist_id}","starred_url":"https://api.github.com/users/redlus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redlus/subscriptions","organizations_url":"https://api.github.com/users/redlus/orgs","repos_url":"https://api.github.com/users/redlus/repos","events_url":"https://api.github.com/users/redlus/events{/privacy}","received_events_url":"https://api.github.com/users/redlus/received_events","type":"User","site_admin":false},"created_at":"2019-02-12T18:45:46Z","updated_at":"2019-02-12T18:46:22Z","author_association":"NONE","body":"@markharwood \r\n> Not if you use numpy's \"nearest\" [interpolation](https://docs.scipy.org/doc/numpy/reference/generated/numpy.percentile.html):\r\n>\r\n> ```\r\n> print np.percentile(a, 99.99, interpolation=\"nearest\")\r\n> 3.146\r\n> ```\r\n> I suppose we have to be careful on which basis we're making these comparisons. Does this change your thinking?\r\n> Given this implementation is based on an established algorithm I think I'll label this as a potential documentation issue rather than an implementation issue.\r\n\r\nGood point. Most default implementations I know of usually utilize linear interpolation (that includes Python's NumPy, the interpolation function in MS Excel, R's quantile function etc). I believe it should be documented if elastic's algorithm behaves differently. Also, it may be a good feature request if it is possible to choose which interpolation method it will use üëçüèº","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/462889349","html_url":"https://github.com/elastic/elasticsearch/issues/38787#issuecomment-462889349","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38787","id":462889349,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjg4OTM0OQ==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-02-12T19:00:21Z","updated_at":"2019-02-12T19:00:21Z","author_association":"MEMBER","body":"I'm not sure we can support different interpolations, because TDigest has to deal with a different environment than numpy/excel/R/etc.  Those simple percentile computations benefit from having all the data, so they can choose how to interpolate between data points when the requested rank isn't represented directly.\r\n\r\nTDigest only has access to centroids which summarize parts of the CDF, and so implicitly has to perform interpolation to approximate the requested percentile.  This interpolation also varies depending on the nature of the centroids (does the centroid represent an exact data point?  Is it a summary of multiple points?  is this the last centroid on either extreme?)\r\n\r\nIf you're interested, the [TDigest paper](https://github.com/tdunning/t-digest/blob/master/docs/t-digest-paper/histo.pdf) discusses interpolation in section `\"2.9. Interpolation of the cumulative distribution function\"` :)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/477221357","html_url":"https://github.com/elastic/elasticsearch/issues/38787#issuecomment-477221357","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38787","id":477221357,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3NzIyMTM1Nw==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-03-27T15:52:07Z","updated_at":"2019-03-27T15:52:07Z","author_association":"MEMBER","body":"Going to close this.  Been thinking about how or if we want to document, and I think it's redundant since we link to the TDigest paper in the docs.  I don't want to rewrite how the algo works in detail (that's why we link to the paper), and I don't think there's a sufficiently strong reason to get into the nitty-gritty details about how the algo interpolates while ignoring the rest of the algo.","performed_via_github_app":null}]