{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/23172","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23172/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23172/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23172/events","html_url":"https://github.com/elastic/elasticsearch/issues/23172","id":207659828,"node_id":"MDU6SXNzdWUyMDc2NTk4Mjg=","number":23172,"title":"Elasticsearch incorrectly handles expect header","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"labels":[{"id":152517143,"node_id":"MDU6TGFiZWwxNTI1MTcxNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/REST%20API","name":":Core/Infra/REST API","color":"0e8a16","default":false,"description":"REST infrastructure and utilities"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-02-14T22:48:51Z","updated_at":"2017-12-10T23:41:36Z","closed_at":"2017-03-12T02:28:31Z","author_association":"MEMBER","active_lock_reason":null,"body":"If you send a 100-continue header to Elasticsearch with a content-length header that exceeds the configured max content length, Elasticsearch responds with a 417 status (Expectation Failed). Since we intend to support the 100-continue header (we basically have to since curl automatically sends it as soon as the content-length is at least 1024 bytes), this is a violation of the HTTP specification; instead, we should be responding with 413 status (Request Entity Too Large). The 417 status is intended to only be used if the server does not support an expectation that the client specified in the expect header. That brings us to our second source of trouble. The specification defines expectation extensions and this is where 417 status replies are okay. If the client sends an expect header containing anything other than 100-continue, we should be replying with 417 status but instead we reply with 200 status.\r\n\r\nThe relevant section from the specification:\r\n\r\n>The server MUST respond with a 417 (Expectation Failed) status if any of the expectations cannot be met or, if there are other problems with the request, some other 4xx status.\r\n\r\nOf the two aforementioned problems, it's the first that is awful for end users. This is because if try to send a request to Elasticsearch that exceeds the content-length, Elasticsearch does not help them by telling them the request is too large. Instead, it provides the completely misleading 417 status. At this point, users are rightfully lost. With Elasticsearch configured to have a max content length of 100MiB:\r\n\r\n```\r\n17:43:18 [jason:~] $ dd if=/dev/zero of=zero count=128 bs=1024k\r\n128+0 records in\r\n128+0 records out\r\n134217728 bytes transferred in 0.099644 secs (1346970013 bytes/sec)\r\n17:43:19 [jason:~] $ curl -v localhost:9200/ --data-binary @zero\r\n*   Trying ::1...\r\n* TCP_NODELAY set\r\n* Connected to localhost (::1) port 9200 (#0)\r\n> POST / HTTP/1.1\r\n> Host: localhost:9200\r\n> User-Agent: curl/7.51.0\r\n> Accept: */*\r\n> Content-Length: 134217728\r\n> Content-Type: application/x-www-form-urlencoded\r\n> Expect: 100-continue\r\n> \r\n< HTTP/1.1 417 Expectation Failed\r\n< content-length: 0\r\n* HTTP error before end of send, stop sending\r\n< \r\n* Curl_http_done: called premature == 0\r\n* Closing connection 0\r\n17:43:23 [jason:~] $ curl -v -H \"Expect: chocolate=yummy\" localhost:9200/\r\n*   Trying ::1...\r\n* TCP_NODELAY set\r\n* Connected to localhost (::1) port 9200 (#0)\r\n> GET / HTTP/1.1\r\n> Host: localhost:9200\r\n> User-Agent: curl/7.51.0\r\n> Accept: */*\r\n> Expect: chocolate=yummy\r\n> \r\n< HTTP/1.1 200 OK\r\n< content-type: application/json; charset=UTF-8\r\n< content-length: 322\r\n< \r\n{\r\n  \"name\" : \"49wXA7G\",\r\n  \"cluster_name\" : \"elasticsearch\",\r\n  \"cluster_uuid\" : \"J33uKzjOSi2PYl3dlE1R_A\",\r\n  \"version\" : {\r\n    \"number\" : \"6.0.0-alpha1\",\r\n    \"build_hash\" : \"5343b87\",\r\n    \"build_date\" : \"2017-02-13T22:41:34.078Z\",\r\n    \"build_snapshot\" : true,\r\n    \"lucene_version\" : \"6.5.0\"\r\n  },\r\n  \"tagline\" : \"You Know, for Search\"\r\n}\r\n* Curl_http_done: called premature == 0\r\n* Connection #0 to host localhost left intact\r\n```\r\n\r\nThe cause of this issue is due to a specification violation in the Netty 4 HTTP codec. I have opened netty/netty#6374 and with this patch, Elasticsearch will do the right thing:\r\n\r\n```\r\n17:43:25 [jason:~] $ dd if=/dev/zero of=zero count=128 bs=1024k\r\n128+0 records in\r\n128+0 records out\r\n134217728 bytes transferred in 0.091381 secs (1468769446 bytes/sec)\r\n17:43:56 [jason:~] $ curl -v localhost:9200/ --data-binary @zero\r\n*   Trying ::1...\r\n* TCP_NODELAY set\r\n* Connected to localhost (::1) port 9200 (#0)\r\n> POST / HTTP/1.1\r\n> Host: localhost:9200\r\n> User-Agent: curl/7.51.0\r\n> Accept: */*\r\n> Content-Length: 134217728\r\n> Content-Type: application/x-www-form-urlencoded\r\n> Expect: 100-continue\r\n> \r\n< HTTP/1.1 413 Request Entity Too Large\r\n< content-length: 0\r\n* HTTP error before end of send, stop sending\r\n< \r\n* Curl_http_done: called premature == 0\r\n* Closing connection 0\r\n17:43:58 [jason:~] $ curl -v -H \"Expect: chocolate=yummy\" localhost:9200/\r\n*   Trying ::1...\r\n* TCP_NODELAY set\r\n* Connected to localhost (::1) port 9200 (#0)\r\n> GET / HTTP/1.1\r\n> Host: localhost:9200\r\n> User-Agent: curl/7.51.0\r\n> Accept: */*\r\n> Expect: chocolate=yummy\r\n> \r\n< HTTP/1.1 417 Expectation Failed\r\n< content-length: 0\r\n< \r\n* Curl_http_done: called premature == 0\r\n* Connection #0 to host localhost left intact\r\n```","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}