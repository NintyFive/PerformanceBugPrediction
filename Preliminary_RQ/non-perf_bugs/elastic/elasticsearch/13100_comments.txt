[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/134556929","html_url":"https://github.com/elastic/elasticsearch/issues/13100#issuecomment-134556929","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13100","id":134556929,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNDU1NjkyOQ==","user":{"login":"sarwarbhuiyan","id":658557,"node_id":"MDQ6VXNlcjY1ODU1Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/658557?v=4","gravatar_id":"","url":"https://api.github.com/users/sarwarbhuiyan","html_url":"https://github.com/sarwarbhuiyan","followers_url":"https://api.github.com/users/sarwarbhuiyan/followers","following_url":"https://api.github.com/users/sarwarbhuiyan/following{/other_user}","gists_url":"https://api.github.com/users/sarwarbhuiyan/gists{/gist_id}","starred_url":"https://api.github.com/users/sarwarbhuiyan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sarwarbhuiyan/subscriptions","organizations_url":"https://api.github.com/users/sarwarbhuiyan/orgs","repos_url":"https://api.github.com/users/sarwarbhuiyan/repos","events_url":"https://api.github.com/users/sarwarbhuiyan/events{/privacy}","received_events_url":"https://api.github.com/users/sarwarbhuiyan/received_events","type":"User","site_admin":false},"created_at":"2015-08-25T11:15:20Z","updated_at":"2015-08-25T11:15:45Z","author_association":"CONTRIBUTOR","body":"This may help: \nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html?q=query_string#_boolean_operators\n\nEspecially, \"While the + and - only affect the term to the right of the operator, AND and OR can affect the terms to the left and right.\"\n\nBy the way, there are several problems with your specific queries:\n1. Since you are prefixing your query with text: already, is there a need for default_field? \n2. Since you're putting using AND and OR in the query, what's the point of the default_operator?\n\nYou're probably using the +/- syntax or using the match query DSL though.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/134557809","html_url":"https://github.com/elastic/elasticsearch/issues/13100#issuecomment-134557809","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13100","id":134557809,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNDU1NzgwOQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-08-25T11:20:15Z","updated_at":"2015-08-25T11:20:15Z","author_association":"CONTRIBUTOR","body":"The problem is that the query string does not use pure boolean logic.  It is intended to be used as a query, not as a filter.  Queries have required matches (must) and optional matches (should) which are not required but improve the score if they are present.\n\nWorth reading this blogpost to understand more: https://lucidworks.com/blog/why-not-and-or-and-not/\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/134558014","html_url":"https://github.com/elastic/elasticsearch/issues/13100#issuecomment-134558014","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13100","id":134558014,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNDU1ODAxNA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-08-25T11:21:23Z","updated_at":"2015-08-25T11:21:23Z","author_association":"CONTRIBUTOR","body":"As @sarwarbhuiyan said, you're better off using the query DSL if you want real boolean logic.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/134561843","html_url":"https://github.com/elastic/elasticsearch/issues/13100#issuecomment-134561843","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13100","id":134561843,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNDU2MTg0Mw==","user":{"login":"magdalene","id":5719469,"node_id":"MDQ6VXNlcjU3MTk0Njk=","avatar_url":"https://avatars3.githubusercontent.com/u/5719469?v=4","gravatar_id":"","url":"https://api.github.com/users/magdalene","html_url":"https://github.com/magdalene","followers_url":"https://api.github.com/users/magdalene/followers","following_url":"https://api.github.com/users/magdalene/following{/other_user}","gists_url":"https://api.github.com/users/magdalene/gists{/gist_id}","starred_url":"https://api.github.com/users/magdalene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/magdalene/subscriptions","organizations_url":"https://api.github.com/users/magdalene/orgs","repos_url":"https://api.github.com/users/magdalene/repos","events_url":"https://api.github.com/users/magdalene/events{/privacy}","received_events_url":"https://api.github.com/users/magdalene/received_events","type":"User","site_admin":false},"created_at":"2015-08-25T11:46:27Z","updated_at":"2015-08-25T11:46:27Z","author_association":"NONE","body":"Thanks! You're probably right it's better to simply always use +/- but at this point that would require us to (further) translate user queries. \n\nHowever, I still don't understand the default_operator behavior -- why for the query \"x AND y OR z\" is the behavior different when the default_operator is \"AND\" vs. when it's not specified (and from the docs I understand defaults to OR)?\n\nTo answer @sarwarbhuiyan -- initially I was trying to understand why \"x y OR z\" returned results with only x and not y and not z with the default_operator AND. And sorry about the default_field/specifying field in query string redundancy, unfortunately I constructed the test query from various sources. I don't think this is related to the behavior I see though.  My point is actually about the default_operator behavior, not about the AND/OR operators.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/134562384","html_url":"https://github.com/elastic/elasticsearch/issues/13100#issuecomment-134562384","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13100","id":134562384,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNDU2MjM4NA==","user":{"login":"magdalene","id":5719469,"node_id":"MDQ6VXNlcjU3MTk0Njk=","avatar_url":"https://avatars3.githubusercontent.com/u/5719469?v=4","gravatar_id":"","url":"https://api.github.com/users/magdalene","html_url":"https://github.com/magdalene","followers_url":"https://api.github.com/users/magdalene/followers","following_url":"https://api.github.com/users/magdalene/following{/other_user}","gists_url":"https://api.github.com/users/magdalene/gists{/gist_id}","starred_url":"https://api.github.com/users/magdalene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/magdalene/subscriptions","organizations_url":"https://api.github.com/users/magdalene/orgs","repos_url":"https://api.github.com/users/magdalene/repos","events_url":"https://api.github.com/users/magdalene/events{/privacy}","received_events_url":"https://api.github.com/users/magdalene/received_events","type":"User","site_admin":false},"created_at":"2015-08-25T11:51:07Z","updated_at":"2015-08-25T11:51:07Z","author_association":"NONE","body":"Also according to that linked doc page (unless I understood incorrectly, again!) \"a AND b OR c\" should be equivalent to \"(a AND b) OR c\" because AND takes precedence -- and in case the default_operator is unspecified, it seems to be, but in case the default_operator is AND, it is not. This is the behavior I am trying to understand/work around.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/134564261","html_url":"https://github.com/elastic/elasticsearch/issues/13100#issuecomment-134564261","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13100","id":134564261,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNDU2NDI2MQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-08-25T12:03:32Z","updated_at":"2015-08-25T12:03:32Z","author_association":"CONTRIBUTOR","body":"The answer is explained in that blog post, to quote:\n\n> Things definitely get very confusing when these “boolean operators” are used in ways other then those described above. In some cases this is because the query parser is trying to be forgiving about “natural language” style usage of operators that many boolean logic systems would consider a parse error. In other cases, the behavior is bizarrely esoteric:\n> - Queries are parsed left to right\n> - NOT sets the Occurs flag of the clause to it’s right to MUST_NOT\n> - AND will change the Occurs flag of the clause to it’s left to MUST unless it has already been set to MUST_NOT\n> - AND sets the Occurs flag of the clause to it’s right to MUST\n> - If the default operator of the query parser has been set to “And”: **OR will change the Occurs flag of the clause to it’s left to SHOULD** unless it has already been set to MUST_NOT\n> - OR sets the Occurs flag of the clause to it’s right to SHOULD\n\nFrankly, these rules are just too hard to remember.  This is one of the many reasons I don't like using the `query_string` query at all.  Here's another reason.  Look at these two queries for example:\n\n```\nhttp://foo   # finds an empty regex in field `http` and `foo` in the `_all` field\nhttp://foo/  # throws a malformed regex exception\n```\n\nIf you want to understand how the query string syntax is being understood, then use the validate-query API:\n\n```\nGET _validate/query?explain\n{\n  \"query\": {\n    \"query_string\": {\n      \"query\": \"x AND y OR z\",\n      \"default_operator\": \"OR\"\n    }\n  }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/134570640","html_url":"https://github.com/elastic/elasticsearch/issues/13100#issuecomment-134570640","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13100","id":134570640,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNDU3MDY0MA==","user":{"login":"magdalene","id":5719469,"node_id":"MDQ6VXNlcjU3MTk0Njk=","avatar_url":"https://avatars3.githubusercontent.com/u/5719469?v=4","gravatar_id":"","url":"https://api.github.com/users/magdalene","html_url":"https://github.com/magdalene","followers_url":"https://api.github.com/users/magdalene/followers","following_url":"https://api.github.com/users/magdalene/following{/other_user}","gists_url":"https://api.github.com/users/magdalene/gists{/gist_id}","starred_url":"https://api.github.com/users/magdalene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/magdalene/subscriptions","organizations_url":"https://api.github.com/users/magdalene/orgs","repos_url":"https://api.github.com/users/magdalene/repos","events_url":"https://api.github.com/users/magdalene/events{/privacy}","received_events_url":"https://api.github.com/users/magdalene/received_events","type":"User","site_admin":false},"created_at":"2015-08-25T12:31:07Z","updated_at":"2015-08-25T12:31:07Z","author_association":"NONE","body":"Thanks so much for explaining!\n","performed_via_github_app":null}]