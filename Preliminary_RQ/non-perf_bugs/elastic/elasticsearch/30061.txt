{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/30061","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30061/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30061/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30061/events","html_url":"https://github.com/elastic/elasticsearch/issues/30061","id":317454466,"node_id":"MDU6SXNzdWUzMTc0NTQ0NjY=","number":30061,"title":"Alias types: read_only vs read_write","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"labels":[{"id":912828538,"node_id":"MDU6TGFiZWw5MTI4Mjg1Mzg=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/ILM+SLM","name":":Core/Features/ILM+SLM","color":"0e8a16","default":false,"description":"Index and Snapshot lifecycle management"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":20,"created_at":"2018-02-09T11:21:32Z","updated_at":"2018-07-30T21:49:35Z","closed_at":"2018-07-30T21:49:34Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"*Original comment by @clintongormley:*\n\nIn Index Lifecycle Management we have come across a problem with rollover which we hope to solve with a change to aliases.\r\n\r\n## Problem 1: Rollover requires an alias\r\n\r\nRollovers creates a new index, then changes the alias from pointing to the old index to point to the new index.\r\n\r\nThe alias name is the only index-specific value that is needed by the ILM policy today, because of the rollover action.  If we manage to remove this requirement, then the same policy could be applied to several different index patterns/templates. The rollover action in ILM needs a way to inspect the index to know which alias should be swapped. (eg you shouldn't swap an alias like `all-logs` which is intended for reading).\r\n\r\n## Problem 2: Coordinating multiple settings\r\n\r\nWe could add a setting like `index.lifecycle.rollover_alias` to know which alias to use, but we also need to add the alias to the first index to bootstrap the process.  It would be more convenient to have a single way of specifying the alias.\r\n\r\n## Problem 3: A multi-index alias cannot be used for writing\r\n\r\nThe rollover alias cannot be applied to more than one index, otherwise it cannot be used for indexing.\r\n\r\nBeats or Logstash need to be able to bootstrap ILM and indices by:\r\n\r\n* Putting the ILM policy if it doesn't exist\r\n* Putting the index template if it doesn't exist\r\n* Creating the initial index (eg `mysql-logs-2018.01.01-00001`) with the appropriate alias: `mysql-logs-write`)\r\n\r\nImagine a thousand beats doing this near midnight: you could create two indices with different dates, both of which have the `mysql-logs-write` alias, so causing indexing to fail.  Ideally, we need a way to stop index creation if the alias is already in use.\r\n\r\n## Proposal\r\n\r\n* We add a `type` or `mode` parameter to aliases, which can be set to `read_only` or `read_write`.  \r\n* `read_only` aliases can point to multiple indices.\r\n* `read_write` aliases can only point to a single index, and an exception will be thrown at index creation time or alias update time if the user tries to assign a `read_write` alias to more than one index.\r\n* When rollover is called on an index (instead of an alias), then all `read_write` aliases will be switched to the new index, but `read_only` aliases will not be changed.\r\n* For BWC, any aliases which currently point to multiple indices will automatically become `read_only`, but single-index aliases will remain unspecified.  We add a deprecation warning to say that the `type` will become mandatory in 7.0\r\n\r\n\r\n\r\n","closed_by":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"performed_via_github_app":null}