[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/318360080","html_url":"https://github.com/elastic/elasticsearch/issues/25899#issuecomment-318360080","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25899","id":318360080,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODM2MDA4MA==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2017-07-27T13:21:49Z","updated_at":"2017-07-27T13:21:49Z","author_association":"MEMBER","body":"_Note_: I've reformatted the code blocks in your original message as they were hard to read.\r\n\r\nUnfortunately, I cannot reproduce your problem. As your mappings are quite complex, I have created are reduced example. I've tested the following on 5.2.2.\r\n\r\n```\r\nPUT /_template/elog-default\r\n{\r\n   \"order\": 0,\r\n   \"template\": \"elog_*\",\r\n   \"settings\": {\r\n      \"refresh_interval\": \"30s\"\r\n   },\r\n   \"mappings\": {\r\n      \"elog\": {\r\n         \"properties\": {\r\n            \"_log\": {\r\n               \"type\": \"text\"\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\nPUT /_template/elog-esearch-canal\r\n{\r\n   \"order\": 1,\r\n   \"template\": \"elog_esearch-canal-20*\",\r\n   \"settings\": {},\r\n   \"mappings\": {\r\n      \"elog\": {\r\n         \"properties\": {\r\n            \"logLevel\": {\r\n               \"ignore_above\": \"32766\",\r\n               \"type\": \"keyword\"\r\n            },\r\n            \"_log\": {\r\n               \"type\": \"text\"\r\n            },\r\n            \"_time\": {\r\n               \"format\": \"yyyy-MM-dd HH:mm:ss\",\r\n               \"type\": \"date\"\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\nPUT /elog_esearch-canal-20991\r\n```\r\n\r\nThe index is as expected. `GET /elog_esearch-canal-20991` gives:\r\n\r\n```json\r\n{\r\n   \"elog_esearch-canal-20991\": {\r\n      \"aliases\": {},\r\n      \"mappings\": {\r\n         \"elog\": {\r\n            \"properties\": {\r\n               \"_log\": {\r\n                  \"type\": \"text\"\r\n               },\r\n               \"_time\": {\r\n                  \"type\": \"date\",\r\n                  \"format\": \"yyyy-MM-dd HH:mm:ss\"\r\n               },\r\n               \"logLevel\": {\r\n                  \"type\": \"keyword\",\r\n                  \"ignore_above\": 32766\r\n               }\r\n            }\r\n         }\r\n      },\r\n      \"settings\": {\r\n         \"index\": {\r\n            \"refresh_interval\": \"30s\",\r\n            \"number_of_shards\": \"5\",\r\n            \"provided_name\": \"elog_esearch-canal-20991\",\r\n            \"creation_date\": \"1501161317965\",\r\n            \"number_of_replicas\": \"1\",\r\n            \"uuid\": \"IqjKlaN7TS6viGVpj8eK6Q\",\r\n            \"version\": {\r\n               \"created\": \"5020299\"\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n```\r\n\r\nThen we change the settings and create a new index:\r\n\r\n```\r\nPUT /_template/elog-default\r\n{\r\n   \"order\": 0,\r\n   \"template\": \"elog_*\",\r\n   \"settings\": {\r\n      \"refresh_interval\": \"31s\"\r\n   },\r\n   \"mappings\": {\r\n      \"elog\": {\r\n         \"properties\": {\r\n            \"_log\": {\r\n               \"type\": \"text\"\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\n\r\nPUT /elog_esearch-canal-20992\r\n```\r\n\r\nAs expected, `GET /elog_esearch-canal-20992`gives all properties:\r\n\r\n```json\r\n{\r\n   \"elog_esearch-canal-20992\": {\r\n      \"aliases\": {},\r\n      \"mappings\": {\r\n         \"elog\": {\r\n            \"properties\": {\r\n               \"_log\": {\r\n                  \"type\": \"text\"\r\n               },\r\n               \"_time\": {\r\n                  \"type\": \"date\",\r\n                  \"format\": \"yyyy-MM-dd HH:mm:ss\"\r\n               },\r\n               \"logLevel\": {\r\n                  \"type\": \"keyword\",\r\n                  \"ignore_above\": 32766\r\n               }\r\n            }\r\n         }\r\n      },\r\n      \"settings\": {\r\n         \"index\": {\r\n            \"refresh_interval\": \"31s\",\r\n            \"number_of_shards\": \"5\",\r\n            \"provided_name\": \"elog_esearch-canal-20992\",\r\n            \"creation_date\": \"1501161394226\",\r\n            \"number_of_replicas\": \"1\",\r\n            \"uuid\": \"EKdpEic-Q5il412dYSKGHg\",\r\n            \"version\": {\r\n               \"created\": \"5020299\"\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n```\r\n\r\nPlease also note that we reserve Github for bug reports and feature requests only. Please ask questions like these in the future [Elasticsearch forum](https://discuss.elastic.co/c/elasticsearch) instead.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/318547046","html_url":"https://github.com/elastic/elasticsearch/issues/25899#issuecomment-318547046","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25899","id":318547046,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODU0NzA0Ng==","user":{"login":"izerobit","id":17596277,"node_id":"MDQ6VXNlcjE3NTk2Mjc3","avatar_url":"https://avatars1.githubusercontent.com/u/17596277?v=4","gravatar_id":"","url":"https://api.github.com/users/izerobit","html_url":"https://github.com/izerobit","followers_url":"https://api.github.com/users/izerobit/followers","following_url":"https://api.github.com/users/izerobit/following{/other_user}","gists_url":"https://api.github.com/users/izerobit/gists{/gist_id}","starred_url":"https://api.github.com/users/izerobit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/izerobit/subscriptions","organizations_url":"https://api.github.com/users/izerobit/orgs","repos_url":"https://api.github.com/users/izerobit/repos","events_url":"https://api.github.com/users/izerobit/events{/privacy}","received_events_url":"https://api.github.com/users/izerobit/received_events","type":"User","site_admin":false},"created_at":"2017-07-28T03:23:57Z","updated_at":"2017-07-28T03:32:49Z","author_association":"NONE","body":"@danielmitterdorfer \r\nThank you for your reply very much\r\nbut maybe I made some error description\r\n_**The important thing is the two index template created by java transport client, not in kibana**_\r\nhere I add some pictures to my operation\r\n![es-01](https://user-images.githubusercontent.com/17596277/28701063-34e4041e-7386-11e7-885d-b84e8dfc805f.png)\r\n![es-02](https://user-images.githubusercontent.com/17596277/28701065-3c4f7f08-7386-11e7-989f-1502f7dc0804.png)\r\n**_these two index template created by java transport client_**\r\nthen create index from template, this index contain property \"logLevel\" and this is what I want\r\n![es-04](https://user-images.githubusercontent.com/17596277/28701091-5a68ec86-7386-11e7-9675-75995bed9844.png)\r\nthen only modify the template \"elog-default\" setting refresh_interval from 30s to 31s in kibana\r\n![es-05](https://user-images.githubusercontent.com/17596277/28701141-adcbb43a-7386-11e7-9421-cd4c8d76acac.png)\r\nthen create index from template again\r\n![es-07](https://user-images.githubusercontent.com/17596277/28701166-d7e43e72-7386-11e7-9a7a-a8566d00b15a.png)\r\nand some happend not as expected, the index donnot contain property \"logLevel\", the property  \"_time\" same.\r\n\r\nAnd I tried to update the template \"elog-esearch-canal\" and nothing to modify, then create index from these template , the property \"logLevel\" come back, the \"_time\" same\r\n![es-08](https://user-images.githubusercontent.com/17596277/28701309-038e08ae-7388-11e7-9a6e-4bf99842c8bd.png)\r\n![es-09](https://user-images.githubusercontent.com/17596277/28701312-069cb4dc-7388-11e7-9993-9ad2e73c9513.png)\r\n\r\nSo, I tried many time, the result same. and maybe some operations has mistake? please let me know, thank you","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/318565558","html_url":"https://github.com/elastic/elasticsearch/issues/25899#issuecomment-318565558","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25899","id":318565558,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODU2NTU1OA==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2017-07-28T05:44:47Z","updated_at":"2017-07-28T05:44:47Z","author_association":"MEMBER","body":"Hi @chengangxiong. I now tried exactly this example again on a fresh install of Elasticsearch 5.2.2. I see that you are getting odd behavior but I just cannot reproduce it on a fresh install. So I suspect there is something in your environment intervening (a setting, maybe an application that proactively writes to the cluster, ...). So let's take a step back.\r\n\r\nFirst of all, it does not make a difference how the index templates were created (transport client, REST client, curl, Kibana does not matter).\r\n\r\nCan I please ask you to:\r\n\r\n1. Shutdown all running Elasticsearch instances on your development machine (verify with `jps -v` on the command line. It should not show any Elasticsearch processes)\r\n2. Install and start a  fresh installation of Elasticsearch 5.2.2.\r\n3. Retry the following reproduction scenario (it should reflect exactly what you are doing above)\r\n\r\n```\r\n# Delete *all* index templates. Do not do this on a production cluster or you will potentially break your application.\r\nDELETE /_template/*\r\n\r\n# Delete *all* \"\"elog_\" indices. Please do not do this on a production cluster or you will lose data.\r\nDELETE /elog_*\r\n\r\nPUT /_template/elog-default\r\n{\r\n   \"order\": 0,\r\n   \"template\": \"elog_*\",\r\n   \"settings\": {\r\n      \"index\": {\r\n         \"mapper\": {\r\n            \"dynamic\": \"true\"\r\n         },\r\n         \"mapping\": {\r\n            \"ignore_malformed\": \"true\"\r\n         },\r\n         \"refresh_interval\": \"30s\",\r\n         \"analysis\": {\r\n            \"analyzer\": {\r\n               \"default_search\": {\r\n                  \"lowercase\": \"true\",\r\n                  \"pattern\": \"\\\\W|_\",\r\n                  \"type\": \"pattern\"\r\n               },\r\n               \"default\": {\r\n                  \"lowercase\": \"true\",\r\n                  \"pattern\": \"\\\\W|_\",\r\n                  \"type\": \"pattern\"\r\n               }\r\n            }\r\n         },\r\n         \"number_of_shards\": \"9\",\r\n         \"number_of_replicas\": \"1\"\r\n      }\r\n   },\r\n   \"mappings\": {\r\n      \"elog\": {\r\n         \"_all\": {\r\n            \"enabled\": false\r\n         },\r\n         \"properties\": {\r\n            \"_ip\": {\r\n               \"ignore_above\": \"32766\",\r\n               \"type\": \"keyword\"\r\n            },\r\n            \"_log\": {\r\n               \"type\": \"text\"\r\n            },\r\n            \"_collectTime\": {\r\n               \"format\": \"yyyy-MM-dd HH:mm:ss\",\r\n               \"type\": \"date\"\r\n            },\r\n            \"_hostName\": {\r\n               \"type\": \"text\"\r\n            },\r\n            \"_fileName\": {\r\n               \"type\": \"text\"\r\n            },\r\n            \"_sortedId\": {\r\n               \"ignore_above\": \"32766\",\r\n               \"type\": \"keyword\"\r\n            }\r\n         }\r\n      }\r\n   },\r\n   \"aliases\": {}\r\n}\r\n\r\nPUT /_template/elog-esearch-canal\r\n{\r\n   \"order\": 1,\r\n   \"template\": \"elog_esearch-canal-20*\",\r\n   \"settings\": {},\r\n   \"mappings\": {\r\n      \"elog\": {\r\n         \"properties\": {\r\n            \"logLevel\": {\r\n               \"ignore_above\": \"32766\",\r\n               \"type\": \"keyword\"\r\n            },\r\n            \"_log\": {\r\n               \"type\": \"text\"\r\n            },\r\n            \"_time\": {\r\n               \"format\": \"yyyy-MM-dd HH:mm:ss\",\r\n               \"type\": \"date\"\r\n            }\r\n         }\r\n      }\r\n   },\r\n   \"aliases\": {}\r\n}\r\n\r\n# ensure the index does not exist, then create the first index\r\n\r\nDELETE /elog_esearch-canal-20991\r\nPUT /elog_esearch-canal-20991\r\n\r\n# verify mapping and settings\r\nGET /elog_esearch-canal-20991\r\n\r\n# Now we modify the refresh interval in the index template\r\nPUT /_template/elog-default\r\n{\r\n   \"order\": 0,\r\n   \"template\": \"elog_*\",\r\n   \"settings\": {\r\n      \"index\": {\r\n         \"mapper\": {\r\n            \"dynamic\": \"true\"\r\n         },\r\n         \"mapping\": {\r\n            \"ignore_malformed\": \"true\"\r\n         },\r\n         \"refresh_interval\": \"31s\",\r\n         \"analysis\": {\r\n            \"analyzer\": {\r\n               \"default_search\": {\r\n                  \"lowercase\": \"true\",\r\n                  \"pattern\": \"\\\\W|_\",\r\n                  \"type\": \"pattern\"\r\n               },\r\n               \"default\": {\r\n                  \"lowercase\": \"true\",\r\n                  \"pattern\": \"\\\\W|_\",\r\n                  \"type\": \"pattern\"\r\n               }\r\n            }\r\n         },\r\n         \"number_of_shards\": \"9\",\r\n         \"number_of_replicas\": \"1\"\r\n      }\r\n   },\r\n   \"mappings\": {\r\n      \"elog\": {\r\n         \"_all\": {\r\n            \"enabled\": false\r\n         },\r\n         \"properties\": {\r\n            \"_ip\": {\r\n               \"ignore_above\": \"32766\",\r\n               \"type\": \"keyword\"\r\n            },\r\n            \"_log\": {\r\n               \"type\": \"text\"\r\n            },\r\n            \"_collectTime\": {\r\n               \"format\": \"yyyy-MM-dd HH:mm:ss\",\r\n               \"type\": \"date\"\r\n            },\r\n            \"_hostName\": {\r\n               \"type\": \"text\"\r\n            },\r\n            \"_fileName\": {\r\n               \"type\": \"text\"\r\n            },\r\n            \"_sortedId\": {\r\n               \"ignore_above\": \"32766\",\r\n               \"type\": \"keyword\"\r\n            }\r\n         }\r\n      }\r\n   },\r\n   \"aliases\": {}\r\n}\r\n\r\n# ensure the index does not exist, then create an index after we've modified the index template.\r\n\r\nDELETE /elog_esearch-canal-20992\r\nPUT /elog_esearch-canal-20992\r\n\r\n# verify mapping and settings\r\nGET /elog_esearch-canal-20992\r\n```\r\n\r\nThe last `GET` should produce the following output:\r\n\r\n```json\r\n{\r\n   \"elog_esearch-canal-20992\": {\r\n      \"aliases\": {},\r\n      \"mappings\": {\r\n         \"elog\": {\r\n            \"_all\": {\r\n               \"enabled\": false,\r\n               \"analyzer\": \"default\",\r\n               \"search_analyzer\": \"default_search\"\r\n            },\r\n            \"properties\": {\r\n               \"_collectTime\": {\r\n                  \"type\": \"date\",\r\n                  \"format\": \"yyyy-MM-dd HH:mm:ss\"\r\n               },\r\n               \"_fileName\": {\r\n                  \"type\": \"text\",\r\n                  \"analyzer\": \"default\",\r\n                  \"search_analyzer\": \"default_search\"\r\n               },\r\n               \"_hostName\": {\r\n                  \"type\": \"text\",\r\n                  \"analyzer\": \"default\",\r\n                  \"search_analyzer\": \"default_search\"\r\n               },\r\n               \"_ip\": {\r\n                  \"type\": \"keyword\",\r\n                  \"ignore_above\": 32766\r\n               },\r\n               \"_log\": {\r\n                  \"type\": \"text\",\r\n                  \"analyzer\": \"default\",\r\n                  \"search_analyzer\": \"default_search\"\r\n               },\r\n               \"_sortedId\": {\r\n                  \"type\": \"keyword\",\r\n                  \"ignore_above\": 32766\r\n               },\r\n               \"_time\": {\r\n                  \"type\": \"date\",\r\n                  \"format\": \"yyyy-MM-dd HH:mm:ss\"\r\n               },\r\n               \"logLevel\": {\r\n                  \"type\": \"keyword\",\r\n                  \"ignore_above\": 32766\r\n               }\r\n            }\r\n         }\r\n      },\r\n      \"settings\": {\r\n         \"index\": {\r\n            \"mapping\": {\r\n               \"ignore_malformed\": \"true\"\r\n            },\r\n            \"refresh_interval\": \"31s\",\r\n            \"number_of_shards\": \"9\",\r\n            \"provided_name\": \"elog_esearch-canal-20992\",\r\n            \"mapper\": {\r\n               \"dynamic\": \"true\"\r\n            },\r\n            \"creation_date\": \"1501218848859\",\r\n            \"analysis\": {\r\n               \"analyzer\": {\r\n                  \"default_search\": {\r\n                     \"lowercase\": \"true\",\r\n                     \"pattern\": \"\\\\W|_\",\r\n                     \"type\": \"pattern\"\r\n                  },\r\n                  \"default\": {\r\n                     \"lowercase\": \"true\",\r\n                     \"pattern\": \"\\\\W|_\",\r\n                     \"type\": \"pattern\"\r\n                  }\r\n               }\r\n            },\r\n            \"number_of_replicas\": \"1\",\r\n            \"uuid\": \"Bh6ri5jqRyW2E4v-oI9-Hw\",\r\n            \"version\": {\r\n               \"created\": \"5020299\"\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n```\r\n\r\nAfter you have verified that this is working on a fresh installation of Elasticsearch 5.2.2 (this step is crucial because I still cannot reproduce this on a fresh installation), you should review the following on the cluster where this is happening:\r\n\r\n* All templates that are defined for this cluster by issuing `GET /_template`.\r\n* Cluster settings in the config file `config/elasticsearch.yml`\r\n* Cluster settings setting set via the API by issuing `GET /_cluster/settings`\r\n\r\nI hope this will reveal the cause.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/318605821","html_url":"https://github.com/elastic/elasticsearch/issues/25899#issuecomment-318605821","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25899","id":318605821,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODYwNTgyMQ==","user":{"login":"izerobit","id":17596277,"node_id":"MDQ6VXNlcjE3NTk2Mjc3","avatar_url":"https://avatars1.githubusercontent.com/u/17596277?v=4","gravatar_id":"","url":"https://api.github.com/users/izerobit","html_url":"https://github.com/izerobit","followers_url":"https://api.github.com/users/izerobit/followers","following_url":"https://api.github.com/users/izerobit/following{/other_user}","gists_url":"https://api.github.com/users/izerobit/gists{/gist_id}","starred_url":"https://api.github.com/users/izerobit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/izerobit/subscriptions","organizations_url":"https://api.github.com/users/izerobit/orgs","repos_url":"https://api.github.com/users/izerobit/repos","events_url":"https://api.github.com/users/izerobit/events{/privacy}","received_events_url":"https://api.github.com/users/izerobit/received_events","type":"User","site_admin":false},"created_at":"2017-07-28T09:26:59Z","updated_at":"2017-07-28T09:26:59Z","author_association":"NONE","body":"Hi @danielmitterdorfer \r\nI tried it on a fresh installation, and the result same.\r\nI got an conclusion : when I update template A(elog-default or elog-esearch-canal), then the index only contain properties from template A. \r\nAnd when the index template created from curl. everything is ok as you has reproduced.\r\n\r\nAlthough the index properties are different , but the logs from es are same as below\r\n\r\n[2017-07-28T16:52:21,042][INFO ][o.e.c.m.MetaDataCreateIndexService] [node-154] [elog_esearch-canal-209913] creating index, cause [api], templates [elog-esearch-canal, elog-default], shards [9]/[0], mappings [elog]\r\n[2017-07-28T16:52:29,211][INFO ][o.e.c.m.MetaDataCreateIndexService] [node-154] [elog_esearch-canal-209914] creating index, cause [api], templates [elog-esearch-canal, elog-default], shards [9]/[1], mappings [elog]\r\n\r\nAlthough you said there was no difference how the index templates were created, yes , I agree with you before I got the different result. so I hope you can write some java code to create index template. I'm feel sorry about that this cost you much time. And I will look deep into the es source code for this issue.\r\n\r\nthank you again.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/318608193","html_url":"https://github.com/elastic/elasticsearch/issues/25899#issuecomment-318608193","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25899","id":318608193,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODYwODE5Mw==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2017-07-28T09:37:22Z","updated_at":"2017-07-28T09:37:22Z","author_association":"MEMBER","body":"Well, then the cause seems to be in how you create the index templates. Can you please come up with a minimal reproduction example involving your use of the transport client?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/318622243","html_url":"https://github.com/elastic/elasticsearch/issues/25899#issuecomment-318622243","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25899","id":318622243,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODYyMjI0Mw==","user":{"login":"izerobit","id":17596277,"node_id":"MDQ6VXNlcjE3NTk2Mjc3","avatar_url":"https://avatars1.githubusercontent.com/u/17596277?v=4","gravatar_id":"","url":"https://api.github.com/users/izerobit","html_url":"https://github.com/izerobit","followers_url":"https://api.github.com/users/izerobit/followers","following_url":"https://api.github.com/users/izerobit/following{/other_user}","gists_url":"https://api.github.com/users/izerobit/gists{/gist_id}","starred_url":"https://api.github.com/users/izerobit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/izerobit/subscriptions","organizations_url":"https://api.github.com/users/izerobit/orgs","repos_url":"https://api.github.com/users/izerobit/repos","events_url":"https://api.github.com/users/izerobit/events{/privacy}","received_events_url":"https://api.github.com/users/izerobit/received_events","type":"User","site_admin":false},"created_at":"2017-07-28T10:49:38Z","updated_at":"2017-07-28T10:49:38Z","author_association":"NONE","body":" @danielmitterdorfer \r\nI write a minimal reproduction example: https://github.com/chengangxiong/forest/tree/master/forest-es\r\n[forest-es-1.0-assembly.tar.gz](https://github.com/elastic/elasticsearch/files/1182756/forest-es-1.0-assembly.tar.gz)\r\n\r\nyou can run it : java -cp forest-es.jar:lib/* com.forest.es.main.CreateIndexTemplate localhost\r\nlocalhost : es ip, only one ip \r\n\r\nit will create two index named \"elog-default\" \"elog-esearch-canal\", \r\n\r\nthen create index \"elog_esearch-canal-209901\" contain properties \"_collectTime\", \"_log\", \"_log2\"\r\nthen update template \"elog-default\" modify nothing in kibana\r\nthen createindex \"elog_esearch-canal-209902\" contain properties \"_collectTime\", \"_log\"\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/319032318","html_url":"https://github.com/elastic/elasticsearch/issues/25899#issuecomment-319032318","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25899","id":319032318,"node_id":"MDEyOklzc3VlQ29tbWVudDMxOTAzMjMxOA==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2017-07-31T10:40:46Z","updated_at":"2017-07-31T10:51:46Z","author_association":"MEMBER","body":"@chengangxiong Thanks for your persistence. I could indeed reproduce the issue now. I took your example and made it self-contained. Here is a summary.\r\n\r\n### Problem\r\n\r\nWhen index templates are created with the transport client and are updated via the REST API, template merging breaks and only the template with the lowest `order` is applied.\r\n\r\n### Reproduction\r\n\r\n1. Create multiple index templates via the transport client\r\n2. Create an index that matches both templates. Verify that it contains all properties defined in the templates from (1).\r\n3. Update the template with the highest order (i.e. order = 0 below) e.g. by defining a new index setting via the REST API. Note that It is crucial that we do this via the REST API. If we do it via the transport client, everything will work fine. Also, if we do all steps via the REST API, everything will work fine. It is really the mix of the two that causes the problem.\r\n4. Create another index that matches both templates.\r\n\r\nExpectation in step 4: The index contains all properties defined in the templates.\r\nActual outcome in step 4: The index contains only properties defined in the template with the highest order (i.e. order = 0 below).\r\n\r\nHere is a minimal reproduction (working against 6.0.0-beta1):\r\n\r\n```java\r\npackage org.elasticsearch.cli;\r\n\r\nimport org.apache.http.HttpHost;\r\nimport org.apache.http.message.BasicHeader;\r\nimport org.apache.http.nio.entity.NStringEntity;\r\nimport org.elasticsearch.action.admin.indices.create.CreateIndexRequest;\r\nimport org.elasticsearch.action.admin.indices.mapping.get.GetMappingsRequest;\r\nimport org.elasticsearch.action.admin.indices.mapping.get.GetMappingsResponse;\r\nimport org.elasticsearch.client.Client;\r\nimport org.elasticsearch.client.Response;\r\nimport org.elasticsearch.client.RestClient;\r\nimport org.elasticsearch.common.settings.Settings;\r\nimport org.elasticsearch.common.transport.TransportAddress;\r\nimport org.elasticsearch.common.xcontent.XContentBuilder;\r\nimport org.elasticsearch.common.xcontent.XContentFactory;\r\nimport org.elasticsearch.transport.client.PreBuiltTransportClient;\r\n\r\nimport java.io.IOException;\r\nimport java.net.InetAddress;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.Collections;\r\nimport java.util.Map;\r\n\r\npublic class TemplateInheritanceReproduction {\r\n    private static Client transportClient;\r\n    private static RestClient restClient;\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        transportClient = new PreBuiltTransportClient(Settings.builder().put(\"client.transport.ignore_cluster_name\", true).build())\r\n                .addTransportAddress(new TransportAddress(InetAddress.getByName(\"localhost\"), 9300));\r\n        restClient = RestClient.builder(new HttpHost(\"localhost\", 9200, \"http\")).build();\r\n\r\n        try {\r\n            createTemplatesAndIndices();\r\n        } finally {\r\n            restClient.close();\r\n            transportClient.close();\r\n        }\r\n    }\r\n\r\n    private static void createTemplatesAndIndices() throws Exception {\r\n        transportClient.admin().indices()\r\n            .preparePutTemplate(\"default-template\")\r\n            .setOrder(0)\r\n                .setPatterns(Collections.singletonList(\"logs-*\"))\r\n            .addMapping(\"elog\", createMapping(\"_log\", \"text\"))\r\n                .execute().actionGet();\r\n\r\n        transportClient.admin().indices()\r\n            .preparePutTemplate(\"specific-template\")\r\n            .setOrder(1)\r\n                .setPatterns(Collections.singletonList(\"logs-my-app-*\"))\r\n            .addMapping(\"elog\", createMapping(\"_log2\", \"text\"))\r\n                .execute().actionGet();\r\n\r\n        // Will show both fields \"_log\" and \"_log2\" -> both templates got merged correctly\r\n        createAndVerifyIndex(\"logs-my-app-20991\");\r\n\r\n        // update the default template via REST; mapping stays identical, settings change\r\n        Response restResponse = restClient.performRequest(\"PUT\", \"/_template/default-template\",\r\n                Collections.emptyMap(),\r\n                new NStringEntity(\"{\" +\r\n                        \"\\\"order\\\": 0, \\\"template\\\": \\\"logs-*\\\",\" +\r\n                        // this is the actual change\r\n                        \"\\\"settings\\\": { \\\"index\\\": { \\\"refresh_interval\\\": \\\"31s\\\" } },\" +\r\n                        \"\\\"mappings\\\": { \\\"elog\\\": { \\\"properties\\\": { \\\"_log\\\": { \\\"type\\\": \\\"text\\\" } } } },\" +\r\n                        \"\\\"aliases\\\": {}\" +\r\n                        \"}\", StandardCharsets.UTF_8),\r\n                new BasicHeader(\"Content-Type\", \"application/json\"));\r\n\r\n        System.out.println(\"Update index template via REST: \" + restResponse.getStatusLine().getReasonPhrase());\r\n\r\n        // Will only show \"_log\" from default template but not \"_log2\" from specific template.\r\n        createAndVerifyIndex(\"logs-my-app-20992\");\r\n    }\r\n\r\n    private static XContentBuilder createMapping(String propertyName, String type) throws IOException {\r\n        return XContentFactory.jsonBuilder()\r\n                .startObject()\r\n                    .startObject(\"properties\")\r\n                        .startObject(propertyName)\r\n                            .field(\"type\", type)\r\n                        .endObject()\r\n                    .endObject()\r\n                .endObject();\r\n    }\r\n\r\n    private static void createAndVerifyIndex(String index) throws IOException {\r\n        transportClient.admin().indices().create(new CreateIndexRequest(index)).actionGet();\r\n        GetMappingsResponse response = transportClient.admin().indices().getMappings(new GetMappingsRequest().indices(index)).actionGet();\r\n        Map<String, String> props = (Map<String, String>) response.getMappings().get(index).get(\"elog\").getSourceAsMap().get(\"properties\");\r\n        System.out.println(\"[\" + index + \"] has field _log: \" + props.containsKey(\"_log\"));\r\n        System.out.println(\"[\" + index + \"] has field _log2: \" + props.containsKey(\"_log2\"));\r\n\r\n    }\r\n}\r\n```\r\n\r\n#### Additional findings\r\n\r\nIf we do the following: \r\n\r\n1. run the reproduction scenario\r\n2. restart Elasticsearch\r\n3. `PUT /logs-my-app-20993`\r\n\r\nThen we get:\r\n\r\n```\r\n[2017-07-31T12:38:34,387][DEBUG][o.e.c.m.MetaDataCreateIndexService] [AeWwSiu] [logs-my-app-20993] failed to create\r\norg.elasticsearch.index.mapper.MapperParsingException: Failed to parse mapping [properties]: Root mapping definition has unsupported parameters:  [_log2 : {type=text}]\r\n\tat org.elasticsearch.index.mapper.MapperService.internalMerge(MapperService.java:339) ~[elasticsearch-6.0.0-beta1-SNAPSHOT.jar:6.0.0-beta1-SNAPSHOT]\r\n\tat org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:267) ~[elasticsearch-6.0.0-beta1-SNAPSHOT.jar:6.0.0-beta1-SNAPSHOT]\r\n\tat org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$1.execute(MetaDataCreateIndexService.java:402) ~[elasticsearch-6.0.0-beta1-SNAPSHOT.jar:6.0.0-beta1-SNAPSHOT]\r\n\tat org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45) ~[elasticsearch-6.0.0-beta1-SNAPSHOT.jar:6.0.0-beta1-SNAPSHOT]\r\n\tat org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:640) ~[elasticsearch-6.0.0-beta1-SNAPSHOT.jar:6.0.0-beta1-SNAPSHOT]\r\n\tat org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:270) ~[elasticsearch-6.0.0-beta1-SNAPSHOT.jar:6.0.0-beta1-SNAPSHOT]\r\n\tat org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:195) [elasticsearch-6.0.0-beta1-SNAPSHOT.jar:6.0.0-beta1-SNAPSHOT]\r\n\tat org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:130) [elasticsearch-6.0.0-beta1-SNAPSHOT.jar:6.0.0-beta1-SNAPSHOT]\r\n\tat org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:150) [elasticsearch-6.0.0-beta1-SNAPSHOT.jar:6.0.0-beta1-SNAPSHOT]\r\n\tat org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:188) [elasticsearch-6.0.0-beta1-SNAPSHOT.jar:6.0.0-beta1-SNAPSHOT]\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:569) [elasticsearch-6.0.0-beta1-SNAPSHOT.jar:6.0.0-beta1-SNAPSHOT]\r\n\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:247) [elasticsearch-6.0.0-beta1-SNAPSHOT.jar:6.0.0-beta1-SNAPSHOT]\r\n\tat org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:210) [elasticsearch-6.0.0-beta1-SNAPSHOT.jar:6.0.0-beta1-SNAPSHOT]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_141]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_141]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_141]\r\nCaused by: org.elasticsearch.index.mapper.MapperParsingException: Root mapping definition has unsupported parameters:  [_log2 : {type=text}]\r\n\tat org.elasticsearch.index.mapper.DocumentMapperParser.checkNoRemainingFields(DocumentMapperParser.java:151) ~[elasticsearch-6.0.0-beta1-SNAPSHOT.jar:6.0.0-beta1-SNAPSHOT]\r\n\tat org.elasticsearch.index.mapper.DocumentMapperParser.parse(DocumentMapperParser.java:139) ~[elasticsearch-6.0.0-beta1-SNAPSHOT.jar:6.0.0-beta1-SNAPSHOT]\r\n\tat org.elasticsearch.index.mapper.DocumentMapperParser.parse(DocumentMapperParser.java:91) ~[elasticsearch-6.0.0-beta1-SNAPSHOT.jar:6.0.0-beta1-SNAPSHOT]\r\n\tat org.elasticsearch.index.mapper.MapperService.internalMerge(MapperService.java:336) ~[elasticsearch-6.0.0-beta1-SNAPSHOT.jar:6.0.0-beta1-SNAPSHOT]\r\n\t... 15 more\r\n```\r\n\r\n### Affected versions\r\n\r\nI've checked the following versions and could reproduce this issue on all of them:\r\n\r\n* 5.2.2\r\n* 5.5.0\r\n* 6.0.0-beta1\r\n\r\n### Workaround\r\n\r\nOne workaround is to redefine *all* index templates in the inheritance chain via the REST API, even if nothing has actually changed. In the example above, we'd need to issue a `PUT /_templates/specific-template` with the original content.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/320184645","html_url":"https://github.com/elastic/elasticsearch/issues/25899#issuecomment-320184645","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25899","id":320184645,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMDE4NDY0NQ==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2017-08-04T08:02:15Z","updated_at":"2017-08-04T08:02:15Z","author_association":"MEMBER","body":"@chengangxiong I've found out why it is failing: you need to add the mapping type too in the XContent when you create the mapping. So instead of:\r\n\r\n```java\r\nXContentBuilder mapping = XContentFactory.jsonBuilder()\r\n    .startObject()\r\n        .startObject(\"properties\")\r\n            .startObject(\"_log\")\r\n                .field(\"type\", \"text\")\r\n            .endObject()\r\n        .endObject()\r\n    .endObject();\r\n```\r\n\r\nyou need to create the mapping *including* the document type:\r\n\r\n```java\r\nXContentBuilder mapping = XContentFactory.jsonBuilder()\r\n    .startObject()\r\n        // define the document type\r\n        .startObject(\"elog\")\r\n            .startObject(\"properties\")\r\n                .startObject(\"_log\")\r\n                    .field(\"type\", \"text\")\r\n                .endObject()\r\n            .endObject()\r\n        .endObject()\r\n    .endObject();\r\n```\r\n\r\nAs we can explain this misbehavior by wrong API usage, I'll close this ticket. So you need to change your client code to include the mapping type, then it will work fine.\r\n\r\nHowever, I think that this behavior is trappy and I've created #26054 to discuss what we can do to improve the situation.","performed_via_github_app":null}]