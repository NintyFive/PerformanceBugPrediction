{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/9063","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9063/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9063/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9063/events","html_url":"https://github.com/elastic/elasticsearch/issues/9063","id":52825510,"node_id":"MDU6SXNzdWU1MjgyNTUxMA==","number":9063,"title":"CORS With Basic Authentication","user":{"login":"erikringsmuth","id":1128965,"node_id":"MDQ6VXNlcjExMjg5NjU=","avatar_url":"https://avatars0.githubusercontent.com/u/1128965?v=4","gravatar_id":"","url":"https://api.github.com/users/erikringsmuth","html_url":"https://github.com/erikringsmuth","followers_url":"https://api.github.com/users/erikringsmuth/followers","following_url":"https://api.github.com/users/erikringsmuth/following{/other_user}","gists_url":"https://api.github.com/users/erikringsmuth/gists{/gist_id}","starred_url":"https://api.github.com/users/erikringsmuth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erikringsmuth/subscriptions","organizations_url":"https://api.github.com/users/erikringsmuth/orgs","repos_url":"https://api.github.com/users/erikringsmuth/repos","events_url":"https://api.github.com/users/erikringsmuth/events{/privacy}","received_events_url":"https://api.github.com/users/erikringsmuth/received_events","type":"User","site_admin":false},"labels":[{"id":152517143,"node_id":"MDU6TGFiZWwxNTI1MTcxNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/REST%20API","name":":Core/Infra/REST API","color":"0e8a16","default":false,"description":"REST infrastructure and utilities"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2014-12-24T15:54:25Z","updated_at":"2018-04-02T07:31:53Z","closed_at":"2015-01-08T11:20:38Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Elasticsearch populates the `Access-Control-Allow-Headers` header on CORS requests [here in the NettyHttpChannel](https://github.com/elasticsearch/elasticsearch/blob/master/src/main/java/org/elasticsearch/http/netty/NettyHttpChannel.java#L119). This works as long as you don't send Basic Authentication credentials in the `Authorization` header. \n\nA CORS preflight request with Basic Authentication credentials looks like this.\n\n```\nOPTIONS https://domain2:9200/_nodes/stats?all=true HTTP/1.1\nHost: domain2:9200\nConnection: keep-alive\nAccess-Control-Request-Method: GET\nOrigin: http://domain1:80\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\nAccess-Control-Request-Headers: authorization\nAccept: */*\nReferer: http://domain1:80/\nAccept-Encoding: gzip, deflate, sdch\nAccept-Language: en-US,en;q=0.8,et;q=0.6\n```\n\nresponse\n\n```\nHTTP/1.1 200 OK\nAccess-Control-Allow-Origin: http://domain1:80\nAccess-Control-Max-Age: 1728000\nAccess-Control-Allow-Methods: OPTIONS, HEAD, GET, POST, PUT, DELETE\nAccess-Control-Allow-Headers: X-Requested-With, Content-Type, Content-Length\nAccess-Control-Allow-Credentials: true\nContent-Type: text/plain; charset=UTF-8\nContent-Length: 0\n```\n\nThe browser blocks the actual request from happening because `Authorization` is not in the `Access-Control-Allow-Headers` header.\n\nThere is a workaround by setting this in `elasticsearch.yml`.\n\n``` yaml\nhttp.cors.allow-headers: \"X-Requested-With, Content-Type, Content-Length, Authorization\"\n```\n\nThis works but isn't ideal. I think the best solution would be for elasticsearch to look at the request's `Access-Control-Request-Headers` header and dynamically populate the response `Access-Control-Allow-Headers` with a whitelisted set of headers.\n\nIn this case, the request header `Access-Control-Request-Headers: authorization` should create a response header `Access-Control-Allow-Headers: authorization`.\n\nIf you think this is overkill I'll just stick with setting `http.cors.allow-headers` in `elasticsearch.yml`.\n","closed_by":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"performed_via_github_app":null}