{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/29977","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29977/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29977/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29977/events","html_url":"https://github.com/elastic/elasticsearch/issues/29977","id":317450297,"node_id":"MDU6SXNzdWUzMTc0NTAyOTc=","number":29977,"title":"Rollup: Review cleanup todo","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"labels":[{"id":912843355,"node_id":"MDU6TGFiZWw5MTI4NDMzNTU=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Rollup","name":":Analytics/Rollup","color":"0e8a16","default":false,"description":"Turn fine-grained time-based data into coarser-grained data"},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-12-04T18:02:34Z","updated_at":"2018-07-31T20:44:58Z","closed_at":"2018-07-31T20:44:58Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"*Original comment by @polyfractal:*\n\nThis is a meta-issue covering the issues that need cleaning up from LINK REDACTED review.  We decided to fix up the easy stuff (typos, naming, etc), merge into the feature branch and then work on the rest of the issues individually so that they are easier to track, review, etc.\r\n\r\nIt's also evolved to include a bunch of other todos :)\r\n\r\n**Blockers**\r\n\r\n- [x] **[PR LINK REDACTED]** Mappings need to be created before indexing data\r\n- [x] **[PR LINK REDACTED]** \"Rollup Capabilities\" API so that kibana can determine what is available.  Depends on the PR LINK REDACTED because we need the `_meta` to resolve the capabilities\r\n - [x] **[PR LINK REDACTED]** Allow minimal query/filtering (e.g. time filtering for kibana): LINK REDACTED\r\n- [x] **[PR LINK REDACTED]** Make `date_histogram` mandatory\r\n- [x]  **[PR LINK REDACTED]** Date histo config still only accepts long interval, not TimeValue.\r\n- [x] **[PR LINK REDACTED]** Fix interval value in the rollup doc (broken after metadata refactor)\r\n- [x] Documentation :) LINK REDACTED\r\n- [x] Tests to verify multiple jobs in same index work correctly (search result accuracy)\r\n- [x] Look through existing `norelease` and see if any are valid (I suspect many are old/no longer needed) HASH REDACTED\r\n- ~Default cron to interval, make optional~\r\n- [x] **[PR LINK REDACTED]** Expliclty named indices rather than magic conventions\r\n- [x] **[PR LINK REDACTED]** Add field mapping check to allow more robust field filtering on search\r\n- [x] CI build script is hard-coded to use ES `master`, remove this before release! LINK REDACTED\r\n- [x] **[PR LINK REDACTED]** \"delay\" or \"lag\" option, to allow the user to configure how long to wait before rolling up the leading edge.  E.g. to allow data to arrive a bit late.  This should default to the date_histo interval (and not be allowed lower) so that we never collect a partial bucket on the leading edge.  It should only allow multiples of the interval too, for the same reason\r\n- [x] **[PR LINK REDACTED]** Fix interval filtering when there are overlapping jobs in same index\r\n- [x] **[PR LINK REDACTED]** Save security headers from user who created job to reuse in searches\r\n- [x] **[PR LINK REDACTED]** Re-arrange field name formatting to `field.agg_type.value` so that field-level security can be implemented\r\n- [x] Check with PM to see what license level Rollup should be.\r\n\r\n**High priority**\r\n- [ ] More work on interval filtering, allowing only factors-of-interval, etc: LINK REDACTED LINK REDACTED\r\n- [x] Histograms (not date histo) are essentially untested HASH REDACTED\r\n- [x] Terms agg search is mostly working, but there are some sorting issues so something is funky. It also doesn't pass through any settings like size\r\n- [x] **[PR LINK REDACTED]** Checkpoint state when job is stopped\r\n- [ ] Checkpoint state periodically based on time, rather than pages/documents\r\n- [ ] Upgrade and bwc of jobs, rollup metadata\r\n- [ ] \"Terms\" metric, to collect terms-per-bucket without having to group on them\r\n- [ ] Missing option for composite terms\r\n- [ ] Expose StringTerms/LongTerms bucket's `keyed`, `formatter` in core (RollupResponseTranslator)\r\n\r\n**Nice to have**\r\n- [ ] Start/stop multiple jobs with one API call (star patterns, comma-delimited, etc)\r\n- [x] See if we can check the field mappings during rollup config validation (e.g make sure the fields are the right data type, etc)\r\n- [ ] soft limit on number of configured rollups (to prevent abuse)\r\n- [ ] Dry run option on starting the job, which checks some kind of heuristic (`num_rollups * k > num_documents`) and warns if the heuristic is triggered.  This is to help the user not create a rollup that doesn't significantly compress compared to the original data.\r\n- [ ]  Enable Rollover for the rolled index\r\n- [ ] Allow jobs to be updated (but only after they are stopped)\r\n- [ ] Add `\"proceed_timestamp\"` field to rollup documents\r\n- [x] Change `size` to `page_size`\r\n- [ ] Configurable DeleteJob timeout\r\n\r\n**Code quality issues**\r\n\r\n- [ ] Investigate if we can reduce buckets on the fly, instead of at the end of response translation LINK REDACTED\r\n- [ ] Can we remove `unrollSubAggsFromMulti()`? LINK REDACTED\r\n- [x] Expose formatter on various aggs so we can use it when translating: LINK REDACTED\r\n- [x] **[PR LINK REDACTED]** -- Return the leaf node agg object if we don't need to do any manipulations: LINK REDACTED \r\n- [ ] Use `getWriteableName()` instead of `instanceof`? LINK REDACTED\r\n- [x] **[PR LINK REDACTED]** Fix counting logic for max/min/sum/etc: LINK REDACTED\r\n- [x] **[PR LINK REDACTED]** -- Re-evaluate usage of metadata for counts... might not need it anymore?  Can we just use the naming convention? LINK REDACTED  LINK REDACTED LINK REDACTED \r\n- [x] Allow top-level metric aggs in RollupSearch: LINK REDACTED\r\n- [ ] Better handling of looking up computed field, nullness, scripts, etc: LINK REDACTED\r\n- [x] **[PR LINK REDACTED]** Terms aggs no longer need filtering criteria since we only page via `composite`, convert to no-op? LINK REDACTED LINK REDACTED\r\n- [x] Fully implement `Writeable` on builders, add `AbstractWireSerialisingTestCase` tests: LINK REDACTED LINK REDACTED LINK REDACTED LINK REDACTED LINK REDACTED LINK REDACTED\r\n- [x] Add test to ensure IndexerState ordinals don't change between versions: LINK REDACTED HASH REDACTED\r\n- [x] **[PR LINK REDACTED]** Double-check that converting Infinity to null is actually needed: LINK REDACTED LINK REDACTED\r\n- [x] **[PR LINK REDACTED]** Persist `after`  in addition to the `current` page position: LINK REDACTED\r\n- ~Better way to convert xcontent string into enum? LINK REDACTED\r\n- [x] There's an NPE on index pattern rollup searches that needs to be chased down\r\n- [ ] RollupIT is garbage and really needs to be rewritten or removed, or turned into a proper QA module\r\n- [x] **[PR LINK REDACTED]** I think the yaml REST tests need updating in places.\r\n\r\n/cc @jimczi @colings86 \r\n  ","closed_by":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"performed_via_github_app":null}