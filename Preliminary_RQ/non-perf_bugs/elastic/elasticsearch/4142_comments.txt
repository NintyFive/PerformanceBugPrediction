[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28192462","html_url":"https://github.com/elastic/elasticsearch/issues/4142#issuecomment-28192462","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4142","id":28192462,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTkyNDYy","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2013-11-11T11:50:19Z","updated_at":"2013-11-11T15:22:51Z","author_association":"CONTRIBUTOR","body":"@martijnvg i'm not sure this makes sense for the bool filter.  `should` clauses in the query affect relevance, but the filter works with plain boolean logic.  if we were to set `minimum_should_match` to zero in the bool filter, then no `should` clauses would be required, and you may as well not execute any of them. \n\nIn other words you lose the ability to write the following with a single `bool` query:\n\n```\nWHERE foo=1 AND (bar = 2 OR baz=2)\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28208978","html_url":"https://github.com/elastic/elasticsearch/issues/4142#issuecomment-28208978","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4142","id":28208978,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MjA4OTc4","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2013-11-11T15:30:27Z","updated_at":"2013-11-11T15:30:27Z","author_association":"MEMBER","body":"@clintongormley I don't like the implicit `minimum_should_match=1`. I think it makes sense to ignore the `should` clauses from a boolean logic point of view if `must` or `must_not` is specified. If someone wants the `should` clauses also to matter (in addition to the specified `must` / `must_not`), then the option that enables the `minimum_should_match=1` behaviour should be enabled. We just need to add this `minimum_should_match=1` option.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28211374","html_url":"https://github.com/elastic/elasticsearch/issues/4142#issuecomment-28211374","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4142","id":28211374,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MjExMzc0","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2013-11-11T15:56:20Z","updated_at":"2013-11-11T15:56:20Z","author_association":"CONTRIBUTOR","body":"Why would you disable the should clauses? If you don't want to run the should clauses, then don't specify them.  The `bool` filter is a different beast from the `bool` query because the filter is pure boolean logic.  \n\nSo you need to support AND, OR and NOT.  With `must` and `must_not` you have AND and NOT, but not OR.  Why should I have to add the `minimum_should_match` parameter just to re-enable OR?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28436541","html_url":"https://github.com/elastic/elasticsearch/issues/4142#issuecomment-28436541","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4142","id":28436541,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDM2NTQx","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2013-11-13T21:40:07Z","updated_at":"2013-11-13T21:41:24Z","author_association":"MEMBER","body":"I get your point about not specifying `should` clauses at all when these clauses shouldn't be taken into account.\n\nPersonally I think the bool filter should behave the same as if I would wrap the bool query into a filter, but that isn't the case right now, because of the implicit `minimum_should_match=1`. Functionally I see the `bool` query as an extension of the `bool` filter with scoring is an addition.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28801834","html_url":"https://github.com/elastic/elasticsearch/issues/4142#issuecomment-28801834","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4142","id":28801834,"node_id":"MDEyOklzc3VlQ29tbWVudDI4ODAxODM0","user":{"login":"lmenezes","id":750074,"node_id":"MDQ6VXNlcjc1MDA3NA==","avatar_url":"https://avatars1.githubusercontent.com/u/750074?v=4","gravatar_id":"","url":"https://api.github.com/users/lmenezes","html_url":"https://github.com/lmenezes","followers_url":"https://api.github.com/users/lmenezes/followers","following_url":"https://api.github.com/users/lmenezes/following{/other_user}","gists_url":"https://api.github.com/users/lmenezes/gists{/gist_id}","starred_url":"https://api.github.com/users/lmenezes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lmenezes/subscriptions","organizations_url":"https://api.github.com/users/lmenezes/orgs","repos_url":"https://api.github.com/users/lmenezes/repos","events_url":"https://api.github.com/users/lmenezes/events{/privacy}","received_events_url":"https://api.github.com/users/lmenezes/received_events","type":"User","site_admin":false},"created_at":"2013-11-19T15:59:18Z","updated_at":"2013-11-19T15:59:18Z","author_association":"CONTRIBUTOR","body":"hey, sorry about jumping in... \n\nI actually got here looking for something related to a bug I found(and it's actually already solved https://github.com/elasticsearch/elasticsearch/issues/2979. really need to update...).\n\nBut anyway, I do think that the implicit minimum_should_match=1 is good. At the end, it doesn't make sense making optional the should block as a whole(if it doesn't affect score and it's optional, you might as well throw it away).\n\nOn the other hand, it could be interesting being able to increase the value of minimum_should_match(even though that makes things more expensive).\n\ncurrently, If I want 2 out of 3 clauses to match(using a filter), what would be the recommended approach? And would it be more performant than having this configurable minimum_should_match inside the boolfilter?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28969680","html_url":"https://github.com/elastic/elasticsearch/issues/4142#issuecomment-28969680","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4142","id":28969680,"node_id":"MDEyOklzc3VlQ29tbWVudDI4OTY5Njgw","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2013-11-21T09:38:56Z","updated_at":"2013-11-21T09:38:56Z","author_association":"MEMBER","body":"> But anyway, I do think that the implicit minimum_should_match=1 is good. At the end, it doesn't make sense making optional the should block as a whole(if it doesn't affect score and it's optional, you might as well throw it away).\n\nThat makes sense, however I'm still leaning towards `minimum_should_match=0` as default for consistency with the bool query.\n\n> currently, If I want 2 out of 3 clauses to match(using a filter), what would be the recommended approach? And would it be more performant than having this configurable minimum_should_match inside the boolfilter?\n\nI would wrap the bool query in a query filter, this should give what you want. Btw I started PR #4208 that includes changes that allow the bool filter to support `minimum_should_match`.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28970541","html_url":"https://github.com/elastic/elasticsearch/issues/4142#issuecomment-28970541","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4142","id":28970541,"node_id":"MDEyOklzc3VlQ29tbWVudDI4OTcwNTQx","user":{"login":"lmenezes","id":750074,"node_id":"MDQ6VXNlcjc1MDA3NA==","avatar_url":"https://avatars1.githubusercontent.com/u/750074?v=4","gravatar_id":"","url":"https://api.github.com/users/lmenezes","html_url":"https://github.com/lmenezes","followers_url":"https://api.github.com/users/lmenezes/followers","following_url":"https://api.github.com/users/lmenezes/following{/other_user}","gists_url":"https://api.github.com/users/lmenezes/gists{/gist_id}","starred_url":"https://api.github.com/users/lmenezes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lmenezes/subscriptions","organizations_url":"https://api.github.com/users/lmenezes/orgs","repos_url":"https://api.github.com/users/lmenezes/repos","events_url":"https://api.github.com/users/lmenezes/events{/privacy}","received_events_url":"https://api.github.com/users/lmenezes/received_events","type":"User","site_admin":false},"created_at":"2013-11-21T09:49:44Z","updated_at":"2013-11-21T09:49:44Z","author_association":"CONTRIBUTOR","body":"@martijnvg minimum_should_match=0 in case you have no must/must_not, right? as long as changing the minimum_should_match is possible, i'm cool with that :)\n\nabout the 2 out of 3 clauses, i didn't really mean how to achieve it, but rather as an argument on how other approaches would compare in performance to allowing changing minimum_should_match inside boolfilter. but seeing you already started a PR for that, i guess it answers my question as well. \n\ncool, looking forward to it.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28971628","html_url":"https://github.com/elastic/elasticsearch/issues/4142#issuecomment-28971628","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4142","id":28971628,"node_id":"MDEyOklzc3VlQ29tbWVudDI4OTcxNjI4","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2013-11-21T10:08:31Z","updated_at":"2013-11-21T10:08:31Z","author_association":"MEMBER","body":"@lmenezes I think the default for `minimum_should_match`  should be `0` in the case if there're must or must_not clauses. If there are only `should` clauses then the default `minimum_should_match` should be `1`. I want the `minimum_should_match` to be changeable as well :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/28972122","html_url":"https://github.com/elastic/elasticsearch/issues/4142#issuecomment-28972122","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4142","id":28972122,"node_id":"MDEyOklzc3VlQ29tbWVudDI4OTcyMTIy","user":{"login":"lmenezes","id":750074,"node_id":"MDQ6VXNlcjc1MDA3NA==","avatar_url":"https://avatars1.githubusercontent.com/u/750074?v=4","gravatar_id":"","url":"https://api.github.com/users/lmenezes","html_url":"https://github.com/lmenezes","followers_url":"https://api.github.com/users/lmenezes/followers","following_url":"https://api.github.com/users/lmenezes/following{/other_user}","gists_url":"https://api.github.com/users/lmenezes/gists{/gist_id}","starred_url":"https://api.github.com/users/lmenezes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lmenezes/subscriptions","organizations_url":"https://api.github.com/users/lmenezes/orgs","repos_url":"https://api.github.com/users/lmenezes/repos","events_url":"https://api.github.com/users/lmenezes/events{/privacy}","received_events_url":"https://api.github.com/users/lmenezes/received_events","type":"User","site_admin":false},"created_at":"2013-11-21T10:16:57Z","updated_at":"2013-11-21T10:16:57Z","author_association":"CONTRIBUTOR","body":"yep, messed up with the no must, it should be in case you have must/must_not clauses. :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/30742839","html_url":"https://github.com/elastic/elasticsearch/issues/4142#issuecomment-30742839","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4142","id":30742839,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzQyODM5","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2013-12-17T11:11:34Z","updated_at":"2013-12-17T11:11:34Z","author_association":"CONTRIBUTOR","body":"We've agreed that defaulting `minimum_should_match` to 0 for the  `bool` filter is impractical.  Would be nice in the future to make `minimum_should_match` configurable at the cost of heavier execution, but closing this ticket for now.\n","performed_via_github_app":null}]