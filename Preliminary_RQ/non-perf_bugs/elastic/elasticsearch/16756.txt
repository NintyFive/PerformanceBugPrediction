{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/16756","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16756/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16756/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16756/events","html_url":"https://github.com/elastic/elasticsearch/issues/16756","id":135276885,"node_id":"MDU6SXNzdWUxMzUyNzY4ODU=","number":16756,"title":"Tribe client connects directly to client node over transport","user":{"login":"ppf2","id":7216393,"node_id":"MDQ6VXNlcjcyMTYzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/7216393?v=4","gravatar_id":"","url":"https://api.github.com/users/ppf2","html_url":"https://github.com/ppf2","followers_url":"https://api.github.com/users/ppf2/followers","following_url":"https://api.github.com/users/ppf2/following{/other_user}","gists_url":"https://api.github.com/users/ppf2/gists{/gist_id}","starred_url":"https://api.github.com/users/ppf2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppf2/subscriptions","organizations_url":"https://api.github.com/users/ppf2/orgs","repos_url":"https://api.github.com/users/ppf2/repos","events_url":"https://api.github.com/users/ppf2/events{/privacy}","received_events_url":"https://api.github.com/users/ppf2/received_events","type":"User","site_admin":false},"labels":[{"id":23715,"node_id":"MDU6TGFiZWwyMzcxNQ==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Edocs","name":">docs","color":"db755e","default":false,"description":"General docs changes"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2016-02-21T23:45:01Z","updated_at":"2017-01-24T08:42:23Z","closed_at":"2016-03-23T09:46:01Z","author_association":"MEMBER","active_lock_reason":null,"body":"This is observed in a setup where the tribe node does not have firewall access over the transport port to a client node of the downstream cluster:\n\n```\n[2016-02-14 20:52:16,243][WARN ][cluster.service          ] [tribe_node_name/t1] failed to connect to node [{client_node}{kH2yVx_WQ22qHmthaX_NHA}{10.8.17.130}{host_name/IP:9300}{data=false, master=false}]\nConnectTransportException[[client_node][host_name/IP:9300] connect_timeout[30s]]; nested: ConnectTimeoutException[connection timed out: host_name/IP:9300];\n    at org.elasticsearch.transport.netty.NettyTransport.connectToChannels(NettyTransport.java:951)\n    at org.elasticsearch.transport.netty.NettyTransport.connectToNode(NettyTransport.java:884)\n    at org.elasticsearch.transport.netty.NettyTransport.connectToNode(NettyTransport.java:857)\n    at org.elasticsearch.transport.TransportService.connectToNode(TransportService.java:243)\n    at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:474)\n    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)\n    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: org.jboss.netty.channel.ConnectTimeoutException: connection timed out: host_name/IP:9300\n    at org.jboss.netty.channel.socket.nio.NioClientBoss.processConnectTimeout(NioClientBoss.java:139)\n    at org.jboss.netty.channel.socket.nio.NioClientBoss.process(NioClientBoss.java:83)\n    at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)\n    at org.jboss.netty.channel.socket.nio.NioClientBoss.run(NioClientBoss.java:42)\n    at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\n    at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\n    ... 3 more\n```\n\nThe message is benign since there is no reason for the tribe node to connect directly to a downstream cluster's client node.  The behavior is likely due to how client nodes work (in general) where they will connect to all nodes in the cluster (and with tribe node being just a specialized client node, it just behaves the same way).   Perhaps we can add an exclusion for tribe node so it will not attempt to connect to the client nodes in the downstream clusters, etc..\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}