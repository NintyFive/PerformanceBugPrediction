[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/485025264","html_url":"https://github.com/elastic/elasticsearch/issues/41393#issuecomment-485025264","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41393","id":485025264,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NTAyNTI2NA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-04-19T22:04:35Z","updated_at":"2019-04-19T22:04:35Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/485028191","html_url":"https://github.com/elastic/elasticsearch/issues/41393#issuecomment-485028191","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41393","id":485028191,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NTAyODE5MQ==","user":{"login":"gwbrown","id":1522844,"node_id":"MDQ6VXNlcjE1MjI4NDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1522844?v=4","gravatar_id":"","url":"https://api.github.com/users/gwbrown","html_url":"https://github.com/gwbrown","followers_url":"https://api.github.com/users/gwbrown/followers","following_url":"https://api.github.com/users/gwbrown/following{/other_user}","gists_url":"https://api.github.com/users/gwbrown/gists{/gist_id}","starred_url":"https://api.github.com/users/gwbrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gwbrown/subscriptions","organizations_url":"https://api.github.com/users/gwbrown/orgs","repos_url":"https://api.github.com/users/gwbrown/repos","events_url":"https://api.github.com/users/gwbrown/events{/privacy}","received_events_url":"https://api.github.com/users/gwbrown/received_events","type":"User","site_admin":false},"created_at":"2019-04-19T22:23:06Z","updated_at":"2019-04-19T22:23:06Z","author_association":"CONTRIBUTOR","body":"Hi! What version are you encountering this behavior on?  Do you have an example of a scripted field definition that fails that you could share so we can reproduce this more easily?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/485031996","html_url":"https://github.com/elastic/elasticsearch/issues/41393#issuecomment-485031996","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41393","id":485031996,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NTAzMTk5Ng==","user":{"login":"Mekk","id":161873,"node_id":"MDQ6VXNlcjE2MTg3Mw==","avatar_url":"https://avatars2.githubusercontent.com/u/161873?v=4","gravatar_id":"","url":"https://api.github.com/users/Mekk","html_url":"https://github.com/Mekk","followers_url":"https://api.github.com/users/Mekk/followers","following_url":"https://api.github.com/users/Mekk/following{/other_user}","gists_url":"https://api.github.com/users/Mekk/gists{/gist_id}","starred_url":"https://api.github.com/users/Mekk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mekk/subscriptions","organizations_url":"https://api.github.com/users/Mekk/orgs","repos_url":"https://api.github.com/users/Mekk/repos","events_url":"https://api.github.com/users/Mekk/events{/privacy}","received_events_url":"https://api.github.com/users/Mekk/received_events","type":"User","site_admin":false},"created_at":"2019-04-19T22:49:09Z","updated_at":"2019-04-19T22:49:09Z","author_association":"NONE","body":"Mostly 6.7 although some on 7.0 too.\r\n\r\nMy scripts aren't particularly smart (mostly attempts to concatenate a few simple fields with newlines to make more table-friendly item, or attempts to extract most important text part for the same purpose).\r\nTwo most typical errors I faced\r\n```\r\nreturn doc['some.field'].value + doc['other.field'].value;     \r\n```\r\n(crash if some.field or other.field is not present, this crash can be also reproduced using params._source in a similar way)\r\n```\r\nString x = doc['some.field'].value;     \r\n```\r\n(crash on shards where some.field is text, not keyword, say because of mapping problem in the past)\r\n\r\nI also saw some NullPointerExceptions, most easily just by trying to call some method (like ```.indexOf```) on field which turned missing.\r\n\r\nAnd there were 6.7-7.0 changes (IIRC I had to replace some doc.containsKey(…) with doc[…].size()!-0). turned less \r\n\r\nExample of full script of a kind (not very interesting, drop try/catch to get errors sometimes, all those if's were built by repeatable attempts until I got it mostly working, the commented out xml.basic_info is my last actual crash triggered when xml.basic_info turned out mapped as text, not keyword, on older shards)\r\n```\r\ntry {\r\n\r\n    if(params._source.xml != null && params._source.xml.basic_info != null) {\r\n        return params._source.xml.basic_info;\r\n    }\r\n    /* if(doc['xml.basic_info'].size() != 0) {\r\n        return doc['xml.basic_info'].value;\r\n    } */\r\n\r\n    if(doc['xml.client'].size() != 0) {\r\n        String result = doc['xml.client'].value;\r\n\r\n        if(doc['xml.what'].size() != 0) {\r\n            result = result + '/' + doc['xml.what'].value;\r\n        }\r\n\r\n        if(doc['xml.msg_type'].size() != 0) {\r\n            result = result + '\r\n<' + doc['xml.msg_type'].value + '>';\r\n        }\r\n\r\n        if(doc['xml.result'].size() != 0) {\r\n            result = result + '\r\n' + doc['xml.result'].value;\r\n        }\r\n\r\n        if(doc['xml.err_code'].size() != 0) {\r\n                result = result + '\r\n' + doc['xml.err_code'].value;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n}\r\ncatch(Exception e) {\r\n    /* return \"ERROR: \" + e; */\r\n}\r\n```\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/485032185","html_url":"https://github.com/elastic/elasticsearch/issues/41393#issuecomment-485032185","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41393","id":485032185,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NTAzMjE4NQ==","user":{"login":"Mekk","id":161873,"node_id":"MDQ6VXNlcjE2MTg3Mw==","avatar_url":"https://avatars2.githubusercontent.com/u/161873?v=4","gravatar_id":"","url":"https://api.github.com/users/Mekk","html_url":"https://github.com/Mekk","followers_url":"https://api.github.com/users/Mekk/followers","following_url":"https://api.github.com/users/Mekk/following{/other_user}","gists_url":"https://api.github.com/users/Mekk/gists{/gist_id}","starred_url":"https://api.github.com/users/Mekk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mekk/subscriptions","organizations_url":"https://api.github.com/users/Mekk/orgs","repos_url":"https://api.github.com/users/Mekk/repos","events_url":"https://api.github.com/users/Mekk/events{/privacy}","received_events_url":"https://api.github.com/users/Mekk/received_events","type":"User","site_admin":false},"created_at":"2019-04-19T22:50:21Z","updated_at":"2019-04-19T22:50:21Z","author_association":"NONE","body":"Ah, btw, yet another way to crash is to \r\n```\r\ntry {\r\n    /// trigger some problem\r\n}\r\ncatch(Exception e) {\r\n     return e;\r\n}\r\n```\r\n(this is my actual case, of course I suppose direct return of some non-string object would do too)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/489793090","html_url":"https://github.com/elastic/elasticsearch/issues/41393#issuecomment-489793090","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41393","id":489793090,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4OTc5MzA5MA==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2019-05-06T21:38:34Z","updated_at":"2019-05-06T21:38:34Z","author_association":"MEMBER","body":"I don't think there is much that can be done here, but I will mark this for discussion by the rest of the team.\r\n\r\nWhen a failure occurs in a script, it occurs in one to many shards, so there isn't necessarily one error that can be shown. Additionally, scripts can be used in many places within elasticsearch APIs, so there isn't a simple way to extract the fact a script failed, perhaps deep down within the request. \r\n\r\nFinally, return the exception as you suggest isn't possible because each location scripts are used has a concrete return type. Exceptions are exceptional cases, and that is what `throw` is for.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/490040748","html_url":"https://github.com/elastic/elasticsearch/issues/41393#issuecomment-490040748","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41393","id":490040748,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MDA0MDc0OA==","user":{"login":"Mekk","id":161873,"node_id":"MDQ6VXNlcjE2MTg3Mw==","avatar_url":"https://avatars2.githubusercontent.com/u/161873?v=4","gravatar_id":"","url":"https://api.github.com/users/Mekk","html_url":"https://github.com/Mekk","followers_url":"https://api.github.com/users/Mekk/followers","following_url":"https://api.github.com/users/Mekk/following{/other_user}","gists_url":"https://api.github.com/users/Mekk/gists{/gist_id}","starred_url":"https://api.github.com/users/Mekk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mekk/subscriptions","organizations_url":"https://api.github.com/users/Mekk/orgs","repos_url":"https://api.github.com/users/Mekk/repos","events_url":"https://api.github.com/users/Mekk/events{/privacy}","received_events_url":"https://api.github.com/users/Mekk/received_events","type":"User","site_admin":false},"created_at":"2019-05-07T11:29:16Z","updated_at":"2019-05-07T11:29:16Z","author_association":"NONE","body":"My suggestions are strictly about Kibana scripted fields (not about any painless usage cases). Those scripts are used to scriptlety-implement additional fields in query results.\r\n\r\nIf I understand correctly, they are actually implemented by appending some scripting clauses (filter/script or sth like that) to search queries. So I imagine solution like:\r\n\r\n- while defining scripted field in Kibana I can fill field like\r\n```\r\n       In case of errors : \r\n              ( ) fail shard processing\r\n              (*) mark record with tag [ _scripted_field_abcdef_failed ]\r\n                     [x] and store error diagnostics in field [ _painless_error_message ]\r\n```\r\n\r\n- depending on those settings kibana changes the query it executes (maybe it just wraps my script body with additional try/catch, or maybe it hints ElasticSearch to handle  errors specifically…)\r\n\r\nThe latter idea (silently wrapping script text with additional try/catch) seems to be implementable in kibana solely, but I feel that some standarized ES backend would do better as it could be used also in other contexts.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/497440328","html_url":"https://github.com/elastic/elasticsearch/issues/41393#issuecomment-497440328","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41393","id":497440328,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzQ0MDMyOA==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2019-05-30T18:44:02Z","updated_at":"2019-05-30T18:44:02Z","author_association":"CONTRIBUTOR","body":"The team discussed this and could not reason a convenient wrapping of such failures. It is common for some fields to be missing from documents, while present in others. It is best if there are NPE-guards on field accesses just in case. \r\n\r\nIt might help a ton to receive more information from Kibana about the shard failures: https://github.com/elastic/kibana/issues/5957.\r\n\r\ninstead of the simple message:\r\n<img width=\"342\" alt=\"Screen Shot 2019-05-30 at 11 40 05 AM\" src=\"https://user-images.githubusercontent.com/388837/58655952-35447c80-82d0-11e9-802f-7445d37730c0.png\">\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/555724307","html_url":"https://github.com/elastic/elasticsearch/issues/41393#issuecomment-555724307","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41393","id":555724307,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTcyNDMwNw==","user":{"login":"thekofimensah","id":23384471,"node_id":"MDQ6VXNlcjIzMzg0NDcx","avatar_url":"https://avatars0.githubusercontent.com/u/23384471?v=4","gravatar_id":"","url":"https://api.github.com/users/thekofimensah","html_url":"https://github.com/thekofimensah","followers_url":"https://api.github.com/users/thekofimensah/followers","following_url":"https://api.github.com/users/thekofimensah/following{/other_user}","gists_url":"https://api.github.com/users/thekofimensah/gists{/gist_id}","starred_url":"https://api.github.com/users/thekofimensah/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thekofimensah/subscriptions","organizations_url":"https://api.github.com/users/thekofimensah/orgs","repos_url":"https://api.github.com/users/thekofimensah/repos","events_url":"https://api.github.com/users/thekofimensah/events{/privacy}","received_events_url":"https://api.github.com/users/thekofimensah/received_events","type":"User","site_admin":false},"created_at":"2019-11-19T21:30:09Z","updated_at":"2019-11-19T21:30:31Z","author_association":"NONE","body":"I have to agree.. I have a field that doesn't occur in ever document and where it doesn't exist for one day of logs, then I get a shard failure and the rest of the documents don't calculate the field. \r\n\r\nSo I have logs, and on Aug 31, logs come in that don't have one of the scripted field's fields. And so I get a  3 of 6 shards failed because of that missing data point. In a visualization, the data gets cut after Aug 31, and in the discover tab, I get on the top left the # of results returned, but I don't get any results actually appearing. Only when I look prior or after Aug 31 am I able to see the results. \r\n\r\nMy scripted field is:\r\n```\r\nif (doc['field1'].size() != 0 && doc['field2'].value > 0) {\r\n    return doc['field1'].value / doc['field2'].value\r\n}else {\r\n    return null\r\n}\r\n```\r\nI can remove this error with @Mekk suggestion:\r\n```\r\ntry{\r\nif (doc['meterEnergyConsumptionKwh'].size() != 0 && doc['meterEnergyConsumptionKwh'].value > 0) {\r\n    return doc['meterEnergyConsumptionCost'].value / doc['meterEnergyConsumptionKwh'].value\r\n}else {\r\n    return null\r\n}\r\n}\r\ncatch(Exception e) {\r\n    /* return \"ERROR: \" + e; */\r\n}\r\n```\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/614890076","html_url":"https://github.com/elastic/elasticsearch/issues/41393#issuecomment-614890076","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41393","id":614890076,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNDg5MDA3Ng==","user":{"login":"stu-elastic","id":24232742,"node_id":"MDQ6VXNlcjI0MjMyNzQy","avatar_url":"https://avatars0.githubusercontent.com/u/24232742?v=4","gravatar_id":"","url":"https://api.github.com/users/stu-elastic","html_url":"https://github.com/stu-elastic","followers_url":"https://api.github.com/users/stu-elastic/followers","following_url":"https://api.github.com/users/stu-elastic/following{/other_user}","gists_url":"https://api.github.com/users/stu-elastic/gists{/gist_id}","starred_url":"https://api.github.com/users/stu-elastic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stu-elastic/subscriptions","organizations_url":"https://api.github.com/users/stu-elastic/orgs","repos_url":"https://api.github.com/users/stu-elastic/repos","events_url":"https://api.github.com/users/stu-elastic/events{/privacy}","received_events_url":"https://api.github.com/users/stu-elastic/received_events","type":"User","site_admin":false},"created_at":"2020-04-16T20:54:36Z","updated_at":"2020-04-16T20:54:36Z","author_association":"CONTRIBUTOR","body":"@Mekk \r\nKibana has enhanced it's error reporting for these kinds of errors.  If I create an index pattern for several indicies and a scripted field uses fields missing from certain indicies in the index pattern, in discover I see the following on `7.5.2`:\r\n![fail1](https://user-images.githubusercontent.com/24232742/79505709-03c0c680-7ff2-11ea-9bf2-9b6d8008741a.png)\r\n![fail2](https://user-images.githubusercontent.com/24232742/79505720-07544d80-7ff2-11ea-98c9-0509d3cdf05c.png)\r\n![fail3](https://user-images.githubusercontent.com/24232742/79505728-09b6a780-7ff2-11ea-997f-40723deed78e.png)\r\n","performed_via_github_app":null}]