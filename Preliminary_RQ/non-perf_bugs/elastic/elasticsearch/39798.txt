{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/39798","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39798/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39798/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39798/events","html_url":"https://github.com/elastic/elasticsearch/issues/39798","id":418404592,"node_id":"MDU6SXNzdWU0MTg0MDQ1OTI=","number":39798,"title":"SQL: don't fold constants if it results in non-json serializable script params ","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"labels":[{"id":912794284,"node_id":"MDU6TGFiZWw5MTI3OTQyODQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Query%20Languages/SQL","name":":Query Languages/SQL","color":"0e8a16","default":false,"description":"SQL querying"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":929267538,"node_id":"MDU6TGFiZWw5MjkyNjc1Mzg=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/team-discuss","name":"team-discuss","color":"fbca04","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2019-03-07T16:36:57Z","updated_at":"2019-03-11T21:38:41Z","closed_at":"2019-03-11T21:38:41Z","author_association":"MEMBER","active_lock_reason":null,"body":"We are currently folding constants as much as we can, which can sometimes results in generating parameters that cannot be serialized either by json or by both json and stream IO. To understand the issue, consider the following example:\r\n\r\n```\r\nDELETE test\r\nPUT test\r\n{\r\n  \"mappings\": {\r\n      \"properties\": {\r\n        \"timestamp\": {\r\n          \"type\": \"date\"\r\n        }\r\n      }\r\n  }\r\n}\r\n\r\nPUT test/_doc/1\r\n{\r\n  \"timestamp\": \"2019-03-05T21:23:19.000Z\"\r\n}\r\n\r\nPOST _sql?format=txt\r\n{\r\n  \"query\": \"SELECT timestamp AS a  FROM test WHERE timestamp + INTERVAL '1' DAY > CONVERT('2019-03-05T21:23:19.000Z', SQL_TIMESTAMP)\"\r\n}\r\n```\r\n\r\nThis example works and returns one result as expected. However, if we run the `_sql/translate` command on it and try to execute it against elastic we will get no results:\r\n\r\n```\r\nPOST _sql/translate\r\n{\r\n  \"query\": \"SELECT timestamp AS a  FROM test WHERE timestamp + INTERVAL '1' DAY > CONVERT('2019-03-05T21:23:19.000Z', SQL_TIMESTAMP)\"\r\n}\r\n\r\nPOST test/_search\r\n{\r\n  \"size\" : 1000,\r\n  \"query\" : {\r\n    \"script\" : {\r\n      \"script\" : {\r\n        \"source\" : \"InternalSqlScriptUtils.nullSafeFilter(InternalSqlScriptUtils.gt(InternalSqlScriptUtils.add(InternalSqlScriptUtils.docValue(doc,params.v0),InternalSqlScriptUtils.intervalDayTime(params.v1,params.v2)),params.v3))\",\r\n        \"lang\" : \"painless\",\r\n        \"params\" : {\r\n          \"v0\" : \"timestamp\",\r\n          \"v1\" : \"PT24H\",\r\n          \"v2\" : \"INTERVAL_DAY\",\r\n          \"v3\" : \"2019-03-05T21:23:19.000Z\"\r\n        }\r\n      },\r\n      \"boost\" : 1.0\r\n    }\r\n  },\r\n  \"_source\" : false,\r\n  \"stored_fields\" : \"_none_\",\r\n  \"docvalue_fields\" : [\r\n    {\r\n      \"field\" : \"timestamp\",\r\n      \"format\" : \"epoch_millis\"\r\n    }\r\n  ],\r\n  \"sort\" : [\r\n    {\r\n      \"_doc\" : {\r\n        \"order\" : \"asc\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nThe reason for the failure is in the `v3` parameter of the script:\r\n```\r\nInternalSqlScriptUtils.nullSafeFilter(\r\n  InternalSqlScriptUtils.gt(\r\n    InternalSqlScriptUtils.add(\r\n      InternalSqlScriptUtils.docValue(doc,params.v0),\r\n      InternalSqlScriptUtils.intervalDayTime(params.v1,params.v2)\r\n    ),\r\n    params.v3\r\n  )\r\n)\r\n ```\r\nThe third parameter is ZonedDateTime object which can be serialized over stream IO and therefore can be sent over in a search request. As a result the query doesn't fail when it is executed inside SQL. However, when we try to generate JSON request the resulted `ZonedDateTime` object in third parameter is serialized as the string ` \"2019-03-05T21:23:19.000Z\"` which is passed to `InternalSqlScriptUtils.gt(..., ....)` that compares this string and `ZonedDateTime` returned by `add(...)` and returns `false`. A similar problem exists if we replace  `> CONVERT('2019-03-05T21:23:19.000Z', SQL_TIMESTAMP)` with `< NOW()`. `NOW()` generates `ZonedDateTime` which is serialized as a string and we again end up with string to date comparison.\r\n\r\nThe problem is even more pronounced with geo objects in `geosql` branch since there is no support for stream io serialization of these objects at the moment, so if `ST_WKTTOSQL('POINT (10 20))` is folded as a script parameter, such request would only work on a single node and file in a distributed environment where search requests (with painless parameters) are serialized and sent to another machine. \r\n \r\nI am not really sure what's the best way to deal with this. So, I would like to solicit ideas and start a discussion on how to deal with it.","closed_by":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"performed_via_github_app":null}