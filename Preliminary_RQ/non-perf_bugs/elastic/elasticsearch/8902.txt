{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/8902","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8902/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8902/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8902/events","html_url":"https://github.com/elastic/elasticsearch/issues/8902","id":51694904,"node_id":"MDU6SXNzdWU1MTY5NDkwNA==","number":8902,"title":"Should GET / return 503 in case of discovery.zen.no_master_block: write ?","user":{"login":"Mpdreamz","id":245275,"node_id":"MDQ6VXNlcjI0NTI3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/245275?v=4","gravatar_id":"","url":"https://api.github.com/users/Mpdreamz","html_url":"https://github.com/Mpdreamz","followers_url":"https://api.github.com/users/Mpdreamz/followers","following_url":"https://api.github.com/users/Mpdreamz/following{/other_user}","gists_url":"https://api.github.com/users/Mpdreamz/gists{/gist_id}","starred_url":"https://api.github.com/users/Mpdreamz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mpdreamz/subscriptions","organizations_url":"https://api.github.com/users/Mpdreamz/orgs","repos_url":"https://api.github.com/users/Mpdreamz/repos","events_url":"https://api.github.com/users/Mpdreamz/events{/privacy}","received_events_url":"https://api.github.com/users/Mpdreamz/received_events","type":"User","site_admin":false},"labels":[{"id":144797810,"node_id":"MDU6TGFiZWwxNDQ3OTc4MTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Core","name":":Core/Infra/Core","color":"0e8a16","default":false,"description":"Core issues without another label"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2014-12-11T14:49:55Z","updated_at":"2018-03-14T10:36:38Z","closed_at":"2018-03-14T10:36:38Z","author_association":"MEMBER","active_lock_reason":null,"body":"Given we have two nodes one `(A)` with: \n\n```\nnode.master: false\ndiscovery.zen.no_master_block: write\n```\n\nand `(B)` being a vanilla master node. \n\nWhen we stop node `(B)`, `(A)` is still allowed to service read requests. \nHowever when calling \n\n`GET http://(A):9200/ HTTP/1.1`\n\nIt currently returns:\n\n`HTTP/1.1 503 Service Unavailable`\n\nbut is the service really unavailable in this case? Since we now explicitly allow you to configure for this state IMO it should return `200 OK` with a possible boolean in the response signalling its in readonly mode. \n\nA call to `_search` in this state also results in a `200` and not `503`.\n","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}