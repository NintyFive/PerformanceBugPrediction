{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/48671","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48671/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48671/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48671/events","html_url":"https://github.com/elastic/elasticsearch/issues/48671","id":514425479,"node_id":"MDU6SXNzdWU1MTQ0MjU0Nzk=","number":48671,"title":"Negative score for Similarity","user":{"login":"lionsoul2014","id":7111577,"node_id":"MDQ6VXNlcjcxMTE1Nzc=","avatar_url":"https://avatars0.githubusercontent.com/u/7111577?v=4","gravatar_id":"","url":"https://api.github.com/users/lionsoul2014","html_url":"https://github.com/lionsoul2014","followers_url":"https://api.github.com/users/lionsoul2014/followers","following_url":"https://api.github.com/users/lionsoul2014/following{/other_user}","gists_url":"https://api.github.com/users/lionsoul2014/gists{/gist_id}","starred_url":"https://api.github.com/users/lionsoul2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lionsoul2014/subscriptions","organizations_url":"https://api.github.com/users/lionsoul2014/orgs","repos_url":"https://api.github.com/users/lionsoul2014/repos","events_url":"https://api.github.com/users/lionsoul2014/events{/privacy}","received_events_url":"https://api.github.com/users/lionsoul2014/received_events","type":"User","site_admin":false},"labels":[{"id":418189364,"node_id":"MDU6TGFiZWw0MTgxODkzNjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Ranking","name":":Search/Ranking","color":"0e8a16","default":false,"description":"Scoring, rescoring, rank evaluation."},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-10-30T06:18:05Z","updated_at":"2019-10-30T13:14:49Z","closed_at":"2019-10-30T13:14:49Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version** : 7.4.0\r\n\r\n**JVM version** (`java -version`): 1.8.0_172\r\n\r\nI copied the source code of BM25Similarity from lucene 8.2.0 source tree and renamed it to MyBM25Similarity and make it a plugin for elasticsearch, here is code blocks for the main interfaces:\r\n```java\r\n    /** Implemented as <code>log(1 + (docCount - docFreq + 0.5)/(docFreq + 0.5))</code>. */\r\n    protected float idf(long docFreq, long docCount) \r\n    {\r\n        return (float) Math.log(1 + (docCount - docFreq + 0.5D)/(docFreq + 0.5D));\r\n    }\r\n\r\n    @Override\r\n    public final long computeNorm(FieldInvertState state) \r\n    {\r\n        final int numTerms;\r\n        if (state.getIndexOptions() == IndexOptions.DOCS && state.getIndexCreatedVersionMajor() >= 8) {\r\n            numTerms = state.getUniqueTermCount();\r\n        } else if (discountOverlaps) {\r\n            numTerms = state.getLength() - state.getNumOverlap();\r\n        } else {\r\n            numTerms = state.getLength();\r\n        }\r\n        \r\n        // System.out.println(this.getClass() + \", \" + state.getName() + \", terms:  \" + numTerms);\r\n        return SmallFloat.intToByte4(numTerms);\r\n    }\r\n\r\n    @Override\r\n    public final SimScorer scorer(float boost, CollectionStatistics collectionStats, TermStatistics... termStats) \r\n    {\r\n        Explanation idf = termStats.length == 1\r\n        \t\t? idfExplain(collectionStats, termStats[0]) : idfExplain(collectionStats, termStats);\r\n        float avgdl = avgFieldLength(collectionStats);\r\n\r\n        float[] cache = new float[256];\r\n        for (int i = 0; i < cache.length; i++) {\r\n            cache[i] = k1 * ((1 - b) + b * LENGTH_TABLE[i] / avgdl);\r\n        }\r\n        \r\n        final float boostVal = boost * (k1 + 1);\r\n        return new BM25Scorer(boostVal, k1, b, freqModifierName, freqModifier, idf, avgdl, cache);\r\n    }\r\n```\r\n\r\nMy mapping for search:\r\n```json\r\n{\r\n\t\"my_repository\": {\r\n\t\t\"aliases\": {},\r\n\t\t\"mappings\": {\r\n\t\t\t\"dynamic\": \"strict\",\r\n\t\t\t\"properties\": {\r\n\t\t\t\t\"attr_set\": {\r\n\t\t\t\t\t\"type\": \"text\",\r\n\t\t\t\t\t\"analyzer\": \"jcseg_delimiter\"\r\n\t\t\t\t},\r\n\t\t\t\t\"description\": {\r\n\t\t\t\t\t\"type\": \"text\",\r\n\t\t\t\t\t\"index_options\": \"offsets\",\r\n\t\t\t\t\t\"similarity\": \"my_bm25\",\r\n\t\t\t\t\t\"analyzer\": \"analyzer_for_index\",\r\n\t\t\t\t\t\"search_analyzer\": \"analyzer_for_search\"\r\n\t\t\t\t},\r\n\t\t\t\t\"for_match\": {\r\n\t\t\t\t\t\"type\": \"text\",\r\n\t\t\t\t\t\"similarity\": \"my_bm25\",\r\n\t\t\t\t\t\"analyzer\": \"analyzer_for_index\",\r\n\t\t\t\t\t\"search_analyzer\": \"analyzer_for_search\"\r\n\t\t\t\t},\r\n\t\t\t\t\"for_weight\": {\r\n\t\t\t\t\t\"type\": \"text\",\r\n\t\t\t\t\t\"similarity\": \"my_bm25\",\r\n\t\t\t\t\t\"analyzer\": \"analyzer_for_index\",\r\n\t\t\t\t\t\"search_analyzer\": \"analyzer_for_search\"\r\n\t\t\t\t},\r\n\t\t\t\t\"forks_count\": {\r\n\t\t\t\t\t\"type\": \"integer\"\r\n\t\t\t\t},\r\n\t\t\t\t\"id\": {\r\n\t\t\t\t\t\"type\": \"long\"\r\n\t\t\t\t},\r\n\t\t\t\t\"lang\": {\r\n\t\t\t\t\t\"type\": \"keyword\"\r\n\t\t\t\t},\r\n\t\t\t\t\"name\": {\r\n\t\t\t\t\t\"type\": \"text\",\r\n\t\t\t\t\t\"index_options\": \"offsets\",\r\n\t\t\t\t\t\"similarity\": \"my_bm25\",\r\n\t\t\t\t\t\"analyzer\": \"analyzer_for_index\",\r\n\t\t\t\t\t\"search_analyzer\": \"analyzer_for_search\"\r\n\t\t\t\t},\r\n\t\t\t\t\"payload\": {\r\n\t\t\t\t\t\"type\": \"text\",\r\n\t\t\t\t\t\"index\": false\r\n\t\t\t\t},\r\n\t\t\t\t\"repo_score\": {\r\n\t\t\t\t\t\"type\": \"half_float\",\r\n\t\t\t\t\t\"index\": false,\r\n\t\t\t\t\t\"store\": true\r\n\t\t\t\t},\r\n\t\t\t\t\"stars_count\": {\r\n\t\t\t\t\t\"type\": \"integer\"\r\n\t\t\t\t},\r\n\t\t\t\t\"updated_at\": {\r\n\t\t\t\t\t\"type\": \"integer\"\r\n\t\t\t\t},\r\n\t\t\t\t\"updated_td\": {\r\n\t\t\t\t\t\"type\": \"short\",\r\n\t\t\t\t\t\"index\": false,\r\n\t\t\t\t\t\"store\": true\r\n\t\t\t\t},\r\n\t\t\t\t\"watches_count\": {\r\n\t\t\t\t\t\"type\": \"integer\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"settings\": {\r\n\t\t\t\"index\": {\r\n\t\t\t\t\"number_of_shards\": \"3\",\r\n\t\t\t\t\"provided_name\": \"my_repository\",\r\n\t\t\t\t\"similarity\": {\r\n\t\t\t\t\t\"my_bm25\": {\r\n\t\t\t\t\t\t\"discount_overlaps\": \"true\",\r\n\t\t\t\t\t\t\"const_freq\": \"1\",\r\n\t\t\t\t\t\t\"b\": \"0.21\",\r\n\t\t\t\t\t\t\"freq_modifier\": \"logp1\",\r\n\t\t\t\t\t\t\"type\": \"MyBM25\",\r\n\t\t\t\t\t\t\"k1\": \"1.26\"\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"creation_date\": \"1572408902153\",\r\n\t\t\t\t\"analysis\": {\r\n\t\t\t\t\t\"analyzer\": {\r\n\t\t\t\t\t\t\"analyzer_for_search\": {\r\n\t\t\t\t\t\t\t\"jcseg_maxlen\": \"5\",\r\n\t\t\t\t\t\t\t\"jcseg_appendpinyin\": \"0\",\r\n\t\t\t\t\t\t\t\"jcseg_appendsyn\": \"0\",\r\n\t\t\t\t\t\t\t\"type\": \"jcseg_complex\",\r\n\t\t\t\t\t\t\t\"jcseg_pptmaxlen\": \"0\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"analyzer_for_index\": {\r\n\t\t\t\t\t\t\t\"jcseg_maxlen\": \"5\",\r\n\t\t\t\t\t\t\t\"jcseg_appendpinyin\": \"1\",\r\n\t\t\t\t\t\t\t\"jcseg_appendsyn\": \"1\",\r\n\t\t\t\t\t\t\t\"type\": \"jcseg_search\",\r\n\t\t\t\t\t\t\t\"jcseg_pptmaxlen\": \"0\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"number_of_replicas\": \"1\",\r\n\t\t\t\t\"uuid\": \"VqXvoQeOSPWi5OLQD31dtg\",\r\n\t\t\t\t\"version\": {\r\n\t\t\t\t\t\"created\": \"7040099\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\n\r\nWhen i try to search something not everything, i saw the following logs ahout exception report:\r\n```\r\norg.elasticsearch.ElasticsearchException$1: Similarities must not produce negative scores, but got:\r\n-31.97649 = score(freq=3.4028235E38), product of:\r\n  4.746 = boost\r\n  -3.0145967 = idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:\r\n    86822 = n, number of documents containing term\r\n    4259 = N, total number of documents with field\r\n  2.234981 = tf=89.72284, modifer=logp1, computed as freq * / (freq + k1 * (1 - b + b * dl / avgdl)) from:\r\n    3.4028235E38 = term frequency\r\n    1.26 = k1, term saturation parameter\r\n    0.21 = b, length normalization parameter\r\n    1.0 = dl, length of field\r\n    29.475698 = avgdl, average length of field\r\n```\r\n\r\nthe following is my DSL for query:\r\n```json\r\n{\r\n\t\"explain\": true,\r\n\t\"query\": {\r\n\t\t\"bool\": {\r\n\t\t\t\"must\": [{\r\n\t\t\t\t\"multi_match\": {\r\n\t\t\t\t\t\"type\": \"cross_fields\",\r\n\t\t\t\t\t\"fields\": [\r\n\t\t\t\t\t\t\"name^2.12\",\r\n\t\t\t\t\t\t\"for_weight^2.1\",\r\n\t\t\t\t\t\t\"description^1.42\",\r\n\t\t\t\t\t\t\"for_match^1\"\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"query\": \"my query string\",\r\n\t\t\t\t\t\"tie_breaker\": 0.24,\r\n\t\t\t\t\t\"operator\": \"AND\"\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\t\t\t\"filter\": {\r\n\t\t\t\t\"bool\": {\r\n\t\t\t\t\t\"must\": [{\r\n\t\t\t\t\t\t\"term\": {\r\n\t\t\t\t\t\t\t\"attr_set\": \"attr:1\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"term\": {\r\n\t\t\t\t\t\t\t\"attr_set\": \"attr:2\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\"sort\": [{\r\n\t\t\"_score\": \"desc\"\r\n\t}],\r\n\t\"from\": 0,\r\n\t\"size\": 11\r\n}\r\n```\r\n\r\ni think this is bug:\r\nn should never be greater than N or it will produce a negative score thougth **log(1 + (N - n + 0.5) / (n + 0.5))**\r\n\r\nIn my similarity plugin, I could do nothing for the value in N and n since i could only get them through the collectionStats object like the default BM25Similarity did.\r\n\r\nit this because of the empty value for the specified field cause error count for the total number of documents ?\r\n","closed_by":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}