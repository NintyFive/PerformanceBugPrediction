[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/536540520","html_url":"https://github.com/elastic/elasticsearch/issues/47290#issuecomment-536540520","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47290","id":536540520,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNjU0MDUyMA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-09-30T12:34:10Z","updated_at":"2019-09-30T12:34:10Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/536603152","html_url":"https://github.com/elastic/elasticsearch/issues/47290#issuecomment-536603152","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47290","id":536603152,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNjYwMzE1Mg==","user":{"login":"Hedgehogues","id":4973667,"node_id":"MDQ6VXNlcjQ5NzM2Njc=","avatar_url":"https://avatars2.githubusercontent.com/u/4973667?v=4","gravatar_id":"","url":"https://api.github.com/users/Hedgehogues","html_url":"https://github.com/Hedgehogues","followers_url":"https://api.github.com/users/Hedgehogues/followers","following_url":"https://api.github.com/users/Hedgehogues/following{/other_user}","gists_url":"https://api.github.com/users/Hedgehogues/gists{/gist_id}","starred_url":"https://api.github.com/users/Hedgehogues/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hedgehogues/subscriptions","organizations_url":"https://api.github.com/users/Hedgehogues/orgs","repos_url":"https://api.github.com/users/Hedgehogues/repos","events_url":"https://api.github.com/users/Hedgehogues/events{/privacy}","received_events_url":"https://api.github.com/users/Hedgehogues/received_events","type":"User","site_admin":false},"created_at":"2019-09-30T15:01:32Z","updated_at":"2019-09-30T15:03:16Z","author_association":"NONE","body":"Found on the expanses of elastic for 6.8 https://www.elastic.co/guide/en/elasticsearch/reference/6.8/norms.html the possibility of normalization. I'm interested in the normalization of weights. But, alas, I conducted an experiment and did not observe the normalization. Those. score> 1.\r\n\r\nI did it with python like this:\r\n\r\n```request_body = {\r\n             'properties': {\r\n                 'title': {\r\n                     'type': 'text',\r\n                     'norms': True,\r\n                 }\r\n             }\r\n         }\r\n         resp = es.indices.put_mapping (body = request_body, doc_type = '_ doc') ```\r\n\r\nDo I understand correctly that this article is about normalization? I use the library: https://pyelasticsearch.readthedocs.io/","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/537170291","html_url":"https://github.com/elastic/elasticsearch/issues/47290#issuecomment-537170291","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47290","id":537170291,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNzE3MDI5MQ==","user":{"login":"Hedgehogues","id":4973667,"node_id":"MDQ6VXNlcjQ5NzM2Njc=","avatar_url":"https://avatars2.githubusercontent.com/u/4973667?v=4","gravatar_id":"","url":"https://api.github.com/users/Hedgehogues","html_url":"https://github.com/Hedgehogues","followers_url":"https://api.github.com/users/Hedgehogues/followers","following_url":"https://api.github.com/users/Hedgehogues/following{/other_user}","gists_url":"https://api.github.com/users/Hedgehogues/gists{/gist_id}","starred_url":"https://api.github.com/users/Hedgehogues/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hedgehogues/subscriptions","organizations_url":"https://api.github.com/users/Hedgehogues/orgs","repos_url":"https://api.github.com/users/Hedgehogues/repos","events_url":"https://api.github.com/users/Hedgehogues/events{/privacy}","received_events_url":"https://api.github.com/users/Hedgehogues/received_events","type":"User","site_admin":false},"created_at":"2019-10-01T18:34:33Z","updated_at":"2019-10-01T18:34:33Z","author_association":"NONE","body":"Apparently, this is impossible to do. The only option I was offered was to patch the elastic. But this option does not look adequate, since it will have to be redone after any version update. It hurts. Scripts do not allow you to get to the scales. Plugins - similarly.\r\n\r\nThis is most likely explained by the fact that the elastic is distributed and not all weights are stored on one shard.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/537234428","html_url":"https://github.com/elastic/elasticsearch/issues/47290#issuecomment-537234428","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47290","id":537234428,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNzIzNDQyOA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2019-10-01T21:17:05Z","updated_at":"2019-10-01T21:17:05Z","author_association":"MEMBER","body":"By default the ranking uses BM25 to score documents, so they are not \"normalized\". \r\nHowever for queries of similar structure (same field, same number of terms) it should be fine to compare the BM25 score directly. You could also \"normalize\" the score if the number of terms is different by dividing the final score by number of terms. Note that could work only if the the same type of query is compared (terms vs phrase query will not work). \r\nWe have another [issue](https://github.com/elastic/elasticsearch/issues/23850) opened with a lot of history regarding different type of normalizations, it's a good entry point if you want to understand the different challenges that we have to handle inside Elasticsearch.\r\nI am also curious to hear more about your use case but the discuss forum is better suited for this kind of discussion. Could you open a new thread in the [forum](https://discuss.elastic.co/c/elasticsearch) and me or/and someone from the community can continue to discuss the best options that you have to solve your issue ? I hope you don't mind that I close this issue, we can reopen if the discussion in the forum reveals a feature that is missing.","performed_via_github_app":null}]