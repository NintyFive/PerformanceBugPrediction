[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/467899778","html_url":"https://github.com/elastic/elasticsearch/issues/39464#issuecomment-467899778","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39464","id":467899778,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Nzg5OTc3OA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-02-27T15:12:36Z","updated_at":"2019-02-27T15:12:36Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/468382758","html_url":"https://github.com/elastic/elasticsearch/issues/39464#issuecomment-468382758","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39464","id":468382758,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2ODM4Mjc1OA==","user":{"login":"vigyasharma","id":869395,"node_id":"MDQ6VXNlcjg2OTM5NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/869395?v=4","gravatar_id":"","url":"https://api.github.com/users/vigyasharma","html_url":"https://github.com/vigyasharma","followers_url":"https://api.github.com/users/vigyasharma/followers","following_url":"https://api.github.com/users/vigyasharma/following{/other_user}","gists_url":"https://api.github.com/users/vigyasharma/gists{/gist_id}","starred_url":"https://api.github.com/users/vigyasharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vigyasharma/subscriptions","organizations_url":"https://api.github.com/users/vigyasharma/orgs","repos_url":"https://api.github.com/users/vigyasharma/repos","events_url":"https://api.github.com/users/vigyasharma/events{/privacy}","received_events_url":"https://api.github.com/users/vigyasharma/received_events","type":"User","site_admin":false},"created_at":"2019-02-28T18:26:32Z","updated_at":"2019-02-28T18:26:32Z","author_association":"CONTRIBUTOR","body":"The ability to plug in a custom allocator implementations is important to us. We would like to see this retained going forward.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/470948646","html_url":"https://github.com/elastic/elasticsearch/issues/39464#issuecomment-470948646","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39464","id":470948646,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDk0ODY0Ng==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2019-03-08T14:34:17Z","updated_at":"2019-03-08T14:34:17Z","author_association":"CONTRIBUTOR","body":"@vigyasharma can you give more details? What gaps are there in the default allocator that you're filling with a custom implementation? Are you overriding the whole `ShardsAllocator` or just providing extra `AllocationDecider`s?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/482240543","html_url":"https://github.com/elastic/elasticsearch/issues/39464#issuecomment-482240543","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39464","id":482240543,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MjI0MDU0Mw==","user":{"login":"kennycason","id":2858428,"node_id":"MDQ6VXNlcjI4NTg0Mjg=","avatar_url":"https://avatars1.githubusercontent.com/u/2858428?v=4","gravatar_id":"","url":"https://api.github.com/users/kennycason","html_url":"https://github.com/kennycason","followers_url":"https://api.github.com/users/kennycason/followers","following_url":"https://api.github.com/users/kennycason/following{/other_user}","gists_url":"https://api.github.com/users/kennycason/gists{/gist_id}","starred_url":"https://api.github.com/users/kennycason/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kennycason/subscriptions","organizations_url":"https://api.github.com/users/kennycason/orgs","repos_url":"https://api.github.com/users/kennycason/repos","events_url":"https://api.github.com/users/kennycason/events{/privacy}","received_events_url":"https://api.github.com/users/kennycason/received_events","type":"User","site_admin":false},"created_at":"2019-04-11T18:21:11Z","updated_at":"2019-04-11T18:21:55Z","author_association":"NONE","body":"@DaveCTurner I'm posting in regards to Tempest. While the released version only supports up to 2.3.2, we have work to make it work with up to ES 5. IIRC, The only reason it's not publicly released as of now is due to lack of integration tests. I am no longer working with that team and am not sure of their future plans. When I left 4 months ago the plan was to update and release the 5.x version.\r\n\r\nThe use-case was that the default shard allocator only allocated shards based on the number of shards, which assumes a homogenous shard size in order to have a balanced cluster. If you have multiple shards of heterogenous size (log-normal distribution in our case), the default shard balancer results in an unbalanced cluster with hotspots. Use-cases are using shard routing to guarantee per-customer data is routed to a single shard to ensure data locality when searching. Then when data of a particular customer grows too large to sanely fit in a single shard within our default index, we create another index for that customer with the appropriate number of shards we need.\r\n\r\nThis structuring of data/shards is per what Elastic released considering best practices here: https://www.elastic.co/guide/en/elasticsearch/guide/master/user-based.html\r\n\r\nI have met and consulted with a large number of engineers/companies who have problems with shard hotspotting caused by the simplicity of the default shard balancer. Most do not know how to work around it as there is not an option (hence Tempest) and as a result run a largely over provisioned ES cluster. This is notably expensive when running large, over provisioned ES clusters in data centers like AWS.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/482254477","html_url":"https://github.com/elastic/elasticsearch/issues/39464#issuecomment-482254477","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39464","id":482254477,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MjI1NDQ3Nw==","user":{"login":"aewhite","id":4342706,"node_id":"MDQ6VXNlcjQzNDI3MDY=","avatar_url":"https://avatars1.githubusercontent.com/u/4342706?v=4","gravatar_id":"","url":"https://api.github.com/users/aewhite","html_url":"https://github.com/aewhite","followers_url":"https://api.github.com/users/aewhite/followers","following_url":"https://api.github.com/users/aewhite/following{/other_user}","gists_url":"https://api.github.com/users/aewhite/gists{/gist_id}","starred_url":"https://api.github.com/users/aewhite/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aewhite/subscriptions","organizations_url":"https://api.github.com/users/aewhite/orgs","repos_url":"https://api.github.com/users/aewhite/repos","events_url":"https://api.github.com/users/aewhite/events{/privacy}","received_events_url":"https://api.github.com/users/aewhite/received_events","type":"User","site_admin":false},"created_at":"2019-04-11T19:02:05Z","updated_at":"2019-04-23T00:13:12Z","author_association":"NONE","body":"@DaveCTurner I'm one of the coathors for Tempest. What @kennycason said is correct but let me expand on it. \r\n\r\nFirst, it is my intention to update Templest to be compatible with newer versions. Like Kenny, I'm no longer at that particular company so the work hasn't been prioritized yet. That said, I still work on pretty large ES installs that suffer the exact same issue. In fact, the current workaround I see is disabling the rebalancer altogether and doing manual shard moves during off hours using an external process (which I think is slated to be removed too).\r\n\r\nIt would be fantastic if Elastic could engineer a balancer for everyone but franky the level of effort there is probably huge with the return on value being isolated to your large enterprise power users. What does \"balanced\" even mean? For Tempest that is a *really* complex answer that takes a number of factors into account including, history index sizes, modeled shared growth, primary vs replica, capacity of the node, distribution of the cluster as a whole, distribution of a particular index. \r\n\r\nI would also point out that Tempest is biased to shard sizes but there are certainly cases for balancers that are more sensitive to ingest rates, search rates, hot vs cold storage, and memory footprinting. Notice that there are 10 public forks of Tempest, and who knows how my private balancers in corporate repos (maybe some of them will chime in here)\r\n\r\nOver the years I've noticed Elastic has made several decisions to remove power user functionality. The usual justifications have been either \"nobody uses it\" or \"it's dangerous\". This has made ES in particular a hard-to-upgrade product in large scale deployments. I for one would like to see ES continue to ship with reasonable defaults, but also provide a rich set of extension points to let power users leverage ES to get maximum value. \r\n\r\nI'll conclude by directly responding to \"there appears to be little appetite to use this flexibility in the wild\". You're probably right, but the counter point here is for the people that use it, it's huge. I actually know of at least one large company that wouldn't upgrade to 5.x until Tempest supported it or a similar balancer took its place.  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/519119298","html_url":"https://github.com/elastic/elasticsearch/issues/39464#issuecomment-519119298","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39464","id":519119298,"node_id":"MDEyOklzc3VlQ29tbWVudDUxOTExOTI5OA==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2019-08-07T14:21:48Z","updated_at":"2019-08-07T14:21:48Z","author_association":"CONTRIBUTOR","body":"Thanks to everyone for their comments. We discussed this as a team again today and decided we will be able to continue to support custom `AllocationDecider` and `ShardsAllocator` implementations for the time being. We may reopen this in future, but for now I will close this to indicate that this is no longer something we intend to work on.","performed_via_github_app":null}]