[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/122253640","html_url":"https://github.com/elastic/elasticsearch/issues/12279#issuecomment-122253640","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12279","id":122253640,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMjI1MzY0MA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-07-17T11:47:02Z","updated_at":"2015-07-17T11:47:02Z","author_association":"CONTRIBUTOR","body":"> The concept of primary balancing has been discussed (and removed), but this type of hot spotting is clearly a non-trivial problem. It's easy to spot it, but it's not easy to prevent it.\n\nThe idea that having 5 primaries on one node and 5 replicas on the other node is a bad situation is (for the most part) incorrect.  Primaries and replicas do the same amount of work, both at index time and at search time.  I say \"for the most part\" because there are two exceptions:\n- updates have a get-modify-put process, and the get and modify steps happen only on the primary today. Heavy scripts can make primaries a hotspot.  There is an open issue for making the get & modify steps distributed as well, which should solve this issue (https://github.com/elastic/elasticsearch/issues/8369)\n- with shadow replicas, only the primary writes, while the shadow replicas just handle search - clearly this can result in primaries being a hotspot\n\nThat said, having most of the shards of your most active index sitting on only two nodes can lead to load imbalance.  The `cluster.routing.allocation.balance.index` setting tries to force shards from the same node apart, but of course this is only one of the factors taken into account (see https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-cluster.html).\n\nAlso, the cost of the hotspot needs to be weighed against the cost of copying GBs of data around your cluster in a shard shuffle. Finding the sweet spot for these values is HARD, and so we've left it up to the operator to make these decisions.\n\n> Ideally we can come up with a way to \"guess\" activity with that. With or without it, we could either use the index.priority or some index.activity as a separate mechanism to allow the user to control it. A readonly index could still get the brunt of the requests. The nice thing about a separate setting is that it could be curated over time separate from priority.\n\nI agree that something more automated would be of value, and perhaps the `index.priority` setting is a nice way of doing that, eg the higher the priority, the more impact the `cluster.routing.allocation.balance.index` setting has.\n\nI'd like us to make improvement here, but it is a hard problem.  Looking forward to hearing what ideas others have.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/131947173","html_url":"https://github.com/elastic/elasticsearch/issues/12279#issuecomment-131947173","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12279","id":131947173,"node_id":"MDEyOklzc3VlQ29tbWVudDEzMTk0NzE3Mw==","user":{"login":"pickypg","id":1501235,"node_id":"MDQ6VXNlcjE1MDEyMzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1501235?v=4","gravatar_id":"","url":"https://api.github.com/users/pickypg","html_url":"https://github.com/pickypg","followers_url":"https://api.github.com/users/pickypg/followers","following_url":"https://api.github.com/users/pickypg/following{/other_user}","gists_url":"https://api.github.com/users/pickypg/gists{/gist_id}","starred_url":"https://api.github.com/users/pickypg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pickypg/subscriptions","organizations_url":"https://api.github.com/users/pickypg/orgs","repos_url":"https://api.github.com/users/pickypg/repos","events_url":"https://api.github.com/users/pickypg/events{/privacy}","received_events_url":"https://api.github.com/users/pickypg/received_events","type":"User","site_admin":false},"created_at":"2015-08-17T20:14:49Z","updated_at":"2015-08-17T20:14:49Z","author_association":"MEMBER","body":"I definitely agree that, in general, the difference between a replica and a primary shard is practically none (minus the fact that the primary must also wait for a response). In the above screenshot, there are zero updates taking place and there are no shadow replicas in play.\n\n> Also, the cost of the hotspot needs to be weighed against the cost of copying GBs of data around your cluster in a shard shuffle. Finding the sweet spot for these values is HARD, and so we've left it up to the operator to make these decisions.\n\nI completely agree, especially about it being a hard problem. Unfortunately, in the above picture, it was doing the recovery onto the same two nodes with _all_ of the indexing activity, thus doubling the load on them rather than spreading it around the cluster.\n\nAnnoyingly, the cluster figures out that it should rebalance _after_ it eventually recovers the replicas, but the damage is generally done at that point (it also adds even more load with rebalancing).\n\nHaving spent some time away from this issue, I think that we should look at `index.activity` with some defaulted value, then use the standard priority details (`index.priority > index.creation_date > index.name (descending)`) to weigh the activity for equivalent activity values.\n\nThis allows for new indices to be created with high `index.activity` values that can be curated as time marches forward.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/146231127","html_url":"https://github.com/elastic/elasticsearch/issues/12279#issuecomment-146231127","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12279","id":146231127,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjIzMTEyNw==","user":{"login":"vvcephei","id":832787,"node_id":"MDQ6VXNlcjgzMjc4Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/832787?v=4","gravatar_id":"","url":"https://api.github.com/users/vvcephei","html_url":"https://github.com/vvcephei","followers_url":"https://api.github.com/users/vvcephei/followers","following_url":"https://api.github.com/users/vvcephei/following{/other_user}","gists_url":"https://api.github.com/users/vvcephei/gists{/gist_id}","starred_url":"https://api.github.com/users/vvcephei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vvcephei/subscriptions","organizations_url":"https://api.github.com/users/vvcephei/orgs","repos_url":"https://api.github.com/users/vvcephei/repos","events_url":"https://api.github.com/users/vvcephei/events{/privacy}","received_events_url":"https://api.github.com/users/vvcephei/received_events","type":"User","site_admin":false},"created_at":"2015-10-07T15:28:55Z","updated_at":"2015-10-07T15:28:55Z","author_association":"CONTRIBUTOR","body":"This looks like the most relevant discussion to ask my related question on.\n\nI totally agree with @clintongormley that building a bunch of smart heuristics into the balanced allocator is high risk. Like you said, it's hard to get right in general, and it's expensive to shuffle data around the cluster.\n\nI think this is a good opportunity for exploring the issue with plugins. Assuming I understand the code, anyone can provide their own Allocator. The problem is that currently, Allocators are only invoked when the cluster changes (routing table changes, cluster settings updates, etc.).\n\nAllocating based on dynamic properties like index activity, search activity, or whatever else requires the allocator to be invoked on an interval. I can simulate this by updating the settings periodically, but I wonder if anyone has better advice on how to get the cluster to rebalance periodically.\n\nThanks,\n-John\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/374538318","html_url":"https://github.com/elastic/elasticsearch/issues/12279#issuecomment-374538318","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12279","id":374538318,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NDUzODMxOA==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2018-03-20T09:56:04Z","updated_at":"2018-03-20T09:56:04Z","author_association":"CONTRIBUTOR","body":"This is an interesting idea, but since its opening we have not seen enough feedback that it is something we should work on. We prefer to close this issue as a clear indication that we are not going to work on this at this time. We are always open to reconsidering this in the future based on compelling feedback; despite this issue being closed please feel free to leave feedback (including +1s).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/379960514","html_url":"https://github.com/elastic/elasticsearch/issues/12279#issuecomment-379960514","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12279","id":379960514,"node_id":"MDEyOklzc3VlQ29tbWVudDM3OTk2MDUxNA==","user":{"login":"tdoman","id":11098266,"node_id":"MDQ6VXNlcjExMDk4MjY2","avatar_url":"https://avatars1.githubusercontent.com/u/11098266?v=4","gravatar_id":"","url":"https://api.github.com/users/tdoman","html_url":"https://github.com/tdoman","followers_url":"https://api.github.com/users/tdoman/followers","following_url":"https://api.github.com/users/tdoman/following{/other_user}","gists_url":"https://api.github.com/users/tdoman/gists{/gist_id}","starred_url":"https://api.github.com/users/tdoman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tdoman/subscriptions","organizations_url":"https://api.github.com/users/tdoman/orgs","repos_url":"https://api.github.com/users/tdoman/repos","events_url":"https://api.github.com/users/tdoman/events{/privacy}","received_events_url":"https://api.github.com/users/tdoman/received_events","type":"User","site_admin":false},"created_at":"2018-04-10T03:15:19Z","updated_at":"2018-04-10T04:06:27Z","author_association":"NONE","body":"@DaveCTurner +1\r\nAt the very least, some way of distributing the primaries.  I can simulate a redistribution of primaries in a 3 node cluster w/ 2 replicas by setting that to 1 replica, waiting for the redistribution, and then setting it back to 2 replicas.  Giving the deployer the option to make that decision manually would be very helpful especially for the scenarios (ie. updates) where we know hot spots can be produced.  We can get a bit of a hybrid between search and index optimization.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/467429483","html_url":"https://github.com/elastic/elasticsearch/issues/12279#issuecomment-467429483","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12279","id":467429483,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NzQyOTQ4Mw==","user":{"login":"Bukhtawar","id":12809319,"node_id":"MDQ6VXNlcjEyODA5MzE5","avatar_url":"https://avatars0.githubusercontent.com/u/12809319?v=4","gravatar_id":"","url":"https://api.github.com/users/Bukhtawar","html_url":"https://github.com/Bukhtawar","followers_url":"https://api.github.com/users/Bukhtawar/followers","following_url":"https://api.github.com/users/Bukhtawar/following{/other_user}","gists_url":"https://api.github.com/users/Bukhtawar/gists{/gist_id}","starred_url":"https://api.github.com/users/Bukhtawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bukhtawar/subscriptions","organizations_url":"https://api.github.com/users/Bukhtawar/orgs","repos_url":"https://api.github.com/users/Bukhtawar/repos","events_url":"https://api.github.com/users/Bukhtawar/events{/privacy}","received_events_url":"https://api.github.com/users/Bukhtawar/received_events","type":"User","site_admin":false},"created_at":"2019-02-26T13:03:40Z","updated_at":"2019-02-26T13:03:40Z","author_association":"CONTRIBUTOR","body":"`cluster.routing.allocation.type` is static, if there were multiple `ClusterPlugin` based on multiple allocation strategy and there was an option to switch allocators dynamically, do we see a problem. The idea is to make this `cluster.routing.allocation.type` dynamic to allow customers to rescue their clusters by selecting a different allocation strategy if they see a skew","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/467903252","html_url":"https://github.com/elastic/elasticsearch/issues/12279#issuecomment-467903252","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12279","id":467903252,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NzkwMzI1Mg==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2019-02-27T15:21:15Z","updated_at":"2019-02-27T15:21:15Z","author_association":"CONTRIBUTOR","body":"We are discussing removing `ClusterPlugin` in #39464. Switching dynamically to a wholly different allocator sounds pretty drastic, and liable to trigger a lot of shard relocations. What would this achieve that cannot be achieved by adjusting the dynamic settings of one or more of the allocation deciders?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/665359327","html_url":"https://github.com/elastic/elasticsearch/issues/12279#issuecomment-665359327","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12279","id":665359327,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTM1OTMyNw==","user":{"login":"Leaf-Lin","id":39002973,"node_id":"MDQ6VXNlcjM5MDAyOTcz","avatar_url":"https://avatars3.githubusercontent.com/u/39002973?v=4","gravatar_id":"","url":"https://api.github.com/users/Leaf-Lin","html_url":"https://github.com/Leaf-Lin","followers_url":"https://api.github.com/users/Leaf-Lin/followers","following_url":"https://api.github.com/users/Leaf-Lin/following{/other_user}","gists_url":"https://api.github.com/users/Leaf-Lin/gists{/gist_id}","starred_url":"https://api.github.com/users/Leaf-Lin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Leaf-Lin/subscriptions","organizations_url":"https://api.github.com/users/Leaf-Lin/orgs","repos_url":"https://api.github.com/users/Leaf-Lin/repos","events_url":"https://api.github.com/users/Leaf-Lin/events{/privacy}","received_events_url":"https://api.github.com/users/Leaf-Lin/received_events","type":"User","site_admin":false},"created_at":"2020-07-29T00:18:58Z","updated_at":"2020-07-29T00:18:58Z","author_association":"CONTRIBUTOR","body":"+1","performed_via_github_app":null}]