[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/65655360","html_url":"https://github.com/elastic/elasticsearch/issues/8781#issuecomment-65655360","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8781","id":65655360,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NjU1MzYw","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2014-12-04T16:06:25Z","updated_at":"2014-12-04T16:06:25Z","author_association":"CONTRIBUTOR","body":"why don't you wanna wrap it - isn't that good enough?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/67060821","html_url":"https://github.com/elastic/elasticsearch/issues/8781#issuecomment-67060821","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8781","id":67060821,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDYwODIx","user":{"login":"awick","id":427321,"node_id":"MDQ6VXNlcjQyNzMyMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/427321?v=4","gravatar_id":"","url":"https://api.github.com/users/awick","html_url":"https://github.com/awick","followers_url":"https://api.github.com/users/awick/followers","following_url":"https://api.github.com/users/awick/following{/other_user}","gists_url":"https://api.github.com/users/awick/gists{/gist_id}","starred_url":"https://api.github.com/users/awick/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/awick/subscriptions","organizations_url":"https://api.github.com/users/awick/orgs","repos_url":"https://api.github.com/users/awick/repos","events_url":"https://api.github.com/users/awick/events{/privacy}","received_events_url":"https://api.github.com/users/awick/received_events","type":"User","site_admin":false},"created_at":"2014-12-15T20:35:54Z","updated_at":"2014-12-15T20:35:54Z","author_association":"NONE","body":"So maybe this is a group discussion instead of an issue, but from what I read filters are good and queries are bad when you don't care about scores.  Yes you can wrap queries to convert to filters, but then you have to know enough about setting cache options and such.  \n\nAlso its not clear if I am ANDing multiple things if I can wrap the bool or if I should wrap each wildcard inside of the bool.  I'm guessing I should have multiple query filters since those are cached separately  \n\nfilter: {...., query: {bool: {should: [wildcard..., wildcard...}}}} vs filter{..., bool: {should: [query: {wildcard...}, query:{wildcard...}]}}}}\n\nAlso there are already some queries that have matching filters (regexp for example) so it confuses me why ALL queries aren't also filters.   There is probably some philosophy or nuance I'm missing.   But if regexp has a filter seems like wildcard should also.\n\nFinally it just feels wrong. :)  If there aren't benefits to \"natural\" filters then when have them at all?  Couldn't everything just be wrapped?\n\n(Note I'm converting user input using my own DSL to JSON, these aren't canned queries.)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/67309756","html_url":"https://github.com/elastic/elasticsearch/issues/8781#issuecomment-67309756","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8781","id":67309756,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MzA5NzU2","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-12-17T11:26:45Z","updated_at":"2014-12-17T11:26:45Z","author_association":"CONTRIBUTOR","body":"> So maybe this is a group discussion instead of an issue, but from what I read filters are good and queries are bad when you don't care about scores. \n\nIt's more nuanced than that, eg to cache a filter, you have to run the filter on all segments.  However, let's say you have a query which only matches 3 documents: then the filter can run in tandem with the query and just check those 3 documents, which is faster.\n\n> Yes you can wrap queries to convert to filters, but then you have to know enough about setting cache options and such.\n\nWe're planning on making filter caching automatic, depending on the filter type and how frequently it is used: https://github.com/elasticsearch/elasticsearch/pull/8573\n\n> Also its not clear if I am ANDing multiple things if I can wrap the bool or if I should wrap each wildcard inside of the bool. I'm guessing I should have multiple query filters since those are cached separately\n\nThis depends...  it is worth caching only what is reused.  So if you reuse the same wildcards all the time, then cache the top level `bool` filter.  Otherwise cache the individual clauses.  The automated caching change should handle this... automatically :)\n\n> Also there are already some queries that have matching filters (regexp for example) so it confuses me why ALL queries aren't also filters. There is probably some philosophy or nuance I'm missing. But if regexp has a filter seems like wildcard should also.\n\nYeah I know what you mean.  Honestly, we advise against using prefix, wildcard, regexp, etc.  They are very heavy.  Wildcard and prefix queries are just regexp queries with a different syntax.  However, while you can't index your data in a way that will handle all regexp queries, you can index your data to provide prefix matching (with edge ngrams) and at least an approximation of wildcards (with ngrams).  This way you pay the price once at index time, and your queries are efficient.  Wildcards can be horribly slow expensive queries, which is why we're less than keen to add the wildcard filter as well.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/67322260","html_url":"https://github.com/elastic/elasticsearch/issues/8781#issuecomment-67322260","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8781","id":67322260,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MzIyMjYw","user":{"login":"awick","id":427321,"node_id":"MDQ6VXNlcjQyNzMyMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/427321?v=4","gravatar_id":"","url":"https://api.github.com/users/awick","html_url":"https://github.com/awick","followers_url":"https://api.github.com/users/awick/followers","following_url":"https://api.github.com/users/awick/following{/other_user}","gists_url":"https://api.github.com/users/awick/gists{/gist_id}","starred_url":"https://api.github.com/users/awick/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/awick/subscriptions","organizations_url":"https://api.github.com/users/awick/orgs","repos_url":"https://api.github.com/users/awick/repos","events_url":"https://api.github.com/users/awick/events{/privacy}","received_events_url":"https://api.github.com/users/awick/received_events","type":"User","site_admin":false},"created_at":"2014-12-17T13:33:59Z","updated_at":"2014-12-17T13:33:59Z","author_association":"NONE","body":"So for those of us in the non scoring, huge data sets, analytics applications using ES, the warnings against wildcard/regex/prefix don't apply. :)  The space/time tradeoff of ngraming everything vs just letting our users use wildcard/regex is well worth it.  (In fact the doc warnings probably should be updated around that use case, but for another time.)  Searching billions of documents with wildcards against unanalyzed fields is still relatively quick.\n\nI guess at a meta level I would say (at least for the HTTP API) ALL queries should also be filters (not sure if the reverse is true).  The distinction is lost and the docs make it clear you should always use filters.\n\nhttp://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl.html\n\n\"Filters are very handy since they perform an order of magnitude better than plain queries since no scoring is performed and they are automatically cached.\"\n\nMaybe a better question, and a document update, is if I use the query filter to wrap a query only thing such as wildcard, do I get the performance benefit?  I guess I could answer my own question by doing performance tests where there are matching query and filter items.\n\nStill would love a wildcard filter :)\n\nThanks for responding\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/67328801","html_url":"https://github.com/elastic/elasticsearch/issues/8781#issuecomment-67328801","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8781","id":67328801,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MzI4ODAx","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-12-17T14:26:08Z","updated_at":"2014-12-17T14:26:08Z","author_association":"CONTRIBUTOR","body":"> So for those of us in the non scoring, huge data sets, analytics applications using ES, the warnings against wildcard/regex/prefix don't apply.\n\nThey do actually.  Imagine that you have a field with 1 billion unique IDs, and you do a wildcard query like `*foo`.  This means that Elasticsearch will visit 1 billion terms to check whether they match the pattern!  That's a killer, any way you look at it.\n\nAnd while the `match_phrase_prefix` has a `max_expansions` parameter (which allows early abort), the `wildcard` query (and prefix and regexp queries/filters) don't.  This is why they are so dangerous.\n\n> Searching billions of documents with wildcards against unanalyzed fields is still relatively quick.\n\nIt's not the number of docs, it's the cardinality of the field and the provided pattern.\n\n> The distinction is lost and the docs make it clear you should always use filters.\n\nThe docs, in this case, provide an over-simplification.  \n\nThe wildcard query is actually implemented as a filter internally (with the default rewrite method).  It actually visits all matching terms to generate a bitset of all matching docs. So the question is: are your wildcards reused, or are they typically one-offs?\n\nIf they are reused a lot, then it is worth caching them (by wrapping them in a `query` filter and setting `_cache:true`). If they are one-offs, then there is no point in caching them.  However the performance of the wildcard query vs (an uncached) wildcard filter (or an uncached regexp filter) would be the same.\n\nThere is no advantage to having it as a filter except for convenience and less verbosity.  Lucene doesn't provide a WildcardFilter, just a WildcardQuery.  That said, it doesn't provide a RegexpFilter either (we use a RegexpQuery internally).  So for the sake of consistency I agree with you that we should provide a `wildcard` filter. But really there is no performance advantage.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/109777434","html_url":"https://github.com/elastic/elasticsearch/issues/8781#issuecomment-109777434","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8781","id":109777434,"node_id":"MDEyOklzc3VlQ29tbWVudDEwOTc3NzQzNA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-06-07T17:13:20Z","updated_at":"2015-06-07T17:13:20Z","author_association":"CONTRIBUTOR","body":"All filters are now implemented as queries. Closing\n","performed_via_github_app":null}]