[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/340961629","html_url":"https://github.com/elastic/elasticsearch/issues/27199#issuecomment-340961629","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27199","id":340961629,"node_id":"MDEyOklzc3VlQ29tbWVudDM0MDk2MTYyOQ==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2017-11-01T02:36:57Z","updated_at":"2017-11-01T02:36:57Z","author_association":"CONTRIBUTOR","body":"Hi @morphers82, looks like you are running into an issue that Painless does not know the type of the literal `0` you are setting with `ctx._source.test2=0;`.\r\n\r\ntry replacing that first assignment with `ctx._source.test2=0L;` to be explicit that the zero is a long.\r\n\r\n\r\n```\r\nDELETE testing\r\n\r\nPUT testing\r\n{\r\n  \"settings\" : {\r\n    \"index\" : {\r\n      \"number_of_shards\" : 1,\r\n      \"number_of_replicas\" : 0\r\n    }\r\n  },\r\n  \"mappings\": {\r\n    \"testing\": {\r\n      \"properties\": {\r\n        \"test2\": {\"type\": \"long\"}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPOST _scripts/test_script\r\n{\r\n\"script\": {\r\n  \"lang\": \"painless\",\r\n  \"source\": \"ctx._source.test2=0L;ctx._source.test2 += params.test_epoch_second;\"\r\n}\r\n}\r\n\r\nPOST testing/testing/1/_update\r\n{\r\n\"scripted_upsert\": true,\r\n\"script\":{\r\n\"id\":\"test_script\",\r\n\"params\":{\r\n\"test_epoch_second\": 2147483648\r\n}\r\n},\r\n\"upsert\" : {}\r\n}\r\n```\r\n\r\n```\r\n# GET testing/testing/1\r\n{\r\n  \"_index\": \"testing\",\r\n  \"_type\": \"testing\",\r\n  \"_id\": \"1\",\r\n  \"_version\": 1,\r\n  \"found\": true,\r\n  \"_source\": {\r\n    \"test2\": 2147483648\r\n  }\r\n}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/342629982","html_url":"https://github.com/elastic/elasticsearch/issues/27199#issuecomment-342629982","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27199","id":342629982,"node_id":"MDEyOklzc3VlQ29tbWVudDM0MjYyOTk4Mg==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2017-11-07T21:35:05Z","updated_at":"2017-11-07T21:35:05Z","author_association":"MEMBER","body":"I don't think this is a painless problem; this is just how numeric types work. The default numeric type for an integral number is `int`. It is the same in java. Putting it into a generic map that is used for `ctx._source` can only capture that information. As @talevy pointed out, you can make it explicit by using the `L` suffix (just like in java).","performed_via_github_app":null}]