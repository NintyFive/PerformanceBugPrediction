{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/23630","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23630/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23630/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23630/events","html_url":"https://github.com/elastic/elasticsearch/issues/23630","id":215001800,"node_id":"MDU6SXNzdWUyMTUwMDE4MDA=","number":23630,"title":"delete by query optimizations","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"labels":[{"id":145572580,"node_id":"MDU6TGFiZWwxNDU1NzI1ODA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/CRUD","name":":Distributed/CRUD","color":"0e8a16","default":false,"description":"A catch all label for issues around indexing, updating and getting a doc by id. Not search."},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-03-17T13:22:49Z","updated_at":"2018-02-13T19:40:44Z","closed_at":"2017-03-17T22:36:42Z","author_association":"MEMBER","active_lock_reason":null,"body":"While I was reading #23629, I started to think if we can have some optimizations for the Delete By Query feature:\r\n\r\nIf someone runs a `match_all` DBQ, we can:\r\n\r\n* Save the current index settings / mappings\r\n* Drop the index\r\n* Recreate the index with previous index settings / mappings\r\n\r\nMore generic way: I wonder if we can actually try to automagically optimize the way delete by query is working.\r\n\r\nLike detect that we are going to suppress 90% or more data, then:\r\n\r\n* create a new index with old settings/mappings\r\n* use reindex with a negation of the query used in delete by query\r\n* switch the existing alias\r\n* drop the old index\r\n\r\nOf course it's not that straightforward but I'm wondering if this is something we can think of.\r\n\r\nI believe that we should have as a constraint an alias to be able to use those optimizations. Otherwise we fallback to the current implementation.\r\n\r\nThoughts?","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}