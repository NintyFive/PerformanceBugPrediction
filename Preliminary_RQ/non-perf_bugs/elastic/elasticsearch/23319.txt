{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/23319","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23319/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23319/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23319/events","html_url":"https://github.com/elastic/elasticsearch/issues/23319","id":209662000,"node_id":"MDU6SXNzdWUyMDk2NjIwMDA=","number":23319,"title":"Expected Agg Count Doesn't Match Query Count, Even When Using Same Filters","user":{"login":"neoform","id":3719298,"node_id":"MDQ6VXNlcjM3MTkyOTg=","avatar_url":"https://avatars3.githubusercontent.com/u/3719298?v=4","gravatar_id":"","url":"https://api.github.com/users/neoform","html_url":"https://github.com/neoform","followers_url":"https://api.github.com/users/neoform/followers","following_url":"https://api.github.com/users/neoform/following{/other_user}","gists_url":"https://api.github.com/users/neoform/gists{/gist_id}","starred_url":"https://api.github.com/users/neoform/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neoform/subscriptions","organizations_url":"https://api.github.com/users/neoform/orgs","repos_url":"https://api.github.com/users/neoform/repos","events_url":"https://api.github.com/users/neoform/events{/privacy}","received_events_url":"https://api.github.com/users/neoform/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-02-23T04:35:20Z","updated_at":"2017-02-28T12:50:56Z","closed_at":"2017-02-23T08:07:45Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version**: 5.2.1\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version**: 1.8.0_121\r\n\r\n**OS version**: Debian 8\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nWhen doing a query that uses the same filters in a globally scoped agg, the counts do not match.\r\n\r\n**Steps to reproduce**:\r\n 1. Using an index with a single shard on a single node execute query that contains a globally scoped aggregate that uses the same filters as the parent query, minus a single filter (which is the field used for agg term bucket).\r\n 2. View results, counts are significantly different.\r\n\r\n**Describe the feature**:\r\n\r\nQuery:\r\n\r\n```javascript\r\n{\r\n    \"timeout\": \"6s\",\r\n    \"index\": \"product\",\r\n    \"type\": \"product\",\r\n    \"from\": 0,\r\n    \"size\": 0,\r\n    \"body\": {\r\n        \"_source\": [],\r\n        \"query\": {\r\n            \"bool\": {\r\n                \"filter\": [\r\n                    {\r\n                        \"nested\": {\r\n                            \"path\": \"product\",\r\n                            \"query\": {\r\n                                \"bool\": {\r\n                                    \"filter\": [\r\n                                        {\r\n                                            \"term\": {\r\n                                                \"product.status_id\": 1\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            \"nested\": {\r\n                                                \"path\": \"product.brand\",\r\n                                                \"query\": {\r\n                                                    \"bool\": {\r\n                                                        \"filter\": [\r\n                                                            {\r\n                                                                \"terms\": {\r\n                                                                    \"product.brand.id\": [\r\n                                                                        23107 <------ brand id that appears in agg\r\n                                                                    ]\r\n                                                                }\r\n                                                            }\r\n                                                        ]\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        \"aggs\": {\r\n            \"brands\": {\r\n                \"global\": {},\r\n                \"aggs\": {\r\n                    \"brands\": {\r\n                        \"filter\": {\r\n                            \"bool\": {\r\n                                \"filter\": [\r\n                                    {\r\n                                        \"nested\": {\r\n                                            \"path\": \"product\",\r\n                                            \"query\": {\r\n                                                \"bool\": {\r\n                                                    \"filter\": [\r\n                                                        {\r\n                                                            \"term\": {\r\n                                                                \"product.status_id\": 1\r\n                                                            }\r\n                                                        }\r\n                                                    ]\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        },\r\n                        \"aggs\": {\r\n                            \"brands\": {\r\n                                \"nested\": {\r\n                                    \"path\": \"product.brand\"\r\n                                },\r\n                                \"aggs\": {\r\n                                    \"brands\": {\r\n                                        \"terms\": {\r\n                                            \"field\": \"product.brand.id\",\r\n                                            \"size\": 5\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n# Results:\r\n\r\n```javascript \r\n{\r\n    \"took\": 3,\r\n    \"timed_out\": false,\r\n    \"_shards\": {\r\n        \"total\": 1,\r\n        \"successful\": 1,\r\n        \"failed\": 0\r\n    },\r\n    \"hits\": {\r\n        \"total\": 2890, <---- result count\r\n        \"max_score\": 0,\r\n        \"hits\": []\r\n    },\r\n    \"aggregations\": {\r\n        \"brands\": {\r\n            \"doc_count\": 1354323,\r\n            \"brands\": {\r\n                \"doc_count\": 442506,\r\n                \"brands\": {\r\n                    \"doc_count\": 500478,\r\n                    \"brands\": {\r\n                        \"doc_count_error_upper_bound\": 0,\r\n                        \"sum_other_doc_count\": 465820,\r\n                        \"buckets\": [\r\n                            {\r\n                                \"key\": 11317,\r\n                                \"doc_count\": 9877\r\n                            },\r\n                            {\r\n                                \"key\": 28221,\r\n                                \"doc_count\": 6805\r\n                            },\r\n                            {\r\n                                \"key\": 40330,\r\n                                \"doc_count\": 6243\r\n                            },\r\n                            {\r\n                                \"key\": 23107,\r\n                                \"doc_count\": 6132   <--- this count does not match the result count above\r\n                            },\r\n                            {\r\n                                \"key\": 23083,\r\n                                \"doc_count\": 5601\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}