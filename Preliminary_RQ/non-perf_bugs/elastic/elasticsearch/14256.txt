{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/14256","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14256/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14256/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14256/events","html_url":"https://github.com/elastic/elasticsearch/issues/14256","id":112918284,"node_id":"MDU6SXNzdWUxMTI5MTgyODQ=","number":14256,"title":"`_default_`-mapping needs to allow for negation of `_parent` ","user":{"login":"konradkonrad","id":3705643,"node_id":"MDQ6VXNlcjM3MDU2NDM=","avatar_url":"https://avatars3.githubusercontent.com/u/3705643?v=4","gravatar_id":"","url":"https://api.github.com/users/konradkonrad","html_url":"https://github.com/konradkonrad","followers_url":"https://api.github.com/users/konradkonrad/followers","following_url":"https://api.github.com/users/konradkonrad/following{/other_user}","gists_url":"https://api.github.com/users/konradkonrad/gists{/gist_id}","starred_url":"https://api.github.com/users/konradkonrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/konradkonrad/subscriptions","organizations_url":"https://api.github.com/users/konradkonrad/orgs","repos_url":"https://api.github.com/users/konradkonrad/repos","events_url":"https://api.github.com/users/konradkonrad/events{/privacy}","received_events_url":"https://api.github.com/users/konradkonrad/received_events","type":"User","site_admin":false},"labels":[{"id":163824881,"node_id":"MDU6TGFiZWwxNjM4MjQ4ODE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Indices%20APIs","name":":Core/Features/Indices APIs","color":"0e8a16","default":false,"description":"APIs to create and manage indices"},{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":92913858,"node_id":"MDU6TGFiZWw5MjkxMzg1OA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/good%20first%20issue","name":"good first issue","color":"07569b","default":true,"description":"low hanging fruit"},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-10-23T00:28:57Z","updated_at":"2018-02-13T20:39:52Z","closed_at":"2017-11-10T15:08:42Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I might be missing something here (hopefully), but I am at a loss, how to achieve the generic definition of an index, where **all other types except the type \"parent\" are children of the type \"parent\"**?\n\nI thought, I could achieve this with index templates + the `_default_` mapping.\n\nThe docs for [default mapping](https://www.elastic.co/guide/en/elasticsearch/guide/current/default-mapping.html#default-mapping) state, that\n\n> All types created _after_ the _default_ mapping will include all of these default settings, unless explicitly overridden in the type mapping itself.\n\nThe example goes on to display, how `\"_all\": {\"enabled\": true}}` can be explicitly overwritten, which seems straightforward. However, I fail to achieve the same thing, after defining a `_parent` mapping in `_default_`:\n\n```\ncurl -XPOST localhost:9200/_template/familytrouble -d '{\n  \"template\": \"trouble*\",\n  \"mappings\": {\n    \"parent\": {\n  },\n    \"_default_\": {\n      \"_parent\": {\"type\": \"parent\"}\n    }\n  }\n}'\ncurl -XPUT localhost:9200/troubled/parent/1\n>> {\"error\":\"RoutingMissingException[routing is required for [troubled]/[parent]/[1]]\",\"status\":400}\n```\n\nSo I guess, if I could use a mapping-definition akin to\n\n```\n\"_parent\": {}\n```\n\nin my parent type, this should work. But I could not find the necessary override for the `_parent`-setting.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}