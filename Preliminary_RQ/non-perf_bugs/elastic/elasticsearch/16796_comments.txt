[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/189956610","html_url":"https://github.com/elastic/elasticsearch/issues/16796#issuecomment-189956610","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16796","id":189956610,"node_id":"MDEyOklzc3VlQ29tbWVudDE4OTk1NjYxMA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-02-28T22:19:18Z","updated_at":"2016-02-28T22:19:18Z","author_association":"CONTRIBUTOR","body":"Hi @cknv \n\nAll of the span queries are term-level queries, ie the query string needs to be analyzed before the resulting terms are used with span queries.  A phrase query would behave completely differently as it would include analysis.  Given that you already need to deal directly with terms, I'm not sure what a `span_phrase` query would buy you?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/190220902","html_url":"https://github.com/elastic/elasticsearch/issues/16796#issuecomment-190220902","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16796","id":190220902,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MDIyMDkwMg==","user":{"login":"cknv","id":123179,"node_id":"MDQ6VXNlcjEyMzE3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/123179?v=4","gravatar_id":"","url":"https://api.github.com/users/cknv","html_url":"https://github.com/cknv","followers_url":"https://api.github.com/users/cknv/followers","following_url":"https://api.github.com/users/cknv/following{/other_user}","gists_url":"https://api.github.com/users/cknv/gists{/gist_id}","starred_url":"https://api.github.com/users/cknv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cknv/subscriptions","organizations_url":"https://api.github.com/users/cknv/orgs","repos_url":"https://api.github.com/users/cknv/repos","events_url":"https://api.github.com/users/cknv/events{/privacy}","received_events_url":"https://api.github.com/users/cknv/received_events","type":"User","site_admin":false},"created_at":"2016-02-29T13:53:15Z","updated_at":"2016-02-29T13:53:15Z","author_association":"NONE","body":"I know that it would include analyzis of the submitted text. That is the whole point. The tl;dr of it is that I have a DSL where I want to add the ablility to search for phrases in near clauses, something like:\n- `[term \"some phrase\"]~4`, somewhat similar to your own [proximity searches](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html#_proximity_searches) - although I had to change the grammar a bit.\n- `term NEAR/4 \"some phrase\"`, sometimes called a near group.\n\nThese two examples is not the hardest to break down, but it is not hard to imagine worse cases.\n\nNow, the problem is that I am reluctant to implement the logic to break down the phrase into terms in my own (python) code, as I can currently spot two options, both of which are not very good:\n- Ask Elasticsearch what those terms are before making my query, costing me an extra roundtrip (and in my specific case rewrite how I translate from my DSL to yours).\n- Mimick what the analyzer of the specific field does. This would probably be brittle because of subtle differences in the two analyzers.\n\nMy problem boils down to the fact that while I can make a DSL on top of yours that support phrases, terms, wildcards, and etc. in the normal clauses that do not care much about positioning. It becomes difficult when I want to add phrases to clauses that translate into span clauses.\n\nHowever, inside Elasticsearch, you know what [analyzer to use for a given field](https://www.elastic.co/guide/en/elasticsearch/reference/2.2/indices-analyze.html) and can just use that directly, you can perhaps even figure out what to do if that analyzer differs across multiple indices (or maybe that is something lucene would do better).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/191144005","html_url":"https://github.com/elastic/elasticsearch/issues/16796#issuecomment-191144005","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16796","id":191144005,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTE0NDAwNQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-03-02T09:09:06Z","updated_at":"2016-03-02T09:09:18Z","author_association":"CONTRIBUTOR","body":"Hi @cknv \n\nThe bit I'm missing is this: you're already using span clauses, which are term based, so you already need to do the analysis to convert text to terms.  e.g. to take your example:\n\n```\n term NEAR/4 \"some phrase\"\n```\n\nImagine you're using the `english` analyzer and `terms` has been stemmed to `term`.  It is quite possible that your user will enter `terms NEAR/4 \"some phrase\"` which will find nothing unless you analyze `terms` -> `term`.\n\nSo you already have to deal with analysis for the words outside the phrase.  Why would the words inside the phrase be any different? \n\nI wonder if you shouldn't be looking at creating a plugin based on the surround query parser available in Lucene: https://lucene.apache.org/core/5_4_0/queryparser/index.html?org/apache/lucene/queryparser/surround/parser/package-summary.html\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/194883158","html_url":"https://github.com/elastic/elasticsearch/issues/16796#issuecomment-194883158","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16796","id":194883158,"node_id":"MDEyOklzc3VlQ29tbWVudDE5NDg4MzE1OA==","user":{"login":"mcuelenaere","id":1682432,"node_id":"MDQ6VXNlcjE2ODI0MzI=","avatar_url":"https://avatars0.githubusercontent.com/u/1682432?v=4","gravatar_id":"","url":"https://api.github.com/users/mcuelenaere","html_url":"https://github.com/mcuelenaere","followers_url":"https://api.github.com/users/mcuelenaere/followers","following_url":"https://api.github.com/users/mcuelenaere/following{/other_user}","gists_url":"https://api.github.com/users/mcuelenaere/gists{/gist_id}","starred_url":"https://api.github.com/users/mcuelenaere/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcuelenaere/subscriptions","organizations_url":"https://api.github.com/users/mcuelenaere/orgs","repos_url":"https://api.github.com/users/mcuelenaere/repos","events_url":"https://api.github.com/users/mcuelenaere/events{/privacy}","received_events_url":"https://api.github.com/users/mcuelenaere/received_events","type":"User","site_admin":false},"created_at":"2016-03-10T14:50:03Z","updated_at":"2016-03-10T14:50:03Z","author_association":"NONE","body":"I have a similar request.\nGiven the query \"Foo-BAR\" and dataset [\"bar foo bar\", \"foo bar\", \"foo bar foo\"] I want \"foo bar\" to rank the highest.\n\nThis can be implemented with a `span_first` wrapping a `span_near` with two terms, however I need to perform the analysis part client-side as there is no ES clause AFAIK that does this (except for `match_phrase`, which cannot be wrapped in a `span_first` though).\n\nhttp://grokbase.com/t/gg/elasticsearch/12bv1ee7ah/forcing-analysis-of-terms-and-span-terms describes pretty much the same.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/196761944","html_url":"https://github.com/elastic/elasticsearch/issues/16796#issuecomment-196761944","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16796","id":196761944,"node_id":"MDEyOklzc3VlQ29tbWVudDE5Njc2MTk0NA==","user":{"login":"cknv","id":123179,"node_id":"MDQ6VXNlcjEyMzE3OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/123179?v=4","gravatar_id":"","url":"https://api.github.com/users/cknv","html_url":"https://github.com/cknv","followers_url":"https://api.github.com/users/cknv/followers","following_url":"https://api.github.com/users/cknv/following{/other_user}","gists_url":"https://api.github.com/users/cknv/gists{/gist_id}","starred_url":"https://api.github.com/users/cknv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cknv/subscriptions","organizations_url":"https://api.github.com/users/cknv/orgs","repos_url":"https://api.github.com/users/cknv/repos","events_url":"https://api.github.com/users/cknv/events{/privacy}","received_events_url":"https://api.github.com/users/cknv/received_events","type":"User","site_admin":false},"created_at":"2016-03-15T10:45:01Z","updated_at":"2016-03-15T10:45:01Z","author_association":"NONE","body":"It's true that I can deal with terms, but actually now that I think of it, it will break down if I ever decide to use stemming or smiliar modification of words that go into the index.\nCurrently I am mostly saved by my DSL that enables me to restrict the text I accept as terms, thus my need to change them is minimal, but actually I would need to do something and I realize now that my DSL is actually incomplete in certain edge cases.\n\nI still think that part of the problem is having to replicate exactly what the different analyzers are doing, not to mention custom ones. As @mcuelenaere pointed out, I think this can provide a lot of help to provide the correct analysis of text into tokens. I am not sure how hard this is in Elasticsearch, but I hope that it could give the span queries a little more ease of use. Allowing developers to focus on whatever product we base upon Elasticsearch instead of having to figure out how to do text analysis.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/196944507","html_url":"https://github.com/elastic/elasticsearch/issues/16796#issuecomment-196944507","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16796","id":196944507,"node_id":"MDEyOklzc3VlQ29tbWVudDE5Njk0NDUwNw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-03-15T17:46:35Z","updated_at":"2016-03-15T17:46:35Z","author_association":"CONTRIBUTOR","body":"The span queries are low level term-oriented queries.  They are building blocks that can be used to implement a custom query syntax, similar to the `query_string` query syntax, but more position aware. This isn't going to change.  \n\nReally exposing them via the query DSL is a bit of an anomaly.  Normally they'd be used by a query parser written in Java and living on the server.  Analysis is a vital part of the construction of queries which use span queries.  \n\nI think the solution here is to look for (or write) a custom query parser that supports operators like `NEAR/4` etc.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/290321257","html_url":"https://github.com/elastic/elasticsearch/issues/16796#issuecomment-290321257","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16796","id":290321257,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MDMyMTI1Nw==","user":{"login":"speedplane","id":671052,"node_id":"MDQ6VXNlcjY3MTA1Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/671052?v=4","gravatar_id":"","url":"https://api.github.com/users/speedplane","html_url":"https://github.com/speedplane","followers_url":"https://api.github.com/users/speedplane/followers","following_url":"https://api.github.com/users/speedplane/following{/other_user}","gists_url":"https://api.github.com/users/speedplane/gists{/gist_id}","starred_url":"https://api.github.com/users/speedplane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/speedplane/subscriptions","organizations_url":"https://api.github.com/users/speedplane/orgs","repos_url":"https://api.github.com/users/speedplane/repos","events_url":"https://api.github.com/users/speedplane/events{/privacy}","received_events_url":"https://api.github.com/users/speedplane/received_events","type":"User","site_admin":false},"created_at":"2017-03-30T07:05:03Z","updated_at":"2017-03-30T07:05:03Z","author_association":"CONTRIBUTOR","body":"@clintongormley I agree that this is likely the solution. I use ES and did exactly this, see [here for an example](https://www.docketalarm.com/search/documents/?q=%22personal+injury%22+w%2F10+boat).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/305420069","html_url":"https://github.com/elastic/elasticsearch/issues/16796#issuecomment-305420069","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16796","id":305420069,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNTQyMDA2OQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-06-01T08:03:02Z","updated_at":"2017-06-01T08:03:02Z","author_association":"CONTRIBUTOR","body":"Related to https://github.com/elastic/elasticsearch/issues/11328","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/373682194","html_url":"https://github.com/elastic/elasticsearch/issues/16796#issuecomment-373682194","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16796","id":373682194,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MzY4MjE5NA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2018-03-16T11:10:55Z","updated_at":"2018-03-16T11:10:55Z","author_association":"MEMBER","body":"@elastic/es-search-aggs ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/393886337","html_url":"https://github.com/elastic/elasticsearch/issues/16796#issuecomment-393886337","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16796","id":393886337,"node_id":"MDEyOklzc3VlQ29tbWVudDM5Mzg4NjMzNw==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2018-06-01T13:49:20Z","updated_at":"2018-06-01T13:49:20Z","author_association":"MEMBER","body":"We don't have plan to add query parser for the span queries at the moment.\r\nHowever we're currently working on integrating a new position-based query called `intervals`:\r\nhttps://github.com/elastic/elasticsearch/issues/29636\r\nThey are very similar to span queries and we are going to handle analysis in the API as described in the issue.\r\nFor these reason I am going to close this issue and the progress for `interval` queries can be track in https://github.com/elastic/elasticsearch/issues/29636 directly.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/630664015","html_url":"https://github.com/elastic/elasticsearch/issues/16796#issuecomment-630664015","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16796","id":630664015,"node_id":"MDEyOklzc3VlQ29tbWVudDYzMDY2NDAxNQ==","user":{"login":"gideongrossmanHome","id":13761376,"node_id":"MDQ6VXNlcjEzNzYxMzc2","avatar_url":"https://avatars2.githubusercontent.com/u/13761376?v=4","gravatar_id":"","url":"https://api.github.com/users/gideongrossmanHome","html_url":"https://github.com/gideongrossmanHome","followers_url":"https://api.github.com/users/gideongrossmanHome/followers","following_url":"https://api.github.com/users/gideongrossmanHome/following{/other_user}","gists_url":"https://api.github.com/users/gideongrossmanHome/gists{/gist_id}","starred_url":"https://api.github.com/users/gideongrossmanHome/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gideongrossmanHome/subscriptions","organizations_url":"https://api.github.com/users/gideongrossmanHome/orgs","repos_url":"https://api.github.com/users/gideongrossmanHome/repos","events_url":"https://api.github.com/users/gideongrossmanHome/events{/privacy}","received_events_url":"https://api.github.com/users/gideongrossmanHome/received_events","type":"User","site_admin":false},"created_at":"2020-05-19T08:19:09Z","updated_at":"2020-05-19T08:19:09Z","author_association":"NONE","body":"How does the interval query handle the issue described here? Don't we still need to break up our search text into phrases before passing them into the intervals query? ","performed_via_github_app":null}]