[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/59348441","html_url":"https://github.com/elastic/elasticsearch/issues/8105#issuecomment-59348441","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8105","id":59348441,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzQ4NDQx","user":{"login":"sfussenegger","id":117516,"node_id":"MDQ6VXNlcjExNzUxNg==","avatar_url":"https://avatars1.githubusercontent.com/u/117516?v=4","gravatar_id":"","url":"https://api.github.com/users/sfussenegger","html_url":"https://github.com/sfussenegger","followers_url":"https://api.github.com/users/sfussenegger/followers","following_url":"https://api.github.com/users/sfussenegger/following{/other_user}","gists_url":"https://api.github.com/users/sfussenegger/gists{/gist_id}","starred_url":"https://api.github.com/users/sfussenegger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sfussenegger/subscriptions","organizations_url":"https://api.github.com/users/sfussenegger/orgs","repos_url":"https://api.github.com/users/sfussenegger/repos","events_url":"https://api.github.com/users/sfussenegger/events{/privacy}","received_events_url":"https://api.github.com/users/sfussenegger/received_events","type":"User","site_admin":false},"created_at":"2014-10-16T11:35:01Z","updated_at":"2014-10-16T11:35:42Z","author_association":"CONTRIBUTOR","body":"Ok, so here's [a test case](https://github.com/molindo/elasticsearch8105/blob/master/src/main/java/at/molindo/elasticsearch8105/Main.java) although further discussion with @karmi suggested it's working as designed. \n\nNevertheless, running the linked code twice results in `org.elasticsearch.indices.IndexAlreadyExistsException: [foobar] already exists` (Note: it's reliably reproducible for me, but since it's a race condition, results may differ)\n\nI've tested several version of ES and it turned out that 1.3.0 was the version introducing the change. \n\nA viable workaround is waiting for cluster status before checking for existence (yellow is sufficient).\n\nNot sure if this is a bug or by design, so feel free to proceed as you see fit.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/59409134","html_url":"https://github.com/elastic/elasticsearch/issues/8105#issuecomment-59409134","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8105","id":59409134,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDA5MTM0","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-10-16T18:39:39Z","updated_at":"2014-10-16T18:39:39Z","author_association":"CONTRIBUTOR","body":"I'd be interested in seeing what change in 1.3 is causing this too...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94095307","html_url":"https://github.com/elastic/elasticsearch/issues/8105#issuecomment-94095307","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8105","id":94095307,"node_id":"MDEyOklzc3VlQ29tbWVudDk0MDk1MzA3","user":{"login":"zakmagnus","id":1757886,"node_id":"MDQ6VXNlcjE3NTc4ODY=","avatar_url":"https://avatars2.githubusercontent.com/u/1757886?v=4","gravatar_id":"","url":"https://api.github.com/users/zakmagnus","html_url":"https://github.com/zakmagnus","followers_url":"https://api.github.com/users/zakmagnus/followers","following_url":"https://api.github.com/users/zakmagnus/following{/other_user}","gists_url":"https://api.github.com/users/zakmagnus/gists{/gist_id}","starred_url":"https://api.github.com/users/zakmagnus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zakmagnus/subscriptions","organizations_url":"https://api.github.com/users/zakmagnus/orgs","repos_url":"https://api.github.com/users/zakmagnus/repos","events_url":"https://api.github.com/users/zakmagnus/events{/privacy}","received_events_url":"https://api.github.com/users/zakmagnus/received_events","type":"User","site_admin":false},"created_at":"2015-04-17T23:18:21Z","updated_at":"2015-04-17T23:18:21Z","author_association":"NONE","body":"I also run into this issue. I'm trying to see if I can repro it even when not in local mode. If I can, then I think it would definitely be a big problem. I don't think \"wait for yellow state\" is an acceptable solution when using ES as a remote system, because it can always just go down and then come back up, or change in any other arbitrary way, in between the \"wait for yellow\" request and the actual work request that I want it to do.\n\nBut maybe it's only a local mode quirk. That is still pretty annoying, because it's hard to test with local mode when it introduces its own strange behaviors. Whenever a test fails, I have to try to figure out if it's exposing a real buggy behavior or if it's just local mode being weird.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/94217224","html_url":"https://github.com/elastic/elasticsearch/issues/8105#issuecomment-94217224","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8105","id":94217224,"node_id":"MDEyOklzc3VlQ29tbWVudDk0MjE3MjI0","user":{"login":"zakmagnus","id":1757886,"node_id":"MDQ6VXNlcjE3NTc4ODY=","avatar_url":"https://avatars2.githubusercontent.com/u/1757886?v=4","gravatar_id":"","url":"https://api.github.com/users/zakmagnus","html_url":"https://github.com/zakmagnus","followers_url":"https://api.github.com/users/zakmagnus/followers","following_url":"https://api.github.com/users/zakmagnus/following{/other_user}","gists_url":"https://api.github.com/users/zakmagnus/gists{/gist_id}","starred_url":"https://api.github.com/users/zakmagnus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zakmagnus/subscriptions","organizations_url":"https://api.github.com/users/zakmagnus/orgs","repos_url":"https://api.github.com/users/zakmagnus/repos","events_url":"https://api.github.com/users/zakmagnus/events{/privacy}","received_events_url":"https://api.github.com/users/zakmagnus/received_events","type":"User","site_admin":false},"created_at":"2015-04-19T00:53:22Z","updated_at":"2015-04-19T00:53:22Z","author_association":"NONE","body":"A few more interesting notes:\n\nIndex creation is asynchronous (right?) so I actually think we can't expect Stefan's test case to pass. There doesn't seem to be any waiting after making the index creation call, and that call returning does not mean that an index has actually been created. For this reason alone, the test case may fail.\n\nI tried waiting for yellow state and for an active shard after creating an index, but it didn't work. It would still often say that the index did not exist, even after those waits returned successfully, if asked quickly enough. This seems like a local mode problem, at the very least.\n\nI should note that I was also shutting down the local node in between every operation, to stress it more. For example: start local node, create index, wait for health state, shut down node, start up node, check if index exists, shut down node. Note that I inserted a health wait after creation, but it didn't help. However, if I insert a health wait right before the check, then I could not get it to say that the index doesn't exist. I can't tell if this is because yellow state is somehow necessary, or if just putting that call in delayed the timing enough to change the race that I seemed to be observing.\n\nI could not reproduce this issue with an actual external cluster as opposed to local mode. As long as I waited for a healthy state right after each creation call, then each index existence check would return accurately, regardless of what waits I did beforehand. There's a lot more time in between each event when I have to poke an external program, though, so again, I can't tell if this is just a case of slowing things down enough to hide any race conditions. But I'm pleased that at least it's not trivial to get an actual ES cluster to tell me wrong information.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/96220593","html_url":"https://github.com/elastic/elasticsearch/issues/8105#issuecomment-96220593","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8105","id":96220593,"node_id":"MDEyOklzc3VlQ29tbWVudDk2MjIwNTkz","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-04-25T15:12:00Z","updated_at":"2015-04-25T15:12:00Z","author_association":"CONTRIBUTOR","body":"Also see #9126\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/227726694","html_url":"https://github.com/elastic/elasticsearch/issues/8105#issuecomment-227726694","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8105","id":227726694,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNzcyNjY5NA==","user":{"login":"Schaka","id":2223171,"node_id":"MDQ6VXNlcjIyMjMxNzE=","avatar_url":"https://avatars2.githubusercontent.com/u/2223171?v=4","gravatar_id":"","url":"https://api.github.com/users/Schaka","html_url":"https://github.com/Schaka","followers_url":"https://api.github.com/users/Schaka/followers","following_url":"https://api.github.com/users/Schaka/following{/other_user}","gists_url":"https://api.github.com/users/Schaka/gists{/gist_id}","starred_url":"https://api.github.com/users/Schaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Schaka/subscriptions","organizations_url":"https://api.github.com/users/Schaka/orgs","repos_url":"https://api.github.com/users/Schaka/repos","events_url":"https://api.github.com/users/Schaka/events{/privacy}","received_events_url":"https://api.github.com/users/Schaka/received_events","type":"User","site_admin":false},"created_at":"2016-06-22T12:23:34Z","updated_at":"2016-06-22T12:23:34Z","author_association":"NONE","body":"I ran into this same issue with 5.0.0-alpha3. \n\nDuring index recovery, which is asynchronous, we cannot check whether the index exists. So we need to wait for the cluster to start fully (or an event for recovery - which currently doesn't seem possible) until we check whether the index exists and THEN create it.\n\nI thought this would be possile by registering a ClusterStateChangeListener, but no event seems to be fired for what I required.\n\nAny workaround?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/228093332","html_url":"https://github.com/elastic/elasticsearch/issues/8105#issuecomment-228093332","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8105","id":228093332,"node_id":"MDEyOklzc3VlQ29tbWVudDIyODA5MzMzMg==","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"created_at":"2016-06-23T15:46:07Z","updated_at":"2016-06-23T15:46:07Z","author_association":"CONTRIBUTOR","body":"I've opened  #19047 that fixes this issue.\n","performed_via_github_app":null}]