[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/380923222","html_url":"https://github.com/elastic/elasticsearch/issues/29498#issuecomment-380923222","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29498","id":380923222,"node_id":"MDEyOklzc3VlQ29tbWVudDM4MDkyMzIyMg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-04-12T19:47:08Z","updated_at":"2018-04-12T19:47:08Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/380924375","html_url":"https://github.com/elastic/elasticsearch/issues/29498#issuecomment-380924375","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29498","id":380924375,"node_id":"MDEyOklzc3VlQ29tbWVudDM4MDkyNDM3NQ==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2018-04-12T19:51:10Z","updated_at":"2018-04-12T19:51:10Z","author_association":"CONTRIBUTOR","body":"Hi @kolapkardhaval. Would you mind sharing exactly what you mean when you say the UUIDs are being decoded using UUIDv3?\r\n\r\nAs of 6.0, we use a version of UUIDs that is not necessarily compatible with the \"version4\" spec.\r\n\r\nhttps://github.com/elastic/elasticsearch/blob/263349f6282d90343f44888a2133e826e5f82fde/server/src/main/java/org/elasticsearch/action/index/IndexRequest.java#L490\r\n\r\nWe are leveraging a time-based option which resulted in better performance than the traditional random UUID.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/380951614","html_url":"https://github.com/elastic/elasticsearch/issues/29498#issuecomment-380951614","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29498","id":380951614,"node_id":"MDEyOklzc3VlQ29tbWVudDM4MDk1MTYxNA==","user":{"login":"kolapkardhaval","id":38146892,"node_id":"MDQ6VXNlcjM4MTQ2ODky","avatar_url":"https://avatars3.githubusercontent.com/u/38146892?v=4","gravatar_id":"","url":"https://api.github.com/users/kolapkardhaval","html_url":"https://github.com/kolapkardhaval","followers_url":"https://api.github.com/users/kolapkardhaval/followers","following_url":"https://api.github.com/users/kolapkardhaval/following{/other_user}","gists_url":"https://api.github.com/users/kolapkardhaval/gists{/gist_id}","starred_url":"https://api.github.com/users/kolapkardhaval/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kolapkardhaval/subscriptions","organizations_url":"https://api.github.com/users/kolapkardhaval/orgs","repos_url":"https://api.github.com/users/kolapkardhaval/repos","events_url":"https://api.github.com/users/kolapkardhaval/events{/privacy}","received_events_url":"https://api.github.com/users/kolapkardhaval/received_events","type":"User","site_admin":false},"created_at":"2018-04-12T21:35:14Z","updated_at":"2018-04-12T21:35:14Z","author_association":"NONE","body":"\r\n@talevy , Thank you very much. So basically, we have elasticsearch and postgres as our databases. We get the ID from elasticsearch which is a base 64 encoded UUID. We would like to decode this UUID and store it in postgres as postgres supports UUID as a primary key. So, I do this:\r\n\r\n        String base64UUID=main.getBase64UUID();\r\n        System.out.println(\"Base 64 UUID is \"+base64UUID);\r\n        Base64.Decoder decoder = Base64.getDecoder();\r\n        byte[] decodedByteArray = decoder.decode(base64UUID);\r\n        UUID uuid=UUID.nameUUIDFromBytes(decodedByteArray);\r\n\r\nBut now to get the base64 encoded UUID back from the UUID is where I am failing. I don't know how to do that. I need this to verify that I have created the right UUID in the first place and if I need to to the mapping of records in elasticsearch and postgres","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/380954844","html_url":"https://github.com/elastic/elasticsearch/issues/29498#issuecomment-380954844","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29498","id":380954844,"node_id":"MDEyOklzc3VlQ29tbWVudDM4MDk1NDg0NA==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2018-04-12T21:49:10Z","updated_at":"2018-04-12T21:50:15Z","author_association":"CONTRIBUTOR","body":"@kolapkardhaval I think I understand. This is not an issue with our UUID, this is more of an issue with the expectation that we used the same library as you for UUID, so that you can decode effectively.\r\n\r\n```UUID uuid=UUID.nameUUIDFromBytes(decodedByteArray);```\r\n\r\nthe above would not be expected to work since the default UUID generator I linked to above does not follow the same spec that would allow the UUID library to reconstruct itself from the byte array.\r\n\r\nYou would have to resolve this another way. We are not using the md5 hashing scheme for this.\r\n\r\nDoes this make sense?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/380968377","html_url":"https://github.com/elastic/elasticsearch/issues/29498#issuecomment-380968377","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29498","id":380968377,"node_id":"MDEyOklzc3VlQ29tbWVudDM4MDk2ODM3Nw==","user":{"login":"kolapkardhaval","id":38146892,"node_id":"MDQ6VXNlcjM4MTQ2ODky","avatar_url":"https://avatars3.githubusercontent.com/u/38146892?v=4","gravatar_id":"","url":"https://api.github.com/users/kolapkardhaval","html_url":"https://github.com/kolapkardhaval","followers_url":"https://api.github.com/users/kolapkardhaval/followers","following_url":"https://api.github.com/users/kolapkardhaval/following{/other_user}","gists_url":"https://api.github.com/users/kolapkardhaval/gists{/gist_id}","starred_url":"https://api.github.com/users/kolapkardhaval/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kolapkardhaval/subscriptions","organizations_url":"https://api.github.com/users/kolapkardhaval/orgs","repos_url":"https://api.github.com/users/kolapkardhaval/repos","events_url":"https://api.github.com/users/kolapkardhaval/events{/privacy}","received_events_url":"https://api.github.com/users/kolapkardhaval/received_events","type":"User","site_admin":false},"created_at":"2018-04-12T22:52:34Z","updated_at":"2018-04-12T22:52:34Z","author_association":"NONE","body":"@talevy Yes, helps a lot in our architecture decision. I guess, we will have to go with String for postgres.","performed_via_github_app":null}]