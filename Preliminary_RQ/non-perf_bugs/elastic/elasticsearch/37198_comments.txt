[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/451995551","html_url":"https://github.com/elastic/elasticsearch/issues/37198#issuecomment-451995551","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37198","id":451995551,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTk5NTU1MQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-01-07T16:35:27Z","updated_at":"2019-01-07T16:35:27Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-analytics-geo","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/452180777","html_url":"https://github.com/elastic/elasticsearch/issues/37198#issuecomment-452180777","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37198","id":452180777,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjE4MDc3Nw==","user":{"login":"vivekprm","id":2403660,"node_id":"MDQ6VXNlcjI0MDM2NjA=","avatar_url":"https://avatars0.githubusercontent.com/u/2403660?v=4","gravatar_id":"","url":"https://api.github.com/users/vivekprm","html_url":"https://github.com/vivekprm","followers_url":"https://api.github.com/users/vivekprm/followers","following_url":"https://api.github.com/users/vivekprm/following{/other_user}","gists_url":"https://api.github.com/users/vivekprm/gists{/gist_id}","starred_url":"https://api.github.com/users/vivekprm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vivekprm/subscriptions","organizations_url":"https://api.github.com/users/vivekprm/orgs","repos_url":"https://api.github.com/users/vivekprm/repos","events_url":"https://api.github.com/users/vivekprm/events{/privacy}","received_events_url":"https://api.github.com/users/vivekprm/received_events","type":"User","site_admin":false},"created_at":"2019-01-08T05:32:27Z","updated_at":"2019-01-08T05:32:27Z","author_association":"NONE","body":"Would like to work on it.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/452885508","html_url":"https://github.com/elastic/elasticsearch/issues/37198#issuecomment-452885508","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37198","id":452885508,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjg4NTUwOA==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-01-09T22:02:54Z","updated_at":"2019-01-09T22:02:54Z","author_association":"MEMBER","body":"A note for anyone working or thinking about working on this.  It's not clear if we should extend the existing min/max aggs, or create a new set of aggs (`min_keyword` or similar).  Ordering by keyword might have need some additional parameters, like are special characters included?  Is it alpha-numeric or just alpha?  Should the order be scripted/configurable somehow?  etc.\r\n\r\nIt'll also likely need a different internal implementation since it needs to return a string rather than a double.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/575093406","html_url":"https://github.com/elastic/elasticsearch/issues/37198#issuecomment-575093406","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37198","id":575093406,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTA5MzQwNg==","user":{"login":"f3l1xss","id":25915239,"node_id":"MDQ6VXNlcjI1OTE1MjM5","avatar_url":"https://avatars2.githubusercontent.com/u/25915239?v=4","gravatar_id":"","url":"https://api.github.com/users/f3l1xss","html_url":"https://github.com/f3l1xss","followers_url":"https://api.github.com/users/f3l1xss/followers","following_url":"https://api.github.com/users/f3l1xss/following{/other_user}","gists_url":"https://api.github.com/users/f3l1xss/gists{/gist_id}","starred_url":"https://api.github.com/users/f3l1xss/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/f3l1xss/subscriptions","organizations_url":"https://api.github.com/users/f3l1xss/orgs","repos_url":"https://api.github.com/users/f3l1xss/repos","events_url":"https://api.github.com/users/f3l1xss/events{/privacy}","received_events_url":"https://api.github.com/users/f3l1xss/received_events","type":"User","site_admin":false},"created_at":"2020-01-16T10:45:22Z","updated_at":"2020-01-16T10:45:22Z","author_association":"NONE","body":"Guys, has there been any progress on this? AFAIK we can't currently perform any metric aggregation on keyword field and then use the result for sorting. I have tried using scripted metric aggregation to produce string result but in the end unable to use that result for sorting.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/575099266","html_url":"https://github.com/elastic/elasticsearch/issues/37198#issuecomment-575099266","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37198","id":575099266,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTA5OTI2Ng==","user":{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false},"created_at":"2020-01-16T11:00:27Z","updated_at":"2020-01-16T11:01:55Z","author_association":"MEMBER","body":"Actually this has been resolved a few versions back - see the docs at:\r\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/sql-functions-aggs.html#sql-functions-aggs-max\r\n\r\nEssentially instead of extending MAX or MIN, SQL rewrite them into LAST/FIRST aggregations. There is a downside unfortunately which is that it cannot be used for filtering (`HAVING` clause).\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/575099393","html_url":"https://github.com/elastic/elasticsearch/issues/37198#issuecomment-575099393","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37198","id":575099393,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTA5OTM5Mw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-01-16T11:00:47Z","updated_at":"2020-01-16T11:00:47Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search (:Search/SQL)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/575108114","html_url":"https://github.com/elastic/elasticsearch/issues/37198#issuecomment-575108114","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37198","id":575108114,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTEwODExNA==","user":{"login":"f3l1xss","id":25915239,"node_id":"MDQ6VXNlcjI1OTE1MjM5","avatar_url":"https://avatars2.githubusercontent.com/u/25915239?v=4","gravatar_id":"","url":"https://api.github.com/users/f3l1xss","html_url":"https://github.com/f3l1xss","followers_url":"https://api.github.com/users/f3l1xss/followers","following_url":"https://api.github.com/users/f3l1xss/following{/other_user}","gists_url":"https://api.github.com/users/f3l1xss/gists{/gist_id}","starred_url":"https://api.github.com/users/f3l1xss/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/f3l1xss/subscriptions","organizations_url":"https://api.github.com/users/f3l1xss/orgs","repos_url":"https://api.github.com/users/f3l1xss/repos","events_url":"https://api.github.com/users/f3l1xss/events{/privacy}","received_events_url":"https://api.github.com/users/f3l1xss/received_events","type":"User","site_admin":false},"created_at":"2020-01-16T11:24:27Z","updated_at":"2020-01-16T11:24:27Z","author_association":"NONE","body":"> Actually this has been resolved a few versions back - see the docs at:\r\n> https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-functions-aggs.html#sql-functions-aggs-max\r\n> \r\n> Essentially instead of extending MAX or MIN, SQL rewrite them into LAST/FIRST aggregations. There is a downside unfortunately which is that it cannot be used for filtering (`HAVING` clause).\r\n\r\nDoes it mean that instead of using term aggregation, I would have to use the sql equivalent? (Group by). We are currently using AWS elastic search and AFAIK they dont support XPack. Would there be any other out of the box solution to sort term bucket based on keyword field?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/575169410","html_url":"https://github.com/elastic/elasticsearch/issues/37198#issuecomment-575169410","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37198","id":575169410,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTE2OTQxMA==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2020-01-16T14:13:22Z","updated_at":"2020-01-16T14:13:22Z","author_association":"MEMBER","body":"@f3l1xss Could you describe the type of sort you're wanting to perform?  E.g. `terms` agg on one keyword field, but sort based on a different keyword field?\r\n\r\nThe [`bucket_sort` pipeline agg](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-bucket-sort-aggregation.html) may provide the functionality you need, by sorting the buckets on the coordinating node.  It's not quite the same as sorting on the shard, but sorting by sub-aggregations is dodgy in general due to accuracy issues (see [warning in docs](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html#search-aggregations-bucket-terms-aggregation-order))","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/575206504","html_url":"https://github.com/elastic/elasticsearch/issues/37198#issuecomment-575206504","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37198","id":575206504,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTIwNjUwNA==","user":{"login":"f3l1xss","id":25915239,"node_id":"MDQ6VXNlcjI1OTE1MjM5","avatar_url":"https://avatars2.githubusercontent.com/u/25915239?v=4","gravatar_id":"","url":"https://api.github.com/users/f3l1xss","html_url":"https://github.com/f3l1xss","followers_url":"https://api.github.com/users/f3l1xss/followers","following_url":"https://api.github.com/users/f3l1xss/following{/other_user}","gists_url":"https://api.github.com/users/f3l1xss/gists{/gist_id}","starred_url":"https://api.github.com/users/f3l1xss/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/f3l1xss/subscriptions","organizations_url":"https://api.github.com/users/f3l1xss/orgs","repos_url":"https://api.github.com/users/f3l1xss/repos","events_url":"https://api.github.com/users/f3l1xss/events{/privacy}","received_events_url":"https://api.github.com/users/f3l1xss/received_events","type":"User","site_admin":false},"created_at":"2020-01-16T15:32:58Z","updated_at":"2020-01-16T15:37:14Z","author_association":"NONE","body":"> @f3l1xss Could you describe the type of sort you're wanting to perform? E.g. `terms` agg on one keyword field, but sort based on a different keyword field?\r\n> \r\n> The [`bucket_sort` pipeline agg](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-bucket-sort-aggregation.html) may provide the functionality you need, by sorting the buckets on the coordinating node. It's not quite the same as sorting on the shard, but sorting by sub-aggregations is dodgy in general due to accuracy issues (see [warning in docs](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html#search-aggregations-bucket-terms-aggregation-order))\r\n\r\nHi @polyfractal Thank you for your reply.\r\nWhat I would like to do is to use terms agg on numeric field but sort the buckets by keyword field as described here: https://stackoverflow.com/questions/59752351/how-to-perform-metric-aggregation-on-keyword-field\r\n\r\nNow I understand that it doesnt make sense to sort by single keyword field since each terms bucket could have one(or many) doc count with different keyword field value. However, since in my use case I can be sure that each terms bucket would return documents with the same keyword field value, I can simply pick any documents and get its keyword field value.\r\n\r\nSo far, I've come up with scripted metric aggs to simply pick keyword field value from any doc and then trying to sort terms buckets using this scripted metric aggs result but found out that sorting using scripted metric aggs value is not supported.\r\n\r\nRegarding Bucket sort, if you look at the example in the link, SUM of price is being used as the metric aggregation which supports only numeric field. I simply would need metric aggregation like that for keyword field (can be mix/max, doesnt matter as I can get the keyword field value from any docs)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/657486070","html_url":"https://github.com/elastic/elasticsearch/issues/37198#issuecomment-657486070","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37198","id":657486070,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzQ4NjA3MA==","user":{"login":"aniezurawski","id":5409107,"node_id":"MDQ6VXNlcjU0MDkxMDc=","avatar_url":"https://avatars0.githubusercontent.com/u/5409107?v=4","gravatar_id":"","url":"https://api.github.com/users/aniezurawski","html_url":"https://github.com/aniezurawski","followers_url":"https://api.github.com/users/aniezurawski/followers","following_url":"https://api.github.com/users/aniezurawski/following{/other_user}","gists_url":"https://api.github.com/users/aniezurawski/gists{/gist_id}","starred_url":"https://api.github.com/users/aniezurawski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aniezurawski/subscriptions","organizations_url":"https://api.github.com/users/aniezurawski/orgs","repos_url":"https://api.github.com/users/aniezurawski/repos","events_url":"https://api.github.com/users/aniezurawski/events{/privacy}","received_events_url":"https://api.github.com/users/aniezurawski/received_events","type":"User","site_admin":false},"created_at":"2020-07-13T10:48:15Z","updated_at":"2020-07-13T10:48:15Z","author_association":"NONE","body":"> @f3l1xss Could you describe the type of sort you're wanting to perform? E.g. `terms` agg on one keyword field, but sort based on a different keyword field?\r\n\r\nHi. This is exactly what I need. I have a `terms` agg on field A and I want to sort buckets by max/min sub aggregation on field B. Where B is a keyword, not a number. Is it possible to achieve?","performed_via_github_app":null}]