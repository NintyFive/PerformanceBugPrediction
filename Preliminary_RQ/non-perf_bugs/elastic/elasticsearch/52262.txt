{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/52262","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52262/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52262/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/52262/events","html_url":"https://github.com/elastic/elasticsearch/issues/52262","id":564015979,"node_id":"MDU6SXNzdWU1NjQwMTU5Nzk=","number":52262,"title":"Long type does not work for TermsAggregation","user":{"login":"jdcohen220","id":33329717,"node_id":"MDQ6VXNlcjMzMzI5NzE3","avatar_url":"https://avatars0.githubusercontent.com/u/33329717?v=4","gravatar_id":"","url":"https://api.github.com/users/jdcohen220","html_url":"https://github.com/jdcohen220","followers_url":"https://api.github.com/users/jdcohen220/followers","following_url":"https://api.github.com/users/jdcohen220/following{/other_user}","gists_url":"https://api.github.com/users/jdcohen220/gists{/gist_id}","starred_url":"https://api.github.com/users/jdcohen220/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdcohen220/subscriptions","organizations_url":"https://api.github.com/users/jdcohen220/orgs","repos_url":"https://api.github.com/users/jdcohen220/repos","events_url":"https://api.github.com/users/jdcohen220/events{/privacy}","received_events_url":"https://api.github.com/users/jdcohen220/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":1967499105,"node_id":"MDU6TGFiZWwxOTY3NDk5MTA1","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Analytics","name":"Team:Analytics","color":"fef2c0","default":false,"description":"Meta label for analytics/geo team"},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"assignees":[{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2020-02-12T13:55:07Z","updated_at":"2020-05-11T16:48:35Z","closed_at":"2020-05-11T16:48:34Z","author_association":"NONE","active_lock_reason":null,"body":"<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):\r\n`7.5.1`\r\n**Plugins installed**: []\r\n`analysis_phonetic`\r\n**JVM version** (`java -version`):\r\n```\r\nopenjdk version \"1.8.0_242\"\r\nOpenJDK Runtime Environment (build 1.8.0_242-8u242-b08-0ubuntu3~18.04-b08)\r\nOpenJDK 64-Bit Server VM (build 25.242-b08, mixed mode)\r\n```\r\n**OS version** (`uname -a` if on a Unix-like system):\r\n```\r\nLinux ip-172-31-31-196 4.15.0-1032-aws #34-Ubuntu SMP Thu Jan 17 15:18:09 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nBucket aggregations, such as the `TermsAggregation` do not work with `long` datatypes. The buckets do not return in the aggregations section. The same exact query/aggregation works correctly if using the keyword datatype. The docs for this aggregation make no mention of this restriction.\r\n**Steps to reproduce**:\r\n\r\n**Using the long datatype:**\r\n\r\n```\r\nPUT long_bucketing_index\r\n{\r\n  \"mappings\": {\r\n    \"dynamic\": \"strict\",\r\n    \"properties\": {\r\n      \"id\": {\r\n        \"type\": \"keyword\"\r\n      },\r\n      \"category_id\": {\r\n        \"type\": \"long\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPOST long_bucketing_index/_doc\r\n{\r\n  \"id\": 1,\r\n  \"category_id\": 1353143788557567278\r\n}\r\n\r\nPOST long_bucketing_index/_doc\r\n{\r\n  \"id\": 2,\r\n  \"category_id\": 1353143788557567278\r\n}\r\n\r\nPOST long_bucketing_index/_doc\r\n{\r\n  \"id\": 3,\r\n  \"category_id\": 135314378855756999\r\n}\r\n\r\n//the query\r\n\r\nPOST long_bucketing_index/_search?\r\n{\r\n  \"query\": {\r\n    \"match_all\": {}\r\n  },\r\n  \"aggs\": {\r\n    \"category\": {\r\n      \"terms\": {\r\n        \"field\": \"category_id\",\r\n        \"include\": [\r\n          135314378855756999,\r\n          1353143788557567278\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n//results\r\n{\r\n  \"took\" : 0,\r\n  \"timed_out\" : false,\r\n  \"_shards\" : {\r\n    \"total\" : 1,\r\n    \"successful\" : 1,\r\n    \"skipped\" : 0,\r\n    \"failed\" : 0\r\n  },\r\n  \"hits\" : {\r\n    \"total\" : {\r\n      \"value\" : 3,\r\n      \"relation\" : \"eq\"\r\n    },\r\n    \"max_score\" : 1.0,\r\n    \"hits\" : [\r\n      {\r\n        \"_index\" : \"long_bucketing_index\",\r\n        \"_type\" : \"_doc\",\r\n        \"_id\" : \"lDWQOXAB9vBCg04Ye6R5\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"id\" : 1,\r\n          \"category_id\" : 1353143788557567278\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"long_bucketing_index\",\r\n        \"_type\" : \"_doc\",\r\n        \"_id\" : \"TJWQOXABIyKBZB8Fgj3E\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"id\" : 2,\r\n          \"category_id\" : 1353143788557567278\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"long_bucketing_index\",\r\n        \"_type\" : \"_doc\",\r\n        \"_id\" : \"HXKQOXABPlSARae1jLoC\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"id\" : 3,\r\n          \"category_id\" : 135314378855756999\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"aggregations\" : {\r\n    \"category\" : {\r\n      \"doc_count_error_upper_bound\" : 0,\r\n      \"sum_other_doc_count\" : 0,\r\n      \"buckets\" : [ ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nNotice the buckets array is empty for the aggregations.\r\n\r\nThe same exact procedure works as expected if using the `keyword` datatype\r\n\r\n**Using the keyword datatype**\r\n```\r\nPUT keyword_bucketing_index\r\n{\r\n  \"mappings\": {\r\n    \"dynamic\": \"strict\",\r\n    \"properties\": {\r\n      \"id\": {\r\n        \"type\": \"keyword\"\r\n      },\r\n      \"category_id\": {\r\n        \"type\": \"keyword\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPOST keyword_bucketing_index/_doc\r\n{\r\n  \"id\": 1,\r\n  \"category_id\": \"1353143788557567278\"\r\n}\r\n\r\nPOST keyword_bucketing_index/_doc\r\n{\r\n  \"id\": 2,\r\n  \"category_id\": \"1353143788557567278\"\r\n}\r\n\r\nPOST keyword_bucketing_index/_doc\r\n{\r\n  \"id\": 3,\r\n  \"category_id\": \"135314378855756999\"\r\n}\r\n\r\n//the query\r\nPOST keyword_bucketing_index/_search?\r\n{\r\n  \"query\": {\r\n    \"match_all\": {}\r\n  },\r\n  \"aggs\": {\r\n    \"category\": {\r\n      \"terms\": {\r\n        \"field\": \"category_id\",\r\n        \"include\": [\r\n          \"135314378855756999\",\r\n          \"1353143788557567278\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n//results\r\n{\r\n  \"took\" : 1,\r\n  \"timed_out\" : false,\r\n  \"_shards\" : {\r\n    \"total\" : 1,\r\n    \"successful\" : 1,\r\n    \"skipped\" : 0,\r\n    \"failed\" : 0\r\n  },\r\n  \"hits\" : {\r\n    \"total\" : {\r\n      \"value\" : 3,\r\n      \"relation\" : \"eq\"\r\n    },\r\n    \"max_score\" : 1.0,\r\n    \"hits\" : [\r\n      {\r\n        \"_index\" : \"keyword_bucketing_index\",\r\n        \"_type\" : \"_doc\",\r\n        \"_id\" : \"9DWUOXAB9vBCg04YTqRC\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"id\" : 1,\r\n          \"category_id\" : \"1353143788557567278\"\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"keyword_bucketing_index\",\r\n        \"_type\" : \"_doc\",\r\n        \"_id\" : \"fguUOXABJIXuaXqhVZPY\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"id\" : 2,\r\n          \"category_id\" : \"1353143788557567278\"\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"keyword_bucketing_index\",\r\n        \"_type\" : \"_doc\",\r\n        \"_id\" : \"gwuUOXABJIXuaXqhepNh\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"id\" : 3,\r\n          \"category_id\" : \"135314378855756999\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"aggregations\" : {\r\n    \"category\" : {\r\n      \"doc_count_error_upper_bound\" : 0,\r\n      \"sum_other_doc_count\" : 0,\r\n      \"buckets\" : [\r\n        {\r\n          \"key\" : \"1353143788557567278\",\r\n          \"doc_count\" : 2\r\n        },\r\n        {\r\n          \"key\" : \"135314378855756999\",\r\n          \"doc_count\" : 1\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAdditionally, attempting to do things such as `regex` in the `includes` filter for this aggregation does not work (as expected), however, the error message implies that any numeric type should work for the aggregation in general:\r\n\r\ni.e trying something such as:\r\n```\r\n  \"category\": {\r\n      \"terms\": {\r\n        \"field\": \"category_id\",\r\n        \"include\": [\r\n          \"1353*\"\r\n        ]\r\n      }\r\n    }\r\n```\r\nReturns the following error message:\r\n```\r\n\"root_cause\": [\r\n  {\r\n    \"type\": \"aggregation_execution_exception\",\r\n    \"reason\": \"Aggregation [category] cannot support \r\nregular expression style include/exclude \r\nsettings as they can only be applied to string fields. \r\nUse an array of numeric values for include/exclude clauses used to filter numeric fields\"\r\n  }\r\n],\r\n```\r\n\r\nI am happy to help contribute to docs with some guidance on what is best. To me this seems related to (but not the exact same) as:  #49538\r\n\r\n\r\n","closed_by":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"performed_via_github_app":null}