[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/171898805","html_url":"https://github.com/elastic/elasticsearch/issues/16010#issuecomment-171898805","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16010","id":171898805,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MTg5ODgwNQ==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2016-01-15T08:16:47Z","updated_at":"2016-01-15T08:16:47Z","author_association":"MEMBER","body":"I'm on the fence about returning all errors for misconfigured processors. I prefer to just fail immediately on the first pipeline construction error. This keeps the logic simple. I think that if there are several misconfigurations across multiple processors that having several put pipeline / simulate requests to fix the the pipeline is okay.\n\nI'm +1 on adding more structured information (like tag) to exception we throw so that it easy to figure out what processor has been misconfigured. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/171933938","html_url":"https://github.com/elastic/elasticsearch/issues/16010#issuecomment-171933938","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16010","id":171933938,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MTkzMzkzOA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-01-15T11:02:30Z","updated_at":"2016-01-15T11:02:30Z","author_association":"MEMBER","body":"I tend to agree with Martijn, let's do this at least in two steps: first make each single error better and descriptive, then see about cumulating errors, which can come later.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172011972","html_url":"https://github.com/elastic/elasticsearch/issues/16010#issuecomment-172011972","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16010","id":172011972,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjAxMTk3Mg==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2016-01-15T16:46:05Z","updated_at":"2016-01-15T16:46:05Z","author_association":"MEMBER","body":"Talked about this during the weekly meeting. There is some confusion because the ingest api does two things: create a temporary pipeline and simulate how documents are processed by this pipeline.\n\nWe agreed that we should do the following:\n- Errors that occur during pipeline construction should have more context. It should clear what the misconfigured processor is. This should be sufficient for anyone integrating with simulate api.\n- Processors that fail badly or with a meaningless error message should be addressed on a case by case basis via separate issues.\n\nOn the ingest side we should introduce a PipelineBuildException that encapsulate the context of the failure, so that both the simulate and put pipeline api can render helpful error messages.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172038898","html_url":"https://github.com/elastic/elasticsearch/issues/16010#issuecomment-172038898","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16010","id":172038898,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjAzODg5OA==","user":{"login":"Bargs","id":6239176,"node_id":"MDQ6VXNlcjYyMzkxNzY=","avatar_url":"https://avatars3.githubusercontent.com/u/6239176?v=4","gravatar_id":"","url":"https://api.github.com/users/Bargs","html_url":"https://github.com/Bargs","followers_url":"https://api.github.com/users/Bargs/followers","following_url":"https://api.github.com/users/Bargs/following{/other_user}","gists_url":"https://api.github.com/users/Bargs/gists{/gist_id}","starred_url":"https://api.github.com/users/Bargs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bargs/subscriptions","organizations_url":"https://api.github.com/users/Bargs/orgs","repos_url":"https://api.github.com/users/Bargs/repos","events_url":"https://api.github.com/users/Bargs/events{/privacy}","received_events_url":"https://api.github.com/users/Bargs/received_events","type":"User","site_admin":false},"created_at":"2016-01-15T18:06:56Z","updated_at":"2016-01-15T18:06:56Z","author_association":"NONE","body":"Is there currently any documentation for the structure of the error in the JSON response, and what type of errors each endpoint is capable of throwing? That might help us better understand the difference between pipeline build errors and document processing errors, and how we should handle each in Kibana.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172101176","html_url":"https://github.com/elastic/elasticsearch/issues/16010#issuecomment-172101176","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16010","id":172101176,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjEwMTE3Ng==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2016-01-15T21:37:30Z","updated_at":"2016-01-15T21:37:30Z","author_association":"CONTRIBUTOR","body":"@Bargs we are still working on beefing up the docs. I'll start writing docs for this now. the error structure that we speak of here is only for the `_simulate`. all other errors will just return an internal http error with an arbitrary exception that is thrown (this is processor dependent and would be documented on a per processor basis). \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172102098","html_url":"https://github.com/elastic/elasticsearch/issues/16010#issuecomment-172102098","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16010","id":172102098,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjEwMjA5OA==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2016-01-15T21:40:03Z","updated_at":"2016-01-15T21:40:03Z","author_association":"CONTRIBUTOR","body":"@martijnvg cool! sounds great. I agree with the two-phase approach that @javanna mentioned. Firstly, we'll set up a `PipelineBuildException` that will provide a more structured representation of the error. I'd imagine this would include structured fields for which field of the config caused the exception, as well as a processor tag, etc.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/174857365","html_url":"https://github.com/elastic/elasticsearch/issues/16010#issuecomment-174857365","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16010","id":174857365,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDg1NzM2NQ==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2016-01-26T06:37:18Z","updated_at":"2016-01-26T06:40:24Z","author_association":"CONTRIBUTOR","body":"I have started hacking on this here: https://github.com/talevy/elasticsearch/commit/2e351e0d97277b9ae45939f280050ecb72e357fd\n\nI have a very clear idea on how to finish up this commit now. just need to clean up some of the factory code for containing the error and pipeline object. then update `WritePipelineResponse` to reflect the new pipeline factory error response.\n\ndidn't get a chance to finish up my thought today, will continue and should finalize it tomorrow!\n\nI was a bit conflicted with where in the pipeline creation we should introduce the concept of `Result`s vs. keeping traditional java exception handling. I played around with pushing it down into the `doCreate` of Processor, but felt it was too soon. so I just pass along the information using `Exception` classes. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/175355254","html_url":"https://github.com/elastic/elasticsearch/issues/16010#issuecomment-175355254","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16010","id":175355254,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NTM1NTI1NA==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2016-01-27T02:41:56Z","updated_at":"2016-01-27T02:41:56Z","author_association":"CONTRIBUTOR","body":"I have updated this commit, it is super close I think.\n\nhttps://github.com/talevy/elasticsearch/commit/07c5981fe4959a7ee393a462cb8fb692b4cb8fa5\n\na few todos/questions\n- the objects holding the exception information are slightly flexible for my liking, and capture too much at times, I am open for changing them. It is just weird since sometimes pipeline errors are due to specific processor configuration fields, or they are general pipeline syntax issues. Mostly left that as a low-hanging-fruit todo item once all the transport/action layers are finalized.\n- finishing up the `_simulate` support for this structured response is still incomplete: https://github.com/talevy/elasticsearch/commit/07c5981fe4959a7ee393a462cb8fb692b4cb8fa5#diff-d88dde11b6d6c66bb9acd6bbe7fadecfR61 The idea is to re-use the error object as much as possible without dirtying up the simulation response code we already have\n- I have chosen to leave `WritePipelineResponse` as an `AcknowledgedResponse`, this makes the changes there pretty nice I think. All the previous code worked as is since this was the case. I simply override the `AcknowledgedRestListener` to appropriately add the additional structured error fields.\n\nStill slightly rough around the edges. I would love to hear what aspects of ES I am not leveraging and/or suggestions on how this strategy should be changed @martijnvg @javanna.\n\nthanks!\n","performed_via_github_app":null}]