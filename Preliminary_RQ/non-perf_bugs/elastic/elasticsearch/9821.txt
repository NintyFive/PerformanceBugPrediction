{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/9821","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9821/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9821/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9821/events","html_url":"https://github.com/elastic/elasticsearch/issues/9821","id":58590573,"node_id":"MDU6SXNzdWU1ODU5MDU3Mw==","number":9821,"title":"wrong type for bulk updates and deletes on closed index","user":{"login":"robx","id":132113,"node_id":"MDQ6VXNlcjEzMjExMw==","avatar_url":"https://avatars0.githubusercontent.com/u/132113?v=4","gravatar_id":"","url":"https://api.github.com/users/robx","html_url":"https://github.com/robx","followers_url":"https://api.github.com/users/robx/followers","following_url":"https://api.github.com/users/robx/following{/other_user}","gists_url":"https://api.github.com/users/robx/gists{/gist_id}","starred_url":"https://api.github.com/users/robx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robx/subscriptions","organizations_url":"https://api.github.com/users/robx/orgs","repos_url":"https://api.github.com/users/robx/repos","events_url":"https://api.github.com/users/robx/events{/privacy}","received_events_url":"https://api.github.com/users/robx/received_events","type":"User","site_admin":false},"labels":[{"id":145572580,"node_id":"MDU6TGFiZWwxNDU1NzI1ODA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/CRUD","name":":Distributed/CRUD","color":"0e8a16","default":false,"description":"A catch all label for issues around indexing, updating and getting a doc by id. Not search."},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":92913858,"node_id":"MDU6TGFiZWw5MjkxMzg1OA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/good%20first%20issue","name":"good first issue","color":"07569b","default":true,"description":"low hanging fruit"}],"state":"closed","locked":false,"assignee":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"assignees":[{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2015-02-23T14:15:53Z","updated_at":"2018-02-13T19:39:49Z","closed_at":"2015-07-07T07:29:30Z","author_association":"NONE","active_lock_reason":null,"body":"```\n$ curl -XDELETE localhost:9200/test; echo\n{\"error\":\"IndexMissingException[[test] missing]\",\"status\":404}\n$ curl -XPUT localhost:9200/test/test/1 -d '{\"title\": \"test document\"}'; echo\n{\"_index\":\"test\",\"_type\":\"test\",\"_id\":\"1\",\"_version\":1,\"created\":true}\n$ curl -XPOST localhost:9200/test/_close; echo\n{\"acknowledged\":true}\n$ curl -XPOST localhost:9200/_bulk -d '{\"update\" : {\"_index\": \"test\", \"_type\": \"type1\", \"_id\": \"1\"}}\n> {\"doc\": {\"field1\": \"value1\"}}\n> '; echo\n{\"took\":1,\"errors\":true,\"items\":[{\"index\":{\"_index\":\"test\",\"_type\":\"type1\",\"_id\":\"1\",\"status\":403,\"error\":\"IndexClosedException[[test] closed]\"}}]} \n```\n\nThe key should be `update` instead of `index`. Similar things happen for deletes. The fix against current master is trivial:\n\n```\ndiff --git a/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java b/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java\nindex 6e48349..ffd49df 100644\n--- a/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java\n+++ b/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java\n@@ -168,13 +168,13 @@ public class TransportBulkAction extends HandledTransportAction<BulkRequest, Bul\n         } else if (request instanceof DeleteRequest) {\n             DeleteRequest deleteRequest = (DeleteRequest) request;\n             if (index.equals(deleteRequest.index())) {\n-                responses.set(idx, new BulkItemResponse(idx, \"index\", new BulkItemResponse.Failure(deleteRequest.index(), deleteRequest.type(), deleteRequest.id(), e)));\n+                responses.set(idx, new BulkItemResponse(idx, \"delete\", new BulkItemResponse.Failure(deleteRequest.index(), deleteRequest.type(), deleteRequest.id(), e)));\n                 return true;\n             }\n         } else if (request instanceof UpdateRequest) {\n             UpdateRequest updateRequest = (UpdateRequest) request;\n             if (index.equals(updateRequest.index())) {\n-                responses.set(idx, new BulkItemResponse(idx, \"index\", new BulkItemResponse.Failure(updateRequest.index(), updateRequest.type(), updateRequest.id(), e)));\n+                responses.set(idx, new BulkItemResponse(idx, \"update\", new BulkItemResponse.Failure(updateRequest.index(), updateRequest.type(), updateRequest.id(), e)));\n                 return true;\n             }\n         } else {\n```\n\nHowever, why is the type reported at all? Is it allowed to differ? Could there be multiple responses to a single action?\n","closed_by":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"performed_via_github_app":null}