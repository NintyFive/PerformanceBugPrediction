[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/106573408","html_url":"https://github.com/elastic/elasticsearch/issues/11394#issuecomment-106573408","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11394","id":106573408,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNjU3MzQwOA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-05-28T19:28:25Z","updated_at":"2015-05-28T19:28:25Z","author_association":"CONTRIBUTOR","body":"hi @nickminutello \n\n(not a java dev but...)\n\nWhat you're asking for is back pressure, which is best implemented by indexing synchronously with multiple threads (it sounds like what you're doing today).  In fact, we're deprecating async indexing because it complicates other features that we're introducing (https://github.com/elastic/elasticsearch/pull/10642)\n\nIf Elasticsearch has to queue these requests up, it ends up consuming memory. That's the last thing you want to do on your server.  I think what you're doing already is correct.\n\n(repeat: not a java dev and apologies if i'm missing something)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/106578857","html_url":"https://github.com/elastic/elasticsearch/issues/11394#issuecomment-106578857","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11394","id":106578857,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNjU3ODg1Nw==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2015-05-28T19:53:41Z","updated_at":"2015-05-28T19:54:48Z","author_association":"CONTRIBUTOR","body":"> In fact, we're deprecating async indexing because it complicates other features that we're introducing (#10642)\n\nI just skimmed it but that looks like async replication not async indexing on the client, right?\n\n> What you're asking for is back pressure\n\n@nickminutello didn't ask for backpressure, but it'd be useful in this situation. If the inserting application could signal to the queueing application that it needs to slow down and maybe discard some data points, that'd be back pressure. Its really useful in the kind of real time systems I don't work on any more!\n\nI think this is the crux of the request:\n\n> the call blocks until it is queued rather than giving me an EsRejectedExecutionException\n\nWhich makes sense to me. java.util.concurrent doesn't have a caller blocks policy, annoyingly. So that is a pain. But it'd still be nice if the java api blocked instead of barfed on these. But you'd need to support some different exception signatures which is, I think, why Java doesn't do it by default.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/107581346","html_url":"https://github.com/elastic/elasticsearch/issues/11394#issuecomment-107581346","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11394","id":107581346,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNzU4MTM0Ng==","user":{"login":"nickminutello","id":298274,"node_id":"MDQ6VXNlcjI5ODI3NA==","avatar_url":"https://avatars1.githubusercontent.com/u/298274?v=4","gravatar_id":"","url":"https://api.github.com/users/nickminutello","html_url":"https://github.com/nickminutello","followers_url":"https://api.github.com/users/nickminutello/followers","following_url":"https://api.github.com/users/nickminutello/following{/other_user}","gists_url":"https://api.github.com/users/nickminutello/gists{/gist_id}","starred_url":"https://api.github.com/users/nickminutello/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickminutello/subscriptions","organizations_url":"https://api.github.com/users/nickminutello/orgs","repos_url":"https://api.github.com/users/nickminutello/repos","events_url":"https://api.github.com/users/nickminutello/events{/privacy}","received_events_url":"https://api.github.com/users/nickminutello/received_events","type":"User","site_admin":false},"created_at":"2015-06-01T15:25:13Z","updated_at":"2015-06-01T15:25:13Z","author_association":"NONE","body":"@nik9000 I presumed the caller blocking was a form of back-pressure.\nBut yes, some way of pushing back and making the async indexing client wait.\n\nIt doesnt have to even block, per se, it could just execute the request synchronously - which has the desired effect of pushing back on the client.\n\n@clintongormley I understand what you mean by memory consumption - blocking the caller implies keeping the request in memory, however that memory consumption would be proportional to the number of indexing client threads, so in most cases, that will be naturally bounded.\n\nIt just seems a bit of a shame to have another level of threadpool on the client to achieve asynchronicity - when elastic natively handles 90% of the problem - async indexing, with bounded queue, etc but only 1 policy for dealing with queue over-capacity.\nIf the indexing client code is quite simple (which in my case it is) then adding thread-pooling, etc is a big delta in complexity.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172634578","html_url":"https://github.com/elastic/elasticsearch/issues/11394#issuecomment-172634578","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11394","id":172634578,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjYzNDU3OA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-01-18T19:55:15Z","updated_at":"2016-01-18T19:55:15Z","author_association":"CONTRIBUTOR","body":"We've removed async indexing in order to be able to support synced flushes, so I'm going to close this ticket.\n","performed_via_github_app":null}]