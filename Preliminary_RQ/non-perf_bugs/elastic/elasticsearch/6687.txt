{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/6687","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6687/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6687/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6687/events","html_url":"https://github.com/elastic/elasticsearch/issues/6687","id":36989537,"node_id":"MDU6SXNzdWUzNjk4OTUzNw==","number":6687,"title":"Simplifying JSON API in 2.0+","user":{"login":"andrewgross","id":370118,"node_id":"MDQ6VXNlcjM3MDExOA==","avatar_url":"https://avatars1.githubusercontent.com/u/370118?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewgross","html_url":"https://github.com/andrewgross","followers_url":"https://api.github.com/users/andrewgross/followers","following_url":"https://api.github.com/users/andrewgross/following{/other_user}","gists_url":"https://api.github.com/users/andrewgross/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewgross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewgross/subscriptions","organizations_url":"https://api.github.com/users/andrewgross/orgs","repos_url":"https://api.github.com/users/andrewgross/repos","events_url":"https://api.github.com/users/andrewgross/events{/privacy}","received_events_url":"https://api.github.com/users/andrewgross/received_events","type":"User","site_admin":false},"labels":[{"id":110557212,"node_id":"MDU6TGFiZWwxMTA1NTcyMTI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/high%20hanging%20fruit","name":"high hanging fruit","color":"fc6149","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"assignees":[{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2014-07-02T14:50:25Z","updated_at":"2015-11-21T15:35:19Z","closed_at":"2015-11-21T15:35:19Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"_Note:  This is a rehash of my [mailing list post](https://groups.google.com/forum/#!topic/elasticsearch/Md3nOZ89eoU) which didn't seem to generate any discussion.  I wanted to bring it over here in hopes of finding the right audience._\n\nI was curious if there were any plans to update or modify the JSON query API in ES 2.0+?\n\nWhile I find the API to very powerful, it is confusing to construct a valid request and requires special casing a lot of rules.  I have some thoughts below on what I see as the current issues, and some suggestions to correct them.  I don't intend for this to be a rant, just to provoke discussion.  This is done purely from the point of view of constructing queries (not parsing them), and only for the JSON DSL query syntax for searching (not percolate or aggregators).\n\nIt is currently hard to construct small parts of a JSON query without knowing all of the elements involved. Looking at a simple query and a filtered query:\n\nSimple Query:\n\n``` json\n{\n    \"query\": {\n        \"match_all\": {}\n    }\n}\n```\n\nFiltered Query:\n\n``` json\n{\n  \"query\": {\n    \"filtered\": {\n      \"filter\": {\n        \"and\": [\n          {\n            \"term\": {\n              \"foo\": \"bar\"\n            }\n          }\n        ]\n      },\n      \"query\": {\n        \"match_all\": {}\n      }\n    }\n  }\n}\n```\n\nWe see the syntax tree change so that the initial 'query' becomes nested and the root of the tree changes.  Once we add a scoring function, it morphs even further.\n\nScored Query:\n\n``` json\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"filtered\": {\n          \"filter\": {\n            \"and\": [\n              {\n                \"term\": {\n                  \"foo\": \"bar\"\n                }\n              }\n            ]\n          },\n          \"query\": {\n            \"match_all\": {}\n          }\n        }\n      },\n      \"script_score\": {\n        \"script\": \"result = 0.0 + 1.0;\"\n      },\n      \"boost_mode\": \"replace\"\n    }\n  }\n}\n```\n\nThis follows some of the same rules (nested inside a new scope), however, not all of the changes get placed together.  We have both a 'script_score' block and a 'boost_mode' section.  This means that when I want to add scoring to my query I need to know my scoring block as well as the rest of the query tree so that I can properly place 'boost_mode'. \n\nA simple(r) example.  In a simple scored query, if I want to modify my 'match_all' block, my path becomes\n`\"query\" -> \"function_score\" -> \"query\"`\n\nOnce I add filtering to the query, the path changes, causing a broken query if I insert in the old location.\n`\"query\" -> \"function_score\" -> \"query\" -> \"filtered\" -> \"query\"`\n\nIt would be much simpler if I could define my scoring block, and throw it in to a query at a static path without worrying what else is in the query.  This case is a simple illustration, but the JSON query DSL contains many instances, especially around cases like 'scoring' where using a single scoring block vs. multiple scoring functions radically changes the structure of the scoring section.\n\nI understand that this was designed iteratively, and that the syntax will not be perfect of both parsing and construction.  Now that the JSON query DSL seems to have a stable set of elements, it would be useful to set it up so that it can be written in a simple manner.  A few considerations:\n1. When adding an element such as scoring, have it only modify elements below it in the tree (aside from its initial insertion point)\n2. Keep the root of the tree static and have the existence of a top level key modify behavior, instead of needing change the nesting of elements. \n3. Somehow stop nesting the term \"query\" all over the place, definitely the most confusing thing for new users in my experience. =D\n\nHere is a proposed top level DSL example.  It's incomplete and probably missing some things but useful as an illustration:\n\n``` json\n{\n  \"filter\": {\n    \"and\": [\n      {\n        \"term\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"query\": {\n    \"match_all\": {}\n  },\n  \"scoring\": {\n      \"script_score\": {\n        \"script\": \"result = 0.0 + 1.0;\"\n      },\n      \"boost_mode\": \"replace\"\n  },\n  \"sort\": [\n    {\n      \"foo\": {\n        \"order\": \"desc\",\n        \"mode\": \"average\"\n      }\n    }\n  ]\n}\n```\n\nThanks for reading over this.  I was unable to find a roadmap for prospective features, so if there are already plans to work on this feel free to disregard my comments.\n\nThanks,\nAndrew\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}