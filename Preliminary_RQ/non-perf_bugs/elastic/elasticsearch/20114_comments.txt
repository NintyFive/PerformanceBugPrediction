[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241728298","html_url":"https://github.com/elastic/elasticsearch/issues/20114#issuecomment-241728298","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20114","id":241728298,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTcyODI5OA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-08-23T13:23:05Z","updated_at":"2016-08-23T13:23:05Z","author_association":"CONTRIBUTOR","body":"Hi @theely \n\nThe long GC messages make me think that you are swapping heap to disk.  Please see the documentation, and ask questions like these in the forum instead: https://discuss.elastic.co/\n\nThe github issues list is reserved for bug reports and feature requests only.\n\nthanks\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241749869","html_url":"https://github.com/elastic/elasticsearch/issues/20114#issuecomment-241749869","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20114","id":241749869,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTc0OTg2OQ==","user":{"login":"theely","id":2025999,"node_id":"MDQ6VXNlcjIwMjU5OTk=","avatar_url":"https://avatars2.githubusercontent.com/u/2025999?v=4","gravatar_id":"","url":"https://api.github.com/users/theely","html_url":"https://github.com/theely","followers_url":"https://api.github.com/users/theely/followers","following_url":"https://api.github.com/users/theely/following{/other_user}","gists_url":"https://api.github.com/users/theely/gists{/gist_id}","starred_url":"https://api.github.com/users/theely/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theely/subscriptions","organizations_url":"https://api.github.com/users/theely/orgs","repos_url":"https://api.github.com/users/theely/repos","events_url":"https://api.github.com/users/theely/events{/privacy}","received_events_url":"https://api.github.com/users/theely/received_events","type":"User","site_admin":false},"created_at":"2016-08-23T14:30:03Z","updated_at":"2016-08-23T14:30:03Z","author_association":"NONE","body":"Hi @clintongormley \nThanks for the quick reply, I don't believe it is a swapping problem ES is running with the `bootstrap.mlockall: true` option as indicated by the documentation: https://www.elastic.co/guide/en/elasticsearch/guide/current/heap-sizing.html\nAlso if the issue would be some miss configuration why would it happen only if the node is running as master? And way does it affect only one node, they both share the same config?\n\nI am writing here and not in the forum because to me this looks like some kind of memory leak, or some bug that under certain circumstances is eating up a lot of memory very quickly.\nAnyway I am going to open a forum discussion as well and reporting back here if needed.\n\nThanks\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241788389","html_url":"https://github.com/elastic/elasticsearch/issues/20114#issuecomment-241788389","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20114","id":241788389,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTc4ODM4OQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-08-23T16:16:30Z","updated_at":"2016-08-23T16:16:30Z","author_association":"CONTRIBUTOR","body":"hi @theely - sorry you're right, i read too quickly. Have you tried dumping the heap on the master and seeing what is using all of the memory?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241788634","html_url":"https://github.com/elastic/elasticsearch/issues/20114#issuecomment-241788634","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20114","id":241788634,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTc4ODYzNA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-08-23T16:17:12Z","updated_at":"2016-08-23T16:17:12Z","author_association":"CONTRIBUTOR","body":"Even just a nodes stats request when memory is full may be revealing\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241941306","html_url":"https://github.com/elastic/elasticsearch/issues/20114#issuecomment-241941306","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20114","id":241941306,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTk0MTMwNg==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2016-08-24T02:36:28Z","updated_at":"2016-08-24T02:36:28Z","author_association":"MEMBER","body":"> Official Docker ES Image 2.3.5\n\nPerhaps you already know this, but I say this for general benefit because there is a lot of confusion on this issue: at this time there is not an official Elasticsearch image. That is, there is no Docker image that claims to be \"official\" that is affiliated with Elastic.\n\nRegarding your issue, do you have a lot of churn in your cluster state? Can you get a heap dump immediately before a full GC (you can't use a standard tool for this, they usually trigger a full GC and then take the heap dump; instead run `jinfo  -flag  +HeapDumpBeforeFullGC  <PID>` and don't forget to disable it with `jinfo  -flag  +HeapDumpBeforeFullGC  <PID>`after the heap dump that is produced immediately proceeding the next full GC).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/242909484","html_url":"https://github.com/elastic/elasticsearch/issues/20114#issuecomment-242909484","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20114","id":242909484,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MjkwOTQ4NA==","user":{"login":"theely","id":2025999,"node_id":"MDQ6VXNlcjIwMjU5OTk=","avatar_url":"https://avatars2.githubusercontent.com/u/2025999?v=4","gravatar_id":"","url":"https://api.github.com/users/theely","html_url":"https://github.com/theely","followers_url":"https://api.github.com/users/theely/followers","following_url":"https://api.github.com/users/theely/following{/other_user}","gists_url":"https://api.github.com/users/theely/gists{/gist_id}","starred_url":"https://api.github.com/users/theely/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theely/subscriptions","organizations_url":"https://api.github.com/users/theely/orgs","repos_url":"https://api.github.com/users/theely/repos","events_url":"https://api.github.com/users/theely/events{/privacy}","received_events_url":"https://api.github.com/users/theely/received_events","type":"User","site_admin":false},"created_at":"2016-08-27T10:30:39Z","updated_at":"2016-08-27T10:30:39Z","author_association":"NONE","body":"Hi there,\nI am having some troubles in providing you with the memory dump. Firstly I have problems in replicating the issue on the node, expect for the disk space nothing has changed since I reported the issue. However the node elastic2 is now running as master for several days and the described memory issue has still not manifested himself.\nThe second problem is that jinfo or jmap binaries are not installed on the Docker image I am using since it is based on openJDK 8 **JRE**. I tried to manually copy the missing binaries from the JDK of the same openJDK version but that wont work (it can not locate the java runtime). Alternatively I could modify the Docker image to install the JDK instead of the JRE but I am afraid this will jeopardize the issue reproducibility. Alternatively I could try to enable JMX and remotely dumping the heap.\n\nAny thoughts on how I could proceed?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244061568","html_url":"https://github.com/elastic/elasticsearch/issues/20114#issuecomment-244061568","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20114","id":244061568,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDA2MTU2OA==","user":{"login":"theely","id":2025999,"node_id":"MDQ6VXNlcjIwMjU5OTk=","avatar_url":"https://avatars2.githubusercontent.com/u/2025999?v=4","gravatar_id":"","url":"https://api.github.com/users/theely","html_url":"https://github.com/theely","followers_url":"https://api.github.com/users/theely/followers","following_url":"https://api.github.com/users/theely/following{/other_user}","gists_url":"https://api.github.com/users/theely/gists{/gist_id}","starred_url":"https://api.github.com/users/theely/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theely/subscriptions","organizations_url":"https://api.github.com/users/theely/orgs","repos_url":"https://api.github.com/users/theely/repos","events_url":"https://api.github.com/users/theely/events{/privacy}","received_events_url":"https://api.github.com/users/theely/received_events","type":"User","site_admin":false},"created_at":"2016-09-01T12:19:55Z","updated_at":"2016-09-01T12:19:55Z","author_association":"NONE","body":"@clintongormley Looks like we were able to replicate the issue and we may also have isolated the problem. The node enters in a faulty behaviour under heavy usage of the following update script:\n\n```\npublic long updateLastVisit(String hostname, BaseSource source) {\n\n        String lastVisit = dateFormatter.format(new Date());\n        //This script iterates trough all sources of a website and \n        //updates the lastVisit field of the specific source.\n        Script updateSource = new Script(\"ctx._source['lastUpdate']='\" + lastVisit + \"' \\n \" +\n                \"ctx._source.sources = ctx._source.sources.each({ \" +\n                \"item -> if (item['url'] == '\" + source.getUrl() + \"') { \" +\n                \"item['lastVisit'] = '\" + lastVisit +\n                \"'}\" +\n                \"})\");\n\n        Client client;\n        client = ElasticsearchPoolUtil.getInstance().getClient();\n        try {\n\n            UpdateRequest updateRequest = new UpdateRequest();\n            updateRequest.index(\"newsriver-website\")\n                    .type(\"website\")\n                    .id(hostname)\n                    .script(updateSource)\n                    .retryOnConflict(3);\n\n\n            return client.update(updateRequest).get().getVersion();\n\n        } catch (ExecutionException e) {\n            logger.error(\"Unable to update website source\", e);\n        } catch (InterruptedException e) {\n            logger.error(\"Unable to update website source\", e);\n        }\n        return -1;\n    }\n```\n\nIs it possible that this script is causing the issue? It is executed concurrently several times per second.\n\nIn the mean time we are extending the Docker image to use the Java 8 JDK (see previous comment) hoping to retrieve a heap dump soon.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244370563","html_url":"https://github.com/elastic/elasticsearch/issues/20114#issuecomment-244370563","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20114","id":244370563,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDM3MDU2Mw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2016-09-02T13:11:01Z","updated_at":"2016-09-02T13:11:01Z","author_association":"MEMBER","body":"@theely It looks like you might not be returning the `client` to the pool or am I misunderstanding your script?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244372699","html_url":"https://github.com/elastic/elasticsearch/issues/20114#issuecomment-244372699","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20114","id":244372699,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDM3MjY5OQ==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2016-09-02T13:20:41Z","updated_at":"2016-09-02T13:20:41Z","author_association":"MEMBER","body":"You could also use script parameters so that the script will be compiled once and then cached and reused. \n\nIn the current state it is compiled every time source & lastVisit changed (every time this code runs). The compilation produces many objects that need to be garbage collected and the fact that the script changed at almost every execution put a lot of pressure on the script cache.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244376349","html_url":"https://github.com/elastic/elasticsearch/issues/20114#issuecomment-244376349","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20114","id":244376349,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDM3NjM0OQ==","user":{"login":"theely","id":2025999,"node_id":"MDQ6VXNlcjIwMjU5OTk=","avatar_url":"https://avatars2.githubusercontent.com/u/2025999?v=4","gravatar_id":"","url":"https://api.github.com/users/theely","html_url":"https://github.com/theely","followers_url":"https://api.github.com/users/theely/followers","following_url":"https://api.github.com/users/theely/following{/other_user}","gists_url":"https://api.github.com/users/theely/gists{/gist_id}","starred_url":"https://api.github.com/users/theely/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theely/subscriptions","organizations_url":"https://api.github.com/users/theely/orgs","repos_url":"https://api.github.com/users/theely/repos","events_url":"https://api.github.com/users/theely/events{/privacy}","received_events_url":"https://api.github.com/users/theely/received_events","type":"User","site_admin":false},"created_at":"2016-09-02T13:35:18Z","updated_at":"2016-09-02T13:35:18Z","author_association":"NONE","body":"@jasontedor No the class name ElasticsearchPoolUtil  is misleading, in fact getClient() is sharing a singleton instance of a ES's Client object. If I am not mistaken this is the suggested approach, since the ES Client is thread safe.\n\nWe are testing a slight variation of the script that is updating the nested objects using a for loop instead of the .each() method.\n\n```\n Script updateSource = new Script(\"ctx._source['lastUpdate']='\" + lastVisit + \"' \\n \" +\n                \"for (item in ctx._source.sources) {\" +\n                    \"if (item['url'] == '\" + source.getUrl() + \"') { \" +\n                       \"item['lastVisit'] = '\" + lastVisit +\n                   \"'}\" +\n                \"}\");\n```\n\n![screen shot 2016-09-02 at 15 25 10](https://cloud.githubusercontent.com/assets/2025999/18205323/b1bc95ea-7121-11e6-97c4-41e0950038d1.png)\n\nThe new script started at 14h20 and beside a load increase on the machines (witch was expected, previously we disabled the old script) the nodes are quite stable.\n\nIs it possible that the issue was related to the usage of the .each() method? Is there any issue using lambdas?\n\n@tlrx I see I was not aware of it, I thought Groovy was fully interpreted. I will try it right away and post performance results.\n\nI am actually not even sure we are supposed to make such an heavy use of nested object update method (via script)? The documentation concerning nested objects (https://www.elastic.co/guide/en/elasticsearch/guide/current/nested-objects.html) is not covering the update topic.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244378464","html_url":"https://github.com/elastic/elasticsearch/issues/20114#issuecomment-244378464","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20114","id":244378464,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDM3ODQ2NA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2016-09-02T13:43:36Z","updated_at":"2016-09-02T13:43:36Z","author_association":"MEMBER","body":"> No the class name ElasticsearchPoolUtil is misleading, in fact getClient() is sharing a singleton instance of a ES's Client object. If I am not mistaken this is the suggested approach, since the ES Client is thread safe.\n\nYou should definitely rename that class as it's terribly misleading. :cry: The clients that we provide are thread-safe so your usage is fine then.\n\nI think then that your issue is the issue that @tlrx pointed out.\n\n> I see I was not aware of it, I thought Groovy was fully interpreted.\n\nNo, it gets compiled to bytecode at runtime.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244393059","html_url":"https://github.com/elastic/elasticsearch/issues/20114#issuecomment-244393059","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20114","id":244393059,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDM5MzA1OQ==","user":{"login":"theely","id":2025999,"node_id":"MDQ6VXNlcjIwMjU5OTk=","avatar_url":"https://avatars2.githubusercontent.com/u/2025999?v=4","gravatar_id":"","url":"https://api.github.com/users/theely","html_url":"https://github.com/theely","followers_url":"https://api.github.com/users/theely/followers","following_url":"https://api.github.com/users/theely/following{/other_user}","gists_url":"https://api.github.com/users/theely/gists{/gist_id}","starred_url":"https://api.github.com/users/theely/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theely/subscriptions","organizations_url":"https://api.github.com/users/theely/orgs","repos_url":"https://api.github.com/users/theely/repos","events_url":"https://api.github.com/users/theely/events{/privacy}","received_events_url":"https://api.github.com/users/theely/received_events","type":"User","site_admin":false},"created_at":"2016-09-02T14:37:32Z","updated_at":"2016-09-02T14:37:32Z","author_association":"NONE","body":"@jasontedor, @clintongormley Indeed looks like the issue was caused by the problem @tlrx pointed out.\nMy explanation is that by doing high usage of the Update API and using a script with \"embedded\" parameters ES **was quickly filling the heap with thousands of compiled groovy scripts instances**. After deploying the new script version that makes proper use of the parameters (shame on me 😅) the heap is stable and no longer growing (see picture).\n![screen shot 2016-09-02 at 16 28 43](https://cloud.githubusercontent.com/assets/2025999/18207286/d2faea5a-712a-11e6-9d6e-be617cf8b9de.png)\n\nI suppose the script cash has no size limit. I am wondering if it should be limited? For instance a portion of the heap. What was killing the node was the GC that needed more than 10s to clean up the heap. Alternatively we  could limit the number of cached scripts instances, does it make sense to cache thousands of scripts? I guess that if so many scripts need to be cached it is most probably a symptom of an error (like my case).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244394517","html_url":"https://github.com/elastic/elasticsearch/issues/20114#issuecomment-244394517","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20114","id":244394517,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDM5NDUxNw==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2016-09-02T14:42:38Z","updated_at":"2016-09-02T14:43:24Z","author_association":"MEMBER","body":"> I suppose the script cash has no size limit. I am wondering if it should be limited?\n\nAs far as I remember the script cache is limited to 100 scripts. Once reached, every new script evicts the oldest one. This is what I meant by \"putting pressure on the cache\". The number of class/objects created by Groovy is difficult to contain (note: it creates classes for closure/lambdas too) but in newer version of Elasticsearch (see #19694) we added script compilation circuit breaker to avoid too many scripts to be compiled per minute.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244394523","html_url":"https://github.com/elastic/elasticsearch/issues/20114#issuecomment-244394523","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20114","id":244394523,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDM5NDUyMw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-09-02T14:42:39Z","updated_at":"2016-09-02T14:42:39Z","author_association":"CONTRIBUTOR","body":"thanks for letting us know @theely \n\nbtw, we've added a circuit breaker in 5.0 which would have caught this issue: https://github.com/elastic/elasticsearch/pull/19694\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244538027","html_url":"https://github.com/elastic/elasticsearch/issues/20114#issuecomment-244538027","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20114","id":244538027,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDUzODAyNw==","user":{"login":"theely","id":2025999,"node_id":"MDQ6VXNlcjIwMjU5OTk=","avatar_url":"https://avatars2.githubusercontent.com/u/2025999?v=4","gravatar_id":"","url":"https://api.github.com/users/theely","html_url":"https://github.com/theely","followers_url":"https://api.github.com/users/theely/followers","following_url":"https://api.github.com/users/theely/following{/other_user}","gists_url":"https://api.github.com/users/theely/gists{/gist_id}","starred_url":"https://api.github.com/users/theely/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theely/subscriptions","organizations_url":"https://api.github.com/users/theely/orgs","repos_url":"https://api.github.com/users/theely/repos","events_url":"https://api.github.com/users/theely/events{/privacy}","received_events_url":"https://api.github.com/users/theely/received_events","type":"User","site_admin":false},"created_at":"2016-09-03T10:01:09Z","updated_at":"2016-09-03T10:01:09Z","author_association":"NONE","body":"@clintongormley and @tlrx I am not sure circuit breaker will solve the issue. I am afraid it will only mitigate it and make it harder to debug. In this case the issue has been easily discovered since many scripts were compiled per second. But in a different scenario let say a new script per minute gets compiled or even less the circuit breaker will not prevent the script cache and the heap to grow. Eventually at some point the GC will still need to free the memory from the compiled groovy scripts.\n\n**My fear is that compiled groovy script are too heavy and complex objects structures to be saved in memory without special precautions.** \n\nThis because even with a cache limit of only 100 scripts in my case this has not prevented the heap to be fully filled. Because the GC decided to keep the unreferenced objects in memory till the heap size reached its maximum allowed size. Then however the GC needed an enormous amount of time to free the memory from such heavy objects. And it would have been even worst if I would have assigned more memory to the nodes.\n\nI would propose the following amendment:\n1. Add some logging when the script cache limit is reached. This should alert the developer that something wrong is going on.\n2. Handle compiled groovy script with extra care, for example caching them as SoftReferences and tuning the GC with -XX:SoftRefLRUPolicyMSPerMB=2500 or by explicitly calling the GC after avery script evacuation.\n\nDo feel this is something that would make sense to elaborate further? I could try to come up with some suggestions and open a pull requests.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/244679095","html_url":"https://github.com/elastic/elasticsearch/issues/20114#issuecomment-244679095","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20114","id":244679095,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDY3OTA5NQ==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2016-09-05T07:43:16Z","updated_at":"2016-09-05T07:43:16Z","author_association":"MEMBER","body":"I agree, the circuit breaker won't resolve the issue but in the case of Groovy it will prevent to create too many objects in a short time frame and then remove pressure on both cache and heap.\n\n> My fear is that compiled groovy script are too heavy and complex objects structures to be saved in memory without special precautions.\n\nI agree too, Groovy scripts can lead to many object/class creation. In your case you may be interested in moving to Native scripts or Painless.\n\n> Add some logging when the script cache limit is reached. This should alert the developer that something wrong is going on.\n\nI don't see a full cache as an issue. What concerns me is the fact to compile a lot of short living scripts that cause cache misses and cache eviction. Those are reported through the statistics API but maybe we could monitor and warn on too many cache eviction or misses?\n\n> Handle compiled groovy script with extra care, for example caching them as SoftReferences and tuning the GC with -XX:SoftRefLRUPolicyMSPerMB=2500 or by explicitly calling the GC after avery script evacuation.\n\nI don't think this is something we'd like to investigate as a default setting. This has a big impact on how object are managed in the JVM and can have consequence in other place we use (or will use) SoftReference. Same thing for explicit GC calls, this may just hang the JVM.\n\n> Do feel this is something that would make sense to elaborate further? I could try to come up with some suggestions and open a pull requests.\n\nYour suggestion for better warning message sounds appealing to me :) Point 2) seems too tricky and too dangerous to correctly implement so I'd say that it don't worth the trouble... But that's just my point of view so maybe you can wait for other opinion.\n","performed_via_github_app":null}]