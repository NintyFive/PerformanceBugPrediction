{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/19857","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19857/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19857/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19857/events","html_url":"https://github.com/elastic/elasticsearch/issues/19857","id":169897127,"node_id":"MDU6SXNzdWUxNjk4OTcxMjc=","number":19857,"title":"Update API doesn't work anymore when index is not created yet","user":{"login":"mouadino","id":1884531,"node_id":"MDQ6VXNlcjE4ODQ1MzE=","avatar_url":"https://avatars0.githubusercontent.com/u/1884531?v=4","gravatar_id":"","url":"https://api.github.com/users/mouadino","html_url":"https://github.com/mouadino","followers_url":"https://api.github.com/users/mouadino/followers","following_url":"https://api.github.com/users/mouadino/following{/other_user}","gists_url":"https://api.github.com/users/mouadino/gists{/gist_id}","starred_url":"https://api.github.com/users/mouadino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouadino/subscriptions","organizations_url":"https://api.github.com/users/mouadino/orgs","repos_url":"https://api.github.com/users/mouadino/repos","events_url":"https://api.github.com/users/mouadino/events{/privacy}","received_events_url":"https://api.github.com/users/mouadino/received_events","type":"User","site_admin":false},"labels":[{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-08-08T11:03:47Z","updated_at":"2016-08-18T10:53:36Z","closed_at":"2016-08-18T10:53:36Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\nGitHub is reserved for bug reports and feature requests. The best place\nto ask a general question is at the Elastic Discourse forums at\nhttps://discuss.elastic.co. If you are in fact posting a bug report or\na feature request, please include one and only one of the below blocks\nin your new issue. Note that whether you're filing a bug report or a\nfeature request, ensure that your submission is for an\n[OS that we support](https://www.elastic.co/support/matrix#show_os).\nBug reports on an OS that we do not support or feature requests\nspecific to an OS that we do not support will be closed.\n-->\n\n<!--\nIf you are filing a bug report, please remove the below feature\nrequest block and provide responses for all of the below items.\n-->\n\n**Elasticsearch version**: 2.3.3 and 2.1.1\n\n**Plugins installed**: []\n\n**JVM version**: 1.8.0_92\n\n**OS version**: OS X El Capitan 10.11.5\n\n**Description of the problem including expected versus actual behavior**:\n\nWhen migrating an Elasticsearch cluster from 2.1.1 to 2.3.3, a previously working code started to failing and I looked to https://www.elastic.co/guide/en/elasticsearch/reference/current/breaking-changes-2.3.html trying to make sense of the failure sadly didn't see any mention of the change so I am unsure whether this is a regression bug or documentation issue.\n\nThe problem that I am referring to is when using the update API, which we use to do upsert of documents which works okay in  2.1.1 when index is not created already (given that `action.auto_create_index: true`) but fail with 2.3.3 with same configuration complaining that index was not found.\n\n**Steps to reproduce**:\n1. Using 2.3.3 run `curl -XPOST http://localhost:9200/index/doc_type/1/_update -d '{\"doc\": {\"name\" : \"test\"}, \"doc_as_upsert\": true}'`\n2. Using 2.1.1 try same query as before.\n\nWith 2.3.3 you get:\n\n```\n{\"error\":{\"root_cause\":[{\"type\":\"index_not_found_exception\",\"reason\":\"no such index\",\"resource.type\":\"index_expression\",\"resource.id\":\"...\",\"index\":\"...\"}],\"type\":\"index_not_found_exception\",\"reason\":\"no such index\",\"resource.type\":\"index_expression\",\"resource.id\":\"...\",\"index\":\"...\"},\"status\":404}\n```\n\nWith 2.1.1 it works as expected.\n\n**Provide logs (if relevant)**:\n\n```\n[dummy-index] IndexNotFoundException[no such index]\n    at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:151)\n    at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:95)\n    at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteSingleIndex(IndexNameExpressionResolver.java:208)\n    at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction$AsyncSingleAction.doStart(TransportInstanceSingleOperationAction.java:138)\n    at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction$AsyncSingleAction.start(TransportInstanceSingleOperationAction.java:123)\n    at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction.doExecute(TransportInstanceSingleOperationAction.java:73)\n    at org.elasticsearch.action.update.TransportUpdateAction.innerExecute(TransportUpdateAction.java:147)\n    at org.elasticsearch.action.update.TransportUpdateAction.doExecute(TransportUpdateAction.java:142)\n    at org.elasticsearch.action.update.TransportUpdateAction.doExecute(TransportUpdateAction.java:66)\n    at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:149)\n    at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:137)\n    at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:85)\n    at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:58)\n    at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:359)\n    at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:52)\n    at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:83)\n    at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:359)\n    at org.elasticsearch.client.support.AbstractClient.update(AbstractClient.java:396)\n    at org.elasticsearch.rest.action.update.RestUpdateAction.handleRequest(RestUpdateAction.java:126)\n    at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:54)\n    at org.elasticsearch.rest.RestController.executeHandler(RestController.java:205)\n    at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:166)\n    at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:128)\n    at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:86)\n    at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:449)\n    at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:61)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:60)\n    at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)\n    at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:194)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:135)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)\n    at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)\n    at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)\n    at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:75)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)\n    at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)\n    at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)\n    at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)\n    at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)\n    at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)\n    at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\n    at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n```\n\n<!--\nIf you are filing a feature request, please remove the above bug\nreport block and provide responses for all of the below items.\n-->\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}