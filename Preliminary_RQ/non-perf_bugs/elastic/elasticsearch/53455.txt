{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/53455","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53455/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53455/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/53455/events","html_url":"https://github.com/elastic/elasticsearch/issues/53455","id":579774366,"node_id":"MDU6SXNzdWU1Nzk3NzQzNjY=","number":53455,"title":"AddVotingConfigExclusionsAction not honoring max_voting_config_exclusions value from yml","user":{"login":"shwetathareja","id":2943091,"node_id":"MDQ6VXNlcjI5NDMwOTE=","avatar_url":"https://avatars3.githubusercontent.com/u/2943091?v=4","gravatar_id":"","url":"https://api.github.com/users/shwetathareja","html_url":"https://github.com/shwetathareja","followers_url":"https://api.github.com/users/shwetathareja/followers","following_url":"https://api.github.com/users/shwetathareja/following{/other_user}","gists_url":"https://api.github.com/users/shwetathareja/gists{/gist_id}","starred_url":"https://api.github.com/users/shwetathareja/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shwetathareja/subscriptions","organizations_url":"https://api.github.com/users/shwetathareja/orgs","repos_url":"https://api.github.com/users/shwetathareja/repos","events_url":"https://api.github.com/users/shwetathareja/events{/privacy}","received_events_url":"https://api.github.com/users/shwetathareja/received_events","type":"User","site_admin":false},"labels":[{"id":881394071,"node_id":"MDU6TGFiZWw4ODEzOTQwNzE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Cluster%20Coordination","name":":Distributed/Cluster Coordination","color":"0e8a16","default":false,"description":"Cluster formation and cluster state publication, including cluster membership and fault detection."},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"assignees":[{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2020-03-12T08:33:28Z","updated_at":"2020-03-23T08:36:10Z","closed_at":"2020-03-23T08:36:10Z","author_association":"NONE","active_lock_reason":null,"body":"\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 7.1, 7.6\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nmax_voting_config_exclusions setting is NodeScope but yml value is **not** honored in the TransportAddVotingConfigExclusionsAction and uses default value as 10 (in case persistent/ transient setting is not set)\r\n\r\n```\r\npublic static final Setting<Integer> MAXIMUM_VOTING_CONFIG_EXCLUSIONS_SETTING\r\n        = Setting.intSetting(\"cluster.max_voting_config_exclusions\", 10, 1, Property.Dynamic, Property.NodeScope);\r\n```\r\n\r\nThe reason for that TransportAddVotingConfigExclusionsAction is getting the settings object from cluster state metadata which is constructed using only persistant & transient setting and doesn't have the settings object which is created in Node.java using the yml file.\r\n\r\n```\r\nreturn request.resolveVotingConfigExclusionsAndCheckMaximum(state,\r\n            MAXIMUM_VOTING_CONFIG_EXCLUSIONS_SETTING.get(state.metaData().settings()), MAXIMUM_VOTING_CONFIG_EXCLUSIONS_SETTING.getKey());\r\n```\r\n\r\nfrom MetaData class constructor\r\n`this.settings = Settings.builder().put(persistentSettings).put(transientSettings).build();`\r\n\r\n**Fix:**\r\nTransportAddVotingConfigExclusionsAction should have access to settings object constructed from yml and then applying persistent/ transient settings.\r\n\r\n**Steps to reproduce**:\r\n\r\n ```\r\n1. Update the yml with cluster.max_voting_config_exclusions set to 50\r\n 2. Verified, 50 is picked from yml - curl \"localhost:9200/_cluster/settings?pretty&include_defaults\"\r\n{\r\n  \"persistent\" : { },\r\n  \"transient\" : { },\r\n  \"defaults\" : {\r\n    \"cluster\" : {\r\n      \"max_voting_config_exclusions\" : \"50\",\r\n      \"auto_shrink_voting_configuration\" : \"true\",\r\n.....\r\n 3.  Try adding voting exclusion as - curl -X POST \"localhost:9200/_cluster/voting_config_exclusions/attrib1:val1?pretty\"\r\n{\r\n  \"error\" : {\r\n    \"root_cause\" : [\r\n      {\r\n        \"type\" : \"illegal_argument_exception\",\r\n        \"reason\" : \"add voting config exclusions request for [attrib1:val1] would add [12] exclusions to the existing [0] which would exceed the maximum of [10] set by [cluster.max_voting_config_exclusions]\"\r\n      }\r\n    ],\r\n    \"type\" : \"illegal_argument_exception\",\r\n    \"reason\" : \"add voting config exclusions request for [attrib1:val1] would add [12] exclusions to the existing [0] which would exceed the maximum of [10] set by [cluster.max_voting_config_exclusions]\"\r\n  },\r\n  \"status\" : 400\r\n}\r\n\r\n\r\n\r\n```\r\n","closed_by":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"performed_via_github_app":null}