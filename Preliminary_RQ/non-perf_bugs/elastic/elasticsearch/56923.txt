{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/56923","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56923/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56923/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56923/events","html_url":"https://github.com/elastic/elasticsearch/issues/56923","id":620496623,"node_id":"MDU6SXNzdWU2MjA0OTY2MjM=","number":56923,"title":"Search can fail when size is 0 and long sort optimization enabled.","user":{"login":"toby-jn","id":32616473,"node_id":"MDQ6VXNlcjMyNjE2NDcz","avatar_url":"https://avatars1.githubusercontent.com/u/32616473?v=4","gravatar_id":"","url":"https://api.github.com/users/toby-jn","html_url":"https://github.com/toby-jn","followers_url":"https://api.github.com/users/toby-jn/followers","following_url":"https://api.github.com/users/toby-jn/following{/other_user}","gists_url":"https://api.github.com/users/toby-jn/gists{/gist_id}","starred_url":"https://api.github.com/users/toby-jn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/toby-jn/subscriptions","organizations_url":"https://api.github.com/users/toby-jn/orgs","repos_url":"https://api.github.com/users/toby-jn/repos","events_url":"https://api.github.com/users/toby-jn/events{/privacy}","received_events_url":"https://api.github.com/users/toby-jn/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":1967498216,"node_id":"MDU6TGFiZWwxOTY3NDk4MjE2","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Search","name":"Team:Search","color":"fef2c0","default":false,"description":"Meta label for search team"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-05-18T20:48:05Z","updated_at":"2020-05-21T18:49:43Z","closed_at":"2020-05-21T18:49:43Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\nGitHub is reserved for bug reports and feature requests; it is not the place\r\nfor general questions. If you have a question or an unconfirmed bug , please\r\nvisit the [forums](https://discuss.elastic.co/c/elasticsearch).  Please also\r\ncheck your OS is [supported](https://www.elastic.co/support/matrix#show_os).\r\nIf it is not, the issue is likely to be closed.\r\n\r\nFor security vulnerabilities please only send reports to security@elastic.co.\r\nSee https://www.elastic.co/community/security for more information.\r\n\r\nPlease fill in the following details to help us reproduce the bug:\r\n-->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):\r\n```\r\nVersion: 7.7.0, Build: oss/docker/81a1e9eda8e6183f5237786246f6dced26a10eaf/2020-05-12T02:01:37.602180Z, JVM: 14\r\n```\r\n\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`):\r\n```\r\nopenjdk version \"14\" 2020-03-17\r\nOpenJDK Runtime Environment AdoptOpenJDK (build 14+36)\r\nOpenJDK 64-Bit Server VM AdoptOpenJDK (build 14+36, mixed mode, sharing)\r\n```\r\n**OS version** (`uname -a` if on a Unix-like system):\r\n```\r\nLinux elasticsearch-0 4.19.102+ #1 SMP Tue Feb 11 05:33:03 PST 2020 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nAfter upgrading to 7.7.0 from 7.5.1, when doing a search with track_total_hits=true, size=0 and sort I get an error:\r\n\r\n```\r\ncurl -X POST '127.0.0.1:9200/v33.tcpevent-000174/_search?pretty' -H content-type:application/json --data '{\"size\":0,\"sort\":[{\"@timestamp\":{\"order\":\"desc\"}},{\"conn_uuid\":{\"order\":\"desc\"}}],\"track_total_hits\":true}'\r\n{\r\n  \"error\" : {\r\n    \"root_cause\" : [\r\n      {\r\n        \"type\" : \"illegal_argument_exception\",\r\n        \"reason\" : \"numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count\"\r\n      }\r\n    ],\r\n    \"type\" : \"search_phase_execution_exception\",\r\n    \"reason\" : \"all shards failed\",\r\n    \"phase\" : \"query\",\r\n    \"grouped\" : true,\r\n    \"failed_shards\" : [\r\n      {\r\n        \"shard\" : 1,\r\n        \"index\" : \"v33.tcpevent-000174\",\r\n        \"node\" : \"j07kSSNmSFueB_E9i911MQ\",\r\n        \"reason\" : {\r\n          \"type\" : \"illegal_argument_exception\",\r\n          \"reason\" : \"numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count\"\r\n        }\r\n      }\r\n    ],\r\n    \"caused_by\" : {\r\n      \"type\" : \"illegal_argument_exception\",\r\n      \"reason\" : \"numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count\",\r\n      \"caused_by\" : {\r\n        \"type\" : \"illegal_argument_exception\",\r\n        \"reason\" : \"numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count\"\r\n      }\r\n    }\r\n  },\r\n  \"status\" : 400\r\n}\r\n```\r\n\r\nThe index settings have:\r\n```\r\n        \"sort\" : {\r\n          \"field\" : \"@timestamp\",\r\n          \"order\" : \"desc\"\r\n        }\r\n```\r\n\r\nIf I set size to 1 or change the sort parameter to match the index sort then the query works. Both these queries work:\r\n```\r\n{\"size\":0,\"sort\":[{\"@timestamp\":{\"order\":\"desc\"}}],\"track_total_hits\":true}\r\n{\"size\":1,\"sort\":[{\"@timestamp\":{\"order\":\"desc\"}},{\"conn_uuid\":{\"order\":\"desc\"}}],\"track_total_hits\":true}\r\n```\r\nI've tried to create a minimal reproducible setup for this error, but using the same mappings and query I've not been able to trigger the error.\r\n\r\n**Logs**:\r\nQuery run with error trace:\r\n```\r\ncurl -s -X POST '127.0.0.1:9200/v33.tcpevent-000174/_search?pretty&error_trace=true' -H content-type:application/json --data '{\"size\":0,\"sort\":[{\"@timestamp\":{\"order\":\"desc\"}},{\"conn_uuid\":{\"order\":\"desc\"}}],\"track_total_hits\":1000}'\r\n{\r\n  \"error\" : {\r\n    \"root_cause\" : [\r\n      {\r\n        \"type\" : \"illegal_argument_exception\",\r\n        \"reason\" : \"numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count\",\r\n        \"stack_trace\" : \"[numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count]; nested: IllegalArgumentException[numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count];\\n\\tat org.elasticsearch.ElasticsearchException.guessRootCauses(ElasticsearchException.java:644)\\n\\tat org.elasticsearch.action.search.SearchPhaseExecutionException.guessRootCauses(SearchPhaseExecutionException.java:167)\\n\\tat org.elasticsearch.ElasticsearchException.guessRootCauses(ElasticsearchException.java:626)\\n\\tat org.elasticsearch.ElasticsearchException.generateFailureXContent(ElasticsearchException.java:572)\\n\\tat org.elasticsearch.rest.BytesRestResponse.build(BytesRestResponse.java:138)\\n\\tat org.elasticsearch.rest.BytesRestResponse.<init>(BytesRestResponse.java:96)\\n\\tat org.elasticsearch.rest.BytesRestResponse.<init>(BytesRestResponse.java:91)\\n\\tat org.elasticsearch.rest.action.RestActionListener.onFailure(RestActionListener.java:58)\\n\\tat org.elasticsearch.rest.action.RestCancellableNodeClient$1.onFailure(RestCancellableNodeClient.java:106)\\n\\tat org.elasticsearch.action.support.TransportAction$1.onFailure(TransportAction.java:79)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.raisePhaseFailure(AbstractSearchAsyncAction.java:571)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseFailure(AbstractSearchAsyncAction.java:551)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.executeNextPhase(AbstractSearchAsyncAction.java:309)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseDone(AbstractSearchAsyncAction.java:580)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onShardFailure(AbstractSearchAsyncAction.java:393)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.access$100(AbstractSearchAsyncAction.java:68)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction$1.onFailure(AbstractSearchAsyncAction.java:245)\\n\\tat org.elasticsearch.action.search.SearchExecutionStatsCollector.onFailure(SearchExecutionStatsCollector.java:73)\\n\\tat org.elasticsearch.action.ActionListenerResponseHandler.handleException(ActionListenerResponseHandler.java:59)\\n\\tat org.elasticsearch.action.search.SearchTransportService$ConnectionCountingHandler.handleException(SearchTransportService.java:402)\\n\\tat org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleException(TransportService.java:1139)\\n\\tat org.elasticsearch.transport.InboundHandler.lambda$handleException$2(InboundHandler.java:244)\\n\\tat org.elasticsearch.common.util.concurrent.EsExecutors$DirectExecutorService.execute(EsExecutors.java:225)\\n\\tat org.elasticsearch.transport.InboundHandler.handleException(InboundHandler.java:242)\\n\\tat org.elasticsearch.transport.InboundHandler.handlerResponseError(InboundHandler.java:234)\\n\\tat org.elasticsearch.transport.InboundHandler.messageReceived(InboundHandler.java:137)\\n\\tat org.elasticsearch.transport.InboundHandler.inboundMessage(InboundHandler.java:103)\\n\\tat org.elasticsearch.transport.TcpTransport.inboundMessage(TcpTransport.java:676)\\n\\tat org.elasticsearch.transport.netty4.Netty4MessageChannelHandler.channelRead(Netty4MessageChannelHandler.java:62)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)\\n\\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:321)\\n\\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:295)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)\\n\\tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:227)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)\\n\\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\\n\\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\\n\\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:615)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:578)\\n\\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\\n\\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\\n\\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\\n\\tat java.base/java.lang.Thread.run(Thread.java:832)\\nCaused by: java.lang.IllegalArgumentException: numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count\\n\\tat org.apache.lucene.search.TopFieldCollector.create(TopFieldCollector.java:464)\\n\\tat org.apache.lucene.search.TopFieldCollector$1.newCollector(TopFieldCollector.java:502)\\n\\tat org.apache.lucene.search.TopFieldCollector$1.newCollector(TopFieldCollector.java:495)\\n\\tat org.elasticsearch.search.internal.ContextIndexSearcher.search(ContextIndexSearcher.java:166)\\n\\tat org.elasticsearch.search.query.QueryPhase.searchWithCollectorManager(QueryPhase.java:402)\\n\\tat org.elasticsearch.search.query.QueryPhase.executeInternal(QueryPhase.java:297)\\n\\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:151)\\n\\tat org.elasticsearch.indices.IndicesService.lambda$loadIntoContext$21(IndicesService.java:1344)\\n\\tat org.elasticsearch.indices.IndicesService.lambda$cacheShardLevelResult$22(IndicesService.java:1396)\\n\\tat org.elasticsearch.indices.IndicesRequestCache$Loader.load(IndicesRequestCache.java:176)\\n\\tat org.elasticsearch.indices.IndicesRequestCache$Loader.load(IndicesRequestCache.java:159)\\n\\tat org.elasticsearch.common.cache.Cache.computeIfAbsent(Cache.java:433)\\n\\tat org.elasticsearch.indices.IndicesRequestCache.getOrCompute(IndicesRequestCache.java:125)\\n\\tat org.elasticsearch.indices.IndicesService.cacheShardLevelResult(IndicesService.java:1402)\\n\\tat org.elasticsearch.indices.IndicesService.loadIntoContext(IndicesService.java:1341)\\n\\tat org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:359)\\n\\tat org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:434)\\n\\tat org.elasticsearch.search.SearchService.access$200(SearchService.java:135)\\n\\tat org.elasticsearch.search.SearchService$2.lambda$onResponse$0(SearchService.java:395)\\n\\tat org.elasticsearch.search.SearchService.lambda$runAsync$0(SearchService.java:411)\\n\\tat org.elasticsearch.common.util.concurrent.TimedRunnable.doRun(TimedRunnable.java:44)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:692)\\n\\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)\\n\\tat java.lang.Thread.run(Thread.java:832)\\n\"\r\n      }\r\n    ],\r\n    \"type\" : \"search_phase_execution_exception\",\r\n    \"reason\" : \"all shards failed\",\r\n    \"phase\" : \"query\",\r\n    \"grouped\" : true,\r\n    \"failed_shards\" : [\r\n      {\r\n        \"shard\" : 2,\r\n        \"index\" : \"v33.tcpevent-000174\",\r\n        \"node\" : \"yQLAAU2QTN6ORtWRIhqsFQ\",\r\n        \"reason\" : {\r\n          \"type\" : \"illegal_argument_exception\",\r\n          \"reason\" : \"numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count\",\r\n          \"stack_trace\" : \"java.lang.IllegalArgumentException: numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count\\n\\tat org.apache.lucene.search.TopFieldCollector.create(TopFieldCollector.java:464)\\n\\tat org.apache.lucene.search.TopFieldCollector$1.newCollector(TopFieldCollector.java:502)\\n\\tat org.apache.lucene.search.TopFieldCollector$1.newCollector(TopFieldCollector.java:495)\\n\\tat org.elasticsearch.search.internal.ContextIndexSearcher.search(ContextIndexSearcher.java:166)\\n\\tat org.elasticsearch.search.query.QueryPhase.searchWithCollectorManager(QueryPhase.java:402)\\n\\tat org.elasticsearch.search.query.QueryPhase.executeInternal(QueryPhase.java:297)\\n\\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:151)\\n\\tat org.elasticsearch.indices.IndicesService.lambda$loadIntoContext$21(IndicesService.java:1344)\\n\\tat org.elasticsearch.indices.IndicesService.lambda$cacheShardLevelResult$22(IndicesService.java:1396)\\n\\tat org.elasticsearch.indices.IndicesRequestCache$Loader.load(IndicesRequestCache.java:176)\\n\\tat org.elasticsearch.indices.IndicesRequestCache$Loader.load(IndicesRequestCache.java:159)\\n\\tat org.elasticsearch.common.cache.Cache.computeIfAbsent(Cache.java:433)\\n\\tat org.elasticsearch.indices.IndicesRequestCache.getOrCompute(IndicesRequestCache.java:125)\\n\\tat org.elasticsearch.indices.IndicesService.cacheShardLevelResult(IndicesService.java:1402)\\n\\tat org.elasticsearch.indices.IndicesService.loadIntoContext(IndicesService.java:1341)\\n\\tat org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:359)\\n\\tat org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:434)\\n\\tat org.elasticsearch.search.SearchService.access$200(SearchService.java:135)\\n\\tat org.elasticsearch.search.SearchService$2.lambda$onResponse$0(SearchService.java:395)\\n\\tat org.elasticsearch.search.SearchService.lambda$runAsync$0(SearchService.java:411)\\n\\tat org.elasticsearch.common.util.concurrent.TimedRunnable.doRun(TimedRunnable.java:44)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:692)\\n\\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)\\n\\tat java.lang.Thread.run(Thread.java:832)\\n\"\r\n        }\r\n      }\r\n    ],\r\n    \"caused_by\" : {\r\n      \"type\" : \"illegal_argument_exception\",\r\n      \"reason\" : \"numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count\",\r\n      \"caused_by\" : {\r\n        \"type\" : \"illegal_argument_exception\",\r\n        \"reason\" : \"numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count\",\r\n        \"stack_trace\" : \"java.lang.IllegalArgumentException: numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count\\n\\tat org.apache.lucene.search.TopFieldCollector.create(TopFieldCollector.java:464)\\n\\tat org.apache.lucene.search.TopFieldCollector$1.newCollector(TopFieldCollector.java:502)\\n\\tat org.apache.lucene.search.TopFieldCollector$1.newCollector(TopFieldCollector.java:495)\\n\\tat org.elasticsearch.search.internal.ContextIndexSearcher.search(ContextIndexSearcher.java:166)\\n\\tat org.elasticsearch.search.query.QueryPhase.searchWithCollectorManager(QueryPhase.java:402)\\n\\tat org.elasticsearch.search.query.QueryPhase.executeInternal(QueryPhase.java:297)\\n\\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:151)\\n\\tat org.elasticsearch.indices.IndicesService.lambda$loadIntoContext$21(IndicesService.java:1344)\\n\\tat org.elasticsearch.indices.IndicesService.lambda$cacheShardLevelResult$22(IndicesService.java:1396)\\n\\tat org.elasticsearch.indices.IndicesRequestCache$Loader.load(IndicesRequestCache.java:176)\\n\\tat org.elasticsearch.indices.IndicesRequestCache$Loader.load(IndicesRequestCache.java:159)\\n\\tat org.elasticsearch.common.cache.Cache.computeIfAbsent(Cache.java:433)\\n\\tat org.elasticsearch.indices.IndicesRequestCache.getOrCompute(IndicesRequestCache.java:125)\\n\\tat org.elasticsearch.indices.IndicesService.cacheShardLevelResult(IndicesService.java:1402)\\n\\tat org.elasticsearch.indices.IndicesService.loadIntoContext(IndicesService.java:1341)\\n\\tat org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:359)\\n\\tat org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:434)\\n\\tat org.elasticsearch.search.SearchService.access$200(SearchService.java:135)\\n\\tat org.elasticsearch.search.SearchService$2.lambda$onResponse$0(SearchService.java:395)\\n\\tat org.elasticsearch.search.SearchService.lambda$runAsync$0(SearchService.java:411)\\n\\tat org.elasticsearch.common.util.concurrent.TimedRunnable.doRun(TimedRunnable.java:44)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:692)\\n\\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)\\n\\tat java.lang.Thread.run(Thread.java:832)\\n\"\r\n      },\r\n      \"stack_trace\" : \"[numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count]; nested: IllegalArgumentException[numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count];\\n\\tat org.elasticsearch.ElasticsearchException.guessRootCauses(ElasticsearchException.java:644)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.executeNextPhase(AbstractSearchAsyncAction.java:307)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseDone(AbstractSearchAsyncAction.java:580)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onShardFailure(AbstractSearchAsyncAction.java:393)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.access$100(AbstractSearchAsyncAction.java:68)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction$1.onFailure(AbstractSearchAsyncAction.java:245)\\n\\tat org.elasticsearch.action.search.SearchExecutionStatsCollector.onFailure(SearchExecutionStatsCollector.java:73)\\n\\tat org.elasticsearch.action.ActionListenerResponseHandler.handleException(ActionListenerResponseHandler.java:59)\\n\\tat org.elasticsearch.action.search.SearchTransportService$ConnectionCountingHandler.handleException(SearchTransportService.java:402)\\n\\tat org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleException(TransportService.java:1139)\\n\\tat org.elasticsearch.transport.InboundHandler.lambda$handleException$2(InboundHandler.java:244)\\n\\tat org.elasticsearch.common.util.concurrent.EsExecutors$DirectExecutorService.execute(EsExecutors.java:225)\\n\\tat org.elasticsearch.transport.InboundHandler.handleException(InboundHandler.java:242)\\n\\tat org.elasticsearch.transport.InboundHandler.handlerResponseError(InboundHandler.java:234)\\n\\tat org.elasticsearch.transport.InboundHandler.messageReceived(InboundHandler.java:137)\\n\\tat org.elasticsearch.transport.InboundHandler.inboundMessage(InboundHandler.java:103)\\n\\tat org.elasticsearch.transport.TcpTransport.inboundMessage(TcpTransport.java:676)\\n\\tat org.elasticsearch.transport.netty4.Netty4MessageChannelHandler.channelRead(Netty4MessageChannelHandler.java:62)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)\\n\\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:321)\\n\\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:295)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)\\n\\tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:227)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)\\n\\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\\n\\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\\n\\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:615)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:578)\\n\\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\\n\\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\\n\\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\\n\\tat java.base/java.lang.Thread.run(Thread.java:832)\\nCaused by: java.lang.IllegalArgumentException: numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count\\n\\tat org.apache.lucene.search.TopFieldCollector.create(TopFieldCollector.java:464)\\n\\tat org.apache.lucene.search.TopFieldCollector$1.newCollector(TopFieldCollector.java:502)\\n\\tat org.apache.lucene.search.TopFieldCollector$1.newCollector(TopFieldCollector.java:495)\\n\\tat org.elasticsearch.search.internal.ContextIndexSearcher.search(ContextIndexSearcher.java:166)\\n\\tat org.elasticsearch.search.query.QueryPhase.searchWithCollectorManager(QueryPhase.java:402)\\n\\tat org.elasticsearch.search.query.QueryPhase.executeInternal(QueryPhase.java:297)\\n\\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:151)\\n\\tat org.elasticsearch.indices.IndicesService.lambda$loadIntoContext$21(IndicesService.java:1344)\\n\\tat org.elasticsearch.indices.IndicesService.lambda$cacheShardLevelResult$22(IndicesService.java:1396)\\n\\tat org.elasticsearch.indices.IndicesRequestCache$Loader.load(IndicesRequestCache.java:176)\\n\\tat org.elasticsearch.indices.IndicesRequestCache$Loader.load(IndicesRequestCache.java:159)\\n\\tat org.elasticsearch.common.cache.Cache.computeIfAbsent(Cache.java:433)\\n\\tat org.elasticsearch.indices.IndicesRequestCache.getOrCompute(IndicesRequestCache.java:125)\\n\\tat org.elasticsearch.indices.IndicesService.cacheShardLevelResult(IndicesService.java:1402)\\n\\tat org.elasticsearch.indices.IndicesService.loadIntoContext(IndicesService.java:1341)\\n\\tat org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:359)\\n\\tat org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:434)\\n\\tat org.elasticsearch.search.SearchService.access$200(SearchService.java:135)\\n\\tat org.elasticsearch.search.SearchService$2.lambda$onResponse$0(SearchService.java:395)\\n\\tat org.elasticsearch.search.SearchService.lambda$runAsync$0(SearchService.java:411)\\n\\tat org.elasticsearch.common.util.concurrent.TimedRunnable.doRun(TimedRunnable.java:44)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:692)\\n\\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)\\n\\tat java.lang.Thread.run(Thread.java:832)\\n\"\r\n    },\r\n    \"stack_trace\" : \"Failed to execute phase [query], all shards failed; shardFailures {[yQLAAU2QTN6ORtWRIhqsFQ][v33.tcpevent-000174][2]: RemoteTransportException[[elasticsearch-2][10.32.130.157:9300][indices:data/read/search[phase/query]]]; nested: QueryPhaseExecutionException[Query Failed [Failed to execute main query]]; nested: IllegalArgumentException[numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count]; }{[6RDmCBlcRM-dVtnwzcXTog][v33.tcpevent-000174][0]: RemoteTransportException[[elasticsearch-0][10.32.136.152:9300][indices:data/read/search[phase/query]]]; nested: QueryPhaseExecutionException[Query Failed [Failed to execute main query]]; nested: IllegalArgumentException[numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count]; }{[VX6qSJggQAmNL_HPnz6hhw][v33.tcpevent-000174][1]: RemoteTransportException[[elasticsearch-3][10.32.134.121:9300][indices:data/read/search[phase/query]]]; nested: QueryPhaseExecutionException[Query Failed [Failed to execute main query]]; nested: IllegalArgumentException[numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count]; }\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseFailure(AbstractSearchAsyncAction.java:551)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.executeNextPhase(AbstractSearchAsyncAction.java:309)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseDone(AbstractSearchAsyncAction.java:580)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onShardFailure(AbstractSearchAsyncAction.java:393)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.access$100(AbstractSearchAsyncAction.java:68)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction$1.onFailure(AbstractSearchAsyncAction.java:245)\\n\\tat org.elasticsearch.action.search.SearchExecutionStatsCollector.onFailure(SearchExecutionStatsCollector.java:73)\\n\\tat org.elasticsearch.action.ActionListenerResponseHandler.handleException(ActionListenerResponseHandler.java:59)\\n\\tat org.elasticsearch.action.search.SearchTransportService$ConnectionCountingHandler.handleException(SearchTransportService.java:402)\\n\\tat org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleException(TransportService.java:1139)\\n\\tat org.elasticsearch.transport.InboundHandler.lambda$handleException$2(InboundHandler.java:244)\\n\\tat org.elasticsearch.common.util.concurrent.EsExecutors$DirectExecutorService.execute(EsExecutors.java:225)\\n\\tat org.elasticsearch.transport.InboundHandler.handleException(InboundHandler.java:242)\\n\\tat org.elasticsearch.transport.InboundHandler.handlerResponseError(InboundHandler.java:234)\\n\\tat org.elasticsearch.transport.InboundHandler.messageReceived(InboundHandler.java:137)\\n\\tat org.elasticsearch.transport.InboundHandler.inboundMessage(InboundHandler.java:103)\\n\\tat org.elasticsearch.transport.TcpTransport.inboundMessage(TcpTransport.java:676)\\n\\tat org.elasticsearch.transport.netty4.Netty4MessageChannelHandler.channelRead(Netty4MessageChannelHandler.java:62)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)\\n\\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:321)\\n\\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:295)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)\\n\\tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:227)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)\\n\\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\\n\\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\\n\\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:615)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:578)\\n\\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\\n\\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\\n\\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\\n\\tat java.base/java.lang.Thread.run(Thread.java:832)\\nCaused by: [numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count]; nested: IllegalArgumentException[numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count];\\n\\tat org.elasticsearch.ElasticsearchException.guessRootCauses(ElasticsearchException.java:644)\\n\\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.executeNextPhase(AbstractSearchAsyncAction.java:307)\\n\\t... 40 more\\nCaused by: java.lang.IllegalArgumentException: numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count\\n\\tat org.apache.lucene.search.TopFieldCollector.create(TopFieldCollector.java:464)\\n\\tat org.apache.lucene.search.TopFieldCollector$1.newCollector(TopFieldCollector.java:502)\\n\\tat org.apache.lucene.search.TopFieldCollector$1.newCollector(TopFieldCollector.java:495)\\n\\tat org.elasticsearch.search.internal.ContextIndexSearcher.search(ContextIndexSearcher.java:166)\\n\\tat org.elasticsearch.search.query.QueryPhase.searchWithCollectorManager(QueryPhase.java:402)\\n\\tat org.elasticsearch.search.query.QueryPhase.executeInternal(QueryPhase.java:297)\\n\\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:151)\\n\\tat org.elasticsearch.indices.IndicesService.lambda$loadIntoContext$21(IndicesService.java:1344)\\n\\tat org.elasticsearch.indices.IndicesService.lambda$cacheShardLevelResult$22(IndicesService.java:1396)\\n\\tat org.elasticsearch.indices.IndicesRequestCache$Loader.load(IndicesRequestCache.java:176)\\n\\tat org.elasticsearch.indices.IndicesRequestCache$Loader.load(IndicesRequestCache.java:159)\\n\\tat org.elasticsearch.common.cache.Cache.computeIfAbsent(Cache.java:433)\\n\\tat org.elasticsearch.indices.IndicesRequestCache.getOrCompute(IndicesRequestCache.java:125)\\n\\tat org.elasticsearch.indices.IndicesService.cacheShardLevelResult(IndicesService.java:1402)\\n\\tat org.elasticsearch.indices.IndicesService.loadIntoContext(IndicesService.java:1341)\\n\\tat org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:359)\\n\\tat org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:434)\\n\\tat org.elasticsearch.search.SearchService.access$200(SearchService.java:135)\\n\\tat org.elasticsearch.search.SearchService$2.lambda$onResponse$0(SearchService.java:395)\\n\\tat org.elasticsearch.search.SearchService.lambda$runAsync$0(SearchService.java:411)\\n\\tat org.elasticsearch.common.util.concurrent.TimedRunnable.doRun(TimedRunnable.java:44)\\n\\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:692)\\n\\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)\\n\\tat java.lang.Thread.run(Thread.java:832)\\n\"\r\n  },\r\n  \"status\" : 400\r\n}\r\n```\r\n\r\n","closed_by":{"login":"mayya-sharipova","id":5738841,"node_id":"MDQ6VXNlcjU3Mzg4NDE=","avatar_url":"https://avatars1.githubusercontent.com/u/5738841?v=4","gravatar_id":"","url":"https://api.github.com/users/mayya-sharipova","html_url":"https://github.com/mayya-sharipova","followers_url":"https://api.github.com/users/mayya-sharipova/followers","following_url":"https://api.github.com/users/mayya-sharipova/following{/other_user}","gists_url":"https://api.github.com/users/mayya-sharipova/gists{/gist_id}","starred_url":"https://api.github.com/users/mayya-sharipova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayya-sharipova/subscriptions","organizations_url":"https://api.github.com/users/mayya-sharipova/orgs","repos_url":"https://api.github.com/users/mayya-sharipova/repos","events_url":"https://api.github.com/users/mayya-sharipova/events{/privacy}","received_events_url":"https://api.github.com/users/mayya-sharipova/received_events","type":"User","site_admin":false},"performed_via_github_app":null}