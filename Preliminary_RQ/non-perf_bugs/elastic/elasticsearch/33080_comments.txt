[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/415340912","html_url":"https://github.com/elastic/elasticsearch/issues/33080#issuecomment-415340912","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33080","id":415340912,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTM0MDkxMg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-08-23T08:48:06Z","updated_at":"2018-08-23T08:48:06Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search-aggs","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/416236411","html_url":"https://github.com/elastic/elasticsearch/issues/33080#issuecomment-416236411","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33080","id":416236411,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNjIzNjQxMQ==","user":{"login":"astefan","id":893749,"node_id":"MDQ6VXNlcjg5Mzc0OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/893749?v=4","gravatar_id":"","url":"https://api.github.com/users/astefan","html_url":"https://github.com/astefan","followers_url":"https://api.github.com/users/astefan/followers","following_url":"https://api.github.com/users/astefan/following{/other_user}","gists_url":"https://api.github.com/users/astefan/gists{/gist_id}","starred_url":"https://api.github.com/users/astefan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/astefan/subscriptions","organizations_url":"https://api.github.com/users/astefan/orgs","repos_url":"https://api.github.com/users/astefan/repos","events_url":"https://api.github.com/users/astefan/events{/privacy}","received_events_url":"https://api.github.com/users/astefan/received_events","type":"User","site_admin":false},"created_at":"2018-08-27T14:00:35Z","updated_at":"2018-08-27T14:00:35Z","author_association":"CONTRIBUTOR","body":"Another scenario showing the complex world of nested queries is here: https://discuss.elastic.co/t/sql-surprising-results-with-multiple-levels-of-nesting/145862","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/416829785","html_url":"https://github.com/elastic/elasticsearch/issues/33080#issuecomment-416829785","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33080","id":416829785,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNjgyOTc4NQ==","user":{"login":"paulcarey","id":9439,"node_id":"MDQ6VXNlcjk0Mzk=","avatar_url":"https://avatars2.githubusercontent.com/u/9439?v=4","gravatar_id":"","url":"https://api.github.com/users/paulcarey","html_url":"https://github.com/paulcarey","followers_url":"https://api.github.com/users/paulcarey/followers","following_url":"https://api.github.com/users/paulcarey/following{/other_user}","gists_url":"https://api.github.com/users/paulcarey/gists{/gist_id}","starred_url":"https://api.github.com/users/paulcarey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulcarey/subscriptions","organizations_url":"https://api.github.com/users/paulcarey/orgs","repos_url":"https://api.github.com/users/paulcarey/repos","events_url":"https://api.github.com/users/paulcarey/events{/privacy}","received_events_url":"https://api.github.com/users/paulcarey/received_events","type":"User","site_admin":false},"created_at":"2018-08-29T05:34:26Z","updated_at":"2018-08-29T05:34:26Z","author_association":"NONE","body":"I just wanted to highlight an issue listed in the original discussion where a result that should be returned disappears entirely, depending on the projection.\r\n  \r\nOriginal query\r\n   \r\n    POST _xpack/sql?format=txt\r\n    {\r\n      \"query\": \"select groupName from my_index where user.first = 'Alice' or user.last = '???'\"\r\n    }\r\n\r\n\r\nOriginal result\r\n\r\n     groupName   \r\n     ---------------\r\n     fans           \r\n\r\n\r\nModified query with additional field of `user.first`\r\n\r\n      POST _xpack/sql?format=txt\r\n      {\r\n        \"query\": \"select groupName, user.first from my_index where user.first = 'Alice' or user.last = '???'\"\r\n      }                  \r\n\r\nResult of modified query\r\n\r\n         groupName   |  user.first   \r\n      ---------------+---------------\r\n\r\nGiven that mapping arbitrary SQL to the correct set of nested queries with appropriate `inner_hits` appears to be somewhat complex, I'm assuming issues related to this will persist for some time.\r\n\r\nIf the document `_id` were retrievable via SQL (which I don't believe is currently the case), it would at least allow clients to issue two queries - one to filter the list of docs via a `where` clause, and other to retrieve them (via the `ids` query). Would this be considered? Or are there any other workarounds that can be used to give confidence that expected results won't be dropped?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/435084458","html_url":"https://github.com/elastic/elasticsearch/issues/33080#issuecomment-435084458","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/33080","id":435084458,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTA4NDQ1OA==","user":{"login":"astefan","id":893749,"node_id":"MDQ6VXNlcjg5Mzc0OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/893749?v=4","gravatar_id":"","url":"https://api.github.com/users/astefan","html_url":"https://github.com/astefan","followers_url":"https://api.github.com/users/astefan/followers","following_url":"https://api.github.com/users/astefan/following{/other_user}","gists_url":"https://api.github.com/users/astefan/gists{/gist_id}","starred_url":"https://api.github.com/users/astefan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/astefan/subscriptions","organizations_url":"https://api.github.com/users/astefan/orgs","repos_url":"https://api.github.com/users/astefan/repos","events_url":"https://api.github.com/users/astefan/events{/privacy}","received_events_url":"https://api.github.com/users/astefan/received_events","type":"User","site_admin":false},"created_at":"2018-11-01T15:45:51Z","updated_at":"2018-11-01T15:45:51Z","author_association":"CONTRIBUTOR","body":"@paulcarey I looked at the second issue you reported in the latest comment - a column disappearing - and I believe it's the same issue of un-named `inner_hits`. The query generated by the `translate` API will generate an output from ES that doesn't have `inner_hits` (or it has but it's empty). If, on the other hand, the two `inner_hits` that each of the conditions will generate have a `name` ES will return valid `inner_hits`.\r\n\r\nRegarding the `_id`, this is tracked [here](https://github.com/elastic/elasticsearch/issues/30266).","performed_via_github_app":null}]