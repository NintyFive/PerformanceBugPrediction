{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/10142","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10142/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10142/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/10142/events","html_url":"https://github.com/elastic/elasticsearch/issues/10142","id":62741583,"node_id":"MDU6SXNzdWU2Mjc0MTU4Mw==","number":10142,"title":"Removing duplicates from merged aggregation results","user":{"login":"SMUnlimited","id":5180431,"node_id":"MDQ6VXNlcjUxODA0MzE=","avatar_url":"https://avatars2.githubusercontent.com/u/5180431?v=4","gravatar_id":"","url":"https://api.github.com/users/SMUnlimited","html_url":"https://github.com/SMUnlimited","followers_url":"https://api.github.com/users/SMUnlimited/followers","following_url":"https://api.github.com/users/SMUnlimited/following{/other_user}","gists_url":"https://api.github.com/users/SMUnlimited/gists{/gist_id}","starred_url":"https://api.github.com/users/SMUnlimited/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SMUnlimited/subscriptions","organizations_url":"https://api.github.com/users/SMUnlimited/orgs","repos_url":"https://api.github.com/users/SMUnlimited/repos","events_url":"https://api.github.com/users/SMUnlimited/events{/privacy}","received_events_url":"https://api.github.com/users/SMUnlimited/received_events","type":"User","site_admin":false},"labels":[{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-03-18T16:59:35Z","updated_at":"2015-04-23T11:05:33Z","closed_at":"2015-04-23T11:05:31Z","author_association":"NONE","active_lock_reason":null,"body":"**Scenario 1**\nThis is a very simplified scenario but captures the problem we are facing.\n\nWe have a team lead document with a field for “Primary Product” and a field for “Secondary Product”.  We want to show the distribution of all products amongst team leads. To do so we would do a term aggregation on “Primary Product” and a term aggregation on “Secondary Product”. \n\nAs this is the same products we want to merge the buckets together (done manually). This is simple to do with the term aggregation but has a problem. If both fields have the product, the document count will be one more than it should be once you merge the buckets. We need a way to realise if a document is already included in the count of the first aggregation, so we don’t add the same document from the second aggregation.\n\n**Scenario 2**\nThis next scenario is similar to our actual use case where we make use of nested documents but it is the same problem as above.\n\nEach team lead is a top level document nested with team members. We then want to show the distribution of teams that contain males or females, assuming a single team leader exists per team. \n\nAgain we would run two aggregations. For team leaders this would be a term aggregation on gender. For team members this would be a nested term aggregation on gender followed by a reverse nested aggregation to get team leader counts for each gender. The two aggregation result buckets would then have to be manually combined. But it’s the same problem of working out when a team lead was already included in the first aggregation so any duplicate team leads that match in the second aggregation can be ignored.  (The aggregation we would use can be seen here https://gist.github.com/SMUnlimited/86e03e8f59ac6a09935c)\n\nAnother solution could be to include the team lead himself as a nested team member so we can just do a single nested term aggregation followed by a reverse nested aggregation to get the team member counts.  But this means you are duplicating all the team lead data which is not ideal.\n\n:boom: What do people think would be the best way to solve this problem?\n\n_Note we haven’t thought about other types of aggregations yet (some may not be as straightforward to merge buckets) but in theory could also be applied._\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}