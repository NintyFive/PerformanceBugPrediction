[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/2196360","html_url":"https://github.com/elastic/elasticsearch/issues/1362#issuecomment-2196360","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1362","id":2196360,"node_id":"MDEyOklzc3VlQ29tbWVudDIxOTYzNjA=","user":{"login":"merrellb","id":309627,"node_id":"MDQ6VXNlcjMwOTYyNw==","avatar_url":"https://avatars2.githubusercontent.com/u/309627?v=4","gravatar_id":"","url":"https://api.github.com/users/merrellb","html_url":"https://github.com/merrellb","followers_url":"https://api.github.com/users/merrellb/followers","following_url":"https://api.github.com/users/merrellb/following{/other_user}","gists_url":"https://api.github.com/users/merrellb/gists{/gist_id}","starred_url":"https://api.github.com/users/merrellb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrellb/subscriptions","organizations_url":"https://api.github.com/users/merrellb/orgs","repos_url":"https://api.github.com/users/merrellb/repos","events_url":"https://api.github.com/users/merrellb/events{/privacy}","received_events_url":"https://api.github.com/users/merrellb/received_events","type":"User","site_admin":false},"created_at":"2011-09-26T09:24:07Z","updated_at":"2011-09-26T09:24:07Z","author_association":"NONE","body":"To clarify why this seems strange, every other \"underscore field\" (_id, _type, _index, _source) is returned at the root level and fields is usually reserved for a subsets of _source. Additionally in pyes  the code to create returned objects is the same for get and search and it ends up a bit hackish insuring that the _parent be added to the fields in a search (and extracted and treated differently from the other returned \"fields\") and to also insure that objects obtain the _parent from the get call correctly.  While adding _parent to every object might be slightly redundant I don't think it would be any more so than always returning _index, _type or in some cases even _id.  In almost every use case I've come across if _parent exists it is just as important to return as _source.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/2432314","html_url":"https://github.com/elastic/elasticsearch/issues/1362#issuecomment-2432314","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1362","id":2432314,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzIzMTQ=","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2011-10-17T17:58:54Z","updated_at":"2011-10-17T17:58:54Z","author_association":"MEMBER","body":"The problem with that is that it \"costs\" to fetch the _parent, and you might not want it all times (i.e. when you do a simple search). I did not fully understand the problem with specifying the _parent field if its needed...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/2433093","html_url":"https://github.com/elastic/elasticsearch/issues/1362#issuecomment-2433093","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1362","id":2433093,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MzMwOTM=","user":{"login":"merrellb","id":309627,"node_id":"MDQ6VXNlcjMwOTYyNw==","avatar_url":"https://avatars2.githubusercontent.com/u/309627?v=4","gravatar_id":"","url":"https://api.github.com/users/merrellb","html_url":"https://github.com/merrellb","followers_url":"https://api.github.com/users/merrellb/followers","following_url":"https://api.github.com/users/merrellb/following{/other_user}","gists_url":"https://api.github.com/users/merrellb/gists{/gist_id}","starred_url":"https://api.github.com/users/merrellb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrellb/subscriptions","organizations_url":"https://api.github.com/users/merrellb/orgs","repos_url":"https://api.github.com/users/merrellb/repos","events_url":"https://api.github.com/users/merrellb/events{/privacy}","received_events_url":"https://api.github.com/users/merrellb/received_events","type":"User","site_admin":false},"created_at":"2011-10-17T18:54:57Z","updated_at":"2011-10-17T19:15:29Z","author_association":"NONE","body":"Hey Shay,\n\nThanks for the reply.  I can certainly understand your hesitation, especially if the \"costs\" are non-trivial.  Here are the benefits as I see them:\n1)  In almost all of my use cases if I set a parent, the value is important and would be beneficial,even in a simple search.\n2)  Many frameworks (and pyes in particular) don't have a mechanism to introspect or otherwise know if a parent should be present.  To allow any retrieved object to be \"updated\" requires they fetch the parent anyway.\n3)  It appears \"get\" can't return the parent, even when requested.  One could argue that one must know the parent for routing purposes anyway but that creates trouble in pyes as the same code parses the results of gets and queries (ie one requires the parent to be forwarded internally from the get operation and the other can retrieve it from the response)\n4)  It just seems odd that a retrieved object doesn't, by default, return with enough information to be updated and put back into ES.\n5)  Every other leading underscore field is retrieved at the \"root\" level except _parent which is relegated to \"fields\" which is a bit confusing as that is usually reserved for a subset of _source.  The code to insure that _parent is added to fields and then separated back out ends up looking a bit hackish in pyes.\n\nIf it is too costly to enable this by default it may warrant some additional optimization (not that you don't already do this) as I think many people will always be looking to retrieve parent.  If nothing else perhaps you could enable its retrieval similar to the way versions are enabled (most times if you want version you want parent so you can update)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/2447785","html_url":"https://github.com/elastic/elasticsearch/issues/1362#issuecomment-2447785","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1362","id":2447785,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDc3ODU=","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2011-10-18T21:04:04Z","updated_at":"2011-10-18T21:04:04Z","author_association":"MEMBER","body":"Heya, answers per point:\n\n1) Thats your use cases, I am still not sure that it covers most use cases. Sure, when you search and then update, then you need the parent, but there is also just the case where one searches and displays the results, or the updated data does not come \"from elasticsearch\".\n\n2) I don't understand why introspection is needed. If one executes a search where a possible update happens afterwards, and parent needs to be used, then fetching both _source and _parent is simple by specifying them in the fields to get.\n\n3) Get will return the _parent in upcoming 0.18, there was a problem in realtime get that it did not return the parent if requested.\n\n4) Cause you don't always want to update it. And, btw, it works the same way as _routing.\n\n5) I think you are putting to much into \"underscore\" fields to group them into fields that needs to be returned by default.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/2448931","html_url":"https://github.com/elastic/elasticsearch/issues/1362#issuecomment-2448931","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1362","id":2448931,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NDg5MzE=","user":{"login":"merrellb","id":309627,"node_id":"MDQ6VXNlcjMwOTYyNw==","avatar_url":"https://avatars2.githubusercontent.com/u/309627?v=4","gravatar_id":"","url":"https://api.github.com/users/merrellb","html_url":"https://github.com/merrellb","followers_url":"https://api.github.com/users/merrellb/followers","following_url":"https://api.github.com/users/merrellb/following{/other_user}","gists_url":"https://api.github.com/users/merrellb/gists{/gist_id}","starred_url":"https://api.github.com/users/merrellb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrellb/subscriptions","organizations_url":"https://api.github.com/users/merrellb/orgs","repos_url":"https://api.github.com/users/merrellb/repos","events_url":"https://api.github.com/users/merrellb/events{/privacy}","received_events_url":"https://api.github.com/users/merrellb/received_events","type":"User","site_admin":false},"created_at":"2011-10-18T22:49:00Z","updated_at":"2011-10-20T05:01:22Z","author_association":"NONE","body":"Thanks for the reply.\n\nThe default behavior already seems to be rather verbose, returning index, type, id and source (despite many scenarios where these are similarly not needed).  The philosophy seems to be returning everything specified by the index operation and then reducing this through fields if desired.  However _parent seems to be the exception, indexed but not returned unless explicitly added through the fields parameter. \n\nFrameworks like pyes are now creating heavier objects with save() methods but these break unless the user remembers to set the fields appropriately, knowing they later plan to update and realizing the type requires a parent.  There are certainly workarounds (introspection, query parameters to automatically add \"parent\" to the fields, etc) but it does hurt the abstraction a bit.\n\nAnyway, I can understand where you are coming from since it sounds like _parent has additional cost not associated with the other fields returned by default (and default behavior is really more aesthetics and not a showstopper).  Thanks for your consideration on this.\n","performed_via_github_app":null}]