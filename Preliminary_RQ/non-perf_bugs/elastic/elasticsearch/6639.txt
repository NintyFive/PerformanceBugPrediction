{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/6639","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6639/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6639/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6639/events","html_url":"https://github.com/elastic/elasticsearch/issues/6639","id":36671330,"node_id":"MDU6SXNzdWUzNjY3MTMzMA==","number":6639,"title":"Results returned in wrong order","user":{"login":"qris","id":754175,"node_id":"MDQ6VXNlcjc1NDE3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/754175?v=4","gravatar_id":"","url":"https://api.github.com/users/qris","html_url":"https://github.com/qris","followers_url":"https://api.github.com/users/qris/followers","following_url":"https://api.github.com/users/qris/following{/other_user}","gists_url":"https://api.github.com/users/qris/gists{/gist_id}","starred_url":"https://api.github.com/users/qris/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qris/subscriptions","organizations_url":"https://api.github.com/users/qris/orgs","repos_url":"https://api.github.com/users/qris/repos","events_url":"https://api.github.com/users/qris/events{/privacy}","received_events_url":"https://api.github.com/users/qris/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2014-06-27T14:53:58Z","updated_at":"2014-07-16T10:58:41Z","closed_at":"2014-06-27T15:06:27Z","author_association":"NONE","active_lock_reason":null,"body":"I noticed while writing tests that ordering by most fields worked properly, but ordering by the `grantee` field does not. It returns the results in the same order regardless of whether \"ascending\" or \"descending\" is selected.\n\nI've attached a script which reproduces the issue:\n\n```\nchris@lap-x201:~/aptivate/2014/indigodata/360giving-demos/src/scripts$ ./elasticsearch_bug.sh \n{\"acknowledged\":true}\n{\"took\":57,\"errors\":false,\"items\":[{\"index\":{\"_index\":\"test_360giving\",\"_type\":\"modelresult\",\"_id\":\"data.activity.5\",\"_version\":1,\"status\":201}}]}\n{\"took\":7,\"errors\":false,\"items\":[{\"index\":{\"_index\":\"test_360giving\",\"_type\":\"modelresult\",\"_id\":\"data.activity.6\",\"_version\":1,\"status\":201}}]}\ndata.activity.5 data.activity.6 \ndata.activity.5 data.activity.6 \n```\n\nThe very last line should say \"data.activity.6 data.activity.5\", because it requested the results in the opposite order compared to the previous line.\n\nIf I make the data sufficiently different (e.g. change the grantee of the second record to \"H\" or \"F\") then it works as expected.\n\nHere is my test script:\n\n```\n#!/bin/bash\n\nserver=http://localhost:9200\nindex=\"test_$RANDOM\"\ntype=modelresult\n\nset -e\n\ndo_curl() {\n    method=$1\n    shift\n    curl -s -X$method $server/\"$@\"\n    echo ''\n}\n\ndo_curl DELETE \"$index\" || true\ndo_curl PUT \"$index\"\ndo_curl PUT \"$index/$type/mapping\" --data-binary @- <<EOF\n{\"$type\": {\"_boost\": {\"name\": \"boost\", \"null_value\": 1.0}, \"properties\": {\"grantee\": {\"index\": \"not_analyzed\", \"term_vector\": \"with_positions_offsets\", \"type\": \"string\", \"analyzer\": \"snowball\", \"boost\": 1.0, \"store\": \"yes\"}}}}\nEOF\n\ndo_curl POST \"_bulk?refresh=true\" --data-binary @- <<EOF\n{\"index\": {\"_type\": \"$type\", \"_id\": \"data.activity.5\", \"_index\": \"$index\"}}\n{\"django_ct\": \"data.activity\", \"grantee\": \"Grantee 1\"}\nEOF\n\ndo_curl POST \"_bulk?refresh=true\" --data-binary @- <<EOF\n{\"index\": {\"_type\": \"$type\", \"_id\": \"data.activity.6\", \"_index\": \"$index\"}}\n{\"django_ct\": \"data.activity\", \"grantee\": \"Grantee 2\"}\nEOF\n\n# Note: the bug is that you get [data.activity.5, data.activity.6]\n# regardless of the specified sort order, as shown below. If you make\n# the records sufficiently different (e.g. change the grantee of the\n# second record to \"H\" or \"F\") then it works.\n\ndo_curl GET \"$index/$type/_search\" --data-binary '{\"sort\": [{\"grantee\": {\"order\": \"asc\"}}], \"query\": {\"filtered\": {\"filter\": {\"fquery\": {\"query\": {\"query_string\": {\"query\": \"*\"}}}}}}}' | perl -ne 'while (s/\"_id\":\"([^\"]+)\"//) { print \"$1 \" }'; echo\ndo_curl GET \"$index/$type/_search\" --data-binary '{\"sort\": [{\"grantee\": {\"order\": \"desc\"}}], \"query\": {\"filtered\": {\"filter\": {\"fquery\": {\"query\": {\"query_string\": {\"query\": \"*\"}}}}}}}' | perl -ne 'while (s/\"_id\":\"([^\"]+)\"//) { print \"$1 \" }'; echo\ndo_curl DELETE \"$index\"\n```\n","closed_by":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"performed_via_github_app":null}