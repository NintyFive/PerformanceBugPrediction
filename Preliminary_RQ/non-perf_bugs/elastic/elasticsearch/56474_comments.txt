[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/626056360","html_url":"https://github.com/elastic/elasticsearch/issues/56474#issuecomment-626056360","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56474","id":626056360,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNjA1NjM2MA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-05-08T23:04:42Z","updated_at":"2020-05-08T23:04:42Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-ql (:Query Languages/SQL)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/628520950","html_url":"https://github.com/elastic/elasticsearch/issues/56474#issuecomment-628520950","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56474","id":628520950,"node_id":"MDEyOklzc3VlQ29tbWVudDYyODUyMDk1MA==","user":{"login":"nikoncode","id":838300,"node_id":"MDQ6VXNlcjgzODMwMA==","avatar_url":"https://avatars2.githubusercontent.com/u/838300?v=4","gravatar_id":"","url":"https://api.github.com/users/nikoncode","html_url":"https://github.com/nikoncode","followers_url":"https://api.github.com/users/nikoncode/followers","following_url":"https://api.github.com/users/nikoncode/following{/other_user}","gists_url":"https://api.github.com/users/nikoncode/gists{/gist_id}","starred_url":"https://api.github.com/users/nikoncode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikoncode/subscriptions","organizations_url":"https://api.github.com/users/nikoncode/orgs","repos_url":"https://api.github.com/users/nikoncode/repos","events_url":"https://api.github.com/users/nikoncode/events{/privacy}","received_events_url":"https://api.github.com/users/nikoncode/received_events","type":"User","site_admin":false},"created_at":"2020-05-14T09:40:20Z","updated_at":"2020-05-14T09:40:20Z","author_association":"CONTRIBUTOR","body":"I can handle this, please assign it to me to avoid double work.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/634097157","html_url":"https://github.com/elastic/elasticsearch/issues/56474#issuecomment-634097157","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56474","id":634097157,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNDA5NzE1Nw==","user":{"login":"bpintea","id":1562801,"node_id":"MDQ6VXNlcjE1NjI4MDE=","avatar_url":"https://avatars3.githubusercontent.com/u/1562801?v=4","gravatar_id":"","url":"https://api.github.com/users/bpintea","html_url":"https://github.com/bpintea","followers_url":"https://api.github.com/users/bpintea/followers","following_url":"https://api.github.com/users/bpintea/following{/other_user}","gists_url":"https://api.github.com/users/bpintea/gists{/gist_id}","starred_url":"https://api.github.com/users/bpintea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bpintea/subscriptions","organizations_url":"https://api.github.com/users/bpintea/orgs","repos_url":"https://api.github.com/users/bpintea/repos","events_url":"https://api.github.com/users/bpintea/events{/privacy}","received_events_url":"https://api.github.com/users/bpintea/received_events","type":"User","site_admin":false},"created_at":"2020-05-26T15:27:49Z","updated_at":"2020-05-26T15:37:20Z","author_association":"CONTRIBUTOR","body":"Redacting the passwords out of the exception messages can be tricky. The above provided example is raised in two cases:\r\n* the scheme isn't an HTTP one;\r\n* the URI can't be parsed (by `java.net.URI`).\r\n\r\nIn the former case - and other few cases, like invalid property name or value - we could safely redact out the credentials.\r\n\r\nBut in the latter - and in general, as there are 3-4 hot spots where we dump the URI - this can't be done reliably since we can't know what's broken, w/o reimplementing a best-effort URI parser.\r\n\r\nIn easiest case we can redact the string between first (unescaped) `@` and first (unescaped) `/` before it (in _user info_ URI part) and after first `password=` (in query part), but depending on how malformed is is, even that could lead to altering the original input in a way that's confusing for the user and in some cases it might still leak the credentials (ex.: missing or misplaced `@`, `pasword=foo` etc.).\r\n\r\nThe safest alternative I see would be to never log the original URI, but just the `URISyntaxException` stripped hints.\r\n\r\nAnd a compromise mix might be using a different schema to get the desired behavior: using `jdbc:esv` keeps the currently implemented behavior (verbose) and `jdbc:es` would just hint. \r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/634141935","html_url":"https://github.com/elastic/elasticsearch/issues/56474#issuecomment-634141935","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56474","id":634141935,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNDE0MTkzNQ==","user":{"login":"bpintea","id":1562801,"node_id":"MDQ6VXNlcjE1NjI4MDE=","avatar_url":"https://avatars3.githubusercontent.com/u/1562801?v=4","gravatar_id":"","url":"https://api.github.com/users/bpintea","html_url":"https://github.com/bpintea","followers_url":"https://api.github.com/users/bpintea/followers","following_url":"https://api.github.com/users/bpintea/following{/other_user}","gists_url":"https://api.github.com/users/bpintea/gists{/gist_id}","starred_url":"https://api.github.com/users/bpintea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bpintea/subscriptions","organizations_url":"https://api.github.com/users/bpintea/orgs","repos_url":"https://api.github.com/users/bpintea/repos","events_url":"https://api.github.com/users/bpintea/events{/privacy}","received_events_url":"https://api.github.com/users/bpintea/received_events","type":"User","site_admin":false},"created_at":"2020-05-26T16:44:23Z","updated_at":"2020-05-26T16:44:23Z","author_association":"CONTRIBUTOR","body":"> I can handle this, please assign it to me to avoid double work.\r\n\r\n@nikoncode, many thanks for the offer. I will take over this issue.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/635940764","html_url":"https://github.com/elastic/elasticsearch/issues/56474#issuecomment-635940764","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56474","id":635940764,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNTk0MDc2NA==","user":{"login":"astefan","id":893749,"node_id":"MDQ6VXNlcjg5Mzc0OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/893749?v=4","gravatar_id":"","url":"https://api.github.com/users/astefan","html_url":"https://github.com/astefan","followers_url":"https://api.github.com/users/astefan/followers","following_url":"https://api.github.com/users/astefan/following{/other_user}","gists_url":"https://api.github.com/users/astefan/gists{/gist_id}","starred_url":"https://api.github.com/users/astefan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/astefan/subscriptions","organizations_url":"https://api.github.com/users/astefan/orgs","repos_url":"https://api.github.com/users/astefan/repos","events_url":"https://api.github.com/users/astefan/events{/privacy}","received_events_url":"https://api.github.com/users/astefan/received_events","type":"User","site_admin":false},"created_at":"2020-05-29T12:16:35Z","updated_at":"2020-05-29T12:16:35Z","author_association":"CONTRIBUTOR","body":"What's a valid scenario for `pasword=foo`? This one should be caught by `Unknown parameter \"password\"; did you mean password`. I can see, though, a situation where `validate.properties = false` and that URL would pass... and later fail to be parsed by the URI class.\r\n\r\nFor debugging purposes, I still want the URL to be logged somehow and not hidden in its entirety. To be able to control the obfuscation, maybe we should consider creating our own URL parser. This would:\r\n- allow us to log whatever message we want at the desired parsing steps\r\n- help with https://github.com/elastic/elasticsearch/issues/56475. The `#` scenario may not be the only one to bit us.\r\n\r\n@costin thoughts?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/636059643","html_url":"https://github.com/elastic/elasticsearch/issues/56474#issuecomment-636059643","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56474","id":636059643,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNjA1OTY0Mw==","user":{"login":"bpintea","id":1562801,"node_id":"MDQ6VXNlcjE1NjI4MDE=","avatar_url":"https://avatars3.githubusercontent.com/u/1562801?v=4","gravatar_id":"","url":"https://api.github.com/users/bpintea","html_url":"https://github.com/bpintea","followers_url":"https://api.github.com/users/bpintea/followers","following_url":"https://api.github.com/users/bpintea/following{/other_user}","gists_url":"https://api.github.com/users/bpintea/gists{/gist_id}","starred_url":"https://api.github.com/users/bpintea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bpintea/subscriptions","organizations_url":"https://api.github.com/users/bpintea/orgs","repos_url":"https://api.github.com/users/bpintea/repos","events_url":"https://api.github.com/users/bpintea/events{/privacy}","received_events_url":"https://api.github.com/users/bpintea/received_events","type":"User","site_admin":false},"created_at":"2020-05-29T16:15:52Z","updated_at":"2020-05-29T16:15:52Z","author_association":"CONTRIBUTOR","body":"> What's a valid scenario for `pasword=foo`? \r\n\r\nI meant it as a typo, a misconfiguration.\r\n\r\n> This one should be caught by `Unknown parameter \"password\"; did you mean password`. I can see, though, a situation where `validate.properties = false` and that URL would pass... and later fail to be parsed by the URI class.\r\n\r\nCorrect. Or something \"easy\" like `user=foopassword=bar` would log a ` Invalid parameter [user=foopassword=bar], format needs to be key=value`.\r\n\r\n> maybe we should consider creating our own URL parser.\r\n\r\nWe could even use it as a fallback or as a front-end for `java.net.URI` and engage it only if that one fails.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/636154844","html_url":"https://github.com/elastic/elasticsearch/issues/56474#issuecomment-636154844","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56474","id":636154844,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNjE1NDg0NA==","user":{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false},"created_at":"2020-05-29T19:46:05Z","updated_at":"2020-05-29T19:46:05Z","author_association":"MEMBER","body":"We can take baby steps in improving the improving the existing situation. That is have a bit more understanding about the error code and use that inside the message.\r\n1. If the connection has failed all together, return only the URL and prefix without parameters (potentially)\r\n2. If the auth has failed (and we have a way to determine that) or something is wrong, try and look for the password and hide it (in the error message). If there's a typo or something along those lines, let the URL as is.\r\n\r\nAt the end of the day, this is about improving the user experience and cleaning security a bit.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/636287171","html_url":"https://github.com/elastic/elasticsearch/issues/56474#issuecomment-636287171","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56474","id":636287171,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNjI4NzE3MQ==","user":{"login":"bpintea","id":1562801,"node_id":"MDQ6VXNlcjE1NjI4MDE=","avatar_url":"https://avatars3.githubusercontent.com/u/1562801?v=4","gravatar_id":"","url":"https://api.github.com/users/bpintea","html_url":"https://github.com/bpintea","followers_url":"https://api.github.com/users/bpintea/followers","following_url":"https://api.github.com/users/bpintea/following{/other_user}","gists_url":"https://api.github.com/users/bpintea/gists{/gist_id}","starred_url":"https://api.github.com/users/bpintea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bpintea/subscriptions","organizations_url":"https://api.github.com/users/bpintea/orgs","repos_url":"https://api.github.com/users/bpintea/repos","events_url":"https://api.github.com/users/bpintea/events{/privacy}","received_events_url":"https://api.github.com/users/bpintea/received_events","type":"User","site_admin":false},"created_at":"2020-05-30T06:40:23Z","updated_at":"2020-05-30T06:40:23Z","author_association":"CONTRIBUTOR","body":"> return only the URL and prefix without parameters\r\n\r\nThe URL can still contain the credentials, since `jdbc:es://http(s)://user:pass@host:port` is another way to provide them.\r\n\r\n> If the auth has failed (and we have a way to determine that) or something is wrong, try and look for the password and hide it (in the error message)\r\n\r\nThe logging of parts or the entire URL only happens on URL parsing failure. In case the parsing succeeds we only log if authentication failed. Which simplifies a bit the situation, since we only need to consider parsing failure.\r\n\r\nThanks for the ideas, though, I'll try to come up with a simple extension to at least hint where the parsing jams and take it from there.","performed_via_github_app":null}]