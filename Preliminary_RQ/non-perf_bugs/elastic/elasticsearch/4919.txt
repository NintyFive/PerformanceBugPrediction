{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/4919","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4919/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4919/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4919/events","html_url":"https://github.com/elastic/elasticsearch/issues/4919","id":26422375,"node_id":"MDU6SXNzdWUyNjQyMjM3NQ==","number":4919,"title":"Can't return empty HTTP within REST plugin","user":{"login":"templth","id":558344,"node_id":"MDQ6VXNlcjU1ODM0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/558344?v=4","gravatar_id":"","url":"https://api.github.com/users/templth","html_url":"https://github.com/templth","followers_url":"https://api.github.com/users/templth/followers","following_url":"https://api.github.com/users/templth/following{/other_user}","gists_url":"https://api.github.com/users/templth/gists{/gist_id}","starred_url":"https://api.github.com/users/templth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/templth/subscriptions","organizations_url":"https://api.github.com/users/templth/orgs","repos_url":"https://api.github.com/users/templth/repos","events_url":"https://api.github.com/users/templth/events{/privacy}","received_events_url":"https://api.github.com/users/templth/received_events","type":"User","site_admin":false},"labels":[{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-01-28T08:09:58Z","updated_at":"2014-12-24T18:58:53Z","closed_at":"2014-12-24T18:58:53Z","author_association":"NONE","active_lock_reason":null,"body":"Within a REST plugin, I try to an HTTP response with no content (for example with a DELETE method) and I get a NullPointerException. This feature doesn't seem to be supported whereas we can only use the HTTP status code to notify the client about the result of a request (200 -> OK, 400 -> bad request, and so on).\n\nI tried to implement an EmptyRestResponse class, as described below, but I have exception when using it.\n\n```\npublic class EmptyRestResponse extends AbstractRestResponse {\n    private RestStatus status;\n\n    public EmptyRestResponse(RestStatus status) {\n        this.status = status;\n    }\n\n    @Override\n    public byte[] content() throws IOException {\n        return new byte[0];\n    }\n\n    @Override\n    public int contentLength() throws IOException {\n        return 0;\n    }\n\n    @Override\n    public int contentOffset() throws IOException {\n        return 0;\n    }\n\n    @Override\n    public boolean contentThreadSafe() {\n        return false;\n    }\n\n    @Override\n    public String contentType() {\n        return null;\n    }\n\n    @Override\n    public RestStatus status() {\n        return status;\n    }\n}\n```\n\nTo support such feature, we need to patch the NettyHttpChannel class to avoid null pointer exceptions and setting media type in all case. With empty result, we don't need the corresponding header. First of all, we could add a dedicated method to check is the response contains content or not. See the isEmptryResponse method below:\n\n```\nprivate boolean isEmptyResponse(RestResponse response) {\n    if (response instanceof XContentRestResponse) {\n        return false;\n    } else {\n        try {\n            return (response.content()==null\n                || response.content().length==0);\n        } catch(IOException e) {\n            throw new HttpException(\n                \"Failed to convert response to bytes\", e);\n        }\n    }\n}\n```\n\nThen we could use this method within the sendResponse method of the NettyHttpChannel class:\n\n```\n@Override\npublic void sendResponse(RestResponse response) {\n    (...)\n    if (!isEmptyResponse(response)) {\n        // Convert the response content to a ChannelBuffer.\n        ChannelBuffer buf;\n        (...)\n        resp.setContent(buf);\n        resp.headers().add(HttpHeaders.Names.CONTENT_TYPE,\n                           response.contentType());\n\n        resp.headers().add(HttpHeaders.Names.CONTENT_LENGTH,\n                           String.valueOf(buf.readableBytes()));\n    }\n    (...)\n}\n```\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}