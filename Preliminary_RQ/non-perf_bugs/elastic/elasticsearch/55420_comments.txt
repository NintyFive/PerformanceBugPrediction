[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/615444229","html_url":"https://github.com/elastic/elasticsearch/issues/55420#issuecomment-615444229","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55420","id":615444229,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTQ0NDIyOQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-04-17T20:15:16Z","updated_at":"2020-04-17T20:15:16Z","author_association":"COLLABORATOR","body":"Pinging @elastic/ml-core (:ml)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/615451239","html_url":"https://github.com/elastic/elasticsearch/issues/55420#issuecomment-615451239","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55420","id":615451239,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTQ1MTIzOQ==","user":{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false},"created_at":"2020-04-17T20:33:12Z","updated_at":"2020-04-17T20:33:12Z","author_association":"MEMBER","body":"@williamrandolph ping\r\n\r\nJust verified locally that  #54816 is causing the log spam. It MIGHT also be causing the intermittent failure. \r\n\r\nI have noticed in the past some weird behavior with`Fielddata breaker` checks and ingest pipelines. Node stats and memory allocations differ slightly with pipelines. I really only noticed this when pipelines were simulated in the test. I am not sure if the basic plugins being enabled are causing this intermittent behavior. My prime suspect is monitoring, but I am not sure.\r\n\r\nHistory: \r\n\r\nThe `IngestPipeline.Factory` is loaded up on ML nodes. It attempts to parse pipelines out and check if they are `inference` pipelines. If they are, it keeps a local tally of them. This is so we can have a setting that puts a sane upper limit on these processors. \r\n\r\nI think to fix this, we could enable all these ingest plugins/modules for the ML integration tests. That will get rid of the log spam at least. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/615465819","html_url":"https://github.com/elastic/elasticsearch/issues/55420#issuecomment-615465819","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55420","id":615465819,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTQ2NTgxOQ==","user":{"login":"williamrandolph","id":3253644,"node_id":"MDQ6VXNlcjMyNTM2NDQ=","avatar_url":"https://avatars3.githubusercontent.com/u/3253644?v=4","gravatar_id":"","url":"https://api.github.com/users/williamrandolph","html_url":"https://github.com/williamrandolph","followers_url":"https://api.github.com/users/williamrandolph/followers","following_url":"https://api.github.com/users/williamrandolph/following{/other_user}","gists_url":"https://api.github.com/users/williamrandolph/gists{/gist_id}","starred_url":"https://api.github.com/users/williamrandolph/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/williamrandolph/subscriptions","organizations_url":"https://api.github.com/users/williamrandolph/orgs","repos_url":"https://api.github.com/users/williamrandolph/repos","events_url":"https://api.github.com/users/williamrandolph/events{/privacy}","received_events_url":"https://api.github.com/users/williamrandolph/received_events","type":"User","site_admin":false},"created_at":"2020-04-17T21:12:37Z","updated_at":"2020-04-17T21:12:37Z","author_association":"CONTRIBUTOR","body":"@benwtrent Apologies for the log spam. I will try to fix it next week.\r\n\r\n> I think to fix this, we could enable all these ingest plugins/modules for the ML integration tests. That will get rid of the log spam at least.\r\n\r\nI'm not sure which plugins and modules are not already enabled. Do we need to configure the ML nodes to be ingest nodes?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/615467140","html_url":"https://github.com/elastic/elasticsearch/issues/55420#issuecomment-615467140","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55420","id":615467140,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTQ2NzE0MA==","user":{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false},"created_at":"2020-04-17T21:16:17Z","updated_at":"2020-04-17T21:16:17Z","author_association":"MEMBER","body":"I am not sure off hand why the `script` processor is loaded. But I think making sure it and the other processors referenced by the monitor plugin are loaded in the ML test cluster.\n\nI don't know how to do this, but I can also take a look next week.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/615470987","html_url":"https://github.com/elastic/elasticsearch/issues/55420#issuecomment-615470987","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55420","id":615470987,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTQ3MDk4Nw==","user":{"login":"williamrandolph","id":3253644,"node_id":"MDQ6VXNlcjMyNTM2NDQ=","avatar_url":"https://avatars3.githubusercontent.com/u/3253644?v=4","gravatar_id":"","url":"https://api.github.com/users/williamrandolph","html_url":"https://github.com/williamrandolph","followers_url":"https://api.github.com/users/williamrandolph/followers","following_url":"https://api.github.com/users/williamrandolph/following{/other_user}","gists_url":"https://api.github.com/users/williamrandolph/gists{/gist_id}","starred_url":"https://api.github.com/users/williamrandolph/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/williamrandolph/subscriptions","organizations_url":"https://api.github.com/users/williamrandolph/orgs","repos_url":"https://api.github.com/users/williamrandolph/repos","events_url":"https://api.github.com/users/williamrandolph/events{/privacy}","received_events_url":"https://api.github.com/users/williamrandolph/received_events","type":"User","site_admin":false},"created_at":"2020-04-17T21:25:56Z","updated_at":"2020-04-17T21:26:07Z","author_association":"CONTRIBUTOR","body":"Ah, I just noticed that `xpack.monitoring.elasticsearch.collection.enabled` has a default value of `true`. I could try setting this to `false` for all the tests that formerly had `xpack.monitoring.enabled` set to `false`.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/616078535","html_url":"https://github.com/elastic/elasticsearch/issues/55420#issuecomment-616078535","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55420","id":616078535,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNjA3ODUzNQ==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2020-04-19T08:48:07Z","updated_at":"2020-04-19T08:48:07Z","author_association":"CONTRIBUTOR","body":"We have had this \"Accounting breaker not reset\" error before in integration tests and the cause was that indices were being recreated simultaneously with the cleanup method that deletes all the indices in between tests.\r\n\r\nI had a look at the server side logs for one of these failures, https://gradle-enterprise.elastic.co/s/r7ybldwftir2s/tests/zcquf3hc3eoc6-7mybzxk4lp3n2, to see which index it was that was created during cleanup.\r\n\r\nIn that test run the failing test was `CategorizationIT.testCategorizationWithFilters` and it finished at 2020-04-19T00:53:15,933:\r\n\r\n```\r\n[2020-04-19T00:53:15,933][INFO ][o.e.x.m.i.CategorizationIT] [testCategorizationWithFilters] after test\r\n```\r\n\r\nLooking at the server side logs for what was going on with indices around that time we see this:\r\n\r\n```\r\n[2020-04-18T19:53:15,704][INFO ][o.e.x.i.IndexLifecycleTransition] [integTest-2] moving index [ilm-history-2-000001] from [{\"phase\":\"new\",\"action\":\"complete\",\"name\":\"complete\"}] to [{\"phase\":\"hot\",\"action\":\"unfollow\",\"name\":\"wait-for-indexing-complete\"}] in policy [ilm-history-ilm-policy]\r\n[2020-04-18T19:53:15,819][INFO ][o.e.x.i.IndexLifecycleTransition] [integTest-2] moving index [ilm-history-2-000001] from [{\"phase\":\"hot\",\"action\":\"unfollow\",\"name\":\"wait-for-indexing-complete\"}] to [{\"phase\":\"hot\",\"action\":\"unfollow\",\"name\":\"wait-for-follow-shard-tasks\"}] in policy [ilm-history-ilm-policy]\r\n```\r\n\r\nThe timezone for those messages is 5 hours behind the client timezone, so in reality they're just a about a 100-200ms before the test finished.  The accounting breaker assertion tripped on node 1 whereas those messages are from node 2, so it's reasonable to think that node 1 would gain visibility of the creation of the ILM history index at the time the assertion tripped during the post test cleanup.\r\n\r\nAsync creation of internal indices has always been a problem for integration tests that try to remove all indices in between tests.  Something similar is happening for templates in the same server-side log file:\r\n\r\n```\r\n[2020-04-18T19:53:14,242][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] removing template [.ml-anomalies-]\r\n[2020-04-18T19:53:14,394][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] adding template [.ml-anomalies-] for index patterns [.ml-anomalies-*]\r\n[2020-04-18T19:53:14,453][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] removing template [.ml-notifications-000001]\r\n[2020-04-18T19:53:14,544][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] adding template [.ml-notifications-000001] for index patterns [.ml-notifications-000001]\r\n[2020-04-18T19:53:14,598][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] removing template [.ml-inference-000002]\r\n[2020-04-18T19:53:14,683][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] adding template [.ml-inference-000002] for index patterns [.ml-inference-000002]\r\n[2020-04-18T19:53:14,736][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] removing template [.ml-state]\r\n[2020-04-18T19:53:14,822][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] adding template [.ml-state] for index patterns [.ml-state*] \r\n[2020-04-18T19:53:14,875][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] removing template [.ml-meta]\r\n[2020-04-18T19:53:14,958][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] adding template [.ml-meta] for index patterns [.ml-meta] \r\n[2020-04-18T19:53:15,014][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] removing template [random_index_template]\r\n[2020-04-18T19:53:15,068][INFO ][o.e.x.i.IndexLifecycleTransition] [integTest-2] moving index [ilm-history-2-000001] from [null] to [{\"phase\":\"new\",\"action\":\"complete\",\"name\":\"complete\"}] in policy [ilm-history-ilm-policy]\r\n[2020-04-18T19:53:15,122][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] removing template [.ml-stats]\r\n[2020-04-18T19:53:15,227][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] adding template [.ml-stats] for index patterns [.ml-stats-*]\r\n[2020-04-18T19:53:15,288][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] removing template [.ml-config]\r\n[2020-04-18T19:53:15,370][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] adding template [.ml-config] for index patterns [.ml-config]\r\n[2020-04-18T19:53:15,426][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] removing template [.slm-history]\r\n[2020-04-18T19:53:15,511][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] adding template [.slm-history] for index patterns [.slm-history-2*]\r\n[2020-04-18T19:53:15,565][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] removing template [ilm-history]\r\n[2020-04-18T19:53:15,647][INFO ][o.e.c.m.MetadataIndexTemplateService] [integTest-2] adding template [ilm-history] for index patterns [ilm-history-2*]\r\n```\r\n\r\nIn between the tests the post test cleanup in the client removes all the templates and then the template auto-creation functionality in the server fights back immediately to recreate the same templates. 🤦 \r\n\r\nSo I would guess that the reason #54816 has aggravated this is that some component that uses ILM is now enabled by default (it's not ILM itself as that was always enabled by default).  I cannot work out what, as monitoring still seems to be disabled in the ML native multi-node tests, unless something overrides https://github.com/elastic/elasticsearch/blob/92c8a73348055e5784fc82a1c5e1d346f3167b1a/x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/MlNativeIntegTestCase.java#L135\r\n\r\nBut when monitoring eventually is enabled, that will make the problem of test cleanup fighting async actions even worse.  Therefore I think we need a new approach to cleanup in between the ML native multi-node integration tests: we should _only_ wipe ML indices and data indices.  We should leave the internal indices of other ES functionality like ILM, monitoring and security alone between tests.  Also, there's no need for us to remove the ML index templates between the native multi-node tests, because we're not testing upgrade, so the templates will be the same for all the tests.\r\n\r\nUnfortunately this change to cleanup logic will need to be done in two places, because the native multi-node tests are a mixture of REST tests and Java client tests - see #49582.  So the (completely different) cleanup code used for both these types of ML native multi-node tests will need to be changed to be consistent 😬.\r\n\r\nThe problem with the script plugin not being available generating lots of log spam since #54816 still needs to be fixed, but that is separate to the problem of cleanup in between tests.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/616523051","html_url":"https://github.com/elastic/elasticsearch/issues/55420#issuecomment-616523051","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55420","id":616523051,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNjUyMzA1MQ==","user":{"login":"hendrikmuhs","id":7126422,"node_id":"MDQ6VXNlcjcxMjY0MjI=","avatar_url":"https://avatars3.githubusercontent.com/u/7126422?v=4","gravatar_id":"","url":"https://api.github.com/users/hendrikmuhs","html_url":"https://github.com/hendrikmuhs","followers_url":"https://api.github.com/users/hendrikmuhs/followers","following_url":"https://api.github.com/users/hendrikmuhs/following{/other_user}","gists_url":"https://api.github.com/users/hendrikmuhs/gists{/gist_id}","starred_url":"https://api.github.com/users/hendrikmuhs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hendrikmuhs/subscriptions","organizations_url":"https://api.github.com/users/hendrikmuhs/orgs","repos_url":"https://api.github.com/users/hendrikmuhs/repos","events_url":"https://api.github.com/users/hendrikmuhs/events{/privacy}","received_events_url":"https://api.github.com/users/hendrikmuhs/received_events","type":"User","site_admin":false},"created_at":"2020-04-20T12:32:45Z","updated_at":"2020-04-20T12:32:45Z","author_association":"CONTRIBUTOR","body":"another one: https://gradle-enterprise.elastic.co/s/xhmbqjq2psh5c\r\n\r\n(This time `ScheduledEventsIT.testScheduledEventWithInterimResults`)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/616548843","html_url":"https://github.com/elastic/elasticsearch/issues/55420#issuecomment-616548843","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55420","id":616548843,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNjU0ODg0Mw==","user":{"login":"williamrandolph","id":3253644,"node_id":"MDQ6VXNlcjMyNTM2NDQ=","avatar_url":"https://avatars3.githubusercontent.com/u/3253644?v=4","gravatar_id":"","url":"https://api.github.com/users/williamrandolph","html_url":"https://github.com/williamrandolph","followers_url":"https://api.github.com/users/williamrandolph/followers","following_url":"https://api.github.com/users/williamrandolph/following{/other_user}","gists_url":"https://api.github.com/users/williamrandolph/gists{/gist_id}","starred_url":"https://api.github.com/users/williamrandolph/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/williamrandolph/subscriptions","organizations_url":"https://api.github.com/users/williamrandolph/orgs","repos_url":"https://api.github.com/users/williamrandolph/repos","events_url":"https://api.github.com/users/williamrandolph/events{/privacy}","received_events_url":"https://api.github.com/users/williamrandolph/received_events","type":"User","site_admin":false},"created_at":"2020-04-20T13:21:20Z","updated_at":"2020-04-20T13:21:20Z","author_association":"CONTRIBUTOR","body":"I've opened a PR that I hope will at least get rid of the log spam in the ML multinode tests: https://github.com/elastic/elasticsearch/pull/55461","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/616609151","html_url":"https://github.com/elastic/elasticsearch/issues/55420#issuecomment-616609151","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55420","id":616609151,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNjYwOTE1MQ==","user":{"login":"jrodewig","id":40268737,"node_id":"MDQ6VXNlcjQwMjY4NzM3","avatar_url":"https://avatars1.githubusercontent.com/u/40268737?v=4","gravatar_id":"","url":"https://api.github.com/users/jrodewig","html_url":"https://github.com/jrodewig","followers_url":"https://api.github.com/users/jrodewig/followers","following_url":"https://api.github.com/users/jrodewig/following{/other_user}","gists_url":"https://api.github.com/users/jrodewig/gists{/gist_id}","starred_url":"https://api.github.com/users/jrodewig/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrodewig/subscriptions","organizations_url":"https://api.github.com/users/jrodewig/orgs","repos_url":"https://api.github.com/users/jrodewig/repos","events_url":"https://api.github.com/users/jrodewig/events{/privacy}","received_events_url":"https://api.github.com/users/jrodewig/received_events","type":"User","site_admin":false},"created_at":"2020-04-20T14:59:01Z","updated_at":"2020-04-20T14:59:01Z","author_association":"CONTRIBUTOR","body":"Related build failure: https://gradle-enterprise.elastic.co/s/cyx2laofbzs72/tests/zcquf3hc3eoc6-iu7t2hi7meoko","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/616679505","html_url":"https://github.com/elastic/elasticsearch/issues/55420#issuecomment-616679505","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55420","id":616679505,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNjY3OTUwNQ==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2020-04-20T16:52:02Z","updated_at":"2020-04-20T16:52:02Z","author_association":"CONTRIBUTOR","body":"Hopefully #55459 will fix this.  Given how frequently it was failing before we should know within a half a day or so.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/617073956","html_url":"https://github.com/elastic/elasticsearch/issues/55420#issuecomment-617073956","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/55420","id":617073956,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzA3Mzk1Ng==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2020-04-21T09:45:18Z","updated_at":"2020-04-21T09:45:18Z","author_association":"CONTRIBUTOR","body":"I haven't seen any failures of this type since #55459 passed the intake build, so it looks like it's fixed.","performed_via_github_app":null}]