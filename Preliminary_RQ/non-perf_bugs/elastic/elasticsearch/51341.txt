{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/51341","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51341/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51341/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51341/events","html_url":"https://github.com/elastic/elasticsearch/issues/51341","id":553971557,"node_id":"MDU6SXNzdWU1NTM5NzE1NTc=","number":51341,"title":"Feature request: structural object type matching in dynamic templates","user":{"login":"axw","id":843579,"node_id":"MDQ6VXNlcjg0MzU3OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/843579?v=4","gravatar_id":"","url":"https://api.github.com/users/axw","html_url":"https://github.com/axw","followers_url":"https://api.github.com/users/axw/followers","following_url":"https://api.github.com/users/axw/following{/other_user}","gists_url":"https://api.github.com/users/axw/gists{/gist_id}","starred_url":"https://api.github.com/users/axw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/axw/subscriptions","organizations_url":"https://api.github.com/users/axw/orgs","repos_url":"https://api.github.com/users/axw/repos","events_url":"https://api.github.com/users/axw/events{/privacy}","received_events_url":"https://api.github.com/users/axw/received_events","type":"User","site_admin":false},"labels":[{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":1967498216,"node_id":"MDU6TGFiZWwxOTY3NDk4MjE2","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Search","name":"Team:Search","color":"fef2c0","default":false,"description":"Meta label for search team"},{"id":1903451964,"node_id":"MDU6TGFiZWwxOTAzNDUxOTY0","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Top%20Ask","name":"Top Ask","color":"fef2c0","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"assignees":[{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false}],"milestone":null,"comments":16,"created_at":"2020-01-23T06:55:28Z","updated_at":"2020-09-03T16:56:27Z","closed_at":"2020-09-03T16:56:26Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Background\r\n\r\nOver in Elastic APM we're investigating extending our support for application metrics. We already support recording simple, single-value metrics. We're now looking at adding support for histograms, which would be indexed using the [histogram](https://github.com/elastic/elasticsearch/pull/48580) field type. Later we may want to add support for ingesting simpler summary metrics, indexed using the proposed [aggregate_metric](https://github.com/elastic/elasticsearch/pull/49830) field type.\r\n\r\n### Problem\r\n\r\nMetric names are not known (to us) up front, so we rely on dynamic mapping to give the fields the appropriate field type. Until now we've gotten away without any dynamic templates, as the metrics we support now are all simple single-value ones (counters/gauges).\r\n\r\nBecause histograms are indexed as an object with a conventional structure (`{\"values\": [...], \"counts\": [...]}`), the field mapping must first be explicitly defined or we'll end up with two distinct numeric fields.\r\n\r\n### Proposed solution\r\n\r\nExtend [dynamic templates](https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-templates.html#dynamic-templates) with a means of matching objects (i.e. `\"match_mapping_type\": \"object\"`) only when their fields match some criteria. Something along these lines:\r\n\r\n```json\r\nPUT metrics\r\n{\r\n  \"mappings\": {\r\n    \"dynamic_templates\": [\r\n      {\r\n        \"histograms\": {\r\n          \"match_mapping_type\": \"object\",\r\n          \"match_mapping_fields\": {\r\n            \"values\": {\"match_mapping_type\": \"double\"},\r\n            \"counts\": {\"match_mapping_type\": \"long\"}\r\n          },\r\n          \"mapping\": {\r\n            \"type\": \"histogram\"\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nIdeally there would be a way of specifying that the set of fields is complete, along the lines of `\"dynamic\": \"strict\"` in mappings. For `aggregate_metric` fields we might \r\n\r\n### Alternatives\r\n\r\nWe could impose a path naming scheme, where histogram metrics are given a final field name of \"histogram\", and then use `path_match: \"*.histogram\"` and `match_mapping_type: object`. This would be a bit of an ugly artefact, particularly as it would end up in the UI through search completions, Metric Explorer dropdowns, etc. Ideally the name would be exactly what the user defined in the first place, which is what we store today.","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}