[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/321255452","html_url":"https://github.com/elastic/elasticsearch/issues/26118#issuecomment-321255452","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26118","id":321255452,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMTI1NTQ1Mg==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-08-09T13:29:57Z","updated_at":"2017-08-09T13:29:57Z","author_association":"MEMBER","body":"The same question was recently asked in our [forums](https://discuss.elastic.co/t/cross-cluster-errors-if-remote-cluster-cannot-be-reached/95355). \r\n\r\nThe problem you are facing is that none of the nodes are available in one of the remote clusters.\r\n\r\nWhen doing a cross cluster search, one node per remote cluster is initially contacted to find out where the shards for such request are located. If this step cannot be completed, the whole search request fails. If you had at least one node available in each of the clusters, the search would rather go on although some other nodes, potentially nodes holding relevant shards, are down. This would just cause partial results, but not a total failure.\r\n\r\nI don’t see a way to work around this other than checking upfront which remote clusters are online and avoid querying the ones that are completely down. In fact cross cluster search wasn't thought to query multiple clusters where some of them can just be shut down completely. Not too sure whether we want to change this, @s1monw what do you think?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/322117560","html_url":"https://github.com/elastic/elasticsearch/issues/26118#issuecomment-322117560","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26118","id":322117560,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMjExNzU2MA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2017-08-14T07:24:48Z","updated_at":"2017-08-14T07:24:48Z","author_association":"CONTRIBUTOR","body":"> I don’t see a way to work around this other than checking upfront which remote clusters are online and avoid querying the ones that are completely down. In fact cross cluster search wasn't thought to query multiple clusters where some of them can just be shut down completely. Not too sure whether we want to change this, @s1monw what do you think?\r\n\r\nI think the problem is not as simple as it's presented here. What happens if a cluster is not connected toady is that we try to reconnect. If we _check_ up-front if a cluster is not connected then we need to skip this step? What should the behavior be? I think we can look into something like an additional setting that simply treats the cluster as not present if it can't be reconnected but I want to make sure that such a setting doesn't complicate the code too much. I think it would be confusing if we'd not fail here it's really a different issue than an unavailable shard. \r\n\r\nAnother maybe more consistent option would be to skip those clusters when we resolve wildcards. We would still need to figure out when we try to reconnect to them since we usually do that as part of the search request.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/324854935","html_url":"https://github.com/elastic/elasticsearch/issues/26118#issuecomment-324854935","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26118","id":324854935,"node_id":"MDEyOklzc3VlQ29tbWVudDMyNDg1NDkzNQ==","user":{"login":"acristu","id":6796822,"node_id":"MDQ6VXNlcjY3OTY4MjI=","avatar_url":"https://avatars1.githubusercontent.com/u/6796822?v=4","gravatar_id":"","url":"https://api.github.com/users/acristu","html_url":"https://github.com/acristu","followers_url":"https://api.github.com/users/acristu/followers","following_url":"https://api.github.com/users/acristu/following{/other_user}","gists_url":"https://api.github.com/users/acristu/gists{/gist_id}","starred_url":"https://api.github.com/users/acristu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acristu/subscriptions","organizations_url":"https://api.github.com/users/acristu/orgs","repos_url":"https://api.github.com/users/acristu/repos","events_url":"https://api.github.com/users/acristu/events{/privacy}","received_events_url":"https://api.github.com/users/acristu/received_events","type":"User","site_admin":false},"created_at":"2017-08-25T08:21:24Z","updated_at":"2017-08-25T08:23:11Z","author_association":"NONE","body":"An use case would be to give a user access to disjoint data sets in different data centers.\r\nFor this use case we would like to be able to query the clusters that are reachable and ignore the rest. \r\n\r\nAlso from the DevOps standpoint it would not be nice to have dependencies between data centers.\r\nAutomation can be done in many different ways, CM tools run (Chef, Ansible, etc) and/or cloud or container-based deployments (OpenStack HEAT stacks, docker swarm, etc). It should be possible to start all elasticsearch nodes local to the datacenter and those nodes to accept writes and local reads and hopefully cross-cluster searches for all reachable clusters.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/330487137","html_url":"https://github.com/elastic/elasticsearch/issues/26118#issuecomment-330487137","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26118","id":330487137,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMDQ4NzEzNw==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2017-09-19T09:43:52Z","updated_at":"2017-09-19T09:43:52Z","author_association":"CONTRIBUTOR","body":"@acristu sorry for coming back to this so late. I took a closer look at it and my current plan is to allow you to set a setting `search.remote.$clustername.ignore_disconnected` that defaults to `false` and that allows you to set this per cluster you are connecting to. such that the default behavior is still unchanged but it allows you to basically skip clusters entirely if they are optional. This also allows for mandatory clusters which I personally see as a valid usecase here  as well. WDYT /cc @javanna ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/330496747","html_url":"https://github.com/elastic/elasticsearch/issues/26118#issuecomment-330496747","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26118","id":330496747,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMDQ5Njc0Nw==","user":{"login":"acristu","id":6796822,"node_id":"MDQ6VXNlcjY3OTY4MjI=","avatar_url":"https://avatars1.githubusercontent.com/u/6796822?v=4","gravatar_id":"","url":"https://api.github.com/users/acristu","html_url":"https://github.com/acristu","followers_url":"https://api.github.com/users/acristu/followers","following_url":"https://api.github.com/users/acristu/following{/other_user}","gists_url":"https://api.github.com/users/acristu/gists{/gist_id}","starred_url":"https://api.github.com/users/acristu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acristu/subscriptions","organizations_url":"https://api.github.com/users/acristu/orgs","repos_url":"https://api.github.com/users/acristu/repos","events_url":"https://api.github.com/users/acristu/events{/privacy}","received_events_url":"https://api.github.com/users/acristu/received_events","type":"User","site_admin":false},"created_at":"2017-09-19T10:23:29Z","updated_at":"2017-09-19T10:23:29Z","author_association":"NONE","body":"@s1monw thank you, sounds good, this new setting hopefully will allow:\r\n\r\n- Elasticsearch process to start even if the remote cluster is unreachable\r\n- Queries to return data from the local cluster and the reachable remote clusters\r\n- Have a way to check if the query results contain data from the \"optional\" remote clusters\r\n    * Don't know yet what would be a straight forward way to do this. The _index field contains the cluster alias, checking this point for each query is not feasible. Perhaps just polling using a health-check API call is the best we can do\r\n- related to the previous point, the ability to display the status of the remote clusters on a Kibana dashboard to make it clear to the user that the data is incomplete\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/330524425","html_url":"https://github.com/elastic/elasticsearch/issues/26118#issuecomment-330524425","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26118","id":330524425,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMDUyNDQyNQ==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-09-19T12:33:27Z","updated_at":"2017-09-19T12:33:27Z","author_association":"MEMBER","body":"@s1monw ++ I like the idea","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/330534951","html_url":"https://github.com/elastic/elasticsearch/issues/26118#issuecomment-330534951","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26118","id":330534951,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMDUzNDk1MQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2017-09-19T13:14:26Z","updated_at":"2017-09-19T13:14:44Z","author_association":"CONTRIBUTOR","body":"> Have a way to check if the query results contain data from the \"optional\" remote clusters\r\n\r\nI think we can do something about it. For instance we can maybe even make this default and add a `_cluster` part to the response ie.:\r\n\r\n```JSON\r\n\r\n  \"_shards\" : {\r\n    \"total\" : 5,\r\n    \"successful\" : 5,\r\n    \"skipped\" : 0,\r\n    \"failed\" : 0\r\n  },\r\n  \"_clusters\" : {\r\n    \"total\" : 2,\r\n    \"successful\": 1,\r\n    \"skipped\": 1\r\n  }\r\n```\r\n\r\nthis way we can simply let the user decide what they want to do and it's consistent with the `_shards`. @javanna WDYT?\r\n","performed_via_github_app":null}]