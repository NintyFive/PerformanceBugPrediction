[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/161283766","html_url":"https://github.com/elastic/elasticsearch/issues/15179#issuecomment-161283766","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15179","id":161283766,"node_id":"MDEyOklzc3VlQ29tbWVudDE2MTI4Mzc2Ng==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-12-02T12:55:53Z","updated_at":"2015-12-02T12:55:53Z","author_association":"CONTRIBUTOR","body":"Hi @jmatraszek \n\nThanks for the full recreation.  \n\n> Strangely, the same query works OK when the query is not read from file, but posted \"inline\":\n\nI get the same failure whether I use a file or post inline.  The first issue is that you always need to specify full paths for fields, so you should specify `locations.geohash` instead of just `geohash`.  However, when you do this, you now get the exception `failed to find geo_point field [locations]`.\n\nThe reason for this is the use of the `{ \"field\": {\"geohash\": \"s7ws01wyd7ws\" }}` format, which is undocumented and I was certainly unaware that it existed.  The documented format is `{\"field\": \"s7ws01wyd7ws\"}`.\n\nHowever, this undocumented format is interfering with your query as it strips `geohash` off the path name to leave just `locations`. It works if you run it as follows:\n\n```\nPOST /campaigns/_search\n{\n  \"query\": {\n    \"nested\": {\n      \"path\": \"locations\",\n      \"filter\": {\n        \"geo_distance\": {\n          \"distance\": \"100.0km\",\n          \"locations.geohash.geohash\": \"s7ws01wyd7ws\"\n        }\n      }\n    }\n  }\n}\n```\n\nI think we should just remove the ability to specify a geohash with `{ \"field\": { \"geohash\": \"s7ws01wyd7ws\"}}` and this problem will be solved.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/170195183","html_url":"https://github.com/elastic/elasticsearch/issues/15179#issuecomment-170195183","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15179","id":170195183,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDE5NTE4Mw==","user":{"login":"nknize","id":830187,"node_id":"MDQ6VXNlcjgzMDE4Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/830187?v=4","gravatar_id":"","url":"https://api.github.com/users/nknize","html_url":"https://github.com/nknize","followers_url":"https://api.github.com/users/nknize/followers","following_url":"https://api.github.com/users/nknize/following{/other_user}","gists_url":"https://api.github.com/users/nknize/gists{/gist_id}","starred_url":"https://api.github.com/users/nknize/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nknize/subscriptions","organizations_url":"https://api.github.com/users/nknize/orgs","repos_url":"https://api.github.com/users/nknize/repos","events_url":"https://api.github.com/users/nknize/events{/privacy}","received_events_url":"https://api.github.com/users/nknize/received_events","type":"User","site_admin":false},"created_at":"2016-01-09T04:50:40Z","updated_at":"2016-01-09T04:52:11Z","author_association":"CONTRIBUTOR","body":"This is an interesting one. Turned out to be a very good catch! Its actually not a problem that you can specify a geohash with `{\"field\" : { \"geohash\": \"...\" }}`  Its superfluous, but has been supported since 1.0.0.Beta1 (see PR #3352 where documentation is mentioned but not actually added). Removing it will have no effect here but I'll open a separate issue to remove it anyway.\n\nIn this case its a simple name clash. The mapping defines a sub-field `\"geohash\"` for the `\"locations\"` nested field. The string \"geohash\" is the same as the `geohash` extension that signals to the query parser the point is encoded as a geohash.  \n\nSo if you pass `\"locations.geohash\"` the query parser sees the `.geohash` extension, parses the point, strips the extension, then fails to find a `geo_point` type for the `locations` nested type.\n\nOne immediate solution is exactly what @clintongormley suggested: pass the full `\"locations.geohash.geohash\"` path. This tells the query parser, \"the subfield named 'geohash', for nested field 'locations' will be in a geohash format\". \nThe other solution is to simply rename the `geohash` sub-field so there's no naming clash.\n\nIn pre-2.x (before GeoPointV2) its actually more scary if you name clash with multi-fields. No exception will be thrown because it won't query on the expected `geohash` sub-field. Certainly problematic for prefix queries. So again, great find - this is definitely trappy! I'll open a PR to fix it on master and backport.\n","performed_via_github_app":null}]