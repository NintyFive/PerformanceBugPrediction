[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/288845767","html_url":"https://github.com/elastic/elasticsearch/issues/23726#issuecomment-288845767","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23726","id":288845767,"node_id":"MDEyOklzc3VlQ29tbWVudDI4ODg0NTc2Nw==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2017-03-23T20:12:16Z","updated_at":"2017-03-23T20:12:16Z","author_association":"MEMBER","body":"Is it in the case of an exception in the pipeline? I mean that we don't have conditionals so why would you not index a document that you sent to indexation process?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/288846246","html_url":"https://github.com/elastic/elasticsearch/issues/23726#issuecomment-288846246","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23726","id":288846246,"node_id":"MDEyOklzc3VlQ29tbWVudDI4ODg0NjI0Ng==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-03-23T20:14:01Z","updated_at":"2017-03-23T20:14:01Z","author_association":"CONTRIBUTOR","body":"Conditionals are next ;) (although there are scripts anyway)\r\n\r\nBut eg a document is going to an index that I no longer want to use - I want to be able to drop the document instead","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/288846769","html_url":"https://github.com/elastic/elasticsearch/issues/23726#issuecomment-288846769","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23726","id":288846769,"node_id":"MDEyOklzc3VlQ29tbWVudDI4ODg0Njc2OQ==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2017-03-23T20:16:04Z","updated_at":"2017-03-23T20:16:04Z","author_association":"MEMBER","body":"I wonder if we should have a `drop` processor to implement that. As we have the same feature in Logstash... https://www.elastic.co/guide/en/logstash/current/plugins-filters-drop.html","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/288848135","html_url":"https://github.com/elastic/elasticsearch/issues/23726#issuecomment-288848135","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23726","id":288848135,"node_id":"MDEyOklzc3VlQ29tbWVudDI4ODg0ODEzNQ==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2017-03-23T20:21:29Z","updated_at":"2017-03-23T20:30:28Z","author_association":"CONTRIBUTOR","body":"@clintongormley I know Beats requested this feature a while back... I was not aware that an empty string `_index` results in a successful non-index?\r\n\r\nOne way to achieve this is to run a `fail` processor. The difference here is that we would not return back a `2XX` for this request, and the client would think there was a problem, instead of \"dropping was successful\".\r\n\r\nWould ES need to change to support this? I tried indexing a document with an empty `_index` and get this:\r\n\r\n```json\r\n{\r\n  \"took\": 0,\r\n  \"errors\": true,\r\n  \"items\": [\r\n    {\r\n      \"index\": {\r\n        \"_index\": \"\",\r\n        \"_type\": \"type\",\r\n        \"_id\": \"id\",\r\n        \"status\": 500,\r\n        \"error\": {\r\n          \"type\": \"string_index_out_of_bounds_exception\",\r\n          \"reason\": \"String index out of range: 0\"\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n\r\nmaybe if we introduce a new status for index items that are intended to be dropped? Maybe the pipeline can update metadata that will follow-up with an index request with a `drop` flag? since we would have to return a response to the user about this operation so the `items` array aligns with the request body\r\n\r\nand respond with:\r\n\r\n```json\r\n{\r\n  \"took\": 884,\r\n  \"errors\": false,\r\n  \"items\": [\r\n    {\r\n      \"index\": {\r\n        \"_index\": \"\",\r\n        \"_type\": \"type\",\r\n        \"_id\": \"id\",\r\n        \"_version\": 1,\r\n        \"result\": \"dropped\",\r\n        \"created\": false,\r\n        \"status\": 200\r\n      }\r\n    }\r\n  ]\r\n}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/288970332","html_url":"https://github.com/elastic/elasticsearch/issues/23726#issuecomment-288970332","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23726","id":288970332,"node_id":"MDEyOklzc3VlQ29tbWVudDI4ODk3MDMzMg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-03-24T09:12:25Z","updated_at":"2017-03-24T09:12:25Z","author_association":"CONTRIBUTOR","body":">  I was not aware that an empty string _index results in a successful non-index?\r\n\r\nNo, it was a suggestion.  I see the same string length exception that you do.\r\n\r\nI like your suggested response for the `drop` processor.\r\n\r\nThe one problem is that I don't see how to trigger the `drop` processor without conditionals.  I want to say: \"if the index is Foo, then drop this document\".  There's no easy way to do this.  The only conditionals I have are in a script, but then I can't use that to call the `drop` processor unless I throw some dummy exception to trigger an `on_failure` handler.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/288971967","html_url":"https://github.com/elastic/elasticsearch/issues/23726#issuecomment-288971967","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23726","id":288971967,"node_id":"MDEyOklzc3VlQ29tbWVudDI4ODk3MTk2Nw==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2017-03-24T09:20:02Z","updated_at":"2017-03-24T09:20:02Z","author_association":"MEMBER","body":"For now (before we have conditionals - was not aware that was a plan BTW), `on_failure` seems to be the way to go.\r\nI wonder if we can in a script throw a NoOpException which does not print any warn in logs but just triggers the `on_failure` pipeline.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/288972133","html_url":"https://github.com/elastic/elasticsearch/issues/23726#issuecomment-288972133","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23726","id":288972133,"node_id":"MDEyOklzc3VlQ29tbWVudDI4ODk3MjEzMw==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2017-03-24T09:20:47Z","updated_at":"2017-03-24T09:20:47Z","author_association":"MEMBER","body":"That said we can also support both. If `index` is empty or null, skip the operation.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/314122240","html_url":"https://github.com/elastic/elasticsearch/issues/23726#issuecomment-314122240","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23726","id":314122240,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNDEyMjI0MA==","user":{"login":"PhaedrusTheGreek","id":4387023,"node_id":"MDQ6VXNlcjQzODcwMjM=","avatar_url":"https://avatars0.githubusercontent.com/u/4387023?v=4","gravatar_id":"","url":"https://api.github.com/users/PhaedrusTheGreek","html_url":"https://github.com/PhaedrusTheGreek","followers_url":"https://api.github.com/users/PhaedrusTheGreek/followers","following_url":"https://api.github.com/users/PhaedrusTheGreek/following{/other_user}","gists_url":"https://api.github.com/users/PhaedrusTheGreek/gists{/gist_id}","starred_url":"https://api.github.com/users/PhaedrusTheGreek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PhaedrusTheGreek/subscriptions","organizations_url":"https://api.github.com/users/PhaedrusTheGreek/orgs","repos_url":"https://api.github.com/users/PhaedrusTheGreek/repos","events_url":"https://api.github.com/users/PhaedrusTheGreek/events{/privacy}","received_events_url":"https://api.github.com/users/PhaedrusTheGreek/received_events","type":"User","site_admin":false},"created_at":"2017-07-10T14:26:41Z","updated_at":"2017-07-10T14:26:41Z","author_association":"CONTRIBUTOR","body":"+1 for a clean way to drop messages","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/373428430","html_url":"https://github.com/elastic/elasticsearch/issues/23726#issuecomment-373428430","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23726","id":373428430,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MzQyODQzMA==","user":{"login":"talevy","id":388837,"node_id":"MDQ6VXNlcjM4ODgzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/388837?v=4","gravatar_id":"","url":"https://api.github.com/users/talevy","html_url":"https://github.com/talevy","followers_url":"https://api.github.com/users/talevy/followers","following_url":"https://api.github.com/users/talevy/following{/other_user}","gists_url":"https://api.github.com/users/talevy/gists{/gist_id}","starred_url":"https://api.github.com/users/talevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/talevy/subscriptions","organizations_url":"https://api.github.com/users/talevy/orgs","repos_url":"https://api.github.com/users/talevy/repos","events_url":"https://api.github.com/users/talevy/events{/privacy}","received_events_url":"https://api.github.com/users/talevy/received_events","type":"User","site_admin":false},"created_at":"2018-03-15T16:00:30Z","updated_at":"2018-03-15T16:00:30Z","author_association":"CONTRIBUTOR","body":"Closing due to the lack of infrastructure for properly handling this.\r\n\r\nFeel free to re-open if this comes up again","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/407019222","html_url":"https://github.com/elastic/elasticsearch/issues/23726#issuecomment-407019222","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23726","id":407019222,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzAxOTIyMg==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2018-07-23T10:58:24Z","updated_at":"2018-07-23T10:58:24Z","author_association":"MEMBER","body":"Hurray! We are going to support it finally! See #32278","performed_via_github_app":null}]