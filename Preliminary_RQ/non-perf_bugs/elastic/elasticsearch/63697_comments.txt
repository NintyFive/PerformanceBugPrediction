[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/708572449","html_url":"https://github.com/elastic/elasticsearch/issues/63697#issuecomment-708572449","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63697","id":708572449,"node_id":"MDEyOklzc3VlQ29tbWVudDcwODU3MjQ0OQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-10-14T18:10:26Z","updated_at":"2020-10-14T18:10:26Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra (:Core/Infra/Build)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/708675435","html_url":"https://github.com/elastic/elasticsearch/issues/63697#issuecomment-708675435","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63697","id":708675435,"node_id":"MDEyOklzc3VlQ29tbWVudDcwODY3NTQzNQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2020-10-14T21:40:30Z","updated_at":"2020-10-14T21:40:30Z","author_association":"MEMBER","body":"I don't think `precommit` itself is a problem, but many (maybe most) of the precommit tasks we have are to ensure Elasticsearch coding guidelines. There are some, though, that are crucial for external plugin authors as well. For example, jarHell is important because it checks something we check at runtime when loading plugins. So if this task fails, the plugin would later fail anyways when run with Elasticsearch.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/726156071","html_url":"https://github.com/elastic/elasticsearch/issues/63697#issuecomment-726156071","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63697","id":726156071,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNjE1NjA3MQ==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2020-11-12T15:39:10Z","updated_at":"2020-11-12T15:39:10Z","author_association":"CONTRIBUTOR","body":"Thanks Ryan. I updated the title and description to reflect exposing only a subset of the `precommit` tasks.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/726244000","html_url":"https://github.com/elastic/elasticsearch/issues/63697#issuecomment-726244000","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63697","id":726244000,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNjI0NDAwMA==","user":{"login":"mark-vieira","id":4106672,"node_id":"MDQ6VXNlcjQxMDY2NzI=","avatar_url":"https://avatars2.githubusercontent.com/u/4106672?v=4","gravatar_id":"","url":"https://api.github.com/users/mark-vieira","html_url":"https://github.com/mark-vieira","followers_url":"https://api.github.com/users/mark-vieira/followers","following_url":"https://api.github.com/users/mark-vieira/following{/other_user}","gists_url":"https://api.github.com/users/mark-vieira/gists{/gist_id}","starred_url":"https://api.github.com/users/mark-vieira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mark-vieira/subscriptions","organizations_url":"https://api.github.com/users/mark-vieira/orgs","repos_url":"https://api.github.com/users/mark-vieira/repos","events_url":"https://api.github.com/users/mark-vieira/events{/privacy}","received_events_url":"https://api.github.com/users/mark-vieira/received_events","type":"User","site_admin":false},"created_at":"2020-11-12T18:04:16Z","updated_at":"2020-11-12T18:04:16Z","author_association":"CONTRIBUTOR","body":"@breskeby do you mind following up on this. We had an issue now where for 7.10 external plugin developers are seeing errors trying to run the `loggerUsageCheck` task related to #63631. Realistically we simply don't want to apply that precommit plugin for external authors.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/728847973","html_url":"https://github.com/elastic/elasticsearch/issues/63697#issuecomment-728847973","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63697","id":728847973,"node_id":"MDEyOklzc3VlQ29tbWVudDcyODg0Nzk3Mw==","user":{"login":"breskeby","id":77300,"node_id":"MDQ6VXNlcjc3MzAw","avatar_url":"https://avatars3.githubusercontent.com/u/77300?v=4","gravatar_id":"","url":"https://api.github.com/users/breskeby","html_url":"https://github.com/breskeby","followers_url":"https://api.github.com/users/breskeby/followers","following_url":"https://api.github.com/users/breskeby/following{/other_user}","gists_url":"https://api.github.com/users/breskeby/gists{/gist_id}","starred_url":"https://api.github.com/users/breskeby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/breskeby/subscriptions","organizations_url":"https://api.github.com/users/breskeby/orgs","repos_url":"https://api.github.com/users/breskeby/repos","events_url":"https://api.github.com/users/breskeby/events{/privacy}","received_events_url":"https://api.github.com/users/breskeby/received_events","type":"User","site_admin":false},"created_at":"2020-11-17T10:49:31Z","updated_at":"2020-11-17T10:54:10Z","author_association":"CONTRIBUTOR","body":"I'm not 100% sure which precommit checks to expose to external and which not. I started working on splitting things up at https://github.com/elastic/elasticsearch/pull/65102 and for now I have kept:\r\n\r\n- JarHellPrecommitPlugin\r\n- ThirdPartyAuditPrecommitPlugin\r\n\r\nin the precommit checks for external plugins. I understand the need that every plugin needs to avoid JarHell, but what was the original motivation for definition of forbidden apis? Is that also to prevent plugins working as expected? If that's the case I would keep `ThirdPartyAuditPrecommitPlugin` in the external checks as well.\r\n\r\nGiven this list these precommit checks will be considered internal precommit checks only applied for our elasticsearch build:\r\n\r\n- CheckstylePrecommitPlugin\r\n- ForbiddenApisPrecommitPlugin\r\n- ForbiddenPatternsPrecommitPlugin\r\n- LicenseHeadersPrecommitPlugin\r\n- FilePermissionsPrecommitPlugin\r\n- TestingConventionsPrecommitPlugin\r\n\r\nThis change also brings in a change in behaviour for external plugin authors as we just remove some of those plugins from external builds. E.g. the cookie cutter template listed above disables checkstyle tasks. With this change those templates would fail as they references tasks that are not existing anymore. Likely similar breaking changes will happen to most other third party plugin builds. \r\n\r\nShould we instead of introducing this breaking change straight ahead have instead some sort of deprecation lifecycle for this? We could emit a warning for now when apply the BuildPlugin externally and mention that this will be removed in a later release.\r\n\r\nAlso is there any documentation around using our plugins for external builds? If not I think it would make sense to introduce something. This could also include an update guide for these kind of changes. It can be lightweight and grow over time but having a goto place for plugin users might be useful for our community. Thoughts? // cc @rjernst @mark-vieira  \r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/729169164","html_url":"https://github.com/elastic/elasticsearch/issues/63697#issuecomment-729169164","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63697","id":729169164,"node_id":"MDEyOklzc3VlQ29tbWVudDcyOTE2OTE2NA==","user":{"login":"mark-vieira","id":4106672,"node_id":"MDQ6VXNlcjQxMDY2NzI=","avatar_url":"https://avatars2.githubusercontent.com/u/4106672?v=4","gravatar_id":"","url":"https://api.github.com/users/mark-vieira","html_url":"https://github.com/mark-vieira","followers_url":"https://api.github.com/users/mark-vieira/followers","following_url":"https://api.github.com/users/mark-vieira/following{/other_user}","gists_url":"https://api.github.com/users/mark-vieira/gists{/gist_id}","starred_url":"https://api.github.com/users/mark-vieira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mark-vieira/subscriptions","organizations_url":"https://api.github.com/users/mark-vieira/orgs","repos_url":"https://api.github.com/users/mark-vieira/repos","events_url":"https://api.github.com/users/mark-vieira/events{/privacy}","received_events_url":"https://api.github.com/users/mark-vieira/received_events","type":"User","site_admin":false},"created_at":"2020-11-17T20:01:57Z","updated_at":"2020-11-17T20:01:57Z","author_association":"CONTRIBUTOR","body":"The `ThirdPartyAudit` is effectively just forbidden apis but for binary dependencies. I'm not sure to what degree we should do these checks for plugins. In the end if a plugin dependency is doing something naughty won't it get blocked by security manager?\r\n\r\n@rjernst what's the intention of the forbidden apis stuff, really? Is it more code conventions or do we strictly want to ensure folks to don't third-party libraries that use certain internal APIs. And if so, even w/o that check that stuff would fail at runtime due to the security manager, yes?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/729170007","html_url":"https://github.com/elastic/elasticsearch/issues/63697#issuecomment-729170007","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63697","id":729170007,"node_id":"MDEyOklzc3VlQ29tbWVudDcyOTE3MDAwNw==","user":{"login":"mark-vieira","id":4106672,"node_id":"MDQ6VXNlcjQxMDY2NzI=","avatar_url":"https://avatars2.githubusercontent.com/u/4106672?v=4","gravatar_id":"","url":"https://api.github.com/users/mark-vieira","html_url":"https://github.com/mark-vieira","followers_url":"https://api.github.com/users/mark-vieira/followers","following_url":"https://api.github.com/users/mark-vieira/following{/other_user}","gists_url":"https://api.github.com/users/mark-vieira/gists{/gist_id}","starred_url":"https://api.github.com/users/mark-vieira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mark-vieira/subscriptions","organizations_url":"https://api.github.com/users/mark-vieira/orgs","repos_url":"https://api.github.com/users/mark-vieira/repos","events_url":"https://api.github.com/users/mark-vieira/events{/privacy}","received_events_url":"https://api.github.com/users/mark-vieira/received_events","type":"User","site_admin":false},"created_at":"2020-11-17T20:03:38Z","updated_at":"2020-11-17T20:03:38Z","author_association":"CONTRIBUTOR","body":"> Should we instead of introducing this breaking change straight ahead have instead some sort of deprecation lifecycle for this? We could emit a warning for now when apply the BuildPlugin externally and mention that this will be removed in a later release.\r\n\r\nWe've been pretty cavalier with this in the past so I don't think so, but we want to do better starting with 8.0 and this work is part of that effort. That is, minimizing the surface area of our build code we expose to external plugin authors such that breaking changes are much less likely. Since this is iterating towards that goal I say we move forward. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/729170235","html_url":"https://github.com/elastic/elasticsearch/issues/63697#issuecomment-729170235","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63697","id":729170235,"node_id":"MDEyOklzc3VlQ29tbWVudDcyOTE3MDIzNQ==","user":{"login":"mark-vieira","id":4106672,"node_id":"MDQ6VXNlcjQxMDY2NzI=","avatar_url":"https://avatars2.githubusercontent.com/u/4106672?v=4","gravatar_id":"","url":"https://api.github.com/users/mark-vieira","html_url":"https://github.com/mark-vieira","followers_url":"https://api.github.com/users/mark-vieira/followers","following_url":"https://api.github.com/users/mark-vieira/following{/other_user}","gists_url":"https://api.github.com/users/mark-vieira/gists{/gist_id}","starred_url":"https://api.github.com/users/mark-vieira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mark-vieira/subscriptions","organizations_url":"https://api.github.com/users/mark-vieira/orgs","repos_url":"https://api.github.com/users/mark-vieira/repos","events_url":"https://api.github.com/users/mark-vieira/events{/privacy}","received_events_url":"https://api.github.com/users/mark-vieira/received_events","type":"User","site_admin":false},"created_at":"2020-11-17T20:04:07Z","updated_at":"2020-11-17T20:04:19Z","author_association":"CONTRIBUTOR","body":"> Also is there any documentation around using our plugins for external builds?\r\n\r\nNo really, and this is a must have for 8.0 IMO. Right now the example plugins effectively are the documentation.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/729308535","html_url":"https://github.com/elastic/elasticsearch/issues/63697#issuecomment-729308535","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63697","id":729308535,"node_id":"MDEyOklzc3VlQ29tbWVudDcyOTMwODUzNQ==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2020-11-18T01:02:45Z","updated_at":"2020-11-18T01:02:45Z","author_association":"MEMBER","body":"The intention of the forbidden apis stuff is just to prohibit our own developers from using trappy and poorly engineered APIs. \r\n\r\nI think jar hell is the only one we should add for external plugin authors.  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/729935937","html_url":"https://github.com/elastic/elasticsearch/issues/63697#issuecomment-729935937","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/63697","id":729935937,"node_id":"MDEyOklzc3VlQ29tbWVudDcyOTkzNTkzNw==","user":{"login":"mark-vieira","id":4106672,"node_id":"MDQ6VXNlcjQxMDY2NzI=","avatar_url":"https://avatars2.githubusercontent.com/u/4106672?v=4","gravatar_id":"","url":"https://api.github.com/users/mark-vieira","html_url":"https://github.com/mark-vieira","followers_url":"https://api.github.com/users/mark-vieira/followers","following_url":"https://api.github.com/users/mark-vieira/following{/other_user}","gists_url":"https://api.github.com/users/mark-vieira/gists{/gist_id}","starred_url":"https://api.github.com/users/mark-vieira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mark-vieira/subscriptions","organizations_url":"https://api.github.com/users/mark-vieira/orgs","repos_url":"https://api.github.com/users/mark-vieira/repos","events_url":"https://api.github.com/users/mark-vieira/events{/privacy}","received_events_url":"https://api.github.com/users/mark-vieira/received_events","type":"User","site_admin":false},"created_at":"2020-11-18T20:30:21Z","updated_at":"2020-11-18T20:30:21Z","author_association":"CONTRIBUTOR","body":"Thanks @rjernst. Let's go with Ryan's suggesting @breskeby and consider only jar hell checks to be \"external\".","performed_via_github_app":null}]