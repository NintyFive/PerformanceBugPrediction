{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/5660","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5660/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5660/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5660/events","html_url":"https://github.com/elastic/elasticsearch/issues/5660","id":30683065,"node_id":"MDU6SXNzdWUzMDY4MzA2NQ==","number":5660,"title":"Can't connect to embedded elasticsearch node via TransportClient","user":{"login":"dariodariodario","id":1387689,"node_id":"MDQ6VXNlcjEzODc2ODk=","avatar_url":"https://avatars3.githubusercontent.com/u/1387689?v=4","gravatar_id":"","url":"https://api.github.com/users/dariodariodario","html_url":"https://github.com/dariodariodario","followers_url":"https://api.github.com/users/dariodariodario/followers","following_url":"https://api.github.com/users/dariodariodario/following{/other_user}","gists_url":"https://api.github.com/users/dariodariodario/gists{/gist_id}","starred_url":"https://api.github.com/users/dariodariodario/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dariodariodario/subscriptions","organizations_url":"https://api.github.com/users/dariodariodario/orgs","repos_url":"https://api.github.com/users/dariodariodario/repos","events_url":"https://api.github.com/users/dariodariodario/events{/privacy}","received_events_url":"https://api.github.com/users/dariodariodario/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2014-04-02T12:27:45Z","updated_at":"2016-11-24T09:30:54Z","closed_at":"2014-04-02T14:07:21Z","author_association":"NONE","active_lock_reason":null,"body":"ES 1.0.1, Java 1.7 on Debian Linux and Osx\n\nI've a setup were I use an embedded node that holds data and starts at the beginning of every integration test. Then, depending on the case, I use either data less nodes as clients or just the http rest api. In both situations everything works fine. The only problem is with TransportClient. I start the Transport client on the same VM (of course, to do the integration test) and I always get a connection refused. \n\nThe code I use to set up the main embedded node is:\n\n```\n  port = 11547; // User ports range 1024 - 49151\n        tcpport = 9300;\n        settings.put(\"http.port\", port);\n        settings.put(\"transport.tcp.port\", tcpport);\n\n        Settings esSettings = settings.build();\n\n        node = NodeBuilder.nodeBuilder().local(true).settings(esSettings).node();\n        node.start();\n        Client client = node.client();\n           client.admin().cluster().prepareHealth().setWaitForYellowStatus().execute().actionGet();\n```\n\nso far so good. This works well and it's proven. But when shortly after I set up the TransportClient like this and try to index something, I will get a connection refused error:\n\n```\n        TransportClient client = new TransportClient();\n\n\n        client.addTransportAddress(new InetSocketTransportAddress(\"127.0.0.1\", getTcpPort()));\n\n        client.prepareIndex(\"test\", \"type\").setSource(\"field\", \"value\").execute().actionGet();\n```\n\nstacktrace:\n\n```\norg.elasticsearch.transport.ConnectTransportException: [][inet[/127.0.0.1:9300]] connect_timeout[30s]\n    at org.elasticsearch.transport.netty.NettyTransport.connectToChannelsLight(NettyTransport.java:683)\n    at org.elasticsearch.transport.netty.NettyTransport.connectToNode(NettyTransport.java:643)\n    at org.elasticsearch.transport.netty.NettyTransport.connectToNodeLight(NettyTransport.java:610)\n    at org.elasticsearch.transport.TransportService.connectToNodeLight(TransportService.java:133)\n    at org.elasticsearch.client.transport.TransportClientNodesService$SimpleNodeSampler.doSample(TransportClientNodesService.java:355)\n    at org.elasticsearch.client.transport.TransportClientNodesService$NodeSampler.sample(TransportClientNodesService.java:301)\n    at org.elasticsearch.client.transport.TransportClientNodesService.addTransportAddresses(TransportClientNodesService.java:169)\n    at org.elasticsearch.client.transport.TransportClient.addTransportAddress(TransportClient.java:237)\n    at com.my.estests.test.TransportClientTest.testTransportClient(TransportClientTest.java:23)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:74)\n    at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:202)\n    at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:65)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)\nCaused by: java.net.ConnectException: Connection refused: /127.0.0.1:9300\n    at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)\n    at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:708)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioClientBoss.connect(NioClientBoss.java:150)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioClientBoss.processSelectedKeys(NioClientBoss.java:105)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioClientBoss.process(NioClientBoss.java:79)\n    at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:318)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioClientBoss.run(NioClientBoss.java:42)\n    at org.elasticsearch.common.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\n    at org.elasticsearch.common.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:724)\n[2014-04-02 12:07:36,961][TRACE][org.elasticsearch.transport.netty] [Scarlet Scarab] connect exception caught on transport layer [[id: 0xb6d34b8c]]\njava.net.ConnectException: Connection refused: /127.0.0.1:9300\n    at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)\n    at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:708)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioClientBoss.connect(NioClientBoss.java:150)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioClientBoss.processSelectedKeys(NioClientBoss.java:105)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioClientBoss.process(NioClientBoss.java:79)\n    at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:318)\n    at org.elasticsearch.common.netty.channel.socket.nio.NioClientBoss.run(NioClientBoss.java:42)\n    at org.elasticsearch.common.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\n    at org.elasticsearch.common.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:724)\n```\n\nI tried to fix it in many ways. The funny thing is that if I run the test without the embedded node, for example running the standard Elasticsearch dist from the zip, it can connect properly. \n\nIf that can help, here is some logging with level TRACE\n\n```\n[2014-04-02 12:07:32,842][DEBUG][org.elasticsearch.cluster.service] [Immortus] publishing cluster state version 3\n[2014-04-02 12:07:32,842][DEBUG][org.elasticsearch.cluster.service] [Immortus] set local cluster state to version 3\n[2014-04-02 12:07:32,843][DEBUG][org.elasticsearch.river.cluster] [Immortus] processing [reroute_rivers_node_changed]: execute\n[2014-04-02 12:07:32,843][INFO ][org.elasticsearch.node   ] [Immortus] started\n[2014-04-02 12:07:32,843][DEBUG][org.elasticsearch.river.cluster] [Immortus] processing [reroute_rivers_node_changed]: no change in cluster_state\n[2014-04-02 12:07:32,843][DEBUG][org.elasticsearch.cluster.service] [Immortus] processing [updating local node id]: done applying updated cluster_state (version: 3)\n[2014-04-02 12:07:32,843][INFO ][com.netaporter.cms.estests.esconfig.SetupEsTestHelper] Elasticsearch embedded starting with settings:\n[2014-04-02 12:07:32,844][INFO ][com.netaporter.cms.estests.esconfig.SetupEsTestHelper] node.local: true\n[2014-04-02 12:07:32,844][INFO ][com.netaporter.cms.estests.esconfig.SetupEsTestHelper] cluster.name: 5Hn0b5Hfzc\n[2014-04-02 12:07:32,844][INFO ][com.netaporter.cms.estests.esconfig.SetupEsTestHelper] path.data: /tmp/cmZnsWMDkn1333493018569044574\n[2014-04-02 12:07:32,844][INFO ][com.netaporter.cms.estests.esconfig.SetupEsTestHelper] path.conf: /tmp/xA9Ueg7vTJK5cEg8897978197509056413\n[2014-04-02 12:07:32,844][INFO ][com.netaporter.cms.estests.esconfig.SetupEsTestHelper] http.port: 11547\n[2014-04-02 12:07:32,844][INFO ][com.netaporter.cms.estests.esconfig.SetupEsTestHelper] transport.tcp.port: 9300\n[2014-04-02 12:07:32,844][INFO ][com.netaporter.cms.estests.esconfig.SetupEsTestHelper] name: Immortus\n[2014-04-02 12:07:32,845][INFO ][com.netaporter.cms.estests.esconfig.SetupEsTestHelper] path.logs: /home/drossi/work/cs/cms-content-service-search/logs\n[2014-04-02 12:07:32,845][DEBUG][com.netaporter.cms.estests.esconfig.SetupEsTestHelper] Elasticsearch started\n[2014-04-02 12:07:32,848][TRACE][org.elasticsearch.action.admin.cluster.health] [Immortus] Calculating health based on state version [3]\n[2014-04-02 12:07:32,857][INFO ][org.elasticsearch.plugins] [Scarlet Scarab] loaded [], sites []\n[2014-04-02 12:07:32,908][DEBUG][org.elasticsearch.threadpool] [Scarlet Scarab] creating thread_pool [generic], type [cached], keep_alive [30s]\n[2014-04-02 12:07:32,909][DEBUG][org.elasticsearch.threadpool] [Scarlet Scarab] creating thread_pool [index], type [fixed], size [6], queue_size [200]\n[2014-04-02 12:07:32,909][DEBUG][org.elasticsearch.threadpool] [Scarlet Scarab] creating thread_pool [bulk], type [fixed], size [6], queue_size [50]\n[2014-04-02 12:07:32,909][DEBUG][org.elasticsearch.threadpool] [Scarlet Scarab] creating thread_pool [get], type [fixed], size [6], queue_size [1k]\n[2014-04-02 12:07:32,909][DEBUG][org.elasticsearch.threadpool] [Scarlet Scarab] creating thread_pool [search], type [fixed], size [18], queue_size [1k]\n[2014-04-02 12:07:32,909][DEBUG][org.elasticsearch.threadpool] [Scarlet Scarab] creating thread_pool [suggest], type [fixed], size [6], queue_size [1k]\n[2014-04-02 12:07:32,909][DEBUG][org.elasticsearch.threadpool] [Scarlet Scarab] creating thread_pool [percolate], type [fixed], size [6], queue_size [1k]\n[2014-04-02 12:07:32,910][DEBUG][org.elasticsearch.threadpool] [Scarlet Scarab] creating thread_pool [management], type [scaling], min [1], size [5], keep_alive [5m]\n[2014-04-02 12:07:32,910][DEBUG][org.elasticsearch.threadpool] [Scarlet Scarab] creating thread_pool [flush], type [scaling], min [1], size [3], keep_alive [5m]\n[2014-04-02 12:07:32,910][DEBUG][org.elasticsearch.threadpool] [Scarlet Scarab] creating thread_pool [merge], type [scaling], min [1], size [3], keep_alive [5m]\n[2014-04-02 12:07:32,910][DEBUG][org.elasticsearch.threadpool] [Scarlet Scarab] creating thread_pool [refresh], type [scaling], min [1], size [3], keep_alive [5m]\n[2014-04-02 12:07:32,910][DEBUG][org.elasticsearch.threadpool] [Scarlet Scarab] creating thread_pool [warmer], type [scaling], min [1], size [3], keep_alive [5m]\n[2014-04-02 12:07:32,910][DEBUG][org.elasticsearch.threadpool] [Scarlet Scarab] creating thread_pool [snapshot], type [scaling], min [1], size [3], keep_alive [5m]\n[2014-04-02 12:07:32,911][DEBUG][org.elasticsearch.threadpool] [Scarlet Scarab] creating thread_pool [optimize], type [fixed], size [1], queue_size [null]\n[2014-04-02 12:07:32,912][DEBUG][org.elasticsearch.transport.netty] [Scarlet Scarab] using worker_count[12], port[9300-9400], bind_host[null], publish_host[null], compress[false], connect_timeout[30s], connections_per_node[2/3/6/1/1], receive_predictor[512kb->512kb]\n[2014-04-02 12:07:32,913][DEBUG][org.elasticsearch.client.transport] [Scarlet Scarab] node_sampler_interval[5s]\n[2014-04-02 12:07:36,941][DEBUG][org.elasticsearch.client.transport] [Scarlet Scarab] adding address [[#transport#-1][d][inet[/127.0.0.1:9300]]]\n[2014-04-02 12:07:36,941][TRACE][org.elasticsearch.client.transport] [Scarlet Scarab] connecting to listed node (light) [[#transport#-1][d][inet[/127.0.0.1:9300]]]\n[2014-04-02 12:07:36,960][DEBUG][org.elasticsearch.client.transport] [Scarlet Scarab] failed to connect to node [[#transport#-1][d][inet[/127.0.0.1:9300]]], removed from nodes list\norg.elasticsearch.transport.ConnectTransportException: [][inet[/127.0.0.1:9300]] connect_timeout[30s]\n```\n\nCan anybody help with this?\n","closed_by":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"performed_via_github_app":null}