[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/223552637","html_url":"https://github.com/elastic/elasticsearch/issues/18710#issuecomment-223552637","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18710","id":223552637,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMzU1MjYzNw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-06-03T11:10:33Z","updated_at":"2016-06-03T11:10:33Z","author_association":"CONTRIBUTOR","body":"I thought that this might be a query norm thing which might change with BM25, but I'm seeing the same on master.  @cbuescher is this something we're doing when rewriting queries, or is this lucene level?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/223579706","html_url":"https://github.com/elastic/elasticsearch/issues/18710#issuecomment-223579706","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18710","id":223579706,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMzU3OTcwNg==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2016-06-03T13:33:14Z","updated_at":"2016-06-03T13:33:14Z","author_association":"MEMBER","body":"@clintongormley yes, in my experiments BM25 was affecting only the numeric value of the score but not dropping queryNorms. The strange thing is that the problem only affects shards where the boosted field doesn't match anything, which makes it look like some sort of shortcut in execution. My first thought was, maybe it's somehow related to two-phase execution. However, I was able to reproduce it on v0.90.7, v1.7.5, v2.3.3 and the current master. So it must be something else.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/223580668","html_url":"https://github.com/elastic/elasticsearch/issues/18710#issuecomment-223580668","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18710","id":223580668,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMzU4MDY2OA==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2016-06-03T13:37:18Z","updated_at":"2016-06-03T13:37:18Z","author_association":"MEMBER","body":"From looking at how we create the lucene queries, I can't see anything obvious where we might ignore the boost when fuziness is set, but I will have a closer look at it. Most of the query creation happens in MatchQuery/MultiMatchQuery but I'm not too familiar with that code yet, but I will take a look at this starting from your examples.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/223587439","html_url":"https://github.com/elastic/elasticsearch/issues/18710#issuecomment-223587439","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18710","id":223587439,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMzU4NzQzOQ==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2016-06-03T14:04:23Z","updated_at":"2016-06-03T14:04:47Z","author_association":"MEMBER","body":"@imotov yes, I also suspect something on the execution level of the fuzzy query. If I use one or two shards for the minimal example above, the scores for both docs are different. As soon as a third shard gets added, the scores for the query with the added \"fuzziness\" are the same.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/223596423","html_url":"https://github.com/elastic/elasticsearch/issues/18710#issuecomment-223596423","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18710","id":223596423,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMzU5NjQyMw==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2016-06-03T14:37:16Z","updated_at":"2016-06-03T14:37:16Z","author_association":"MEMBER","body":"@cbuescher yes, the 2 shard case is the same as 1 shard case, because when you have 2 shards, both records will be on the shard 1, so you are basically searching a single shard. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225527678","html_url":"https://github.com/elastic/elasticsearch/issues/18710#issuecomment-225527678","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18710","id":225527678,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTUyNzY3OA==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2016-06-13T09:11:06Z","updated_at":"2016-06-13T09:11:06Z","author_association":"MEMBER","body":"I wrote a test to see how the lucene query using the `fuzziness = 0` parameter gets rewritten. If the two docs reside on two different shards, the original fuzzy query `(body:foo~0 | (title:foo~0)^100.0)` gets rewritten to `(() | (title:foo)^100.0)` on one shard and to `(body:foo | ()^100.0)` on the other where no doc has the `title`field. In that case both doc scores are the same. \nIn the case the docs are on the same shard, the query gets rewritten to (body:foo | (title:foo)^100.0) and doc2 scores higher, as expected. At this point I would like to know how the expectations for rewrites and scoring for these two cases are in theory on the lucene level. Maybe @jpountz or @jimferenczi have an idea where to look next?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225626485","html_url":"https://github.com/elastic/elasticsearch/issues/18710#issuecomment-225626485","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18710","id":225626485,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTYyNjQ4NQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-06-13T16:01:19Z","updated_at":"2016-06-13T16:02:10Z","author_association":"MEMBER","body":"This 2 queries: `(() | (title:foo)^100.0)` and `(body:foo | ()^100.0)` are supposed to be normalized the same way but it doesn't work as expected because the clause `()^100` is ignored. It's the problem with queries that are expanded on the shard directly. The normalization factor for the first query is 10,000 (100*100) and the norm is equal to 0.01. This is why we have a score of 1 for hits that match this query (100 *0.01). \nThe normalization factor and the norm for the second query should be the same and the score should be multiplied by the norm. Though the normalization factor and the norm are set to 1 because the empty boolean query `()^100` is ignored. \nI opened a ticket on Lucene land:\nhttps://issues.apache.org/jira/browse/LUCENE-7337\n","performed_via_github_app":null}]