{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/37543","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37543/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37543/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37543/events","html_url":"https://github.com/elastic/elasticsearch/issues/37543","id":399896699,"node_id":"MDU6SXNzdWUzOTk4OTY2OTk=","number":37543,"title":"[CI] NestedObjectMapperTests fail with leaked threads","user":{"login":"jkakavas","id":10281256,"node_id":"MDQ6VXNlcjEwMjgxMjU2","avatar_url":"https://avatars2.githubusercontent.com/u/10281256?v=4","gravatar_id":"","url":"https://api.github.com/users/jkakavas","html_url":"https://github.com/jkakavas","followers_url":"https://api.github.com/users/jkakavas/followers","following_url":"https://api.github.com/users/jkakavas/following{/other_user}","gists_url":"https://api.github.com/users/jkakavas/gists{/gist_id}","starred_url":"https://api.github.com/users/jkakavas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkakavas/subscriptions","organizations_url":"https://api.github.com/users/jkakavas/orgs","repos_url":"https://api.github.com/users/jkakavas/repos","events_url":"https://api.github.com/users/jkakavas/events{/privacy}","received_events_url":"https://api.github.com/users/jkakavas/received_events","type":"User","site_admin":false},"labels":[{"id":836504707,"node_id":"MDU6TGFiZWw4MzY1MDQ3MDc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Distributed","name":":Distributed/Distributed","color":"0e8a16","default":false,"description":"A catch all label for anything in the Distributed Area. If you aren't sure, use this one."},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":{"login":"henningandersen","id":33268011,"node_id":"MDQ6VXNlcjMzMjY4MDEx","avatar_url":"https://avatars2.githubusercontent.com/u/33268011?v=4","gravatar_id":"","url":"https://api.github.com/users/henningandersen","html_url":"https://github.com/henningandersen","followers_url":"https://api.github.com/users/henningandersen/followers","following_url":"https://api.github.com/users/henningandersen/following{/other_user}","gists_url":"https://api.github.com/users/henningandersen/gists{/gist_id}","starred_url":"https://api.github.com/users/henningandersen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/henningandersen/subscriptions","organizations_url":"https://api.github.com/users/henningandersen/orgs","repos_url":"https://api.github.com/users/henningandersen/repos","events_url":"https://api.github.com/users/henningandersen/events{/privacy}","received_events_url":"https://api.github.com/users/henningandersen/received_events","type":"User","site_admin":false},"assignees":[{"login":"henningandersen","id":33268011,"node_id":"MDQ6VXNlcjMzMjY4MDEx","avatar_url":"https://avatars2.githubusercontent.com/u/33268011?v=4","gravatar_id":"","url":"https://api.github.com/users/henningandersen","html_url":"https://github.com/henningandersen","followers_url":"https://api.github.com/users/henningandersen/followers","following_url":"https://api.github.com/users/henningandersen/following{/other_user}","gists_url":"https://api.github.com/users/henningandersen/gists{/gist_id}","starred_url":"https://api.github.com/users/henningandersen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/henningandersen/subscriptions","organizations_url":"https://api.github.com/users/henningandersen/orgs","repos_url":"https://api.github.com/users/henningandersen/repos","events_url":"https://api.github.com/users/henningandersen/events{/privacy}","received_events_url":"https://api.github.com/users/henningandersen/received_events","type":"User","site_admin":false}],"milestone":null,"comments":10,"created_at":"2019-01-16T16:41:39Z","updated_at":"2019-05-07T13:35:12Z","closed_at":"2019-05-07T13:35:11Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"This doesn't reproduce locally but has failed 5 times last week. It started failing on January 9th but I don't see relevant changes in the code recently. \r\n\r\nhttps://build-stats.elastic.co/app/kibana#/discover?_g=(refreshInterval:(display:Off,pause:!f,value:0),time:(from:now%2FM,mode:quick,to:now%2FM))&_a=(columns:!(_source),index:e58bf320-7efd-11e8-bf69-63c8ef516157,interval:auto,query:(language:lucene,query:NestedObjectMapperTests),sort:!(time,desc))\r\n\r\nhttps://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+6.x+intake/1035 is an example\r\n\r\n```\r\nERROR   0.00s J2 | NestedObjectMapperTests (suite) <<< FAILURES!\r\n   > Throwable #1: com.carrotsearch.randomizedtesting.ThreadLeakError: 2 threads leaked from SUITE scope at org.elasticsearch.index.mapper.NestedObjectMapperTests: \r\n   >    1) Thread[id=927, name=elasticsearch[node_s_0][__mock_network_thread][T#1], state=RUNNABLE, group=TGRP-NestedObjectMapperTests]\r\n   >         at java.net.PlainSocketImpl.socketAccept(Native Method)\r\n   >         at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)\r\n   >         at java.net.ServerSocket.implAccept(ServerSocket.java:545)\r\n   >         at java.net.ServerSocket.accept(ServerSocket.java:513)\r\n   >         at org.elasticsearch.mocksocket.MockServerSocket.access$101(MockServerSocket.java:32)\r\n   >         at org.elasticsearch.mocksocket.MockServerSocket.lambda$accept$0(MockServerSocket.java:53)\r\n   >         at org.elasticsearch.mocksocket.MockServerSocket$$Lambda$595/2121068139.run(Unknown Source)\r\n   >         at java.security.AccessController.doPrivileged(Native Method)\r\n   >         at org.elasticsearch.mocksocket.MockServerSocket.accept(MockServerSocket.java:53)\r\n   >         at org.elasticsearch.transport.MockTcpTransport$MockChannel.accept(MockTcpTransport.java:290)\r\n   >         at org.elasticsearch.transport.MockTcpTransport$1.doRun(MockTcpTransport.java:135)\r\n   >         at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n   >         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n   >         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n   >         at java.lang.Thread.run(Thread.java:748)\r\n   >    2) Thread[id=928, name=elasticsearch[node_s_0][__mock_network_thread][T#2], state=RUNNABLE, group=TGRP-NestedObjectMapperTests]\r\n   >         at java.net.PlainSocketImpl.socketAccept(Native Method)\r\n   >         at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)\r\n   >         at java.net.ServerSocket.implAccept(ServerSocket.java:545)\r\n   >         at java.net.ServerSocket.accept(ServerSocket.java:513)\r\n   >         at org.elasticsearch.mocksocket.MockServerSocket.access$101(MockServerSocket.java:32)\r\n   >         at org.elasticsearch.mocksocket.MockServerSocket.lambda$accept$0(MockServerSocket.java:53)\r\n   >         at org.elasticsearch.mocksocket.MockServerSocket$$Lambda$595/2121068139.run(Unknown Source)\r\n   >         at java.security.AccessController.doPrivileged(Native Method)\r\n   >         at org.elasticsearch.mocksocket.MockServerSocket.accept(MockServerSocket.java:53)\r\n   >         at org.elasticsearch.transport.MockTcpTransport$MockChannel.accept(MockTcpTransport.java:290)\r\n   >         at org.elasticsearch.transport.MockTcpTransport$1.doRun(MockTcpTransport.java:135)\r\n   >         at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n   >         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n   >         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n   >         at java.lang.Thread.run(Thread.java:748)\r\n   > \tat __randomizedtesting.SeedInfo.seed([A00E57EA1BC77F08]:0)Throwable #2: com.carrotsearch.randomizedtesting.ThreadLeakError: There are still zombie threads that couldn't be terminated:\r\n   >    1) Thread[id=927, name=elasticsearch[node_s_0][__mock_network_thread][T#1], state=RUNNABLE, group=TGRP-NestedObjectMapperTests]\r\n   >         at java.net.PlainSocketImpl.socketAccept(Native Method)\r\n   >         at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)\r\n   >         at java.net.ServerSocket.implAccept(ServerSocket.java:545)\r\n   >         at java.net.ServerSocket.accept(ServerSocket.java:513)\r\n   >         at org.elasticsearch.mocksocket.MockServerSocket.access$101(MockServerSocket.java:32)\r\n   >         at org.elasticsearch.mocksocket.MockServerSocket.lambda$accept$0(MockServerSocket.java:53)\r\n   >         at org.elasticsearch.mocksocket.MockServerSocket$$Lambda$595/2121068139.run(Unknown Source)\r\n   >         at java.security.AccessController.doPrivileged(Native Method)\r\n   >         at org.elasticsearch.mocksocket.MockServerSocket.accept(MockServerSocket.java:53)\r\n   >         at org.elasticsearch.transport.MockTcpTransport$MockChannel.accept(MockTcpTransport.java:290)\r\n   >         at org.elasticsearch.transport.MockTcpTransport$1.doRun(MockTcpTransport.java:135)\r\n   >         at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n   >         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n   >         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n   >         at java.lang.Thread.run(Thread.java:748)\r\n   >    2) Thread[id=928, name=elasticsearch[node_s_0][__mock_network_thread][T#2], state=RUNNABLE, group=TGRP-NestedObjectMapperTests]\r\n   >         at java.net.PlainSocketImpl.socketAccept(Native Method)\r\n   >         at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)\r\n   >         at java.net.ServerSocket.implAccept(ServerSocket.java:545)\r\n   >         at java.net.ServerSocket.accept(ServerSocket.java:513)\r\n   >         at org.elasticsearch.mocksocket.MockServerSocket.access$101(MockServerSocket.java:32)\r\n   >         at org.elasticsearch.mocksocket.MockServerSocket.lambda$accept$0(MockServerSocket.java:53)\r\n   >         at org.elasticsearch.mocksocket.MockServerSocket$$Lambda$595/2121068139.run(Unknown Source)\r\n   >         at java.security.AccessController.doPrivileged(Native Method)\r\n   >         at org.elasticsearch.mocksocket.MockServerSocket.accept(MockServerSocket.java:53)\r\n   >         at org.elasticsearch.transport.MockTcpTransport$MockChannel.accept(MockTcpTransport.java:290)\r\n   >         at org.elasticsearch.transport.MockTcpTransport$1.doRun(MockTcpTransport.java:135)\r\n   >         at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n   >         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n   >         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n   >         at java.lang.Thread.run(Thread.java:748)\r\n   > \tat __randomizedtesting.SeedInfo.seed([A00E57EA1BC77F08]:0)\r\n```","closed_by":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"performed_via_github_app":null}