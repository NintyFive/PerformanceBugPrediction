{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/34320","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34320/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34320/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/34320/events","html_url":"https://github.com/elastic/elasticsearch/issues/34320","id":367104683,"node_id":"MDU6SXNzdWUzNjcxMDQ2ODM=","number":34320,"title":"Unexpected ResponseException (\"document_already_exists_exception\")","user":{"login":"gugumonster","id":9195858,"node_id":"MDQ6VXNlcjkxOTU4NTg=","avatar_url":"https://avatars2.githubusercontent.com/u/9195858?v=4","gravatar_id":"","url":"https://api.github.com/users/gugumonster","html_url":"https://github.com/gugumonster","followers_url":"https://api.github.com/users/gugumonster/followers","following_url":"https://api.github.com/users/gugumonster/following{/other_user}","gists_url":"https://api.github.com/users/gugumonster/gists{/gist_id}","starred_url":"https://api.github.com/users/gugumonster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gugumonster/subscriptions","organizations_url":"https://api.github.com/users/gugumonster/orgs","repos_url":"https://api.github.com/users/gugumonster/repos","events_url":"https://api.github.com/users/gugumonster/events{/privacy}","received_events_url":"https://api.github.com/users/gugumonster/received_events","type":"User","site_admin":false},"labels":[{"id":145572580,"node_id":"MDU6TGFiZWwxNDU1NzI1ODA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/CRUD","name":":Distributed/CRUD","color":"0e8a16","default":false,"description":"A catch all label for issues around indexing, updating and getting a doc by id. Not search."},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-10-05T08:12:57Z","updated_at":"2018-10-11T08:12:53Z","closed_at":"2018-10-10T15:35:53Z","author_association":"NONE","active_lock_reason":null,"body":"<!-- Bug report -->\r\n\r\n**Elasticsearch version**: 2.0.1\r\n\r\n{\r\n  \"version\" : {\r\n    \"number\" : \"2.0.1\",\r\n    \"build_hash\" : \"1ebe2f1ab149d45b08d5336b12eb14eb8a3814af\",\r\n    \"build_timestamp\" : \"2015-11-18T17:42:23Z\",\r\n    \"build_snapshot\" : false,\r\n    \"lucene_version\" : \"5.2.1\"\r\n  },\r\n  \"tagline\" : \"You Know, for Search\"\r\n}\r\n\r\n**JVM version**: Java 8 update 162 (8.0.1620.12)\r\n\r\n**OS version**: Windows Server 2012 R2 Standard\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nHello,\r\n\r\nwe are using Elasticsearch 2.0.1 and access it via the Java REST API in version 5.5.0 (org.elasticsearch.client:rest). We experienced the following problem (which happened so far only twice and without being able to reproduce it):\r\n\r\nWhen attempting to create a document in an index we receive a org.elasticsearch.client.ResponseException, with the reason that the document already exists (status code 409).\r\n\r\nFull stack trace:\r\n`org.elasticsearch.client.ResponseException: POST http://ESSERVER:9200/lx-ad-phonebook/LXContact/5c9f6b96-f52a-4321-bf30-823e28cd5ae0/_create: HTTP/1.1 409 Conflict\r\n{\"error\":{\"root_cause\":[{\"type\":\"document_already_exists_exception\",\"reason\":\"[LXContact][5c9f6b96-f52a-4321-bf30-823e28cd5ae0]: document already exists\",\"shard\":\"1\",\"index\":\"lx-ad-phonebook\"}],\"type\":\"document_already_exists_exception\",\"reason\":\"[LXContact][5c9f6b96-f52a-4321-bf30-823e28cd5ae0]: document already exists\",\"shard\":\"1\",\"index\":\"lx-ad-phonebook\"},\"status\":409}\r\nat org.elasticsearch.client.RestClient$1.completed(RestClient.java:354)\r\nat org.elasticsearch.client.RestClient$1.completed(RestClient.java:343)\r\nat org.apache.http.concurrent.BasicFuture.completed(BasicFuture.java:119)\r\nat org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.responseCompleted(DefaultClientExchangeHandlerImpl.java:177)\r\nat org.apache.http.nio.protocol.HttpAsyncRequestExecutor.processResponse(HttpAsyncRequestExecutor.java:436)\r\nat org.apache.http.nio.protocol.HttpAsyncRequestExecutor.inputReady(HttpAsyncRequestExecutor.java:326)\r\nat org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput(DefaultNHttpClientConnection.java:265)\r\nat org.apache.http.impl.nio.client.InternalIODispatch.onInputReady(InternalIODispatch.java:81)\r\nat org.apache.http.impl.nio.client.InternalIODispatch.onInputReady(InternalIODispatch.java:39)\r\nat org.apache.http.impl.nio.reactor.AbstractIODispatch.inputReady(AbstractIODispatch.java:114)\r\nat org.apache.http.impl.nio.reactor.BaseIOReactor.readable(BaseIOReactor.java:162)\r\nat org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent(AbstractIOReactor.java:337)\r\nat org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvents(AbstractIOReactor.java:315)\r\nat org.apache.http.impl.nio.reactor.AbstractIOReactor.execute(AbstractIOReactor.java:276)\r\nat org.apache.http.impl.nio.reactor.BaseIOReactor.execute(BaseIOReactor.java:104)\r\nat org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker.run(AbstractMultiworkerIOReactor.java:588)\r\nat java.lang.Thread.run(Thread.java:748)\r\nSuppressed: java.net.SocketTimeoutException\r\nat org.apache.http.nio.protocol.HttpAsyncRequestExecutor.timeout(HttpAsyncRequestExecutor.java:375)\r\nat org.apache.http.impl.nio.client.InternalIODispatch.onTimeout(InternalIODispatch.java:92)\r\nat org.apache.http.impl.nio.client.InternalIODispatch.onTimeout(InternalIODispatch.java:39)\r\nat org.apache.http.impl.nio.reactor.AbstractIODispatch.timeout(AbstractIODispatch.java:175)\r\nat org.apache.http.impl.nio.reactor.BaseIOReactor.sessionTimedOut(BaseIOReactor.java:263)\r\nat org.apache.http.impl.nio.reactor.AbstractIOReactor.timeoutCheck(AbstractIOReactor.java:492)\r\nat org.apache.http.impl.nio.reactor.BaseIOReactor.validate(BaseIOReactor.java:213)\r\nat org.apache.http.impl.nio.reactor.AbstractIOReactor.execute(AbstractIOReactor.java:280)\r\n... 3 more`\r\n\r\nWhen looking into the index, we also see the very same document we actually wanted to create (same ID, same payload properties).\r\nSo at first it looks like an issue on our side and that Elasticsearch is behaving correctly, but our client is the only client accessing the index and whenver a document is supposed to be created, we generate a UUID for it (via `java.util.UUID.randomUUID().toString()`).\r\nWhile we know that there is a theoretical chance that this UUID generation could result in generating the same ID twice, we highly doubt that this is the case (also because it appeared for a second time now within 3 days; and the payload data would most likely differ as well on the second creation).\r\n\r\nOur assumption here is that either the Java REST API or the Elasticsearch server behave incorrect here.\r\nCould it be that (in some rare situations) the Java REST API attempts to insert a document twice or simply the server returns this error although the document could be created successfully?\r\nIs this a known issue in general?\r\n\r\nBest regards!\r\n","closed_by":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"performed_via_github_app":null}