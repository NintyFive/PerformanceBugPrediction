{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/25601","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25601/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25601/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25601/events","html_url":"https://github.com/elastic/elasticsearch/issues/25601","id":241287653,"node_id":"MDU6SXNzdWUyNDEyODc2NTM=","number":25601,"title":"Add pipeline support to REST API for bulk upsert","user":{"login":"PhaedrusTheGreek","id":4387023,"node_id":"MDQ6VXNlcjQzODcwMjM=","avatar_url":"https://avatars0.githubusercontent.com/u/4387023?v=4","gravatar_id":"","url":"https://api.github.com/users/PhaedrusTheGreek","html_url":"https://github.com/PhaedrusTheGreek","followers_url":"https://api.github.com/users/PhaedrusTheGreek/followers","following_url":"https://api.github.com/users/PhaedrusTheGreek/following{/other_user}","gists_url":"https://api.github.com/users/PhaedrusTheGreek/gists{/gist_id}","starred_url":"https://api.github.com/users/PhaedrusTheGreek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PhaedrusTheGreek/subscriptions","organizations_url":"https://api.github.com/users/PhaedrusTheGreek/orgs","repos_url":"https://api.github.com/users/PhaedrusTheGreek/repos","events_url":"https://api.github.com/users/PhaedrusTheGreek/events{/privacy}","received_events_url":"https://api.github.com/users/PhaedrusTheGreek/received_events","type":"User","site_admin":false},"labels":[{"id":268963484,"node_id":"MDU6TGFiZWwyNjg5NjM0ODQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Ingest","name":":Core/Features/Ingest","color":"0e8a16","default":false,"description":"Execution or management of Ingest Pipelines"},{"id":145572580,"node_id":"MDU6TGFiZWwxNDU1NzI1ODA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/CRUD","name":":Distributed/CRUD","color":"0e8a16","default":false,"description":"A catch all label for issues around indexing, updating and getting a doc by id. Not search."},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-07-07T14:49:57Z","updated_at":"2018-02-13T19:39:06Z","closed_at":"2017-10-25T17:04:15Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"As discussed [here](https://github.com/elastic/elasticsearch/issues/21903), the Java API supports specifying a pipeline in a bulk upsert, but the REST API either does not (or is not documented).\r\n\r\n```\r\nPUT _ingest/pipeline/timestamps\r\n{\r\n  \"description\": \"_timestamp\",\r\n  \"processors\": [\r\n    {\r\n      \"set\": {\r\n        \"field\": \"_source.timestamp_created\",\r\n        \"value\": \"{{_ingest.timestamp}}\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n\r\nPOST my_index/test_type/_bulk?pipeline=timestamps\r\n{\"index\":{\"_id\":\"1\"}}\r\n{\"field1\":\"val1\", \"counter\":0}\r\n{\"update\":{\"_id\":\"2\"}}\r\n{\"script\":{\"inline\":\"ctx._source.counter++;\"},\"upsert\":{\"field1\":\"upserted_val\", \"counter\":0}}\r\n```\r\n\r\nThe upserted record didn't hit the pipeline:\r\n\r\n```\r\n{\r\n   \"took\": 1,\r\n   \"timed_out\": false,\r\n   \"_shards\": {\r\n      \"total\": 5,\r\n      \"successful\": 5,\r\n      \"failed\": 0\r\n   },\r\n   \"hits\": {\r\n      \"total\": 2,\r\n      \"max_score\": 1,\r\n      \"hits\": [\r\n         {\r\n            \"_index\": \"my_index\",\r\n            \"_type\": \"test_type\",\r\n            \"_id\": \"2\",\r\n            \"_score\": 1,\r\n            \"_source\": {\r\n               \"field1\": \"upserted_val\",\r\n               \"counter\": 1\r\n            }\r\n         },\r\n         {\r\n            \"_index\": \"my_index\",\r\n            \"_type\": \"test_type\",\r\n            \"_id\": \"1\",\r\n            \"_score\": 1,\r\n            \"_source\": {\r\n               \"timestamp_created\": \"Fri Jul 07 10:47:07 EDT 2017\",\r\n               \"field1\": \"val1\",\r\n               \"counter\": 0\r\n            }\r\n         }\r\n      ]\r\n   }\r\n}\r\n```","closed_by":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"performed_via_github_app":null}