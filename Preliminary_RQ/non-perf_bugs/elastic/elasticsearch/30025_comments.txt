[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384136999","html_url":"https://github.com/elastic/elasticsearch/issues/30025#issuecomment-384136999","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30025","id":384136999,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzNjk5OQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2017-02-10T18:07:22Z","updated_at":"2018-04-25T01:59:46Z","author_association":"COLLABORATOR","body":"*Original comment by @skearns64:*\n\nNote that this realm would support Kerberos over HTTP, and would also support SPNEGO. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384137000","html_url":"https://github.com/elastic/elasticsearch/issues/30025#issuecomment-384137000","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30025","id":384137000,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzNzAwMA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2017-05-03T11:49:17Z","updated_at":"2018-04-25T01:59:46Z","author_association":"COLLABORATOR","body":"*Original comment by @clintongormley:*\n\nWell worth a read: LINK REDACTED","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384137001","html_url":"https://github.com/elastic/elasticsearch/issues/30025#issuecomment-384137001","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30025","id":384137001,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzNzAwMQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2017-10-10T14:49:29Z","updated_at":"2018-04-25T01:59:46Z","author_association":"COLLABORATOR","body":"*Original comment by @pmoust:*\n\nFYI: Cloud expresses interest in Kerberos /cc @MikePaquette @joshbressers ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384137002","html_url":"https://github.com/elastic/elasticsearch/issues/30025#issuecomment-384137002","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30025","id":384137002,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzNzAwMg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2017-10-10T18:07:08Z","updated_at":"2018-04-25T01:59:47Z","author_association":"COLLABORATOR","body":"*Original comment by @jaymode:*\n\nCan you explain the use case for cloud?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384137004","html_url":"https://github.com/elastic/elasticsearch/issues/30025#issuecomment-384137004","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30025","id":384137004,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzNzAwNA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-04-09T19:04:35Z","updated_at":"2018-04-25T01:59:47Z","author_association":"COLLABORATOR","body":"*Original comment by @jaymode:*\n\n@pmoust Can you please add more details about Cloud's use case for kerberos? Without that we cannot be sure that what we develop will meet the needs of cloud.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384137006","html_url":"https://github.com/elastic/elasticsearch/issues/30025#issuecomment-384137006","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30025","id":384137006,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzNzAwNg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-04-10T15:24:32Z","updated_at":"2018-04-25T01:59:47Z","author_association":"COLLABORATOR","body":"*Original comment by @jaymode:*\n\nKerberos support will be implemented via HTTP SPNEGO. HTTP SPNEGO can be implemented in Java using the Java GSS api.\r\n\r\nThe typical flow for HTTP SPNEGO is:\r\n\r\n1. User makes request\r\n2. Server responds with HTTP 401 with the `WWW-Authenticate: Negotiate` header\r\n3. Client determines whether it should negotiate with the server; Internet Explorer will only Negotiate with sites that are in the local intranet or trusted sites zone. For firefox, the configuration parameter `network.negotiate-auth.trusted-uris` needs to contain the uri\r\n4. Client sends request again with header `Authorization: Negotiate ...`\r\n5. Server validates the value of the Negotiate header using a Keytab file\r\n\r\nA few important items to note, the Negotiate protocol can return NTLM tokens instead of kerberos. We should not attempt to provide support for NTLM tokens. There may be more than one roundtrip needed to authenticate the kerberos token and/or the token can be authenticated but data needs to be sent back to the client.\r\n\r\nIf we think about Kibana users wanting to authenticate via HTTP SPNEGO (common in Microsoft environments for SSO) then Kibana will be the interaction point with the user. This means that the browser will request a token to be sent to the service principal for Kibana. This means that Elasticsearch will need to be aware of the service principal name for Kibana. In terms of the Kibana flow, I believe that it should be somewhat similar to the SAML flow:\r\n\r\n1. User accesses Kibana\r\n2. User is challenged - TBD if this is from within Kibana or Elasticsearch\r\n3. User presents token; Kibana passes it to Elasticsearch\r\n4. If necessary, repeat challenge\r\n5. Kibana retrieves token from Elasticsearch for user - TBD will this be like the SAML API or should Kibana handle the decoding of the WWW-Authenticate response?\r\n\r\nOther HTTP clients should also be able to perform HTTP SPNEGO. This will be necessary for integration with ES Hadoop and possibly logstash/beats down the line. This means that Elasticsearch will also need to know about its own service principal name.\r\n\r\nThe next aspect of a Kerberos realm is how we authorize the principal after authentication. The typical Kerberos ticket only provides a subject, so we should be able to query an LDAP instance for additional group information and perform role mapping based upon the principal.\r\n\r\nIt should be considered out of scope to implement special handling of PAC data in Microsoft's tickets for the first iteration. For completeness, there is an unmaintained library that decodes this data , jaaslounge. The latest release of the library does not support AES encrypted tokens, but the code can easily be modified to support this.\r\n\r\n@kobelb @legrego @elastic/es-security thoughts?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384137007","html_url":"https://github.com/elastic/elasticsearch/issues/30025#issuecomment-384137007","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30025","id":384137007,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzNzAwNw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-04-10T21:09:19Z","updated_at":"2018-04-25T01:59:47Z","author_association":"COLLABORATOR","body":"*Original comment by @legrego:*\n\n@jaymode This approach makes sense to me for SPNEGO-enabled clients. Will we be able to do anything for clients that don’t support SPNEGO?\r\n\r\nRegarding the Kibana flow:\r\n> 2. User is challenged - TBD is this is from within Kibana or Elasticsearch\r\n\r\nI think Kibana can handle the initial challenge if no `authorization` header is present (via `www-authenticate: negotiate`). Any repeat challenges (step 4 above) could come from Elasticsearch\r\n\r\n> 5. Kibana retrieves token from Elasticsearch for user - TBD will this be like the SAML API or should Kibana handle the decoding of the WWW-Authenticate response?\r\n\r\nMy initial thought here is to have Elasticsearch perform the decoding, so that we're consistent with the SAML implementation, and so other clients won't also have to handle this. This part of the auth flow is a little unclear to me though, so what are the tradeoffs of each approach?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384137008","html_url":"https://github.com/elastic/elasticsearch/issues/30025#issuecomment-384137008","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30025","id":384137008,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzNzAwOA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-04-12T16:44:14Z","updated_at":"2018-04-25T01:59:47Z","author_association":"COLLABORATOR","body":"*Original comment by @jaymode:*\n\n> Will we be able to do anything for clients that don’t support SPNEGO?\r\n\r\nCan you clarify what you mean by clients that do not support SPNEGO? I do not think we would implement anything that would allow them to use Kerberos if they do not support SPNEGO.\r\n\r\n> I think Kibana can handle the initial challenge if no authorization header is present (via www-authenticate: negotiate). Any repeat challenges (step 4 above) could come from Elasticsearch\r\n\r\nI personally like this for Kibana. There are a few reasons; this would allow Kibana to challenge for negotiate authentication but still fallback to username/password for clients that do not support negotiate auth. I've done this in the past by doing the following: return a HTTP 401 with the `www-authenticate: negotiate` header AND a html body:\r\n\r\n```html\r\n<html>\r\n    <head>\r\n        <meta http-equiv=\"refresh\" content=\"0;URL='LINK REDACTED\" />    \r\n    </head>\r\n</html>\r\n```\r\n\r\nA browser that does not support negotiate for a given site, will not provide any response to the server so the body trick allows you to redirect the user to the login page. If the browser support negotiate, the body gets ignored. \r\n\r\n> My initial thought here is to have Elasticsearch perform the decoding, so that we're consistent with the SAML implementation, and so other clients won't also have to handle this. This part of the auth flow is a little unclear to me though, so what are the tradeoffs of each approach?\r\n\r\nI realize how unclear my statement was there. The two options would be:\r\n\r\n1. Have a special endpoint for Kibana to post requests with Kerberos tokens, like we have for SAML. This special API in elasticsearch that Kibana posts the SAML response to, returns a response that contains the token.\r\n\r\n2. Kibana checks for a user having a token/auth and if none starts the SPNEGO flow and proxies the requests to elasticsearch. The request would be different than the users request and would be for a token (ie hit the POST /_xpack/security/oauth2/token endpoint) and the response there will return a token that can be used for continued authentication of the user. special API was created in elasticsearch that Kibana would post the SAML response to and the response would contain the token. \r\n\r\nThe more I think about it, I feel like we do not need to add a special endpoint.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384137009","html_url":"https://github.com/elastic/elasticsearch/issues/30025#issuecomment-384137009","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30025","id":384137009,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzNzAwOQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-04-13T12:10:24Z","updated_at":"2018-04-25T01:59:47Z","author_association":"COLLABORATOR","body":"*Original comment by @legrego:*\n\n> Can you clarify what you mean by clients that do not support SPNEGO? I do not think we would implement anything that would allow them to use Kerberos if they do not support SPNEGO.\r\n\r\nYou actually answered my question in your followup, about returning an HTML response alongside the WWW-Authenticate challenge. In this scenario, Kibana would initiate the standard username/password authentication request to Elasticsearch, and then authentication would be attempted against the available realms in the chain capable of fulfilling the request?\r\n\r\n> 2. Kibana checks for a user having a token/auth and if none starts the SPNEGO flow and proxies the requests to elasticsearch. The request would be different than the users request and would be for a token (ie hit the POST /_xpack/security/oauth2/token endpoint) and the response there will return a token that can be used for continued authentication of the user. special API was created in elasticsearch that Kibana would post the SAML response to and the response would contain the token.\r\n\r\nThis approach makes sense to me. We can extract the token from the authenticate header and pass that along to the existing Token Service endpoint above. Elasticsearch will then exchange that for an access token after performing authentication.\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384137011","html_url":"https://github.com/elastic/elasticsearch/issues/30025#issuecomment-384137011","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30025","id":384137011,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzNzAxMQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-04-18T12:43:00Z","updated_at":"2018-04-25T01:59:48Z","author_association":"COLLABORATOR","body":"*Original comment by @pmoust:*\n\nThanks for pinging @clintongormley and @jaymode - sorry for taking us too long to reply.\r\n/cc @robgil \r\nWe'll get back to you within this week.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384137013","html_url":"https://github.com/elastic/elasticsearch/issues/30025#issuecomment-384137013","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30025","id":384137013,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzNzAxMw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-04-18T14:13:58Z","updated_at":"2018-04-25T01:59:48Z","author_association":"COLLABORATOR","body":"*Original comment by @robgil:*\n\nIn cloud we will be running our own Directory Services (FreeIPA). This supports Kerberos, LDAP, HBAC, RBAC, central sudo, among others. We can certainly just go with SAML to integrate with both kerberos and LDAP, but direct kerberos would be handy as well. This should be a simple as adding a kerberos service principal for each ECE service. So for each cluster, Kibana and ES would each get their own service principals. This would allow us to grant access to each service independently and manage within FreeIPA. Granted kerberos is only AuthZ, AuthN would need to be handled elsewhere regardless, whether it be within ECE, or privilege/group mappings in LDAP. \r\n\r\nThis use case would essentially be the same for everyone. I don't think we should run our own Kerberos realm within ECE. Kerberos realms/masters are typically run by the organization already, and there is no need to add an additional master. Kerberos can be integrated with AD, FreeIPA, Fedora Directory Services, and others. \r\n\r\nDirect built in kerberos would also be very handy for securing ES access. Since applications are typically not user accounts, using kerberos over http for ES would allow `role account access` to ES without getting redirected to SAML for auth.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384137015","html_url":"https://github.com/elastic/elasticsearch/issues/30025#issuecomment-384137015","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30025","id":384137015,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzNzAxNQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-04-18T16:35:35Z","updated_at":"2018-04-25T01:59:48Z","author_association":"COLLABORATOR","body":"*Original comment by @jaymode:*\n\nThanks for the details @robgil @pmoust. This is important especially for the Kibana team as there will be additional work there for Kibana server to Elasticsearch authentication using Kerberos, cc @legrego. I have no idea what the kerberos support is like in node.js, so I would treat this as a separate item that end user kerberos support for Kibana.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/384137016","html_url":"https://github.com/elastic/elasticsearch/issues/30025#issuecomment-384137016","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30025","id":384137016,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NDEzNzAxNg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-04-19T15:14:08Z","updated_at":"2018-04-25T01:59:48Z","author_association":"COLLABORATOR","body":"*Original comment by @legrego:*\n\nAs @jaymode mentioned in the cross sync meeting today, node.js doesn't have built-in kerberos support.\r\nThere is an Apache-2.0 licensed LINK REDACTED, which is written as a LINK REDACTED. Using this requires us to build platform specific binaries for each of our supported environments, which is similar to what @kobelb is doing for his [syscall filtering work](https://github.com/elastic/kibana/pull/17496).\r\n\r\nIt sounds like the Cloud team won't need this support right away, so this could potentially be worked on in a later phase","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/415855189","html_url":"https://github.com/elastic/elasticsearch/issues/30025#issuecomment-415855189","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30025","id":415855189,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTg1NTE4OQ==","user":{"login":"loekvangool","id":7300472,"node_id":"MDQ6VXNlcjczMDA0NzI=","avatar_url":"https://avatars0.githubusercontent.com/u/7300472?v=4","gravatar_id":"","url":"https://api.github.com/users/loekvangool","html_url":"https://github.com/loekvangool","followers_url":"https://api.github.com/users/loekvangool/followers","following_url":"https://api.github.com/users/loekvangool/following{/other_user}","gists_url":"https://api.github.com/users/loekvangool/gists{/gist_id}","starred_url":"https://api.github.com/users/loekvangool/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loekvangool/subscriptions","organizations_url":"https://api.github.com/users/loekvangool/orgs","repos_url":"https://api.github.com/users/loekvangool/repos","events_url":"https://api.github.com/users/loekvangool/events{/privacy}","received_events_url":"https://api.github.com/users/loekvangool/received_events","type":"User","site_admin":false},"created_at":"2018-08-24T19:11:09Z","updated_at":"2018-08-24T19:45:50Z","author_association":"CONTRIBUTOR","body":"Has this been superseded by https://github.com/elastic/elasticsearch/issues/30243 and thus, closable? Many ERs are linked to this one and its predecessor","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/415863735","html_url":"https://github.com/elastic/elasticsearch/issues/30025#issuecomment-415863735","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30025","id":415863735,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTg2MzczNQ==","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"created_at":"2018-08-24T19:46:21Z","updated_at":"2018-08-24T19:46:21Z","author_association":"MEMBER","body":"Yes this one is superseded by #30243. Closing.","performed_via_github_app":null}]