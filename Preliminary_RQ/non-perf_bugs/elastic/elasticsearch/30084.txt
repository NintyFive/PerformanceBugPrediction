{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/30084","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30084/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30084/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30084/events","html_url":"https://github.com/elastic/elasticsearch/issues/30084","id":317454806,"node_id":"MDU6SXNzdWUzMTc0NTQ4MDY=","number":30084,"title":"[ML] Validate existing cluster state differently to newly submitted configs","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"labels":[{"id":912833043,"node_id":"MDU6TGFiZWw5MTI4MzMwNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:ml","name":":ml","color":"0e8a16","default":false,"description":"Machine learning"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-09-05T08:54:09Z","updated_at":"2018-12-05T10:18:31Z","closed_at":"2018-12-05T10:18:31Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"*Original comment by @droberts195:*\n\nIf we're going to introduce _completely_ new job types in the future, we need to change the way unknown job/datafeed cluster state is validated.\r\n\r\nWhile trying to add `categorizer` jobs, which are quite similar to `anomaly_detector` jobs, I ran into the following problem:\r\n\r\n* Logically, a `categorizer` job should have no `detectors`\r\n* But the `AnalysisConfig` class requires `detectors`\r\n* There are two possible solutions that seem reasonable at first glance:\r\n  1. Have `categorizer` jobs have a `categorization_config` _instead_ of `analysis_config`\r\n  2. Change `analysis_config` so that `detectors` is not required if the `job_type` is `categorizer`\r\n* Unfortunately neither of these works:\r\n  1. Old nodes will ignore `categorization_config` when parsing metadata, but then error because `Job` requires an `analysis_config`\r\n  2. Old nodes will not tolerate an `analysis_config` with no detectors\r\n* This results in the messy solution that `categorizer` jobs will have to have an `analysis_config` that includes unnecessary fields - new nodes will ignore these fields and mask them when printing the config in REST responses, but old nodes will show the unnecessary bits\r\n\r\nI think the only long term solution that allows the necessary degree of extensibility is to hold `Job`s as arbitrary `Map<String, Object>` or `BytesReference` when parsing from cluster state, and only interpret what's in the `Map` or `BytesReference` if the `job_type` is understood.  This is pretty much how index settings work.","closed_by":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"performed_via_github_app":null}