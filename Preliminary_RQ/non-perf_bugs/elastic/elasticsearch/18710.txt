{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/18710","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18710/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18710/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18710/events","html_url":"https://github.com/elastic/elasticsearch/issues/18710","id":158249576,"node_id":"MDU6SXNzdWUxNTgyNDk1NzY=","number":18710,"title":"Using fuzziness parameter in multi_match query interferes with per field boosting","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"assignees":[{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2016-06-02T22:00:23Z","updated_at":"2018-02-14T13:33:00Z","closed_at":"2016-10-12T14:57:11Z","author_association":"MEMBER","active_lock_reason":null,"body":"To reproduce, we start with an index with default settings containing two records in different shards and a query that boosts one of the fields:\n\n```\nDELETE test\n\nPUT test/doc/1\n{\n  \"title\": \"bar\",\n  \"body\": \"foo\"\n}\n\nPUT test/doc/2\n{\n  \"title\": \"foo\",\n  \"body\": \"bar\"\n}\n\nGET test/doc/_search\n{\n  \"query\": {\n    \"multi_match\": {\n      \"query\": \"foo\",\n      \"fields\": [\"title^100\", \"body\"]\n    }\n  }\n}\n```\n\nWe get back a reasonable result: \n\n```\n{\n  \"took\" : 98,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 2,\n    \"max_score\" : 1.0,\n    \"hits\" : [ {\n      \"_index\" : \"tests\",\n      \"_type\" : \"test\",\n      \"_id\" : \"2\",\n      \"_score\" : 1.0,\n      \"_source\" : {\n        \"title\" : \"foo\",\n        \"body\" : \"bar\"\n      }\n    }, {\n      \"_index\" : \"tests\",\n      \"_type\" : \"test\",\n      \"_id\" : \"1\",\n      \"_score\" : 0.0059061614,\n      \"_source\" : {\n        \"title\" : \"bar\",\n        \"body\" : \"foo\"\n      }\n    } ]\n  }\n}\n```\n\nNow, add the `fuzziness` parameter to the query (the value doesn't matter as long as it doesn't interfere with matches):\n\n```\nGET test/doc/_search\n{\n  \"query\": {\n    \"multi_match\": {\n      \"query\": \"foo\",\n      \"fields\": [\"title^100\", \"body\"],\n      \"fuzziness\": 0\n    }\n  }\n}\n```\n\nthe result is both records are scored the same:\n\n```\n{\n  \"took\" : 17,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 2,\n    \"max_score\" : 1.0,\n    \"hits\" : [ {\n      \"_index\" : \"tests\",\n      \"_type\" : \"test\",\n      \"_id\" : \"2\",\n      \"_score\" : 1.0,\n      \"_source\" : {\n        \"title\" : \"foo\",\n        \"body\" : \"bar\"\n      }\n    }, {\n      \"_index\" : \"tests\",\n      \"_type\" : \"test\",\n      \"_id\" : \"1\",\n      \"_score\" : 1.0,\n      \"_source\" : {\n        \"title\" : \"bar\",\n        \"body\" : \"foo\"\n      }\n    } ]\n  }\n}\n```\n\nHowever, the same experiment repeated on a single shard index produces reasonable results. It looks like if the fuzziness parameter is present, queryNorm is correctly applied only on shards where the boosted field matched at least one record.\n\nI was able to reproduce the issue on both 2.3.3 and the latest master.\n\nThe issue was originally reported on the [discussion forum](https://discuss.elastic.co/t/ne-rabotaet-boost-v-zaprosah/51648).\n","closed_by":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"performed_via_github_app":null}