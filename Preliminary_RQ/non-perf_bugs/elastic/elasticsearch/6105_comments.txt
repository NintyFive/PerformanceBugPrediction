[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/42654452","html_url":"https://github.com/elastic/elasticsearch/issues/6105#issuecomment-42654452","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6105","id":42654452,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNjU0NDUy","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2014-05-09T10:56:54Z","updated_at":"2014-05-09T10:56:54Z","author_association":"MEMBER","body":"double checking, I assume you are talking about the `TransportClient`, right?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/42658662","html_url":"https://github.com/elastic/elasticsearch/issues/6105#issuecomment-42658662","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6105","id":42658662,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNjU4NjYy","user":{"login":"magnhaug","id":477436,"node_id":"MDQ6VXNlcjQ3NzQzNg==","avatar_url":"https://avatars0.githubusercontent.com/u/477436?v=4","gravatar_id":"","url":"https://api.github.com/users/magnhaug","html_url":"https://github.com/magnhaug","followers_url":"https://api.github.com/users/magnhaug/followers","following_url":"https://api.github.com/users/magnhaug/following{/other_user}","gists_url":"https://api.github.com/users/magnhaug/gists{/gist_id}","starred_url":"https://api.github.com/users/magnhaug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/magnhaug/subscriptions","organizations_url":"https://api.github.com/users/magnhaug/orgs","repos_url":"https://api.github.com/users/magnhaug/repos","events_url":"https://api.github.com/users/magnhaug/events{/privacy}","received_events_url":"https://api.github.com/users/magnhaug/received_events","type":"User","site_admin":false},"created_at":"2014-05-09T12:02:21Z","updated_at":"2014-05-09T12:03:48Z","author_association":"NONE","body":"Yes, I am talking about the `TransportClient` primarly. Searching/indexing/etc.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/42661787","html_url":"https://github.com/elastic/elasticsearch/issues/6105#issuecomment-42661787","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6105","id":42661787,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNjYxNzg3","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2014-05-09T12:46:13Z","updated_at":"2014-05-09T12:46:13Z","author_association":"MEMBER","body":"yea, the `TransportClient`, different form the `NodeClient`, has the retry logic on another endpoint, today, we retry on connection problems, but we should retry on other cases as well, specifically, the one mentioned above. The `NodeClient` doesn't suffer from this problem, because it automatically handles it already.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/91628767","html_url":"https://github.com/elastic/elasticsearch/issues/6105#issuecomment-91628767","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6105","id":91628767,"node_id":"MDEyOklzc3VlQ29tbWVudDkxNjI4NzY3","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2015-04-10T17:29:50Z","updated_at":"2015-04-10T17:29:50Z","author_association":"MEMBER","body":"@spinscale is this something that is fixed by using sniffing on the transport client?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/106866333","html_url":"https://github.com/elastic/elasticsearch/issues/6105#issuecomment-106866333","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6105","id":106866333,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNjg2NjMzMw==","user":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"created_at":"2015-05-29T16:36:46Z","updated_at":"2015-05-29T16:36:46Z","author_association":"MEMBER","body":"@dakrone we dont seem to have this fixed completely in all setups (sniffing seems not to be affected though, but adding all of the nodes manually seems to have a different behaviour)... I created a test that fakes long gc runs, network interruptions or a down node and that one fails in about 20% of the time it runs... this is the test, maybe there is a flaw in it, but so far it looks ok to me\n\n``` java\n    /**\n     * issue: https://github.com/elastic/elasticsearch/issues/6105\n     *\n     * 1. Start a cluster with three nodes\n     *\n     * 2. Start threee different transport clients\n     *  - First hast only nodeX confgiured to connect to\n     *  - Second has all nodes configured\n     *  - Third has only nodeX configured but sniffing enabled\n     *\n     * 3. Split nodeX away from cluster\n     *\n     * 4. Check TransportClient expectations\n     *  - First should fail\n     *  - Second should keep working\n     *  - Third should keep working\n     */\n    @Test\n    @TestLogging(\"discovery:DEBUG\")\n    public void testThatTransportClientCanHandleNodeOutage() throws Exception {\n        final List<String> nodes = startUnicastCluster(3, null, 2);\n        final String masterNode = internalCluster().getMasterName();\n\n        // kill the first non master node\n        String failingNode = null;\n        for (String node : nodes) {\n            if (!node.equals(masterNode)) {\n                failingNode = node;\n                break;\n            }\n        }\n\n        Map<String, TransportAddress> nodeAddresses = new HashMap<>();\n        for (TransportService transportService : internalCluster().getDataNodeInstances(TransportService.class)) {\n            nodeAddresses.put(transportService.nodeName(), transportService.boundAddress().publishAddress());\n        }\n\n        SingleNodeDisruption nodeDisruption = new LongGCDisruption(getRandom(), failingNode);\n\n        TransportClient tc1 = null, tc2 = null, tc3 = null;\n        Settings allTransportClientSettings = settingsBuilder().put(\"cluster.name\", internalCluster().getClusterName())\n                .put(\"client.transport.nodes_sampler_interval\", \"1s\")\n                .put(\"path.home\", createTempDir())\n                .put(\"node.mode\", InternalTestCluster.nodeMode())\n                .put(\"name\", \"transport_client_\" )\n                .put(\"config.ignore_system_properties\", true)\n                .put(\"plugins.\" + PluginsService.LOAD_PLUGIN_FROM_CLASSPATH, false)\n                .put(\"client.transport.sniff\", false)\n                .build();\n        try {\n            tc1 = TransportClient.builder().settings(settingsBuilder().put(allTransportClientSettings).put(\"name\", \"tc1\")).build();\n            tc1.addTransportAddress(nodeAddresses.get(failingNode));\n\n            tc2 = TransportClient.builder().settings(settingsBuilder().put(allTransportClientSettings).put(\"name\", \"tc2\")).build();\n            tc2.addTransportAddresses(nodeAddresses.values().toArray(new TransportAddress[]{}));\n\n            tc3 = TransportClient.builder().settings(settingsBuilder().put(allTransportClientSettings).put(\"name\", \"tc3\").put(\"client.transport.sniff\", true)).build();\n            tc3.addTransportAddress(nodeAddresses.get(failingNode));\n\n            if (randomBoolean()) {\n                nodeDisruption.startDisrupting();\n            } else {\n                addRandomIsolation(failingNode).startDisrupting();\n            }\n\n            logger.info(\"waiting for [{}] to be removed from cluster\", failingNode);\n            ensureStableCluster(2, masterNode);\n\n            TimeValue timeout = timeValueSeconds(10);\n\n            try {\n                tc1.admin().cluster().prepareHealth().get(timeout);\n            } catch (ElasticsearchTimeoutException e) {\n                // all good, no sniffing enabled, no chance to connect to other nodes\n            }\n\n            // TODO this fails in case of a network disruption, transport client should be smarter\n            assertThat(tc2.admin().cluster().prepareHealth().get(timeout).getStatus(), is(ClusterHealthStatus.GREEN));\n            assertThat(tc3.admin().cluster().prepareHealth().get(timeout).getStatus(), is(ClusterHealthStatus.GREEN));\n\n            // lets resolve the disruption and check that all three clients can execute requests as expected\n            nodeDisruption.stopDisrupting();\n            internalCluster().clearDisruptionScheme();\n            logger.info(\"waiting for [{}] to be re-added to cluster\", failingNode);\n            ensureStableCluster(3, masterNode);\n\n            assertThat(tc1.admin().cluster().prepareHealth().get(timeout).getStatus(), is(ClusterHealthStatus.GREEN));\n            assertThat(tc2.admin().cluster().prepareHealth().get(timeout).getStatus(), is(ClusterHealthStatus.GREEN));\n            assertThat(tc3.admin().cluster().prepareHealth().get(timeout).getStatus(), is(ClusterHealthStatus.GREEN));\n\n        } finally {\n            nodeDisruption.stopDisrupting();\n            internalCluster().clearDisruptionScheme();\n            if (tc1 != null) tc1.close();\n            if (tc2 != null) tc2.close();\n            if (tc3 != null) tc3.close();\n        }\n    }\n\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148106099","html_url":"https://github.com/elastic/elasticsearch/issues/6105#issuecomment-148106099","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6105","id":148106099,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODEwNjA5OQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-10-14T16:25:22Z","updated_at":"2015-10-14T16:25:22Z","author_association":"CONTRIBUTOR","body":"This appears to be fixed.  Please reopen if you see the same issues with 2.0 or later.\n","performed_via_github_app":null}]