{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/39818","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39818/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39818/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39818/events","html_url":"https://github.com/elastic/elasticsearch/issues/39818","id":418608709,"node_id":"MDU6SXNzdWU0MTg2MDg3MDk=","number":39818,"title":"[Feature Request] - Reinstate delete index by alias / add alias to alias","user":{"login":"JulianRooze","id":1694905,"node_id":"MDQ6VXNlcjE2OTQ5MDU=","avatar_url":"https://avatars2.githubusercontent.com/u/1694905?v=4","gravatar_id":"","url":"https://api.github.com/users/JulianRooze","html_url":"https://github.com/JulianRooze","followers_url":"https://api.github.com/users/JulianRooze/followers","following_url":"https://api.github.com/users/JulianRooze/following{/other_user}","gists_url":"https://api.github.com/users/JulianRooze/gists{/gist_id}","starred_url":"https://api.github.com/users/JulianRooze/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JulianRooze/subscriptions","organizations_url":"https://api.github.com/users/JulianRooze/orgs","repos_url":"https://api.github.com/users/JulianRooze/repos","events_url":"https://api.github.com/users/JulianRooze/events{/privacy}","received_events_url":"https://api.github.com/users/JulianRooze/received_events","type":"User","site_admin":false},"labels":[{"id":163824881,"node_id":"MDU6TGFiZWwxNjM4MjQ4ODE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Features/Indices%20APIs","name":":Core/Features/Indices APIs","color":"0e8a16","default":false,"description":"APIs to create and manage indices"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-03-08T02:53:21Z","updated_at":"2019-03-11T11:35:37Z","closed_at":"2019-03-08T03:37:15Z","author_association":"NONE","active_lock_reason":null,"body":"I'm working on upgrading our Elasticsearch 5 cluster to Elasticsearch 6 and I'm running into an issue with the changes to what you are allowed to do with an alias and I'd like to make the case for this to be reinstated to how this used to work (at least opt-in). The [changes](https://www.elastic.co/guide/en/elasticsearch/reference/6.0/breaking_60_indices_changes.html#_indices_aliases_api_resolves_indices_expressions_only_against_indices) I'm referring to are:\r\n\r\n- No longer being able to delete one or more indices using an alias.\r\n- No longer being able to add an alias to an alias.\r\n\r\nThe fact that an alias behaved transparently like an index in nearly every way was one of the great things about them. This change will, at least for us, only result in a bunch of extra checks and corner cases without any benefit. The way this worked in ES5 was intuitive and simple, the logic of determining whether something was an index, an alias or multiple indices was left to Elasticsearch, but ES6 makes it your problem again.\r\n\r\nMoreover, I would argue that this change is not internally consistent, as doing a `GET my_alias` is a valid operation, that still behaves the same as doing a `GET my_index` in every way, like it is in ES5, but following that up with a `DELETE my_alias` results in a Bad Request. The only way to know that this seemingly valid operation results in an error is either knowing that `my_alias` is an alias (our code doesn't know because it doesn't care about this) or by comparing the name of what the `GET` returned to what you sent in. The same goes for doing a `HEAD my_alias` which still returns OK. From a REST point of view, if you can `GET` a resource then you should be able to `DELETE` that resource too, but this is not the case, the `DELETE` operation for *some* cases (aliases) actually lives on a *different* resource (`_aliases/`). \r\n\r\nWhile this change can be worked around, it still feels bad because before the code felt elegant, but now I have to add a bunch of checks in places where we delete an index, but where I frankly don't know or care (before) if it's an alias or an actual index. \r\n\r\nSome use cases have become non-trivial because of this change. One example is where we add a `indices_to_delete` alias to an index right before we delete it. This was a nice solution to the problem of transient errors with deleting an index (such as an index being snapshotted at the time of deletion) whereby a scheduled task (or the Curator) can periodically clean up indices that couldn't be deleted before with a simple `DELETE indices_to_delete`.  Now, this involves at least two roundtrips and the involvement of a JSON parser. \r\n\r\nBeing able to use aliases as flexibly as you could in ES5 was part of what put the *Elastic* into Elasticsearch for us. I would like to see the behavior reverted to the old behavior, if necessary by a YAML setting. ","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}