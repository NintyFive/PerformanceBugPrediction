[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/289505103","html_url":"https://github.com/elastic/elasticsearch/issues/23763#issuecomment-289505103","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23763","id":289505103,"node_id":"MDEyOklzc3VlQ29tbWVudDI4OTUwNTEwMw==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2017-03-27T16:19:59Z","updated_at":"2017-03-27T16:19:59Z","author_association":"CONTRIBUTOR","body":"I expect the issue being that stored values are not being materialized into the script context using the numeric type defined in the mapping.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/289616609","html_url":"https://github.com/elastic/elasticsearch/issues/23763#issuecomment-289616609","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23763","id":289616609,"node_id":"MDEyOklzc3VlQ29tbWVudDI4OTYxNjYwOQ==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2017-03-27T23:29:57Z","updated_at":"2017-03-27T23:29:57Z","author_association":"CONTRIBUTOR","body":"I believe @markharwood is correct here.  If _source was working with mappings, using long as the type in the for loop would be correct as well.  \r\n\r\nUnfortunately, since that isn't the case, there's a few things happening here leading to the current situation.\r\n\r\n1. The values as part of the params list is being parsed where the smallest available type starting with int will be applied to the number.  That means params.values ends up being a  List of Integers and Longs (note the difference here is they are boxed types since Java forces them to be so as part of a List)\r\n2. _source not respecting mappings means that it's parsed with the smallest available type starting with int.  This means that _source.values ends up being a List of Integers and Longs as well\r\n3. In Painless 1L == 1 is a true statement; however, for boxed types this is not the case (and it's not the case in Java or Groovy either).  We are left with few reasonable options here other than to follow the Java model since Painless is built on the JVM and for performance reasons.   When indexOf is called on the values List the type is implicitly boxed meaning that int becomes Integer or long becomes Long, and Long(1) == Integer(1) is a *false* statement unfortunately.\r\n\r\nSince there is symmetry between the types in params.values and _source.values, def will work here.  def will either become an int or a long depending on the value pulled from the params.values List and the boxed to an Integer or Long when _source.values.indexOf is called.\r\n\r\nHowever, I believe you can simplify this script by doing ```ctx._source.values.removeAll(params.values);```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/290153108","html_url":"https://github.com/elastic/elasticsearch/issues/23763#issuecomment-290153108","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23763","id":290153108,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MDE1MzEwOA==","user":{"login":"Tomassino","id":4801309,"node_id":"MDQ6VXNlcjQ4MDEzMDk=","avatar_url":"https://avatars3.githubusercontent.com/u/4801309?v=4","gravatar_id":"","url":"https://api.github.com/users/Tomassino","html_url":"https://github.com/Tomassino","followers_url":"https://api.github.com/users/Tomassino/followers","following_url":"https://api.github.com/users/Tomassino/following{/other_user}","gists_url":"https://api.github.com/users/Tomassino/gists{/gist_id}","starred_url":"https://api.github.com/users/Tomassino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tomassino/subscriptions","organizations_url":"https://api.github.com/users/Tomassino/orgs","repos_url":"https://api.github.com/users/Tomassino/repos","events_url":"https://api.github.com/users/Tomassino/events{/privacy}","received_events_url":"https://api.github.com/users/Tomassino/received_events","type":"User","site_admin":false},"created_at":"2017-03-29T16:55:25Z","updated_at":"2017-03-29T16:55:25Z","author_association":"NONE","body":"I found another variation of this problem when using the java api. To be honest I'm using scala and elastic4s, but that library is only a wrapper, so I suppose what I'm going to say also holds when using the java api directly (if you think that there could be a substantial difference, I could try to write a small java program to verify the issue). In the example above, even when using `removeAll` of `def` in the for loop, the value 1 is not removed. It seems like in this case 1 in the list of values is actually considered a `long`. I'm not sure, but could this be related to the fact that the java api uses protocol different from the one used by the curl example?\r\n\r\nP.S.: thanks @jdconrad for the hint about `removeAll`!\r\nP.P.S.: I've not yet tried 5.3, I'll do as soon as possible","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/290181564","html_url":"https://github.com/elastic/elasticsearch/issues/23763#issuecomment-290181564","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23763","id":290181564,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MDE4MTU2NA==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2017-03-29T18:26:58Z","updated_at":"2017-03-29T18:26:58Z","author_association":"CONTRIBUTOR","body":"@Tomassino When using def are the other numbers except for 1 removed or are all the numbers in the Java int range being left behind?  If only 1 is left that seems like a bug and would certainly be worth looking into more.  As for the java api versus curl, it's very possible that using java causes all the values to be longs in the params list.  If that's the case, we should probably find a way to at least be consistent.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/290341796","html_url":"https://github.com/elastic/elasticsearch/issues/23763#issuecomment-290341796","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23763","id":290341796,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MDM0MTc5Ng==","user":{"login":"Tomassino","id":4801309,"node_id":"MDQ6VXNlcjQ4MDEzMDk=","avatar_url":"https://avatars3.githubusercontent.com/u/4801309?v=4","gravatar_id":"","url":"https://api.github.com/users/Tomassino","html_url":"https://github.com/Tomassino","followers_url":"https://api.github.com/users/Tomassino/followers","following_url":"https://api.github.com/users/Tomassino/following{/other_user}","gists_url":"https://api.github.com/users/Tomassino/gists{/gist_id}","starred_url":"https://api.github.com/users/Tomassino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tomassino/subscriptions","organizations_url":"https://api.github.com/users/Tomassino/orgs","repos_url":"https://api.github.com/users/Tomassino/repos","events_url":"https://api.github.com/users/Tomassino/events{/privacy}","received_events_url":"https://api.github.com/users/Tomassino/received_events","type":"User","site_admin":false},"created_at":"2017-03-30T08:37:24Z","updated_at":"2017-03-30T08:38:21Z","author_association":"NONE","body":"No number in the Java int range is removed (e.g. 2147483647 is NOT removed, while 2147483648 is). It really seems that all values in parameters are taken as long, when using the java API, while for values in the document the type is inferred taking the value into account\r\n\r\nP.S.: I've performed the tests on ElasticSearch 5.3","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/372787604","html_url":"https://github.com/elastic/elasticsearch/issues/23763#issuecomment-372787604","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23763","id":372787604,"node_id":"MDEyOklzc3VlQ29tbWVudDM3Mjc4NzYwNA==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2018-03-13T19:21:40Z","updated_at":"2018-03-13T19:21:40Z","author_association":"CONTRIBUTOR","body":"Closing this as there's a work around and it's related to parsing issues.","performed_via_github_app":null}]