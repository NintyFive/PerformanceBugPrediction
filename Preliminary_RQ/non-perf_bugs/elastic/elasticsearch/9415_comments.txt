[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/71531033","html_url":"https://github.com/elastic/elasticsearch/issues/9415#issuecomment-71531033","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9415","id":71531033,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNTMxMDMz","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-01-26T20:23:34Z","updated_at":"2015-01-26T20:23:34Z","author_association":"CONTRIBUTOR","body":"Hi @SjonHortensius \n\nYes - Elasticsearch is quite lenient about parsing invalid JSON, and it just returns the original JSON string when you search or GET a document.  We have a ticket open for improving this situation (see #2315).\n\n> Can I correct this without reindexing everything?\n\nNo.  Whatever approach you take, you need to store a new _source string, which means reindexing everything.  What you could do is to use scan/scroll (with _source: false, so that you don't get the bad JSON returned to you) to return the id of every document in your index, tranche by tranche.  Then for each ID, issue an update statement for each document, which makes no changes, eg:\n\n```\ncurl -XPOST \"http://localhost:9200/test/hit/1/_update\" -d'\n{\"doc\":{}}'\n```\n\nThis will rewrite the _source field, hopefully correcting your error\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/71531766","html_url":"https://github.com/elastic/elasticsearch/issues/9415#issuecomment-71531766","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9415","id":71531766,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNTMxNzY2","user":{"login":"SjonHortensius","id":1684987,"node_id":"MDQ6VXNlcjE2ODQ5ODc=","avatar_url":"https://avatars0.githubusercontent.com/u/1684987?v=4","gravatar_id":"","url":"https://api.github.com/users/SjonHortensius","html_url":"https://github.com/SjonHortensius","followers_url":"https://api.github.com/users/SjonHortensius/followers","following_url":"https://api.github.com/users/SjonHortensius/following{/other_user}","gists_url":"https://api.github.com/users/SjonHortensius/gists{/gist_id}","starred_url":"https://api.github.com/users/SjonHortensius/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SjonHortensius/subscriptions","organizations_url":"https://api.github.com/users/SjonHortensius/orgs","repos_url":"https://api.github.com/users/SjonHortensius/repos","events_url":"https://api.github.com/users/SjonHortensius/events{/privacy}","received_events_url":"https://api.github.com/users/SjonHortensius/received_events","type":"User","site_admin":false},"created_at":"2015-01-26T20:27:54Z","updated_at":"2015-01-27T08:35:03Z","author_association":"NONE","body":"Thanks for the explanation. If this situation isn't expected it might be good if this were documented somewhere. It took me a few hours to find why Kibana broke, complaining about unparsable json. I'd never expected my own invalid input to be accepted by e/s :)\n","performed_via_github_app":null}]