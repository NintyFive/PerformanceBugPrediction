[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/486634612","html_url":"https://github.com/elastic/elasticsearch/issues/41526#issuecomment-486634612","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41526","id":486634612,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjYzNDYxMg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-04-25T11:30:20Z","updated_at":"2019-04-25T11:30:20Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/488823726","html_url":"https://github.com/elastic/elasticsearch/issues/41526#issuecomment-488823726","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41526","id":488823726,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4ODgyMzcyNg==","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"created_at":"2019-05-02T20:37:37Z","updated_at":"2019-05-02T20:37:37Z","author_association":"MEMBER","body":"We discussed this in the core infra meeting. It appears as something is holding onto to a file/filesystem reference in a static field. We do not want to grant this level of access to the RamUsageEstimator. In order to find out what is holding said reference, we need to look at making an improvement in the RamUsageEstimator and/or the test rule to output the class and even the field name when available.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/553986873","html_url":"https://github.com/elastic/elasticsearch/issues/41526#issuecomment-553986873","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41526","id":553986873,"node_id":"MDEyOklzc3VlQ29tbWVudDU1Mzk4Njg3Mw==","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"created_at":"2019-11-14T17:13:40Z","updated_at":"2019-11-14T17:13:40Z","author_association":"MEMBER","body":"> we need to look at making an improvement in the RamUsageEstimator and/or the test rule to output the class and even the field name when available.\r\n\r\nThis may not be needed as RamUsageEstimator already does output the top level object that triggers the exception, but the information is easily overlooked. In the cases of these failures, the RamUsageEstimator output `  - private static org.elasticsearch.test.TestCluster org.elasticsearch.test.ESIntegTestCase.currentCluster` as the offending static object. This makes sense as the `InternalTestCluster` class maintains a reference to a set of `Path` objects that represent data directories and the actual implementation of the `Path` objects are in the `sun.nio.fs` package.\r\n\r\nIn order to reproduce the issue, I was able to create a test that indexed 1000+ documents asynchronously, then performed a full cluster restart using `internalCluster().fullRestart()`, while indexing was ongoing, and modified the InternalTestCluster to call `Node#awaitClose` with a value of 0 seconds instead of 10 seconds, which will trigger an exception to be thrown during the execution of `ESIntegTestCase#afterClass`, which ultimately leads to the static fields not being cleared. JDK8 is necessary for this as LuceneTestCase disables the StaticFieldsInvariantRule if Java 9 or newer is used.","performed_via_github_app":null}]