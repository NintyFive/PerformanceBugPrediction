{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/13705","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13705/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13705/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13705/events","html_url":"https://github.com/elastic/elasticsearch/issues/13705","id":107659092,"node_id":"MDU6SXNzdWUxMDc2NTkwOTI=","number":13705,"title":"Making searches faster","user":{"login":"sdht0","id":867424,"node_id":"MDQ6VXNlcjg2NzQyNA==","avatar_url":"https://avatars0.githubusercontent.com/u/867424?v=4","gravatar_id":"","url":"https://api.github.com/users/sdht0","html_url":"https://github.com/sdht0","followers_url":"https://api.github.com/users/sdht0/followers","following_url":"https://api.github.com/users/sdht0/following{/other_user}","gists_url":"https://api.github.com/users/sdht0/gists{/gist_id}","starred_url":"https://api.github.com/users/sdht0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sdht0/subscriptions","organizations_url":"https://api.github.com/users/sdht0/orgs","repos_url":"https://api.github.com/users/sdht0/repos","events_url":"https://api.github.com/users/sdht0/events{/privacy}","received_events_url":"https://api.github.com/users/sdht0/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-09-22T07:21:03Z","updated_at":"2015-09-22T07:57:04Z","closed_at":"2015-09-22T07:24:55Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\n\nKindly help me with some tips on tuning elasticseach for faster searching. Sorry for the long post.\nI have two elasticsearch clusters\n\n1)\n- Two bare metal nodes, each with 24 cores, 64 GiB RAM, rotational 1TB HDD\n- Around 5853319 docs (10GiB) per day with 4 primary shards and replication=1\n- 16GiB heap, no other special configuration\n\nIn this cluster, if I do a 7 day search in Kibana 4 dashboard with around 30 graphs, it takes more than a minute to return all results, then on applying a filter, it takes another minute to give back results. Can it do it faster than this? \n\nHQ plugin shows the following stats in warning/error stages for the two nodes:\nSearch - Query:     308.35ms    355.12ms\nSearch - Fetch:     104.61ms    84.6ms\nRefresh:                     34.63ms    29.37ms \n\n2) \n- Three EC2 c4.4xlarge data nodes, each with 16 cores, 30 GiB RAM, EBS volumes\n- Around 188361074 docs (400GiB) per day with 5 primary shards and replication=1\n- 16GiB heap\n\nWas getting error in Kibana, so increased circuitbreaker to 75%. Then did a 7 day search, brought the whole cluster down due to OOM exceptions. Was that overkill? What can I do to make this search successful, and to prevent the cluster from going down?\n\nHoping for some pointers here. Thanks\n","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}