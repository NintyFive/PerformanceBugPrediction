[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/538877584","html_url":"https://github.com/elastic/elasticsearch/issues/47574#issuecomment-538877584","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47574","id":538877584,"node_id":"MDEyOklzc3VlQ29tbWVudDUzODg3NzU4NA==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2019-10-07T07:42:12Z","updated_at":"2019-10-07T07:42:12Z","author_association":"MEMBER","body":"> But when targeting the node that holds the shard (directly encoding to json) the output looks like:\r\n\r\nHi @nomoa - In this case you are referring to the REST API right? If so, what client are you using to execute the request?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/538877754","html_url":"https://github.com/elastic/elasticsearch/issues/47574#issuecomment-538877754","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47574","id":538877754,"node_id":"MDEyOklzc3VlQ29tbWVudDUzODg3Nzc1NA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-10-07T07:42:43Z","updated_at":"2019-10-07T07:42:43Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra (:Core/Infra/REST API)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/539172990","html_url":"https://github.com/elastic/elasticsearch/issues/47574#issuecomment-539172990","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47574","id":539172990,"node_id":"MDEyOklzc3VlQ29tbWVudDUzOTE3Mjk5MA==","user":{"login":"nomoa","id":5939211,"node_id":"MDQ6VXNlcjU5MzkyMTE=","avatar_url":"https://avatars1.githubusercontent.com/u/5939211?v=4","gravatar_id":"","url":"https://api.github.com/users/nomoa","html_url":"https://github.com/nomoa","followers_url":"https://api.github.com/users/nomoa/followers","following_url":"https://api.github.com/users/nomoa/following{/other_user}","gists_url":"https://api.github.com/users/nomoa/gists{/gist_id}","starred_url":"https://api.github.com/users/nomoa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nomoa/subscriptions","organizations_url":"https://api.github.com/users/nomoa/orgs","repos_url":"https://api.github.com/users/nomoa/repos","events_url":"https://api.github.com/users/nomoa/events{/privacy}","received_events_url":"https://api.github.com/users/nomoa/received_events","type":"User","site_admin":false},"created_at":"2019-10-07T19:44:27Z","updated_at":"2019-10-07T19:48:40Z","author_association":"CONTRIBUTOR","body":"It is in the highlight response, the json parsers that I use and fail are `jq` and json_decode from php 7.2.\r\n\r\nCould it be caused by the fact that because SearchHit uses the Text object for storing strings and that the writeText/readText simply use [String#getBytes(UTF8)](https://github.com/elastic/elasticsearch/blob/master/server/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java#L388) it will replace unmapable chars (e.g. broken surrogate pairs) [with a default char](https://docs.oracle.com/javase/7/docs/api/java/lang/String.html#getBytes%28java.nio.charset.Charset%29) when going through the transport protocol?\r\n\r\nThe writeString/readString methods do not seem affected by this as they seem to own the char->byte encoding.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/539192440","html_url":"https://github.com/elastic/elasticsearch/issues/47574#issuecomment-539192440","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47574","id":539192440,"node_id":"MDEyOklzc3VlQ29tbWVudDUzOTE5MjQ0MA==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2019-10-07T20:34:19Z","updated_at":"2019-10-07T20:34:19Z","author_association":"MEMBER","body":"All the builtin text handling read/write methods for StreamInput/Output as well as xcontent operate under the assumption of using utf8. When you say that you have a custom highlighter, do you mean your own highlighting code? Are you constructing `Text` objects with  the constructor taking `BytesReference` with bytes that are not utf8 encoded?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/539211645","html_url":"https://github.com/elastic/elasticsearch/issues/47574#issuecomment-539211645","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47574","id":539211645,"node_id":"MDEyOklzc3VlQ29tbWVudDUzOTIxMTY0NQ==","user":{"login":"nomoa","id":5939211,"node_id":"MDQ6VXNlcjU5MzkyMTE=","avatar_url":"https://avatars1.githubusercontent.com/u/5939211?v=4","gravatar_id":"","url":"https://api.github.com/users/nomoa","html_url":"https://github.com/nomoa","followers_url":"https://api.github.com/users/nomoa/followers","following_url":"https://api.github.com/users/nomoa/following{/other_user}","gists_url":"https://api.github.com/users/nomoa/gists{/gist_id}","starred_url":"https://api.github.com/users/nomoa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nomoa/subscriptions","organizations_url":"https://api.github.com/users/nomoa/orgs","repos_url":"https://api.github.com/users/nomoa/repos","events_url":"https://api.github.com/users/nomoa/events{/privacy}","received_events_url":"https://api.github.com/users/nomoa/received_events","type":"User","site_admin":false},"created_at":"2019-10-07T21:26:52Z","updated_at":"2019-10-07T21:29:49Z","author_association":"CONTRIBUTOR","body":"We use our own Highlighter but we use the `Text(String)`.\r\n\r\nHere is a small test case to illustrate the inconsistency between the readText/writeText vs the readString/writeString behaviors.\r\n\r\n```java\r\n    @Test\r\n    public void testText() throws IOException {\r\n        String str = \"\\uD82D\\uDC4A\".substring(0, 1); // broken component: breaks surrogate\r\n        Text text = new Text(str);\r\n\r\n        // Run a simple Text -> json using XContentBuilder\r\n        ByteArrayOutputStream jsonOutputBytes = new ByteArrayOutputStream();\r\n        XContentBuilder builder = new XContentBuilder(JsonXContent.jsonXContent, jsonOutputBytes);\r\n        builder.startObject().field(\"text\", text).endObject().close();\r\n        String directTextThroughRest = new String(jsonOutputBytes.toByteArray(), \"UTF-8\");\r\n\r\n        // Mimic a roundtrip using the transport protocol\r\n        // Serialize a Text using StreamOutput then write it to json\r\n        BytesStreamOutput transportOut = new BytesStreamOutput();\r\n        transportOut.writeText(text);\r\n        transportOut.close();\r\n        Text transportedText = StreamInput.wrap(transportOut.bytes().toBytesRef().bytes).readText();\r\n        jsonOutputBytes = new ByteArrayOutputStream();\r\n        builder = new XContentBuilder(JsonXContent.jsonXContent, jsonOutputBytes);\r\n        builder.startObject().field(\"text\", transportedText).endObject().close();\r\n        String transportedTextAndRest = new String(jsonOutputBytes.toByteArray(), \"UTF-8\");\r\n        Assert.assertEquals(directTextThroughRest, transportedTextAndRest);\r\n    }\r\n\r\n    @Test\r\n    public void testString() throws IOException {\r\n        String str = \"\\uD82D\\uDC4A\".substring(0, 1); // broken component: breaks surrogate\r\n\r\n        ByteArrayOutputStream jsonOutputBytes = new ByteArrayOutputStream();\r\n        XContentBuilder builder = new XContentBuilder(JsonXContent.jsonXContent, jsonOutputBytes);\r\n        builder.startObject().field(\"text\", str).endObject().close();\r\n        String directStringThroughRest = new String(jsonOutputBytes.toByteArray(), \"UTF-8\");\r\n\r\n        BytesStreamOutput transportOut = new BytesStreamOutput();\r\n        transportOut.writeString(str);\r\n        transportOut.close();\r\n        String transportedStr = StreamInput.wrap(transportOut.bytes().toBytesRef().bytes).readString();\r\n        jsonOutputBytes = new ByteArrayOutputStream();\r\n        builder = new XContentBuilder(JsonXContent.jsonXContent, jsonOutputBytes);\r\n        builder.startObject().field(\"text\", transportedStr).endObject().close();\r\n        String transportedStrAndRest = new String(jsonOutputBytes.toByteArray(), \"UTF-8\");\r\n        Assert.assertEquals(directStringThroughRest, transportedStrAndRest);\r\n    }\r\n```\r\n\r\ntestText fails with:\r\n```\r\norg.junit.ComparisonFailure: \r\nExpected :{\"text\":\"\\uD82D\"}\r\nActual   :{\"text\":\"�\"}\r\n```\r\nwhile testString passes.\r\n\r\nIn other words:\r\na Text going through the serialization mechanism may have it's content modified by the nature of String#getBytes() as opposed to StreamOutput.writeString() that properly owns the encoding of the char array.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/540702693","html_url":"https://github.com/elastic/elasticsearch/issues/47574#issuecomment-540702693","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/47574","id":540702693,"node_id":"MDEyOklzc3VlQ29tbWVudDU0MDcwMjY5Mw==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2019-10-10T18:01:18Z","updated_at":"2019-10-10T18:01:18Z","author_association":"MEMBER","body":"Thanks for the explanation @nomoa. This looks like something your highlighter needs to account for when constructing Text objects. We assume the String is encodable. Since Java's getBytes method is what does the encoding, and also does the translation of invalid codepoints, there isn't anything we can really do. As such, I hope you don't mind I close this issue.","performed_via_github_app":null}]