{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/14747","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14747/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14747/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14747/events","html_url":"https://github.com/elastic/elasticsearch/issues/14747","id":116817637,"node_id":"MDU6SXNzdWUxMTY4MTc2Mzc=","number":14747,"title":"Allow continuing failed build, which skips already successful test tasks","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"labels":[{"id":106454670,"node_id":"MDU6TGFiZWwxMDY0NTQ2NzA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Delivery/Build","name":":Delivery/Build","color":"0e8a16","default":false,"description":"Build or test infrastructure"},{"id":73544,"node_id":"MDU6TGFiZWw3MzU0NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Enon-issue","name":">non-issue","color":"cfcfcf","default":false,"description":null},{"id":2495976472,"node_id":"MDU6TGFiZWwyNDk1OTc2NDcy","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Delivery","name":"Team:Delivery","color":"fef2c0","default":false,"description":"Meta label for Delivery team"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2015-11-13T17:58:07Z","updated_at":"2020-11-11T21:43:47Z","closed_at":"2019-09-05T12:31:01Z","author_association":"MEMBER","active_lock_reason":null,"body":"When running `gradle check` from the root of elasticsearch, if a failure occurs say in a a plugin, fixing that then requires either knowing which plugins were left and running for those explicitly, or taking the hit of running an entire `gradle check` again.\n\nGradle tests normally are run only if \"output changes\". We currently explicitly disable this for all tests, since we have randomized tests. However, we could tweak this slightly to allow a flag which identifies the build run you were previously running. Then the logic of whether to run the test could be based on this (we can write a marker when each test task succeeds, with the name of the unique build id). We would still want to make sure the test runs if the inputs change (ie to fix your plugin, you had to change core code). But if nothing changed, then we could skip eg core tests and quickly get back to running the plugins that had not run yet.\n\nI'm thinking something like:\n\n```\n$ gradle check\n...\nFailed `gradle check`. You can continue your build after fixing errors with:\ngradle check -Dtests.buildid=abcdefg\n```\n","closed_by":{"login":"alpar-t","id":2565652,"node_id":"MDQ6VXNlcjI1NjU2NTI=","avatar_url":"https://avatars1.githubusercontent.com/u/2565652?v=4","gravatar_id":"","url":"https://api.github.com/users/alpar-t","html_url":"https://github.com/alpar-t","followers_url":"https://api.github.com/users/alpar-t/followers","following_url":"https://api.github.com/users/alpar-t/following{/other_user}","gists_url":"https://api.github.com/users/alpar-t/gists{/gist_id}","starred_url":"https://api.github.com/users/alpar-t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpar-t/subscriptions","organizations_url":"https://api.github.com/users/alpar-t/orgs","repos_url":"https://api.github.com/users/alpar-t/repos","events_url":"https://api.github.com/users/alpar-t/events{/privacy}","received_events_url":"https://api.github.com/users/alpar-t/received_events","type":"User","site_admin":false},"performed_via_github_app":null}