[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/521558119","html_url":"https://github.com/elastic/elasticsearch/issues/45595#issuecomment-521558119","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45595","id":521558119,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMTU1ODExOQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-08-15T08:21:06Z","updated_at":"2019-08-15T08:21:06Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-analytics-geo","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/521665322","html_url":"https://github.com/elastic/elasticsearch/issues/45595#issuecomment-521665322","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45595","id":521665322,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMTY2NTMyMg==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2019-08-15T14:39:59Z","updated_at":"2019-08-15T14:39:59Z","author_association":"MEMBER","body":"Hi @Hearen :)  This is an interaction between the `extended_bounds.min`, the `interval` and where the data actually lands in the histogram.  The process works like this:\r\n\r\n1. All the shards collect buckets about where the data lands, rounding each value to the correct bucket\r\n2. Shard results are sent to coordinator node, coordinator merges all the results together for a single set of buckets\r\n3. If `extended_bounds` is configured, the buckets are extended from the min/max of the data.  It adds buckets backwards (according to the `interval`) until it hits the `extended_bounds.min` value.  Notably, due to the interval rounding, the bucket's `key` could be \"past\" the min value.\r\n4. Finally, empty buckets between data points are filled in.\r\n\r\nSo basically, the `extended_bounds` parameter doesn't guarantee a specific cutoff... it guarantees that buckets will reach to at least that point.  The exact end points are dependent on the interval.  The histogram by default begins at `0` and generates buckets from there.  You can see that the min bucket is `1563062400000`, which is evenly divisible by `86400000` (`1563062400000 / 86400000 == 18091` to be precise)\r\n\r\nHistogram offers an `offset` like date_histo, which allows you to shift how buckets are rounded: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-histogram-aggregation.html#_offset_2\r\n\r\nI'm going to close as this is expected behavior and not a bug.  There's not really anything we can do: if we cut the aggregation off right at the `extended_bounds.min/max`, we would generate buckets that are not the full interval and that would break many assumptions about how the histogram works.","performed_via_github_app":null}]