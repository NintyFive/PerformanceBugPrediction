{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/26511","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26511/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26511/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26511/events","html_url":"https://github.com/elastic/elasticsearch/issues/26511","id":255386407,"node_id":"MDU6SXNzdWUyNTUzODY0MDc=","number":26511,"title":"Filter nested document for subaggregations","user":{"login":"willcosgrove","id":77887,"node_id":"MDQ6VXNlcjc3ODg3","avatar_url":"https://avatars0.githubusercontent.com/u/77887?v=4","gravatar_id":"","url":"https://api.github.com/users/willcosgrove","html_url":"https://github.com/willcosgrove","followers_url":"https://api.github.com/users/willcosgrove/followers","following_url":"https://api.github.com/users/willcosgrove/following{/other_user}","gists_url":"https://api.github.com/users/willcosgrove/gists{/gist_id}","starred_url":"https://api.github.com/users/willcosgrove/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willcosgrove/subscriptions","organizations_url":"https://api.github.com/users/willcosgrove/orgs","repos_url":"https://api.github.com/users/willcosgrove/repos","events_url":"https://api.github.com/users/willcosgrove/events{/privacy}","received_events_url":"https://api.github.com/users/willcosgrove/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"assignees":[{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2017-09-05T19:41:34Z","updated_at":"2017-10-27T12:53:04Z","closed_at":"2017-10-27T12:53:04Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the feature**:\r\n\r\nI'm trying to build a pretty standard search UI, with a sidebar with various filters, and a count next to each option to show the user how many results lie behind each option.  The only unusual thing about the search is that the filters are all on nested items of the documents returned.\r\n\r\nI've got the query working perfectly, returning the correct results, but I'm unable to get the correct counts back in my aggregations.\r\n\r\nLet me briefly explain the issue I'm trying to solve:\r\n\r\nI have an index that has nested fields.  I want to perform terms and range aggregations on some of those nested fields, while also applying a filter on other nested fields.  The filter aggregation is not doing what I need it to do.  Say I have a document, that represents a Winery, that looks like this:\r\n\r\n```js\r\n{\r\n  winery_id: 1,\r\n  wines: [\r\n    { price: 3000, score: 90 },\r\n    { price: 40000, score: 100 }\r\n  ]\r\n}\r\n```\r\n\r\nIf I apply a filter aggregation like this:\r\n\r\n```json\r\n\"filter\": {\r\n  \"nested\": {\r\n    \"path\": \"wines\",\r\n    \"query\": {\r\n      \"range\": {\r\n        \"wines.scores\": {\r\n          \"gte\": 100\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAnd then as a subaggregation I do a range on the `wines.price` field with a single bucket of `<= 3000`.  I want elasticsearch to _not_ count the document I mentioned above as part of this range bucket aggregation, because the Winery has no single wine that has a score `>= 100` and a price `<= 3000`.  But it does count it, because the Winery has a wine with a score `>= 100`, and another wine with a price `<= 3000`.\r\n\r\nThe filter allows the winery through on the condition that one of the wines has a score  `>= 100`.  But the other wines still remain in the winery for the subaggregations of that filter.\r\n\r\nI do not know if this is something that is already supported in elasticsearch, but I have poured over the aggregation docs for hours and have played around in the Kibana console for hours, and have not been able to find an aggregation definition that achieves what I'm looking for.\r\n\r\nIf its not possible, then my feature request is to have some way of making a filter aggregation \"knock out\" or remove nested documents from subaggregations.","closed_by":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"performed_via_github_app":null}