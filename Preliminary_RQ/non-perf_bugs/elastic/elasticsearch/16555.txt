{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/16555","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16555/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16555/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16555/events","html_url":"https://github.com/elastic/elasticsearch/issues/16555","id":132520031,"node_id":"MDU6SXNzdWUxMzI1MjAwMzE=","number":16555,"title":"Varrying numbers of results from scan and scroll","user":{"login":"ApproximateIdentity","id":2095718,"node_id":"MDQ6VXNlcjIwOTU3MTg=","avatar_url":"https://avatars3.githubusercontent.com/u/2095718?v=4","gravatar_id":"","url":"https://api.github.com/users/ApproximateIdentity","html_url":"https://github.com/ApproximateIdentity","followers_url":"https://api.github.com/users/ApproximateIdentity/followers","following_url":"https://api.github.com/users/ApproximateIdentity/following{/other_user}","gists_url":"https://api.github.com/users/ApproximateIdentity/gists{/gist_id}","starred_url":"https://api.github.com/users/ApproximateIdentity/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ApproximateIdentity/subscriptions","organizations_url":"https://api.github.com/users/ApproximateIdentity/orgs","repos_url":"https://api.github.com/users/ApproximateIdentity/repos","events_url":"https://api.github.com/users/ApproximateIdentity/events{/privacy}","received_events_url":"https://api.github.com/users/ApproximateIdentity/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-02-09T20:07:45Z","updated_at":"2018-07-27T13:18:32Z","closed_at":"2018-07-27T13:18:32Z","author_association":"NONE","active_lock_reason":null,"body":"Right off the bat, here's a little info:\n\n```\n$ uname -a\nLinux jj-big-box 3.19.0-49-generic #55~14.04.1-Ubuntu SMP Fri Jan 22 11:24:31 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n\n$ curl -XGET 'localhost:9200'\n{\n  \"status\" : 200,\n  \"name\" : \"Bast\",\n  \"cluster_name\" : \"elasticsearch\",\n  \"version\" : {\n    \"number\" : \"1.7.4\",\n    \"build_hash\" : \"0d3159b9fc8bc8e367c5c40c09c2a57c0032b32e\",\n    \"build_timestamp\" : \"2015-12-15T11:25:18Z\",\n    \"build_snapshot\" : false,\n    \"lucene_version\" : \"4.10.4\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n}\n```\n\nI've seen some similar posts, but I've had trouble squaring their results with mine. I've noticed that I have do not receive consistent numbers of documents when running scan and scroll in elastic search. Here is python code exhibiting the behavior (hopefully the use of sockets is not too confusing...at first I was trying to make sure the problem had nothing to do with elasticsearch-py and that's why I went the route of raw code):\n\n``` python\nimport socket\nimport httplib\nimport json\nimport re\n\nHOST = 'localhost'\nPORT = 9200\n\nCRLF = \"\\r\\n\\r\\n\"\n\ninit_msg = \"\"\"\nGET /index/document/_search?search_type=scan&scroll=15m&timeout=30&size=10 HTTP/1.1\nHost: localhost:9200\nAccept-Encoding: identity\nContent-Length: 94\nconnection: keep-alive\n\n{\"query\": {\"regexp\": {\"date_publ\": \"2001.*\"}}, \"_source\": [\"doc_id\", \"date_publ\", \"abstract\"]}\n\"\"\"\n\nscroll_msg = \"\"\"\nGET /_search/scroll?scroll=15m HTTP/1.1\nHost: localhost:9200\nAccept-Encoding: identity\nContent-Length: {sid_length}\nconnection: keep-alive\n\n{sid}\n\"\"\"\n\ndef get_stream(host, port, verbose=True):\n    # Set up the socket.\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n    s.connect((HOST, PORT))\n    s.send(init_msg)\n\n    # Fetch scroll_id and total number of hits.\n    data = s.recv(4096)\n    payload = json.loads(data.split(CRLF)[-1])\n    sid = payload['_scroll_id']\n    total_hits = payload['hits']['total']\n\n    if verbose:\n        print \"Total hits: {}\".format(total_hits)\n\n    # Iterate through results.\n    while True:\n        # Send data request.\n        msg = scroll_msg.format(sid=sid, sid_length=len(sid))\n        s.send(msg)\n\n        # Fetch the response body.\n        data = s.recv(1024)\n        header, body = data.split(CRLF)\n        content_length = int(re.findall('Content-Length: (\\d*)', header)[0])\n        while len(body) < content_length:\n            body += s.recv(1024)\n\n        # Extract results from response body.\n        payload = json.loads(body)\n        sid = payload['_scroll_id']\n        hits = payload['hits']['hits']\n\n        #print payload['_shards']\n\n        if not hits:\n            break\n\n        for hit in hits:\n            yield hit\n\n\nfor count, _ in enumerate(get_stream(HOST, PORT), 1): pass\n\nprint count\n```\n\nWhen I run that a few times, I get the following:\n\n```\n$ python new_test.py \nTotal hits: 56366\n11650\n$ python new_test.py \nTotal hits: 56366\n24550\n$ python new_test.py \nTotal hits: 56366\n8550\n```\n\nNow if I un-comment the line `#print payload['_shards']`, the ended up being the following during one run:\n\n```\nTotal hits: 56366\n{u'successful': 5, u'failed': 0, u'total': 5}\n{u'successful': 5, u'failed': 0, u'total': 5}\n{u'successful': 5, u'failed': 0, u'total': 5}\n{u'successful': 5, u'failed': 0, u'total': 5}\n{u'successful': 5, u'failed': 0, u'total': 5}\n\n...\n\n{u'successful': 4, u'failed': 0, u'total': 4}\n{u'successful': 4, u'failed': 0, u'total': 4}\n{u'successful': 4, u'failed': 0, u'total': 4}\n{u'successful': 4, u'failed': 0, u'total': 4}\n{u'successful': 4, u'failed': 0, u'total': 4}\n{u'successful': 4, u'failed': 0, u'total': 4}\n28110\n```\n\nand ended up as the following the next run:\n\n```\nTotal hits: 56366\n{u'successful': 5, u'failed': 0, u'total': 5}\n{u'successful': 5, u'failed': 0, u'total': 5}\n{u'successful': 5, u'failed': 0, u'total': 5}\n{u'successful': 5, u'failed': 0, u'total': 5}\n{u'successful': 5, u'failed': 0, u'total': 5}\n{u'successful': 5, u'failed': 0, u'total': 5}\n{u'successful': 5, u'failed': 0, u'total': 5}\n\n...\n\n{u'successful': 5, u'failed': 0, u'total': 5}\n{u'successful': 5, u'failed': 0, u'total': 5}\n{u'successful': 5, u'failed': 0, u'total': 5}\n{u'successful': 5, u'failed': 0, u'total': 5}\n{u'successful': 5, u'failed': 0, u'total': 5}\n{u'successful': 5, u'failed': 0, u'total': 5}\n{u'successful': 3, u'failed': 0, u'total': 3}\n{u'successful': 1, u'failed': 0, u'total': 1}\n{u'successful': 0, u'failed': 0, u'total': 0}\n56366\n```\n\n_Note_: The last run apparently returned _all_ documents. This is the first time I've seen this during this experimentation.\n\nDoes anyone have any idea what's going on here? As far as I can tell, I never run into these issues when not doing the regular expression as part of the search, but other than that I'm at a loss.\n\nThanks for any help!\n","closed_by":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"performed_via_github_app":null}