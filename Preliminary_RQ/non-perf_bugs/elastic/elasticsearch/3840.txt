{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3840","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3840/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3840/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3840/events","html_url":"https://github.com/elastic/elasticsearch/issues/3840","id":20615956,"node_id":"MDU6SXNzdWUyMDYxNTk1Ng==","number":3840,"title":"river instance not created after successful creation of _meta document","user":{"login":"karol-gwaj","id":1188157,"node_id":"MDQ6VXNlcjExODgxNTc=","avatar_url":"https://avatars3.githubusercontent.com/u/1188157?v=4","gravatar_id":"","url":"https://api.github.com/users/karol-gwaj","html_url":"https://github.com/karol-gwaj","followers_url":"https://api.github.com/users/karol-gwaj/followers","following_url":"https://api.github.com/users/karol-gwaj/following{/other_user}","gists_url":"https://api.github.com/users/karol-gwaj/gists{/gist_id}","starred_url":"https://api.github.com/users/karol-gwaj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karol-gwaj/subscriptions","organizations_url":"https://api.github.com/users/karol-gwaj/orgs","repos_url":"https://api.github.com/users/karol-gwaj/repos","events_url":"https://api.github.com/users/karol-gwaj/events{/privacy}","received_events_url":"https://api.github.com/users/karol-gwaj/received_events","type":"User","site_admin":false},"labels":[{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":64134382,"node_id":"MDU6TGFiZWw2NDEzNDM4Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.90.7","name":"v0.90.7","color":"dddddd","default":false,"description":null},{"id":64607794,"node_id":"MDU6TGFiZWw2NDYwNzc5NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.0.0.Beta2","name":"v1.0.0.Beta2","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"assignees":[{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2013-10-07T14:46:57Z","updated_at":"2013-11-10T20:05:48Z","closed_at":"2013-11-10T20:05:28Z","author_association":"NONE","active_lock_reason":null,"body":"river instance is not created after successfully issuing PUT _meta request \n\nthis problem happens when creating river on completely fresh cluster \nand only for first river (following updates to _meta document for this river still dont start it)\ncreating second river works fine (but first one is still down)\n\nim using latest elasticsearch sources from master branch\nand running it from eclipse (one node cluster, no replication)\nto replicate delete all cluster data files, then start single node cluster and create river as first request to the cluster\n\noverall it looks like racing condition, after debugging for while i see that when checking if river cluster state changed (RiverClusterStateUpdateTask), event.state().metaData().index(riverIndexName) is not returning newly created river (probably slowed down by initial index creation)\n\ndebug logs:\n\n[2013-10-07 15:35:38,937][DEBUG][cluster.service          ] [Peepers] processing [create-index [_river], cause [auto(index api)]]: execute\n[2013-10-07 15:35:38,950][DEBUG][indices                  ] [Peepers] creating Index [_river], shards [1]/[0]\n[2013-10-07 15:35:43,713][DEBUG][index.mapper             ] [Peepers] [_river] using dynamic[true], default mapping: default_mapping_location[null], loaded_from[file:/mnt/data/projects/git/elasticsearch/elasticsearch/target/classes/org/elasticsearch/index/mapper/default-mapping.json], default percolator mapping: location[null], loaded_from[null]\n[2013-10-07 15:35:43,722][DEBUG][index.cache.query.parser.resident] [Peepers] [_river] using [resident] query cache with max_size [100], expire [null]\n[2013-10-07 15:35:43,965][DEBUG][index.store.fs           ] [Peepers] [_river] using index.store.throttle.type [node], with index.store.throttle.max_bytes_per_sec [0b]\n[2013-10-07 15:35:45,458][INFO ][cluster.metadata         ] [Peepers] [_river] creating index, cause [auto(index api)], shards [1]/[0], mappings []\n[2013-10-07 15:35:45,560][DEBUG][index.cache.filter.weighted] [Peepers] [_river] full cache clear, reason [close]\n[2013-10-07 15:35:45,570][DEBUG][cluster.service          ] [Peepers] cluster state updated, version [3], source [create-index [_river], cause [auto(index api)]]\n[2013-10-07 15:35:45,572][DEBUG][cluster.service          ] [Peepers] publishing cluster state version 3\n[2013-10-07 15:35:45,574][DEBUG][cluster.service          ] [Peepers] set local cluster state to version 3\n[2013-10-07 15:35:45,579][DEBUG][river.cluster            ] [Peepers] processing [reroute_rivers_node_changed]: execute\n[2013-10-07 15:35:45,584][DEBUG][indices.cluster          ] [Peepers] [_river] creating index\n[2013-10-07 15:35:45,587][DEBUG][indices                  ] [Peepers] creating Index [_river], shards [1]/[0]\n[2013-10-07 15:35:45,615][DEBUG][river.cluster            ] [Peepers] processing [reroute_rivers_node_changed]: no change in cluster_state\n[2013-10-07 15:35:47,464][DEBUG][index.mapper             ] [Peepers] [_river] using dynamic[true], default mapping: default_mapping_location[null], loaded_from[file:/mnt/data/projects/git/elasticsearch/elasticsearch/target/classes/org/elasticsearch/index/mapper/default-mapping.json], default percolator mapping: location[null], loaded_from[null]\n[2013-10-07 15:35:47,472][DEBUG][index.cache.query.parser.resident] [Peepers] [_river] using [resident] query cache with max_size [100], expire [null]\n[2013-10-07 15:35:47,519][DEBUG][index.store.fs           ] [Peepers] [_river] using index.store.throttle.type [node], with index.store.throttle.max_bytes_per_sec [0b]\n[2013-10-07 15:35:47,593][DEBUG][indices.cluster          ] [Peepers] [_river][0] creating shard\n[2013-10-07 15:35:47,595][DEBUG][index.service            ] [Peepers] [_river] creating shard_id [0]\n[2013-10-07 15:35:49,258][DEBUG][index.deletionpolicy     ] [Peepers] [_river][0] Using [keep_only_last] deletion policy\n[2013-10-07 15:35:49,287][DEBUG][index.merge.policy       ] [Peepers] [_river][0] using [tiered] merge policy with expunge_deletes_allowed[10.0], floor_segment[2mb], max_merge_at_once[10], max_merge_at_once_explicit[30], max_merged_segment[5gb], segments_per_tier[10.0], reclaim_deletes_weight[2.0], async_merge[true]\n[2013-10-07 15:35:49,293][DEBUG][index.merge.scheduler    ] [Peepers] [_river][0] using [concurrent] merge scheduler with max_thread_count[1]\n[2013-10-07 15:35:49,377][DEBUG][index.shard.service      ] [Peepers] [_river][0] state: [CREATED]\n[2013-10-07 15:35:49,389][DEBUG][index.translog           ] [Peepers] [_river][0] interval [5s], flush_threshold_ops [5000], flush_threshold_size [200mb], flush_threshold_period [30m]\n[2013-10-07 15:35:49,467][DEBUG][index.shard.service      ] [Peepers] [_river][0] state: [CREATED]->[RECOVERING], reason [from gateway]\n[2013-10-07 15:35:49,474][DEBUG][index.gateway            ] [Peepers] [_river][0] starting recovery from local ...\n[2013-10-07 15:35:49,620][DEBUG][index.engine.robin       ] [Peepers] [_river][0] starting engine\n[2013-10-07 15:35:49,708][DEBUG][cluster.service          ] [Peepers] processing [create-index [_river], cause [auto(index api)]]: done applying updated cluster_state (version: 3)\n[2013-10-07 15:35:50,875][DEBUG][index.shard.service      ] [Peepers] [_river][0] scheduling refresher every 1s\n[2013-10-07 15:35:50,882][DEBUG][index.shard.service      ] [Peepers] [_river][0] scheduling optimizer / merger every 1s\n[2013-10-07 15:35:50,884][DEBUG][index.shard.service      ] [Peepers] [_river][0] state: [RECOVERING]->[POST_RECOVERY], reason [post recovery from gateway, no translog]\n[2013-10-07 15:35:50,888][DEBUG][index.gateway            ] [Peepers] [_river][0] recovery completed from [local], took [1.4s]\n[2013-10-07 15:35:50,890][DEBUG][cluster.action.shard     ] [Peepers] sending shard started for [_river][0], node[FDoGx4I-T8SLGc1IYsBkzw], [P], s[INITIALIZING], indexUUID [hhVydPb3QvuD110I9V4XyA], reason [after recovery from gateway]\n[2013-10-07 15:35:50,892][DEBUG][cluster.action.shard     ] [Peepers] received shard started for [_river][0], node[FDoGx4I-T8SLGc1IYsBkzw], [P], s[INITIALIZING], indexUUID [hhVydPb3QvuD110I9V4XyA], reason [after recovery from gateway]\n[2013-10-07 15:35:50,900][DEBUG][cluster.service          ] [Peepers] processing [shard-started ([_river][0], node[FDoGx4I-T8SLGc1IYsBkzw], [P], s[INITIALIZING]), reason [after recovery from gateway]]: execute\n[2013-10-07 15:35:50,905][DEBUG][cluster.action.shard     ] [Peepers] [_river][0] will apply shard started [_river][0], node[FDoGx4I-T8SLGc1IYsBkzw], [P], s[INITIALIZING], indexUUID [hhVydPb3QvuD110I9V4XyA], reason [after recovery from gateway]\n[2013-10-07 15:35:50,915][DEBUG][cluster.service          ] [Peepers] cluster state updated, version [4], source [shard-started ([_river][0], node[FDoGx4I-T8SLGc1IYsBkzw], [P], s[INITIALIZING]), reason [after recovery from gateway]]\n[2013-10-07 15:35:50,917][DEBUG][cluster.service          ] [Peepers] publishing cluster state version 4\n[2013-10-07 15:35:50,920][DEBUG][cluster.service          ] [Peepers] set local cluster state to version 4\n[2013-10-07 15:35:50,924][DEBUG][river.cluster            ] [Peepers] processing [reroute_rivers_node_changed]: execute\n[2013-10-07 15:35:50,936][DEBUG][river.cluster            ] [Peepers] processing [reroute_rivers_node_changed]: no change in cluster_state\n[2013-10-07 15:35:50,937][DEBUG][index.shard.service      ] [Peepers] [_river][0] state: [POST_RECOVERY]->[STARTED], reason [global state moved to started]\n[2013-10-07 15:35:51,155][DEBUG][cluster.service          ] [Peepers] processing [shard-started ([_river][0], node[FDoGx4I-T8SLGc1IYsBkzw], [P], s[INITIALIZING]), reason [after recovery from gateway]]: done applying updated cluster_state (version: 4)\n[2013-10-07 15:35:51,762][DEBUG][cluster.service          ] [Peepers] processing [update-mapping [_river][test]]: execute\n[2013-10-07 15:35:51,962][DEBUG][cluster.metadata         ] [Peepers] [_river] update_mapping [test](dynamic) with source [{\"test\":{\"index_analyzer\":\"default_index\",\"search_analyzer\":\"default_search\",\"properties\":{\"type\":{\"type\":\"string\"}}}}]\n[2013-10-07 15:35:52,022][DEBUG][cluster.service          ] [Peepers] cluster state updated, version [5], source [update-mapping [_river][test]]\n[2013-10-07 15:35:52,032][DEBUG][cluster.service          ] [Peepers] publishing cluster state version 5\n[2013-10-07 15:35:52,042][DEBUG][cluster.service          ] [Peepers] set local cluster state to version 5\n[2013-10-07 15:35:52,055][DEBUG][river.cluster            ] [Peepers] processing [reroute_rivers_node_changed]: execute\n[2013-10-07 15:35:52,233][DEBUG][river.cluster            ] [Peepers] processing [reroute_rivers_node_changed]: no change in cluster_state\n[2013-10-07 15:35:52,382][DEBUG][cluster.service          ] [Peepers] processing [update-mapping [_river][test]]: done applying updated cluster_state (version: 5)\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}