{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/25327","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25327/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25327/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/25327/events","html_url":"https://github.com/elastic/elasticsearch/issues/25327","id":237404179,"node_id":"MDU6SXNzdWUyMzc0MDQxNzk=","number":25327,"title":"ThreadLocal   memory leak Glassfish4.1","user":{"login":"luyuekai","id":17737080,"node_id":"MDQ6VXNlcjE3NzM3MDgw","avatar_url":"https://avatars0.githubusercontent.com/u/17737080?v=4","gravatar_id":"","url":"https://api.github.com/users/luyuekai","html_url":"https://github.com/luyuekai","followers_url":"https://api.github.com/users/luyuekai/followers","following_url":"https://api.github.com/users/luyuekai/following{/other_user}","gists_url":"https://api.github.com/users/luyuekai/gists{/gist_id}","starred_url":"https://api.github.com/users/luyuekai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luyuekai/subscriptions","organizations_url":"https://api.github.com/users/luyuekai/orgs","repos_url":"https://api.github.com/users/luyuekai/repos","events_url":"https://api.github.com/users/luyuekai/events{/privacy}","received_events_url":"https://api.github.com/users/luyuekai/received_events","type":"User","site_admin":false},"labels":[{"id":146854632,"node_id":"MDU6TGFiZWwxNDY4NTQ2MzI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Network","name":":Distributed/Network","color":"0e8a16","default":false,"description":"Http and internode communication implementations"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-06-21T03:22:16Z","updated_at":"2018-03-06T17:39:50Z","closed_at":"2018-03-06T17:39:50Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\nIssues that do not follow these guidelines are likely to be closed.\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Is this bug report or feature request for a supported OS? If not, it\r\n    is likely to be closed.  See https://www.elastic.co/support/matrix#show_os\r\n\r\n3.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n-->\r\n\r\n<!-- Feature request -->\r\n\r\n**Describe the feature**:\r\nI use elasticsearch transportclient in my java web application. But when I undeploy the application , glassfish logs show  about 20 messages , the content is this:  \r\n [my application] created a ThreadLocal with key of type [java.lang.ThreadLocal] (value [java.lang.ThreadLocal@5e5903f5]) and a value of type [io.netty.util.internal.InternalThreadLocalMap] (value [io.netty.util.internal.InternalThreadLocalMap@273d03c7]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.]]\r\n\r\nmy code is this :    \r\n\r\n```java\r\n   public static void destroyInstance(TransportClient client) {\r\n        if (client != null) {\r\n            try {\r\n                client.threadPool().shutdownNow();\r\n                client.threadPool().close();\r\n                client.close();\r\n                client = null;\r\n\r\n                Logger.getLogger(\"TransportClient destroyed\");\r\n            } catch (Exception ex) {\r\n                Logger.getLogger(ESClientManager.class.getName()).log(Level.SEVERE, null, ex);\r\n            }\r\n        }\r\n    }\r\n\r\n```\r\n\r\nI also get one Exception:  \r\n```\r\n[2017-06-21T09:11:28.161+0800] [glassfish 4.1] [SEVERE] [] [javax.enterprise.web] [tid: _ThreadID=48 _ThreadName=admin-listener(5)] [timeMillis: 1498007488161] [levelValue: 1000] [[\r\n  WebModule[/service_generic_log]Exception sending context destroyed event to listener instance of class v2.service.generic_log.LogContextListener\r\njava.lang.IllegalStateException: thread was not started\r\n\tat io.netty.util.concurrent.GlobalEventExecutor.awaitInactivity(GlobalEventExecutor.java:197)\r\n\tat org.elasticsearch.transport.client.PreBuiltTransportClient.close(PreBuiltTransportClient.java:134)\r\n\tat v2.service.generic_log.ESClientManager.destroyInstance(ESClientManager.java:60)\r\n\tat v2.service.generic_log.LogContextListener.contextDestroyed(LogContextListener.java:44)\r\n\tat org.apache.catalina.core.StandardContext.contextListenerStop(StandardContext.java:5480)\r\n\tat org.apache.catalina.core.StandardContext.stop(StandardContext.java:6146)\r\n\tat com.sun.enterprise.web.WebModule.stop(WebModule.java:720)\r\n\tat org.apache.catalina.core.ContainerBase.removeChild(ContainerBase.java:1172)\r\n\tat com.sun.enterprise.web.WebContainer.unloadWebModule(WebContainer.java:2439)\r\n\tat com.sun.enterprise.web.WebContainer.unloadWebModule(WebContainer.java:2394)\r\n\tat com.sun.enterprise.web.WebApplication.stop(WebApplication.java:190)\r\n\tat org.glassfish.internal.data.EngineRef.stop(EngineRef.java:161)\r\n\tat org.glassfish.internal.data.ModuleInfo.stop(ModuleInfo.java:324)\r\n\tat org.glassfish.internal.data.ApplicationInfo.stop(ApplicationInfo.java:380)\r\n\tat com.sun.enterprise.v3.server.ApplicationLifecycle.unload(ApplicationLifecycle.java:1059)\r\n\tat com.sun.enterprise.v3.server.ApplicationLifecycle.undeploy(ApplicationLifecycle.java:1099)\r\n\tat org.glassfish.deployment.admin.UndeployCommand.execute(UndeployCommand.java:412)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl$2$1.run(CommandRunnerImpl.java:539)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl$2$1.run(CommandRunnerImpl.java:535)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat javax.security.auth.Subject.doAs(Subject.java:360)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl$2.execute(CommandRunnerImpl.java:534)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl$3.run(CommandRunnerImpl.java:565)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl$3.run(CommandRunnerImpl.java:557)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat javax.security.auth.Subject.doAs(Subject.java:360)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:556)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:1464)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl.access$1300(CommandRunnerImpl.java:109)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1846)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1722)\r\n\tat com.sun.enterprise.v3.admin.AdminAdapter.doCommand(AdminAdapter.java:534)\r\n\tat com.sun.enterprise.v3.admin.AdminAdapter.onMissingResource(AdminAdapter.java:224)\r\n\tat org.glassfish.grizzly.http.server.StaticHttpHandlerBase.service(StaticHttpHandlerBase.java:189)\r\n\tat com.sun.enterprise.v3.services.impl.ContainerMapper$HttpHandlerCallable.call(ContainerMapper.java:459)\r\n\tat com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:167)\r\n\tat org.glassfish.grizzly.http.server.HttpHandler.runService(HttpHandler.java:201)\r\n\tat org.glassfish.grizzly.http.server.HttpHandler.doHandle(HttpHandler.java:175)\r\n\tat org.glassfish.grizzly.http.server.HttpServerFilter.handleRead(HttpServerFilter.java:235)\r\n\tat org.glassfish.grizzly.filterchain.ExecutorResolver$9.execute(ExecutorResolver.java:119)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.executeFilter(DefaultFilterChain.java:284)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.executeChainPart(DefaultFilterChain.java:201)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.execute(DefaultFilterChain.java:133)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.process(DefaultFilterChain.java:112)\r\n\tat org.glassfish.grizzly.ProcessorExecutor.execute(ProcessorExecutor.java:77)\r\n\tat org.glassfish.grizzly.portunif.PUFilter.handleRead(PUFilter.java:231)\r\n\tat org.glassfish.grizzly.filterchain.ExecutorResolver$9.execute(ExecutorResolver.java:119)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.executeFilter(DefaultFilterChain.java:284)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.executeChainPart(DefaultFilterChain.java:201)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.execute(DefaultFilterChain.java:133)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.process(DefaultFilterChain.java:112)\r\n\tat org.glassfish.grizzly.ProcessorExecutor.execute(ProcessorExecutor.java:77)\r\n\tat org.glassfish.grizzly.portunif.PUFilter.handleRead(PUFilter.java:231)\r\n\tat org.glassfish.grizzly.filterchain.ExecutorResolver$9.execute(ExecutorResolver.java:119)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.executeFilter(DefaultFilterChain.java:284)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.executeChainPart(DefaultFilterChain.java:201)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.execute(DefaultFilterChain.java:133)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.process(DefaultFilterChain.java:112)\r\n\tat org.glassfish.grizzly.ProcessorExecutor.execute(ProcessorExecutor.java:77)\r\n\tat org.glassfish.grizzly.nio.transport.TCPNIOTransport.fireIOEvent(TCPNIOTransport.java:561)\r\n\tat org.glassfish.grizzly.strategies.AbstractIOStrategy.fireIOEvent(AbstractIOStrategy.java:112)\r\n\tat org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.run0(WorkerThreadIOStrategy.java:117)\r\n\tat org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.access$100(WorkerThreadIOStrategy.java:56)\r\n\tat org.glassfish.grizzly.strategies.WorkerThreadIOStrategy$WorkerThreadRunnable.run(WorkerThreadIOStrategy.java:137)\r\n\tat org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:565)\r\n\tat org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.run(AbstractThreadPool.java:545)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n]]\r\n\r\n```\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version**:\r\n5.4.0\r\n**Plugins installed**: []\r\n\r\n**JVM version** (`java -version`):\r\nopenjdk version \"1.8.0_111\"\r\nOpenJDK Runtime Environment (build 1.8.0_111-8u111-b14-2ubuntu0.16.04.2-b14)\r\nOpenJDK 64-Bit Server VM (build 25.111-b14, mixed mode)\r\n\r\n**OS version** (`uname -a` if on a Unix-like system):\r\nLinux lyk 4.6.2-040602-generic #201606100516 SMP Fri Jun 10 09:18:34 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\r\n**Description of the problem including expected versus actual behavior**:\r\nwhen I \r\n**Steps to reproduce**:\r\n\r\nPlease include a *minimal* but *complete* recreation of the problem, including\r\n(e.g.) index creation, mappings, settings, query etc.  The easier you make for\r\nus to reproduce it, the more likely that somebody will take the time to look at it.\r\n\r\n 1.\r\n 2.\r\n 3.\r\n\r\n**Provide logs (if relevant)**:\r\n\r\n","closed_by":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"performed_via_github_app":null}