[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/607914000","html_url":"https://github.com/elastic/elasticsearch/issues/54649#issuecomment-607914000","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54649","id":607914000,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNzkxNDAwMA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-04-02T15:24:51Z","updated_at":"2020-04-02T15:24:51Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-analytics-geo (:Analytics/Aggregations)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/608503076","html_url":"https://github.com/elastic/elasticsearch/issues/54649#issuecomment-608503076","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54649","id":608503076,"node_id":"MDEyOklzc3VlQ29tbWVudDYwODUwMzA3Ng==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2020-04-03T15:22:21Z","updated_at":"2020-04-03T15:22:21Z","author_association":"MEMBER","body":"Hm interesting.  So I think this would end up needing a change to all metric aggs, not just cardinality.  Today, the only aggregations that support `min_doc_count` are bucketing aggs.  To some degree this is an artifact of history: `min_doc_count` was added so that certain pipeline aggs (like a derivative) would function correctly because \"gaps\" in buckets start to introduce weird effects.\r\n\r\nThat said, I don't see why metric aggs couldn't support the property either.  But we'd probably want to implement it universally and not just for cardinality.\r\n\r\nI'm going to mark this as team-discuss to see what other folks think.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/608511430","html_url":"https://github.com/elastic/elasticsearch/issues/54649#issuecomment-608511430","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54649","id":608511430,"node_id":"MDEyOklzc3VlQ29tbWVudDYwODUxMTQzMA==","user":{"login":"karussell","id":129644,"node_id":"MDQ6VXNlcjEyOTY0NA==","avatar_url":"https://avatars0.githubusercontent.com/u/129644?v=4","gravatar_id":"","url":"https://api.github.com/users/karussell","html_url":"https://github.com/karussell","followers_url":"https://api.github.com/users/karussell/followers","following_url":"https://api.github.com/users/karussell/following{/other_user}","gists_url":"https://api.github.com/users/karussell/gists{/gist_id}","starred_url":"https://api.github.com/users/karussell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karussell/subscriptions","organizations_url":"https://api.github.com/users/karussell/orgs","repos_url":"https://api.github.com/users/karussell/repos","events_url":"https://api.github.com/users/karussell/events{/privacy}","received_events_url":"https://api.github.com/users/karussell/received_events","type":"User","site_admin":false},"created_at":"2020-04-03T15:38:14Z","updated_at":"2020-04-03T15:38:14Z","author_association":"CONTRIBUTOR","body":"Thanks for the quick update. I'm also open for any suggestion how one could implement this via existing tools like the scripted metric. \r\n\r\nIs this the right approach?\r\n```json\r\n    \"vehicle_count\": {\r\n      \"scripted_metric\": {\r\n        \"init_script\":    \"state.vehicles = [:]\",\r\n        \"map_script\":     \"if(doc['vrp.vehicle_ids'].size()==0) /*ignore missing values*/return 0; String key = doc['vehicle_id']; if(state.vehicles.containsKey(key)) { state.vehicles[key]++; } else { state.vehicles[key] = 1; }\",\r\n        \"combine_script\": \"double vehicles=0; for (v in state.vehicles.values) { if(v.value>10) { vehicles += v.value; } } return vehicles\",\r\n        \"reduce_script\" : \"double vehicles=0; for (v in states) { vehicles += v; } return vehicles\"\r\n      }\r\n    }\r\n```\r\nI'm currently getting a NPE but if I know that I'm on the right track I'll continue investigating.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/608545368","html_url":"https://github.com/elastic/elasticsearch/issues/54649#issuecomment-608545368","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54649","id":608545368,"node_id":"MDEyOklzc3VlQ29tbWVudDYwODU0NTM2OA==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2020-04-03T16:45:55Z","updated_at":"2020-04-03T16:45:55Z","author_association":"MEMBER","body":"Will reply over at the Discuss thread :+1: ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/644845604","html_url":"https://github.com/elastic/elasticsearch/issues/54649#issuecomment-644845604","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54649","id":644845604,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NDg0NTYwNA==","user":{"login":"thekofimensah","id":23384471,"node_id":"MDQ6VXNlcjIzMzg0NDcx","avatar_url":"https://avatars0.githubusercontent.com/u/23384471?v=4","gravatar_id":"","url":"https://api.github.com/users/thekofimensah","html_url":"https://github.com/thekofimensah","followers_url":"https://api.github.com/users/thekofimensah/followers","following_url":"https://api.github.com/users/thekofimensah/following{/other_user}","gists_url":"https://api.github.com/users/thekofimensah/gists{/gist_id}","starred_url":"https://api.github.com/users/thekofimensah/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thekofimensah/subscriptions","organizations_url":"https://api.github.com/users/thekofimensah/orgs","repos_url":"https://api.github.com/users/thekofimensah/repos","events_url":"https://api.github.com/users/thekofimensah/events{/privacy}","received_events_url":"https://api.github.com/users/thekofimensah/received_events","type":"User","site_admin":false},"created_at":"2020-06-16T15:41:42Z","updated_at":"2020-06-16T16:00:58Z","author_association":"NONE","body":"Surprized this isn't supported, seems to be a pretty necessary use case!\r\n\r\nA workaround is using bucket_filter (this returns users with only 5 or more unique host.hostnames)\r\n:\r\n```\r\n\"aggs\": {\r\n    \"user\": {\r\n      \"terms\": {\r\n        \"field\": \"user.name\",\r\n        \"size\": 200\r\n      },\r\n      \"aggs\": {\r\n        \"hosts\": {\r\n          \"terms\": {\r\n            \"field\": \"host.hostname\",\r\n            \"size\": 100\r\n          }\r\n        },\r\n        \"unique\": {\r\n          \"cardinality\": {\r\n            \"field\": \"host.hostname\"\r\n          }\r\n        },\r\n        \"sales_bucket_filter\": {\r\n          \"bucket_selector\": {\r\n            \"buckets_path\": {\r\n              \"uniquehosts\": \"unique\"\r\n            },\r\n            \"script\": \"params.uniquehosts > 5\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/680989087","html_url":"https://github.com/elastic/elasticsearch/issues/54649#issuecomment-680989087","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/54649","id":680989087,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MDk4OTA4Nw==","user":{"login":"not-napoleon","id":979663,"node_id":"MDQ6VXNlcjk3OTY2Mw==","avatar_url":"https://avatars0.githubusercontent.com/u/979663?v=4","gravatar_id":"","url":"https://api.github.com/users/not-napoleon","html_url":"https://github.com/not-napoleon","followers_url":"https://api.github.com/users/not-napoleon/followers","following_url":"https://api.github.com/users/not-napoleon/following{/other_user}","gists_url":"https://api.github.com/users/not-napoleon/gists{/gist_id}","starred_url":"https://api.github.com/users/not-napoleon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/not-napoleon/subscriptions","organizations_url":"https://api.github.com/users/not-napoleon/orgs","repos_url":"https://api.github.com/users/not-napoleon/repos","events_url":"https://api.github.com/users/not-napoleon/events{/privacy}","received_events_url":"https://api.github.com/users/not-napoleon/received_events","type":"User","site_admin":false},"created_at":"2020-08-26T16:31:58Z","updated_at":"2020-08-26T16:31:58Z","author_association":"CONTRIBUTOR","body":"After discussing this, we have decided not to implement it.  Bucket selectors are the correct solution to do this type of operation.  Min doc count is intended to be only a count of matching documents, not a count of unique values.  It would be confusing to have a special case for cardinality.  In general, we favor doing this type of post processing client side when possible.\r\n\r\nThere's a larger discussion of if we should continue to support `min_doc_count` at all, even for bucketing aggregations (vs. favoring bucket selector and client side filtering).  ","performed_via_github_app":null}]