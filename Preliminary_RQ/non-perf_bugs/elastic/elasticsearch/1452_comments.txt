[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/2722746","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-2722746","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":2722746,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MjI3NDY=","user":{"login":"karussell","id":129644,"node_id":"MDQ6VXNlcjEyOTY0NA==","avatar_url":"https://avatars0.githubusercontent.com/u/129644?v=4","gravatar_id":"","url":"https://api.github.com/users/karussell","html_url":"https://github.com/karussell","followers_url":"https://api.github.com/users/karussell/followers","following_url":"https://api.github.com/users/karussell/following{/other_user}","gists_url":"https://api.github.com/users/karussell/gists{/gist_id}","starred_url":"https://api.github.com/users/karussell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karussell/subscriptions","organizations_url":"https://api.github.com/users/karussell/orgs","repos_url":"https://api.github.com/users/karussell/repos","events_url":"https://api.github.com/users/karussell/events{/privacy}","received_events_url":"https://api.github.com/users/karussell/received_events","type":"User","site_admin":false},"created_at":"2011-11-13T15:29:35Z","updated_at":"2011-11-13T15:29:35Z","author_association":"CONTRIBUTOR","body":"What is the aim? Performance improvements, immutability for the sake of a cleaner system or better security?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/2722819","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-2722819","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":2722819,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MjI4MTk=","user":{"login":"ruflin","id":244900,"node_id":"MDQ6VXNlcjI0NDkwMA==","avatar_url":"https://avatars3.githubusercontent.com/u/244900?v=4","gravatar_id":"","url":"https://api.github.com/users/ruflin","html_url":"https://github.com/ruflin","followers_url":"https://api.github.com/users/ruflin/followers","following_url":"https://api.github.com/users/ruflin/following{/other_user}","gists_url":"https://api.github.com/users/ruflin/gists{/gist_id}","starred_url":"https://api.github.com/users/ruflin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruflin/subscriptions","organizations_url":"https://api.github.com/users/ruflin/orgs","repos_url":"https://api.github.com/users/ruflin/repos","events_url":"https://api.github.com/users/ruflin/events{/privacy}","received_events_url":"https://api.github.com/users/ruflin/received_events","type":"User","site_admin":false},"created_at":"2011-11-13T15:46:08Z","updated_at":"2011-11-13T15:46:08Z","author_association":"CONTRIBUTOR","body":"The aim is immutability. Perhaps I can describe our use case a little bit more in detail.\n\nIf we change the structure of the index, the complete index has to be recreated. During recreating the new index, we don't want that new documents are added to the old index to make sure, all new documents are added to the new index after creating it. One option would be to disable indexing on all our servers. But we would prefer to be able to set this on the server side, so we can make sure that not servers add documents by accident and we don't have these documents in the new index.\n\nBecause of the fact that shay mentioned in the Forum, I assume there won't be any performance gain.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3071829","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3071829","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3071829,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzE4Mjk=","user":{"login":"bbgordonn","id":952080,"node_id":"MDQ6VXNlcjk1MjA4MA==","avatar_url":"https://avatars2.githubusercontent.com/u/952080?v=4","gravatar_id":"","url":"https://api.github.com/users/bbgordonn","html_url":"https://github.com/bbgordonn","followers_url":"https://api.github.com/users/bbgordonn/followers","following_url":"https://api.github.com/users/bbgordonn/following{/other_user}","gists_url":"https://api.github.com/users/bbgordonn/gists{/gist_id}","starred_url":"https://api.github.com/users/bbgordonn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bbgordonn/subscriptions","organizations_url":"https://api.github.com/users/bbgordonn/orgs","repos_url":"https://api.github.com/users/bbgordonn/repos","events_url":"https://api.github.com/users/bbgordonn/events{/privacy}","received_events_url":"https://api.github.com/users/bbgordonn/received_events","type":"User","site_admin":false},"created_at":"2011-12-08T23:11:11Z","updated_at":"2011-12-08T23:11:11Z","author_association":"CONTRIBUTOR","body":"This would be useful for e.g. updating to a new major version (e.g. 0.18 to 0.19): mark all indices read-only, take half the cluster offline and upgrade it, restart, and repeat for the other half. Searches can proceed against both halves so availability is maintained but no new new documents or deletes can occur in half while they are disconnected.\n\nThis patch seems to basically work as a proof of concept. Of course, I don't know if this is the approach that should be taken--feel free to tell me it's completely wrong! It adds a new cluster block for the index when the index.read_only setting is true.\n\nhttps://gist.github.com/f089f90787e5a691668d\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3079979","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3079979","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3079979,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzk5Nzk=","user":{"login":"bbgordonn","id":952080,"node_id":"MDQ6VXNlcjk1MjA4MA==","avatar_url":"https://avatars2.githubusercontent.com/u/952080?v=4","gravatar_id":"","url":"https://api.github.com/users/bbgordonn","html_url":"https://github.com/bbgordonn","followers_url":"https://api.github.com/users/bbgordonn/followers","following_url":"https://api.github.com/users/bbgordonn/following{/other_user}","gists_url":"https://api.github.com/users/bbgordonn/gists{/gist_id}","starred_url":"https://api.github.com/users/bbgordonn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bbgordonn/subscriptions","organizations_url":"https://api.github.com/users/bbgordonn/orgs","repos_url":"https://api.github.com/users/bbgordonn/repos","events_url":"https://api.github.com/users/bbgordonn/events{/privacy}","received_events_url":"https://api.github.com/users/bbgordonn/received_events","type":"User","site_admin":false},"created_at":"2011-12-09T14:50:19Z","updated_at":"2011-12-09T14:50:19Z","author_association":"CONTRIBUTOR","body":"Having thought about this more... the above is a simplified description of upgrading, but maybe too simple. For many applications action.auto_create_index would be needed. In the even more general case one would also need a way to disable changes to mappings, index templates, etc.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3080014","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3080014","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3080014,"node_id":"MDEyOklzc3VlQ29tbWVudDMwODAwMTQ=","user":{"login":"ruflin","id":244900,"node_id":"MDQ6VXNlcjI0NDkwMA==","avatar_url":"https://avatars3.githubusercontent.com/u/244900?v=4","gravatar_id":"","url":"https://api.github.com/users/ruflin","html_url":"https://github.com/ruflin","followers_url":"https://api.github.com/users/ruflin/followers","following_url":"https://api.github.com/users/ruflin/following{/other_user}","gists_url":"https://api.github.com/users/ruflin/gists{/gist_id}","starred_url":"https://api.github.com/users/ruflin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruflin/subscriptions","organizations_url":"https://api.github.com/users/ruflin/orgs","repos_url":"https://api.github.com/users/ruflin/repos","events_url":"https://api.github.com/users/ruflin/events{/privacy}","received_events_url":"https://api.github.com/users/ruflin/received_events","type":"User","site_admin":false},"created_at":"2011-12-09T14:54:43Z","updated_at":"2011-12-09T14:54:43Z","author_association":"CONTRIBUTOR","body":"I would also prefer if the index would not allow any changes as you described in the second part. In our use case, there shouldn't be any changes like mappings etc. on the old index, but still it would be nice to have the guarantee, that nothing was changed during upgrading.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3127877","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3127877","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3127877,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMjc4Nzc=","user":{"login":"bbgordonn","id":952080,"node_id":"MDQ6VXNlcjk1MjA4MA==","avatar_url":"https://avatars2.githubusercontent.com/u/952080?v=4","gravatar_id":"","url":"https://api.github.com/users/bbgordonn","html_url":"https://github.com/bbgordonn","followers_url":"https://api.github.com/users/bbgordonn/followers","following_url":"https://api.github.com/users/bbgordonn/following{/other_user}","gists_url":"https://api.github.com/users/bbgordonn/gists{/gist_id}","starred_url":"https://api.github.com/users/bbgordonn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bbgordonn/subscriptions","organizations_url":"https://api.github.com/users/bbgordonn/orgs","repos_url":"https://api.github.com/users/bbgordonn/repos","events_url":"https://api.github.com/users/bbgordonn/events{/privacy}","received_events_url":"https://api.github.com/users/bbgordonn/received_events","type":"User","site_admin":false},"created_at":"2011-12-13T19:17:11Z","updated_at":"2011-12-13T19:17:11Z","author_association":"CONTRIBUTOR","body":"There is a ClusterBlockLevel.METADATA that prevents mapping updates, but it also prevents index exist and deletes calls. (In my case I'd like to be able to delete indices in case I want to split a cluster into two smaller ones).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3130165","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3130165","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3130165,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMzAxNjU=","user":{"login":"bbgordonn","id":952080,"node_id":"MDQ6VXNlcjk1MjA4MA==","avatar_url":"https://avatars2.githubusercontent.com/u/952080?v=4","gravatar_id":"","url":"https://api.github.com/users/bbgordonn","html_url":"https://github.com/bbgordonn","followers_url":"https://api.github.com/users/bbgordonn/followers","following_url":"https://api.github.com/users/bbgordonn/following{/other_user}","gists_url":"https://api.github.com/users/bbgordonn/gists{/gist_id}","starred_url":"https://api.github.com/users/bbgordonn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bbgordonn/subscriptions","organizations_url":"https://api.github.com/users/bbgordonn/orgs","repos_url":"https://api.github.com/users/bbgordonn/repos","events_url":"https://api.github.com/users/bbgordonn/events{/privacy}","received_events_url":"https://api.github.com/users/bbgordonn/received_events","type":"User","site_admin":false},"created_at":"2011-12-13T21:39:34Z","updated_at":"2011-12-13T21:39:34Z","author_association":"CONTRIBUTOR","body":"https://gist.github.com/f089f90787e5a691668d is now updated with a cluster.read_only option.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3137820","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3137820","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3137820,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMzc4MjA=","user":{"login":"ruflin","id":244900,"node_id":"MDQ6VXNlcjI0NDkwMA==","avatar_url":"https://avatars3.githubusercontent.com/u/244900?v=4","gravatar_id":"","url":"https://api.github.com/users/ruflin","html_url":"https://github.com/ruflin","followers_url":"https://api.github.com/users/ruflin/followers","following_url":"https://api.github.com/users/ruflin/following{/other_user}","gists_url":"https://api.github.com/users/ruflin/gists{/gist_id}","starred_url":"https://api.github.com/users/ruflin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruflin/subscriptions","organizations_url":"https://api.github.com/users/ruflin/orgs","repos_url":"https://api.github.com/users/ruflin/repos","events_url":"https://api.github.com/users/ruflin/events{/privacy}","received_events_url":"https://api.github.com/users/ruflin/received_events","type":"User","site_admin":false},"created_at":"2011-12-14T10:29:30Z","updated_at":"2011-12-14T10:29:30Z","author_association":"CONTRIBUTOR","body":" Nice, looks good.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3138937","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3138937","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3138937,"node_id":"MDEyOklzc3VlQ29tbWVudDMxMzg5Mzc=","user":{"login":"karussell","id":129644,"node_id":"MDQ6VXNlcjEyOTY0NA==","avatar_url":"https://avatars0.githubusercontent.com/u/129644?v=4","gravatar_id":"","url":"https://api.github.com/users/karussell","html_url":"https://github.com/karussell","followers_url":"https://api.github.com/users/karussell/followers","following_url":"https://api.github.com/users/karussell/following{/other_user}","gists_url":"https://api.github.com/users/karussell/gists{/gist_id}","starred_url":"https://api.github.com/users/karussell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karussell/subscriptions","organizations_url":"https://api.github.com/users/karussell/orgs","repos_url":"https://api.github.com/users/karussell/repos","events_url":"https://api.github.com/users/karussell/events{/privacy}","received_events_url":"https://api.github.com/users/karussell/received_events","type":"User","site_admin":false},"created_at":"2011-12-14T12:36:27Z","updated_at":"2011-12-14T12:36:27Z","author_association":"CONTRIBUTOR","body":"Why not add one or two tests and create a pull request from it?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3153239","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3153239","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3153239,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNTMyMzk=","user":{"login":"bbgordonn","id":952080,"node_id":"MDQ6VXNlcjk1MjA4MA==","avatar_url":"https://avatars2.githubusercontent.com/u/952080?v=4","gravatar_id":"","url":"https://api.github.com/users/bbgordonn","html_url":"https://github.com/bbgordonn","followers_url":"https://api.github.com/users/bbgordonn/followers","following_url":"https://api.github.com/users/bbgordonn/following{/other_user}","gists_url":"https://api.github.com/users/bbgordonn/gists{/gist_id}","starred_url":"https://api.github.com/users/bbgordonn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bbgordonn/subscriptions","organizations_url":"https://api.github.com/users/bbgordonn/orgs","repos_url":"https://api.github.com/users/bbgordonn/repos","events_url":"https://api.github.com/users/bbgordonn/events{/privacy}","received_events_url":"https://api.github.com/users/bbgordonn/received_events","type":"User","site_admin":false},"created_at":"2011-12-14T22:43:07Z","updated_at":"2011-12-14T22:43:07Z","author_association":"CONTRIBUTOR","body":"Since kimchy OK'd my basic approach last night, I've been working on exactly that. I can't figure out how to inject initial values for the settings so I gave up on testing those (they would need to go into the cluster state, not the node state).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3154516","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3154516","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3154516,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNTQ1MTY=","user":{"login":"bbgordonn","id":952080,"node_id":"MDQ6VXNlcjk1MjA4MA==","avatar_url":"https://avatars2.githubusercontent.com/u/952080?v=4","gravatar_id":"","url":"https://api.github.com/users/bbgordonn","html_url":"https://github.com/bbgordonn","followers_url":"https://api.github.com/users/bbgordonn/followers","following_url":"https://api.github.com/users/bbgordonn/following{/other_user}","gists_url":"https://api.github.com/users/bbgordonn/gists{/gist_id}","starred_url":"https://api.github.com/users/bbgordonn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bbgordonn/subscriptions","organizations_url":"https://api.github.com/users/bbgordonn/orgs","repos_url":"https://api.github.com/users/bbgordonn/repos","events_url":"https://api.github.com/users/bbgordonn/events{/privacy}","received_events_url":"https://api.github.com/users/bbgordonn/received_events","type":"User","site_admin":false},"created_at":"2011-12-15T00:07:07Z","updated_at":"2011-12-15T00:07:07Z","author_association":"CONTRIBUTOR","body":"Pull request submitted for master.\n\nkimchy said he didn't want it in 0.18, so I'm not submitting that version. It's in my fork if anyone wants it. I plan to use it during my eventual major version upgrade as a read-only cluster should allow me to work around the fact that a rolling upgrade to a new major version is usually not possible without risking split-brain issues from writes during the upgrade.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3178622","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3178622","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3178622,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzg2MjI=","user":{"login":"ruflin","id":244900,"node_id":"MDQ6VXNlcjI0NDkwMA==","avatar_url":"https://avatars3.githubusercontent.com/u/244900?v=4","gravatar_id":"","url":"https://api.github.com/users/ruflin","html_url":"https://github.com/ruflin","followers_url":"https://api.github.com/users/ruflin/followers","following_url":"https://api.github.com/users/ruflin/following{/other_user}","gists_url":"https://api.github.com/users/ruflin/gists{/gist_id}","starred_url":"https://api.github.com/users/ruflin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruflin/subscriptions","organizations_url":"https://api.github.com/users/ruflin/orgs","repos_url":"https://api.github.com/users/ruflin/repos","events_url":"https://api.github.com/users/ruflin/events{/privacy}","received_events_url":"https://api.github.com/users/ruflin/received_events","type":"User","site_admin":false},"created_at":"2011-12-16T15:42:00Z","updated_at":"2011-12-16T15:42:00Z","author_association":"CONTRIBUTOR","body":"Thank you. I will use your fork to implement this functionality in Elastica.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3283978","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3283978","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3283978,"node_id":"MDEyOklzc3VlQ29tbWVudDMyODM5Nzg=","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2011-12-27T18:36:24Z","updated_at":"2011-12-27T18:36:24Z","author_association":"MEMBER","body":"See #1573. I don't think Elastic needs any special support to implement it, just expose the index update settings and cluster update settings API.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3299581","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3299581","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3299581,"node_id":"MDEyOklzc3VlQ29tbWVudDMyOTk1ODE=","user":{"login":"ruflin","id":244900,"node_id":"MDQ6VXNlcjI0NDkwMA==","avatar_url":"https://avatars3.githubusercontent.com/u/244900?v=4","gravatar_id":"","url":"https://api.github.com/users/ruflin","html_url":"https://github.com/ruflin","followers_url":"https://api.github.com/users/ruflin/followers","following_url":"https://api.github.com/users/ruflin/following{/other_user}","gists_url":"https://api.github.com/users/ruflin/gists{/gist_id}","starred_url":"https://api.github.com/users/ruflin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruflin/subscriptions","organizations_url":"https://api.github.com/users/ruflin/orgs","repos_url":"https://api.github.com/users/ruflin/repos","events_url":"https://api.github.com/users/ruflin/events{/privacy}","received_events_url":"https://api.github.com/users/ruflin/received_events","type":"User","site_admin":false},"created_at":"2011-12-29T10:25:57Z","updated_at":"2011-12-29T10:25:57Z","author_association":"CONTRIBUTOR","body":"That is actually what I planned. I will add it to Elastica_Index_Settings and Elastica_Cluster. Thank you.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3305211","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3305211","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3305211,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMDUyMTE=","user":{"login":"ruflin","id":244900,"node_id":"MDQ6VXNlcjI0NDkwMA==","avatar_url":"https://avatars3.githubusercontent.com/u/244900?v=4","gravatar_id":"","url":"https://api.github.com/users/ruflin","html_url":"https://github.com/ruflin","followers_url":"https://api.github.com/users/ruflin/followers","following_url":"https://api.github.com/users/ruflin/following{/other_user}","gists_url":"https://api.github.com/users/ruflin/gists{/gist_id}","starred_url":"https://api.github.com/users/ruflin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruflin/subscriptions","organizations_url":"https://api.github.com/users/ruflin/orgs","repos_url":"https://api.github.com/users/ruflin/repos","events_url":"https://api.github.com/users/ruflin/events{/privacy}","received_events_url":"https://api.github.com/users/ruflin/received_events","type":"User","site_admin":false},"created_at":"2011-12-29T21:11:40Z","updated_at":"2011-12-29T21:11:40Z","author_association":"CONTRIBUTOR","body":"I would expect that the following code throws an exception:\n\ncurl -XPUT 'http://localhost:9200/elastica_test/'\ncurl -XPOST http://localhost:9200/elastica_test/_close -d '[]'\ncurl -XPUT http://localhost:9200/elastica_test/_settings -d '{\"index\":{\"read_only\":true}}'\ncurl -XPOST http://localhost:9200/elastica_test/_open -d '[]'\ncurl -XPUT http://localhost:9200/elastica_test/test/1 -d '{\"hello\":\"world\"}'\n\nBut after running this command on the current master branch, I receive a timeout error. Is this as expected? Is it necessary to close the index?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3312632","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3312632","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3312632,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMTI2MzI=","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2011-12-30T11:44:32Z","updated_at":"2011-12-30T11:44:32Z","author_association":"MEMBER","body":"I've ran the command you posted, but none gets stuck for me. Regarding the read only, there is no need to close the index. You can set `index.blocks.read_only` setting to true using indices update settings to make a specific index read only. Or set `cluster.blocks.read_only` to `true` using the cluster update settings API to make the whole cluster read only.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3312900","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3312900","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3312900,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMTI5MDA=","user":{"login":"ruflin","id":244900,"node_id":"MDQ6VXNlcjI0NDkwMA==","avatar_url":"https://avatars3.githubusercontent.com/u/244900?v=4","gravatar_id":"","url":"https://api.github.com/users/ruflin","html_url":"https://github.com/ruflin","followers_url":"https://api.github.com/users/ruflin/followers","following_url":"https://api.github.com/users/ruflin/following{/other_user}","gists_url":"https://api.github.com/users/ruflin/gists{/gist_id}","starred_url":"https://api.github.com/users/ruflin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruflin/subscriptions","organizations_url":"https://api.github.com/users/ruflin/orgs","repos_url":"https://api.github.com/users/ruflin/repos","events_url":"https://api.github.com/users/ruflin/events{/privacy}","received_events_url":"https://api.github.com/users/ruflin/received_events","type":"User","site_admin":false},"created_at":"2011-12-30T12:48:57Z","updated_at":"2011-12-30T12:48:57Z","author_association":"CONTRIBUTOR","body":"Ok, I checked out the complete ES source again form github and rebuilt it. Now it works as expected. I had some \"useless\" changes in the code I completely forgot about. Sorry.\n\nWhat is the difference between the following commands?\n\ncurl -XPUT http://localhost:9200/elastica_test/_settings -d '{\"index\":{\"read_only\":true}}'\ncurl -XPUT http://localhost:9200/elastica_test/_settings -d '{\"index.read_only\":true}'\ncurl -XPUT http://localhost:9200/elastica_test/_settings -d '{\"index\":{\"blocks.read_only\":true}}'\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3312942","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3312942","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3312942,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMTI5NDI=","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2011-12-30T12:55:34Z","updated_at":"2011-12-30T12:55:34Z","author_association":"MEMBER","body":"The setting is `index.blocks.read_only`, so the first two won't work (`index.read_only` setting _does not_ work). Settings wise, there is no difference between: `{ \"index\" : {\"blocks.read_only\" : true} }`, or `{ \"index.blocks.read_only` : true}`. Actually, because its update _index_ settings, you don't even have to have the \"index\" prefix.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3313020","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3313020","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3313020,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMTMwMjA=","user":{"login":"ruflin","id":244900,"node_id":"MDQ6VXNlcjI0NDkwMA==","avatar_url":"https://avatars3.githubusercontent.com/u/244900?v=4","gravatar_id":"","url":"https://api.github.com/users/ruflin","html_url":"https://github.com/ruflin","followers_url":"https://api.github.com/users/ruflin/followers","following_url":"https://api.github.com/users/ruflin/following{/other_user}","gists_url":"https://api.github.com/users/ruflin/gists{/gist_id}","starred_url":"https://api.github.com/users/ruflin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruflin/subscriptions","organizations_url":"https://api.github.com/users/ruflin/orgs","repos_url":"https://api.github.com/users/ruflin/repos","events_url":"https://api.github.com/users/ruflin/events{/privacy}","received_events_url":"https://api.github.com/users/ruflin/received_events","type":"User","site_admin":false},"created_at":"2011-12-30T13:07:43Z","updated_at":"2011-12-30T13:07:43Z","author_association":"CONTRIBUTOR","body":"Good to know. Is there a specific reason that index.read_only does not throw an exception and is even stored in the settings?\n\ncurl -XPUT http://localhost:9200/elastica_test/_settings -d '{\"index\":{\"doesnothing\":\"really\"}}'\ncurl -XGET http://localhost:9200/elastica_test/_settings?pretty=true\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/3324384","html_url":"https://github.com/elastic/elasticsearch/issues/1452#issuecomment-3324384","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1452","id":3324384,"node_id":"MDEyOklzc3VlQ29tbWVudDMzMjQzODQ=","user":{"login":"ruflin","id":244900,"node_id":"MDQ6VXNlcjI0NDkwMA==","avatar_url":"https://avatars3.githubusercontent.com/u/244900?v=4","gravatar_id":"","url":"https://api.github.com/users/ruflin","html_url":"https://github.com/ruflin","followers_url":"https://api.github.com/users/ruflin/followers","following_url":"https://api.github.com/users/ruflin/following{/other_user}","gists_url":"https://api.github.com/users/ruflin/gists{/gist_id}","starred_url":"https://api.github.com/users/ruflin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruflin/subscriptions","organizations_url":"https://api.github.com/users/ruflin/orgs","repos_url":"https://api.github.com/users/ruflin/repos","events_url":"https://api.github.com/users/ruflin/events{/privacy}","received_events_url":"https://api.github.com/users/ruflin/received_events","type":"User","site_admin":false},"created_at":"2012-01-01T12:29:35Z","updated_at":"2012-01-01T12:29:35Z","author_association":"CONTRIBUTOR","body":"In more thing I discovered:\n\n`curl -XGET 'http://localhost:9200/_cluster/settings'`\n\nReturns the following:\n\n`{\"persistent\":{},\"transient\":{\"cluster.blocks.read_only\":\"false\"}}`\n\nBut I would expect:\n\n`{\"persistent\":{},\"transient\":{\"cluster.blocks.read_only\":false}}`\n\nIs it somehow possible that the type boolean instead of a string is returned?\n","performed_via_github_app":null}]