[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/197884184","html_url":"https://github.com/elastic/elasticsearch/issues/17161#issuecomment-197884184","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17161","id":197884184,"node_id":"MDEyOklzc3VlQ29tbWVudDE5Nzg4NDE4NA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-03-17T13:42:36Z","updated_at":"2016-03-17T13:42:36Z","author_association":"CONTRIBUTOR","body":"May I ask what you are missing from the default one? Maybe we could just improve it?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/197887171","html_url":"https://github.com/elastic/elasticsearch/issues/17161#issuecomment-197887171","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17161","id":197887171,"node_id":"MDEyOklzc3VlQ29tbWVudDE5Nzg4NzE3MQ==","user":{"login":"Vineeth-Mohan","id":977962,"node_id":"MDQ6VXNlcjk3Nzk2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/977962?v=4","gravatar_id":"","url":"https://api.github.com/users/Vineeth-Mohan","html_url":"https://github.com/Vineeth-Mohan","followers_url":"https://api.github.com/users/Vineeth-Mohan/followers","following_url":"https://api.github.com/users/Vineeth-Mohan/following{/other_user}","gists_url":"https://api.github.com/users/Vineeth-Mohan/gists{/gist_id}","starred_url":"https://api.github.com/users/Vineeth-Mohan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Vineeth-Mohan/subscriptions","organizations_url":"https://api.github.com/users/Vineeth-Mohan/orgs","repos_url":"https://api.github.com/users/Vineeth-Mohan/repos","events_url":"https://api.github.com/users/Vineeth-Mohan/events{/privacy}","received_events_url":"https://api.github.com/users/Vineeth-Mohan/received_events","type":"User","site_admin":false},"created_at":"2016-03-17T13:51:12Z","updated_at":"2016-03-17T13:51:12Z","author_association":"NONE","body":"@jpountz  - I know this is being debated on another issue. But i badly want the ability to decide if the filter needs to be cached or not cached with me itself. Depending on my client ( Free or paid ) , his usage , the volume of data he is going to search etc , we make decision for enabling caching or not on the set of keywords ( Kept in another document and looked up using terms lookup filter ) he is going to search. \n\nYou can think this for situations like , when a client logs in , before he makes any search , we plan to cache his filter so that when he search the performance is good. When he logs out , we remove the filter too.  Similarly we have other use cases too. \n\nHence kindly make expose QueryCachingPolicy via a flag or configuration or something , or provide the pluggability so that we can do it ourself.  \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/198048531","html_url":"https://github.com/elastic/elasticsearch/issues/17161#issuecomment-198048531","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17161","id":198048531,"node_id":"MDEyOklzc3VlQ29tbWVudDE5ODA0ODUzMQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-03-17T19:34:33Z","updated_at":"2016-03-17T19:34:33Z","author_association":"CONTRIBUTOR","body":"> we plan to cache his filter so that when he search the performance is good.\n\n@Vineeth-Mohan and what does his filter look like?  Is it a simple term query on customer ID?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/198269946","html_url":"https://github.com/elastic/elasticsearch/issues/17161#issuecomment-198269946","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17161","id":198269946,"node_id":"MDEyOklzc3VlQ29tbWVudDE5ODI2OTk0Ng==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-03-18T09:16:08Z","updated_at":"2016-03-18T09:16:08Z","author_association":"CONTRIBUTOR","body":"> Depending on my client ( Free or paid ) [...] we make decision for enabling caching or not on the set of keywords\n\nI don't think this would be a good idea: if free customers are hammering the cluster, then paid customers will have a better experience if caching is enabled for the free customers since their queries will use less CPU/IO. From that perspective it is better to just cache the filters that are used most often.\n\n> when a client logs in , before he makes any search , we plan to cache his filter so that when he search the performance is good\n\nThis filter is likely a term filter and term filters barely need any caching: they are already plenty fast thanks to the way inverted indices work.\n\nThe reason why I am cautious about exposing such internals of Elasticsearch is that the filter cache is not a regular cache. Regular caches trade memory for latency and throughput, they can barely make any harm if they are configured correctly. On the contrary, elasticsearch's filter cache can severely hurt latency and throughput if it is too aggressive: the inverted index encodes skip lists than can be used to efficiently skip over documents that do not match. If caching is too aggressive then many queries will have to read entire postings lists and load them into memory while the query maybe only needed to know about 10 matching docs.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/198270787","html_url":"https://github.com/elastic/elasticsearch/issues/17161#issuecomment-198270787","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17161","id":198270787,"node_id":"MDEyOklzc3VlQ29tbWVudDE5ODI3MDc4Nw==","user":{"login":"Vineeth-Mohan","id":977962,"node_id":"MDQ6VXNlcjk3Nzk2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/977962?v=4","gravatar_id":"","url":"https://api.github.com/users/Vineeth-Mohan","html_url":"https://github.com/Vineeth-Mohan","followers_url":"https://api.github.com/users/Vineeth-Mohan/followers","following_url":"https://api.github.com/users/Vineeth-Mohan/following{/other_user}","gists_url":"https://api.github.com/users/Vineeth-Mohan/gists{/gist_id}","starred_url":"https://api.github.com/users/Vineeth-Mohan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Vineeth-Mohan/subscriptions","organizations_url":"https://api.github.com/users/Vineeth-Mohan/orgs","repos_url":"https://api.github.com/users/Vineeth-Mohan/repos","events_url":"https://api.github.com/users/Vineeth-Mohan/events{/privacy}","received_events_url":"https://api.github.com/users/Vineeth-Mohan/received_events","type":"User","site_admin":false},"created_at":"2016-03-18T09:19:36Z","updated_at":"2016-03-18T09:19:36Z","author_association":"NONE","body":"@clintongormley  - Well the main filter is  a terms lookup on 100,000 terms. So i have a field called ids and for each user , he is interested in 100,000 ids alone and those documents alone should be shown to him. I have used a term lookup query to achieve this. This is applied to 12 billion records.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/198274781","html_url":"https://github.com/elastic/elasticsearch/issues/17161#issuecomment-198274781","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17161","id":198274781,"node_id":"MDEyOklzc3VlQ29tbWVudDE5ODI3NDc4MQ==","user":{"login":"Vineeth-Mohan","id":977962,"node_id":"MDQ6VXNlcjk3Nzk2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/977962?v=4","gravatar_id":"","url":"https://api.github.com/users/Vineeth-Mohan","html_url":"https://github.com/Vineeth-Mohan","followers_url":"https://api.github.com/users/Vineeth-Mohan/followers","following_url":"https://api.github.com/users/Vineeth-Mohan/following{/other_user}","gists_url":"https://api.github.com/users/Vineeth-Mohan/gists{/gist_id}","starred_url":"https://api.github.com/users/Vineeth-Mohan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Vineeth-Mohan/subscriptions","organizations_url":"https://api.github.com/users/Vineeth-Mohan/orgs","repos_url":"https://api.github.com/users/Vineeth-Mohan/repos","events_url":"https://api.github.com/users/Vineeth-Mohan/events{/privacy}","received_events_url":"https://api.github.com/users/Vineeth-Mohan/received_events","type":"User","site_admin":false},"created_at":"2016-03-18T09:30:38Z","updated_at":"2016-03-18T09:30:38Z","author_association":"NONE","body":"@jpountz - I am using a terms lookup filter of 100,000 terms against a 9 billion record indices per customer. The free client has his own set of keywords and the paid customer has his own set of keywords. And as the cache i make is one cache per the entire 100,000 terms for a client , it cant be reused for another client.  The main reason being , even if 1 keyword is different , the cache key would be different and we cant reuse the filter cache there. \n\nI saw the issue where you have planned to make the terms lookup query expensive , but then when i checked the code , expensive queries need 2 execution for caching. Is there some solution to make this query to get cached in the first go itself.\n","performed_via_github_app":null}]