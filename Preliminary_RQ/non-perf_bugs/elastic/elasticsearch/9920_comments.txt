[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/76508931","html_url":"https://github.com/elastic/elasticsearch/issues/9920#issuecomment-76508931","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9920","id":76508931,"node_id":"MDEyOklzc3VlQ29tbWVudDc2NTA4OTMx","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-02-28T03:56:28Z","updated_at":"2015-02-28T03:56:28Z","author_association":"CONTRIBUTOR","body":"Hi @amreha2002 \n\nThis is the way that fielddata has worked from the beginning. Nothing has changed.  If you want to run a terms agg on an analyzed string field, then you need to load into memory the values of that field for all the documents in your index.  No exceptions.\n\n> 2- Using doc values instead caching in memory (Much slower, Cache will never get blocked, doesn't support working with text field yet, so it's useless in my case)\n\nNote: doc values DO work with string fields, as long as they are `not_analyzed`.  Do you really need to run all of these aggs on analyzed string fields?  Also note: they are **slightly** slower than fielddata, not much slower.  You should really consider using doc values.\n\nAnother option for analyzed text fields is to use fielddata filtering, to only load the most interesting terms into memory (eg not very common terms and not very uncommon terms)\n\nBut if you say you only want to run this on a few hundred docs, then putting them into their own index makes that easy.\n","performed_via_github_app":null}]