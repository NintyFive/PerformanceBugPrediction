[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/237313923","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-237313923","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":237313923,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNzMxMzkyMw==","user":{"login":"djschny","id":129643,"node_id":"MDQ6VXNlcjEyOTY0Mw==","avatar_url":"https://avatars0.githubusercontent.com/u/129643?v=4","gravatar_id":"","url":"https://api.github.com/users/djschny","html_url":"https://github.com/djschny","followers_url":"https://api.github.com/users/djschny/followers","following_url":"https://api.github.com/users/djschny/following{/other_user}","gists_url":"https://api.github.com/users/djschny/gists{/gist_id}","starred_url":"https://api.github.com/users/djschny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/djschny/subscriptions","organizations_url":"https://api.github.com/users/djschny/orgs","repos_url":"https://api.github.com/users/djschny/repos","events_url":"https://api.github.com/users/djschny/events{/privacy}","received_events_url":"https://api.github.com/users/djschny/received_events","type":"User","site_admin":false},"created_at":"2016-08-03T17:49:52Z","updated_at":"2016-08-03T17:50:12Z","author_association":"CONTRIBUTOR","body":"I am +1 on this. Would like to add to some other benefits:\n- By disabling by default, it makes it a conscious decision to enable this and hence engineers will only enable it if they need it. We advise on this as a best practice in various discussions anyway.\n- Tools like Logstash specifically provide a default mapping in which they could keep compatibility if need be\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/237346289","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-237346289","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":237346289,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNzM0NjI4OQ==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2016-08-03T19:32:57Z","updated_at":"2016-08-03T19:32:57Z","author_association":"MEMBER","body":"+1 to this change.\nI'd totally remove this feature in favor of copy_to.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/237702454","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-237702454","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":237702454,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNzcwMjQ1NA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-08-04T22:27:42Z","updated_at":"2016-08-04T22:27:42Z","author_association":"CONTRIBUTOR","body":"Agreed with David: if we decide to disable it by default then I'd vote to remove it entirely. Since enabling the feature will require to take action anyway, I'd rather like users to set up a template that automatically adds a `copy_to` option to string fields than enable the `_all` field?\n\n> Perhaps we would be able to change these queries to send a \"fields\": [\"*\"] parameter if no fields are specified in the JSON query, so that all field values can still be queried.\n\nThis part worries me a bit: this would be very slow if there are many fields in mappings, which would be trappy? I would rather like to make `field`/`fields` a required parameter of the mach/query_string/... queries.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/237705083","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-237705083","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":237705083,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNzcwNTA4Mw==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-08-04T22:41:09Z","updated_at":"2016-08-04T22:41:09Z","author_association":"CONTRIBUTOR","body":"I am +1 here to. I think having catch all fields is good practice in many situations but we should try to cover it with documentation rather than punishing all the users that don't need that at all.\n\nwe might come up with better ideas like defining default search fields for an index or something like this if no fields are specified such that users can build their own `_all` field instead?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/237741939","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-237741939","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":237741939,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNzc0MTkzOQ==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2016-08-05T02:46:35Z","updated_at":"2016-08-05T02:46:35Z","author_association":"MEMBER","body":"> This part worries me a bit: this would be very slow if there are many fields in mappings, which would be trappy?\n\nThat's a really good point! The `fields: [\"*\"]` idea was a random brainstorm, I think we can do it in a more efficient manner as you mentioned.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/237833860","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-237833860","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":237833860,"node_id":"MDEyOklzc3VlQ29tbWVudDIzNzgzMzg2MA==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-08-05T12:05:55Z","updated_at":"2016-08-05T12:05:55Z","author_association":"CONTRIBUTOR","body":"I'm concerned by the quality of results if we steer people away from _all towards multi-field indexing and multi_match type queries _across_ fields. \nThe default ranking heuristics that work well on a single _all type field don't apply very well in a multi-field scenario (e.g. favouring any field _other_ than `colour` for the search term `red` [1]). There's some options in multi-match to address this but its confusing and doesn't work if you use query_string etc \n\nFor my money wholly unstructured queries are better off serviced by a wholly unstructured _all type field. Bad matching bad.\n\nOf course the ideal scenario is matching well-written queries against content indexed in a way that retains the original structure. \nBy well-written queries I mean the intent is clear and things like field names are provided for each term. It does feel like there is scope for more tooling to rewrite user queries (field spotting, AND vs OR vs Phrase auto-detect, percolator spotting queries needing special attention) but that's probably for another issue. \n\nAside from the relevance ranking issues of multi-field searches I think it is useful to retain some notion of a \"default search field\" that generic tools like Kibana or MoreLikeThis/query_string queries will target in an index.\n\n[1] https://discuss.elastic.co/t/nested-multi-match/56370/5\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240133302","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-240133302","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":240133302,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDEzMzMwMg==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-08-16T15:12:29Z","updated_at":"2016-08-16T15:12:29Z","author_association":"CONTRIBUTOR","body":"I think we should push people towards explicit `copy_to` or some kind of improved multi-field support that doesn't suffer from the issues @markharwood mentions. That way they understand the limitations of what they are doing because they actively made a choice. `copy_to` doesn't support weighting the copied fields differently without copying to the same field over and over again which is kind of nasty, but at least it is less magic. And less magic is good, especially for magic like the `_all` field which can have a fairly significant disk space cost.\n\nI think it makes more sense to target 6.0 rather than 5.0 for this because it'll take a while for the ecosystem to absorb the change. Maybe it is actually more right to start at the edges, converting Kibana and Logstash to `copy_to` or multi field searches \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240148890","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-240148890","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":240148890,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDE0ODg5MA==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2016-08-16T16:00:23Z","updated_at":"2016-08-16T16:00:23Z","author_association":"MEMBER","body":"> I think it makes more sense to target 6.0 rather than 5.0 for this because it'll take a while for the ecosystem to absorb the change.\n\nWhy does 6.0 allow the ecosystem to \"absorb\" the change better or faster?  The sooner we get it out there, the sooner new users are not bogged down by this and must make an explicit choice (setting up their own all field).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240160564","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-240160564","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":240160564,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDE2MDU2NA==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2016-08-16T16:38:13Z","updated_at":"2016-08-16T16:38:13Z","author_association":"MEMBER","body":"I've opened issues on the Beats, Logtash, and Kibana repos to kick off discussions about moving away from the `_all` field for index templates and querying.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240272490","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-240272490","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":240272490,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDI3MjQ5MA==","user":{"login":"cwurm","id":694597,"node_id":"MDQ6VXNlcjY5NDU5Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/694597?v=4","gravatar_id":"","url":"https://api.github.com/users/cwurm","html_url":"https://github.com/cwurm","followers_url":"https://api.github.com/users/cwurm/followers","following_url":"https://api.github.com/users/cwurm/following{/other_user}","gists_url":"https://api.github.com/users/cwurm/gists{/gist_id}","starred_url":"https://api.github.com/users/cwurm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cwurm/subscriptions","organizations_url":"https://api.github.com/users/cwurm/orgs","repos_url":"https://api.github.com/users/cwurm/repos","events_url":"https://api.github.com/users/cwurm/events{/privacy}","received_events_url":"https://api.github.com/users/cwurm/received_events","type":"User","site_admin":false},"created_at":"2016-08-16T23:40:36Z","updated_at":"2016-08-16T23:40:59Z","author_association":"CONTRIBUTOR","body":"> I'd totally remove this feature in favor of copy_to.\n\nI'm strongly against this. I wouldn't even want to change the default, but even if we do that let's keep `_all` within arm's reach until we know the change is accepted by users.\n\nI don't think any harm is done by having `all` enabled by default. It's great in the beginning, and once you move past small data sizes and/or into production, you should take a look at your mappings anyway and disabling `all` if not needed is just one of the things you have to do, and it's something many, many tutorials, blog posts, docs, etc. out there mention.\n\nTo me the `_all` field is part of what makes the Elasticsearch experience so \"magical\" for first-time users. Full-text search OOTB.\n\nJust a few days ago, I've had a newbie user refer to anything other than full-text query-string search as the \"complicated queries\" [sic]. They were using `_search?q=test` and never thinking twice about mappings, _all fields or any of this and I think it's great they don't have to initially.\n\nI'd rather see a feature that allows removing `_all` (and other fields) from an existing index without reindexing every document.\n\n> _all has its own analyzer, which is confusing when expecting to query text analyzed a certain way (or with synonyms, for example) and discovering that it does not match due to a analysis difference\n> Since the _all field is not retrievable or part of _source, its contents cannot easily be inspected for debugging purposes, some users do not know it even exists, which causes confusion at query time\n\nI agree it can be confusing, and I'd argue for including `_all` in the outputs of `/_mapping`, `/_search`, etc.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240279528","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-240279528","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":240279528,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDI3OTUyOA==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2016-08-17T00:23:09Z","updated_at":"2016-08-17T00:23:09Z","author_association":"MEMBER","body":"I agree it's a cool OOTB feature. So when you start discover Elasticsearch it's nice to have.\nBut when you move to production, I think a really few users need this exact feature.\n\nInstead, they can use a template which copy all fields to _all field and they will get basically the same feature as we had previously.\n\nMay be we could have some default templates documented so people can easily apply them?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240397541","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-240397541","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":240397541,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDM5NzU0MQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-08-17T12:34:51Z","updated_at":"2016-08-17T12:34:51Z","author_association":"CONTRIBUTOR","body":"There are a number of sub-optimal things we do to improve the OOB experience, eg indexing all strings as both `text` (for search) and `keyword` (for sorting and aggregations).  In fact, these OOB settings might be sufficient for some users who will never need to change anything.  \n\nFor the user wanting smaller disk usage or better performance, we have guides available to help them make good choices.\n\nWhile I would seldom use the `_all` field myself, I recognise that it makes it incredibly easy for a user to just get going with a simple search case or with logstash/beats and kibana.  \n\nDisabling `_all` now would severely hurt the user's experience in Kibana today.  This is not something we can just rush in at the last minute.  We first need to have a cross-stack discussion to come up with a plan for maintaining the same ease of use we have today.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240410878","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-240410878","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":240410878,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDQxMDg3OA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-08-17T13:29:41Z","updated_at":"2016-08-17T13:29:41Z","author_association":"CONTRIBUTOR","body":"Something else I'd be interested in getting opinions about would be to make the way `_all` works more explicit, eg. by disabling the copying magic and having the default mappings for strings look like this:\n\n```\n{\n  \"type\": \"text\",\n  \"copy_to\": \"_all\",\n  \"fields\": {\n    \"keyword\": {\n      \"type\": \"keyword\",\n      \"ignore_above\": 256\n    }\n  }\n}\n```\n\nSo `_all` would remain, but only as a convention for the default catch-all field and without magic.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240411394","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-240411394","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":240411394,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDQxMTM5NA==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2016-08-17T13:31:28Z","updated_at":"2016-08-17T13:31:28Z","author_association":"CONTRIBUTOR","body":"> Disabling _all now would severely hurt the user's experience in Kibana today. \n\nI'd add that I don't think the Kibana user is in any way special. The typical end-user's preference to search via simple keywords entered into a single edit box. That is the primary \"search\" use case and one that typically behaves badly on multi-field indexes.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240427064","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-240427064","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":240427064,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDQyNzA2NA==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2016-08-17T14:22:00Z","updated_at":"2016-08-17T14:22:00Z","author_association":"MEMBER","body":"+1 on Adrien's proposal or using a default template which can be overloaded.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240792367","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-240792367","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":240792367,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDc5MjM2Nw==","user":{"login":"jimmyjones2","id":2991805,"node_id":"MDQ6VXNlcjI5OTE4MDU=","avatar_url":"https://avatars2.githubusercontent.com/u/2991805?v=4","gravatar_id":"","url":"https://api.github.com/users/jimmyjones2","html_url":"https://github.com/jimmyjones2","followers_url":"https://api.github.com/users/jimmyjones2/followers","following_url":"https://api.github.com/users/jimmyjones2/following{/other_user}","gists_url":"https://api.github.com/users/jimmyjones2/gists{/gist_id}","starred_url":"https://api.github.com/users/jimmyjones2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimmyjones2/subscriptions","organizations_url":"https://api.github.com/users/jimmyjones2/orgs","repos_url":"https://api.github.com/users/jimmyjones2/repos","events_url":"https://api.github.com/users/jimmyjones2/events{/privacy}","received_events_url":"https://api.github.com/users/jimmyjones2/received_events","type":"User","site_admin":false},"created_at":"2016-08-18T17:15:26Z","updated_at":"2016-08-18T17:15:26Z","author_association":"CONTRIBUTOR","body":"#13214 will need to be addressed first, otherwise query of \\* doesn't always return all documents with custom_all\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240867283","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-240867283","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":240867283,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDg2NzI4Mw==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2016-08-18T21:46:19Z","updated_at":"2016-08-18T21:46:19Z","author_association":"MEMBER","body":"I've been thinking about this for the last few days. I think one of the root\nissues with the discussion is that there are two different levels of\n\"user-friendly\" and \"out-of-box experience\" that we're talking about.\n\nOn one hand, enabling the `_all` field is friendly to the out-of-the-box\nexperience because it allows a user to use the `query_string` or\n`simple_query_string` query without knowing anything about the data.\n\nOn the other hand, enabling the `_all` field is damaging to the out-of-the-box\nexperience when it comes to users experiencing large amounts of disk space,\nslower indexing, and operational confusion when a user doesn't know what the\nqueries operates on or how it works. People expect us to be competitive when it\ncomes to disk and ingestion speeds for increasingly larger and larger amounts of\ndata. Enabling `_all` by default is not as nice an experience in that way.\n\nI've noticed this trend (again, not a bad trend, just a trend toward different\npoles) in a number of places in the ES codebase - **do we optimize for\nout-of-box experience meaning 'ease of use', or do we optimize for out-of-box\nexperience meaning 'scalability and performance'?**. We ran into the same\nproblem with the bootstrap checks and I think this is a similar situation.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240869853","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-240869853","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":240869853,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDg2OTg1Mw==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2016-08-18T21:57:02Z","updated_at":"2016-08-18T21:57:02Z","author_association":"MEMBER","body":"Very true.\n\nI think the conclusion on bootstrap checks was that we are trying to make OOTB decisions for production.\nAlthough I loved when I discovered Elasticsearch this _all feature, I'm totally Ok to remove it now.\n\nIdeally, if people have defined a _all field with copy_to feature (or a manually controlled _all field), I think we can try to be smart and auto detect it when we run query string queries or mark a field as \"default\" in mapping so when no field is defined in a query, we use this default one?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/240886778","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-240886778","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":240886778,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MDg4Njc3OA==","user":{"login":"cwurm","id":694597,"node_id":"MDQ6VXNlcjY5NDU5Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/694597?v=4","gravatar_id":"","url":"https://api.github.com/users/cwurm","html_url":"https://github.com/cwurm","followers_url":"https://api.github.com/users/cwurm/followers","following_url":"https://api.github.com/users/cwurm/following{/other_user}","gists_url":"https://api.github.com/users/cwurm/gists{/gist_id}","starred_url":"https://api.github.com/users/cwurm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cwurm/subscriptions","organizations_url":"https://api.github.com/users/cwurm/orgs","repos_url":"https://api.github.com/users/cwurm/repos","events_url":"https://api.github.com/users/cwurm/events{/privacy}","received_events_url":"https://api.github.com/users/cwurm/received_events","type":"User","site_admin":false},"created_at":"2016-08-18T23:25:36Z","updated_at":"2016-08-18T23:25:36Z","author_association":"CONTRIBUTOR","body":"> On the other hand, enabling the _all field is damaging to the out-of-the-box\n> experience when it comes to users experiencing large amounts of disk space,\n> slower indexing, and operational confusion when a user doesn't know what the\n> queries operates on or how it works. People expect us to be competitive when it\n> comes to disk and ingestion speeds for increasingly larger and larger amounts of\n> data. Enabling _all by default is not as nice an experience in that way.\n\nI would argue that ingesting large amounts of data at top speed is already way beyond the initial out-of-the-box experience.\n\nFrom what I've seen people that are looking to ingest many GB or TB per day understand that they can't just do it straight out-of-the-box, but will have to put some effort into understanding how the system works and they know and expect that there'll be a few knobs to turn to improve the results.\n\nHowever, I think there's many users that expect being able to start an application out-of-the-box or use a search engine to do full-text search over some documents out-of-the-box.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241019057","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-241019057","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":241019057,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTAxOTA1Nw==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2016-08-19T13:32:01Z","updated_at":"2016-08-19T13:32:01Z","author_association":"CONTRIBUTOR","body":"I think there is a misconception that search really works correctly with `_all`, it doesn't!\n\nhighlighting is totally fubar'ed here, numeric stuff gets indexed into it... in a nearly useless manner, etc. \n\nI'm not trying to use these as an argument that `_all` should be removed, but at the very least it should be **fixed**. By that i mean, look at better defaults, such as not tossing numeric stuff into it. \n\nIf we say `_all` is for full text search, then let it be only the concatenation of text fields, not other stuff that will just waste disk and destroy ranking :)\n\n I think something like that is a lot more reasonable.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241020432","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-241020432","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":241020432,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTAyMDQzMg==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2016-08-19T13:37:46Z","updated_at":"2016-08-19T13:37:46Z","author_association":"CONTRIBUTOR","body":"Also i do feel, disabling the stopwords that lucene has by default on all its analyzers makes the situation worse too: it makes text fields far more costly that it should be, I think that should be considered. We try to use a minimal list that is not as invasive as other full text search systems already and i think its a good default, its been shown to be a good default in relevance experiments too.\n\nJust another idea to make a better out of box compromise.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241107632","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-241107632","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":241107632,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTEwNzYzMg==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-08-19T19:06:51Z","updated_at":"2016-08-19T19:06:51Z","author_association":"CONTRIBUTOR","body":"> Just another idea to make a better out of box compromise.\n\n++ I think we should start with dropping non-textual fields either way no matter if we disable it by default or not. they should have `include_in_all: false` by default. That would be numerics, dates, ip etc?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241144857","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-241144857","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":241144857,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTE0NDg1Nw==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2016-08-19T21:52:37Z","updated_at":"2016-08-19T21:52:37Z","author_association":"MEMBER","body":"> I think we should start with dropping non-textual fields either way no matter if we disable it by default or not. they should have include_in_all: false by default.\n\nI opened a PR to do/discuss this - https://github.com/elastic/elasticsearch/pull/20085\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/242230024","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-242230024","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":242230024,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MjIzMDAyNA==","user":{"login":"neuroticnetworks","id":3965137,"node_id":"MDQ6VXNlcjM5NjUxMzc=","avatar_url":"https://avatars0.githubusercontent.com/u/3965137?v=4","gravatar_id":"","url":"https://api.github.com/users/neuroticnetworks","html_url":"https://github.com/neuroticnetworks","followers_url":"https://api.github.com/users/neuroticnetworks/followers","following_url":"https://api.github.com/users/neuroticnetworks/following{/other_user}","gists_url":"https://api.github.com/users/neuroticnetworks/gists{/gist_id}","starred_url":"https://api.github.com/users/neuroticnetworks/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neuroticnetworks/subscriptions","organizations_url":"https://api.github.com/users/neuroticnetworks/orgs","repos_url":"https://api.github.com/users/neuroticnetworks/repos","events_url":"https://api.github.com/users/neuroticnetworks/events{/privacy}","received_events_url":"https://api.github.com/users/neuroticnetworks/received_events","type":"User","site_admin":false},"created_at":"2016-08-24T22:36:44Z","updated_at":"2016-08-24T22:36:44Z","author_association":"NONE","body":"I really like @rmuir 's idea of dropping non-textual fields by default. I also agree that for new users and Kibana, _all is very important.\n\nI also really like @cwurm's idea of discarding _all's analyzer and instead using the mappings that have already been defined on the string fields in an index as the basis for what gets shoved into _all. There are actually plenty of cases where I can make good use of _all -- but I could make even better use of it if it employed the same tokenizers and analyzers as the fields I'm shoving into it.\n\nAnother thing to think about: While suboptimal, storage is cheap relative to developer time and reindexing. I have often seen _all used as a work around because of an index mapping that was incorrect or poorly thought out. This is especially true with new users. A common example I've seen several times is someone correctly marking a field they intend to bucket or sort on as non analyzed but not realizing that they would be unable to perform wildcard-esque searches on that field unless they also maintained an analyzed copy (eg the string and string.raw convention employed by logstash and others). As an ES admin, it's definitely been very helpful for me at times to tell users, \"that's okay, you can still query \"_all\" and we'll fix it moving forward\" as opposed to \"sorry, that sucks, we have to reindex all your data\")\n\nAll of which to say, to the extent that _all is disabled or discouraged, I think it might be worth investing in the _reindex API -- both from an engineering perspective (more knobs to turn, more testing, better throttling, recovery of reindexing tasks that fail, etc) and from a documentation/tutorial perspective. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251046597","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-251046597","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":251046597,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTA0NjU5Nw==","user":{"login":"abhishekanand100","id":6297442,"node_id":"MDQ6VXNlcjYyOTc0NDI=","avatar_url":"https://avatars2.githubusercontent.com/u/6297442?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekanand100","html_url":"https://github.com/abhishekanand100","followers_url":"https://api.github.com/users/abhishekanand100/followers","following_url":"https://api.github.com/users/abhishekanand100/following{/other_user}","gists_url":"https://api.github.com/users/abhishekanand100/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekanand100/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekanand100/subscriptions","organizations_url":"https://api.github.com/users/abhishekanand100/orgs","repos_url":"https://api.github.com/users/abhishekanand100/repos","events_url":"https://api.github.com/users/abhishekanand100/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekanand100/received_events","type":"User","site_admin":false},"created_at":"2016-10-03T07:53:42Z","updated_at":"2016-10-03T07:53:42Z","author_association":"NONE","body":"One doubt to add to the discussion above, is it worth a shot to disable the _all field and reindex all the data? We are seeing huge latencies while indexing/updating documents. Could this improve the performance?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251735730","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-251735730","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":251735730,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTczNTczMA==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2016-10-05T17:04:23Z","updated_at":"2016-11-02T15:39:20Z","author_association":"MEMBER","body":"We have been brainstorming how to handle the `_all` field for the last few\nweeks. This has led us to revert the change that elides numerics from `_all` in\nfavor of the new ideas.\n\nThe results of the discussion are this:\n- Favor query-side handling this versus mapping-side changes. It would be better\n  if we could handle an `_all`-like query entirely on the query side rather than\n  requiring mapping changes for old and new indices to get the desired behavior.\n- Keep `all` queries constant score of 1 so it's clear to users it's not used\n  for relevancy. Currently `_all` has some concerns about relevancy due to the\n  hidden nature of how it's actually calculated. So any new query we introduce\n  should have a constant score of 1 to indicate it is not meant for relevancy\n  matching.\n- Introduce a new \"all\" query that internally rewrites into a multi-match query\n  on the backend for all different fields\n- Revert the change for excluding numerics from `_all` by default (already done)\n- The new \"all\" query needs to handle parsing failures due to string != number\n  exceptions\n\n### Work\n\nWith that discussion in mind, the following steps have been identified:\n- [x] Revert removing numerics from `_all` field (#20085)\n- [ ] Add new query type called \"all\" query that rewrites into multi_match (https://github.com/elastic/elasticsearch/pull/20925)\n\nIt should also be a constant_score query (ie, return a `_score` of 1.0) to\nindicate that the query is not good at relevancy.\n- [ ] Switch regular query_string query and/or kibana to use new \"all\" query (https://github.com/elastic/kibana/issues/8007)\n\nDepending on how it works, Kibana (and other tools) may be able to switch to it\ninstead of query_string. It remains to be seen how much functionality the new\nquery will have.\n- [ ] Switch regular simple_query_string query to use new \"all\" query\n\nAgain, optional depending on how well the query works.\n- [ ] Once queries are working, remove `_all` or disable-by-default\n\nOnce we have a true replacement that doesn't use the `_all` field, we can remove\nit entirely, or stick with disabling it by default.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251892493","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-251892493","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":251892493,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTg5MjQ5Mw==","user":{"login":"cwurm","id":694597,"node_id":"MDQ6VXNlcjY5NDU5Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/694597?v=4","gravatar_id":"","url":"https://api.github.com/users/cwurm","html_url":"https://github.com/cwurm","followers_url":"https://api.github.com/users/cwurm/followers","following_url":"https://api.github.com/users/cwurm/following{/other_user}","gists_url":"https://api.github.com/users/cwurm/gists{/gist_id}","starred_url":"https://api.github.com/users/cwurm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cwurm/subscriptions","organizations_url":"https://api.github.com/users/cwurm/orgs","repos_url":"https://api.github.com/users/cwurm/repos","events_url":"https://api.github.com/users/cwurm/events{/privacy}","received_events_url":"https://api.github.com/users/cwurm/received_events","type":"User","site_admin":false},"created_at":"2016-10-06T07:56:13Z","updated_at":"2016-10-06T07:56:13Z","author_association":"CONTRIBUTOR","body":"I like the idea of an all query. I think it might want to calculate relevancy scores though. As rightly noted here this might not be perfect, but is sufficient for a number of uses, e.g. when indexing mostly text fields.\n\nAnd in an all query we might be able to account for the most egregious shortcomings, e.g. not take non-text fields into account for the score.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251900107","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-251900107","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":251900107,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTkwMDEwNw==","user":{"login":"abhishekanand100","id":6297442,"node_id":"MDQ6VXNlcjYyOTc0NDI=","avatar_url":"https://avatars2.githubusercontent.com/u/6297442?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekanand100","html_url":"https://github.com/abhishekanand100","followers_url":"https://api.github.com/users/abhishekanand100/followers","following_url":"https://api.github.com/users/abhishekanand100/following{/other_user}","gists_url":"https://api.github.com/users/abhishekanand100/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekanand100/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekanand100/subscriptions","organizations_url":"https://api.github.com/users/abhishekanand100/orgs","repos_url":"https://api.github.com/users/abhishekanand100/repos","events_url":"https://api.github.com/users/abhishekanand100/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekanand100/received_events","type":"User","site_admin":false},"created_at":"2016-10-06T08:35:03Z","updated_at":"2016-10-06T08:35:03Z","author_association":"NONE","body":"@dakrone in our use case we do not query the _all field, so disabling it completely in the mapping won't affect our searches, constant score is what we use mostly, just that since _all is indexed so I assume disabling it completely would save up some time and reduce latency. Can someone please advise.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251936288","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-251936288","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":251936288,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTkzNjI4OA==","user":{"login":"cwurm","id":694597,"node_id":"MDQ6VXNlcjY5NDU5Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/694597?v=4","gravatar_id":"","url":"https://api.github.com/users/cwurm","html_url":"https://github.com/cwurm","followers_url":"https://api.github.com/users/cwurm/followers","following_url":"https://api.github.com/users/cwurm/following{/other_user}","gists_url":"https://api.github.com/users/cwurm/gists{/gist_id}","starred_url":"https://api.github.com/users/cwurm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cwurm/subscriptions","organizations_url":"https://api.github.com/users/cwurm/orgs","repos_url":"https://api.github.com/users/cwurm/repos","events_url":"https://api.github.com/users/cwurm/events{/privacy}","received_events_url":"https://api.github.com/users/cwurm/received_events","type":"User","site_admin":false},"created_at":"2016-10-06T11:29:20Z","updated_at":"2016-10-06T11:29:20Z","author_association":"CONTRIBUTOR","body":"@abhishekanand100 I think your question is independent of the topic under discussion here, you can already disable the _all field today. You might want to post in another forum, e.g. https://discuss.elastic.co/c/elasticsearch\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251979222","html_url":"https://github.com/elastic/elasticsearch/issues/19784#issuecomment-251979222","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19784","id":251979222,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTk3OTIyMg==","user":{"login":"abhishekanand100","id":6297442,"node_id":"MDQ6VXNlcjYyOTc0NDI=","avatar_url":"https://avatars2.githubusercontent.com/u/6297442?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekanand100","html_url":"https://github.com/abhishekanand100","followers_url":"https://api.github.com/users/abhishekanand100/followers","following_url":"https://api.github.com/users/abhishekanand100/following{/other_user}","gists_url":"https://api.github.com/users/abhishekanand100/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekanand100/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekanand100/subscriptions","organizations_url":"https://api.github.com/users/abhishekanand100/orgs","repos_url":"https://api.github.com/users/abhishekanand100/repos","events_url":"https://api.github.com/users/abhishekanand100/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekanand100/received_events","type":"User","site_admin":false},"created_at":"2016-10-06T14:27:49Z","updated_at":"2016-10-06T14:27:49Z","author_association":"NONE","body":"@cwurm thanks for the info, will post a new thread on the link\n","performed_via_github_app":null}]