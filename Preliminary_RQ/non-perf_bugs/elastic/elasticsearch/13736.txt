{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/13736","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13736/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13736/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13736/events","html_url":"https://github.com/elastic/elasticsearch/issues/13736","id":107892712,"node_id":"MDU6SXNzdWUxMDc4OTI3MTI=","number":13736,"title":"Embedded node on-demand thread creation leaks caller context","user":{"login":"mbechler","id":4471061,"node_id":"MDQ6VXNlcjQ0NzEwNjE=","avatar_url":"https://avatars1.githubusercontent.com/u/4471061?v=4","gravatar_id":"","url":"https://api.github.com/users/mbechler","html_url":"https://github.com/mbechler","followers_url":"https://api.github.com/users/mbechler/followers","following_url":"https://api.github.com/users/mbechler/following{/other_user}","gists_url":"https://api.github.com/users/mbechler/gists{/gist_id}","starred_url":"https://api.github.com/users/mbechler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbechler/subscriptions","organizations_url":"https://api.github.com/users/mbechler/orgs","repos_url":"https://api.github.com/users/mbechler/repos","events_url":"https://api.github.com/users/mbechler/events{/privacy}","received_events_url":"https://api.github.com/users/mbechler/received_events","type":"User","site_admin":false},"labels":[{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-09-23T10:38:41Z","updated_at":"2015-09-24T06:38:54Z","closed_at":"2015-09-23T13:48:42Z","author_association":"NONE","active_lock_reason":null,"body":"For the local node requests get directly submitted to a TheadPoolExecutor which, if not exhausted, will create new Workers/Threads on demand. Thread initialization leaks the original callers TCCL, AccessControlContext and InheritableThreadLocals. Depending on the environment this is a first class classloader leak.\nAs the worker can be reused from a totally different context I don't think there is any legitimate use for this context, but this might be different for the server threads.\n\nFor this usage pattern, the ThreadFactory should make sure not to leak any caller context. The first two leaks can be circumvented by unsetting or setting the TCCL, running in doAsPrivileged with a new AccessControlContext. Unfortunately there is no API to reset InheritableThreadLocals, that can only be achieved using reflection.\n\nAs I'm not sure about potential side effects compatability and performance-wise, what I would suggest is making the thread factory configurable. \n","closed_by":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"performed_via_github_app":null}