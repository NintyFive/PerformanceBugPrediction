[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/499618819","html_url":"https://github.com/elastic/elasticsearch/issues/42957#issuecomment-499618819","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42957","id":499618819,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5OTYxODgxOQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-06-06T18:44:42Z","updated_at":"2019-06-06T18:44:42Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/499636064","html_url":"https://github.com/elastic/elasticsearch/issues/42957#issuecomment-499636064","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42957","id":499636064,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5OTYzNjA2NA==","user":{"login":"kyrill007","id":632275,"node_id":"MDQ6VXNlcjYzMjI3NQ==","avatar_url":"https://avatars1.githubusercontent.com/u/632275?v=4","gravatar_id":"","url":"https://api.github.com/users/kyrill007","html_url":"https://github.com/kyrill007","followers_url":"https://api.github.com/users/kyrill007/followers","following_url":"https://api.github.com/users/kyrill007/following{/other_user}","gists_url":"https://api.github.com/users/kyrill007/gists{/gist_id}","starred_url":"https://api.github.com/users/kyrill007/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kyrill007/subscriptions","organizations_url":"https://api.github.com/users/kyrill007/orgs","repos_url":"https://api.github.com/users/kyrill007/repos","events_url":"https://api.github.com/users/kyrill007/events{/privacy}","received_events_url":"https://api.github.com/users/kyrill007/received_events","type":"User","site_admin":false},"created_at":"2019-06-06T19:32:39Z","updated_at":"2019-06-06T19:33:12Z","author_association":"NONE","body":"Ruslan and I are working on this problem together.  Ruslan provided excellent debugging info above, but let me try to provide an executive summary below to grab your full attention. First, we’re working on a system where ES queries have to retrieve duplicate documents. It is thus crucial for us to have consistent scoring and thus we’ve enabled **dfs_query_then_fetch**. It works very well, yet we’ve found a situation with **fuzzy** matching on **nested index fields** that appears to work incorrectly. \r\n\r\n### Here is the most simplistic example:\r\nLet’s say we have a sharded index, say, 3 shards with 3 documents in it. Let’s decide to issue a query **A** against three kinds of indexed fields:  **1)** _non-fuzzy match against a non-nested field_ (e.g. name) and **2)** _a fuzzy match against a non-nested field_ (e.g. gender) and **3)** _a fuzzy match against a nested field_ (say, address.city).\r\n \r\nWhen we run a “**non-dfs**” query **A** along with the explain plan we see that it returns a _docCount_ of 1 for each of the 3 fields, which is expected because we have 3 documents spread across 3 shards and ES simply selects the highest document score from each shard.\r\n\r\nHowever, when we run a **“dfs”** query **A** along with the explain plan we see that it returns a _docCount_ of 3 for 2 fields:  fields 1 and 2 above, and a _docCount_ of 1 for the **3rd field** - a fuzzy match against a **nested** field (say, address.city). \r\n\r\nThis does seem like a thorny bug in DFS scoring algorithm especially when exact match is desired. We would love to hear your opinion on it. \r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/499792875","html_url":"https://github.com/elastic/elasticsearch/issues/42957#issuecomment-499792875","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42957","id":499792875,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5OTc5Mjg3NQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2019-06-07T07:53:19Z","updated_at":"2019-06-07T07:53:19Z","author_association":"MEMBER","body":"There are multiple points to clarify here. First of all, the `fuzzy` query uses a rewrite strategy that blends the frequencies of the extracted terms. For instance the fuzzy terms `gender1` is expanded into `gender1` and `gender2` and the query uses the max doc count of both term to compute the score of documents that contain `gender1` or `gender2`. This is why the first query (with only 1 shard) assigns a doc count of 2 to gender2, this way documents that contain gender2 are scored the same way than if they contain gender1 (original term) with a small de-boost. We call this type of query a blended terms query. Unfortunately this query doesn't use the distributed statistics that we collect in the `dfs_query_then_fetch` mode so in your example with 10 shards the doc count for the fuzzy queries are computed from the local statistics of the shard. This should be considered as a bug so I hope you don't mind that I updated the title of the issue to expose the real problem.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/500947948","html_url":"https://github.com/elastic/elasticsearch/issues/42957#issuecomment-500947948","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42957","id":500947948,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMDk0Nzk0OA==","user":{"login":"metaruslan","id":2231256,"node_id":"MDQ6VXNlcjIyMzEyNTY=","avatar_url":"https://avatars2.githubusercontent.com/u/2231256?v=4","gravatar_id":"","url":"https://api.github.com/users/metaruslan","html_url":"https://github.com/metaruslan","followers_url":"https://api.github.com/users/metaruslan/followers","following_url":"https://api.github.com/users/metaruslan/following{/other_user}","gists_url":"https://api.github.com/users/metaruslan/gists{/gist_id}","starred_url":"https://api.github.com/users/metaruslan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/metaruslan/subscriptions","organizations_url":"https://api.github.com/users/metaruslan/orgs","repos_url":"https://api.github.com/users/metaruslan/repos","events_url":"https://api.github.com/users/metaruslan/events{/privacy}","received_events_url":"https://api.github.com/users/metaruslan/received_events","type":"User","site_admin":false},"created_at":"2019-06-11T17:38:12Z","updated_at":"2019-06-11T17:38:12Z","author_association":"NONE","body":"@jimczi thank you very much for the explanation and for updating the title!\r\n\r\nLet me ask a couple of follow-up questions to get the full understanding:\r\n1. So, the behavior with 1 shard is correct on both docFreq and docCount?\r\n\r\n2. You wrote:\r\n> This is why the first query (with only 1 shard) assigns a doc count of 2 to gender2\r\n\r\nBut docCounts are all 3's for the 1 shard query.  Did you mean docFreq?\r\n\r\n3. As I understood your explanation misspellings score a little lower due to de-boost, but this is in conflict with\r\n> By default, the less frequent misspellings have a higher weight than the more frequent correct spellings.\r\n\r\nfrom https://github.com/elastic/elasticsearch/issues/7554\r\n\r\nAlso here https://www.elastic.co/guide/en/elasticsearch/guide/current/fuzzy-scoring.html it says\r\n> the misspelling is much more relevant than the correct spelling, because it appears in far fewer documents!\r\n\r\nDid the logic change at some version of ElasticSearch?\r\n\r\n4. You wrote:\r\n> Unfortunately this query doesn't use the distributed statistics that we collect in the dfs_query_then_fetch mode\r\n\r\nRight now the query for 10 shards for gender2 gives docFreq as 1 and docCount as 3. Did you mean that after the bug is fixed I'll see docFreq as 2 and docCount as 3?\r\nRight now the query for 10 shards for genderCode.display:gender1 gives docCount as 1. Will the fix make it 3? (as we see it happens only for a nested field for the 10 shards query with dfs)\r\n\r\n\r\nThanks in advance!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/501170930","html_url":"https://github.com/elastic/elasticsearch/issues/42957#issuecomment-501170930","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42957","id":501170930,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMTE3MDkzMA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2019-06-12T08:21:48Z","updated_at":"2019-06-12T08:21:48Z","author_association":"MEMBER","body":"> So, the behavior with 1 shard is correct on both docFreq and docCount?\r\n\r\nYes, this behavior is expected.\r\n\r\n> But docCounts are all 3's for the 1 shard query. Did you mean docFreq?\r\n\r\nYep sorry for the confusion\r\n\r\n> As I understood your explanation misspellings score a little lower due to de-boost, but this is in conflict with\r\n\r\nThis is an old documentation (2.x mainly), as I explained in my previous comment we use blended statistics for all the fuzzy terms and associate a boost to each value depending on the levenshtein distance to the original term. You can check the original issue that introduced this behavior here: https://issues.apache.org/jira/browse/LUCENE-329\r\n\r\n> Right now the query for 10 shards for gender2 gives docFreq as 1 and docCount as 3. Did you mean that after the bug is fixed I'll see docFreq as 2 and docCount as 3?\r\n\r\nYes\r\n\r\n> Right now the query for 10 shards for genderCode.display:gender1 gives docCount as 1. Will the fix make it 3? (as we see it happens only for a nested field for the 10 shards query with dfs)\r\n\r\nYes\r\n\r\nI opened https://issues.apache.org/jira/browse/LUCENE-8840 to enhance scoring of the FuzzyQuery. The patch uses a SynonymQuery that retrieve the statistics of the terms in a way that is compatible with `dfs` so this should also fix the issue you're seeing here.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/501287249","html_url":"https://github.com/elastic/elasticsearch/issues/42957#issuecomment-501287249","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42957","id":501287249,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMTI4NzI0OQ==","user":{"login":"metaruslan","id":2231256,"node_id":"MDQ6VXNlcjIyMzEyNTY=","avatar_url":"https://avatars2.githubusercontent.com/u/2231256?v=4","gravatar_id":"","url":"https://api.github.com/users/metaruslan","html_url":"https://github.com/metaruslan","followers_url":"https://api.github.com/users/metaruslan/followers","following_url":"https://api.github.com/users/metaruslan/following{/other_user}","gists_url":"https://api.github.com/users/metaruslan/gists{/gist_id}","starred_url":"https://api.github.com/users/metaruslan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/metaruslan/subscriptions","organizations_url":"https://api.github.com/users/metaruslan/orgs","repos_url":"https://api.github.com/users/metaruslan/repos","events_url":"https://api.github.com/users/metaruslan/events{/privacy}","received_events_url":"https://api.github.com/users/metaruslan/received_events","type":"User","site_admin":false},"created_at":"2019-06-12T14:01:38Z","updated_at":"2019-06-12T14:01:38Z","author_association":"NONE","body":"Perfect! Thank you so much!","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/539082575","html_url":"https://github.com/elastic/elasticsearch/issues/42957#issuecomment-539082575","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/42957","id":539082575,"node_id":"MDEyOklzc3VlQ29tbWVudDUzOTA4MjU3NQ==","user":{"login":"jrodewig","id":40268737,"node_id":"MDQ6VXNlcjQwMjY4NzM3","avatar_url":"https://avatars1.githubusercontent.com/u/40268737?v=4","gravatar_id":"","url":"https://api.github.com/users/jrodewig","html_url":"https://github.com/jrodewig","followers_url":"https://api.github.com/users/jrodewig/followers","following_url":"https://api.github.com/users/jrodewig/following{/other_user}","gists_url":"https://api.github.com/users/jrodewig/gists{/gist_id}","starred_url":"https://api.github.com/users/jrodewig/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrodewig/subscriptions","organizations_url":"https://api.github.com/users/jrodewig/orgs","repos_url":"https://api.github.com/users/jrodewig/repos","events_url":"https://api.github.com/users/jrodewig/events{/privacy}","received_events_url":"https://api.github.com/users/jrodewig/received_events","type":"User","site_admin":false},"created_at":"2019-10-07T15:57:26Z","updated_at":"2019-10-07T15:57:26Z","author_association":"CONTRIBUTOR","body":"[docs issue triage]\r\n\r\nClosed. Please re-open if more discussion or action is needed.","performed_via_github_app":null}]