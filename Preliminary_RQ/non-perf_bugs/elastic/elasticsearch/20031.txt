{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/20031","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20031/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20031/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20031/events","html_url":"https://github.com/elastic/elasticsearch/issues/20031","id":171713559,"node_id":"MDU6SXNzdWUxNzE3MTM1NTk=","number":20031,"title":"Network partitions can cause divergence, dirty reads, and lost updates.","user":{"login":"aphyr","id":3748,"node_id":"MDQ6VXNlcjM3NDg=","avatar_url":"https://avatars3.githubusercontent.com/u/3748?v=4","gravatar_id":"","url":"https://api.github.com/users/aphyr","html_url":"https://github.com/aphyr","followers_url":"https://api.github.com/users/aphyr/followers","following_url":"https://api.github.com/users/aphyr/following{/other_user}","gists_url":"https://api.github.com/users/aphyr/gists{/gist_id}","starred_url":"https://api.github.com/users/aphyr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aphyr/subscriptions","organizations_url":"https://api.github.com/users/aphyr/orgs","repos_url":"https://api.github.com/users/aphyr/repos","events_url":"https://api.github.com/users/aphyr/events{/privacy}","received_events_url":"https://api.github.com/users/aphyr/received_events","type":"User","site_admin":false},"labels":[{"id":836504707,"node_id":"MDU6TGFiZWw4MzY1MDQ3MDc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Distributed","name":":Distributed/Distributed","color":"0e8a16","default":false,"description":"A catch all label for anything in the Distributed Area. If you aren't sure, use this one."},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null},{"id":111053151,"node_id":"MDU6TGFiZWwxMTEwNTMxNTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/resiliency","name":"resiliency","color":"009800","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2016-08-17T17:23:08Z","updated_at":"2020-02-17T07:56:03Z","closed_at":"2020-02-17T07:56:03Z","author_association":"NONE","active_lock_reason":null,"body":"Hello again! I hope everyone's having a nice week. :-)\n\nSince #7572 (A network partition can cause in flight documents to be lost) is now closed, and the [resiliency page](https://www.elastic.co/guide/en/elasticsearch/resiliency/current/index.html) reports that \"Loss of documents during network partition\" is now addressed in 5.0.0, I've updated the Jepsen Elasticsearch tests for 5.0.0-alpha5. In these tests, Elasticsearch appears to allow:\n- Dirty reads\n- Divergence between replicas\n- The loss of successfully inserted documents\n\nThis work was funded by Crate.io, which uses Elasticsearch internally and is affected by the same issues in their fork.\n\nHere's the [test code](https://github.com/aphyr/jepsen/blob/ade62d6de58032be6d320aa91a1f6f76b30ee5f8/elasticsearch/src/jepsen/elasticsearch/dirty_read.clj), and the [supporting library](https://github.com/aphyr/jepsen/blob/ade62d6de58032be6d320aa91a1f6f76b30ee5f8/elasticsearch/src/jepsen/elasticsearch/core.clj) which uses the Java client (also at 5.0.0-alpha5). I've [lowered timeouts](https://github.com/aphyr/jepsen/blob/ade62d6de58032be6d320aa91a1f6f76b30ee5f8/elasticsearch/resources/elasticsearch.yml) to help ES recover faster from the network shenanigans in our tests.\n\nSeveral clients concurrently index documents, each with a unique ID that is never retried. Writes succeed if the index request returns RestStatus.CREATED.\n\nMeanwhile, several clients concurrently attempt to get recently inserted documents by ID. Reads are considered successful if response.isExists() is true.\n\nDuring this time, we perform a sequence of simple minority/majority network partitions: 20 seconds on, 10 seconds off.\n\nAt the end of the test, we heal the network, allow 10 seconds for quiescence (I've set ES timeouts/polling intervals much lower than normal to allow faster convergence), and have every client perform an index refresh. Refreshes are retried until every shard reports successful. Somewhat confusingly, getSuccessfulShards + getFailedShards is rarely equal to getTotalShards, and .getShardFailures appears to always be empty; perhaps there's an indeterminate, unreported shard state between success and failure? In any case, I check that getTotalShards is equal to getSuccessfulShards.\n\nOnce every client has performed a refresh, each client performs a read of all documents in the index. We're looking for four-ish cases:\n- Divergence: do nodes agree on the documents in the index?\n- Dirty reads: Are we able to read records which were _not_ successfully inserted, as determined by their absence in a final read?\n- Some lost updates: Are successful writes missing on some nodes but not others?\n- Lost updates: Are successful writes missing on _every_ node?\n\nAll of these cases appear to occur. Here's a case where [some acknowledged writes were lost by every node](https://gist.github.com/aphyr/68c24589a1b3ae8e327a644143052c35) (757 lost, 3374 present):\n\n``` clj\n{:dirty-read\n {:dirty\n  #{1111 1116 1121 1123 1124 1125 1126 1128 1129 1131 1137 1141 1143\n    ...\n    2311 2312 2313 2314 2315 2317 2321 2322 2324 2325 2326 2327 2329\n    2333},\n  :nodes-agree? true,\n  :valid? false,\n  :lost-count 757,\n  :some-lost-count 757,\n  :lost\n  #{1111 1116 1117 1121 1123 1124 1125 1126 1128 1129 1131 1133 1136\n    ...\n    2313 2314 2315 2317 2318 2320 2321 2322 2323 2324 2325 2326 2327\n    2329 2333 2335},\n  :dirty-count 573,\n  :read-count 3101,\n  :on-some-count 3374,\n  :not-on-all #{},\n  :some-lost\n  #{1111 1116 1117 1121 1123 1124 1125 1126 1128 1129 1131 1133 1136\n    ...\n    2313 2314 2315 2317 2318 2320 2321 2322 2323 2324 2325 2326 2327\n    2329 2333 2335},\n  :not-on-all-count 0,\n  :on-all-count 3374,\n  :unchecked-count 846},\n :perf\n {:latency-graph {:valid? true},\n  :rate-graph {:valid? true},\n  :valid? true},\n :valid? false}\n```\n\nAnd here's a case where [nodes disagree on the contents of the index](https://gist.github.com/aphyr/6590c77efa5d8be3a536628a7017dde1)\n\n``` clj\n{:dirty-read\n {:dirty #{},\n  :nodes-agree? false,\n  :valid? false,\n  :lost-count 0,\n  :some-lost-count 109,\n  :lost #{},\n  :dirty-count 0,\n  :read-count 2014,\n  :on-some-count 5738,\n  :not-on-all\n  #{2835 2937 2945 2950 2967 2992 2999 3004 3007 3011 3014 3019 3027\n    ...\n    5260 5263 5270 5272 5287 5295 5298 5300 5305 5327 5337 5343 5355\n    5378 5396 5397 5402 5404},\n  :some-lost\n  #{4556 4557 4559 4560 4573 4575 4577 4583 4589 4595 4608 4613 4619\n    4621 4629 4637 4639 4642 4651 4653 4655 4660 4664 4671 4680 4681\n    4687 4702 4708 4721 4722 4723 4725 4728 4741 4744 4746 4759 4763\n    4768 4769 4784 4795 4819 4832 4838 4849 4850 4858 4872 4878 4884\n    4894 4899 4904 4916 4920 4921 4923 4928 4930 4935 4938 4942 4949\n    4952 4958 4961 4971 4985 5022 5046 5056 5067 5082 5088 5104 5123\n    5125 5126 5138 5147 5159 5172 5187 5188 5200 5231 5241 5252 5257\n    5260 5263 5270 5272 5287 5295 5298 5300 5305 5327 5337 5343 5355\n    5378 5396 5397 5402 5404},\n  :not-on-all-count 317,\n  :on-all-count 5421,\n  :unchecked-count 3724},\n :perf\n {:latency-graph {:valid? true},\n  :rate-graph {:valid? true},\n  :valid? true},\n :valid? false}\n```\n\n`not-on-all` denotes documents which were present on some, but not all, nodes. `some-lost` is the subset of those documents which were successfully inserted and _should_ have been present.\n\nI've also demonstrated lost updates due to dirty read semantics plus `_version` divergence, but I haven't ported that test to ES 5.0.0 yet.\n\nCheers!\n\n**Elasticsearch version**: 5.0.0-alpha-5\n\n**Plugins installed**: []\n\n**JVM version**: Oracle JDK 1.8.0_91\n\n**OS version**: Debian Jessie\n\n**Description of the problem including expected versus actual behavior**: Elasticsearch should probably not forget about inserted documents which were acknowledged\n\n**Steps to reproduce**:\n1. Clone Jepsen at 63c34b16679f1aad396c1b3e212f92646dcff1be\n2. cd `elasticsearch`\n3. `lein test`\n4. Wait a few hours. I haven't had time to narrow down the conditions required to trigger this bug.\n","closed_by":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"performed_via_github_app":null}