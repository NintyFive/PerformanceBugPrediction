{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/12679","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12679/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12679/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12679/events","html_url":"https://github.com/elastic/elasticsearch/issues/12679","id":99320014,"node_id":"MDU6SXNzdWU5OTMyMDAxNA==","number":12679,"title":"Boolean type coercion in multifields","user":{"login":"roytmana","id":2524911,"node_id":"MDQ6VXNlcjI1MjQ5MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/2524911?v=4","gravatar_id":"","url":"https://api.github.com/users/roytmana","html_url":"https://github.com/roytmana","followers_url":"https://api.github.com/users/roytmana/followers","following_url":"https://api.github.com/users/roytmana/following{/other_user}","gists_url":"https://api.github.com/users/roytmana/gists{/gist_id}","starred_url":"https://api.github.com/users/roytmana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roytmana/subscriptions","organizations_url":"https://api.github.com/users/roytmana/orgs","repos_url":"https://api.github.com/users/roytmana/repos","events_url":"https://api.github.com/users/roytmana/events{/privacy}","received_events_url":"https://api.github.com/users/roytmana/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-08-05T23:19:17Z","updated_at":"2015-08-07T14:27:00Z","closed_at":"2015-08-06T09:42:07Z","author_association":"NONE","active_lock_reason":null,"body":"It would be very nice if for property of any type a multifield with type boolean was supported by coercing the property value to boolean using following logic\n- Integer - missing/null/0 - false otherwise true\n- Boolean - null/false - false otherwise true\n- Any other type (string, date) missing/null - false otherwise true\n\nit will allow to aggregate (as bucket or metric) or filter on presence of a value very simply without polluting _source with pre-calculated flags\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}